name: Draft Flutter Gallery Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  create-release:
    name: Create draft release
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create draft release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Flutter Gallery ${{ github.ref }}
        draft: true
        prerelease: false
  build:
    name: Build application
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [macos, windows, linux, android]
        include:
        - os: macos-10.15 # Catalina
          target: macos
          path: build/macos/Build/Products/Release
          asset_extension: .zip
          asset_content_type: application/zip
        - os: windows-2019
          target: windows
          path: build\windows\runner\Release
          asset_extension: .zip
          asset_content_type: application/zip
        - os: ubuntu-20.04
          target: linux
          path: build/linux/x64/release/bundle
          asset_extension: .tar.gz
          asset_content_type: application/gzip
        - os: ubuntu-20.04
          target: android
          path: build/app/outputs/flutter-apk
          asset_extension: .apk
          asset_content_type: application/vnd.android.package-archive
      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
    needs: create-release
    steps:
    # Set up Flutter and add it to the path.
    - name: Clone Flutter repository with master channel
      uses: actions/checkout@v2
      with:
        repository: 'flutter/flutter'
        ref: 'master'
        path: 'flutter'
        fetch-depth: 0
    - name: Add Flutter to the PATH for Linux, macOS, Android
      if: matrix.target != 'windows'
      run: echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
    - name: Add Flutter to the PATH for Windows
      if: matrix.target == 'windows'
      run: echo "${env:GITHUB_WORKSPACE}\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Install Linux dependencies
      if: matrix.target == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev
    - name: Install Android dependencies
      if: matrix.target == 'android'
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: Enable desktop support
      if: matrix.target != 'android'
      run: |
        flutter config --enable-linux-desktop
        flutter config --enable-macos-desktop
        flutter config --enable-windows-desktop
    - name: Run Flutter doctor
      run: flutter doctor -v

    # Clone the Gallery repository under `code`, to avoid conflicts with `flutter`.
    - name: Clone the Gallery repository
      uses: actions/checkout@v2
      with:
        path: 'code'

    # Build the application.
    - name: Build project
      run: |
        flutter create .
        flutter pub get
        flutter build -v ${{ matrix.target }} --release
      working-directory: code

    # Package the build.
    - name: Copy VC redistributables to release directory for Windows
      if: matrix.target == 'windows'
      run: |
        Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\msvcp140.dll') .
        Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140.dll') .
        Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140_1.dll') .
      working-directory: code\${{ matrix.path }}
    - name: Rename build for Android
      if: matrix.target == 'android'
      run: mv app-release.apk $GITHUB_WORKSPACE/flutter_gallery_${{ matrix.target }}.apk
      working-directory: code/${{ matrix.path }}
    - name: Compress build for Linux
      if: matrix.target == 'linux'
      run: tar czf $GITHUB_WORKSPACE/flutter_gallery_${{ matrix.target }}.tar.gz *
      working-directory: code/${{ matrix.path }}
    - name: Compress build for macOS
      if: matrix.target == 'macos'
      run: ditto -c -k --sequesterRsrc --keepParent Flutter\ Gallery.app $GITHUB_WORKSPACE/flutter_gallery_${{ matrix.target }}.zip
      working-directory: code/${{ matrix.path }}
    - name: Compress build for Windows
      if: matrix.target == 'windows'
      run: compress-archive -Path * -DestinationPath ${env:GITHUB_WORKSPACE}\flutter_gallery_${{ matrix.target }}.zip
      working-directory: code\${{ matrix.path }}

    # Upload the build.
    - name: Upload release asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./flutter_gallery_${{ matrix.target }}${{ matrix.asset_extension }}
        asset_name: flutter_gallery_${{ matrix.target }}${{ matrix.asset_extension }}
        asset_content_type: ${{ matrix.asset_content_type }}
