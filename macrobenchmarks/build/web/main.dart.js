// Generated by dart2js (fast startup emitter, strong, trust primitives, omit checks, lax runtime type), the Dart to JavaScript compiler version: 2.9.0-edge.726d3c772554924f62db0b9e0d4c280dbbddc824.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function setFunctionNamesIfNecessary(holders) {
    function t() {
    }
    ;
    if (typeof t.name == "string")
      return;
    for (var i = 0; i < holders.length; i++) {
      var holder = holders[i];
      var keys = Object.keys(holder);
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        var f = holder[key];
        if (typeof f == 'function')
          f.name = key;
      }
    }
  }
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixin(cls, mixin) {
    copyProperties(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        H.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted) {
    return isIntercepted ? new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "(receiver) {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, true, name);" + "return new c(this, funcs[0], receiver, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null) : new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "() {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, false, name);" + "return new c(this, funcs[0], null, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null);
  }
  function tearOff(funcs, applyTrampolineIndex, reflectionInfo, isStatic, name, isIntercepted) {
    var cache = null;
    return isStatic ? function() {
      if (cache === null)
        cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, true, false, name).prototype;
      return cache;
    } : tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted);
  }
  var typesOffset = 0;
  function installTearOff(container, getterName, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var funs = [];
    for (var i = 0; i < funsOrNames.length; i++) {
      var fun = funsOrNames[i];
      if (typeof fun == 'string')
        fun = container[fun];
      fun.$callName = callNames[i];
      funs.push(fun);
    }
    var fun = funs[0];
    fun.$requiredArgCount = requiredParameterCount;
    fun.$defaultValues = optionalParameterDefaultValues;
    var reflectionInfo = funType;
    if (typeof reflectionInfo == "number")
      reflectionInfo += typesOffset;
    var name = funsOrNames[0];
    fun.$stubName = name;
    var getterFunction = tearOff(funs, applyIndex || 0, reflectionInfo, isStatic, name, isIntercepted);
    container[getterName] = getterFunction;
    if (isStatic)
      fun.$tearOff = getterFunction;
  }
  function installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixin, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, updateHolder: updateHolder, convertToFastObject: convertToFastObject, setFunctionNamesIfNecessary: setFunctionNamesIfNecessary, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  function getGlobalFromName(name) {
    for (var i = 0; i < holders.length; i++) {
      if (holders[i] == C)
        continue;
      if (holders[i][name])
        return holders[i][name];
    }
  }
  var C = {},
  H = {
    registerHotRestartListener: function(listener) {
      $._hotRestartListeners.push(listener);
    },
    webOnlyInitializeEngine: function() {
      var t1 = {};
      if ($._engineInitialized)
        return;
      P.registerExtension("ext.flutter.disassemble", new H.webOnlyInitializeEngine_closure());
      $._engineInitialized = true;
      $.$get$domRenderer();
      if ($.WebExperiments_instance == null)
        $.WebExperiments_instance = H.WebExperiments$_();
      if ($.Profiler__instance == null)
        $.Profiler__instance = new H.Profiler();
      t1.waitingForAnimation = false;
      $.webOnlyScheduleFrameCallback = new H.webOnlyInitializeEngine_closure0(t1);
      if ($.Keyboard__instance == null)
        $.Keyboard__instance = H.Keyboard$_();
    },
    toMatrix32: function(matrix64) {
      var matrix32 = new Float32Array(16);
      matrix32[15] = matrix64[15];
      matrix32[14] = matrix64[14];
      matrix32[13] = matrix64[13];
      matrix32[12] = matrix64[12];
      matrix32[11] = matrix64[11];
      matrix32[10] = matrix64[10];
      matrix32[9] = matrix64[9];
      matrix32[8] = matrix64[8];
      matrix32[7] = matrix64[7];
      matrix32[6] = matrix64[6];
      matrix32[5] = matrix64[5];
      matrix32[4] = matrix64[4];
      matrix32[3] = matrix64[3];
      matrix32[2] = matrix64[2];
      matrix32[1] = matrix64[1];
      matrix32[0] = matrix64[0];
      return matrix32;
    },
    BitmapCanvas$: function(_bounds) {
      var t8, t9,
        t1 = W._ElementFactoryProvider_createElement_tag("flt-canvas", null),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_Element),
        t3 = H.EngineWindow_browserDevicePixelRatio(),
        t4 = _bounds.right - _bounds.left,
        t5 = H.BitmapCanvas__widthToPhysical(t4),
        t6 = _bounds.bottom - _bounds.top,
        t7 = H.BitmapCanvas__heightToPhysical(t6);
      t4 = H.BitmapCanvas__widthToPhysical(t4);
      t6 = H.BitmapCanvas__heightToPhysical(t6);
      t8 = H.setRuntimeTypeInfo([], type$.JSArray__SaveStackEntry);
      t9 = new H.Matrix40(new Float32Array(16));
      t9.setIdentity$0();
      t3 = new H.BitmapCanvas(_bounds, t1, new H._CanvasPool(t4, t6, t8, t9), t2, t5, t7, t3);
      t3.BitmapCanvas$1(_bounds);
      return t3;
    },
    BitmapCanvas__widthToPhysical: function(width) {
      return C.JSNumber_methods.ceil$0((width + 1) * H.EngineWindow_browserDevicePixelRatio()) + 2;
    },
    BitmapCanvas__heightToPhysical: function(height) {
      return C.JSNumber_methods.ceil$0((height + 1) * H.EngineWindow_browserDevicePixelRatio()) + 2;
    },
    _stringForBlendMode: function(blendMode) {
      if (blendMode == null)
        return null;
      switch (blendMode) {
        case C.BlendMode_3:
          return "source-over";
        case C.BlendMode_5:
          return "source-in";
        case C.BlendMode_7:
          return "source-out";
        case C.BlendMode_9:
          return "source-atop";
        case C.BlendMode_4:
          return "destination-over";
        case C.BlendMode_6:
          return "destination-in";
        case C.BlendMode_8:
          return "destination-out";
        case C.BlendMode_10:
          return "destination-atop";
        case C.BlendMode_12:
          return "lighten";
        case C.BlendMode_1:
          return "copy";
        case C.BlendMode_11:
          return "xor";
        case C.BlendMode_24:
        case C.BlendMode_13:
          return "multiply";
        case C.BlendMode_14:
          return "screen";
        case C.BlendMode_15:
          return "overlay";
        case C.BlendMode_16:
          return "darken";
        case C.BlendMode_17:
          return "lighten";
        case C.BlendMode_18:
          return "color-dodge";
        case C.BlendMode_19:
          return "color-burn";
        case C.BlendMode_20:
          return "hard-light";
        case C.BlendMode_21:
          return "soft-light";
        case C.BlendMode_22:
          return "difference";
        case C.BlendMode_23:
          return "exclusion";
        case C.BlendMode_25:
          return "hue";
        case C.BlendMode_26:
          return "saturation";
        case C.BlendMode_27:
          return "color";
        case C.BlendMode_28:
          return "luminosity";
        default:
          throw H.wrapException(P.UnimplementedError$("Flutter Web does not support the blend mode: " + blendMode.toString$0(0)));
      }
    },
    _stringForStrokeCap: function(strokeCap) {
      switch (strokeCap) {
        case C.StrokeCap_0:
          return "butt";
        case C.StrokeCap_1:
          return "round";
        case C.StrokeCap_2:
        default:
          return "square";
      }
    },
    _stringForStrokeJoin: function(strokeJoin) {
      switch (strokeJoin) {
        case C.StrokeJoin_1:
          return "round";
        case C.StrokeJoin_2:
          return "bevel";
        case C.StrokeJoin_0:
        default:
          return "miter";
      }
    },
    _clipContent: function(clipStack, $content, offset, currentTransform) {
      var root, curElement, clipIndex, entry, t2, newElement, t3, rect, newClipTransform, clipOffsetX, clipOffsetY, newClipTransform0, t4, t5, value, borderRadius, t6, reverseTransformDiv,
        _s8_ = "absolute",
        _s16_ = "transform-origin",
        _s9_ = "transform",
        t1 = type$.JSArray_Element,
        clipDefs = H.setRuntimeTypeInfo([], t1),
        len = clipStack.length;
      for (root = null, curElement = null, clipIndex = 0; clipIndex < len; ++clipIndex, curElement = reverseTransformDiv) {
        entry = clipStack[clipIndex];
        t2 = document;
        newElement = t2.createElement("div");
        t3 = newElement.style;
        t3.position = _s8_;
        if (H.browserEngine() === C.BrowserEngine_1) {
          t3 = newElement.style;
          t3.zIndex = "0";
        }
        if (root == null)
          root = newElement;
        else {
          $.$get$domRenderer().toString;
          curElement.appendChild(newElement);
        }
        rect = entry.rect;
        newClipTransform = entry.currentTransform;
        if (rect != null) {
          clipOffsetX = rect.left;
          clipOffsetY = rect.top;
          t3 = new Float32Array(16);
          newClipTransform0 = new H.Matrix40(t3);
          newClipTransform0.setFrom$1(newClipTransform);
          newClipTransform0.translate$2(0, clipOffsetX, clipOffsetY);
          t4 = newElement.style;
          t4.overflow = "hidden";
          t5 = H.S(rect.right - clipOffsetX) + "px";
          t4.width = t5;
          t5 = H.S(rect.bottom - clipOffsetY) + "px";
          t4.height = t5;
          t4 = newElement.style;
          t4.toString;
          t5 = C.CssStyleDeclaration_methods._browserPropertyName$1(t4, _s16_);
          t4.setProperty(t5, "0 0 0", "");
          value = H.float64ListToCssTransform(t3);
          t3 = C.CssStyleDeclaration_methods._browserPropertyName$1(t4, _s9_);
          if (value == null)
            value = "";
          t4.setProperty(t3, value, "");
          newClipTransform = newClipTransform0;
        } else {
          t3 = entry.rrect;
          if (t3 != null) {
            borderRadius = H.S(t3.tlRadiusX) + "px " + H.S(t3.trRadiusX) + "px " + H.S(t3.brRadiusX) + "px " + H.S(t3.blRadiusX) + "px";
            clipOffsetX = t3.left;
            clipOffsetY = t3.top;
            t4 = new Float32Array(16);
            newClipTransform0 = new H.Matrix40(t4);
            newClipTransform0.setFrom$1(newClipTransform);
            newClipTransform0.translate$2(0, clipOffsetX, clipOffsetY);
            t5 = newElement.style;
            t5.toString;
            t6 = C.CssStyleDeclaration_methods._browserPropertyName$1(t5, "border-radius");
            t5.setProperty(t6, borderRadius, "");
            t5.overflow = "hidden";
            t6 = H.S(t3.right - clipOffsetX) + "px";
            t5.width = t6;
            t3 = H.S(t3.bottom - clipOffsetY) + "px";
            t5.height = t3;
            t3 = newElement.style;
            t3.toString;
            t5 = C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s16_);
            t3.setProperty(t5, "0 0 0", "");
            value = H.float64ListToCssTransform(t4);
            t4 = C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s9_);
            if (value == null)
              value = "";
            t3.setProperty(t4, value, "");
            newClipTransform = newClipTransform0;
          } else {
            t3 = entry.path;
            if (t3 != null) {
              t4 = newElement.style;
              value = H.float64ListToCssTransform(newClipTransform.__engine$_m4storage);
              t4.toString;
              t5 = C.CssStyleDeclaration_methods._browserPropertyName$1(t4, _s9_);
              if (value == null)
                value = "";
              t4.setProperty(t5, value, "");
              clipDefs.push(W.Element_Element$html(H.createSvgClipDef(newElement, t3), new H._NullTreeSanitizer(), null));
            }
          }
        }
        reverseTransformDiv = t2.createElement("div");
        t2 = reverseTransformDiv.style;
        t2.position = _s8_;
        t2 = new Float32Array(16);
        t3 = new H.Matrix40(t2);
        t3.setFrom$1(newClipTransform);
        t3.copyInverse$1(t3);
        t3 = reverseTransformDiv.style;
        t3.toString;
        t4 = C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s16_);
        t3.setProperty(t4, "0 0 0", "");
        value = H.float64ListToCssTransform(t2);
        t2 = C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s9_);
        if (value == null)
          value = "";
        t3.setProperty(t2, value, "");
        newElement.appendChild(reverseTransformDiv);
      }
      t2 = root.style;
      t2.position = _s8_;
      $.$get$domRenderer().toString;
      curElement.appendChild($content);
      H.setElementTransform($content, H.transformWithOffset(currentTransform, offset).__engine$_m4storage);
      t1 = H.setRuntimeTypeInfo([root], t1);
      C.JSArray_methods.addAll$1(t1, clipDefs);
      return t1;
    },
    _maskFilterToCss: function(maskFilter) {
      if (maskFilter == null)
        return "none";
      return "blur(" + H.S(maskFilter._sigma) + "px)";
    },
    browserEngine: function() {
      var t1 = $._browserEngine;
      return t1 == null ? $._browserEngine = H._detectBrowserEngine() : t1;
    },
    _detectBrowserEngine: function() {
      var vendor = window.navigator.vendor,
        agent = window.navigator.userAgent.toLowerCase();
      if (vendor === "Google Inc.")
        return C.BrowserEngine_0;
      else if (vendor === "Apple Computer, Inc.")
        return C.BrowserEngine_1;
      else if (C.JSString_methods.contains$1(agent, "edge/"))
        return C.BrowserEngine_3;
      else if (C.JSString_methods.contains$1(agent, "trident/7.0"))
        return C.BrowserEngine_4;
      else if (vendor === "" && C.JSString_methods.contains$1(agent, "firefox"))
        return C.BrowserEngine_2;
      P.print("WARNING: failed to detect current browser engine.");
      return C.BrowserEngine_5;
    },
    operatingSystem: function() {
      var t1 = $._operatingSystem;
      return t1 == null ? $._operatingSystem = H._detectOperatingSystem() : t1;
    },
    _detectOperatingSystem: function() {
      var platform = window.navigator.platform,
        userAgent = window.navigator.userAgent;
      if (J.getInterceptor$s(platform).startsWith$1(platform, "Mac"))
        return C.OperatingSystem_4;
      else if (C.JSString_methods.contains$1(platform.toLowerCase(), "iphone") || C.JSString_methods.contains$1(platform.toLowerCase(), "ipad") || C.JSString_methods.contains$1(platform.toLowerCase(), "ipod"))
        return C.OperatingSystem_0;
      else if (J.contains$1$asx(userAgent, "Android"))
        return C.OperatingSystem_1;
      else if (C.JSString_methods.startsWith$1(platform, "Linux"))
        return C.OperatingSystem_2;
      else if (C.JSString_methods.startsWith$1(platform, "Win"))
        return C.OperatingSystem_3;
      else
        return C.OperatingSystem_5;
    },
    CopyToClipboardStrategy_CopyToClipboardStrategy: function() {
      var t1 = window.navigator.clipboard;
      return (t1 == null ? null : C._Clipboard_methods.get$writeText(t1)) != null ? new H.ClipboardAPICopyStrategy() : new H.ExecCommandCopyStrategy();
    },
    PasteFromClipboardStrategy_PasteFromClipboardStrategy: function() {
      if (H.browserEngine() !== C.BrowserEngine_2) {
        var t1 = window.navigator.clipboard;
        t1 = (t1 == null ? null : C._Clipboard_methods.get$readText(t1)) == null;
      } else
        t1 = true;
      return t1 ? new H.ExecCommandPasteStrategy() : new H.ClipboardAPIPasteStrategy();
    },
    SkiaObjects_postFrameCleanUp: function() {
      var i, object,
        t1 = $.$get$SkiaObjects_managedObjects();
      if (J.get$isEmpty$asx(t1))
        return;
      for (i = 0; i < J.get$length$asx(t1); ++i) {
        object = J.$index$asx(t1, i);
        object._skiaObject.callMethod$1("delete");
        object._skiaObject = null;
      }
      J.clear$0$ax(t1);
    },
    makeSkRect: function(rect) {
      return P.JsObject_JsObject($.canvasKit.$index(0, "LTRBRect"), H.setRuntimeTypeInfo([rect.left, rect.top, rect.right, rect.bottom], type$.JSArray_double));
    },
    makeSkRRect: function(rrect) {
      return P.JsObject_JsObject$jsify(P.LinkedHashMap_LinkedHashMap$_literal(["rect", H.makeSkRect(new P.Rect(rrect.left, rrect.top, rrect.right, rrect.bottom)), "rx1", rrect.tlRadiusX, "ry1", rrect.tlRadiusY, "rx2", rrect.trRadiusX, "ry2", rrect.trRadiusY, "rx3", rrect.brRadiusX, "ry3", rrect.brRadiusY, "rx4", rrect.blRadiusX, "ry4", rrect.blRadiusY], type$.String, type$.Object));
    },
    makeSkPoint: function(point) {
      var skPoint = new P.JsArray([], type$.JsArray_double);
      skPoint.super$JsObject$$indexSet(0, "length", 2);
      skPoint.$indexSet(0, 0, point._dx);
      skPoint.$indexSet(0, 1, point._dy);
      return skPoint;
    },
    makeSkBlendMode: function(blendMode) {
      var _s9_ = "BlendMode";
      switch (blendMode) {
        case C.BlendMode_0:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Clear");
        case C.BlendMode_1:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Src");
        case C.BlendMode_2:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Dst");
        case C.BlendMode_3:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "SrcOver");
        case C.BlendMode_4:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "DstOver");
        case C.BlendMode_5:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "SrcIn");
        case C.BlendMode_6:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "DstIn");
        case C.BlendMode_7:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "SrcOut");
        case C.BlendMode_8:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "DstOut");
        case C.BlendMode_9:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "SrcATop");
        case C.BlendMode_10:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "DstATop");
        case C.BlendMode_11:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Xor");
        case C.BlendMode_12:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Plus");
        case C.BlendMode_13:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Modulate");
        case C.BlendMode_14:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Screen");
        case C.BlendMode_15:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Overlay");
        case C.BlendMode_16:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Darken");
        case C.BlendMode_17:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Lighten");
        case C.BlendMode_18:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "ColorDodge");
        case C.BlendMode_19:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "ColorBurn");
        case C.BlendMode_20:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "HardLight");
        case C.BlendMode_21:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "SoftLight");
        case C.BlendMode_22:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Difference");
        case C.BlendMode_23:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Exclusion");
        case C.BlendMode_24:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Multiply");
        case C.BlendMode_25:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Hue");
        case C.BlendMode_26:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Saturation");
        case C.BlendMode_27:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Color");
        case C.BlendMode_28:
          return J.$index$asx($.canvasKit.$index(0, _s9_), "Luminosity");
        default:
          return null;
      }
    },
    makeSkMatrixFromFloat32: function(matrix4) {
      var i, matrix4Index, t1, t2, _null = null,
        skMatrix = new P.JsArray([], type$.JsArray_double);
      skMatrix.super$JsObject$$indexSet(0, "length", 9);
      for (i = 0; i < 9; ++i) {
        matrix4Index = C.List_yXZ[i];
        if (matrix4Index < 16) {
          t1 = matrix4[matrix4Index];
          t2 = C.JSInt_methods.toInt$0(i);
          if (i === t2) {
            t2 = i >= skMatrix.get$length(skMatrix);
            if (t2)
              H.throwExpression(P.RangeError$range(i, 0, skMatrix.get$length(skMatrix), _null, _null));
          }
          skMatrix.super$JsObject$$indexSet(0, i, t1);
        } else {
          t1 = C.JSInt_methods.toInt$0(i);
          if (i === t1) {
            t1 = i >= skMatrix.get$length(skMatrix);
            if (t1)
              H.throwExpression(P.RangeError$range(i, 0, skMatrix.get$length(skMatrix), _null, _null));
          }
          skMatrix.super$JsObject$$indexSet(0, i, 0);
        }
      }
      return skMatrix;
    },
    makeSkiaColorStops: function(colorStops) {
      var jsColorStops;
      if (colorStops == null)
        return $.$get$_kDefaultColorStops();
      jsColorStops = P.JsArray_JsArray$from(colorStops, type$.double);
      jsColorStops.super$JsObject$$indexSet(0, "length", colorStops.length);
      return jsColorStops;
    },
    drawSkShadow: function(skCanvas, path, color, elevation, transparentOccluder, devicePixelRatio) {
      var flags = transparentOccluder ? 1 : 0,
        bounds = path.getBounds$0(0),
        inTonalColors = P.JsObject_JsObject$jsify(P.LinkedHashMap_LinkedHashMap$_literal(["ambient", P.Color$fromARGB(C.JSNumber_methods.round$0(((4278190080 & color.get$value(color)) >>> 24) * 0.039), (16711680 & color.get$value(color)) >>> 16, (65280 & color.get$value(color)) >>> 8, (255 & color.get$value(color)) >>> 0).value, "spot", P.Color$fromARGB(C.JSNumber_methods.round$0(((4278190080 & color.get$value(color)) >>> 24) * 0.25), (16711680 & color.get$value(color)) >>> 16, (65280 & color.get$value(color)) >>> 8, (255 & color.get$value(color)) >>> 0).value], type$.String, type$.int)),
        tonalColors = $.canvasKit.callMethod$2("computeTonalColors", H.setRuntimeTypeInfo([inTonalColors], type$.JSArray_JsObject)),
        t1 = type$.JSArray_double,
        t2 = type$.double;
      skCanvas.callMethod$2("drawShadow", [path._skPath, P.JsArray_JsArray$from(H.setRuntimeTypeInfo([0, 0, devicePixelRatio * elevation], t1), t2), P.JsArray_JsArray$from(H.setRuntimeTypeInfo([(bounds.left + bounds.right) / 2, bounds.top - 600, devicePixelRatio * 600], t1), t2), devicePixelRatio * 800, tonalColors.$index(0, "ambient"), tonalColors.$index(0, "spot"), flags]);
    },
    DomRenderer_ellipse: function(context, centerX, centerY, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {
      var t1 = $.DomRenderer__ellipseFeatureDetected;
      if (t1 == null ? $.DomRenderer__ellipseFeatureDetected = context.ellipse != null : t1)
        context.ellipse(centerX, centerY, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise);
      else {
        context.save();
        context.translate(centerX, centerY);
        context.rotate(rotation);
        context.scale(radiusX, radiusY);
        context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);
        context.restore();
      }
    },
    transformWithOffset: function(transform, offset) {
      var effectiveTransform;
      if (offset.$eq(0, C.Offset_0_0))
        return transform;
      effectiveTransform = new H.Matrix40(new Float32Array(16));
      effectiveTransform.setFrom$1(transform);
      effectiveTransform.translate$3(0, offset._dx, offset._dy, 0);
      return effectiveTransform;
    },
    _drawParagraphElement: function(paragraph, offset, transform) {
      var t1, style,
        paragraphElement = paragraph._paragraphElement.cloneNode(true),
        paragraphStyle = paragraphElement.style;
      paragraphStyle.position = "absolute";
      paragraphStyle.whiteSpace = "pre-wrap";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(paragraphStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(paragraphStyle, "overflow-wrap"), "break-word", "");
      paragraphStyle.overflow = "hidden";
      t1 = H.S(paragraph.get$height(paragraph)) + "px";
      paragraphStyle.height = t1;
      t1 = H.S(paragraph.get$width(paragraph)) + "px";
      paragraphStyle.width = t1;
      if (transform != null)
        H.setElementTransform(paragraphElement, H.transformWithOffset(transform, offset).__engine$_m4storage);
      style = paragraph._geometricStyle;
      if (style.ellipsis != null) {
        t1 = style.maxLines;
        t1 = t1 == null || t1 === 1;
      } else
        t1 = false;
      if (t1) {
        paragraphStyle.whiteSpace = "pre";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(paragraphStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(paragraphStyle, "text-overflow"), "ellipsis", "");
      }
      return paragraphElement;
    },
    _isFlutterEntry: function(state) {
      return type$.Map_dynamic_dynamic._is(state) && J.$eq$(J.$index$asx(state, "flutter"), true);
    },
    Keyboard$_: function() {
      var t1 = new H.Keyboard(P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Timer));
      t1.Keyboard$_$0();
      return t1;
    },
    _noopCallback: function(data) {
    },
    pathToSvg: function(path, sb, offsetX, offsetY) {
      var t1, t2, _i, t3, t4, _i0, command, t5, t6, t7, t8, t9, t10, t11, t12, rrect, left, right, $top, bottom, t0, trRadiusX, tlRadiusX, trRadiusY, tlRadiusY, blRadiusX, brRadiusX, blRadiusY, brRadiusY, width, horizontalSwap, height, verticalSwap;
      for (t1 = path.subpaths, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        for (t3 = t1[_i].commands, t4 = t3.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i0) {
          command = t3[_i0];
          switch (command.type) {
            case 0:
              sb._contents += "M " + H.S(command.x + offsetX) + " " + H.S(command.y + offsetY);
              break;
            case 1:
              sb._contents += "L " + H.S(command.x + offsetX) + " " + H.S(command.y + offsetY);
              break;
            case 5:
              sb._contents += "C " + H.S(command.x1 + offsetX) + " " + H.S(command.y1 + offsetY) + " " + H.S(command.x2 + offsetX) + " " + H.S(command.y2 + offsetY) + " " + H.S(command.x3 + offsetX) + " " + H.S(command.y3 + offsetY);
              break;
            case 4:
              sb._contents += "Q " + H.S(command.x1 + offsetX) + " " + H.S(command.y1 + offsetY) + " " + H.S(command.x2 + offsetX) + " " + H.S(command.y2 + offsetY);
              break;
            case 3:
              sb._contents += "Z";
              break;
            case 2:
              t5 = command.endAngle;
              t6 = command.startAngle;
              t7 = command.x;
              t8 = command.y;
              t9 = command.radiusX;
              t10 = command.radiusY;
              t11 = command.rotation;
              t12 = command.anticlockwise;
              if (C.JSNumber_methods.$mod(t5 - t6, 6.283185307179586) === 0) {
                t5 = t7 + offsetX;
                t8 += offsetY;
                H._writeEllipse(sb, t5, t8, t9, t10, t11, -3.141592653589793, 0, t12, true);
                H._writeEllipse(sb, t5, t8, t9, t10, t11, 0, 3.141592653589793, t12, false);
              } else
                H._writeEllipse(sb, t7 + offsetX, t8 + offsetY, t9, t10, t11, t6, t5, t12, false);
              break;
            case 7:
              rrect = command.rrect;
              left = rrect.left + offsetX;
              right = rrect.right + offsetX;
              $top = rrect.top + offsetY;
              bottom = rrect.bottom + offsetY;
              if (left > right) {
                t0 = right;
                right = left;
                left = t0;
              }
              if ($top > bottom) {
                t0 = bottom;
                bottom = $top;
                $top = t0;
              }
              trRadiusX = Math.abs(rrect.trRadiusX);
              tlRadiusX = Math.abs(rrect.tlRadiusX);
              trRadiusY = Math.abs(rrect.trRadiusY);
              tlRadiusY = Math.abs(rrect.tlRadiusY);
              blRadiusX = Math.abs(rrect.blRadiusX);
              brRadiusX = Math.abs(rrect.brRadiusX);
              blRadiusY = Math.abs(rrect.blRadiusY);
              brRadiusY = Math.abs(rrect.brRadiusY);
              sb._contents += "M " + H.S(left + trRadiusX) + " " + H.S($top) + " ";
              t5 = right - trRadiusX;
              sb._contents += "L " + H.S(t5) + " " + H.S($top) + " ";
              H._writeEllipse(sb, t5, $top + trRadiusY, trRadiusX, trRadiusY, 0, 4.71238898038469, 6.283185307179586, false, false);
              t5 = bottom - brRadiusY;
              sb._contents += "L " + H.S(right) + " " + H.S(t5) + " ";
              H._writeEllipse(sb, right - brRadiusX, t5, brRadiusX, brRadiusY, 0, 0, 1.5707963267948966, false, false);
              t5 = left + blRadiusX;
              sb._contents += "L " + H.S(t5) + " " + H.S(bottom) + " ";
              H._writeEllipse(sb, t5, bottom - blRadiusY, blRadiusX, blRadiusY, 0, 1.5707963267948966, 3.141592653589793, false, false);
              t5 = $top + tlRadiusY;
              sb._contents += "L " + H.S(left) + " " + H.S(t5) + " ";
              H._writeEllipse(sb, left + tlRadiusX, t5, tlRadiusX, tlRadiusY, 0, 3.141592653589793, 4.71238898038469, false, false);
              break;
            case 6:
              width = command.width;
              horizontalSwap = width < 0;
              t5 = command.x;
              left = offsetX + (horizontalSwap ? t5 - width : t5);
              if (horizontalSwap)
                width = -width;
              height = command.height;
              verticalSwap = height < 0;
              t5 = command.y;
              $top = offsetY + (verticalSwap ? t5 - height : t5);
              if (verticalSwap)
                height = -height;
              sb._contents += "M " + H.S(left) + " " + H.S($top) + " ";
              t5 = left + width;
              sb._contents += "L " + H.S(t5) + " " + H.S($top) + " ";
              t6 = $top + height;
              sb._contents += "L " + H.S(t5) + " " + H.S(t6) + " ";
              sb._contents += "L " + H.S(left) + " " + H.S(t6) + " ";
              sb._contents += "L " + H.S(left) + " " + H.S($top) + " ";
              break;
            default:
              throw H.wrapException(P.UnimplementedError$("Unknown path command " + command.toString$0(0)));
          }
        }
    },
    _writeEllipse: function(sb, cx, cy, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise, moveToStartPoint) {
      var t1,
        cosRotation = Math.cos(rotation),
        sinRotation = Math.sin(rotation),
        x = Math.cos(startAngle) * radiusX,
        y = Math.sin(startAngle) * radiusY,
        xe = Math.cos(endAngle) * radiusX,
        ye = Math.sin(endAngle) * radiusY;
      if (moveToStartPoint)
        sb._contents += "M " + H.S(cx + (cosRotation * x - sinRotation * y)) + " " + H.S(cy + (sinRotation * x + cosRotation * y)) + " ";
      t1 = "A " + H.S(radiusX) + " " + H.S(radiusY) + " " + H.S(rotation / 3.141592653589793 * 180) + " ";
      t1 = t1 + (Math.abs(endAngle - startAngle) > 3.141592653589793 ? 1 : 0) + " ";
      sb._contents += t1 + (antiClockwise ? 0 : 1) + " " + H.S(cx + (cosRotation * xe - sinRotation * ye)) + " " + H.S(cy + (sinRotation * xe + cosRotation * ye));
    },
    handlePlatformViewCall: function(data, callback) {
      var id, t1, t2,
        decoded = C.C_StandardMethodCodec.decodeMethodCall$1(data);
      switch (decoded.method) {
        case "create":
          H._createPlatformView(decoded, callback);
          return;
        case "dispose":
          id = decoded.$arguments;
          t1 = $.$get$platformViewRegistry()._createdViews;
          t2 = t1.$index(0, id);
          if (t2 != null)
            J.remove$0$ax(t2);
          t1.remove$1(0, id);
          callback.call$1(C.C_StandardMethodCodec.encodeSuccessEnvelope$1(null));
          return;
      }
      callback.call$1(null);
    },
    _createPlatformView: function(methodCall, callback) {
      var t2, element,
        args = methodCall.$arguments,
        t1 = J.getInterceptor$asx(args),
        id = t1.$index(args, "id"),
        viewType = t1.$index(args, "viewType");
      t1 = $.$get$platformViewRegistry();
      t2 = t1.registeredFactories;
      if (!t2.containsKey$1(0, viewType)) {
        callback.call$1(C.C_StandardMethodCodec.encodeErrorEnvelope$2$code$message("Unregistered factory", "No factory registered for viewtype '" + H.S(viewType) + "'"));
        return;
      }
      element = t2.$index(0, viewType).call$1(id);
      t1._createdViews.$indexSet(0, id, element);
      callback.call$1(C.C_StandardMethodCodec.encodeSuccessEnvelope$1(null));
    },
    convertButtonToButtons: function(button) {
      switch (button) {
        case 0:
          return 1;
        case 1:
          return 4;
        case 2:
          return 2;
        default:
          return C.JSInt_methods.$shl(1, button);
      }
    },
    _BaseAdapter__eventTimeStampToDuration: function(milliseconds) {
      var ms = J.toInt$0$n(milliseconds);
      return P.Duration$(C.JSNumber_methods.toInt$0((milliseconds - ms) * 1000), ms);
    },
    timeAction: function($name, action) {
      var result,
        stopwatch = new P.Stopwatch();
      if ($.Stopwatch__frequency == null) {
        H.Primitives_initTicker();
        $.Stopwatch__frequency = $.Primitives_timerFrequency;
      }
      stopwatch.start$0(0);
      result = action.call$0();
      stopwatch.stop$0(0);
      H.Profiler_instance().benchmark$2($name, stopwatch.get$elapsedMicroseconds());
      return result;
    },
    Profiler_instance: function() {
      var t1 = $.Profiler__instance;
      if (t1 == null)
        throw H.wrapException(P.Exception_Exception("Profiler has not been properly initialized. Make sure Profiler.ensureInitialized() is being called before you access Profiler.instance"));
      return t1;
    },
    AccessibilityAnnouncements$_: function() {
      var t1 = new H.AccessibilityAnnouncements();
      t1.AccessibilityAnnouncements$_$0();
      return t1;
    },
    Incrementable$: function(semanticsObject) {
      var t1 = new H.Incrementable(W.InputElement_InputElement(), semanticsObject);
      t1.Incrementable$1(semanticsObject);
      return t1;
    },
    SemanticsObject$: function(id, owner) {
      var t1 = W._ElementFactoryProvider_createElement_tag("flt-semantics", null),
        t2 = t1.style;
      t2.position = "absolute";
      if (id === 0) {
        t2 = t1.style;
        t2.toString;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "filter"), "opacity(0%)", "");
        t2 = t1.style;
        t2.color = "rgba(0,0,0,0)";
      }
      return new H.SemanticsObject(id, owner, t1, P.LinkedHashMap_LinkedHashMap$_empty(type$.Role, type$.RoleManager));
    },
    EngineSemanticsOwner$_: function() {
      var t1 = type$.int,
        t2 = type$.SemanticsObject,
        t3 = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsObject),
        t4 = H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function),
        t5 = J.containsKey$1$x(C.Set_m536._collection$_map, H.operatingSystem()) ? new H.DesktopSemanticsEnabler() : new H.MobileSemanticsEnabler();
      t5 = new H.EngineSemanticsOwner(P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), t3, t4, new H.EngineSemanticsOwner_closure(), new H.SemanticsHelper(t5), C.GestureMode_1, H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_GestureMode));
      t5.EngineSemanticsOwner$_$0();
      return t5;
    },
    EngineSemanticsOwner_instance: function() {
      var t1 = $.EngineSemanticsOwner__instance;
      return t1 == null ? $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_() : t1;
    },
    longestIncreasingSubsequence: function(list) {
      var longest, i, elem, hi, lo, mid, t2, seq, k,
        len = list.length,
        t1 = type$.JSArray_int,
        predecessors = H.setRuntimeTypeInfo([], t1),
        mins = H.setRuntimeTypeInfo([0], t1);
      for (longest = 0, i = 0; i < len; ++i) {
        elem = list[i];
        for (hi = longest, lo = 1; lo <= hi;) {
          mid = C.JSInt_methods._tdivFast$1(lo + hi, 2);
          if (list[mins[mid]] < elem)
            lo = mid + 1;
          else
            hi = mid - 1;
        }
        predecessors.push(mins[lo - 1]);
        if (lo >= mins.length)
          mins.push(i);
        else
          mins[lo] = i;
        if (lo > longest)
          longest = lo;
      }
      t2 = new Array(longest);
      t2.fixed$length = Array;
      seq = H.setRuntimeTypeInfo(t2, t1);
      k = mins[longest];
      for (i = longest - 1; i >= 0; --i) {
        seq[i] = k;
        k = predecessors[k];
      }
      return seq;
    },
    WriteBuffer$: function() {
      var t1 = new H.WriteBuffer(),
        t2 = new Uint8Array(0);
      t1.__engine$_buffer = new H.Uint8Buffer(t2, t2.length);
      t2 = new DataView(new ArrayBuffer(8));
      t1._eightBytes = t2;
      t1._eightBytesAsList = H.NativeUint8List_NativeUint8List$view(t2.buffer, 0, null);
      return t1;
    },
    GradientLinear$: function(from, to, colors, colorStops, tileMode) {
      if (colorStops == null) {
        if (colors.length !== 2)
          H.throwExpression(P.ArgumentError$('"colors" must have length 2 if "colorStops" is omitted.'));
      } else if (colors.length !== colorStops.length)
        H.throwExpression(P.ArgumentError$('"colors" and "colorStops" arguments must have equal length.'));
      return new H.GradientLinear(from, to, colors, colorStops, tileMode);
    },
    computeShadowOffset: function(elevation) {
      if (elevation === 0)
        return C.Offset_0_0;
      return new P.Offset(200 * elevation / 600, 400 * elevation / 600);
    },
    computePenumbraBounds: function(shape, elevation) {
      var t1, t2, t3, t4, dx, dy;
      if (elevation === 0)
        return shape;
      t1 = shape.right;
      t2 = shape.left;
      t3 = shape.bottom;
      t4 = shape.top;
      dx = elevation * ((800 + (t1 - t2) * 0.5) / 600);
      dy = elevation * ((800 + (t3 - t4) * 0.5) / 600);
      return new P.Rect(t2 - dx, t4 - dy, t1 + dx, t3 + dy).shift$1(H.computeShadowOffset(elevation));
    },
    computeShadow: function(shape, elevation) {
      if (elevation === 0)
        return null;
      return new H.SurfaceShadowData(Math.min(elevation * ((800 + (shape.right - shape.left) * 0.5) / 600), elevation * ((800 + (shape.bottom - shape.top) * 0.5) / 600)), H.computeShadowOffset(elevation));
    },
    createSvgClipDef: function(element, clipPath) {
      var pathBounds = clipPath.getBounds$0(0),
        t1 = pathBounds.right,
        t2 = pathBounds.bottom,
        svgClipPath = H._pathToSvgClipPath(clipPath, 0, 0, 1 / t1, 1 / t2),
        t3 = $.$get$domRenderer();
      t3.setElementStyle$3(element, "clip-path", "url(#svgClip" + $._clipIdCounter + ")");
      t3.setElementStyle$3(element, "-webkit-clip-path", "url(#svgClip" + $._clipIdCounter + ")");
      t3 = element.style;
      t1 = H.S(t1) + "px";
      t3.width = t1;
      t1 = H.S(t2) + "px";
      t3.height = t1;
      return svgClipPath;
    },
    _ellipseContains: function(px, py, centerX, centerY, radiusX, radiusY) {
      var dx = px - centerX,
        dy = py - centerY;
      return dx * dx / (radiusX * radiusX) + dy * dy / (radiusY * radiusY) < 1;
    },
    _recycleCanvas: function(canvas) {
      if (canvas instanceof H.BitmapCanvas)
        if (canvas._devicePixelRatio === H.EngineWindow_browserDevicePixelRatio()) {
          $._recycledCanvases.push(canvas);
          if ($._recycledCanvases.length > 30)
            C.JSArray_methods.removeAt$1($._recycledCanvases, 0)._canvasPool.dispose$0();
        } else
          canvas._canvasPool.dispose$0();
    },
    standardPictureFactory: function(dx, dy, picture, hints) {
      var t1 = new H.FrameReference(false);
      $._frameReferences.push(t1);
      return new H.PersistedStandardPicture(t1, dx, dy, picture, picture.recordingCanvas._pictureBounds, C.PersistedSurfaceState_0);
    },
    PersistedPicture__predictTrend: function(delta, extent) {
      if (delta <= 0)
        return extent * 0.1;
      else
        return Math.min(Math.max(extent * 0.5, delta * 10), extent);
    },
    _measureBorderRadius: function(x, y) {
      var clampedX = x < 0 ? 0 : x,
        clampedY = y < 0 ? 0 : y;
      return clampedX * clampedX + clampedY * clampedY;
    },
    _getPaintSpread: function(paint) {
      var t1,
        maskFilter = paint == null ? null : paint._paintData.maskFilter,
        spread = maskFilter != null ? 0 + maskFilter._sigma * 2 : 0;
      paint.get$strokeWidth();
      t1 = paint.get$strokeWidth();
      return t1 !== 0 ? spread + paint.get$strokeWidth() * 0.70710678118 : spread;
    },
    commitScene: function(scene) {
      var _i, i,
        t1 = $._paintQueue,
        t2 = t1.length;
      if (t2 !== 0) {
        if (t2 > 1)
          C.JSArray_methods.sort$1(t1, new H.commitScene_closure());
        for (t1 = $._paintQueue, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].paintCallback.call$0();
        $._paintQueue = H.setRuntimeTypeInfo([], type$.JSArray__PaintRequest);
      }
      t1 = $._retainedSurfaces;
      t2 = t1.length;
      if (t2 !== 0) {
        for (i = 0; i < t2; ++i)
          t1[i].__engine$_state = C.PersistedSurfaceState_1;
        $._retainedSurfaces = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      }
      for (t1 = $._frameReferences, i = 0; i < t1.length; ++i)
        t1[i].value = null;
      $._frameReferences = H.setRuntimeTypeInfo([], type$.JSArray_FrameReference_dynamic);
    },
    PersistedContainerSurface__discardActiveChildren: function(surface) {
      var i, child,
        t1 = surface.__engine$_children,
        $length = t1.length;
      for (i = 0; i < $length; ++i) {
        child = t1[i];
        if (child.__engine$_state === C.PersistedSurfaceState_1)
          child.discard$0();
      }
    },
    FontManager_FontManager: function() {
      var t1 = type$.JSArray_Future_void;
      if ($.$get$supportsFontLoadingApi())
        return new H.FontManager(H.setRuntimeTypeInfo([], t1));
      else
        return new H._PolyfillFontManager(H.setRuntimeTypeInfo([], t1));
    },
    nextLineBreak: function(text, index) {
      var index0, t1, curr, prev, t2;
      for (; index0 = index + 1, t1 = text.length, index < t1; index = index0) {
        curr = index0 < t1 ? C.JSString_methods.codeUnitAt$1(text, index0) : null;
        prev = index0 > 0 ? C.JSString_methods.codeUnitAt$1(text, index0 - 1) : null;
        if (prev === 11 || prev === 12)
          return new H.LineBreakResult(index0, C.LineBreakType_1);
        t2 = prev === 13;
        if (t2 && curr === 10)
          continue;
        if (t2 || prev === 10 || prev === 133)
          return new H.LineBreakResult(index0, C.LineBreakType_1);
        if (curr === 11 || curr === 12 || curr === 13 || curr === 10 || curr === 133)
          continue;
        if (index0 >= t1)
          return new H.LineBreakResult(t1, C.LineBreakType_2);
        if (curr === 32 || curr === 9)
          continue;
        if (prev === 32 || prev === 9 || prev === 45)
          return new H.LineBreakResult(index0, C.LineBreakType_0);
      }
      return new H.LineBreakResult(t1, C.LineBreakType_2);
    },
    _whitespacePredicate: function(char) {
      return char === 32 || char === 9 || H._newlinePredicate(char);
    },
    _newlinePredicate: function(char) {
      return char === 13 || char === 10 || char === 133;
    },
    TextMeasurementService_forParagraph: function(paragraph) {
      var style,
        t1 = $.$get$window().get$physicalSize();
      if (!t1.get$isEmpty(t1)) {
        t1 = $.WebExperiments_instance._useCanvasText;
        if (t1 === true) {
          style = paragraph._geometricStyle;
          t1 = paragraph._plainText != null && style.decoration == null && style.wordSpacing == null;
        } else
          t1 = false;
      } else
        t1 = false;
      if (t1) {
        t1 = $.CanvasTextMeasurementService__instance;
        return t1 == null ? $.CanvasTextMeasurementService__instance = new H.CanvasTextMeasurementService(W.CanvasElement_CanvasElement(null, null).getContext("2d")) : t1;
      }
      t1 = $.DomTextMeasurementService__instance;
      return t1 == null ? $.DomTextMeasurementService__instance = new H.DomTextMeasurementService() : t1;
    },
    DomTextMeasurementService__applySubPixelRoundingHack: function(minIntrinsicWidth, maxIntrinsicWidth) {
      if (minIntrinsicWidth <= maxIntrinsicWidth)
        return maxIntrinsicWidth;
      if (minIntrinsicWidth - maxIntrinsicWidth < 2)
        return minIntrinsicWidth;
      throw H.wrapException(P.Exception_Exception("minIntrinsicWidth (" + H.S(minIntrinsicWidth) + ") is greater than maxIntrinsicWidth (" + H.S(maxIntrinsicWidth) + ")."));
    },
    _measureSubstring: function(_canvasContext, style, text, start, end) {
      var letterSpacing, sub;
      if (start === end)
        return 0;
      if (start === $._lastStart && end === $._lastEnd && text == $._lastText && J.$eq$($._lastStyle, style))
        return $._lastWidth;
      $._lastStart = start;
      $._lastEnd = end;
      $._lastText = text;
      $._lastStyle = style;
      letterSpacing = style.letterSpacing;
      if (letterSpacing == null)
        letterSpacing = 0;
      sub = start === 0 && end === text.length ? text : J.substring$2$s(text, start, end);
      return $._lastWidth = C.JSNumber_methods.round$0((_canvasContext.measureText(sub).width + letterSpacing * sub.length) * 100) / 100;
    },
    _excludeTrailing: function(text, start, end, predicate) {
      var t1 = J.getInterceptor$s(text);
      while (true) {
        if (!(start < end && predicate.call$1(t1.codeUnitAt$1(text, end - 1))))
          break;
        --end;
      }
      return end;
    },
    _calculateAlignOffsetForLine: function(lineWidth, maxWidth, paragraph) {
      var emptySpace = maxWidth - lineWidth;
      switch (paragraph._textAlign) {
        case C.TextAlign_2:
          return emptySpace / 2;
        case C.TextAlign_1:
          return emptySpace;
        case C.TextAlign_4:
          return paragraph._textDirection === C.TextDirection_0 ? emptySpace : 0;
        case C.TextAlign_5:
          return paragraph._textDirection === C.TextDirection_0 ? 0 : emptySpace;
        default:
          return 0;
      }
    },
    EngineLineMetrics$withText: function(displayText, endIndex, endIndexWithoutNewlines, hardBreak, left, lineNumber, startIndex, width) {
      return new H.EngineLineMetrics(displayText, startIndex, endIndex, endIndexWithoutNewlines, hardBreak, width, left, lineNumber);
    },
    EngineParagraph$: function(background, geometricStyle, paint, paragraphElement, plainText, textAlign, textDirection) {
      return new H.EngineParagraph(paragraphElement, geometricStyle, plainText, paint, textAlign, textDirection, background);
    },
    EngineTextStyle$: function(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t1 = fontFamily == null,
        t2 = t1 ? "" : fontFamily;
      return new H.EngineTextStyle(color, decoration, decorationColor, decorationStyle, fontWeight, fontStyle, textBaseline, !t1, t2, fontFamilyFallback, fontSize, letterSpacing, wordSpacing, height, locale, background, foreground, shadows);
    },
    fontWeightToCss: function(fontWeight) {
      if (fontWeight == null)
        return null;
      return H.fontWeightIndexToCss(fontWeight.index);
    },
    fontWeightIndexToCss: function(fontWeightIndex) {
      switch (fontWeightIndex) {
        case 0:
          return "100";
        case 1:
          return "200";
        case 2:
          return "300";
        case 3:
          return "normal";
        case 4:
          return "500";
        case 5:
          return "600";
        case 6:
          return "bold";
        case 7:
          return "800";
        case 8:
          return "900";
      }
      return "";
    },
    _applyTextStyleToElement: function(element, isSpan, style) {
      var updateDecoration, textDecoration, decorationColor,
        cssStyle = element.style,
        t1 = style._foreground,
        color = t1 == null ? null : t1.get$color(t1);
      if (color == null)
        color = style._color;
      if (color != null) {
        t1 = H.colorToCssString(color);
        cssStyle.toString;
        cssStyle.color = t1 == null ? "" : t1;
      }
      t1 = style._fontSize;
      if (t1 != null) {
        t1 = "" + C.JSNumber_methods.floor$0(t1) + "px";
        cssStyle.fontSize = t1;
      }
      t1 = style._fontWeight;
      if (t1 != null) {
        t1 = H.fontWeightToCss(t1);
        cssStyle.toString;
        cssStyle.fontWeight = t1 == null ? "" : t1;
      }
      if (isSpan && true) {
        t1 = H.canonicalizeFontFamily(style._fontFamily);
        cssStyle.toString;
        cssStyle.fontFamily = t1 == null ? "" : t1;
      } else {
        style.get$_effectiveFontFamily();
        t1 = H.canonicalizeFontFamily(style.get$_effectiveFontFamily());
        cssStyle.toString;
        cssStyle.fontFamily = t1 == null ? "" : t1;
      }
      t1 = style._letterSpacing;
      if (t1 != null) {
        t1 = H.S(t1) + "px";
        cssStyle.letterSpacing = t1;
      }
      t1 = style._wordSpacing;
      if (t1 != null) {
        t1 = H.S(t1) + "px";
        cssStyle.wordSpacing = t1;
      }
      updateDecoration = style._decoration != null && true;
      if (updateDecoration) {
        t1 = style._decoration;
        if (t1 != null) {
          textDecoration = H._textDecorationToCssString(t1, style._decorationStyle);
          if (textDecoration != null) {
            if (H.browserEngine() === C.BrowserEngine_1)
              $.$get$domRenderer().setElementStyle$3(element, "-webkit-text-decoration", textDecoration);
            else
              cssStyle.textDecoration = textDecoration;
            decorationColor = style._decorationColor;
            if (decorationColor != null) {
              t1 = H.colorToCssString(decorationColor);
              cssStyle.toString;
              C.CssStyleDeclaration_methods._setPropertyHelper$3(cssStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(cssStyle, "text-decoration-color"), t1, "");
            }
          }
        }
      }
    },
    _applyTextBackgroundToElement: function(element, style) {
      var newBackground = style._background;
      if (newBackground != null)
        $.$get$domRenderer().setElementStyle$3(element, "background-color", H.colorToCssString(newBackground.get$color(newBackground)));
    },
    _textDecorationToCssString: function(decoration, decorationStyle) {
      var t1;
      if (decoration != null) {
        t1 = decoration.contains$1(0, C.TextDecoration_1) ? "underline " : "";
        if (decoration.contains$1(0, C.TextDecoration_2))
          t1 += "overline ";
        if (decoration.contains$1(0, C.TextDecoration_4))
          t1 += "line-through ";
      } else
        t1 = "";
      if (decorationStyle != null)
        t1 += H.S(H._decorationStyleToCssString(decorationStyle));
      return t1.length === 0 ? null : t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _decorationStyleToCssString: function(decorationStyle) {
      switch (decorationStyle) {
        case C.TextDecorationStyle_3:
          return "dashed";
        case C.TextDecorationStyle_2:
          return "dotted";
        case C.TextDecorationStyle_1:
          return "double";
        case C.TextDecorationStyle_0:
          return "solid";
        case C.TextDecorationStyle_4:
          return "wavy";
        default:
          return null;
      }
    },
    _textDirectionToCss: function(textDirection) {
      if (textDirection == null)
        return null;
      return H.textDirectionIndexToCss(textDirection.index);
    },
    textDirectionIndexToCss: function(textDirectionIndex) {
      switch (textDirectionIndex) {
        case 0:
          return "rtl";
        case 1:
          return null;
      }
      return null;
    },
    textAlignToCssValue: function(align, textDirection) {
      switch (align) {
        case C.TextAlign_0:
          return "left";
        case C.TextAlign_1:
          return "right";
        case C.TextAlign_2:
          return "center";
        case C.TextAlign_3:
          return "justify";
        case C.TextAlign_4:
          switch (textDirection) {
            case C.TextDirection_1:
              return null;
            case C.TextDirection_0:
              return "right";
          }
          break;
        case C.TextAlign_5:
          switch (textDirection) {
            case C.TextDirection_1:
              return "end";
            case C.TextDirection_0:
              return "left";
          }
          break;
      }
      throw H.wrapException(P.AssertionError$("Unsupported TextAlign value " + H.S(align)));
    },
    _listEquals: function(a, b) {
      var index;
      if (a == null)
        return b == null;
      if (b == null || a.length !== b.length)
        return false;
      for (index = 0; index < a.length; ++index)
        if (!J.$eq$(a[index], b[index]))
          return false;
      return true;
    },
    ParagraphGeometricStyle$: function(decoration, ellipsis, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, maxLines, shadows, wordSpacing) {
      return new H.ParagraphGeometricStyle(fontWeight, fontStyle, fontFamily, fontSize, lineHeight, maxLines, letterSpacing, wordSpacing, decoration, ellipsis, shadows);
    },
    MeasurementResult$: function(constraintWidth, alphabeticBaseline, height, ideographicBaseline, isSingleLine, lineHeight, lines, maxIntrinsicWidth, minIntrinsicWidth, naturalHeight, textAlign, textDirection, width) {
      var t1 = textAlign == null ? C.TextAlign_4 : textAlign;
      return new H.MeasurementResult(constraintWidth, isSingleLine, width, height, naturalHeight, lineHeight, minIntrinsicWidth, maxIntrinsicWidth, alphabeticBaseline, ideographicBaseline, lines, t1, textDirection == null ? C.TextDirection_1 : textDirection);
    },
    EngineInputType_fromName: function($name) {
      switch ($name) {
        case "TextInputType.number":
          return C.C_NumberInputType;
        case "TextInputType.phone":
          return C.C_PhoneInputType;
        case "TextInputType.emailAddress":
          return C.C_EmailInputType;
        case "TextInputType.url":
          return C.C_UrlInputType;
        case "TextInputType.multiline":
          return C.C_MultilineInputType;
        case "TextInputType.text":
        default:
          return C.C_TextInputType;
      }
    },
    _emptyCallback: function(_) {
    },
    EditingState_EditingState$fromDomElement: function(domElement) {
      if (type$.InputElement._is(domElement))
        return new H.EditingState(domElement.value, domElement.selectionStart, domElement.selectionEnd);
      else if (type$.TextAreaElement._is(domElement))
        return new H.EditingState(domElement.value, domElement.selectionStart, domElement.selectionEnd);
      else
        throw H.wrapException(P.UnsupportedError$("Initialized with unsupported input type"));
    },
    GloballyPositionedTextEditingStrategy$: function(owner) {
      return new H.GloballyPositionedTextEditingStrategy(owner, H.setRuntimeTypeInfo([], type$.JSArray_StreamSubscription_Event));
    },
    setElementTransform: function(element, matrix4) {
      var t2,
        t1 = element.style;
      t1.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform-origin"), "0 0 0", "");
      t2 = H.float64ListToCssTransform(matrix4);
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
    },
    float64ListToCssTransform: function(matrix) {
      var transformKind = H.transformKindOf(matrix);
      if (transformKind === C.TransformKind_1)
        return "matrix(" + H.S(matrix[0]) + "," + H.S(matrix[1]) + "," + H.S(matrix[4]) + "," + H.S(matrix[5]) + "," + H.S(matrix[12]) + "," + H.S(matrix[13]) + ")";
      else if (transformKind === C.TransformKind_2)
        return H.float64ListToCssTransform3d(matrix);
      else
        return null;
    },
    transformKindOf: function(matrix) {
      if (!(matrix[15] === 1 && matrix[14] === 0 && matrix[11] === 0 && matrix[10] === 1 && matrix[9] === 0 && matrix[8] === 0 && matrix[7] === 0 && matrix[6] === 0 && matrix[3] === 0 && matrix[2] === 0))
        return C.TransformKind_2;
      if (matrix[0] === 1 && matrix[1] === 0 && matrix[4] === 0 && matrix[5] === 1 && matrix[12] === 0 && matrix[13] === 0)
        return C.TransformKind_0;
      else
        return C.TransformKind_1;
    },
    float64ListToCssTransform3d: function(matrix) {
      var tx, ty,
        t1 = matrix[0];
      if (t1 === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 0 && matrix[4] === 0 && matrix[5] === 1 && matrix[6] === 0 && matrix[7] === 0 && matrix[8] === 0 && matrix[9] === 0 && matrix[10] === 1 && matrix[11] === 0 && matrix[14] === 0 && matrix[15] === 1) {
        tx = matrix[12];
        ty = matrix[13];
        return "translate3d(" + H.S(tx) + "px, " + H.S(ty) + "px, 0px)";
      } else
        return "matrix3d(" + H.S(t1) + "," + H.S(matrix[1]) + "," + H.S(matrix[2]) + "," + H.S(matrix[3]) + "," + H.S(matrix[4]) + "," + H.S(matrix[5]) + "," + H.S(matrix[6]) + "," + H.S(matrix[7]) + "," + H.S(matrix[8]) + "," + H.S(matrix[9]) + "," + H.S(matrix[10]) + "," + H.S(matrix[11]) + "," + H.S(matrix[12]) + "," + H.S(matrix[13]) + "," + H.S(matrix[14]) + "," + H.S(matrix[15]) + ")";
    },
    transformRect: function(transform, rect) {
      var t1 = $.$get$_tempRectData();
      t1[0] = rect.left;
      t1[1] = rect.top;
      t1[2] = rect.right;
      t1[3] = rect.bottom;
      H.transformLTRB(transform, t1);
      return new P.Rect(t1[0], t1[1], t1[2], t1[3]);
    },
    transformLTRB: function(transform, ltrb) {
      var t2, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33, argStorage,
        t1 = $.$get$_tempPointData();
      t1[0] = ltrb[0];
      t1[4] = ltrb[1];
      t1[8] = 0;
      t1[12] = 1;
      t1[1] = ltrb[2];
      t1[5] = ltrb[1];
      t1[9] = 0;
      t1[13] = 1;
      t1[2] = ltrb[0];
      t1[6] = ltrb[3];
      t1[10] = 0;
      t1[14] = 1;
      t1[3] = ltrb[2];
      t1[7] = ltrb[3];
      t1[11] = 0;
      t1[15] = 1;
      t2 = $.$get$_tempPointMatrix().__engine$_m4storage;
      m00 = t2[0];
      m01 = t2[4];
      m02 = t2[8];
      m03 = t2[12];
      m10 = t2[1];
      m11 = t2[5];
      m12 = t2[9];
      m13 = t2[13];
      m20 = t2[2];
      m21 = t2[6];
      m22 = t2[10];
      m23 = t2[14];
      m30 = t2[3];
      m31 = t2[7];
      m32 = t2[11];
      m33 = t2[15];
      argStorage = transform.__engine$_m4storage;
      t2[0] = m00 * argStorage[0] + m01 * argStorage[4] + m02 * argStorage[8] + m03 * argStorage[12];
      t2[4] = m00 * argStorage[1] + m01 * argStorage[5] + m02 * argStorage[9] + m03 * argStorage[13];
      t2[8] = m00 * argStorage[2] + m01 * argStorage[6] + m02 * argStorage[10] + m03 * argStorage[14];
      t2[12] = m00 * argStorage[3] + m01 * argStorage[7] + m02 * argStorage[11] + m03 * argStorage[15];
      t2[1] = m10 * argStorage[0] + m11 * argStorage[4] + m12 * argStorage[8] + m13 * argStorage[12];
      t2[5] = m10 * argStorage[1] + m11 * argStorage[5] + m12 * argStorage[9] + m13 * argStorage[13];
      t2[9] = m10 * argStorage[2] + m11 * argStorage[6] + m12 * argStorage[10] + m13 * argStorage[14];
      t2[13] = m10 * argStorage[3] + m11 * argStorage[7] + m12 * argStorage[11] + m13 * argStorage[15];
      t2[2] = m20 * argStorage[0] + m21 * argStorage[4] + m22 * argStorage[8] + m23 * argStorage[12];
      t2[6] = m20 * argStorage[1] + m21 * argStorage[5] + m22 * argStorage[9] + m23 * argStorage[13];
      t2[10] = m20 * argStorage[2] + m21 * argStorage[6] + m22 * argStorage[10] + m23 * argStorage[14];
      t2[14] = m20 * argStorage[3] + m21 * argStorage[7] + m22 * argStorage[11] + m23 * argStorage[15];
      t2[3] = m30 * argStorage[0] + m31 * argStorage[4] + m32 * argStorage[8] + m33 * argStorage[12];
      t2[7] = m30 * argStorage[1] + m31 * argStorage[5] + m32 * argStorage[9] + m33 * argStorage[13];
      t2[11] = m30 * argStorage[2] + m31 * argStorage[6] + m32 * argStorage[10] + m33 * argStorage[14];
      t2[15] = m30 * argStorage[3] + m31 * argStorage[7] + m32 * argStorage[11] + m33 * argStorage[15];
      ltrb[0] = Math.min(Math.min(Math.min(t1[0], t1[1]), t1[2]), t1[3]);
      ltrb[1] = Math.min(Math.min(Math.min(t1[4], t1[5]), t1[6]), t1[7]);
      ltrb[2] = Math.max(Math.max(Math.max(t1[0], t1[1]), t1[2]), t1[3]);
      ltrb[3] = Math.max(Math.max(Math.max(t1[4], t1[5]), t1[6]), t1[7]);
    },
    rectContainsOther: function(rect, other) {
      return rect.left <= other.left && rect.top <= other.top && rect.right >= other.right && rect.bottom >= other.bottom;
    },
    _pathToSvgClipPath: function(path, offsetX, offsetY, scaleX, scaleY) {
      var sb,
        _s58_ = '<svg width="0" height="0" style="position:absolute"><defs>',
        t1 = $._clipIdCounter + 1;
      $._clipIdCounter = t1;
      sb = new P.StringBuffer("");
      sb._contents = '<svg width="0" height="0" style="position:absolute">';
      sb._contents = _s58_;
      t1 = _s58_ + ("<clipPath id=" + ("svgClip" + t1) + ' clipPathUnits="objectBoundingBox">');
      sb._contents = t1;
      sb._contents = t1 + ('<path transform="scale(' + H.S(scaleX) + ", " + H.S(scaleY) + ')" fill="#FFFFFF" d="');
      H.pathToSvg(path, sb, offsetX, offsetY);
      t1 = sb._contents += '"></path></clipPath></defs></svg';
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    colorToCssString: function(color) {
      var value, hexValue, t1;
      if (color == null)
        return null;
      value = color.get$value(color);
      if ((4278190080 & value) >>> 0 === 4278190080) {
        hexValue = C.JSInt_methods.toRadixString$1(value & 16777215, 16);
        switch (hexValue.length) {
          case 1:
            return "#00000" + hexValue;
          case 2:
            return "#0000" + hexValue;
          case 3:
            return "#000" + hexValue;
          case 4:
            return "#00" + hexValue;
          case 5:
            return "#0" + hexValue;
          default:
            return "#" + hexValue;
        }
      } else {
        t1 = "rgba(" + C.JSInt_methods.toString$0(value >>> 16 & 255) + "," + C.JSInt_methods.toString$0(value >>> 8 & 255) + "," + C.JSInt_methods.toString$0(value & 255) + "," + C.JSDouble_methods.toString$0((value >>> 24 & 255) / 255) + ")";
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    colorComponentsToCssString: function(r, g, b, a) {
      if (a === 255)
        return "rgb(" + r + "," + g + "," + b + ")";
      else
        return "rgba(" + r + "," + g + "," + b + "," + C.JSDouble_methods.toStringAsFixed$1(a / 255, 2) + ")";
    },
    canonicalizeFontFamily: function(fontFamily) {
      if (J.containsKey$1$x(C.Set_wIvsi._collection$_map, fontFamily))
        return fontFamily;
      return '"' + H.S(fontFamily) + '", ' + $.$get$_fallbackFontFamily() + ", sans-serif";
    },
    Matrix4_tryInvert0: function(other) {
      var r = new H.Matrix40(new Float32Array(16));
      if (r.copyInverse$1(other) === 0)
        return null;
      return r;
    },
    Matrix4_Matrix4$translationValues0: function(x, y, z) {
      var t1 = new Float32Array(16),
        t2 = new H.Matrix40(t1);
      t2.setIdentity$0();
      t1[14] = z;
      t1[13] = y;
      t1[12] = x;
      return t2;
    },
    Matrix4$fromFloat32List: function(_m4storage) {
      return new H.Matrix40(_m4storage);
    },
    Vector3_Vector3: function(x, y, z) {
      var t1 = new Float32Array(3);
      t1[0] = x;
      t1[1] = y;
      t1[2] = z;
      return new H.Vector30(t1);
    },
    WebExperiments$_: function() {
      var t1 = new H.WebExperiments();
      t1.WebExperiments$_$0();
      return t1;
    },
    EngineWindow_browserDevicePixelRatio: function() {
      var ratio = window.devicePixelRatio;
      return ratio == null || ratio === 0 ? 1 : ratio;
    },
    EngineWindow__zonedPlatformMessageResponseCallback: function(callback) {
      return new H.EngineWindow__zonedPlatformMessageResponseCallback_closure($.Zone__current, callback);
    },
    _handleWebTestEnd2EndMessage: function(codec, data) {
      var t1,
        decoded = codec.decodeMethodCall$1(data),
        ratio = P.double_parse(decoded.$arguments);
      switch (decoded.method) {
        case "setDevicePixelRatio":
          t1 = $.$get$window();
          t1._debugDevicePixelRatio = ratio;
          t1.onMetricsChanged$0();
          return true;
      }
      return false;
    },
    _invoke: function(callback, zone) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$0();
      else
        zone.runGuarded$1(callback);
    },
    _invoke1: function(callback, zone, arg) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$1(arg);
      else
        zone.runUnaryGuarded$2(callback, arg);
    },
    _invoke3: function(callback, zone, arg1, arg2, arg3) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$3(arg1, arg2, arg3);
      else
        zone.runGuarded$1(new H._invoke3_closure(callback, arg1, arg2, arg3));
    },
    webOnlyInitializeEngine_closure: function webOnlyInitializeEngine_closure() {
    },
    webOnlyInitializeEngine_closure0: function webOnlyInitializeEngine_closure0(t0) {
      this._box_0 = t0;
    },
    webOnlyInitializeEngine__closure: function webOnlyInitializeEngine__closure(t0) {
      this._box_0 = t0;
    },
    _NullTreeSanitizer: function _NullTreeSanitizer() {
    },
    AlarmClock: function AlarmClock(t0) {
      var _ = this;
      _._timestampFunction = t0;
      _.callback = _._datetime = _._timer = null;
    },
    AssetManager: function AssetManager() {
    },
    AssetManager__baseUrl_closure: function AssetManager__baseUrl_closure() {
    },
    AssetManager__baseUrl_closure0: function AssetManager__baseUrl_closure0() {
    },
    AssetManagerException: function AssetManagerException(t0, t1) {
      this.url = t0;
      this.httpStatus = t1;
    },
    BitmapCanvas: function BitmapCanvas(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._bounds = t0;
      _.rootElement = t1;
      _._canvasPool = t2;
      _._cachedLastStyle = null;
      _.__engine$_children = t3;
      _._widthInBitmapPixels = t4;
      _._heightInBitmapPixels = t5;
      _._saveCount = 0;
      _._devicePixelRatio = t6;
      _._canvasPositionY = _._canvasPositionX = null;
      _._childOverdraw = false;
    },
    BrowserEngine: function BrowserEngine(t0) {
      this.__engine$_name = t0;
    },
    OperatingSystem: function OperatingSystem(t0) {
      this.__engine$_name = t0;
    },
    LocationStrategy: function LocationStrategy() {
    },
    HashLocationStrategy: function HashLocationStrategy() {
    },
    HashLocationStrategy_onPopState_closure: function HashLocationStrategy_onPopState_closure(t0, t1) {
      this.$this = t0;
      this.fn = t1;
    },
    HashLocationStrategy__waitForPopState_closure: function HashLocationStrategy__waitForPopState_closure(t0, t1) {
      this._box_0 = t0;
      this.completer = t1;
    },
    PlatformLocation: function PlatformLocation() {
    },
    BrowserPlatformLocation: function BrowserPlatformLocation() {
    },
    _CanvasPool: function _CanvasPool(t0, t1, t2, t3) {
      var _ = this;
      _._contextHandle = _.__engine$_context = null;
      _._widthInBitmapPixels = t0;
      _._heightInBitmapPixels = t1;
      _._rootElement = _.__engine$_canvas = _._reusablePool = _._pool = null;
      _._saveContextCount = 0;
      _._saveStack = t2;
      _._clipStack = null;
      _._currentTransform = t3;
    },
    ContextStateHandle: function ContextStateHandle(t0, t1, t2, t3) {
      var _ = this;
      _.context = t0;
      _._currentBlendMode = t1;
      _._currentStrokeCap = t2;
      _._currentStrokeJoin = t3;
      _._currentStrokeStyle = _._currentFillStyle = null;
      _._currentLineWidth = 1;
      _._currentFilter = "none";
    },
    _SaveStackTracking: function _SaveStackTracking() {
    },
    ClipboardMessageHandler: function ClipboardMessageHandler(t0, t1) {
      this._copyToClipboardStrategy = t0;
      this._pasteFromClipboardStrategy = t1;
    },
    ClipboardMessageHandler_setDataMethodCall_closure: function ClipboardMessageHandler_setDataMethodCall_closure(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_setDataMethodCall_closure0: function ClipboardMessageHandler_setDataMethodCall_closure0(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_getDataMethodCall_closure: function ClipboardMessageHandler_getDataMethodCall_closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_getDataMethodCall_closure0: function ClipboardMessageHandler_getDataMethodCall_closure0(t0) {
      this.callback = t0;
    },
    ClipboardAPICopyStrategy: function ClipboardAPICopyStrategy() {
    },
    ClipboardAPIPasteStrategy: function ClipboardAPIPasteStrategy() {
    },
    ExecCommandCopyStrategy: function ExecCommandCopyStrategy() {
    },
    ExecCommandPasteStrategy: function ExecCommandPasteStrategy() {
    },
    CanvasKitCanvas: function CanvasKitCanvas(t0) {
      this.__engine$_canvas = t0;
    },
    _RegisteredFont: function _RegisteredFont() {
    },
    SkPaint: function SkPaint(t0, t1, t2) {
      var _ = this;
      _._blendMode = t0;
      _._style = t1;
      _._strokeWidth = 0;
      _._isAntiAlias = true;
      _._color = t2;
      _._skiaObject = _._maskFilter = _._shader = null;
    },
    SkPath: function SkPath(t0) {
      this._skPath = t0;
      this._fillType = null;
    },
    SkParagraphStyle: function SkParagraphStyle() {
      this._fontFamily = this._textDirection = this.skParagraphStyle = null;
    },
    SkiaObject: function SkiaObject() {
    },
    SkiaObjects_closure: function SkiaObjects_closure() {
    },
    closure12: function closure12() {
    },
    DomCanvas: function DomCanvas(t0, t1, t2, t3) {
      var _ = this;
      _.rootElement = t0;
      _.SaveElementStackTracking__saveStack = t1;
      _.SaveElementStackTracking__elementStack = t2;
      _.SaveElementStackTracking__currentTransform = t3;
    },
    DomRenderer: function DomRenderer(t0) {
      var _ = this;
      _._glassPaneElement = _._staleHotRestartState = _._sceneElement = _._sceneHostElement = _._canvasKitScript = _._viewportMeta = _._styleElement = _._resizeSubscription = null;
      _.rootElement = t0;
      _._debugFrameStatistics = null;
    },
    DomRenderer_reset_closure: function DomRenderer_reset_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.initialInnerWidth = t2;
    },
    EngineCanvas: function EngineCanvas() {
    },
    _SaveStackEntry: function _SaveStackEntry(t0, t1) {
      this.transform = t0;
      this.clipStack = t1;
    },
    _SaveClipEntry: function _SaveClipEntry(t0, t1, t2, t3) {
      var _ = this;
      _.rect = t0;
      _.rrect = t1;
      _.path = t2;
      _.currentTransform = t3;
    },
    BrowserHistory: function BrowserHistory() {
      this._userProvidedRouteName = this._unsubscribe = this._locationStrategy = null;
    },
    BrowserHistory__popStateListener_closure: function BrowserHistory__popStateListener_closure() {
    },
    BrowserHistory__popStateListener_closure0: function BrowserHistory__popStateListener_closure0() {
    },
    _SaveElementStackEntry: function _SaveElementStackEntry(t0, t1) {
      this.savedElement = t0;
      this.transform = t1;
    },
    SaveElementStackTracking: function SaveElementStackTracking() {
    },
    HtmlImage: function HtmlImage() {
    },
    Keyboard: function Keyboard(t0) {
      var _ = this;
      _._keydownTimers = t0;
      _._keyupListener = _._keydownListener = null;
      _._lastMetaState = 0;
    },
    Keyboard$__closure: function Keyboard$__closure(t0) {
      this.$this = t0;
    },
    Keyboard$__closure0: function Keyboard$__closure0(t0) {
      this.$this = t0;
    },
    Keyboard$__closure1: function Keyboard$__closure1(t0) {
      this.$this = t0;
    },
    Keyboard__handleHtmlEvent_closure: function Keyboard__handleHtmlEvent_closure(t0, t1, t2) {
      this.$this = t0;
      this.timerKey = t1;
      this.event = t2;
    },
    EnginePictureRecorder: function EnginePictureRecorder() {
      this.cullRect = this.__engine$_canvas = null;
      this._isRecording = false;
    },
    EnginePicture: function EnginePicture(t0) {
      this.recordingCanvas = t0;
    },
    PlatformViewRegistry: function PlatformViewRegistry(t0, t1) {
      this.registeredFactories = t0;
      this._createdViews = t1;
    },
    PointerBinding: function PointerBinding(t0) {
      var _ = this;
      _.glassPaneElement = t0;
      _._pointerDataConverter = _._adapter = _._detector = null;
    },
    PointerSupportDetector: function PointerSupportDetector() {
    },
    _BaseAdapter: function _BaseAdapter() {
    },
    _BaseAdapter_addEventListener_closure: function _BaseAdapter_addEventListener_closure(t0, t1, t2) {
      this.$this = t0;
      this.acceptOutsideGlasspane = t1;
      this.handler = t2;
    },
    _WheelEventListenerMixin: function _WheelEventListenerMixin() {
    },
    _WheelEventListenerMixin__addWheelEventListener_closure: function _WheelEventListenerMixin__addWheelEventListener_closure(t0) {
      this.handler = t0;
    },
    _SanitizedDetails: function _SanitizedDetails(t0, t1) {
      this.change = t0;
      this.buttons = t1;
    },
    _ButtonSanitizer: function _ButtonSanitizer() {
      this._pressedButtons = 0;
    },
    _PointerAdapter: function _PointerAdapter(t0, t1, t2, t3) {
      var _ = this;
      _._sanitizers = t0;
      _.glassPaneElement = t1;
      _._callback = t2;
      _._pointerDataConverter = t3;
    },
    _PointerAdapter__ensureSanitizer_closure: function _PointerAdapter__ensureSanitizer_closure() {
    },
    _PointerAdapter__addPointerEventListener_closure: function _PointerAdapter__addPointerEventListener_closure(t0) {
      this.handler = t0;
    },
    _PointerAdapter_setup_closure: function _PointerAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure0: function _PointerAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup__closure: function _PointerAdapter_setup__closure(t0) {
      this.sanitizer = t0;
    },
    _PointerAdapter_setup_closure1: function _PointerAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure2: function _PointerAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure3: function _PointerAdapter_setup_closure3(t0) {
      this.$this = t0;
    },
    _TouchAdapter: function _TouchAdapter(t0, t1, t2, t3) {
      var _ = this;
      _._pressedTouches = t0;
      _.glassPaneElement = t1;
      _._callback = t2;
      _._pointerDataConverter = t3;
    },
    _TouchAdapter__addTouchEventListener_closure: function _TouchAdapter__addTouchEventListener_closure(t0) {
      this.handler = t0;
    },
    _TouchAdapter_setup_closure: function _TouchAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _TouchAdapter_setup_closure0: function _TouchAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _TouchAdapter_setup_closure1: function _TouchAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _TouchAdapter_setup_closure2: function _TouchAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _MouseAdapter: function _MouseAdapter(t0, t1, t2, t3) {
      var _ = this;
      _._sanitizer = t0;
      _.glassPaneElement = t1;
      _._callback = t2;
      _._pointerDataConverter = t3;
    },
    _MouseAdapter__addMouseEventListener_closure: function _MouseAdapter__addMouseEventListener_closure(t0) {
      this.handler = t0;
    },
    _MouseAdapter_setup_closure: function _MouseAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _MouseAdapter_setup_closure0: function _MouseAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _MouseAdapter_setup_closure1: function _MouseAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _MouseAdapter_setup_closure2: function _MouseAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _PointerState: function _PointerState(t0, t1) {
      var _ = this;
      _._pointer = null;
      _.down = false;
      _.x = t0;
      _.y = t1;
    },
    PointerDataConverter: function PointerDataConverter(t0) {
      this._pointers = t0;
    },
    PointerDataConverter__ensureStateForPointer_closure: function PointerDataConverter__ensureStateForPointer_closure(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    Profiler: function Profiler() {
    },
    _RRectRenderer: function _RRectRenderer() {
    },
    _RRectToCanvasRenderer: function _RRectToCanvasRenderer(t0) {
      this.context = t0;
    },
    AccessibilityAnnouncements: function AccessibilityAnnouncements() {
      this.__engine$_element = this._removeElementTimer = null;
    },
    AccessibilityAnnouncements$__closure: function AccessibilityAnnouncements$__closure(t0) {
      this.$this = t0;
    },
    AccessibilityAnnouncements_handleMessage_closure: function AccessibilityAnnouncements_handleMessage_closure(t0) {
      this.$this = t0;
    },
    _CheckableKind: function _CheckableKind(t0) {
      this.__engine$_name = t0;
    },
    Checkable: function Checkable(t0) {
      this.__engine$_kind = null;
      this.semanticsObject = t0;
    },
    ImageRoleManager: function ImageRoleManager(t0) {
      this._auxiliaryImageElement = null;
      this.semanticsObject = t0;
    },
    Incrementable: function Incrementable(t0, t1) {
      var _ = this;
      _.__engine$_element = t0;
      _._currentSurrogateValue = 1;
      _._gestureModeListener = null;
      _._pendingResync = false;
      _.semanticsObject = t1;
    },
    Incrementable_closure: function Incrementable_closure(t0, t1) {
      this.$this = t0;
      this.semanticsObject = t1;
    },
    Incrementable_closure0: function Incrementable_closure0(t0) {
      this.$this = t0;
    },
    LabelAndValue: function LabelAndValue(t0) {
      this._auxiliaryValueElement = null;
      this.semanticsObject = t0;
    },
    LiveRegion: function LiveRegion(t0) {
      this.semanticsObject = t0;
    },
    Scrollable0: function Scrollable0(t0) {
      var _ = this;
      _._scrollListener = _._gestureModeListener = null;
      _._effectiveNeutralScrollPosition = 0;
      _.semanticsObject = t0;
    },
    Scrollable_update_closure: function Scrollable_update_closure(t0) {
      this.$this = t0;
    },
    Scrollable_update_closure0: function Scrollable_update_closure0(t0) {
      this.$this = t0;
    },
    Scrollable_update_closure1: function Scrollable_update_closure1(t0) {
      this.$this = t0;
    },
    SemanticsUpdate: function SemanticsUpdate(t0) {
      this.__engine$_nodeUpdates = t0;
    },
    SemanticsNodeUpdate: function SemanticsNodeUpdate(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.id = t0;
      _.flags = t1;
      _.actions = t2;
      _.textSelectionBase = t3;
      _.textSelectionExtent = t4;
      _.scrollChildren = t5;
      _.scrollIndex = t6;
      _.scrollPosition = t7;
      _.scrollExtentMax = t8;
      _.scrollExtentMin = t9;
      _.rect = t10;
      _.label = t11;
      _.hint = t12;
      _.value = t13;
      _.increasedValue = t14;
      _.decreasedValue = t15;
      _.textDirection = t16;
      _.transform = t17;
      _.childrenInTraversalOrder = t18;
      _.childrenInHitTestOrder = t19;
      _.additionalActions = t20;
    },
    Role: function Role(t0) {
      this.__engine$_name = t0;
    },
    closure13: function closure13() {
    },
    closure14: function closure14() {
    },
    closure15: function closure15() {
    },
    closure16: function closure16() {
    },
    closure17: function closure17() {
    },
    closure18: function closure18() {
    },
    closure19: function closure19() {
    },
    closure20: function closure20() {
    },
    RoleManager: function RoleManager() {
    },
    SemanticsObject: function SemanticsObject(t0, t1, t2, t3) {
      var _ = this;
      _._additionalActions = _._childrenInHitTestOrder = _.__engine$_childrenInTraversalOrder = _.__engine$_transform = _._textDirection = _.__engine$_decreasedValue = _.__engine$_increasedValue = _.__engine$_value = _.__engine$_hint = _.__engine$_label = _.__engine$_rect = _.__engine$_scrollExtentMin = _.__engine$_scrollExtentMax = _.__engine$_scrollPosition = _.__engine$_scrollIndex = _._scrollChildren = _._textSelectionExtent = _._textSelectionBase = _.__engine$_actions = _.__engine$_flags = null;
      _.id = t0;
      _.owner = t1;
      _.element = t2;
      _._dirtyFields = -1;
      _.__engine$_parent = _._childContainerElement = null;
      _._roleManagers = t3;
      _.horizontalContainerAdjustment = _.verticalContainerAdjustment = 0;
      _._previousChildrenInTraversalOrder = null;
    },
    AccessibilityMode: function AccessibilityMode(t0) {
      this.__engine$_name = t0;
    },
    GestureMode: function GestureMode(t0) {
      this.__engine$_name = t0;
    },
    EngineSemanticsOwner: function EngineSemanticsOwner(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._semanticsTree = t0;
      _._attachments = t1;
      _._detachments = t2;
      _._oneTimePostUpdateCallbacks = t3;
      _._rootSemanticsElement = null;
      _._now = t4;
      _.semanticsHelper = t5;
      _._semanticsEnabled = false;
      _._gestureMode = t6;
      _._gestureModeClock = null;
      _._gestureModeListeners = t7;
    },
    EngineSemanticsOwner$__closure: function EngineSemanticsOwner$__closure(t0) {
      this.$this = t0;
    },
    EngineSemanticsOwner_closure: function EngineSemanticsOwner_closure() {
    },
    EngineSemanticsOwner__getGestureModeClock_closure: function EngineSemanticsOwner__getGestureModeClock_closure(t0) {
      this.$this = t0;
    },
    SemanticsHelper: function SemanticsHelper(t0) {
      this._semanticsEnabler = t0;
    },
    SemanticsEnabler: function SemanticsEnabler() {
    },
    DesktopSemanticsEnabler: function DesktopSemanticsEnabler() {
      var _ = this;
      _._semanticsPlaceholder = _.semanticsActivationTimer = null;
      _.semanticsActivationAttempts = 0;
      _._schedulePlaceholderRemoval = false;
    },
    DesktopSemanticsEnabler_tryEnableSemantics_closure: function DesktopSemanticsEnabler_tryEnableSemantics_closure(t0) {
      this.$this = t0;
    },
    DesktopSemanticsEnabler_prepareAccesibilityPlaceholder_closure: function DesktopSemanticsEnabler_prepareAccesibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler: function MobileSemanticsEnabler() {
      var _ = this;
      _._semanticsPlaceholder = _.semanticsActivationTimer = null;
      _.semanticsActivationAttempts = 0;
      _._schedulePlaceholderRemoval = false;
    },
    MobileSemanticsEnabler_tryEnableSemantics_closure: function MobileSemanticsEnabler_tryEnableSemantics_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler_prepareAccesibilityPlaceholder_closure: function MobileSemanticsEnabler_prepareAccesibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    Tappable: function Tappable(t0) {
      this._clickListener = null;
      this.semanticsObject = t0;
    },
    Tappable_update_closure: function Tappable_update_closure(t0) {
      this.$this = t0;
    },
    SemanticsTextEditingStrategy: function SemanticsTextEditingStrategy(t0, t1) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _._inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
    },
    TextField: function TextField(t0) {
      this.textEditingElement = null;
      this.semanticsObject = t0;
    },
    TextField__initializeForBlink_closure: function TextField__initializeForBlink_closure(t0) {
      this.$this = t0;
    },
    TextField__initializeForWebkit_closure: function TextField__initializeForWebkit_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    TextField__initializeForWebkit_closure0: function TextField__initializeForWebkit_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _TypedDataBuffer: function _TypedDataBuffer() {
    },
    _IntBuffer: function _IntBuffer() {
    },
    Uint8Buffer: function Uint8Buffer(t0, t1) {
      this.__engine$_buffer = t0;
      this.__engine$_length = t1;
    },
    MethodCall: function MethodCall(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    StringCodec: function StringCodec() {
    },
    JSONMessageCodec: function JSONMessageCodec() {
    },
    JSONMethodCodec: function JSONMethodCodec() {
    },
    StandardMessageCodec: function StandardMessageCodec() {
    },
    StandardMessageCodec_writeValue_closure: function StandardMessageCodec_writeValue_closure(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    StandardMethodCodec: function StandardMethodCodec() {
    },
    WriteBuffer: function WriteBuffer() {
      this._eightBytesAsList = this._eightBytes = this.__engine$_buffer = null;
    },
    ReadBuffer: function ReadBuffer(t0) {
      this.data = t0;
      this.__engine$_position = 0;
    },
    EngineGradient: function EngineGradient() {
    },
    GradientLinear: function GradientLinear(t0, t1, t2, t3, t4) {
      var _ = this;
      _.from = t0;
      _.to = t1;
      _.colors = t2;
      _.colorStops = t3;
      _.tileMode = t4;
    },
    SurfaceShadowData: function SurfaceShadowData(t0, t1) {
      this.blurWidth = t0;
      this.offset = t1;
    },
    _DomClip: function _DomClip() {
    },
    PersistedClipRect: function PersistedClipRect(t0, t1, t2, t3, t4) {
      var _ = this;
      _.rect = t0;
      _._DomClip__childContainer = t1;
      _._oldLayer = t2;
      _.__engine$_children = t3;
      _.__engine$_state = t4;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    PersistedPhysicalShape: function PersistedPhysicalShape(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.path = t0;
      _.pathBounds = t1;
      _.elevation = t2;
      _.color = t3;
      _.shadowColor = t4;
      _.clipBehavior = t5;
      _._clipElement = null;
      _._DomClip__childContainer = t6;
      _._oldLayer = t7;
      _.__engine$_children = t8;
      _.__engine$_state = t9;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    PersistedClipPath: function PersistedClipPath(t0, t1, t2, t3) {
      var _ = this;
      _.clipPath = t0;
      _._clipElement = null;
      _._oldLayer = t1;
      _.__engine$_children = t2;
      _.__engine$_state = t3;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    PersistedOffset: function PersistedOffset(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dx = t0;
      _.dy = t1;
      _._oldLayer = t2;
      _.__engine$_children = t3;
      _.__engine$_state = t4;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    PersistedOpacity: function PersistedOpacity(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alpha = t0;
      _.offset = t1;
      _._oldLayer = t2;
      _.__engine$_children = t3;
      _.__engine$_state = t4;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    SurfacePaint: function SurfacePaint(t0) {
      this._paintData = t0;
      this._frozen = false;
    },
    SurfacePaintData: function SurfacePaintData() {
      var _ = this;
      _.strokeJoin = _.strokeCap = _.strokeWidth = _.style = _.blendMode = null;
      _.isAntiAlias = true;
      _.colorFilter = _.filterQuality = _.maskFilter = _.shader = _.color = null;
    },
    SurfacePath: function SurfacePath(t0, t1) {
      this.subpaths = t0;
      this._fillType = t1;
    },
    _PaintRequest: function _PaintRequest(t0, t1) {
      this.canvasSize = t0;
      this.paintCallback = t1;
    },
    PersistedStandardPicture: function PersistedStandardPicture(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._didApplyPaint = t0;
      _.__engine$_canvas = null;
      _.dx = t1;
      _.dy = t2;
      _.picture = t3;
      _.localPaintBounds = t4;
      _._exactLocalCullRect = _._exactGlobalCullRect = _._optimalLocalCullRect = null;
      _.__engine$_state = t5;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    PersistedStandardPicture__applyBitmapPaint_closure: function PersistedStandardPicture__applyBitmapPaint_closure(t0) {
      this.$this = t0;
    },
    PersistedPicture: function PersistedPicture() {
    },
    RecordingCanvas: function RecordingCanvas(t0, t1) {
      var _ = this;
      _._paintBounds = t0;
      _._pictureBounds = null;
      _._commands = t1;
      _._debugRecordingEnded = _._didDraw = _._hasArbitraryPaint = false;
      _._saveCount = 1;
    },
    PaintCommand: function PaintCommand() {
    },
    DrawCommand: function DrawCommand() {
    },
    PaintSave: function PaintSave() {
    },
    PaintRestore: function PaintRestore() {
    },
    PaintTranslate: function PaintTranslate(t0, t1) {
      this.dx = t0;
      this.dy = t1;
    },
    PaintScale: function PaintScale(t0, t1) {
      this.sx = t0;
      this.sy = t1;
    },
    PaintRotate: function PaintRotate(t0) {
      this.radians = t0;
    },
    PaintTransform: function PaintTransform(t0) {
      this.matrix4 = t0;
    },
    PaintClipRect: function PaintClipRect(t0, t1, t2, t3, t4) {
      var _ = this;
      _.rect = t0;
      _.isClippedOut = false;
      _.leftBound = t1;
      _.topBound = t2;
      _.rightBound = t3;
      _.bottomBound = t4;
    },
    PaintClipRRect: function PaintClipRRect(t0, t1, t2, t3, t4) {
      var _ = this;
      _.rrect = t0;
      _.isClippedOut = false;
      _.leftBound = t1;
      _.topBound = t2;
      _.rightBound = t3;
      _.bottomBound = t4;
    },
    PaintClipPath: function PaintClipPath(t0, t1, t2, t3, t4) {
      var _ = this;
      _.path = t0;
      _.isClippedOut = false;
      _.leftBound = t1;
      _.topBound = t2;
      _.rightBound = t3;
      _.bottomBound = t4;
    },
    PaintDrawLine: function PaintDrawLine(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.p1 = t0;
      _.p2 = t1;
      _.paint = t2;
      _.isClippedOut = false;
      _.leftBound = t3;
      _.topBound = t4;
      _.rightBound = t5;
      _.bottomBound = t6;
    },
    PaintDrawRect: function PaintDrawRect(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.rect = t0;
      _.paint = t1;
      _.isClippedOut = false;
      _.leftBound = t2;
      _.topBound = t3;
      _.rightBound = t4;
      _.bottomBound = t5;
    },
    PaintDrawRRect: function PaintDrawRRect(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.rrect = t0;
      _.paint = t1;
      _.isClippedOut = false;
      _.leftBound = t2;
      _.topBound = t3;
      _.rightBound = t4;
      _.bottomBound = t5;
    },
    PaintDrawDRRect: function PaintDrawDRRect(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.outer = t0;
      _.inner = t1;
      _.paint = t2;
      _.isClippedOut = false;
      _.leftBound = t3;
      _.topBound = t4;
      _.rightBound = t5;
      _.bottomBound = t6;
    },
    PaintDrawCircle: function PaintDrawCircle(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.c = t0;
      _.radius = t1;
      _.paint = t2;
      _.isClippedOut = false;
      _.leftBound = t3;
      _.topBound = t4;
      _.rightBound = t5;
      _.bottomBound = t6;
    },
    PaintDrawPath: function PaintDrawPath(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.path = t0;
      _.paint = t1;
      _.isClippedOut = false;
      _.leftBound = t2;
      _.topBound = t3;
      _.rightBound = t4;
      _.bottomBound = t5;
    },
    PaintDrawShadow: function PaintDrawShadow(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.path = t0;
      _.color = t1;
      _.elevation = t2;
      _.transparentOccluder = t3;
      _.isClippedOut = false;
      _.leftBound = t4;
      _.topBound = t5;
      _.rightBound = t6;
      _.bottomBound = t7;
    },
    PaintDrawParagraph: function PaintDrawParagraph(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.paragraph = t0;
      _.offset = t1;
      _.isClippedOut = false;
      _.leftBound = t2;
      _.topBound = t3;
      _.rightBound = t4;
      _.bottomBound = t5;
    },
    Subpath: function Subpath(t0, t1, t2) {
      var _ = this;
      _.startX = t0;
      _.startY = t1;
      _.currentY = _.currentX = 0;
      _.commands = t2;
    },
    PathCommand: function PathCommand() {
    },
    MoveTo: function MoveTo(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.type = t2;
    },
    LineTo: function LineTo(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.type = t2;
    },
    Ellipse: function Ellipse(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.x = t0;
      _.y = t1;
      _.radiusX = t2;
      _.radiusY = t3;
      _.rotation = t4;
      _.startAngle = t5;
      _.endAngle = t6;
      _.anticlockwise = t7;
      _.type = t8;
    },
    QuadraticCurveTo: function QuadraticCurveTo(t0, t1, t2, t3, t4) {
      var _ = this;
      _.x1 = t0;
      _.y1 = t1;
      _.x2 = t2;
      _.y2 = t3;
      _.type = t4;
    },
    RectCommand: function RectCommand(t0, t1, t2, t3, t4) {
      var _ = this;
      _.x = t0;
      _.y = t1;
      _.width = t2;
      _.height = t3;
      _.type = t4;
    },
    RRectCommand: function RRectCommand(t0, t1) {
      this.rrect = t0;
      this.type = t1;
    },
    CloseCommand: function CloseCommand(t0) {
      this.type = t0;
    },
    _PaintBounds: function _PaintBounds(t0, t1) {
      var _ = this;
      _.maxPaintBounds = t0;
      _._didPaintInsideClipArea = false;
      _._clipStack = _.__engine$_transforms = _.__engine$_bottom = _.__engine$_right = _.__engine$_top = _.__engine$_left = null;
      _._currentMatrixIsIdentity = true;
      _._currentMatrix = t1;
      _._clipRectInitialized = false;
      _._currentClipBottom = _._currentClipRight = _._currentClipTop = _._currentClipLeft = 0;
    },
    SurfaceScene: function SurfaceScene(t0) {
      this.webOnlyRootElement = t0;
    },
    PersistedScene: function PersistedScene(t0, t1, t2) {
      var _ = this;
      _._oldLayer = t0;
      _.__engine$_children = t1;
      _.__engine$_state = t2;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    SurfaceSceneBuilder: function SurfaceSceneBuilder(t0) {
      this._surfaceStack = t0;
    },
    SurfaceSceneBuilder_build_closure: function SurfaceSceneBuilder_build_closure(t0) {
      this.$this = t0;
    },
    SurfaceSceneBuilder_build_closure0: function SurfaceSceneBuilder_build_closure0(t0) {
      this.$this = t0;
    },
    FrameReference: function FrameReference(t0) {
      this.value = t0;
    },
    commitScene_closure: function commitScene_closure() {
    },
    PersistedSurfaceState: function PersistedSurfaceState(t0) {
      this.__engine$_name = t0;
    },
    PersistedSurface: function PersistedSurface() {
    },
    PersistedLeafSurface: function PersistedLeafSurface() {
    },
    PersistedContainerSurface: function PersistedContainerSurface() {
    },
    PersistedContainerSurface__updateManyToMany_insertDomNodeIfMoved: function PersistedContainerSurface__updateManyToMany_insertDomNodeIfMoved(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.containerElement = t2;
    },
    PersistedContainerSurface__matchChildren_closure: function PersistedContainerSurface__matchChildren_closure() {
    },
    _PersistedSurfaceMatch: function _PersistedSurfaceMatch(t0, t1, t2) {
      this.newChild = t0;
      this.oldChildIndex = t1;
      this.matchQuality = t2;
    },
    PersistedTransform: function PersistedTransform(t0, t1, t2, t3) {
      var _ = this;
      _.matrix4 = t0;
      _._oldLayer = t1;
      _.__engine$_children = t2;
      _.__engine$_state = t3;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    FontCollection: function FontCollection() {
      this._testFontManager = this._assetFontManager = null;
    },
    FontManager: function FontManager(t0) {
      this._fontLoadingFutures = t0;
    },
    FontManager__loadFontFace_closure: function FontManager__loadFontFace_closure(t0) {
      this.fontFace = t0;
    },
    FontManager__loadFontFace_closure0: function FontManager__loadFontFace_closure0(t0) {
      this.family = t0;
    },
    _PolyfillFontManager: function _PolyfillFontManager(t0) {
      this._fontLoadingFutures = t0;
    },
    _PolyfillFontManager_registerAsset__watchWidth: function _PolyfillFontManager_registerAsset__watchWidth(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.paragraph = t1;
      _.sansSerifWidth = t2;
      _.completer = t3;
      _.family = t4;
    },
    _PolyfillFontManager_registerAsset_closure: function _PolyfillFontManager_registerAsset_closure(t0) {
      this.fontStyleMap = t0;
    },
    LineBreakType: function LineBreakType(t0) {
      this.__engine$_name = t0;
    },
    LineBreakResult: function LineBreakResult(t0, t1) {
      this.index = t0;
      this.type = t1;
    },
    RulerManager: function RulerManager(t0, t1, t2) {
      var _ = this;
      _.rulerCacheCapacity = t0;
      _._rulerHost = t1;
      _._rulers = t2;
      _._rulerCacheCleanupScheduled = false;
    },
    RulerManager__scheduleRulerCacheCleanup_closure: function RulerManager__scheduleRulerCacheCleanup_closure(t0) {
      this.$this = t0;
    },
    RulerManager__evictAllRulers_closure: function RulerManager__evictAllRulers_closure() {
    },
    RulerManager_cleanUpRulerCache_closure: function RulerManager_cleanUpRulerCache_closure() {
    },
    TextMeasurementService: function TextMeasurementService() {
    },
    DomTextMeasurementService: function DomTextMeasurementService() {
    },
    CanvasTextMeasurementService: function CanvasTextMeasurementService(t0) {
      this._canvasContext = t0;
    },
    LinesCalculator: function LinesCalculator(t0, t1, t2, t3) {
      var _ = this;
      _._canvasContext = t0;
      _.__engine$_paragraph = t1;
      _._maxWidth = t2;
      _.lines = t3;
      _._chunkStart = _._lineStart = 0;
      _._reachedMaxLines = false;
      _._cachedEllipsisWidth = null;
    },
    MaxIntrinsicCalculator: function MaxIntrinsicCalculator(t0, t1, t2) {
      var _ = this;
      _._canvasContext = t0;
      _.__engine$_text = t1;
      _._style = t2;
      _._lastHardLineEnd = _.value = 0;
    },
    EngineLineMetrics: function EngineLineMetrics(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.displayText = t0;
      _.startIndex = t1;
      _.endIndex = t2;
      _.endIndexWithoutNewlines = t3;
      _.hardBreak = t4;
      _.width = t5;
      _.left = t6;
      _.lineNumber = t7;
    },
    EngineParagraph: function EngineParagraph(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._paragraphElement = t0;
      _._geometricStyle = t1;
      _._plainText = t2;
      _._paint = t3;
      _._textAlign = t4;
      _._textDirection = t5;
      _._background = t6;
      _._measurementResult = null;
      _._didExceedMaxLines = false;
      _._lastUsedConstraints = null;
      _._alignOffset = 0;
    },
    EngineParagraphStyle: function EngineParagraphStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._textAlign = t0;
      _._textDirection = t1;
      _._fontWeight = t2;
      _._fontStyle = t3;
      _._maxLines = t4;
      _._fontFamily = t5;
      _._fontSize = t6;
      _._height = t7;
      _._textHeightBehavior = t8;
      _._strutStyle = t9;
      _._ellipsis = t10;
      _._locale = t11;
    },
    EngineTextStyle: function EngineTextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _._color = t0;
      _._decoration = t1;
      _._decorationColor = t2;
      _._decorationStyle = t3;
      _._fontWeight = t4;
      _._fontStyle = t5;
      _._textBaseline = t6;
      _._isFontFamilyProvided = t7;
      _._fontFamily = t8;
      _._fontFamilyFallback = t9;
      _._fontSize = t10;
      _._letterSpacing = t11;
      _._wordSpacing = t12;
      _._height = t13;
      _._locale = t14;
      _._background = t15;
      _._foreground = t16;
      _._shadows = t17;
    },
    EngineParagraphBuilder: function EngineParagraphBuilder(t0, t1, t2, t3) {
      var _ = this;
      _._paragraphElement = t0;
      _._paragraphStyle = t1;
      _._ops = t2;
      _._placeholderScales = t3;
    },
    EngineParagraphBuilder__buildRichText_currentElement: function EngineParagraphBuilder__buildRichText_currentElement(t0, t1) {
      this.$this = t0;
      this.elementStack = t1;
    },
    ParagraphGeometricStyle: function ParagraphGeometricStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.fontWeight = t0;
      _.fontStyle = t1;
      _.fontFamily = t2;
      _.fontSize = t3;
      _.lineHeight = t4;
      _.maxLines = t5;
      _.letterSpacing = t6;
      _.wordSpacing = t7;
      _.decoration = t8;
      _.ellipsis = t9;
      _.shadows = t10;
      _._cssFontString = _._cachedHashCode = null;
    },
    TextDimensions: function TextDimensions(t0) {
      this.__engine$_element = t0;
      this._cachedBoundingClientRect = null;
    },
    ParagraphRuler: function ParagraphRuler(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.style = t0;
      _.rulerManager = t1;
      _._probe = t2;
      _._cachedAlphabeticBaseline = null;
      _._singleLineHost = t3;
      _.singleLineDimensions = t4;
      _._minIntrinsicHost = t5;
      _.minIntrinsicDimensions = t6;
      _._constrainedHost = t7;
      _.constrainedDimensions = t8;
      _._lineHeightDimensions = _._lineHeightHost = null;
      _._hitCount = 0;
      _._debugIsDisposed = false;
      _.__engine$_paragraph = null;
      _._measurementCache = t9;
      _._mruList = t10;
    },
    MeasurementResult: function MeasurementResult(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.constraintWidth = t0;
      _.isSingleLine = t1;
      _.width = t2;
      _.height = t3;
      _.naturalHeight = t4;
      _.lineHeight = t5;
      _.minIntrinsicWidth = t6;
      _.maxIntrinsicWidth = t7;
      _.alphabeticBaseline = t8;
      _.ideographicBaseline = t9;
      _.lines = t10;
      _.textAlign = t11;
      _.textDirection = t12;
    },
    EngineInputType: function EngineInputType() {
    },
    TextInputType: function TextInputType() {
    },
    NumberInputType: function NumberInputType() {
    },
    PhoneInputType: function PhoneInputType() {
    },
    EmailInputType: function EmailInputType() {
    },
    UrlInputType: function UrlInputType() {
    },
    MultilineInputType: function MultilineInputType() {
    },
    EditingState: function EditingState(t0, t1, t2) {
      this.text = t0;
      this.baseOffset = t1;
      this.extentOffset = t2;
    },
    InputConfiguration: function InputConfiguration(t0, t1, t2, t3) {
      var _ = this;
      _.inputType = t0;
      _.inputAction = t1;
      _.obscureText = t2;
      _.autocorrect = t3;
    },
    GloballyPositionedTextEditingStrategy: function GloballyPositionedTextEditingStrategy(t0, t1) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _._inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
    },
    DefaultTextEditingStrategy: function DefaultTextEditingStrategy() {
    },
    DefaultTextEditingStrategy_addEventHandlers_closure: function DefaultTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1() {
    },
    IOSTextEditingStrategy: function IOSTextEditingStrategy(t0, t1) {
      var _ = this;
      _._positionInputElementTimer = null;
      _._canPosition = true;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _._inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
    },
    IOSTextEditingStrategy_addEventHandlers_closure: function IOSTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy_addEventHandlers_closure0: function IOSTextEditingStrategy_addEventHandlers_closure0(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy__addTapListener_closure: function IOSTextEditingStrategy__addTapListener_closure(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy__schedulePlacement_closure: function IOSTextEditingStrategy__schedulePlacement_closure(t0) {
      this.$this = t0;
    },
    AndroidTextEditingStrategy: function AndroidTextEditingStrategy(t0, t1) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _._inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
    },
    AndroidTextEditingStrategy_addEventHandlers_closure: function AndroidTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    FirefoxTextEditingStrategy: function FirefoxTextEditingStrategy(t0, t1) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _._inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
    },
    FirefoxTextEditingStrategy_addEventHandlers_closure: function FirefoxTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    FirefoxTextEditingStrategy_addEventHandlers_closure0: function FirefoxTextEditingStrategy_addEventHandlers_closure0(t0) {
      this.$this = t0;
    },
    TextEditingChannel: function TextEditingChannel(t0) {
      this.implementation = t0;
    },
    HybridTextEditing: function HybridTextEditing() {
      var _ = this;
      _._clientId = _._customEditingElement = _._defaultEditingElement = _.channel = null;
      _.isEditing = false;
      _._configuration = null;
    },
    HybridTextEditing__startEditing_closure0: function HybridTextEditing__startEditing_closure0(t0) {
      this.$this = t0;
    },
    HybridTextEditing__startEditing_closure: function HybridTextEditing__startEditing_closure(t0) {
      this.$this = t0;
    },
    EditableTextStyle: function EditableTextStyle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.fontSize = t0;
      _.fontWeight = t1;
      _.fontFamily = t2;
      _.textAlign = t3;
      _.textDirection = t4;
    },
    EditableTextGeometry: function EditableTextGeometry(t0, t1, t2) {
      this.width = t0;
      this.height = t1;
      this.globalTransform = t2;
    },
    TransformKind: function TransformKind(t0) {
      this.__engine$_name = t0;
    },
    Matrix40: function Matrix40(t0) {
      this.__engine$_m4storage = t0;
    },
    Vector30: function Vector30(t0) {
      this.__engine$_v3storage = t0;
    },
    WebExperiments: function WebExperiments() {
      this._useCanvasText = null;
    },
    WebExperiments$__closure: function WebExperiments$__closure() {
    },
    EngineWindow: function EngineWindow(t0, t1, t2, t3) {
      var _ = this;
      _._physicalSize = _._debugDevicePixelRatio = null;
      _._browserHistory = t0;
      _._onPlatformMessageZone = _._onPlatformMessage = _._onSemanticsActionZone = _._onSemanticsAction = _._onSemanticsEnabledChangedZone = _._onSemanticsEnabledChanged = _._onPointerDataPacketZone = _._onPointerDataPacket = _._onDrawFrameZone = _._onDrawFrame = _._onReportTimings = _._onBeginFrameZone = _._onBeginFrame = _._onMetricsChangedZone = _._onMetricsChanged = _._onPlatformBrightnessChangedZone = _._onPlatformBrightnessChanged = _._defaultRouteName = null;
      _._platformBrightness = t1;
      _._brightnessMediaQuery = t2;
      _._brightnessMediaQueryListener = null;
      _._accessibilityFeatures = t3;
    },
    EngineWindow__zonedPlatformMessageResponseCallback_closure: function EngineWindow__zonedPlatformMessageResponseCallback_closure(t0, t1) {
      this.registrationZone = t0;
      this.callback = t1;
    },
    EngineWindow__sendPlatformMessage_closure: function EngineWindow__sendPlatformMessage_closure(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EngineWindow__sendPlatformMessage_closure0: function EngineWindow__sendPlatformMessage_closure0(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EngineWindow__sendPlatformMessage_closure1: function EngineWindow__sendPlatformMessage_closure1(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EngineWindow__replyToPlatformMessage_closure: function EngineWindow__replyToPlatformMessage_closure(t0, t1) {
      this.callback = t0;
      this.data = t1;
    },
    EngineWindow__addBrightnessMediaQueryListener_closure: function EngineWindow__addBrightnessMediaQueryListener_closure(t0) {
      this.$this = t0;
    },
    EngineWindow__addBrightnessMediaQueryListener_closure0: function EngineWindow__addBrightnessMediaQueryListener_closure0(t0) {
      this.$this = t0;
    },
    _invoke3_closure: function _invoke3_closure(t0, t1, t2, t3) {
      var _ = this;
      _.callback = t0;
      _.arg1 = t1;
      _.arg2 = t2;
      _.arg3 = t3;
    },
    _DomCanvas_EngineCanvas_SaveElementStackTracking: function _DomCanvas_EngineCanvas_SaveElementStackTracking() {
    },
    _PersistedClipRect_PersistedContainerSurface__DomClip: function _PersistedClipRect_PersistedContainerSurface__DomClip() {
    },
    _PersistedPhysicalShape_PersistedContainerSurface__DomClip: function _PersistedPhysicalShape_PersistedContainerSurface__DomClip() {
    },
    __MouseAdapter__BaseAdapter__WheelEventListenerMixin: function __MouseAdapter__BaseAdapter__WheelEventListenerMixin() {
    },
    __PointerAdapter__BaseAdapter__WheelEventListenerMixin: function __PointerAdapter__BaseAdapter__WheelEventListenerMixin() {
    },
    JS_CONST: function JS_CONST() {
    },
    CastIterable_CastIterable: function(source, $S, $T) {
      if ($S._eval$1("EfficientLengthIterable<0>")._is(source))
        return new H._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new H.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    hexDigitValue: function(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    SubListIterable$: function(_iterable, _start, _endOrLength, $E) {
      P.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        P.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          H.throwExpression(P.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new H.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new H.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new H.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable: function(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      P.ArgumentError_checkNotNull(takeCount, _s9_);
      P.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new H.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new H.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable: function(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        P.ArgumentError_checkNotNull(count, _s5_);
        P.RangeError_checkNotNegative(count, _s5_);
        return new H.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      P.ArgumentError_checkNotNull(count, _s5_);
      P.RangeError_checkNotNegative(count, _s5_);
      return new H.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement: function() {
      return new P.StateError("No element");
    },
    IterableElementError_tooMany: function() {
      return new P.StateError("Too many elements");
    },
    IterableElementError_tooFew: function() {
      return new P.StateError("Too few elements");
    },
    Sort_sort: function(a, compare) {
      H.Sort__doSort(a, 0, J.get$length$asx(a) - 1, compare);
    },
    Sort__doSort: function(a, left, right, compare) {
      if (right - left <= 32)
        H.Sort__insertionSort(a, left, right, compare);
      else
        H.Sort__dualPivotQuicksort(a, left, right, compare);
    },
    Sort__insertionSort: function(a, left, right, compare) {
      var i, t1, el, j, j0;
      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          if (!(j > left && compare.call$2(t1.$index(a, j - 1), el) > 0))
            break;
          j0 = j - 1;
          t1.$indexSet(a, j, t1.$index(a, j0));
          j = j0;
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort: function(a, left, right, compare) {
      var t0, less, great, k, ak, comp, great0, less0, pivots_are_equal, t2,
        sixth = C.JSInt_methods._tdivFast$1(right - left + 1, 6),
        index1 = left + sixth,
        index5 = right - sixth,
        index3 = C.JSInt_methods._tdivFast$1(left + right, 2),
        index2 = index3 - sixth,
        index4 = index3 + sixth,
        t1 = J.getInterceptor$asx(a),
        el1 = t1.$index(a, index1),
        el2 = t1.$index(a, index2),
        el3 = t1.$index(a, index3),
        el4 = t1.$index(a, index4),
        el5 = t1.$index(a, index5);
      if (compare.call$2(el1, el2) > 0) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      if (compare.call$2(el4, el5) > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      if (compare.call$2(el1, el3) > 0) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      if (compare.call$2(el2, el3) > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (compare.call$2(el1, el4) > 0) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      if (compare.call$2(el3, el4) > 0) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      if (compare.call$2(el2, el5) > 0) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      if (compare.call$2(el2, el3) > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (compare.call$2(el4, el5) > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t1.$indexSet(a, index1, el1);
      t1.$indexSet(a, index3, el3);
      t1.$indexSet(a, index5, el5);
      t1.$indexSet(a, index2, t1.$index(a, left));
      t1.$indexSet(a, index4, t1.$index(a, right));
      less = left + 1;
      great = right - 1;
      if (J.$eq$(compare.call$2(el2, el4), 0)) {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp = compare.call$2(ak, el2);
          if (comp === 0)
            continue;
          if (comp < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else
            for (; true;) {
              comp = compare.call$2(t1.$index(a, great), el2);
              if (comp > 0) {
                --great;
                continue;
              } else {
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
        pivots_are_equal = true;
      } else {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) > 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) > 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        pivots_are_equal = false;
      }
      t2 = less - 1;
      t1.$indexSet(a, left, t1.$index(a, t2));
      t1.$indexSet(a, t2, el2);
      t2 = great + 1;
      t1.$indexSet(a, right, t1.$index(a, t2));
      t1.$indexSet(a, t2, el4);
      H.Sort__doSort(a, left, less - 2, compare);
      H.Sort__doSort(a, great + 2, right, compare);
      if (pivots_are_equal)
        return;
      if (less < index1 && great > index5) {
        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
          ++less;
        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) === 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) === 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) === 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        H.Sort__doSort(a, less, great, compare);
      } else
        H.Sort__doSort(a, less, great, compare);
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap: function CastMap(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap_forEach_closure: function CastMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1) {
      this.__internal$_current = null;
      this._iterator = t0;
      this._f = t1;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1) {
      this._iterator = t0;
      this._f = t1;
    },
    ExpandIterable: function ExpandIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterator: function ExpandIterator(t0, t1, t2) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._currentExpansion = t2;
      _.__internal$_current = null;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1) {
      this._iterator = t0;
      this._remaining = t1;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1) {
      this._iterator = t0;
      this._skipCount = t1;
    },
    SkipWhileIterable: function SkipWhileIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    SkipWhileIterator: function SkipWhileIterator(t0, t1) {
      this._iterator = t0;
      this._f = t1;
      this._hasSkipped = false;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator() {
    },
    WhereTypeIterable: function WhereTypeIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    WhereTypeIterator: function WhereTypeIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    Symbol: function Symbol(t0) {
      this.__internal$_name = t0;
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    ConstantMap__throwUnmodifiable: function() {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    instantiate1: function(f, T1) {
      var t1 = new H.Instantiation1(f, T1._eval$1("Instantiation1<0>"));
      t1.Instantiation$1(f);
      return t1;
    },
    unminifyOrTag: function(rawClassName) {
      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (typeof preserved == "string")
        return preserved;
      return rawClassName;
    },
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S: function(value) {
      var res;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0$(value);
      if (typeof res != "string")
        throw H.wrapException(H.argumentErrorValue(value));
      return res;
    },
    Primitives_objectHashCode: function(object) {
      var hash = object.$identityHash;
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object.$identityHash = hash;
      }
      return hash;
    },
    Primitives_parseInt: function(source, radix) {
      var match, decimalMatch, maxCharCode, digitsPart, t1, i, _null = null;
      if (typeof source != "string")
        H.throwExpression(H.argumentErrorValue(source));
      match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((C.JSString_methods._codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_parseDouble: function(source) {
      var result, trimmed;
      if (typeof source != "string")
        H.throwExpression(H.argumentErrorValue(source));
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = J.trim$0$s(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_objectTypeName: function(object) {
      var t1 = H.Primitives__objectTypeNameNewRti(object);
      return t1;
    },
    Primitives__objectTypeNameNewRti: function(object) {
      var dispatchName, $constructor, constructorName;
      if (object instanceof P.Object)
        return H._rtiToString(H.instanceType(object), null);
      if (J.getInterceptor$(object) === C.Interceptor_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = C.C_JS_CONST(object);
        if (H.Primitives__saneNativeClassName(dispatchName))
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && H.Primitives__saneNativeClassName(constructorName))
            return constructorName;
        }
      }
      return H._rtiToString(H.instanceType(object), null);
    },
    Primitives__saneNativeClassName: function($name) {
      var t1 = $name !== "Object" && $name !== "";
      return t1;
    },
    Primitives_dateNow: function() {
      return Date.now();
    },
    Primitives_initTicker: function() {
      var $window, performance;
      if ($.Primitives_timerFrequency != null)
        return;
      $.Primitives_timerFrequency = 1000;
      $.Primitives_timerTicks = H._js_helper_Primitives_dateNow$closure();
      if (typeof window == "undefined")
        return;
      $window = window;
      if ($window == null)
        return;
      performance = $window.performance;
      if (performance == null)
        return;
      if (typeof performance.now != "function")
        return;
      $.Primitives_timerFrequency = 1000000;
      $.Primitives_timerTicks = new H.Primitives_initTicker_closure(performance);
    },
    Primitives__fromCharCodeApply: function(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints: function(codePoints) {
      var t1, _i, i,
        a = H.setRuntimeTypeInfo([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, H.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!H._isInt(i))
          throw H.wrapException(H.argumentErrorValue(i));
        if (i <= 65535)
          a.push(i);
        else if (i <= 1114111) {
          a.push(55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          a.push(56320 + (i & 1023));
        } else
          throw H.wrapException(H.argumentErrorValue(i));
      }
      return H.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes: function(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!H._isInt(i))
          throw H.wrapException(H.argumentErrorValue(i));
        if (i < 0)
          throw H.wrapException(H.argumentErrorValue(i));
        if (i > 65535)
          return H.Primitives_stringFromCodePoints(charCodes);
      }
      return H.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List: function(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode: function(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((55296 | C.JSInt_methods._shrOtherPositive$1(bits, 10)) >>> 0, 56320 | bits & 1023);
        }
      }
      throw H.wrapException(P.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate: function(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._value);
      return receiver.date;
    },
    Primitives_getYear: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {
      var $arguments, namedArgumentList, t1 = {};
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      t1.argumentCount = positionalArguments.length;
      C.JSArray_methods.addAll$1($arguments, positionalArguments);
      t1.names = "";
      if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      "" + t1.argumentCount;
      return J.noSuchMethod$1$($function, new H.JSInvocationMirror(C.Symbol_call, 0, $arguments, namedArgumentList, 0));
    },
    Primitives_applyFunction: function($function, positionalArguments, namedArguments) {
      var t1, $arguments, argumentCount, jsStub;
      if (positionalArguments instanceof Array)
        t1 = namedArguments == null || namedArguments.get$isEmpty(namedArguments);
      else
        t1 = false;
      if (t1) {
        $arguments = positionalArguments;
        argumentCount = $arguments.length;
        if (argumentCount === 0) {
          if (!!$function.call$0)
            return $function.call$0();
        } else if (argumentCount === 1) {
          if (!!$function.call$1)
            return $function.call$1($arguments[0]);
        } else if (argumentCount === 2) {
          if (!!$function.call$2)
            return $function.call$2($arguments[0], $arguments[1]);
        } else if (argumentCount === 3) {
          if (!!$function.call$3)
            return $function.call$3($arguments[0], $arguments[1], $arguments[2]);
        } else if (argumentCount === 4) {
          if (!!$function.call$4)
            return $function.call$4($arguments[0], $arguments[1], $arguments[2], $arguments[3]);
        } else if (argumentCount === 5)
          if (!!$function.call$5)
            return $function.call$5($arguments[0], $arguments[1], $arguments[2], $arguments[3], $arguments[4]);
        jsStub = $function["call" + "$" + argumentCount];
        if (jsStub != null)
          return jsStub.apply($function, $arguments);
      }
      return H.Primitives__genericApplyFunction2($function, positionalArguments, namedArguments);
    },
    Primitives__genericApplyFunction2: function($function, positionalArguments, namedArguments) {
      var $arguments, argumentCount, requiredParameterCount, defaultValuesClosure, t1, defaultValues, interceptor, jsFunction, keys, _i, used, t2;
      if (positionalArguments != null)
        $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, type$.dynamic);
      else
        $arguments = [];
      argumentCount = $arguments.length;
      requiredParameterCount = $function.$requiredArgCount;
      if (argumentCount < requiredParameterCount)
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      defaultValuesClosure = $function.$defaultValues;
      t1 = defaultValuesClosure == null;
      defaultValues = !t1 ? defaultValuesClosure() : null;
      interceptor = J.getInterceptor$($function);
      jsFunction = interceptor["call*"];
      if (typeof jsFunction == "string")
        jsFunction = interceptor[jsFunction];
      if (t1) {
        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount === requiredParameterCount)
          return jsFunction.apply($function, $arguments);
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      }
      if (defaultValues instanceof Array) {
        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount > requiredParameterCount + defaultValues.length)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        C.JSArray_methods.addAll$1($arguments, defaultValues.slice(argumentCount - requiredParameterCount));
        return jsFunction.apply($function, $arguments);
      } else {
        if (argumentCount > requiredParameterCount)
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        keys = Object.keys(defaultValues);
        if (namedArguments == null)
          for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i)
            C.JSArray_methods.add$1($arguments, defaultValues[keys[_i]]);
        else {
          for (t1 = keys.length, used = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
            t2 = keys[_i];
            if (namedArguments.containsKey$1(0, t2)) {
              ++used;
              C.JSArray_methods.add$1($arguments, namedArguments.$index(0, t2));
            } else
              C.JSArray_methods.add$1($arguments, defaultValues[t2]);
          }
          if (used !== namedArguments.get$length(namedArguments))
            return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        }
        return jsFunction.apply($function, $arguments);
      }
    },
    diagnoseIndexError: function(indexable, index) {
      var $length, _s5_ = "index";
      if (!H._isInt(index))
        return new P.ArgumentError(true, index, _s5_, null);
      $length = J.get$length$asx(indexable);
      if (index < 0 || index >= $length)
        return P.IndexError$(index, indexable, _s5_, null, $length);
      return P.RangeError$value(index, _s5_);
    },
    diagnoseRangeError: function(start, end, $length) {
      var _s13_ = "Invalid value";
      if (start > $length)
        return new P.RangeError(0, $length, true, start, "start", _s13_);
      if (end != null) {
        if (!H._isInt(end))
          return new P.ArgumentError(true, end, "end", null);
        if (end < start || end > $length)
          return new P.RangeError(start, $length, true, end, "end", _s13_);
      }
      return new P.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue: function(object) {
      return new P.ArgumentError(true, object, null, null);
    },
    checkNum: function(value) {
      if (typeof value != "number")
        throw H.wrapException(H.argumentErrorValue(value));
      return value;
    },
    wrapException: function(ex) {
      var wrapper;
      if (ex == null)
        ex = new P.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: H.toStringWrapper});
        wrapper.name = "";
      } else
        wrapper.toString = H.toStringWrapper;
      return wrapper;
    },
    toStringWrapper: function() {
      return J.toString$0$(this.dartException);
    },
    throwExpression: function(ex) {
      throw H.wrapException(ex);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(P.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern: function(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = H.quoteStringForRegExp(message.replace(String({}), '$receiver$'));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = H.setRuntimeTypeInfo([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new H.TypeErrorDecoder(message.replace(new RegExp('\\\\\\$arguments\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$argumentsExpr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$expr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$method\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$receiver\\\\\\$', 'g'), '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn: function(expression) {
      return function($expr$) {
        var $argumentsExpr$ = '$arguments$';
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    NullError$: function(_message, match) {
      return new H.NullError(_message, match == null ? null : match.method);
    },
    JsNoSuchMethodError$: function(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException: function(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, t2, _null = null,
        t1 = new H.unwrapException_saveStackTrace(ex);
      if (ex == null)
        return _null;
      if (ex instanceof H.ExceptionAndStackTrace)
        return t1.call$1(ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return t1.call$1(ex.dartException);
      else if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              return t1.call$1(H.NullError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return t1.call$1(H.JsNoSuchMethodError$(message, match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return t1.call$1(H.JsNoSuchMethodError$(message, match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t2 = match != null;
                        } else
                          t2 = true;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
            if (t2)
              return t1.call$1(H.NullError$(message, match));
          }
        }
        return t1.call$1(new H.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new P.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return t1.call$1(new P.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new P.StackOverflowError();
      return ex;
    },
    getTraceFromException: function(exception) {
      var trace;
      if (exception instanceof H.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new H._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new H._StackTrace(exception);
    },
    objectHashCode: function(object) {
      if (object == null || typeof object != 'object')
        return J.get$hashCode$(object);
      else
        return H.Primitives_objectHashCode(object);
    },
    fillLiteralMap: function(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    fillLiteralSet: function(values, result) {
      var index,
        $length = values.length;
      for (index = 0; index < $length; ++index)
        result.add$1(0, values[index]);
      return result;
    },
    invokeClosure: function(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      switch (numberOfArguments) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS: function(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, H.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, propertyName) {
      var $constructor, t1, trampoline, signatureFunction, applyTrampoline, i, stub, stubCallName, _null = null,
        $function = functions[0],
        callName = $function.$callName,
        $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(_null, _null, _null, _null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else {
        t1 = $.Closure_functionCounter;
        $.Closure_functionCounter = t1 + 1;
        t1 = new Function("a,b,c,d" + t1, "this.$initialize(a,b,c,d" + t1 + ")");
        $constructor = t1;
      }
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      if (!isStatic) {
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$static_name = propertyName;
        trampoline = $function;
      }
      signatureFunction = H.Closure__computeSignatureFunctionNewRti(reflectionInfo, isStatic, isIntercepted);
      $prototype.$signature = signatureFunction;
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < functions.length; ++i) {
        stub = functions[i];
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          stub = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex) {
          stub.$reflectionInfo = reflectionInfo;
          applyTrampoline = stub;
        }
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti: function(functionType, isStatic, isIntercepted) {
      var typeEvalMethod;
      if (typeof functionType == "number")
        return function(getType, t) {
          return function() {
            return getType(t);
          };
        }(H.getTypeFromTypesTable, functionType);
      if (typeof functionType == "string") {
        if (isStatic)
          throw H.wrapException("Cannot compute signature for static tearoff.");
        typeEvalMethod = isIntercepted ? H.BoundClosure_evalRecipeIntercepted : H.BoundClosure_evalRecipe;
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, typeEvalMethod);
      }
      throw H.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf = H.BoundClosure_selfOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1, t2, selfName, $arguments;
      if (isIntercepted)
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 27;
      if (t2)
        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
      if (arity === 0) {
        t1 = $.Closure_functionCounter;
        $.Closure_functionCounter = t1 + 1;
        selfName = "self" + H.S(t1);
        t1 = "return function(){var " + selfName + " = this.";
        t2 = $.BoundClosure_selfFieldNameCache;
        return new Function(t1 + H.S(t2 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t2) + ";return " + selfName + "." + H.S(stubName) + "();}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = t1 + 1;
      $arguments += H.S(t1);
      t1 = "return function(" + $arguments + "){return this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      return new Function(t1 + H.S(t2 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t2) + "." + H.S(stubName) + "(" + $arguments + ");}")();
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf = H.BoundClosure_selfOf,
        getReceiver = H.BoundClosure_receiverOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var t2, stubName, arity, lookedUpFunction, t3, t4, $arguments,
        t1 = $.BoundClosure_selfFieldNameCache;
      if (t1 == null)
        t1 = $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self");
      t2 = $.BoundClosure_receiverFieldNameCache;
      if (t2 == null)
        t2 = $.BoundClosure_receiverFieldNameCache = H.BoundClosure_computeFieldNamed("receiver");
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t3 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t4 = !t3 || arity >= 28;
      if (t4)
        return H.Closure_cspForwardInterceptedCall(arity, !t3, stubName, $function);
      if (arity === 1) {
        t1 = "return function(){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ");";
        t2 = $.Closure_functionCounter;
        $.Closure_functionCounter = t2 + 1;
        return new Function(t1 + H.S(t2) + "}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ", " + $arguments + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = t2 + 1;
      return new Function(t1 + H.S(t2) + "}")();
    },
    closureFromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, $name) {
      return H.Closure_fromTearOff(receiver, functions, applyTrampolineIndex, reflectionInfo, !!isStatic, !!isIntercepted, $name);
    },
    BoundClosure_evalRecipe: function(closure, recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._self), recipe);
    },
    BoundClosure_evalRecipeIntercepted: function(closure, recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._receiver), recipe);
    },
    BoundClosure_selfOf: function(closure) {
      return closure._self;
    },
    BoundClosure_receiverOf: function(closure) {
      return closure._receiver;
    },
    BoundClosure_computeFieldNamed: function(fieldName) {
      var t1, i, $name,
        template = new H.BoundClosure("self", "target", "receiver", "name"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(new P.CyclicInitializationError(staticName));
    },
    RuntimeError$: function(message) {
      return new H.RuntimeError(message);
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag($name);
    },
    setRuntimeTypeInfo: function(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    getRuntimeTypeInfo: function(target) {
      if (target == null)
        return null;
      return target.$ti;
    },
    getRuntimeTypeArguments: function(interceptor, object, substitutionName) {
      return H.substitute(interceptor["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(object));
    },
    getRuntimeType: function(object) {
      var rti = object instanceof H.Closure ? H.closureFunctionType(object) : null;
      return H.createRuntimeType(rti == null ? H.instanceType(object) : rti);
    },
    substitute: function(substitution, $arguments) {
      if (substitution == null)
        return $arguments;
      substitution = substitution.apply(null, $arguments);
      if (substitution == null)
        return null;
      if (Array.isArray(substitution))
        return substitution;
      if (typeof substitution == "function")
        return substitution.apply(null, $arguments);
      return $arguments;
    },
    computeSignature: function(signature, context, contextName) {
      return signature.apply(context, H.substitute(J.getInterceptor$(context)["$as" + H.S(contextName)], H.getRuntimeTypeInfo(context)));
    },
    JsLinkedHashMap_JsLinkedHashMap$es6: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    defineProperty: function(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor: function(obj) {
      var interceptor, interceptorClass, mark, t1,
        tag = $.getTagFunction.call$1(obj),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        tag = $.alternateTagFunction.call$2(obj, tag);
        if (tag != null) {
          record = $.dispatchRecordsForInstanceTags[tag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[tag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[tag];
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(P.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return H.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks: function() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = C.C_JS_CONST0();
      hooks = H.applyHooksTransformer(C.C_JS_CONST1, H.applyHooksTransformer(C.C_JS_CONST2, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST4, H.applyHooksTransformer(C.C_JS_CONST5, H.applyHooksTransformer(C.C_JS_CONST6(C.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    JSSyntaxRegExp_makeNative: function(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw H.wrapException(P.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked: function(receiver, other, startIndex) {
      var t1 = receiver.indexOf(other, startIndex);
      return t1 >= 0;
    },
    escapeReplacement: function(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    quoteStringForRegExp: function(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked: function(receiver, pattern, replacement) {
      var t1 = H.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      return t1;
    },
    stringReplaceAllUncheckedString: function(receiver, pattern, replacement) {
      var $length, t1, i, index;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        for (t1 = replacement, i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      index = receiver.indexOf(pattern, 0);
      if (index < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(H.quoteStringForRegExp(pattern), 'g'), H.escapeReplacement(replacement));
    },
    _stringIdentity: function(string) {
      return string;
    },
    stringReplaceAllFuncUnchecked: function(receiver, pattern, onMatch, onNonMatch) {
      var t1 = H.stringReplaceAllStringFuncUnchecked(receiver, pattern, onMatch, H._js_helper___stringIdentity$closure());
      return t1;
    },
    stringReplaceAllEmptyFuncUnchecked: function(receiver, onMatch, onNonMatch) {
      var i, i0,
        $length = receiver.length,
        t1 = H.S(onNonMatch.call$1(""));
      for (i = 0; i < $length;) {
        t1 += H.S(onMatch.call$1(new H.StringMatch(i, "")));
        if ((C.JSString_methods._codeUnitAt$1(receiver, i) & 4294966272) === 55296 && $length > i + 1)
          if ((C.JSString_methods._codeUnitAt$1(receiver, i + 1) & 4294966272) === 56320) {
            i0 = i + 2;
            t1 += H.S(onNonMatch.call$1(C.JSString_methods.substring$2(receiver, i, i0)));
            i = i0;
            continue;
          }
        t1 += H.S(onNonMatch.call$1(receiver[i]));
        ++i;
      }
      t1 = t1 + H.S(onMatch.call$1(new H.StringMatch(i, ""))) + H.S(onNonMatch.call$1(""));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceAllStringFuncUnchecked: function(receiver, pattern, onMatch, onNonMatch) {
      var $length, startIndex, t1, position,
        patternLength = pattern.length;
      if (patternLength === 0)
        return H.stringReplaceAllEmptyFuncUnchecked(receiver, onMatch, onNonMatch);
      $length = receiver.length;
      for (startIndex = 0, t1 = ""; startIndex < $length;) {
        position = receiver.indexOf(pattern, startIndex);
        if (position === -1)
          break;
        t1 = t1 + H.S(onNonMatch.call$1(C.JSString_methods.substring$2(receiver, startIndex, position))) + H.S(onMatch.call$1(new H.StringMatch(position, pattern)));
        startIndex = position + patternLength;
      }
      t1 += H.S(onNonMatch.call$1(C.JSString_methods.substring$1(receiver, startIndex)));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceFirstUnchecked: function(receiver, pattern, replacement, startIndex) {
      var index = receiver.indexOf(pattern, startIndex);
      if (index < 0)
        return receiver;
      return H.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
    },
    stringReplaceRangeUnchecked: function(receiver, start, end, replacement) {
      var prefix = receiver.substring(0, start),
        suffix = receiver.substring(end);
      return prefix + replacement + suffix;
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _._length = t0;
      _._jsObject = t1;
      _._keys = t2;
      _.$ti = t3;
    },
    ConstantStringMap_values_closure: function ConstantStringMap_values_closure(t0) {
      this.$this = t0;
    },
    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    GeneralConstantMap: function GeneralConstantMap(t0, t1) {
      this._jsData = t0;
      this.$ti = t1;
    },
    Instantiation: function Instantiation() {
    },
    Instantiation1: function Instantiation1(t0, t1) {
      this._genericClosure = t0;
      this.$ti = t1;
    },
    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__js_helper$_memberName = t0;
      _.__js_helper$_kind = t1;
      _._arguments = t2;
      _._namedArgumentNames = t3;
      _._typeArgumentCount = t4;
    },
    Primitives_initTicker_closure: function Primitives_initTicker_closure(t0) {
      this.performance = t0;
    },
    Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.namedArgumentList = t1;
      this.$arguments = t2;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this.__js_helper$_message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    unwrapException_saveStackTrace: function unwrapException_saveStackTrace(t0) {
      this.ex = t0;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1, t2, t3) {
      var _ = this;
      _._self = t0;
      _._target = t1;
      _._receiver = t2;
      _._name = t3;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _._length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    JsLinkedHashMap_addAll_closure: function JsLinkedHashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {
      this._input = t0;
      this._pattern = t1;
      this.__js_helper$_index = t2;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    _checkViewArguments: function(buffer, offsetInBytes, $length) {
      if (!H._isInt(offsetInBytes))
        throw H.wrapException(P.ArgumentError$("Invalid view offsetInBytes " + H.S(offsetInBytes)));
    },
    _ensureNativeList: function(list) {
      var t1, result, i;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = J.getInterceptor$asx(list);
      result = new Array(t1.get$length(list));
      result.fixed$length = Array;
      for (i = 0; i < t1.get$length(list); ++i)
        result[i] = t1.$index(list, i);
      return result;
    },
    NativeByteData_NativeByteData$view: function(buffer, offsetInBytes, $length) {
      H._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new DataView(buffer, offsetInBytes) : new DataView(buffer, offsetInBytes, $length);
    },
    NativeFloat32List_NativeFloat32List: function($length) {
      return new Float32Array($length);
    },
    NativeFloat64List_NativeFloat64List$view: function(buffer, offsetInBytes, $length) {
      H._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new Float64Array(buffer, offsetInBytes) : new Float64Array(buffer, offsetInBytes, $length);
    },
    NativeInt32List_NativeInt32List: function($length) {
      return new Int32Array($length);
    },
    NativeInt32List_NativeInt32List$view: function(buffer, offsetInBytes, $length) {
      H._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new Int32Array(buffer, offsetInBytes) : new Int32Array(buffer, offsetInBytes, $length);
    },
    NativeInt8List__create1: function(arg) {
      return new Int8Array(arg);
    },
    NativeUint16List__create1: function(arg) {
      return new Uint16Array(arg);
    },
    NativeUint8List_NativeUint8List$view: function(buffer, offsetInBytes, $length) {
      H._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex: function(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw H.wrapException(H.diagnoseIndexError(list, index));
    },
    _checkValidRange: function(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw H.wrapException(H.diagnoseRangeError(start, end, $length));
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar: function(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = H._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr: function(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = H._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType: function(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return H.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe: function(rti) {
      return rti._canonicalRecipe;
    },
    findType: function(recipe) {
      return H._Universe_eval(init.typeUniverse, recipe, false);
    },
    instantiatedGenericFunctionType: function(genericFunctionRti, instantiationRti) {
      var t1, cache, key, probe, rti;
      if (genericFunctionRti == null)
        return null;
      t1 = instantiationRti._rest;
      cache = genericFunctionRti._bindCache;
      if (cache == null)
        cache = genericFunctionRti._bindCache = new Map();
      key = instantiationRti._canonicalRecipe;
      probe = cache.get(key);
      if (probe != null)
        return probe;
      rti = H._substitute(init.typeUniverse, genericFunctionRti._primary, t1, 0);
      cache.set(key, rti);
      return rti;
    },
    _substitute: function(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = H._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return H._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = H._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = H._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return H._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = H._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = H._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return H._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = H._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw H.wrapException(P.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray: function(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = [];
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = H._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.push(substitutedRti);
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed: function(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, rti, substitutedRti,
        $length = namedArray.length,
        result = [];
      for (changed = false, i = 0; i < $length; i += 2) {
        t1 = namedArray[i];
        rti = namedArray[i + 1];
        substitutedRti = H._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.push(t1);
        result.push(substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters: function(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = H._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = H._substituteArray(universe, optionalPositional, typeArguments, depth),
        optionalNamed = functionParameters._optionalNamed,
        substitutedOptionalNamed = H._substituteNamed(universe, optionalNamed, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedOptionalNamed === optionalNamed)
        return functionParameters;
      result = new H._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._optionalNamed = substitutedOptionalNamed;
      return result;
    },
    closureFunctionType: function(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return H.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType: function(object, testRti) {
      var rti;
      if (H.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof H.Closure) {
          rti = H.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return H.instanceType(object);
    },
    instanceType: function(object) {
      var rti;
      if (object instanceof P.Object) {
        rti = object.$ti;
        return rti != null ? rti : H._instanceTypeFromConstructor(object);
      }
      if (Array.isArray(object))
        return H._arrayInstanceType(object);
      return H._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType: function(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType: function(object) {
      var rti = object.$ti;
      return rti != null ? rti : H._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor: function(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return H._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss: function(instance, $constructor) {
      var effectiveConstructor = instance instanceof H.Closure ? instance.__proto__.__proto__.constructor : $constructor,
        rti = H._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable: function(_index) {
      var rti,
        index = _index,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = H._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    createRuntimeType: function(rti) {
      var recipe, starErasedRecipe, starErasedRti,
        type = rti._cachedRuntimeType;
      if (type != null)
        return type;
      recipe = rti._canonicalRecipe;
      starErasedRecipe = recipe.replace(/\*/g, "");
      if (starErasedRecipe === recipe)
        return rti._cachedRuntimeType = new H._Type(rti);
      starErasedRti = H._Universe_eval(init.typeUniverse, starErasedRecipe, true);
      type = starErasedRti._cachedRuntimeType;
      return rti._cachedRuntimeType = type == null ? starErasedRti._cachedRuntimeType = new H._Type(starErasedRti) : type;
    },
    typeLiteral: function(recipe) {
      return H.createRuntimeType(H._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest: function(object) {
      var testRti = this,
        isFn = H._generalIsTestImplementation,
        t1 = type$.Object;
      if (testRti === t1) {
        isFn = H._isObject;
        testRti._as = H._asObject;
      } else if (H.isStrongTopType(testRti) || testRti === t1) {
        isFn = H._isTop;
        testRti._as = H._asTop;
      } else if (testRti === type$.int)
        isFn = H._isInt;
      else if (testRti === type$.double)
        isFn = H._isNum;
      else if (testRti === type$.num)
        isFn = H._isNum;
      else if (testRti === type$.String)
        isFn = H._isString;
      else if (testRti === type$.bool)
        isFn = H._isBool;
      else if (testRti._kind === 9) {
        t1 = testRti._primary;
        if (testRti._rest.every(H.isTopType)) {
          testRti._specializedTestResource = "$is" + t1;
          isFn = H._isTestViaProperty;
        }
      }
      testRti._is = isFn;
      return testRti._is(object);
    },
    _generalIsTestImplementation: function(object) {
      var testRti = this;
      return H._isSubtype(init.typeUniverse, H.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _isTestViaProperty: function(object) {
      var t1 = this,
        tag = t1._specializedTestResource;
      if (object instanceof P.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation: function(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      throw H.wrapException(H._TypeError$fromMessage(H._Error_compose(object, H.instanceOrFunctionType(object, testRti), H._rtiToString(testRti, null))));
    },
    _Error_compose: function(object, objectRti, checkedTypeDescription) {
      var objectDescription = P.Error_safeToString(object),
        objectTypeDescription = H._rtiToString(objectRti == null ? H.instanceType(object) : objectRti, null);
      return objectDescription + ": type '" + H.S(objectTypeDescription) + "' is not a subtype of type '" + H.S(checkedTypeDescription) + "'";
    },
    _TypeError$fromMessage: function(message) {
      return new H._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType: function(object, type) {
      return new H._TypeError("TypeError: " + H._Error_compose(object, null, type));
    },
    _isObject: function(object) {
      return true;
    },
    _asObject: function(object) {
      return object;
    },
    _isTop: function(object) {
      return true;
    },
    _asTop: function(object) {
      return object;
    },
    _isBool: function(object) {
      return true === object || false === object;
    },
    _asBool: function(object) {
      if (true === object || false === object)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS: function(object) {
      if (true === object || false === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ: function(object) {
      if (true === object || false === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble: function(object) {
      if (typeof object == "number")
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt: function(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum: function(object) {
      return typeof object == "number";
    },
    _asNum: function(object) {
      if (typeof object == "number")
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num?"));
    },
    _isString: function(object) {
      return typeof object == "string";
    },
    _asString: function(object) {
      if (typeof object == "string")
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS: function(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ: function(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString: function(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += C.JSString_methods.$add(sep, H._rtiToString(array[i], genericContext));
      return s;
    },
    _functionRtiToString: function(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, typeParametersText, typeSep, boundRti, t2, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, optionalNamed, optionalNamedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = H.setRuntimeTypeInfo([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          genericContext.push("T" + (offset + i));
        for (t1 = type$.Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          typeParametersText = C.JSString_methods.$add(typeParametersText + typeSep, genericContext[genericContext.length - 1 - i]);
          boundRti = bounds[i];
          if (!(H.isStrongTopType(boundRti) || boundRti === t1))
            t2 = !(boundRti === t1);
          else
            t2 = false;
          if (t2)
            typeParametersText += C.JSString_methods.$add(" extends ", H._rtiToString(boundRti, genericContext));
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      optionalNamed = parameters._optionalNamed;
      optionalNamedLength = optionalNamed.length;
      returnTypeText = H._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += C.JSString_methods.$add(sep, H._rtiToString(requiredPositional[i], genericContext));
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += C.JSString_methods.$add(sep, H._rtiToString(optionalPositional[i], genericContext));
        argumentsText += "]";
      }
      if (optionalNamedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < optionalNamedLength; i += 2, sep = _s2_)
          argumentsText += C.JSString_methods.$add(sep, H._rtiToString(optionalNamed[i + 1], genericContext)) + " " + optionalNamed[i];
        argumentsText += "}";
      }
      if (outerContextLength != null)
        genericContext.length = outerContextLength;
      return typeParametersText + "(" + argumentsText + ") => " + H.S(returnTypeText);
    },
    _rtiToString: function(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = H._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = H._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return J.$add$ansx(argumentKind === 11 || argumentKind === 12 ? C.JSString_methods.$add("(", s) + ")" : s, "?");
      }
      if (kind === 8)
        return "FutureOr<" + H.S(H._rtiToString(rti._primary, genericContext)) + ">";
      if (kind === 9) {
        $name = H._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length !== 0 ? $name + ("<" + H._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return H._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return H._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        return genericContext[genericContext.length - 1 - t1];
      }
      return "?";
    },
    _unminifyOrTag: function(rawClassName) {
      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule: function(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType: function(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        metadata = universe.eT,
        probe = metadata[cls];
      if (probe == null)
        return H._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = H._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = [];
        for (i = 0; i < $length; ++i)
          $arguments.push(erased);
        $interface = H._Universe__lookupInterfaceRti(universe, cls, $arguments);
        metadata[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules: function(universe, rules) {
      return H._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes: function(universe, types) {
      return H._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval: function(universe, recipe, normalize) {
      var rti,
        cache = universe.eC,
        probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = H._Universe__parseRecipe(universe, null, recipe, normalize);
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment: function(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = H._Universe__parseRecipe(universe, environment, recipe, true);
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind: function(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = H._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__parseRecipe: function(universe, environment, recipe, normalize) {
      var rti = H._Parser_parse(H._Parser_create(universe, environment, recipe, normalize));
      if (rti != null)
        return rti;
      throw H.wrapException(P.UnimplementedError$('_Universe._parseRecipe("' + H.S(recipe) + '")'));
    },
    _Universe__installTypeTests: function(universe, rti) {
      rti._as = H._generalAsCheckImplementation;
      rti._is = H._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti: function(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti: function(universe, baseType, key, normalize) {
      var baseKind, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (H.isStrongTopType(baseType) || baseType === type$.Object || baseType === type$.Null || baseKind === 7 || baseKind === 6)
          return baseType;
      }
      rti = new H.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti: function(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, starArgumentKind, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!H.isStrongTopType(baseType))
          if (!(baseType === type$.Null))
            if (baseKind !== 7)
              t1 = baseKind === 8 && H.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          starArgumentKind = starArgument._kind;
          if (starArgumentKind === 1)
            return type$.Null;
          else if (starArgumentKind === 8 && H.isNullable(starArgument._primary))
            return starArgument;
          else
            return H.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new H.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti: function(universe, baseType, key, normalize) {
      var t1, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (H.isStrongTopType(baseType) || baseType === type$.Object || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return H._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null)
          return type$.Future_Null;
      }
      rti = new H.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti: function(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin: function($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed: function($arguments) {
      var s, sep, i, t1, s0,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 2, sep = ",") {
        t1 = $arguments[i];
        s0 = $arguments[i + 1]._canonicalRecipe;
        s += sep + t1 + ":" + s0;
      }
      return s;
    },
    _Universe__lookupInterfaceRti: function(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length !== 0)
        s += "<" + H._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti: function(universe, base, $arguments) {
      var newBase, newArguments, s, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      s = newBase._canonicalRecipe + ";" + ("<" + H._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = s;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupFunctionRti: function(universe, returnType, parameters) {
      var key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        optionalNamed = parameters._optionalNamed,
        optionalNamedLength = optionalNamed.length,
        recipe = "(" + H._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0)
        recipe += (requiredPositionalLength > 0 ? "," : "") + "[" + H._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      if (optionalNamedLength > 0)
        recipe += (requiredPositionalLength > 0 ? "," : "") + "{" + H._Universe__canonicalRecipeJoinNamed(optionalNamed) + "}";
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti: function(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + "<" + H._Universe__canonicalRecipeJoin(bounds) + ">",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti: function(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = new Array($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = H._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, 0);
          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new H.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Parser_create: function(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse: function(parser) {
      var t1, i, ch, universe, array, head, base, u, parameters, optionalPositional, optionalNamed, item,
        source = parser.r,
        stack = parser.s;
      for (t1 = source.length, i = 0; i < t1;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = H._Parser_handleDigit(i + 1, ch, source, stack);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36)
          i = H._Parser_handleIdentifier(parser, i, source, stack, false);
        else if (ch === 46)
          i = H._Parser_handleIdentifier(parser, i, source, stack, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              break;
            case 59:
              stack.push(H._Parser_toType(parser.u, parser.e, stack.pop()));
              break;
            case 94:
              stack.push(H._Universe__lookupGenericFunctionParameterRti(parser.u, stack.pop()));
              break;
            case 35:
              stack.push(H._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              stack.push(H._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              stack.push(H._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 62:
              universe = parser.u;
              array = stack.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              head = stack.pop();
              if (typeof head == "string")
                stack.push(H._Universe__lookupInterfaceRti(universe, head, array));
              else {
                base = H._Parser_toType(universe, parser.e, head);
                switch (base._kind) {
                  case 11:
                    stack.push(H._Universe__lookupGenericFunctionRti(universe, base, array, parser.n));
                    break;
                  default:
                    stack.push(H._Universe__lookupBindingRti(universe, base, array));
                    break;
                }
              }
              break;
            case 38:
              H._Parser_handleExtendedOperations(parser, stack);
              break;
            case 42:
              u = parser.u;
              stack.push(H._Universe__lookupStarRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 63:
              u = parser.u;
              stack.push(H._Universe__lookupQuestionRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 47:
              u = parser.u;
              stack.push(H._Universe__lookupFutureOrRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));
              break;
            case 40:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 41:
              universe = parser.u;
              parameters = new H._FunctionParameters();
              optionalPositional = universe.sEA;
              optionalNamed = universe.sEA;
              head = stack.pop();
              if (typeof head == "number")
                switch (head) {
                  case -1:
                    optionalPositional = stack.pop();
                    break;
                  case -2:
                    optionalNamed = stack.pop();
                    break;
                  default:
                    stack.push(head);
                    break;
                }
              else
                stack.push(head);
              array = stack.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              parameters._requiredPositional = array;
              parameters._optionalPositional = optionalPositional;
              parameters._optionalNamed = optionalNamed;
              stack.push(H._Universe__lookupFunctionRti(universe, H._Parser_toType(universe, parser.e, stack.pop()), parameters));
              break;
            case 91:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 93:
              array = stack.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = stack.pop();
              stack.push(array);
              stack.push(-1);
              break;
            case 123:
              stack.push(parser.p);
              parser.p = stack.length;
              break;
            case 125:
              array = stack.splice(parser.p);
              H._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = stack.pop();
              stack.push(array);
              stack.push(-2);
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = stack.pop();
      return H._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit: function(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier: function(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = H._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          H.throwExpression('No "' + string + '" in "' + H.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(H._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleExtendedOperations: function(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(H._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(H._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw H.wrapException(P.AssertionError$("Unexpected extended operation " + H.S($top)));
    },
    _Parser_toType: function(universe, environment, item) {
      if (typeof item == "string")
        return H._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number")
        return H._Parser_indexToType(universe, environment, item);
      else
        return item;
    },
    _Parser_toTypes: function(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = H._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed: function(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 1; i < $length; i += 2)
        items[i] = H._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType: function(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw H.wrapException(P.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw H.wrapException(P.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype: function(universe, s, sEnv, t, tEnv) {
      var sKind, leftTypeVariable, tKind, t1, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (H.isStrongTopType(t) || t === type$.Object)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (H.isStrongTopType(s))
        return false;
      if (s === type$.Null)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (H._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      if (sKind === 6)
        return H._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = t._primary;
        return H._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!H._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return H._isSubtype(universe, H.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = H._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return t1;
      }
      if (tKind === 8) {
        if (H._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return H._isSubtype(universe, s, sEnv, H.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = H._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t1;
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!H._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !H._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return H._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return H._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return H._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      return false;
    },
    _isFunctionSubtype: function(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sOptionalNamed, tOptionalNamed, sOptionalNamedLength, tOptionalNamedLength, j, tName, sName;
      if (!H._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!H._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!H._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!H._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sOptionalNamed = sParameters._optionalNamed;
      tOptionalNamed = tParameters._optionalNamed;
      sOptionalNamedLength = sOptionalNamed.length;
      tOptionalNamedLength = tOptionalNamed.length;
      for (i = 0, j = 0; j < tOptionalNamedLength; j += 2) {
        tName = tOptionalNamed[j];
        do {
          if (i >= sOptionalNamedLength)
            return false;
          sName = sOptionalNamed[i];
          i += 2;
        } while (sName < tName);
        if (tName < sName)
          return false;
        t1 = sOptionalNamed[i - 1];
        if (!H._isSubtype(universe, tOptionalNamed[j + 1], tEnv, t1, sEnv))
          return false;
      }
      return true;
    },
    _isInterfaceSubtype: function(universe, s, sEnv, t, tEnv) {
      var sArgs, tArgs, $length, i, t1, t2, rule, supertypeArgs,
        sName = s._primary,
        tName = t._primary;
      if (sName === tName) {
        sArgs = s._rest;
        tArgs = t._rest;
        $length = sArgs.length;
        for (i = 0; i < $length; ++i) {
          t1 = sArgs[i];
          t2 = tArgs[i];
          if (!H._isSubtype(universe, t1, sEnv, t2, tEnv))
            return false;
        }
        return true;
      }
      if (t === type$.Object)
        return true;
      rule = H._Universe_findRule(universe, sName);
      if (rule == null)
        return false;
      supertypeArgs = rule[tName];
      if (supertypeArgs == null)
        return false;
      $length = supertypeArgs.length;
      tArgs = t._rest;
      for (i = 0; i < $length; ++i)
        if (!H._isSubtype(universe, H._Universe_evalInEnvironment(universe, s, supertypeArgs[i]), sEnv, tArgs[i], tEnv))
          return false;
      return true;
    },
    isNullable: function(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null))
        if (!H.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && H.isNullable(t._primary)))
              t1 = kind === 8 && H.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType: function(t) {
      return H.isStrongTopType(t) || t === type$.Object;
    },
    isStrongTopType: function(t) {
      var t2,
        t1 = t._kind,
        kind = t1;
      if (kind !== 2)
        if (kind !== 3)
          if (kind !== 4)
            if (kind !== 5) {
              t2 = type$.Object;
              if (!(t === t2))
                t1 = t1 === 7 && t._primary === t2;
              else
                t1 = true;
            } else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _Utils_objectAssign: function(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._optionalNamed = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this._message = t0;
    },
    isBrowserObject: function(o) {
      return type$.Blob._is(o) || type$.Event._is(o) || type$.KeyRange._is(o) || type$.ImageData._is(o) || type$.Node._is(o) || type$.Window._is(o) || type$.WorkerGlobalScope._is(o);
    },
    unmangleGlobalNameIfPreservedAnyways: function($name) {
      return init.mangledGlobalNames[$name];
    },
    printString: function(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  },
  J = {
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor: function(object) {
      var proto, objectProto, $constructor, interceptor,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
      }
      $constructor = object.constructor;
      interceptor = $constructor == null ? null : $constructor[$.$get$JS_INTEROP_INTERCEPTOR_TAG()];
      if (interceptor != null)
        return interceptor;
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return C.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return C.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return C.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        Object.defineProperty($constructor, $.$get$JS_INTEROP_INTERCEPTOR_TAG(), {value: C.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return C.UnknownJavaScriptObject_methods;
      }
      return C.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed: function($length, $E) {
      if (!H._isInt($length))
        throw H.wrapException(P.ArgumentError$value($length, "length", "is not an integer"));
      if ($length < 0 || $length > 4294967295)
        throw H.wrapException(P.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$markFixed: function(allocation, $E) {
      return J.JSArray_markFixedList(H.setRuntimeTypeInfo(allocation, $E._eval$1("JSArray<0>")));
    },
    JSArray_markFixedList: function(list) {
      list.fixed$length = Array;
      return list;
    },
    JSArray_markUnmodifiableList: function(list) {
      list.fixed$length = Array;
      list.immutable$list = Array;
      return list;
    },
    JSArray__compareAny: function(a, b) {
      return J.compareTo$1$ns(a, b);
    },
    JSString__isWhitespace: function(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace: function(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = C.JSString_methods._codeUnitAt$1(string, index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace: function(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = C.JSString_methods.codeUnitAt$1(string, index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$: function(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSDouble.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ansx: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax: function(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$in: function(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumber.prototype;
      }
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$n: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$ns: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x: function(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    set$length$asx: function(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    get$attributes$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$attributes(receiver);
    },
    get$hashCode$: function(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$keys$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$keys(receiver);
    },
    get$length$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$message$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$message(receiver);
    },
    get$name$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$name(receiver);
    },
    get$offset$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$offset(receiver);
    },
    get$runtimeType$: function(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    get$sign$in: function(receiver) {
      if (typeof receiver === "number")
        return receiver > 0 ? 1 : receiver < 0 ? -1 : receiver;
      return J.getInterceptor$in(receiver).get$sign(receiver);
    },
    get$target$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$target(receiver);
    },
    get$top$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$top(receiver);
    },
    get$value$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$value(receiver);
    },
    get$values$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$values(receiver);
    },
    $add$ansx: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver + a0;
      return J.getInterceptor$ansx(receiver).$add(receiver, a0);
    },
    $eq$: function(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx: function(receiver, a0) {
      if (typeof a0 === "number")
        if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax: function(receiver, a0, a1) {
      if (typeof a0 === "number")
        if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
          return receiver[a0] = a1;
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    $mul$ns: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver * a0;
      return J.getInterceptor$ns(receiver).$mul(receiver, a0);
    },
    $sub$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver - a0;
      return J.getInterceptor$n(receiver).$sub(receiver, a0);
    },
    _addEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._addEventListener$3(receiver, a0, a1, a2);
    },
    _clearChildren$0$x: function(receiver) {
      return J.getInterceptor$x(receiver)._clearChildren$0(receiver);
    },
    _codeUnitAt$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver)._codeUnitAt$1(receiver, a0);
    },
    add$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    addEventListener$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).addEventListener$2(receiver, a0, a1);
    },
    addEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
    },
    cast$1$0$ax: function(receiver, $T1) {
      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);
    },
    cast$2$0$ax: function(receiver, $T1, $T2) {
      return J.getInterceptor$ax(receiver).cast$2$0(receiver, $T1, $T2);
    },
    clamp$2$n: function(receiver, a0, a1) {
      return J.getInterceptor$n(receiver).clamp$2(receiver, a0, a1);
    },
    clear$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).clear$0(receiver);
    },
    codeUnitAt$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
    },
    compareTo$1$ns: function(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    contains$1$asx: function(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    contains$2$asx: function(receiver, a0, a1) {
      return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
    },
    containsKey$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).containsKey$1(receiver, a0);
    },
    elementAt$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    fillRange$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).fillRange$3(receiver, a0, a1, a2);
    },
    floor$0$n: function(receiver) {
      return J.getInterceptor$n(receiver).floor$0(receiver);
    },
    focus$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).focus$0(receiver);
    },
    forEach$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    join$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).join$1(receiver, a0);
    },
    map$1$1$ax: function(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    matchAsPrefix$2$s: function(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
    },
    noSuchMethod$1$: function(receiver, a0) {
      return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
    },
    putIfAbsent$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).putIfAbsent$2(receiver, a0, a1);
    },
    remove$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    remove$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
    },
    removeEventListener$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).removeEventListener$2(receiver, a0, a1);
    },
    removeEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
    },
    replaceRange$3$asx: function(receiver, a0, a1, a2) {
      return J.getInterceptor$asx(receiver).replaceRange$3(receiver, a0, a1, a2);
    },
    round$0$n: function(receiver) {
      return J.getInterceptor$n(receiver).round$0(receiver);
    },
    roundToDouble$0$n: function(receiver) {
      return J.getInterceptor$n(receiver).roundToDouble$0(receiver);
    },
    select$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).select$0(receiver);
    },
    skip$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    sort$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
    },
    startsWith$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
    },
    startsWith$2$s: function(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).startsWith$2(receiver, a0, a1);
    },
    substring$2$s: function(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
    },
    toInt$0$n: function(receiver) {
      return J.getInterceptor$n(receiver).toInt$0(receiver);
    },
    toList$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toLowerCase$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
    },
    toString$0$: function(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    toStringAsFixed$1$n: function(receiver, a0) {
      return J.getInterceptor$n(receiver).toStringAsFixed$1(receiver, a0);
    },
    trim$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).trim$0(receiver);
    },
    trimLeft$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).trimLeft$0(receiver);
    },
    trimRight$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).trimRight$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JSObject: function JSObject() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1) {
      var _ = this;
      _._iterable = t0;
      _.__interceptors$_length = t1;
      _._index = 0;
      _._current = null;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSDouble: function JSDouble() {
    },
    JSString: function JSString() {
    }
  },
  P = {
    _AsyncRun__initializeScheduleImmediate: function() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return P.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return P.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return P.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride: function(callback) {
      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate: function(callback) {
      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer: function(callback) {
      P.Timer__createTimer(C.Duration_0, callback);
    },
    Timer__createTimer: function(duration, callback) {
      var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    Timer__createPeriodicTimer: function(duration, callback) {
      var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$: function(milliseconds, callback) {
      var t1 = new P._TimerImpl(true);
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _TimerImpl$periodic: function(milliseconds, callback) {
      var t1 = new P._TimerImpl(false);
      t1._TimerImpl$periodic$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter: function($T) {
      return new P._AsyncAwaitCompleter(new P._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync: function(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait: function(object, bodyFunction) {
      P._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn: function(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow: function(object, completer) {
      completer.completeError$2(H.unwrapException(object), H.getTraceFromException(object));
    },
    _awaitOnObject: function(object, bodyFunction) {
      var t1, future,
        thenCallback = new P._awaitOnObject_closure(bodyFunction),
        errorCallback = new P._awaitOnObject_closure0(bodyFunction);
      if (object instanceof P._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (type$.Future_dynamic._is(object))
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new P._Future($.Zone__current, type$._Future_dynamic);
          future._state = 4;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync: function($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$1(new P._wrapJsFunctionForAsync_closure($protected));
    },
    _asyncStarHelper: function(object, bodyFunctionOrErrorCode, controller) {
      var t1, error, stackTrace, stream;
      if (bodyFunctionOrErrorCode === 0) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeWithValue$1(null);
        else
          controller.controller.close$0(0);
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeError$2(H.unwrapException(object), H.getTraceFromException(object));
        else {
          error = H.unwrapException(object);
          stackTrace = H.getTraceFromException(object);
          t1 = controller.controller;
          t1.toString;
          P.ArgumentError_checkNotNull(error, "error");
          if (t1._state >= 4)
            H.throwExpression(t1._badEventState$0());
          if (error == null)
            error = new P.NullThrownError();
          t1._addError$2(error, stackTrace == null ? P.AsyncError_defaultStackTrace(error) : stackTrace);
          controller.controller.close$0(0);
        }
        return;
      }
      if (object instanceof P._IterationMarker) {
        if (controller.cancelationFuture != null) {
          bodyFunctionOrErrorCode.call$2(2, null);
          return;
        }
        t1 = object.state;
        if (t1 === 0) {
          t1 = object.value;
          controller.controller.add$1(0, t1);
          P.scheduleMicrotask(new P._asyncStarHelper_closure(controller, bodyFunctionOrErrorCode));
          return;
        } else if (t1 === 1) {
          stream = object.value;
          controller.controller.addStream$2$cancelOnError(0, stream, false).then$1(new P._asyncStarHelper_closure0(controller, bodyFunctionOrErrorCode));
          return;
        }
      }
      P._awaitOnObject(object, bodyFunctionOrErrorCode);
    },
    _streamOfController: function(controller) {
      var t1 = controller.controller;
      t1.toString;
      return new P._ControllerStream(t1, H._instanceType(t1)._eval$1("_ControllerStream<1>"));
    },
    _AsyncStarStreamController$: function(body, $T) {
      var t1 = new P._AsyncStarStreamController($T._eval$1("_AsyncStarStreamController<0>"));
      t1._AsyncStarStreamController$1(body, $T);
      return t1;
    },
    _makeAsyncStarStreamController: function(body, $T) {
      return P._AsyncStarStreamController$(body, $T);
    },
    _IterationMarker_yieldStar: function(values) {
      return new P._IterationMarker(values, 1);
    },
    _IterationMarker_endOfIteration: function() {
      return C._IterationMarker_null_2;
    },
    _IterationMarker_yieldSingle: function(value) {
      return new P._IterationMarker(value, 0);
    },
    _IterationMarker_uncaughtError: function(error) {
      return new P._IterationMarker(error, 3);
    },
    _makeSyncStarIterable: function(body, $T) {
      return new P._SyncStarIterable(body, $T._eval$1("_SyncStarIterable<0>"));
    },
    Future_Future$error: function(error, stackTrace, $T) {
      var t1;
      P.ArgumentError_checkNotNull(error, "error");
      $.Zone__current !== C.C__RootZone;
      if (stackTrace == null)
        stackTrace = P.AsyncError_defaultStackTrace(error);
      t1 = new P._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1._asyncCompleteError$2(error, stackTrace);
      return t1;
    },
    Future_Future$delayed: function(duration, $T) {
      var result = new P._Future($.Zone__current, $T._eval$1("_Future<0>"));
      P.Timer_Timer(duration, new P.Future_Future$delayed_closure(null, result));
      return result;
    },
    Future_wait: function(futures, $T) {
      var handleError, future, pos, e, st, t2, t3, exception, _box_0 = {}, cleanUp = null,
        eagerError = false,
        t1 = $T._eval$1("_Future<List<0>>"),
        result = new P._Future($.Zone__current, t1);
      _box_0.values = null;
      _box_0.remaining = 0;
      _box_0.stackTrace = _box_0.error = null;
      handleError = new P.Future_wait_handleError(_box_0, cleanUp, eagerError, result);
      try {
        for (t2 = J.get$iterator$ax(futures), t3 = type$.Null; t2.moveNext$0();) {
          future = t2.get$current(t2);
          pos = _box_0.remaining;
          future.then$1$2$onError(new P.Future_wait_closure(_box_0, pos, result, cleanUp, eagerError, $T), handleError, t3);
          ++_box_0.remaining;
        }
        t2 = _box_0.remaining;
        if (t2 === 0) {
          t1 = new P._Future($.Zone__current, t1);
          t1._asyncComplete$1(C.List_empty1);
          return t1;
        }
        t1 = new Array(t2);
        t1.fixed$length = Array;
        _box_0.values = H.setRuntimeTypeInfo(t1, $T._eval$1("JSArray<0>"));
      } catch (exception) {
        e = H.unwrapException(exception);
        st = H.getTraceFromException(exception);
        if (_box_0.remaining === 0 || eagerError)
          return P.Future_Future$error(e, st, $T._eval$1("List<0>"));
        else {
          _box_0.error = e;
          _box_0.stackTrace = st;
        }
      }
      return result;
    },
    _Future$zoneValue: function(value, _zone, $T) {
      var t1 = new P._Future(_zone, $T._eval$1("_Future<0>"));
      t1._state = 4;
      t1._resultOrListeners = value;
      return t1;
    },
    _Future__chainForeignFuture: function(source, target) {
      var e, s, exception;
      target._state = 1;
      try {
        source.then$1$2$onError(new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target), type$.Null);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(target, e, s));
      }
    },
    _Future__chainCoreFuture: function(source, target) {
      var t1, listeners;
      for (; t1 = source._state, t1 === 2;)
        source = source._resultOrListeners;
      if (t1 >= 4) {
        listeners = target._removeListeners$0();
        target._state = source._state;
        target._resultOrListeners = source._resultOrListeners;
        P._Future__propagateToListeners(target, listeners);
      } else {
        listeners = target._resultOrListeners;
        target._state = 2;
        target._resultOrListeners = source;
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners: function(source, listeners) {
      var t2, _box_0, hasError, listeners0, sourceResult, t3, t4, zone, t5, oldZone, current, result, _null = null, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.Future_dynamic; true;) {
        _box_0 = {};
        hasError = t1._state === 8;
        if (listeners == null) {
          if (hasError) {
            t2 = t1._resultOrListeners;
            P._rootHandleUncaughtError(_null, _null, t1._zone, t2.error, t2.stackTrace);
          }
          return;
        }
        for (; listeners0 = listeners._nextListener, listeners0 != null; listeners = listeners0) {
          listeners._nextListener = null;
          P._Future__propagateToListeners(_box_1.source, listeners);
        }
        t1 = _box_1.source;
        sourceResult = t1._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        t3 = !hasError;
        if (t3) {
          t4 = listeners.state;
          t4 = (t4 & 1) !== 0 || (t4 & 15) === 8;
        } else
          t4 = true;
        if (t4) {
          t4 = listeners.result;
          zone = t4._zone;
          if (hasError) {
            t5 = t1._zone === zone;
            t5 = !(t5 || t5);
          } else
            t5 = false;
          if (t5) {
            P._rootHandleUncaughtError(_null, _null, t1._zone, sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = _null;
          t1 = listeners.state;
          if ((t1 & 15) === 8)
            new P._Future__propagateToListeners_handleWhenCompleteCallback(_box_1, _box_0, listeners, hasError).call$0();
          else if (t3) {
            if ((t1 & 1) !== 0)
              new P._Future__propagateToListeners_handleValueCallback(_box_0, listeners, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new P._Future__propagateToListeners_handleError(_box_1, _box_0, listeners).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t2._is(t1)) {
            if (t1 instanceof P._Future)
              if (t1._state >= 4) {
                current = t4._resultOrListeners;
                t4._resultOrListeners = null;
                listeners = t4._reverseListeners$1(current);
                t4._state = t1._state;
                t4._resultOrListeners = t1._resultOrListeners;
                _box_1.source = t1;
                continue;
              } else
                P._Future__chainCoreFuture(t1, t4);
            else
              P._Future__chainForeignFuture(t1, t4);
            return;
          }
        }
        result = listeners.result;
        current = result._resultOrListeners;
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t3 = _box_0.listenerValueOrError;
        if (!t1) {
          result._state = 4;
          result._resultOrListeners = t3;
        } else {
          result._state = 8;
          result._resultOrListeners = t3;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler: function(errorHandler, zone) {
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$1(errorHandler);
      if (type$.dynamic_Function_Object._is(errorHandler))
        return errorHandler;
      throw H.wrapException(P.ArgumentError$value(errorHandler, "onError", "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a a valid result"));
    },
    _microtaskLoop: function() {
      var t1, t2;
      for (; t1 = $._nextCallback, t1 != null;) {
        $._lastPriorityCallback = null;
        t2 = t1.next;
        $._nextCallback = t2;
        if (t2 == null)
          $._lastCallback = null;
        t1.callback.call$0();
      }
    },
    _startMicrotaskLoop: function() {
      $._isInCallbackLoop = true;
      try {
        P._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback: function(callback) {
      var newEntry = new P._AsyncCallbackEntry(callback);
      if ($._nextCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = $._lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback: function(callback) {
      var entry, t2,
        t1 = $._nextCallback;
      if (t1 == null) {
        P._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new P._AsyncCallbackEntry(callback);
      t2 = $._lastPriorityCallback;
      if (t2 == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        entry.next = t2.next;
        $._lastPriorityCallback = t2.next = entry;
        if (entry.next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask: function(callback) {
      var _null = null,
        currentZone = $.Zone__current;
      if (C.C__RootZone === currentZone) {
        P._rootScheduleMicrotask(_null, _null, C.C__RootZone, callback);
        return;
      }
      P._rootScheduleMicrotask(_null, _null, currentZone, currentZone.bindCallbackGuarded$1(callback));
    },
    Stream_Stream$fromIterable: function(elements, $T) {
      return new P._GeneratedStreamImpl(new P.Stream_Stream$fromIterable_closure(elements, $T), $T._eval$1("_GeneratedStreamImpl<0>"));
    },
    StreamIterator_StreamIterator: function(stream) {
      if (stream == null)
        H.throwExpression(P.ArgumentError$notNull("stream"));
      return new P._StreamIterator();
    },
    _runGuarded: function(notificationHandler) {
      var e, s, exception, t1;
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = $.Zone__current;
        P._rootHandleUncaughtError(null, null, t1, e, s);
      }
    },
    _BufferingStreamSubscription$: function(onData, onError, onDone, cancelOnError, $T) {
      var t1 = $.Zone__current,
        t2 = cancelOnError ? 1 : 0;
      t2 = new P._BufferingStreamSubscription(t1, t2, $T._eval$1("_BufferingStreamSubscription<0>"));
      t2._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
      return t2;
    },
    Timer_Timer: function(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return P.Timer__createTimer(duration, callback);
      return P.Timer__createTimer(duration, t1.bindCallbackGuarded$1(callback));
    },
    Timer_Timer$periodic: function(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return P.Timer__createPeriodicTimer(duration, callback);
      return P.Timer__createPeriodicTimer(duration, t1.bindUnaryCallbackGuarded$1$1(callback, type$.Timer));
    },
    AsyncError$: function(error, stackTrace) {
      var t1 = stackTrace == null ? P.AsyncError_defaultStackTrace(error) : stackTrace;
      P.ArgumentError_checkNotNull(error, "error");
      return new P.AsyncError(error, t1);
    },
    AsyncError_defaultStackTrace: function(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return C.C__StringStackTrace;
    },
    _rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
      var t1 = {};
      t1.error = error;
      t1.stackTrace = stackTrace;
      if (error == null) {
        t1.error = new P.ArgumentError(false, null, "error", "Must not be null");
        t1.stackTrace = P.StackTrace_current();
      }
      P._schedulePriorityAsyncCallback(new P._rootHandleUncaughtError_closure(t1));
    },
    _rootRun: function($self, $parent, zone, f) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary: function($self, $parent, zone, f, arg) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary: function($self, $parent, zone, f, arg1, arg2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask: function($self, $parent, zone, f) {
      var t1 = C.C__RootZone !== zone;
      if (t1)
        f = !(!t1 || false) ? zone.bindCallbackGuarded$1(f) : zone.bindCallback$1$1(f, type$.void);
      P._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl(t0) {
      this._once = t0;
      this._handle = null;
      this._tick = 0;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _TimerImpl$periodic_closure: function _TimerImpl$periodic_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.milliseconds = t1;
      _.start = t2;
      _.callback = t3;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _asyncStarHelper_closure: function _asyncStarHelper_closure(t0, t1) {
      this.controller = t0;
      this.bodyFunctionOrErrorCode = t1;
    },
    _asyncStarHelper_closure0: function _asyncStarHelper_closure0(t0, t1) {
      this.controller = t0;
      this.bodyFunctionOrErrorCode = t1;
    },
    _AsyncStarStreamController: function _AsyncStarStreamController(t0) {
      var _ = this;
      _.controller = null;
      _.isSuspended = false;
      _.cancelationFuture = null;
      _.$ti = t0;
    },
    _AsyncStarStreamController__resumeBody: function _AsyncStarStreamController__resumeBody(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController__resumeBody_closure: function _AsyncStarStreamController__resumeBody_closure(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController_closure: function _AsyncStarStreamController_closure(t0) {
      this._resumeBody = t0;
    },
    _AsyncStarStreamController_closure0: function _AsyncStarStreamController_closure0(t0, t1) {
      this.$this = t0;
      this._resumeBody = t1;
    },
    _AsyncStarStreamController_closure1: function _AsyncStarStreamController_closure1(t0, t1) {
      this.$this = t0;
      this.body = t1;
    },
    _AsyncStarStreamController__closure: function _AsyncStarStreamController__closure(t0) {
      this.body = t0;
    },
    _IterationMarker: function _IterationMarker(t0, t1) {
      this.value = t0;
      this.state = t1;
    },
    _SyncStarIterator: function _SyncStarIterator(t0) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._async$_current = null;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    Future: function Future() {
    },
    Future_Future$delayed_closure: function Future_Future$delayed_closure(t0, t1) {
      this.computation = t0;
      this.result = t1;
    },
    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.cleanUp = t1;
      _.eagerError = t2;
      _.result = t3;
    },
    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.pos = t1;
      _.result = t2;
      _.cleanUp = t3;
      _.eagerError = t4;
      _.T = t5;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.target = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.target = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.target = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2, t3) {
      var _ = this;
      _._box_1 = t0;
      _._box_0 = t1;
      _.listener = t2;
      _.hasError = t3;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1, t2) {
      this._box_0 = t0;
      this.listener = t1;
      this.sourceResult = t2;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1, t2) {
      this._box_1 = t0;
      this._box_0 = t1;
      this.listener = t2;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_Stream$fromIterable_closure: function Stream_Stream$fromIterable_closure(t0, t1) {
      this.elements = t0;
      this.T = t1;
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    StreamSubscription: function StreamSubscription() {
    },
    StreamTransformerBase: function StreamTransformerBase() {
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._async$_controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3) {
      var _ = this;
      _._async$_controller = t0;
      _._onDone = _._async$_onError = _._async$_onData = null;
      _._zone = t1;
      _._state = t2;
      _._pending = _._cancelFuture = null;
      _.$ti = t3;
    },
    _AddStreamState: function _AddStreamState() {
    },
    _AddStreamState_cancel_closure: function _AddStreamState_cancel_closure(t0) {
      this.$this = t0;
    },
    _StreamControllerAddStreamState: function _StreamControllerAddStreamState(t0, t1, t2) {
      this.varData = t0;
      this.addStreamFuture = t1;
      this.addSubscription = t2;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._onDone = _._async$_onError = _._async$_onData = null;
      _._zone = t0;
      _._state = t1;
      _._pending = _._cancelFuture = null;
      _.$ti = t2;
    },
    _BufferingStreamSubscription__sendError_sendError: function _BufferingStreamSubscription__sendError_sendError(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _GeneratedStreamImpl: function _GeneratedStreamImpl(t0, t1) {
      this._pending = t0;
      this._isUsed = false;
      this.$ti = t1;
    },
    _IterablePendingEvents: function _IterablePendingEvents(t0) {
      this._async$_iterator = t0;
      this._state = 0;
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0) {
      this.value = t0;
      this.next = null;
    },
    _DelayedError: function _DelayedError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
      this.next = null;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents() {
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _StreamImplEvents: function _StreamImplEvents() {
      this.lastPendingEvent = this.firstPendingEvent = null;
      this._state = 0;
    },
    _StreamIterator: function _StreamIterator() {
    },
    Timer: function Timer() {
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _Zone: function _Zone() {
    },
    _rootHandleUncaughtError_closure: function _rootHandleUncaughtError_closure(t0) {
      this._box_0 = t0;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallback_closure: function _RootZone_bindCallback_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.R = t2;
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    HashMap_HashMap: function($K, $V) {
      return new P._HashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_HashMap<1,2>"));
    },
    _HashMap__getTableEntry: function(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry: function(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable: function() {
      var table = Object.create(null);
      P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap_LinkedHashMap: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap$_literal: function(keyValuePairs, $K, $V) {
      return H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>")));
    },
    LinkedHashMap_LinkedHashMap$_empty: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    _LinkedIdentityHashMap__LinkedIdentityHashMap$es6: function($K, $V) {
      return new P._LinkedIdentityHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_LinkedIdentityHashMap<1,2>"));
    },
    HashSet_HashSet: function($E) {
      return new P._HashSet($E._eval$1("_HashSet<0>"));
    },
    _HashSet__newHashTable: function() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashSet_LinkedHashSet: function($E) {
      return new P._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty: function($E) {
      return new P._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_literal: function(values, $E) {
      return H.fillLiteralSet(values, new P._LinkedHashSet($E._eval$1("_LinkedHashSet<0>")));
    },
    _LinkedHashSet__newHashTable: function() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$: function(_set, _modifications) {
      var t1 = new P._LinkedHashSetIterator(_set, _modifications);
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    HashMap_HashMap$from: function(other, $K, $V) {
      var result = P.HashMap_HashMap($K, $V);
      other.forEach$1(0, new P.HashMap_HashMap$from_closure(result));
      return result;
    },
    HashSet_HashSet$from: function(elements, $E) {
      var t1,
        result = P.HashSet_HashSet($E);
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        result.add$1(0, t1.get$current(t1));
      return result;
    },
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (P._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = H.setRuntimeTypeInfo([], type$.JSArray_String);
      $._toStringVisiting.push(iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        $._toStringVisiting.pop();
      }
      t1 = P.StringBuffer__writeAll(leftDelimiter, parts, ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (P._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new P.StringBuffer(leftDelimiter);
      $._toStringVisiting.push(iterable);
      try {
        t1 = buffer;
        t1._contents = P.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting: function(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = J.get$iterator$ax(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = H.S(it.get$current(it));
        parts.push(next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        ultimateString = parts.pop();
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current(it);
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            parts.push(H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current(it);
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current(it);
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                $length -= parts.pop().length + 2;
                --count;
              }
              parts.push("...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        parts.push(elision);
      parts.push(penultimateString);
      parts.push(ultimateString);
    },
    LinkedHashMap_LinkedHashMap$from: function(other, $K, $V) {
      var result = P.LinkedHashMap_LinkedHashMap($K, $V);
      J.forEach$1$ax(other, new P.LinkedHashMap_LinkedHashMap$from_closure(result));
      return result;
    },
    LinkedHashSet_LinkedHashSet$from: function(elements, $E) {
      var t1,
        result = P.LinkedHashSet_LinkedHashSet($E);
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        result.add$1(0, t1.get$current(t1));
      return result;
    },
    MapBase_mapToString: function(m) {
      var result, t1 = {};
      if (P._isToStringVisiting(m))
        return "{...}";
      result = new P.StringBuffer("");
      try {
        $._toStringVisiting.push(m);
        result._contents += "{";
        t1.first = true;
        J.forEach$1$ax(m, new P.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListQueue$: function(initialCapacity, $E) {
      var t2,
        t1 = new P.ListQueue($E._eval$1("ListQueue<0>"));
      if (initialCapacity == null || initialCapacity < 8)
        initialCapacity = 8;
      else if ((initialCapacity & initialCapacity - 1) !== 0)
        initialCapacity = P.ListQueue__nextPowerOf2(initialCapacity);
      t2 = new Array(initialCapacity);
      t2.fixed$length = Array;
      t1._table = H.setRuntimeTypeInfo(t2, $E._eval$1("JSArray<0>"));
      return t1;
    },
    ListQueue__nextPowerOf2: function(number) {
      var nextNumber;
      number = (number << 1 >>> 0) - 1;
      for (; true; number = nextNumber) {
        nextNumber = (number & number - 1) >>> 0;
        if (nextNumber === 0)
          return number;
      }
    },
    _dynamicCompare: function(a, b) {
      return J.compareTo$1$ns(a, b);
    },
    _defaultCompare: function($K) {
      if ($K._eval$1("int(0,0)")._is(P.core_Comparable_compare$closure()))
        return P.core_Comparable_compare$closure();
      return P.collection___dynamicCompare$closure();
    },
    SplayTreeMap$: function($K, $V) {
      var t1 = P._defaultCompare($K);
      return new P.SplayTreeMap(new P._SplayTreeMapNode(null, null, $K._eval$1("@<0>")._bind$1($V)._eval$1("_SplayTreeMapNode<1,2>")), t1, new P.SplayTreeMap_closure($K), $K._eval$1("@<0>")._bind$1($V)._eval$1("SplayTreeMap<1,2>"));
    },
    SplayTreeSet$: function(compare, isValidKey, $E) {
      var t1 = compare == null ? P._defaultCompare($E) : compare,
        t2 = isValidKey == null ? new P.SplayTreeSet_closure($E) : isValidKey;
      return new P.SplayTreeSet(new P._SplayTreeNode(null, $E._eval$1("_SplayTreeNode<0>")), t1, t2, $E._eval$1("SplayTreeSet<0>"));
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMap_values_closure: function _HashMap_values_closure(t0) {
      this.$this = t0;
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1) {
      var _ = this;
      _._collection$_map = t0;
      _._collection$_keys = t1;
      _._offset = 0;
      _._collection$_current = null;
    },
    _LinkedIdentityHashMap: function _LinkedIdentityHashMap(t0) {
      var _ = this;
      _._length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    _HashSet: function _HashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._elements = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashSetIterator: function _HashSetIterator(t0, t1) {
      var _ = this;
      _._set = t0;
      _._elements = t1;
      _._offset = 0;
      _._collection$_current = null;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
    },
    HashMap_HashMap$from_closure: function HashMap_HashMap$from_closure(t0) {
      this.result = t0;
    },
    IterableMixin: function IterableMixin() {
    },
    IterableBase: function IterableBase() {
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0) {
      this.result = t0;
    },
    LinkedHashSet: function LinkedHashSet() {
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    MapMixin: function MapMixin() {
    },
    MapMixin_entries_closure: function MapMixin_entries_closure(t0) {
      this.$this = t0;
    },
    _MapBaseValueIterable: function _MapBaseValueIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _MapBaseValueIterator: function _MapBaseValueIterator(t0, t1) {
      this._collection$_keys = t0;
      this._collection$_map = t1;
      this._collection$_current = null;
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ListQueue: function ListQueue(t0) {
      var _ = this;
      _._table = null;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t0;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3) {
      var _ = this;
      _._queue = t0;
      _._end = t1;
      _._modificationCount = t2;
      _._collection$_position = t3;
      _._collection$_current = null;
    },
    SetMixin: function SetMixin() {
    },
    _SetBase: function _SetBase() {
    },
    _UnmodifiableSet: function _UnmodifiableSet(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _SplayTreeNode: function _SplayTreeNode(t0, t1) {
      var _ = this;
      _.key = t0;
      _.right = _.left = null;
      _.$ti = t1;
    },
    _SplayTreeMapNode: function _SplayTreeMapNode(t0, t1, t2) {
      var _ = this;
      _.value = t0;
      _.key = t1;
      _.right = _.left = null;
      _.$ti = t2;
    },
    _SplayTree: function _SplayTree() {
    },
    SplayTreeMap: function SplayTreeMap(t0, t1, t2, t3) {
      var _ = this;
      _._root = null;
      _._dummy = t0;
      _._comparator = t1;
      _._validKey = t2;
      _._splayCount = _._modificationCount = _._count = 0;
      _.$ti = t3;
    },
    SplayTreeMap_closure: function SplayTreeMap_closure(t0) {
      this.K = t0;
    },
    _SplayTreeIterator: function _SplayTreeIterator() {
    },
    _SplayTreeKeyIterable: function _SplayTreeKeyIterable(t0, t1) {
      this._tree = t0;
      this.$ti = t1;
    },
    _SplayTreeValueIterable: function _SplayTreeValueIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _SplayTreeKeyIterator: function _SplayTreeKeyIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._tree = t0;
      _._workList = t1;
      _._modificationCount = t2;
      _._splayCount = t3;
      _._currentNode = null;
      _.$ti = t4;
    },
    _SplayTreeValueIterator: function _SplayTreeValueIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._tree = t0;
      _._workList = t1;
      _._modificationCount = t2;
      _._splayCount = t3;
      _._currentNode = null;
      _.$ti = t4;
    },
    _SplayTreeNodeIterator: function _SplayTreeNodeIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._tree = t0;
      _._workList = t1;
      _._modificationCount = t2;
      _._splayCount = t3;
      _._currentNode = null;
      _.$ti = t4;
    },
    SplayTreeSet: function SplayTreeSet(t0, t1, t2, t3) {
      var _ = this;
      _._root = null;
      _._dummy = t0;
      _._comparator = t1;
      _._validKey = t2;
      _._splayCount = _._modificationCount = _._count = 0;
      _.$ti = t3;
    },
    SplayTreeSet_closure: function SplayTreeSet_closure(t0) {
      this.E = t0;
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    _SplayTreeMap__SplayTree_MapMixin: function _SplayTreeMap__SplayTree_MapMixin() {
    },
    _SplayTreeSet__SplayTree_IterableMixin: function _SplayTreeSet__SplayTree_IterableMixin() {
    },
    _SplayTreeSet__SplayTree_IterableMixin_SetMixin: function _SplayTreeSet__SplayTree_IterableMixin_SetMixin() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    _parseJson: function(source, reviver) {
      var parsed, e, exception, t1;
      if (typeof source != "string")
        throw H.wrapException(H.argumentErrorValue(source));
      parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = H.unwrapException(exception);
        t1 = P.FormatException$(String(e), null, null);
        throw H.wrapException(t1);
      }
      t1 = P._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy: function(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new P._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = P._convertJsonToDartLazy(object[i]);
      return object;
    },
    Utf8Decoder__convertIntercepted: function(allowMalformed, codeUnits, start, end) {
      if (codeUnits instanceof Uint8Array)
        return P.Utf8Decoder__convertInterceptedUint8List(false, codeUnits, start, end);
      return null;
    },
    Utf8Decoder__convertInterceptedUint8List: function(allowMalformed, codeUnits, start, end) {
      var t1, $length,
        decoder = $.$get$Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      t1 = 0 === start;
      if (t1 && true)
        return P.Utf8Decoder__useTextDecoderChecked(decoder, codeUnits);
      $length = codeUnits.length;
      end = P.RangeError_checkValidRange(start, end, $length);
      if (t1 && end === $length)
        return P.Utf8Decoder__useTextDecoderChecked(decoder, codeUnits);
      return P.Utf8Decoder__useTextDecoderChecked(decoder, codeUnits.subarray(start, end));
    },
    Utf8Decoder__useTextDecoderChecked: function(decoder, codeUnits) {
      if (P.Utf8Decoder__unsafe(codeUnits))
        return null;
      return P.Utf8Decoder__useTextDecoderUnchecked(decoder, codeUnits);
    },
    Utf8Decoder__useTextDecoderUnchecked: function(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
      }
      return null;
    },
    Utf8Decoder__unsafe: function(codeUnits) {
      var i,
        limit = codeUnits.length - 2;
      for (i = 0; i < limit; ++i)
        if (codeUnits[i] === 237)
          if ((codeUnits[i + 1] & 224) === 160)
            return true;
      return false;
    },
    Utf8Decoder__makeDecoder: function() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
      }
      return null;
    },
    _scanOneByteCharacters: function(units, from, endIndex) {
      var t1, i, unit;
      for (t1 = J.getInterceptor$asx(units), i = from; i < endIndex; ++i) {
        unit = t1.$index(units, i);
        if ((unit & 127) !== unit)
          return i - from;
      }
      return endIndex - from;
    },
    Base64Codec__checkPadding: function(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (C.JSInt_methods.$mod($length, 4) !== 0)
        throw H.wrapException(P.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw H.wrapException(P.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw H.wrapException(P.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    JsonUnsupportedObjectError$: function(unsupportedObject, cause, partialResult) {
      return new P.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable: function(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier_stringify: function(object, toEncodable, indent) {
      var output = new P.StringBuffer(""),
        t1 = toEncodable == null ? P.convert___defaultToEncodable$closure() : toEncodable,
        stringifier = new P._JsonStringStringifier(output, [], t1);
      stringifier.writeObject$1(object);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._convert$_data = null;
    },
    _JsonMap_values_closure: function _JsonMap_values_closure(t0) {
      this.$this = t0;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._convert$_parent = t0;
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    Encoding: function Encoding() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = 0;
      this._convert$_buffer = t0;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0, t1) {
      var _ = this;
      _._allowMalformed = t0;
      _._stringSink = t1;
      _._isFirstCharacter = true;
      _._extraUnits = _._expectedUnits = _._convert$_value = 0;
    },
    Function_apply: function($function, positionalArguments) {
      return H.Primitives_applyFunction($function, positionalArguments, null);
    },
    int_parse: function(source, onError, radix) {
      var value = H.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      if (onError != null)
        return onError.call$1(source);
      throw H.wrapException(P.FormatException$(source, null, null));
    },
    double_parse: function(source) {
      var value = H.Primitives_parseDouble(source);
      if (value != null)
        return value;
      throw H.wrapException(P.FormatException$("Invalid double", source, null));
    },
    Error__objectToString: function(object) {
      if (object instanceof H.Closure)
        return object.toString$0(0);
      return "Instance of '" + H.S(H.Primitives_objectTypeName(object)) + "'";
    },
    List_List$filled: function($length, fill, $E) {
      var i,
        result = J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && true)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from: function(elements, growable, $E) {
      var t1,
        list = H.setRuntimeTypeInfo([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current(t1));
      if (growable)
        return list;
      return J.JSArray_markFixedList(list);
    },
    List_List$unmodifiable: function(elements, $E) {
      return J.JSArray_markUnmodifiableList(P.List_List$from(elements, false, $E));
    },
    String_String$fromCharCodes: function(charCodes, start, end) {
      var len;
      if (Array.isArray(charCodes)) {
        len = charCodes.length;
        end = P.RangeError_checkValidRange(start, end, len);
        return H.Primitives_stringFromCharCodes(start > 0 || end < len ? C.JSArray_methods.sublist$2(charCodes, start, end) : charCodes);
      }
      if (type$.NativeUint8List._is(charCodes))
        return H.Primitives_stringFromNativeUint8List(charCodes, start, P.RangeError_checkValidRange(start, end, charCodes.length));
      return P.String__stringFromIterable(charCodes, start, end);
    },
    String__stringFromIterable: function(charCodes, start, end) {
      var t1, it, i, list, _null = null;
      if (start < 0)
        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$asx(charCodes), _null, _null));
      t1 = end == null;
      if (!t1 && end < start)
        throw H.wrapException(P.RangeError$range(end, start, J.get$length$asx(charCodes), _null, _null));
      it = J.get$iterator$ax(charCodes);
      for (i = 0; i < start; ++i)
        if (!it.moveNext$0())
          throw H.wrapException(P.RangeError$range(start, 0, i, _null, _null));
      list = [];
      if (t1)
        for (; it.moveNext$0();)
          list.push(it.get$current(it));
      else
        for (i = start; i < end; ++i) {
          if (!it.moveNext$0())
            throw H.wrapException(P.RangeError$range(end, start, i, _null, _null));
          list.push(it.get$current(it));
        }
      return H.Primitives_stringFromCharCodes(list);
    },
    RegExp_RegExp: function(source, caseSensitive) {
      return new H.JSSyntaxRegExp(source, H.JSSyntaxRegExp_makeNative(source, false, caseSensitive, false, false, false));
    },
    StringBuffer__writeAll: function(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += H.S(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        string += H.S(iterator.get$current(iterator));
        for (; iterator.moveNext$0();)
          string = string + separator + H.S(iterator.get$current(iterator));
      }
      return string;
    },
    NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments) {
      return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments);
    },
    _Uri__uriEncode: function(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte,
        _s16_ = "0123456789ABCDEF";
      if (encoding === C.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding()._nativeRegExp;
        if (typeof text != "string")
          H.throwExpression(H.argumentErrorValue(text));
        t1 = t1.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      bytes = encoding.get$encoder().convert$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128 && (canonicalTable[byte >>> 4] & 1 << (byte & 15)) !== 0)
          t2 += H.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    StackTrace_current: function() {
      var stackTrace, exception;
      if ($.$get$_hasErrorStackProperty())
        return H.getTraceFromException(new Error());
      try {
        throw H.wrapException("");
      } catch (exception) {
        H.unwrapException(exception);
        stackTrace = H.getTraceFromException(exception);
        return stackTrace;
      }
    },
    Comparable_compare: function(a, b) {
      return J.compareTo$1$ns(a, b);
    },
    DateTime$_withValue: function(_value, isUtc) {
      var t1;
      if (Math.abs(_value) <= 864e13)
        t1 = false;
      else
        t1 = true;
      if (t1)
        H.throwExpression(P.ArgumentError$("DateTime is outside valid range: " + _value));
      P.ArgumentError_checkNotNull(isUtc, "isUtc");
      return new P.DateTime(_value, isUtc);
    },
    DateTime__fourDigits: function(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits: function(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Duration$: function(microseconds, milliseconds) {
      return new P.Duration(1000 * milliseconds + microseconds);
    },
    Error_safeToString: function(object) {
      if (typeof object == "number" || H._isBool(object) || null == object)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return P.Error__objectToString(object);
    },
    AssertionError$: function(message) {
      return new P.AssertionError(message);
    },
    ArgumentError$: function(message) {
      return new P.ArgumentError(false, null, null, message);
    },
    ArgumentError$value: function(value, $name, message) {
      return new P.ArgumentError(true, value, $name, message);
    },
    ArgumentError$notNull: function($name) {
      return new P.ArgumentError(false, null, $name, "Must not be null");
    },
    ArgumentError_checkNotNull: function(argument, $name) {
      if (argument == null)
        throw H.wrapException(P.ArgumentError$notNull($name));
      return argument;
    },
    RangeError$: function(message) {
      var _null = null;
      return new P.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value: function(value, $name) {
      return new P.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
      return new P.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValueInInterval: function(value, minValue, maxValue, $name) {
      if (value < minValue || value > maxValue)
        throw H.wrapException(P.RangeError$range(value, minValue, maxValue, $name, null));
      return value;
    },
    RangeError_checkValidIndex: function(index, indexable, $name, $length) {
      if ($length == null)
        $length = indexable.get$length(indexable);
      if (0 > index || index >= $length)
        throw H.wrapException(P.IndexError$(index, indexable, $name == null ? "index" : $name, null, $length));
      return index;
    },
    RangeError_checkValidRange: function(start, end, $length) {
      if (0 > start || start > $length)
        throw H.wrapException(P.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw H.wrapException(P.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative: function(value, $name) {
      if (value < 0)
        throw H.wrapException(P.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$: function(invalidValue, indexable, $name, message, $length) {
      var t1 = $length == null ? J.get$length$asx(indexable) : $length;
      return new P.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$: function(message) {
      return new P.UnsupportedError(message);
    },
    UnimplementedError$: function(message) {
      return new P.UnimplementedError(message);
    },
    StateError$: function(message) {
      return new P.StateError(message);
    },
    ConcurrentModificationError$: function(modifiedObject) {
      return new P.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception: function(message) {
      return new P._Exception(message);
    },
    FormatException$: function(message, source, offset) {
      return new P.FormatException(message, source, offset);
    },
    List_List$generate: function($length, generator, growable, $E) {
      var result, t2, i,
        t1 = $E._eval$1("JSArray<0>");
      if (growable) {
        result = H.setRuntimeTypeInfo([], t1);
        C.JSArray_methods.set$length(result, $length);
      } else {
        t2 = new Array($length);
        t2.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t2, t1);
      }
      for (i = 0; i < $length; ++i)
        result[i] = generator.call$1(i);
      return result;
    },
    Map_castFrom: function(source, $K, $V, K2, V2) {
      return new H.CastMap(source, $K._eval$1("@<0>")._bind$1($V)._bind$1(K2)._bind$1(V2)._eval$1("CastMap<1,2,3,4>"));
    },
    print: function(object) {
      H.printString(H.S(object));
    },
    Stopwatch$: function() {
      if ($.Stopwatch__frequency == null) {
        H.Primitives_initTicker();
        $.Stopwatch__frequency = $.Primitives_timerFrequency;
      }
      return new P.Stopwatch();
    },
    Uri_parse: function(uri) {
      var delta, t1, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t2, schemeAuth, queryStart0, pathStart0, _null = null,
        end = uri.length;
      if (end >= 5) {
        delta = ((J._codeUnitAt$1$s(uri, 4) ^ 58) * 3 | C.JSString_methods._codeUnitAt$1(uri, 0) ^ 100 | C.JSString_methods._codeUnitAt$1(uri, 1) ^ 97 | C.JSString_methods._codeUnitAt$1(uri, 2) ^ 116 | C.JSString_methods._codeUnitAt$1(uri, 3) ^ 97) >>> 0;
        if (delta === 0)
          return P.UriData__parse(end < end ? C.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return P.UriData__parse(C.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      t1 = new Array(8);
      t1.fixed$length = Array;
      indices = H.setRuntimeTypeInfo(t1, type$.JSArray_int);
      indices[0] = 0;
      indices[1] = -1;
      indices[2] = -1;
      indices[7] = -1;
      indices[3] = 0;
      indices[4] = 0;
      indices[5] = end;
      indices[6] = end;
      if (P._scan(uri, 0, end, 0, indices) >= 14)
        indices[7] = end;
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (P._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      if (isSimple)
        if (hostStart > schemeEnd + 3) {
          scheme = _null;
          isSimple = false;
        } else {
          t1 = portStart > 0;
          if (t1 && portStart + 1 === pathStart) {
            scheme = _null;
            isSimple = false;
          } else {
            if (!(queryStart < end && queryStart === pathStart + 2 && J.startsWith$2$s(uri, "..", pathStart)))
              t2 = queryStart > pathStart + 2 && J.startsWith$2$s(uri, "/..", queryStart - 3);
            else
              t2 = true;
            if (t2) {
              scheme = _null;
              isSimple = false;
            } else {
              if (schemeEnd === 4)
                if (J.startsWith$2$s(uri, "file", 0)) {
                  if (hostStart <= 0) {
                    if (!C.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                      schemeAuth = "file:///";
                      delta = 3;
                    } else {
                      schemeAuth = "file://";
                      delta = 2;
                    }
                    uri = schemeAuth + C.JSString_methods.substring$2(uri, pathStart, end);
                    schemeEnd -= 0;
                    t1 = delta - 0;
                    queryStart += t1;
                    fragmentStart += t1;
                    end = uri.length;
                    hostStart = 7;
                    portStart = 7;
                    pathStart = 7;
                  } else if (pathStart === queryStart) {
                    queryStart0 = queryStart + 1;
                    ++fragmentStart;
                    uri = C.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                    ++end;
                    queryStart = queryStart0;
                  }
                  scheme = "file";
                } else if (C.JSString_methods.startsWith$2(uri, "http", 0)) {
                  if (t1 && portStart + 3 === pathStart && C.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                    pathStart0 = pathStart - 3;
                    queryStart -= 3;
                    fragmentStart -= 3;
                    uri = C.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "http";
                } else
                  scheme = _null;
              else if (schemeEnd === 5 && J.startsWith$2$s(uri, "https", 0)) {
                if (t1 && portStart + 4 === pathStart && J.startsWith$2$s(uri, "443", portStart + 1)) {
                  pathStart0 = pathStart - 4;
                  queryStart -= 4;
                  fragmentStart -= 4;
                  uri = J.replaceRange$3$asx(uri, portStart, pathStart, "");
                  end -= 3;
                  pathStart = pathStart0;
                }
                scheme = "https";
              } else
                scheme = _null;
              isSimple = true;
            }
          }
        }
      else
        scheme = _null;
      if (isSimple) {
        t1 = uri.length;
        if (end < t1) {
          uri = J.substring$2$s(uri, 0, end);
          schemeEnd -= 0;
          hostStart -= 0;
          portStart -= 0;
          pathStart -= 0;
          queryStart -= 0;
          fragmentStart -= 0;
        }
        return new P._SimpleUri(uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      }
      return P._Uri__Uri$notSimple(uri, 0, end, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
    },
    Uri_decodeComponent: function(encodedComponent) {
      return P._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, C.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address: function(host, start, end) {
      var i, partStart, partIndex, char, part, partIndex0, _null = null,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new P.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (i = start, partStart = i, partIndex = 0; i < end; ++i) {
        char = C.JSString_methods.codeUnitAt$1(host, i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = P.int_parse(C.JSString_methods.substring$2(host, partStart, i), _null, _null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = P.int_parse(C.JSString_methods.substring$2(host, partStart, end), _null, _null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address: function(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, bytes, wildCardLength, index, value, j,
        error = new P.Uri_parseIPv6Address_error(host),
        parseHex = new P.Uri_parseIPv6Address_parseHex(error, host);
      if (host.length < 2)
        error.call$1("address is too short");
      parts = H.setRuntimeTypeInfo([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        char = C.JSString_methods.codeUnitAt$1(host, i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (C.JSString_methods.codeUnitAt$1(host, i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            parts.push(-1);
            wildcardSeen = true;
          } else
            parts.push(parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$1("too few parts");
      atEnd = partStart === end;
      t1 = C.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          parts.push(parseHex.call$2(partStart, end));
        else {
          last = P.Uri__parseIPv4Address(host, partStart, end);
          parts.push((last[0] << 8 | last[1]) >>> 0);
          parts.push((last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$1("an address with a wildcard must have less than 7 parts");
      } else if (parts.length !== 8)
        error.call$1("an address without a wildcard must contain exactly 8 parts");
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            bytes[index] = 0;
            bytes[index + 1] = 0;
            index += 2;
          }
        else {
          bytes[index] = C.JSInt_methods._shrOtherPositive$1(value, 8);
          bytes[index + 1] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri__Uri$notSimple: function(uri, start, end, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme) {
      var userInfoStart, userInfo, host, t1, port, path, query, _null = null;
      if (scheme == null)
        if (schemeEnd > start)
          scheme = P._Uri__makeScheme(uri, start, schemeEnd);
        else {
          if (schemeEnd === start)
            P._Uri__fail(uri, start, "Invalid empty scheme");
          scheme = "";
        }
      if (hostStart > start) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? P._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = P._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        port = t1 < pathStart ? P._Uri__makePort(P.int_parse(J.substring$2$s(uri, t1, pathStart), new P._Uri__Uri$notSimple_closure(uri, portStart), _null), scheme) : _null;
      } else {
        port = _null;
        host = port;
        userInfo = "";
      }
      path = P._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? P._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return new P._Uri(scheme, userInfo, host, port, path, query, fragmentStart < end ? P._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    _Uri__defaultPort: function(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail: function(uri, index, message) {
      throw H.wrapException(P.FormatException$(message, uri, index));
    },
    _Uri__makePort: function(port, scheme) {
      if (port != null && port === P._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost: function(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (host == null)
        return null;
      if (start === end)
        return "";
      if (C.JSString_methods.codeUnitAt$1(host, start) === 91) {
        t1 = end - 1;
        if (C.JSString_methods.codeUnitAt$1(host, t1) !== 93)
          P._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t2 = start + 1;
        index = P._Uri__checkZoneID(host, t2, t1);
        if (index < t1) {
          zoneIDstart = index + 1;
          zoneID = P._Uri__normalizeZoneID(host, C.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t1, "%25");
        } else
          zoneID = "";
        P.Uri_parseIPv6Address(host, t2, index);
        return C.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + "]";
      }
      for (i = start; i < end; ++i)
        if (C.JSString_methods.codeUnitAt$1(host, i) === 58) {
          index = C.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = P._Uri__normalizeZoneID(host, C.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          P.Uri_parseIPv6Address(host, start, index);
          return "[" + C.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      return P._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID: function(host, start, end) {
      var index = C.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID: function(host, start, end, prefix) {
      var index, sectionStart, isNormalized, char, replacement, t1, t2, tail, sourceLength,
        buffer = prefix !== "" ? new P.StringBuffer(prefix) : null;
      for (index = start, sectionStart = index, isNormalized = true; index < end;) {
        char = C.JSString_methods.codeUnitAt$1(host, index);
        if (char === 37) {
          replacement = P._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new P.StringBuffer("");
          t2 = buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);
          if (t1)
            replacement = C.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            P._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t2 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (C.List_nxB[char >>> 4] & 1 << (char & 15)) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new P.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else {
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = C.JSString_methods.codeUnitAt$1(host, index + 1);
            if ((tail & 64512) === 56320) {
              char = 65536 | (char & 1023) << 10 | tail & 1023;
              sourceLength = 2;
            } else
              sourceLength = 1;
          } else
            sourceLength = 1;
          if (buffer == null)
            buffer = new P.StringBuffer("");
          buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);
          buffer._contents += P._Uri__escapeChar(char);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return C.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end)
        buffer._contents += C.JSString_methods.substring$2(host, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName: function(host, start, end) {
      var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail;
      for (index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        char = C.JSString_methods.codeUnitAt$1(host, index);
        if (char === 37) {
          replacement = P._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new P.StringBuffer("");
          slice = C.JSString_methods.substring$2(host, sectionStart, index);
          t2 = buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          if (t1) {
            replacement = C.JSString_methods.substring$2(host, index, index + 3);
            sourceLength = 3;
          } else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          } else
            sourceLength = 3;
          buffer._contents = t2 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (C.List_qNA[char >>> 4] & 1 << (char & 15)) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new P.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else if (char <= 93 && (C.List_2Vk[char >>> 4] & 1 << (char & 15)) !== 0)
          P._Uri__fail(host, index, "Invalid character");
        else {
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = C.JSString_methods.codeUnitAt$1(host, index + 1);
            if ((tail & 64512) === 56320) {
              char = 65536 | (char & 1023) << 10 | tail & 1023;
              sourceLength = 2;
            } else
              sourceLength = 1;
          } else
            sourceLength = 1;
          if (buffer == null)
            buffer = new P.StringBuffer("");
          slice = C.JSString_methods.substring$2(host, sectionStart, index);
          buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          buffer._contents += P._Uri__escapeChar(char);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return C.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = C.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme: function(scheme, start, end) {
      var i, containsUpperCase, codeUnit;
      if (start === end)
        return "";
      if (!P._Uri__isAlphabeticCharacter(J.getInterceptor$s(scheme)._codeUnitAt$1(scheme, start)))
        P._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        codeUnit = C.JSString_methods._codeUnitAt$1(scheme, i);
        if (!(codeUnit < 128 && (C.List_JYB[codeUnit >>> 4] & 1 << (codeUnit & 15)) !== 0))
          P._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = C.JSString_methods.substring$2(scheme, start, end);
      return P._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme: function(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo: function(userInfo, start, end) {
      if (userInfo == null)
        return "";
      return P._Uri__normalizeOrSubstring(userInfo, start, end, C.List_gRj, false);
    },
    _Uri__makePath: function(path, start, end, pathSegments, scheme, hasAuthority) {
      var result,
        isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority,
        t1 = path == null;
      if (t1 && true)
        return isFile ? "/" : "";
      result = !t1 ? P._Uri__normalizeOrSubstring(path, start, end, C.List_qg4, true) : C.JSNull_methods.map$1$1(pathSegments, new P._Uri__makePath_closure(), type$.String).join$1(0, "/");
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !C.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return P._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath: function(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !C.JSString_methods.startsWith$1(path, "/"))
        return P._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return P._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery: function(query, start, end, queryParameters) {
      if (query != null)
        return P._Uri__normalizeOrSubstring(query, start, end, C.List_CVk, true);
      return null;
    },
    _Uri__makeFragment: function(fragment, start, end) {
      if (fragment == null)
        return null;
      return P._Uri__normalizeOrSubstring(fragment, start, end, C.List_CVk, true);
    },
    _Uri__normalizeEscape: function(source, index, lowerCase) {
      var firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2;
      if (t1 >= source.length)
        return "%";
      firstDigit = C.JSString_methods.codeUnitAt$1(source, index + 1);
      secondDigit = C.JSString_methods.codeUnitAt$1(source, t1);
      firstDigitValue = H.hexDigitValue(firstDigit);
      secondDigitValue = H.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127 && (C.List_nxB[C.JSInt_methods._shrOtherPositive$1(value, 4)] & 1 << (value & 15)) !== 0)
        return H.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return C.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar: function(char) {
      var t1, codeUnits, flag, encodedBytes, index, byte,
        _s16_ = "0123456789ABCDEF";
      if (char < 128) {
        t1 = new Array(3);
        t1.fixed$length = Array;
        codeUnits = H.setRuntimeTypeInfo(t1, type$.JSArray_int);
        codeUnits[0] = 37;
        codeUnits[1] = C.JSString_methods._codeUnitAt$1(_s16_, char >>> 4);
        codeUnits[2] = C.JSString_methods._codeUnitAt$1(_s16_, char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        t1 = new Array(3 * encodedBytes);
        t1.fixed$length = Array;
        codeUnits = H.setRuntimeTypeInfo(t1, type$.JSArray_int);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = C.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          codeUnits[index] = 37;
          codeUnits[index + 1] = C.JSString_methods._codeUnitAt$1(_s16_, byte >>> 4);
          codeUnits[index + 2] = C.JSString_methods._codeUnitAt$1(_s16_, byte & 15);
          index += 3;
        }
      }
      return P.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring: function(component, start, end, charTable, escapeDelimiters) {
      var t1 = P._Uri__normalize(component, start, end, charTable, escapeDelimiters);
      return t1 == null ? C.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize: function(component, start, end, charTable, escapeDelimiters) {
      var t1, index, sectionStart, buffer, char, replacement, sourceLength, t2, tail, _null = null;
      for (t1 = !escapeDelimiters, index = start, sectionStart = index, buffer = _null; index < end;) {
        char = C.JSString_methods.codeUnitAt$1(component, index);
        if (char < 127 && (charTable[char >>> 4] & 1 << (char & 15)) !== 0)
          ++index;
        else {
          if (char === 37) {
            replacement = P._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement) {
              replacement = "%25";
              sourceLength = 1;
            } else
              sourceLength = 3;
          } else if (t1 && char <= 93 && (C.List_2Vk[char >>> 4] & 1 << (char & 15)) !== 0) {
            P._Uri__fail(component, index, "Invalid character");
            sourceLength = _null;
            replacement = sourceLength;
          } else {
            if ((char & 64512) === 55296) {
              t2 = index + 1;
              if (t2 < end) {
                tail = C.JSString_methods.codeUnitAt$1(component, t2);
                if ((tail & 64512) === 56320) {
                  char = 65536 | (char & 1023) << 10 | tail & 1023;
                  sourceLength = 2;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
            } else
              sourceLength = 1;
            replacement = P._Uri__escapeChar(char);
          }
          if (buffer == null)
            buffer = new P.StringBuffer("");
          buffer._contents += C.JSString_methods.substring$2(component, sectionStart, index);
          buffer._contents += H.S(replacement);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end)
        buffer._contents += C.JSString_methods.substring$2(component, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments: function(path) {
      if (C.JSString_methods.startsWith$1(path, "."))
        return true;
      return C.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments: function(path) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!P._Uri__mayContainDotSegments(path))
        return path;
      output = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (J.$eq$(segment, "..")) {
          if (output.length !== 0) {
            output.pop();
            if (output.length === 0)
              output.push("");
          }
          appendSlash = true;
        } else if ("." === segment)
          appendSlash = true;
        else {
          output.push(segment);
          appendSlash = false;
        }
      }
      if (appendSlash)
        output.push("");
      return C.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath: function(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!P._Uri__mayContainDotSegments(path))
        return !allowScheme ? P._Uri__escapeScheme(path) : path;
      output = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment)
          if (output.length !== 0 && C.JSArray_methods.get$last(output) !== "..") {
            output.pop();
            appendSlash = true;
          } else {
            output.push("..");
            appendSlash = false;
          }
        else if ("." === segment)
          appendSlash = true;
        else {
          output.push(segment);
          appendSlash = false;
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        t1 = t1 === 1 && output[0].length === 0;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || C.JSArray_methods.get$last(output) === "..")
        output.push("");
      if (!allowScheme)
        output[0] = P._Uri__escapeScheme(output[0]);
      return C.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme: function(path) {
      var i, char,
        t1 = path.length;
      if (t1 >= 2 && P._Uri__isAlphabeticCharacter(J._codeUnitAt$1$s(path, 0)))
        for (i = 1; i < t1; ++i) {
          char = C.JSString_methods._codeUnitAt$1(path, i);
          if (char === 58)
            return C.JSString_methods.substring$2(path, 0, i) + "%3A" + C.JSString_methods.substring$1(path, i + 1);
          if (char > 127 || (C.List_JYB[char >>> 4] & 1 << (char & 15)) === 0)
            break;
        }
      return path;
    },
    _Uri__hexCharPairToByte: function(s, pos) {
      var byte, i, charCode;
      for (byte = 0, i = 0; i < 2; ++i) {
        charCode = C.JSString_methods._codeUnitAt$1(s, pos + i);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw H.wrapException(P.ArgumentError$("Invalid URL encoding"));
        }
      }
      return byte;
    },
    _Uri__uriDecode: function(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t2, bytes,
        t1 = J.getInterceptor$s(text),
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        codeUnit = t1._codeUnitAt$1(text, i);
        if (codeUnit <= 127)
          if (codeUnit !== 37)
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple) {
        if (C.C_Utf8Codec !== encoding)
          t2 = false;
        else
          t2 = true;
        if (t2)
          return t1.substring$2(text, start, end);
        else
          bytes = new H.CodeUnits(t1.substring$2(text, start, end));
      } else {
        bytes = H.setRuntimeTypeInfo([], type$.JSArray_int);
        for (i = start; i < end; ++i) {
          codeUnit = t1._codeUnitAt$1(text, i);
          if (codeUnit > 127)
            throw H.wrapException(P.ArgumentError$("Illegal percent encoding in URI"));
          if (codeUnit === 37) {
            if (i + 3 > text.length)
              throw H.wrapException(P.ArgumentError$("Truncated URI"));
            bytes.push(P._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else
            bytes.push(codeUnit);
        }
      }
      return encoding.decode$1(0, bytes);
    },
    _Uri__isAlphabeticCharacter: function(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__parse: function(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = H.setRuntimeTypeInfo([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = C.JSString_methods._codeUnitAt$1(text, i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw H.wrapException(P.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw H.wrapException(P.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        indices.push(i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          char = C.JSString_methods._codeUnitAt$1(text, i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          indices.push(equalsIndex);
        else {
          lastSeparator = C.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !C.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw H.wrapException(P.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      indices.push(i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = C.C_Base64Codec.normalize$3(0, text, t2, t1);
      else {
        data = P._Uri__normalize(text, t2, t1, C.List_CVk, true);
        if (data != null)
          text = C.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new P.UriData(text, indices, sourceUri);
    },
    _createTables: function() {
      var _s77_ = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=",
        _s1_ = ".", _s1_0 = ":", _s1_1 = "/", _s1_2 = "?", _s1_3 = "#",
        tables = P.List_List$generate(22, new P._createTables_closure(), true, type$.Uint8List),
        t1 = new P._createTables_build(tables),
        t2 = new P._createTables_setChars(),
        t3 = new P._createTables_setRange(),
        b = t1.call$2(0, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 14);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 3);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(14, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 15);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(15, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, "%", 225);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(1, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(2, 235);
      t2.call$3(b, _s77_, 139);
      t2.call$3(b, _s1_1, 131);
      t2.call$3(b, _s1_, 146);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(3, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 68);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(4, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "[", 232);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(5, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(6, 231);
      t3.call$3(b, "19", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(7, 231);
      t3.call$3(b, "09", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      t2.call$3(t1.call$2(8, 8), "]", 5);
      b = t1.call$2(9, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 16);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(16, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 17);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(17, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(10, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(18, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 19);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(19, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(11, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(12, 236);
      t2.call$3(b, _s77_, 12);
      t2.call$3(b, _s1_2, 12);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(13, 237);
      t2.call$3(b, _s77_, 13);
      t2.call$3(b, _s1_2, 13);
      t3.call$3(t1.call$2(20, 245), "az", 21);
      b = t1.call$2(21, 245);
      t3.call$3(b, "az", 21);
      t3.call$3(b, "09", 21);
      t2.call$3(b, "+-.", 21);
      return tables;
    },
    _scan: function(uri, start, end, state, indices) {
      var t1, i, table, char, transition,
        tables = $.$get$_scannerTables();
      for (t1 = J.getInterceptor$s(uri), i = start; i < end; ++i) {
        table = tables[state];
        char = t1._codeUnitAt$1(uri, i) ^ 96;
        transition = table[char > 95 ? 31 : char];
        state = transition & 31;
        indices[transition >>> 5] = i;
      }
      return state;
    },
    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {
      this._box_0 = t0;
      this.sb = t1;
    },
    bool: function bool() {
    },
    Comparable: function Comparable() {
    },
    DateTime: function DateTime(t0, t1) {
      this._value = t0;
      this.isUtc = t1;
    },
    double: function double() {
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    Duration_toString_sixDigits: function Duration_toString_sixDigits() {
    },
    Duration_toString_twoDigits: function Duration_toString_twoDigits() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3) {
      var _ = this;
      _._core$_receiver = t0;
      _._memberName = t1;
      _._core$_arguments = t2;
      _._namedArguments = t3;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Function: function Function() {
    },
    int: function int() {
    },
    Iterable: function Iterable() {
    },
    Iterator: function Iterator() {
    },
    List: function List() {
    },
    Map: function Map() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    num: function num() {
    },
    Object: function Object() {
    },
    Match: function Match() {
    },
    Set: function Set() {
    },
    StackTrace: function StackTrace() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    Stopwatch: function Stopwatch() {
      this._stop = this._core$_start = 0;
    },
    String: function String() {
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Symbol0: function Symbol0() {
    },
    Type: function Type() {
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _._hashCodeCache = _._text = _._pathSegments = null;
    },
    _Uri__Uri$notSimple_closure: function _Uri__Uri$notSimple_closure(t0, t1) {
      this.uri = t0;
      this.portStart = t1;
    },
    _Uri__makePath_closure: function _Uri__makePath_closure() {
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _createTables_closure: function _createTables_closure() {
    },
    _createTables_build: function _createTables_build(t0) {
      this.tables = t0;
    },
    _createTables_setChars: function _createTables_setChars() {
    },
    _createTables_setRange: function _createTables_setRange() {
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _._hashCodeCache = _._text = _._pathSegments = null;
    },
    ServiceExtensionResponse__validateErrorCode: function(errorCode) {
      var _s9_ = "errorCode";
      P.ArgumentError_checkNotNull(errorCode, _s9_);
      if (errorCode === -32602)
        return;
      if (errorCode >= -32016 && errorCode <= -32000)
        return;
      throw H.wrapException(P.ArgumentError$value(errorCode, _s9_, "Out of range"));
    },
    registerExtension: function(method, handler) {
      var t1;
      P.ArgumentError_checkNotNull(method, "method");
      if (!C.JSString_methods.startsWith$1(method, "ext."))
        throw H.wrapException(P.ArgumentError$value(method, "method", "Must begin with ext."));
      t1 = $.$get$_extensions();
      if (t1.$index(0, method) != null)
        throw H.wrapException(P.ArgumentError$("Extension already registered: " + method));
      P.ArgumentError_checkNotNull(handler, "handler");
      t1.$indexSet(0, method, handler);
    },
    postEvent: function(eventKind, eventData) {
      P.ArgumentError_checkNotNull(eventKind, "eventKind");
      P.ArgumentError_checkNotNull(eventData, "eventData");
      C.C_JsonCodec.encode$1(eventData);
    },
    Timeline_startSync: function($name, $arguments, flow) {
      P.ArgumentError_checkNotNull($name, "name");
      $.$get$Timeline__stack().push(null);
      return;
    },
    Timeline_finishSync: function() {
      var block,
        t1 = $.$get$Timeline__stack();
      if (t1.length === 0)
        throw H.wrapException(P.StateError$("Uneven calls to startSync and finishSync"));
      block = t1.pop();
      if (block == null)
        return;
      P._argumentsAsJson(block._developer$_arguments);
      t1 = block._flow;
      if (t1 != null) {
        H.S(t1.id);
        block._flow.toString;
        P._argumentsAsJson(null);
      }
    },
    Timeline_instantSync: function($name, $arguments) {
      P.ArgumentError_checkNotNull($name, "name");
      return;
    },
    Timeline_timeSync: function($name, $function, flow) {
      var t1;
      P.Timeline_startSync($name, null, flow);
      try {
        t1 = $function.call$0();
        return t1;
      } finally {
        P.Timeline_finishSync();
      }
    },
    _argumentsAsJson: function($arguments) {
      if ($arguments == null || $arguments.get$length($arguments) === 0)
        return "{}";
      return C.C_JsonCodec.encode$1($arguments);
    },
    ServiceExtensionResponse: function ServiceExtensionResponse() {
    },
    TimelineTask: function TimelineTask(t0, t1) {
      this._taskId = t0;
      this._stack = t1;
    },
    _AsyncBlock: function _AsyncBlock(t0, t1) {
      this.name = t0;
      this._taskId = t1;
    },
    _SyncBlock: function _SyncBlock() {
    },
    convertNativeToDart_Dictionary: function(object) {
      var dict, keys, t1, _i, key;
      if (object == null)
        return null;
      dict = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = Object.getOwnPropertyNames(object);
      for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
        key = keys[_i];
        dict.$indexSet(0, key, object[key]);
      }
      return dict;
    },
    convertDartToNative_Dictionary: function(dict) {
      var object = {};
      dict.forEach$1(0, new P.convertDartToNative_Dictionary_closure(object));
      return object;
    },
    Device_isOpera: function() {
      var t1 = $.Device__isOpera;
      return t1 == null ? $.Device__isOpera = J.contains$2$asx(window.navigator.userAgent, "Opera", 0) : t1;
    },
    Device_isWebKit: function() {
      var t1 = $.Device__isWebKit;
      if (t1 == null)
        t1 = $.Device__isWebKit = !P.Device_isOpera() && J.contains$2$asx(window.navigator.userAgent, "WebKit", 0);
      return t1;
    },
    Device_cssPrefix: function() {
      var t1,
        prefix = $.Device__cachedCssPrefix;
      if (prefix != null)
        return prefix;
      t1 = $.Device__isFirefox;
      if (t1 == null ? $.Device__isFirefox = J.contains$2$asx(window.navigator.userAgent, "Firefox", 0) : t1)
        prefix = "-moz-";
      else {
        t1 = $.Device__isIE;
        if (t1 == null)
          t1 = $.Device__isIE = !P.Device_isOpera() && J.contains$2$asx(window.navigator.userAgent, "Trident/", 0);
        if (t1)
          prefix = "-ms-";
        else
          prefix = P.Device_isOpera() ? "-o-" : "-webkit-";
      }
      return $.Device__cachedCssPrefix = prefix;
    },
    _StructuredClone: function _StructuredClone() {
    },
    _StructuredClone_walk_closure: function _StructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _StructuredClone_walk_closure0: function _StructuredClone_walk_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _AcceptStructuredClone: function _AcceptStructuredClone() {
    },
    _AcceptStructuredClone_walk_closure: function _AcceptStructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    convertDartToNative_Dictionary_closure: function convertDartToNative_Dictionary_closure(t0) {
      this.object = t0;
    },
    _StructuredCloneDart2Js: function _StructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
    },
    _AcceptStructuredCloneDart2Js: function _AcceptStructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
      this.mustCopy = false;
    },
    Database: function Database() {
    },
    Index: function Index() {
    },
    KeyRange: function KeyRange() {
    },
    ObjectStore: function ObjectStore() {
    },
    VersionChangeEvent: function VersionChangeEvent() {
    },
    _callDartFunction: function(callback, captureThis, $self, $arguments) {
      var arguments0, t1;
      if (captureThis) {
        arguments0 = [$self];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      t1 = type$.dynamic;
      return P._convertToJS(P.Function_apply(callback, P.List_List$from(J.map$1$1$ax($arguments, P.js___convertToDart$closure(), t1), true, t1)));
    },
    JsObject_JsObject: function($constructor, $arguments) {
      var args, factoryFunction,
        ctor = P._convertToJS($constructor);
      if ($arguments == null)
        return P._wrapToDart(new ctor());
      if ($arguments instanceof Array)
        switch ($arguments.length) {
          case 0:
            return P._wrapToDart(new ctor());
          case 1:
            return P._wrapToDart(new ctor(P._convertToJS($arguments[0])));
          case 2:
            return P._wrapToDart(new ctor(P._convertToJS($arguments[0]), P._convertToJS($arguments[1])));
          case 3:
            return P._wrapToDart(new ctor(P._convertToJS($arguments[0]), P._convertToJS($arguments[1]), P._convertToJS($arguments[2])));
          case 4:
            return P._wrapToDart(new ctor(P._convertToJS($arguments[0]), P._convertToJS($arguments[1]), P._convertToJS($arguments[2]), P._convertToJS($arguments[3])));
        }
      args = [null];
      C.JSArray_methods.addAll$1(args, new H.MappedListIterable($arguments, P.js___convertToJS$closure(), H._arrayInstanceType($arguments)._eval$1("MappedListIterable<1,@>")));
      factoryFunction = ctor.bind.apply(ctor, args);
      String(factoryFunction);
      return P._wrapToDart(new factoryFunction());
    },
    JsObject_JsObject$jsify: function(object) {
      return P._wrapToDart(P.JsObject__convertDataTree(object));
    },
    JsObject__convertDataTree: function(data) {
      return new P.JsObject__convertDataTree__convert(new P._IdentityHashMap(type$._IdentityHashMap_dynamic_dynamic)).call$1(data);
    },
    JsArray_JsArray$from: function(other, $E) {
      var t1 = [];
      C.JSArray_methods.addAll$1(t1, new H.MappedListIterable(other, P.js___convertToJS$closure(), H._arrayInstanceType(other)._eval$1("MappedListIterable<1,@>")));
      return new P.JsArray(t1, $E._eval$1("JsArray<0>"));
    },
    _defineProperty: function(o, $name, value) {
      var exception;
      try {
        if (Object.isExtensible(o) && !Object.prototype.hasOwnProperty.call(o, $name)) {
          Object.defineProperty(o, $name, {value: value});
          return true;
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
      return false;
    },
    _getOwnProperty: function(o, $name) {
      if (Object.prototype.hasOwnProperty.call(o, $name))
        return o[$name];
      return null;
    },
    _convertToJS: function(o) {
      if (o == null || typeof o == "string" || typeof o == "number" || H._isBool(o))
        return o;
      if (o instanceof P.JsObject)
        return o._js$_jsObject;
      if (H.isBrowserObject(o))
        return o;
      if (type$.TypedData._is(o))
        return o;
      if (o instanceof P.DateTime)
        return H.Primitives_lazyAsJsDate(o);
      if (type$.Function._is(o))
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0($.$get$_dartProxyCtor()));
    },
    _getJsProxy: function(o, propertyName, createProxy) {
      var jsProxy = P._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart: function(o) {
      var ms, t1;
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else if (o instanceof Object && H.isBrowserObject(o))
        return o;
      else if (o instanceof Object && type$.TypedData._is(o))
        return o;
      else if (o instanceof Date) {
        ms = o.getTime();
        t1 = new P.DateTime(ms, false);
        t1.DateTime$_withValue$2$isUtc(ms, false);
        return t1;
      } else if (o.constructor === $.$get$_dartProxyCtor())
        return o.o;
      else
        return P._wrapToDart(o);
    },
    _wrapToDart: function(o) {
      if (typeof o == "function")
        return P._getDartProxy(o, $.$get$DART_CLOSURE_PROPERTY_NAME(), new P._wrapToDart_closure());
      if (o instanceof Array)
        return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure0());
      return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure1());
    },
    _getDartProxy: function(o, propertyName, createProxy) {
      var dartProxy = P._getOwnProperty(o, propertyName);
      if (dartProxy == null || !(o instanceof Object)) {
        dartProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    _convertDartFunctionFast: function(f) {
      var ret,
        existing = f.$dart_jsFunction;
      if (existing != null)
        return existing;
      ret = function(_call, f) {
        return function() {
          return _call(f, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunctionFast, f);
      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      f.$dart_jsFunction = ret;
      return ret;
    },
    _callDartFunctionFast: function(callback, $arguments) {
      return P.Function_apply(callback, $arguments);
    },
    allowInterop: function(f) {
      if (typeof f == "function")
        return f;
      else
        return P._convertDartFunctionFast(f);
    },
    JsObject__convertDataTree__convert: function JsObject__convertDataTree__convert(t0) {
      this._convertedObjects = t0;
    },
    _convertToJS_closure: function _convertToJS_closure() {
    },
    _convertToJS_closure0: function _convertToJS_closure0(t0) {
      this.ctor = t0;
    },
    _wrapToDart_closure: function _wrapToDart_closure() {
    },
    _wrapToDart_closure0: function _wrapToDart_closure0() {
    },
    _wrapToDart_closure1: function _wrapToDart_closure1() {
    },
    JsObject: function JsObject(t0) {
      this._js$_jsObject = t0;
    },
    JsFunction: function JsFunction(t0) {
      this._js$_jsObject = t0;
    },
    JsArray: function JsArray(t0, t1) {
      this._js$_jsObject = t0;
      this.$ti = t1;
    },
    _JsArray_JsObject_ListMixin: function _JsArray_JsObject_ListMixin() {
    },
    promiseToFuture: function(jsPromise, $T) {
      var t1 = new P._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new P._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(H.convertDartClosureToJS(new P.promiseToFuture_closure(completer), 1), H.convertDartClosureToJS(new P.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0) {
      this.completer = t0;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    max: function(a, b) {
      return Math.max(H.checkNum(a), H.checkNum(b));
    },
    log: function(x) {
      return Math.log(x);
    },
    Random_Random: function(seed) {
      var t1 = P._Random$(seed);
      return t1;
    },
    _Random$: function(seed) {
      var t1 = new P._Random();
      t1._Random$1(seed);
      return t1;
    },
    _JenkinsSmiHash_combine0: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_finish: function(hash) {
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    _Random: function _Random() {
      this._hi = this._lo = 0;
    },
    Point: function Point(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.$ti = t2;
    },
    _RectangleBase: function _RectangleBase() {
    },
    Rectangle: function Rectangle() {
    },
    Length: function Length() {
    },
    LengthList: function LengthList() {
    },
    Number: function Number() {
    },
    NumberList: function NumberList() {
    },
    PointList: function PointList() {
    },
    ScriptElement0: function ScriptElement0() {
    },
    StringList: function StringList() {
    },
    SvgElement: function SvgElement() {
    },
    Transform0: function Transform0() {
    },
    TransformList: function TransformList() {
    },
    _LengthList_Interceptor_ListMixin: function _LengthList_Interceptor_ListMixin() {
    },
    _LengthList_Interceptor_ListMixin_ImmutableListMixin: function _LengthList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NumberList_Interceptor_ListMixin: function _NumberList_Interceptor_ListMixin() {
    },
    _NumberList_Interceptor_ListMixin_ImmutableListMixin: function _NumberList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _StringList_Interceptor_ListMixin: function _StringList_Interceptor_ListMixin() {
    },
    _StringList_Interceptor_ListMixin_ImmutableListMixin: function _StringList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _TransformList_Interceptor_ListMixin: function _TransformList_Interceptor_ListMixin() {
    },
    _TransformList_Interceptor_ListMixin_ImmutableListMixin: function _TransformList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    ByteBuffer: function ByteBuffer() {
    },
    Endian: function Endian() {
    },
    ByteData: function ByteData() {
    },
    Int8List: function Int8List() {
    },
    Uint8List: function Uint8List() {
    },
    Uint8ClampedList: function Uint8ClampedList() {
    },
    Int16List: function Int16List() {
    },
    Uint16List: function Uint16List() {
    },
    Int32List: function Int32List() {
    },
    Uint32List: function Uint32List() {
    },
    Float32List: function Float32List() {
    },
    Float64List: function Float64List() {
    },
    PictureRecorder_PictureRecorder: function() {
      return new H.EnginePictureRecorder();
    },
    Canvas_Canvas: function(recorder, cullRect) {
      var t2, t3,
        t1 = new P.Canvas();
      if (recorder._isRecording)
        H.throwExpression(P.ArgumentError$('"recorder" must not already be associated with another Canvas.'));
      if (cullRect == null)
        cullRect = C.Rect_aha;
      recorder.cullRect = cullRect;
      recorder._isRecording = true;
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_PaintCommand);
      t3 = new H.Matrix40(new Float32Array(16));
      t3.setIdentity$0();
      t1._ui$_canvas = recorder.__engine$_canvas = new H.RecordingCanvas(new H._PaintBounds(cullRect, t3), t2);
      return t1;
    },
    SceneBuilder_SceneBuilder: function() {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedContainerSurface),
        t2 = $.SurfaceSceneBuilder__lastFrameScene,
        t3 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      t2 = new H.FrameReference(t2 != null && t2.__engine$_state === C.PersistedSurfaceState_1 ? t2 : null);
      $._frameReferences.push(t2);
      t3 = new H.PersistedScene(t2, t3, C.PersistedSurfaceState_0);
      t2 = new H.Matrix40(new Float32Array(16));
      t2.setIdentity$0();
      t3.__engine$_transform = t2;
      t1.push(t3);
      return new H.SurfaceSceneBuilder(t1);
    },
    Offset_lerp: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      return new P.Offset(P.lerpDouble(a._dx, b._dx, t), P.lerpDouble(a._dy, b._dy, t));
    },
    Rect$fromCircle: function(center, radius) {
      var t1 = center._dx,
        t2 = radius * 2 / 2,
        t3 = center._dy;
      return new P.Rect(t1 - t2, t3 - t2, t1 + t2, t3 + t2);
    },
    Rect$fromPoints: function(a, b) {
      var t1 = a._dx,
        t2 = b._dx,
        t3 = Math.min(H.checkNum(t1), H.checkNum(t2)),
        t4 = a._dy,
        t5 = b._dy;
      return new P.Rect(t3, Math.min(H.checkNum(t4), H.checkNum(t5)), Math.max(H.checkNum(t1), H.checkNum(t2)), Math.max(H.checkNum(t4), H.checkNum(t5)));
    },
    Rect_lerp: function(a, b, t) {
      var k,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return new P.Rect(b.left * t, b.top * t, b.right * t, b.bottom * t);
      if (b == null) {
        k = 1 - t;
        return new P.Rect(a.left * k, a.top * k, a.right * k, a.bottom * k);
      }
      return new P.Rect(P.lerpDouble(a.left, b.left, t), P.lerpDouble(a.top, b.top, t), P.lerpDouble(a.right, b.right, t), P.lerpDouble(a.bottom, b.bottom, t));
    },
    Radius_lerp: function(a, b, t) {
      var k,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return new P.Radius(b.x * t, b.y * t);
      if (b == null) {
        k = 1 - t;
        return new P.Radius(a.x * k, a.y * k);
      }
      return new P.Radius(P.lerpDouble(a.x, b.x, t), P.lerpDouble(a.y, b.y, t));
    },
    RRect$fromRectAndRadius: function(rect, radius) {
      var t1 = radius.x,
        t2 = radius.y,
        t3 = rect.bottom,
        t4 = rect.left,
        t5 = rect.right;
      return new P.RRect(t4, rect.top, t5, t3, t1, t2, t1, t2, t1, t2, t1, t2, t1 == t2);
    },
    RRect$fromRectAndCorners: function(rect, bottomLeft, bottomRight, topLeft, topRight) {
      var t1 = bottomLeft.x,
        t2 = bottomLeft.y,
        t3 = rect.bottom,
        t4 = bottomRight.x,
        t5 = bottomRight.y,
        t6 = rect.left,
        t7 = rect.right,
        t8 = topLeft.x,
        t9 = topLeft.y,
        t10 = rect.top,
        t11 = topRight.x,
        t12 = topRight.y;
      return new P.RRect(t6, t10, t7, t3, t8, t9, t11, t12, t4, t5, t1, t2, t8 == t9 && t8 == t11 && t8 == t12 && t8 == t1 && t8 == t2 && t8 == t4 && t8 == t5);
    },
    RRect$_raw: function(blRadiusX, blRadiusY, bottom, brRadiusX, brRadiusY, left, right, tlRadiusX, tlRadiusY, $top, trRadiusX, trRadiusY, uniformRadii) {
      return new P.RRect(left, $top, right, bottom, tlRadiusX, tlRadiusY, trRadiusX, trRadiusY, brRadiusX, brRadiusY, blRadiusX, blRadiusY, uniformRadii);
    },
    _Jenkins_combine: function(hash, o) {
      hash = 536870911 & hash + J.get$hashCode$(o);
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _Jenkins_finish: function(hash) {
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    hashValues: function(arg01, arg02, arg03, arg04, arg05, arg06, arg07, arg08, arg09, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20) {
      var result = P._Jenkins_combine(P._Jenkins_combine(0, arg01), arg02);
      if (!J.$eq$(arg03, C.C__HashEnd)) {
        result = P._Jenkins_combine(result, arg03);
        if (!J.$eq$(arg04, C.C__HashEnd)) {
          result = P._Jenkins_combine(result, arg04);
          if (!J.$eq$(arg05, C.C__HashEnd)) {
            result = P._Jenkins_combine(result, arg05);
            if (!J.$eq$(arg06, C.C__HashEnd)) {
              result = P._Jenkins_combine(result, arg06);
              if (!J.$eq$(arg07, C.C__HashEnd)) {
                result = P._Jenkins_combine(result, arg07);
                if (!J.$eq$(arg08, C.C__HashEnd)) {
                  result = P._Jenkins_combine(result, arg08);
                  if (!J.$eq$(arg09, C.C__HashEnd)) {
                    result = P._Jenkins_combine(result, arg09);
                    if (!J.$eq$(arg10, C.C__HashEnd)) {
                      result = P._Jenkins_combine(result, arg10);
                      if (!J.$eq$(arg11, C.C__HashEnd)) {
                        result = P._Jenkins_combine(result, arg11);
                        if (!J.$eq$(arg12, C.C__HashEnd)) {
                          result = P._Jenkins_combine(result, arg12);
                          if (!J.$eq$(arg13, C.C__HashEnd)) {
                            result = P._Jenkins_combine(result, arg13);
                            if (!J.$eq$(arg14, C.C__HashEnd)) {
                              result = P._Jenkins_combine(result, arg14);
                              if (!J.$eq$(arg15, C.C__HashEnd)) {
                                result = P._Jenkins_combine(result, arg15);
                                if (!J.$eq$(arg16, C.C__HashEnd)) {
                                  result = P._Jenkins_combine(result, arg16);
                                  if (arg17 !== C.C__HashEnd) {
                                    result = P._Jenkins_combine(result, arg17);
                                    if (arg18 !== C.C__HashEnd) {
                                      result = P._Jenkins_combine(result, arg18);
                                      if (arg19 !== C.C__HashEnd) {
                                        result = P._Jenkins_combine(result, arg19);
                                        if (!J.$eq$(arg20, C.C__HashEnd))
                                          result = P._Jenkins_combine(result, arg20);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return P._Jenkins_finish(result);
    },
    hashList: function($arguments) {
      var t1, result, _i;
      if ($arguments != null)
        for (t1 = $arguments.length, result = 0, _i = 0; _i < $arguments.length; $arguments.length === t1 || (0, H.throwConcurrentModificationError)($arguments), ++_i)
          result = P._Jenkins_combine(result, $arguments[_i]);
      else
        result = 0;
      return P._Jenkins_finish(result);
    },
    webOnlyInitializePlatform: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        t2, t1;
      var $async$webOnlyInitializePlatform = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$window();
              t1 = t1._browserHistory;
              t2 = t1._locationStrategy;
              if (C.C_HashLocationStrategy !== t2) {
                t1._tearoffStrategy$1(t2);
                t1._locationStrategy = C.C_HashLocationStrategy;
                t1._setupStrategy$1(C.C_HashLocationStrategy);
              }
              H.webOnlyInitializeEngine();
              $async$goto = 2;
              return P._asyncAwait(P.webOnlySetAssetManager(C.C_AssetManager), $async$webOnlyInitializePlatform);
            case 2:
              // returning from await.
              $async$goto = 3;
              return P._asyncAwait($._fontCollection.ensureFontsLoaded$0(), $async$webOnlyInitializePlatform);
            case 3:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$webOnlyInitializePlatform, $async$completer);
    },
    webOnlySetAssetManager: function(assetManager) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1;
      var $async$webOnlySetAssetManager = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (assetManager === $._assetManager) {
                // goto return
                $async$goto = 1;
                break;
              }
              $._assetManager = assetManager;
              t1 = $._fontCollection;
              if (t1 == null)
                t1 = $._fontCollection = new H.FontCollection();
              t1._testFontManager = t1._assetFontManager = null;
              if ($.$get$supportsFontLoadingApi())
                document.fonts.clear();
              t1 = $._assetManager;
              $async$goto = t1 != null ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return P._asyncAwait($._fontCollection.registerFonts$1(t1), $async$webOnlySetAssetManager);
            case 5:
              // returning from await.
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$webOnlySetAssetManager, $async$completer);
    },
    lerpDouble: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        a = 0;
      return a + ((b == null ? 0 : b) - a) * t;
    },
    _scaleAlpha: function(a, factor) {
      return P.Color$fromARGB(C.JSInt_methods.clamp$2(C.JSNumber_methods.round$0(((4278190080 & a.get$value(a)) >>> 24) * factor), 0, 255), (16711680 & a.get$value(a)) >>> 16, (65280 & a.get$value(a)) >>> 8, (255 & a.get$value(a)) >>> 0);
    },
    Color$fromARGB: function(a, r, g, b) {
      return new P.Color((((a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | (b & 255) << 0) & 4294967295) >>> 0);
    },
    Color__linearizeColorComponent: function(component) {
      if (component <= 0.03928)
        return component / 12.92;
      return Math.pow((component + 0.055) / 1.055, 2.4);
    },
    Color_lerp: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return P._scaleAlpha(b, t);
      if (b == null)
        return P._scaleAlpha(a, 1 - t);
      return P.Color$fromARGB(C.JSInt_methods.clamp$2(J.toInt$0$n(P.lerpDouble((4278190080 & a.get$value(a)) >>> 24, (4278190080 & b.get$value(b)) >>> 24, t)), 0, 255), C.JSInt_methods.clamp$2(J.toInt$0$n(P.lerpDouble((16711680 & a.get$value(a)) >>> 16, (16711680 & b.get$value(b)) >>> 16, t)), 0, 255), C.JSInt_methods.clamp$2(J.toInt$0$n(P.lerpDouble((65280 & a.get$value(a)) >>> 8, (65280 & b.get$value(b)) >>> 8, t)), 0, 255), C.JSInt_methods.clamp$2(J.toInt$0$n(P.lerpDouble((255 & a.get$value(a)) >>> 0, (255 & b.get$value(b)) >>> 0, t)), 0, 255));
    },
    Path_Path: function() {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_Subpath);
      return new H.SurfacePath(t1, C.PathFillType_0);
    },
    PointerData$: function(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalDeltaX, physicalDeltaY, physicalX, physicalY, platformData, pointerIdentifier, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scrollDeltaX, scrollDeltaY, signalKind, size, synthesized, tilt, timeStamp) {
      return new P.PointerData(timeStamp, change, kind, signalKind, device, pointerIdentifier, physicalX, physicalY, physicalDeltaX, physicalDeltaY, buttons, false, synthesized, pressure, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, platformData, scrollDeltaX, scrollDeltaY);
    },
    FontWeight_lerp: function(a, b, t) {
      var t2,
        t1 = a == null ? null : a.index;
      if (t1 == null)
        t1 = 3;
      t2 = b == null ? null : b.index;
      return C.List_27p[C.JSInt_methods.clamp$2(J.round$0$n(P.lerpDouble(t1, t2 == null ? 3 : t2, t)), 0, 8)];
    },
    TextStyle_TextStyle: function(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t1 = H.EngineTextStyle$(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, letterSpacing, locale, shadows, textBaseline, wordSpacing);
      return t1;
    },
    ParagraphStyle_ParagraphStyle: function(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior) {
      return new H.EngineParagraphStyle(textAlign, textDirection, fontWeight, fontStyle, maxLines, fontFamily, fontSize, height, textHeightBehavior, strutStyle, ellipsis, locale);
    },
    ParagraphBuilder_ParagraphBuilder: function(style) {
      var strutFontFamilies, cssStyle, t4,
        t1 = $.$get$domRenderer().createElement$1(0, "p"),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_double),
        t3 = style._strutStyle;
      if (t3 != null) {
        strutFontFamilies = H.setRuntimeTypeInfo([], type$.JSArray_String);
        strutFontFamilies.push(t3._fontFamily);
        C.JSArray_methods.addAll$1(strutFontFamilies, t3._fontFamilyFallback);
      }
      cssStyle = t1.style;
      t3 = style._textAlign;
      if (t3 != null) {
        t4 = style._textDirection;
        t3 = H.textAlignToCssValue(t3, t4 == null ? C.TextDirection_1 : t4);
        cssStyle.toString;
        cssStyle.textAlign = t3 == null ? "" : t3;
      }
      if (style.get$_lineHeight(style) != null) {
        t3 = H.S(style.get$_lineHeight(style));
        cssStyle.lineHeight = t3;
      }
      t3 = style._textDirection;
      if (t3 != null) {
        t3 = H._textDirectionToCss(t3);
        cssStyle.toString;
        cssStyle.direction = t3 == null ? "" : t3;
      }
      t3 = style._fontSize;
      if (t3 != null) {
        t3 = "" + C.JSNumber_methods.floor$0(t3) + "px";
        cssStyle.fontSize = t3;
      }
      t3 = style._fontWeight;
      if (t3 != null) {
        t3 = H.fontWeightToCss(t3);
        cssStyle.toString;
        cssStyle.fontWeight = t3 == null ? "" : t3;
      }
      if (style.get$_effectiveFontFamily() != null) {
        t3 = H.canonicalizeFontFamily(style.get$_effectiveFontFamily());
        cssStyle.toString;
        cssStyle.fontFamily = t3 == null ? "" : t3;
      }
      return new H.EngineParagraphBuilder(t1, style, [], t2);
    },
    Locale__replaceDeprecatedLanguageSubtag: function(languageCode) {
      var _s3_ = "dtp";
      switch (languageCode) {
        case "in":
          return "id";
        case "iw":
          return "he";
        case "ji":
          return "yi";
        case "jw":
          return "jv";
        case "mo":
          return "ro";
        case "aam":
          return "aas";
        case "adp":
          return "dz";
        case "aue":
          return "ktz";
        case "ayx":
          return "nun";
        case "bgm":
          return "bcg";
        case "bjd":
          return "drl";
        case "ccq":
          return "rki";
        case "cjr":
          return "mom";
        case "cka":
          return "cmr";
        case "cmk":
          return "xch";
        case "coy":
          return "pij";
        case "cqu":
          return "quh";
        case "drh":
          return "khk";
        case "drw":
          return "prs";
        case "gav":
          return "dev";
        case "gfx":
          return "vaj";
        case "ggn":
          return "gvr";
        case "gti":
          return "nyc";
        case "guv":
          return "duz";
        case "hrr":
          return "jal";
        case "ibi":
          return "opa";
        case "ilw":
          return "gal";
        case "jeg":
          return "oyb";
        case "kgc":
          return "tdf";
        case "kgh":
          return "kml";
        case "koj":
          return "kwv";
        case "krm":
          return "bmf";
        case "ktr":
          return _s3_;
        case "kvs":
          return "gdj";
        case "kwq":
          return "yam";
        case "kxe":
          return "tvd";
        case "kzj":
          return _s3_;
        case "kzt":
          return _s3_;
        case "lii":
          return "raq";
        case "lmm":
          return "rmx";
        case "meg":
          return "cir";
        case "mst":
          return "mry";
        case "mwj":
          return "vaj";
        case "myt":
          return "mry";
        case "nad":
          return "xny";
        case "ncp":
          return "kdz";
        case "nnx":
          return "ngv";
        case "nts":
          return "pij";
        case "oun":
          return "vaj";
        case "pcr":
          return "adx";
        case "pmc":
          return "huw";
        case "pmu":
          return "phr";
        case "ppa":
          return "bfy";
        case "ppr":
          return "lcq";
        case "pry":
          return "prt";
        case "puz":
          return "pub";
        case "sca":
          return "hle";
        case "skk":
          return "oyb";
        case "tdu":
          return _s3_;
        case "thc":
          return "tpo";
        case "thx":
          return "oyb";
        case "tie":
          return "ras";
        case "tkk":
          return "twm";
        case "tlw":
          return "weo";
        case "tmp":
          return "tyj";
        case "tne":
          return "kak";
        case "tnf":
          return "prs";
        case "tsf":
          return "taj";
        case "uok":
          return "ema";
        case "xba":
          return "cax";
        case "xia":
          return "acn";
        case "xkh":
          return "waw";
        case "xsj":
          return "suj";
        case "ybd":
          return "rki";
        case "yma":
          return "lrr";
        case "ymt":
          return "mtm";
        case "yos":
          return "zom";
        case "yuu":
          return "yug";
        default:
          return languageCode;
      }
    },
    Locale__replaceDeprecatedRegionSubtag: function(regionCode) {
      switch (regionCode) {
        case "BU":
          return "MM";
        case "DD":
          return "DE";
        case "FX":
          return "FR";
        case "TP":
          return "TL";
        case "YD":
          return "YE";
        case "ZR":
          return "CD";
        default:
          return regionCode;
      }
    },
    ClipOp: function ClipOp(t0) {
      this._ui$_name = t0;
    },
    Canvas: function Canvas() {
      this._ui$_canvas = null;
    },
    PathFillType: function PathFillType(t0) {
      this._ui$_name = t0;
    },
    RawRecordingCanvas: function RawRecordingCanvas(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._bounds = t0;
      _.rootElement = t1;
      _._canvasPool = t2;
      _._cachedLastStyle = null;
      _.__engine$_children = t3;
      _._widthInBitmapPixels = t4;
      _._heightInBitmapPixels = t5;
      _._saveCount = 0;
      _._devicePixelRatio = t6;
      _._canvasPositionY = _._canvasPositionX = null;
      _._childOverdraw = false;
    },
    _StoredMessage: function _StoredMessage(t0, t1) {
      this._data = t0;
      this._ui$_callback = t1;
    },
    _RingBuffer: function _RingBuffer(t0, t1, t2) {
      var _ = this;
      _._ui$_queue = t0;
      _._capacity = t1;
      _._dropItemCallback = null;
      _.$ti = t2;
    },
    ChannelBuffers: function ChannelBuffers(t0) {
      this._messages = t0;
    },
    OffsetBase: function OffsetBase() {
    },
    Offset: function Offset(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Size: function Size(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Rect: function Rect(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    Radius: function Radius(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    RRect: function RRect(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.tlRadiusX = t4;
      _.tlRadiusY = t5;
      _.trRadiusX = t6;
      _.trRadiusY = t7;
      _.brRadiusX = t8;
      _.brRadiusY = t9;
      _.blRadiusX = t10;
      _.blRadiusY = t11;
      _.webOnlyUniformRadii = t12;
    },
    _HashEnd: function _HashEnd() {
    },
    Color: function Color(t0) {
      this.value = t0;
    },
    StrokeCap: function StrokeCap(t0) {
      this._ui$_name = t0;
    },
    StrokeJoin: function StrokeJoin(t0) {
      this._ui$_name = t0;
    },
    PaintingStyle: function PaintingStyle(t0) {
      this._ui$_name = t0;
    },
    BlendMode: function BlendMode(t0) {
      this._ui$_name = t0;
    },
    Clip: function Clip(t0) {
      this._ui$_name = t0;
    },
    Paint: function Paint() {
    },
    Image: function Image() {
    },
    BlurStyle: function BlurStyle(t0) {
      this._ui$_name = t0;
    },
    MaskFilter: function MaskFilter(t0, t1) {
      this._ui$_style = t0;
      this._sigma = t1;
    },
    Shadow: function Shadow() {
    },
    Path: function Path() {
    },
    PointerChange: function PointerChange(t0) {
      this._ui$_name = t0;
    },
    PointerDeviceKind: function PointerDeviceKind(t0) {
      this._ui$_name = t0;
    },
    PointerSignalKind: function PointerSignalKind(t0) {
      this._ui$_name = t0;
    },
    PointerData: function PointerData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27) {
      var _ = this;
      _.timeStamp = t0;
      _.change = t1;
      _.kind = t2;
      _.signalKind = t3;
      _.device = t4;
      _.pointerIdentifier = t5;
      _.physicalX = t6;
      _.physicalY = t7;
      _.physicalDeltaX = t8;
      _.physicalDeltaY = t9;
      _.buttons = t10;
      _.obscured = t11;
      _.synthesized = t12;
      _.pressure = t13;
      _.pressureMin = t14;
      _.pressureMax = t15;
      _.distance = t16;
      _.distanceMax = t17;
      _.size = t18;
      _.radiusMajor = t19;
      _.radiusMinor = t20;
      _.radiusMin = t21;
      _.radiusMax = t22;
      _.orientation = t23;
      _.tilt = t24;
      _.platformData = t25;
      _.scrollDeltaX = t26;
      _.scrollDeltaY = t27;
    },
    PointerDataPacket: function PointerDataPacket(t0) {
      this.data = t0;
    },
    SemanticsAction: function SemanticsAction(t0) {
      this.index = t0;
    },
    SemanticsFlag: function SemanticsFlag(t0) {
      this.index = t0;
    },
    SemanticsUpdateBuilder: function SemanticsUpdateBuilder(t0) {
      this._nodeUpdates = t0;
    },
    PlaceholderAlignment: function PlaceholderAlignment(t0) {
      this._ui$_name = t0;
    },
    FontWeight: function FontWeight(t0) {
      this.index = t0;
    },
    TextAlign: function TextAlign(t0) {
      this._ui$_name = t0;
    },
    TextBaseline: function TextBaseline(t0) {
      this._ui$_name = t0;
    },
    TextDecoration: function TextDecoration(t0) {
      this._mask = t0;
    },
    TextDecorationStyle: function TextDecorationStyle(t0) {
      this._ui$_name = t0;
    },
    TextDirection: function TextDirection(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    TextBox: function TextBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.direction = t4;
    },
    TextAffinity: function TextAffinity(t0) {
      this._ui$_name = t0;
    },
    TextPosition: function TextPosition(t0, t1) {
      this.offset = t0;
      this.affinity = t1;
    },
    TextRange: function TextRange() {
    },
    ParagraphConstraints: function ParagraphConstraints(t0) {
      this.width = t0;
    },
    BoxHeightStyle: function BoxHeightStyle(t0) {
      this._ui$_name = t0;
    },
    BoxWidthStyle: function BoxWidthStyle(t0) {
      this._ui$_name = t0;
    },
    Paragraph: function Paragraph() {
    },
    TileMode: function TileMode(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    AppLifecycleState: function AppLifecycleState(t0) {
      this._ui$_name = t0;
    },
    WindowPadding: function WindowPadding() {
    },
    Locale: function Locale() {
    },
    Window0: function Window0() {
    },
    AccessibilityFeatures: function AccessibilityFeatures(t0) {
      this._ui$_index = t0;
    },
    Brightness: function Brightness(t0) {
      this._ui$_name = t0;
    },
    FramePhase: function FramePhase() {
    },
    FrameTiming: function FrameTiming() {
    },
    AudioBuffer: function AudioBuffer() {
    },
    AudioParamMap: function AudioParamMap() {
    },
    AudioParamMap_keys_closure: function AudioParamMap_keys_closure(t0) {
      this.keys = t0;
    },
    AudioParamMap_values_closure: function AudioParamMap_values_closure(t0) {
      this.values = t0;
    },
    AudioTrackList: function AudioTrackList() {
    },
    BaseAudioContext: function BaseAudioContext() {
    },
    OfflineAudioContext: function OfflineAudioContext() {
    },
    _AudioParamMap_Interceptor_MapMixin: function _AudioParamMap_Interceptor_MapMixin() {
    },
    ActiveInfo: function ActiveInfo() {
    },
    SqlError: function SqlError() {
    },
    SqlResultSetRowList: function SqlResultSetRowList() {
    },
    _SqlResultSetRowList_Interceptor_ListMixin: function _SqlResultSetRowList_Interceptor_ListMixin() {
    },
    _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin: function _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  W = {
    window: function() {
      return window;
    },
    document: function() {
      return document;
    },
    CanvasElement_CanvasElement: function(height, width) {
      var e = document.createElement("canvas");
      if (width != null)
        e.width = width;
      if (height != null)
        e.height = height;
      return e;
    },
    Element_Element$html: function(html, treeSanitizer, validator) {
      var t1 = document.body,
        fragment = (t1 && C.BodyElement_methods).createFragment$3$treeSanitizer$validator(t1, html, treeSanitizer, validator);
      fragment.toString;
      t1 = new H.WhereIterable(new W._ChildNodeListLazy(fragment), new W.Element_Element$html_closure(), type$._ChildNodeListLazy._eval$1("WhereIterable<ListMixin.E>"));
      return t1.get$single(t1);
    },
    Element_Element$tag: function(tag) {
      return W._ElementFactoryProvider_createElement_tag(tag, null);
    },
    Element__safeTagName: function(element) {
      var t1, exception,
        result = "element tag unavailable";
      try {
        t1 = J.getInterceptor$x(element);
        if (typeof t1.get$tagName(element) == "string")
          result = t1.get$tagName(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return result;
    },
    _ElementFactoryProvider_createElement_tag: function(tag, typeExtension) {
      return document.createElement(tag);
    },
    FontFace_FontFace: function(family, source, descriptors) {
      var t1 = new FontFace(family, source, P.convertDartToNative_Dictionary(descriptors));
      return t1;
    },
    HttpRequest_request: function(url, method, mimeType, responseType, sendData) {
      var t2,
        t1 = new P._Future($.Zone__current, type$._Future_HttpRequest),
        completer = new P._AsyncCompleter(t1, type$._AsyncCompleter_HttpRequest),
        xhr = new XMLHttpRequest();
      C.HttpRequest_methods.open$3$async(xhr, method == null ? "GET" : method, url, true);
      if (responseType != null)
        xhr.responseType = responseType;
      if (mimeType != null)
        xhr.overrideMimeType(mimeType);
      t2 = type$.ProgressEvent;
      W._EventStreamSubscription$(xhr, "load", new W.HttpRequest_request_closure(xhr, completer), false, t2);
      W._EventStreamSubscription$(xhr, "error", completer.get$completeError(), false, t2);
      if (sendData != null)
        xhr.send(sendData);
      else
        xhr.send();
      return t1;
    },
    InputElement_InputElement: function() {
      var exception, type = null,
        e0 = document.createElement("input"),
        e = e0;
      if (type != null)
        try {
          e.type = type;
        } catch (exception) {
          H.unwrapException(exception);
        }
      return e;
    },
    _JenkinsSmiHash_combine: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_hash4: function(a, b, c, d) {
      var t1 = W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, a), b), c), d),
        hash = 536870911 & t1 + ((67108863 & t1) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    _EventStreamSubscription$: function(_target, _eventType, onData, _useCapture, $T) {
      var t1 = W._wrapZone(new W._EventStreamSubscription_closure(onData), type$.Event);
      t1 = new W._EventStreamSubscription(_target, _eventType, t1, false, $T._eval$1("_EventStreamSubscription<0>"));
      t1._tryResume$0();
      return t1;
    },
    _Html5NodeValidator$: function(uriPolicy) {
      var e = document.createElement("a"),
        t1 = new W._SameOriginUriPolicy(e, window.location);
      t1 = new W._Html5NodeValidator(t1);
      t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
      return t1;
    },
    _Html5NodeValidator__standardAttributeValidator: function(element, attributeName, value, context) {
      return true;
    },
    _Html5NodeValidator__uriAttributeValidator: function(element, attributeName, value, context) {
      var t3,
        t1 = context.uriPolicy,
        t2 = t1._hiddenAnchor;
      t2.href = value;
      t3 = t2.hostname;
      t1 = t1._loc;
      if (!(t3 == t1.hostname && t2.port == t1.port && t2.protocol == t1.protocol))
        if (t3 === "")
          if (t2.port === "") {
            t1 = t2.protocol;
            t1 = t1 === ":" || t1 === "";
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    _SimpleNodeValidator$: function(uriPolicy, allowedAttributes, allowedElements) {
      var t1 = type$.String;
      t1 = new W._SimpleNodeValidator(P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), uriPolicy);
      t1._SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(uriPolicy, allowedAttributes, allowedElements, null);
      return t1;
    },
    _TemplatingNodeValidator$: function() {
      var t1 = type$.String,
        t2 = P.LinkedHashSet_LinkedHashSet$from(C.List_wSV, t1),
        t3 = H.setRuntimeTypeInfo(["TEMPLATE"], type$.JSArray_String);
      t1 = new W._TemplatingNodeValidator(t2, P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), null);
      t1._SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(null, new H.MappedListIterable(C.List_wSV, new W._TemplatingNodeValidator_closure(), type$.MappedListIterable_String_String), t3, null);
      return t1;
    },
    _convertNativeToDart_EventTarget: function(e) {
      var $window;
      if ("postMessage" in e) {
        $window = W._DOMWindowCrossFrame__createSafe(e);
        return $window;
      } else
        return e;
    },
    _convertNativeToDart_XHR_Response: function(o) {
      if (type$.Document._is(o))
        return o;
      return new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(o, true);
    },
    _DOMWindowCrossFrame__createSafe: function(w) {
      if (w === window)
        return w;
      else
        return new W._DOMWindowCrossFrame(w);
    },
    _wrapZone: function(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    HtmlElement: function HtmlElement() {
    },
    AccessibleNodeList: function AccessibleNodeList() {
    },
    AnchorElement: function AnchorElement() {
    },
    ApplicationCacheErrorEvent: function ApplicationCacheErrorEvent() {
    },
    AreaElement: function AreaElement() {
    },
    Blob: function Blob() {
    },
    BodyElement: function BodyElement() {
    },
    BroadcastChannel: function BroadcastChannel() {
    },
    ButtonElement: function ButtonElement() {
    },
    CanvasElement: function CanvasElement() {
    },
    CanvasRenderingContext2D: function CanvasRenderingContext2D() {
    },
    CharacterData: function CharacterData() {
    },
    Credential: function Credential() {
    },
    CredentialUserData: function CredentialUserData() {
    },
    CssKeyframesRule: function CssKeyframesRule() {
    },
    CssPerspective: function CssPerspective() {
    },
    CssRule: function CssRule() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    CssStyleValue: function CssStyleValue() {
    },
    CssTransformComponent: function CssTransformComponent() {
    },
    CssTransformValue: function CssTransformValue() {
    },
    CssUnparsedValue: function CssUnparsedValue() {
    },
    DataTransferItemList: function DataTransferItemList() {
    },
    DeprecationReport: function DeprecationReport() {
    },
    DivElement: function DivElement() {
    },
    Document: function Document() {
    },
    DomError: function DomError() {
    },
    DomException: function DomException() {
    },
    DomRectList: function DomRectList() {
    },
    DomRectReadOnly: function DomRectReadOnly() {
    },
    DomStringList: function DomStringList() {
    },
    DomTokenList: function DomTokenList() {
    },
    _FrozenElementList: function _FrozenElementList(t0, t1) {
      this._nodeList = t0;
      this.$ti = t1;
    },
    Element0: function Element0() {
    },
    Element_Element$html_closure: function Element_Element$html_closure() {
    },
    EmbedElement: function EmbedElement() {
    },
    Entry: function Entry() {
    },
    ErrorEvent: function ErrorEvent() {
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    FederatedCredential: function FederatedCredential() {
    },
    FieldSetElement: function FieldSetElement() {
    },
    File: function File() {
    },
    FileList: function FileList() {
    },
    FileSystem: function FileSystem() {
    },
    FileWriter: function FileWriter() {
    },
    FontFace: function FontFace() {
    },
    FormElement: function FormElement() {
    },
    Gamepad: function Gamepad() {
    },
    History: function History() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    HttpRequest: function HttpRequest() {
    },
    HttpRequest_request_closure: function HttpRequest_request_closure(t0, t1) {
      this.xhr = t0;
      this.completer = t1;
    },
    HttpRequestEventTarget: function HttpRequestEventTarget() {
    },
    IFrameElement: function IFrameElement() {
    },
    ImageData: function ImageData() {
    },
    InputElement: function InputElement() {
    },
    InterventionReport: function InterventionReport() {
    },
    KeyboardEvent: function KeyboardEvent() {
    },
    LabelElement: function LabelElement() {
    },
    Location: function Location() {
    },
    MapElement: function MapElement() {
    },
    MediaError: function MediaError() {
    },
    MediaKeyMessageEvent: function MediaKeyMessageEvent() {
    },
    MediaList: function MediaList() {
    },
    MediaQueryList: function MediaQueryList() {
    },
    MessagePort: function MessagePort() {
    },
    MetaElement: function MetaElement() {
    },
    MidiInputMap: function MidiInputMap() {
    },
    MidiInputMap_keys_closure: function MidiInputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MidiInputMap_values_closure: function MidiInputMap_values_closure(t0) {
      this.values = t0;
    },
    MidiOutputMap: function MidiOutputMap() {
    },
    MidiOutputMap_keys_closure: function MidiOutputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MidiOutputMap_values_closure: function MidiOutputMap_values_closure(t0) {
      this.values = t0;
    },
    MidiPort: function MidiPort() {
    },
    MimeType: function MimeType() {
    },
    MimeTypeArray: function MimeTypeArray() {
    },
    MouseEvent: function MouseEvent() {
    },
    NavigatorUserMediaError: function NavigatorUserMediaError() {
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0) {
      this._this = t0;
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    ObjectElement: function ObjectElement() {
    },
    OutputElement: function OutputElement() {
    },
    OverconstrainedError: function OverconstrainedError() {
    },
    ParagraphElement: function ParagraphElement() {
    },
    ParamElement: function ParamElement() {
    },
    PasswordCredential: function PasswordCredential() {
    },
    PerformanceEntry: function PerformanceEntry() {
    },
    PerformanceServerTiming: function PerformanceServerTiming() {
    },
    Plugin: function Plugin() {
    },
    PluginArray: function PluginArray() {
    },
    PointerEvent: function PointerEvent() {
    },
    PositionError: function PositionError() {
    },
    PresentationConnectionCloseEvent: function PresentationConnectionCloseEvent() {
    },
    ProgressEvent: function ProgressEvent() {
    },
    ReportBody: function ReportBody() {
    },
    RtcStatsReport: function RtcStatsReport() {
    },
    RtcStatsReport_keys_closure: function RtcStatsReport_keys_closure(t0) {
      this.keys = t0;
    },
    RtcStatsReport_values_closure: function RtcStatsReport_values_closure(t0) {
      this.values = t0;
    },
    SelectElement: function SelectElement() {
    },
    SharedWorkerGlobalScope: function SharedWorkerGlobalScope() {
    },
    SlotElement: function SlotElement() {
    },
    SourceBuffer: function SourceBuffer() {
    },
    SourceBufferList: function SourceBufferList() {
    },
    SpeechGrammar: function SpeechGrammar() {
    },
    SpeechGrammarList: function SpeechGrammarList() {
    },
    SpeechRecognitionError: function SpeechRecognitionError() {
    },
    SpeechRecognitionResult: function SpeechRecognitionResult() {
    },
    SpeechSynthesisEvent: function SpeechSynthesisEvent() {
    },
    SpeechSynthesisVoice: function SpeechSynthesisVoice() {
    },
    Storage: function Storage() {
    },
    Storage_keys_closure: function Storage_keys_closure(t0) {
      this.keys = t0;
    },
    Storage_values_closure: function Storage_values_closure(t0) {
      this.values = t0;
    },
    StyleElement: function StyleElement() {
    },
    StyleSheet: function StyleSheet() {
    },
    TableElement: function TableElement() {
    },
    TableRowElement: function TableRowElement() {
    },
    TableSectionElement: function TableSectionElement() {
    },
    TemplateElement: function TemplateElement() {
    },
    TextAreaElement: function TextAreaElement() {
    },
    TextTrack: function TextTrack() {
    },
    TextTrackCue: function TextTrackCue() {
    },
    TextTrackCueList: function TextTrackCueList() {
    },
    TextTrackList: function TextTrackList() {
    },
    TimeRanges: function TimeRanges() {
    },
    Touch: function Touch() {
    },
    TouchEvent: function TouchEvent() {
    },
    TouchList: function TouchList() {
    },
    TrackDefaultList: function TrackDefaultList() {
    },
    UIEvent: function UIEvent() {
    },
    Url: function Url() {
    },
    VideoTrackList: function VideoTrackList() {
    },
    WheelEvent: function WheelEvent() {
    },
    Window: function Window() {
    },
    WorkerGlobalScope: function WorkerGlobalScope() {
    },
    _Attr: function _Attr() {
    },
    _Clipboard: function _Clipboard() {
    },
    _CssRuleList: function _CssRuleList() {
    },
    _DomRect: function _DomRect() {
    },
    _GamepadList: function _GamepadList() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _SpeechRecognitionResultList: function _SpeechRecognitionResultList() {
    },
    _StyleSheetList: function _StyleSheetList() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _ElementAttributeMap: function _ElementAttributeMap(t0) {
      this._html$_element = t0;
    },
    EventStreamProvider: function EventStreamProvider(t0, t1) {
      this._eventType = t0;
      this.$ti = t1;
    },
    _EventStream: function _EventStream(t0, t1, t2, t3) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._pauseCount = 0;
      _._html$_target = t0;
      _._eventType = t1;
      _._onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    _Html5NodeValidator: function _Html5NodeValidator(t0) {
      this.uriPolicy = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    NodeValidatorBuilder: function NodeValidatorBuilder(t0) {
      this._validators = t0;
    },
    NodeValidatorBuilder_allowsElement_closure: function NodeValidatorBuilder_allowsElement_closure(t0) {
      this.element = t0;
    },
    NodeValidatorBuilder_allowsAttribute_closure: function NodeValidatorBuilder_allowsAttribute_closure(t0, t1, t2) {
      this.element = t0;
      this.attributeName = t1;
      this.value = t2;
    },
    _SimpleNodeValidator: function _SimpleNodeValidator(t0, t1, t2, t3) {
      var _ = this;
      _.allowedElements = t0;
      _.allowedAttributes = t1;
      _.allowedUriAttributes = t2;
      _.uriPolicy = t3;
    },
    _SimpleNodeValidator_closure: function _SimpleNodeValidator_closure() {
    },
    _SimpleNodeValidator_closure0: function _SimpleNodeValidator_closure0() {
    },
    _TemplatingNodeValidator: function _TemplatingNodeValidator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._templateAttrs = t0;
      _.allowedElements = t1;
      _.allowedAttributes = t2;
      _.allowedUriAttributes = t3;
      _.uriPolicy = t4;
    },
    _TemplatingNodeValidator_closure: function _TemplatingNodeValidator_closure() {
    },
    _SvgNodeValidator: function _SvgNodeValidator() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1) {
      var _ = this;
      _._array = t0;
      _._html$_length = t1;
      _._position = -1;
      _._html$_current = null;
    },
    _DOMWindowCrossFrame: function _DOMWindowCrossFrame(t0) {
      this._html$_window = t0;
    },
    NodeValidator: function NodeValidator() {
    },
    _SameOriginUriPolicy: function _SameOriginUriPolicy(t0, t1) {
      this._hiddenAnchor = t0;
      this._loc = t1;
    },
    _ValidatingTreeSanitizer: function _ValidatingTreeSanitizer(t0) {
      this.validator = t0;
      this.modifiedTree = false;
    },
    _ValidatingTreeSanitizer_sanitizeTree_walk: function _ValidatingTreeSanitizer_sanitizeTree_walk(t0) {
      this.$this = t0;
    },
    _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase: function _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase() {
    },
    _DomRectList_Interceptor_ListMixin: function _DomRectList_Interceptor_ListMixin() {
    },
    _DomRectList_Interceptor_ListMixin_ImmutableListMixin: function _DomRectList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _DomStringList_Interceptor_ListMixin: function _DomStringList_Interceptor_ListMixin() {
    },
    _DomStringList_Interceptor_ListMixin_ImmutableListMixin: function _DomStringList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _FileList_Interceptor_ListMixin: function _FileList_Interceptor_ListMixin() {
    },
    _FileList_Interceptor_ListMixin_ImmutableListMixin: function _FileList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin: function _HtmlCollection_Interceptor_ListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin: function _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _MidiInputMap_Interceptor_MapMixin: function _MidiInputMap_Interceptor_MapMixin() {
    },
    _MidiOutputMap_Interceptor_MapMixin: function _MidiOutputMap_Interceptor_MapMixin() {
    },
    _MimeTypeArray_Interceptor_ListMixin: function _MimeTypeArray_Interceptor_ListMixin() {
    },
    _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin: function _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NodeList_Interceptor_ListMixin: function _NodeList_Interceptor_ListMixin() {
    },
    _NodeList_Interceptor_ListMixin_ImmutableListMixin: function _NodeList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _PluginArray_Interceptor_ListMixin: function _PluginArray_Interceptor_ListMixin() {
    },
    _PluginArray_Interceptor_ListMixin_ImmutableListMixin: function _PluginArray_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _RtcStatsReport_Interceptor_MapMixin: function _RtcStatsReport_Interceptor_MapMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin: function _SourceBufferList_EventTarget_ListMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin: function _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _SpeechGrammarList_Interceptor_ListMixin: function _SpeechGrammarList_Interceptor_ListMixin() {
    },
    _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin: function _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _Storage_Interceptor_MapMixin: function _Storage_Interceptor_MapMixin() {
    },
    _TextTrackCueList_Interceptor_ListMixin: function _TextTrackCueList_Interceptor_ListMixin() {
    },
    _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin: function _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin: function _TextTrackList_EventTarget_ListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin_ImmutableListMixin: function _TextTrackList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _TouchList_Interceptor_ListMixin: function _TouchList_Interceptor_ListMixin() {
    },
    _TouchList_Interceptor_ListMixin_ImmutableListMixin: function _TouchList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __CssRuleList_Interceptor_ListMixin: function __CssRuleList_Interceptor_ListMixin() {
    },
    __CssRuleList_Interceptor_ListMixin_ImmutableListMixin: function __CssRuleList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __GamepadList_Interceptor_ListMixin: function __GamepadList_Interceptor_ListMixin() {
    },
    __GamepadList_Interceptor_ListMixin_ImmutableListMixin: function __GamepadList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin: function __NamedNodeMap_Interceptor_ListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin: function __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin: function __SpeechRecognitionResultList_Interceptor_ListMixin() {
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin: function __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __StyleSheetList_Interceptor_ListMixin: function __StyleSheetList_Interceptor_ListMixin() {
    },
    __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin: function __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  Y = {
    HeapPriorityQueue$: function(comparison, $E) {
      var t1 = new Array(7);
      t1.fixed$length = Array;
      t1 = H.setRuntimeTypeInfo(t1, $E._eval$1("JSArray<0>"));
      return new Y.HeapPriorityQueue(comparison, t1, $E._eval$1("HeapPriorityQueue<0>"));
    },
    HeapPriorityQueue: function HeapPriorityQueue(t0, t1, t2) {
      var _ = this;
      _.comparison = t0;
      _._priority_queue$_queue = t1;
      _._priority_queue$_length = 0;
      _.$ti = t2;
    },
    TextTreeConfiguration$: function(addBlankLineIfNoChildren, afterDescriptionIfBody, afterName, afterProperties, beforeName, beforeProperties, bodyIndent, footer, isBlankLineBetweenPropertiesAndChildren, isNameOnOwnLine, lineBreak, lineBreakProperties, linkCharacter, mandatoryFooter, prefixLastChildLineOne, prefixLineOne, prefixOtherLines, prefixOtherLinesRootNode, propertyPrefixIfChildren, propertyPrefixNoChildren, propertySeparator, showChildren, suffixLineOne) {
      return new Y.TextTreeConfiguration(prefixLineOne, suffixLineOne, prefixOtherLines, prefixLastChildLineOne, prefixOtherLinesRootNode, propertyPrefixIfChildren, propertyPrefixNoChildren, linkCharacter, C.JSString_methods.$mul(" ", linkCharacter.length), lineBreak, lineBreakProperties, beforeName, afterName, afterDescriptionIfBody, beforeProperties, afterProperties, propertySeparator, bodyIndent, showChildren, addBlankLineIfNoChildren, isNameOnOwnLine, footer, mandatoryFooter, isBlankLineBetweenPropertiesAndChildren);
    },
    _PrefixedStringBuilder__wordWrapLine: function(message, wrapRanges, width, otherLineOffset, startOffset) {
      return Y._PrefixedStringBuilder__wordWrapLine$body(message, wrapRanges, width, otherLineOffset, startOffset);
    },
    _PrefixedStringBuilder__wordWrapLine$body: function($async$message, $async$wrapRanges, $async$width, $async$otherLineOffset, $async$startOffset) {
      return P._makeSyncStarIterable(function() {
        var message = $async$message,
          wrapRanges = $async$wrapRanges,
          width = $async$width,
          otherLineOffset = $async$otherLineOffset,
          startOffset = $async$startOffset;
        var $async$goto = 0, $async$handler = 2, $async$currentError, startForLengthCalculations, noWrap, addPrefix, index, mode, lastWordStart, lastWordEnd, start, t2, _box_0, t1;
        return function $async$_PrefixedStringBuilder__wordWrapLine($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                _box_0 = {};
                t1 = message.length;
                $async$goto = t1 + startOffset < width ? 3 : 4;
                break;
              case 3:
                // then
                $async$goto = 5;
                return message;
              case 5:
                // after yield
                // goto return
                $async$goto = 1;
                break;
              case 4:
                // join
                startForLengthCalculations = -startOffset;
                _box_0.currentChunk = 0;
                noWrap = new Y._PrefixedStringBuilder__wordWrapLine_noWrap(_box_0, wrapRanges);
                addPrefix = false, index = 0, mode = C._WordWrapParseMode_0, lastWordStart = null, lastWordEnd = null, start = 0;
              case 6:
                // for condition
                // trivial condition
              case 8:
                // switch
                switch (mode) {
                  case C._WordWrapParseMode_0:
                    // goto case
                    $async$goto = 10;
                    break;
                  case C._WordWrapParseMode_1:
                    // goto case
                    $async$goto = 11;
                    break;
                  case C._WordWrapParseMode_2:
                    // goto case
                    $async$goto = 12;
                    break;
                  default:
                    // goto after switch
                    $async$goto = 9;
                    break;
                }
                break;
              case 10:
                // case
                while (true) {
                  if (!(index < t1 && message[index] === " "))
                    break;
                  ++index;
                }
                lastWordStart = index;
                mode = C._WordWrapParseMode_1;
                // goto after switch
                $async$goto = 9;
                break;
              case 11:
                // case
                while (true) {
                  if (index < t1)
                    t2 = message[index] !== " " || noWrap.call$1(index);
                  else
                    t2 = false;
                  if (!t2)
                    break;
                  ++index;
                }
                mode = C._WordWrapParseMode_2;
                // goto after switch
                $async$goto = 9;
                break;
              case 12:
                // case
                t2 = index - startForLengthCalculations;
                $async$goto = t2 > width || index === t1 ? 13 : 15;
                break;
              case 13:
                // then
                if (t2 <= width || lastWordEnd == null)
                  lastWordEnd = index;
                $async$goto = 16;
                return C.JSString_methods.substring$2(message, start, lastWordEnd);
              case 16:
                // after yield
                if (lastWordEnd >= t1) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if (lastWordEnd === index) {
                  while (true) {
                    if (!(index < t1 && message[index] === " "))
                      break;
                    ++index;
                  }
                  start = index;
                  mode = C._WordWrapParseMode_1;
                } else {
                  start = lastWordStart;
                  mode = C._WordWrapParseMode_2;
                }
                startForLengthCalculations = start - otherLineOffset;
                addPrefix = true;
                lastWordEnd = null;
                // goto join
                $async$goto = 14;
                break;
              case 15:
                // else
                lastWordEnd = index;
                mode = C._WordWrapParseMode_0;
              case 14:
                // join
                // goto after switch
                $async$goto = 9;
                break;
              case 9:
                // after switch
                // goto for condition
                $async$goto = 6;
                break;
              case 7:
                // after for
              case 1:
                // return
                return P._IterationMarker_endOfIteration();
              case 2:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.String);
    },
    DiagnosticsNode_DiagnosticsNode$message: function(message, allowWrap, style) {
      var _null = null;
      return Y.DiagnosticsProperty$("", _null, allowWrap, C.C__NoDefaultValue, message, false, _null, _null, C.DiagnosticLevel_3, _null, false, false, true, style, _null, type$.void);
    },
    DiagnosticsProperty$: function($name, value, allowWrap, defaultValue, description, expandableValue, ifEmpty, ifNull, level, linePrefix, missingIfNull, showName, showSeparator, style, tooltip, $T) {
      var t1;
      if (ifNull == null)
        t1 = missingIfNull ? "MISSING" : null;
      else
        t1 = ifNull;
      return new Y.DiagnosticsProperty(description, false, allowWrap, t1, ifEmpty, tooltip, missingIfNull, value, defaultValue, level, $name, showSeparator, showName, linePrefix, style, $T._eval$1("DiagnosticsProperty<0>"));
    },
    shortHash: function(object) {
      var t1 = J.get$hashCode$(object);
      t1.toString;
      return C.JSString_methods.padLeft$2(C.JSInt_methods.toRadixString$1(t1 & 1048575, 16), 5, "0");
    },
    describeEnum: function(enumEntry) {
      var description = J.toString$0$(enumEntry);
      return C.JSString_methods.substring$1(description, J.getInterceptor$asx(description).indexOf$1(description, ".") + 1);
    },
    DiagnosticsBlock$: function(allowTruncate, children, $name, properties, showSeparator, style, value) {
      return new Y.DiagnosticsBlock(children, properties, value, allowTruncate, $name, true, true, null, style);
    },
    DiagnosticLevel: function DiagnosticLevel(t0, t1) {
      this.index = t0;
      this._diagnostics$_name = t1;
    },
    DiagnosticsTreeStyle: function DiagnosticsTreeStyle(t0) {
      this._diagnostics$_name = t0;
    },
    TextTreeConfiguration: function TextTreeConfiguration(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.prefixLineOne = t0;
      _.suffixLineOne = t1;
      _.prefixOtherLines = t2;
      _.prefixLastChildLineOne = t3;
      _.prefixOtherLinesRootNode = t4;
      _.propertyPrefixIfChildren = t5;
      _.propertyPrefixNoChildren = t6;
      _.linkCharacter = t7;
      _.childLinkSpace = t8;
      _.lineBreak = t9;
      _.lineBreakProperties = t10;
      _.beforeName = t11;
      _.afterName = t12;
      _.afterDescriptionIfBody = t13;
      _.beforeProperties = t14;
      _.afterProperties = t15;
      _.propertySeparator = t16;
      _.bodyIndent = t17;
      _.showChildren = t18;
      _.addBlankLineIfNoChildren = t19;
      _.isNameOnOwnLine = t20;
      _.footer = t21;
      _.mandatoryFooter = t22;
      _.isBlankLineBetweenPropertiesAndChildren = t23;
    },
    _WordWrapParseMode: function _WordWrapParseMode(t0) {
      this._diagnostics$_name = t0;
    },
    _PrefixedStringBuilder: function _PrefixedStringBuilder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.prefixLineOne = t0;
      _._prefixOtherLines = t1;
      _._nextPrefixOtherLines = null;
      _.wrapWidth = t2;
      _._buffer = t3;
      _._currentLine = t4;
      _._wrappableRanges = t5;
      _._numLines = 0;
    },
    _PrefixedStringBuilder__wordWrapLine_noWrap: function _PrefixedStringBuilder__wordWrapLine_noWrap(t0, t1) {
      this._box_0 = t0;
      this.wrapRanges = t1;
    },
    _NoDefaultValue: function _NoDefaultValue() {
    },
    TextTreeRenderer: function TextTreeRenderer(t0, t1, t2, t3) {
      var _ = this;
      _._wrapWidth = t0;
      _._wrapWidthProperties = t1;
      _._minLevel = t2;
      _._maxDescendentsTruncatableNode = t3;
    },
    TextTreeRenderer__debugRender_visitor: function TextTreeRenderer__debugRender_visitor(t0, t1) {
      this._box_0 = t0;
      this.descendants = t1;
    },
    TextTreeRenderer__debugRender_closure: function TextTreeRenderer__debugRender_closure(t0) {
      this.$this = t0;
    },
    DiagnosticsNode: function DiagnosticsNode() {
    },
    DiagnosticsProperty: function DiagnosticsProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._diagnostics$_value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
      _.$ti = t15;
    },
    DiagnosticableNode: function DiagnosticableNode() {
    },
    DiagnosticableTreeNode: function DiagnosticableTreeNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _._cachedBuilder = null;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
    },
    DiagnosticPropertiesBuilder: function DiagnosticPropertiesBuilder(t0, t1) {
      this.properties = t0;
      this.defaultDiagnosticsTreeStyle = t1;
      this.emptyBodyDescription = null;
    },
    Diagnosticable: function Diagnosticable() {
    },
    DiagnosticableTree: function DiagnosticableTree() {
    },
    DiagnosticableTreeMixin: function DiagnosticableTreeMixin() {
    },
    DiagnosticsBlock: function DiagnosticsBlock(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._diagnostics$_children = t0;
      _._properties = t1;
      _.value = t2;
      _.allowTruncate = t3;
      _.name = t4;
      _.showSeparator = t5;
      _.showName = t6;
      _.linePrefix = t7;
      _.style = t8;
    },
    _DiagnosticableTree_Object_Diagnosticable: function _DiagnosticableTree_Object_Diagnosticable() {
    },
    DialogTheme: function DialogTheme(t0, t1, t2, t3, t4) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.shape = t2;
      _.titleTextStyle = t3;
      _.contentTextStyle = t4;
    },
    _DialogTheme_Object_Diagnosticable: function _DialogTheme_Object_Diagnosticable() {
    },
    InkHighlight: function InkHighlight(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._ink_highlight$_shape = t0;
      _._ink_highlight$_borderRadius = t1;
      _._ink_highlight$_customBorder = t2;
      _._rectCallback = t3;
      _._ink_highlight$_textDirection = t4;
      _._alphaController = _._ink_highlight$_alpha = null;
      _._ink_highlight$_active = true;
      _._ink_well$_color = t5;
      _._material$_controller = t6;
      _.referenceBox = t7;
      _.onRemoved = t8;
      _._debugDisposed = false;
    },
    BorderSide_merge: function(a, b) {
      var t1 = a.style,
        aIsNone = t1 === C.BorderStyle_0 && a.width === 0,
        bIsNone = b.style === C.BorderStyle_0 && b.width === 0;
      if (aIsNone && bIsNone)
        return C.BorderSide_m7u;
      if (aIsNone)
        return b;
      if (bIsNone)
        return a;
      return new Y.BorderSide(a.color, a.width + b.width, t1);
    },
    BorderSide_canMerge: function(a, b) {
      var t2,
        t1 = a.style;
      if (!(t1 === C.BorderStyle_0 && a.width === 0))
        t2 = b.style === C.BorderStyle_0 && b.width === 0;
      else
        t2 = true;
      if (t2)
        return true;
      return t1 === b.style && J.$eq$(a.color, b.color);
    },
    BorderSide_lerp: function(a, b, t) {
      var width, t1, t2, colorA, colorB;
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      width = P.lerpDouble(a.width, b.width, t);
      if (width < 0)
        return C.BorderSide_m7u;
      t1 = a.style;
      t2 = b.style;
      if (t1 === t2)
        return new Y.BorderSide(P.Color_lerp(a.color, b.color, t), width, t1);
      switch (t1) {
        case C.BorderStyle_1:
          colorA = a.color;
          break;
        case C.BorderStyle_0:
          t1 = a.color.value;
          colorA = P.Color$fromARGB(0, (16711680 & t1) >>> 16, (65280 & t1) >>> 8, (255 & t1) >>> 0);
          break;
        default:
          colorA = null;
      }
      switch (t2) {
        case C.BorderStyle_1:
          colorB = b.color;
          break;
        case C.BorderStyle_0:
          t1 = b.color.value;
          colorB = P.Color$fromARGB(0, (16711680 & t1) >>> 16, (65280 & t1) >>> 8, (255 & t1) >>> 0);
          break;
        default:
          colorB = null;
      }
      return new Y.BorderSide(P.Color_lerp(colorA, colorB, t), width, C.BorderStyle_1);
    },
    ShapeBorder_lerp: function(a, b, t) {
      var t1,
        result = b != null ? b.lerpFrom$2(a, t) : null;
      if (result == null && a != null)
        result = a.lerpTo$2(b, t);
      if (result == null)
        t1 = t < 0.5 ? a : b;
      else
        t1 = result;
      return t1;
    },
    _CompoundBorder_lerp: function(a, b, t) {
      var index, localA, localB, t1, localResult,
        aList = a instanceof Y._CompoundBorder ? a.borders : H.setRuntimeTypeInfo([a], type$.JSArray_ShapeBorder),
        bList = b instanceof Y._CompoundBorder ? b.borders : H.setRuntimeTypeInfo([b], type$.JSArray_ShapeBorder),
        results = H.setRuntimeTypeInfo([], type$.JSArray_ShapeBorder),
        $length = Math.max(aList.length, bList.length);
      for (index = 0; index < $length; ++index) {
        localA = index < aList.length ? aList[index] : null;
        localB = index < bList.length ? bList[index] : null;
        t1 = localA != null;
        if (t1 && localB != null) {
          localResult = localA.lerpTo$2(localB, t);
          if (localResult == null)
            localResult = localB.lerpFrom$2(localA, t);
          if (localResult != null) {
            results.push(localResult);
            continue;
          }
        }
        if (localB != null)
          results.push(localB.scale$1(0, t));
        if (t1)
          results.push(localA.scale$1(0, 1 - t));
      }
      return new Y._CompoundBorder(results);
    },
    paintBorder: function(canvas, rect, bottom, left, right, $top) {
      var path, t1, t2, t3, t4,
        paint = new H.SurfacePaint(new H.SurfacePaintData());
      paint.set$strokeWidth(0);
      path = P.Path_Path();
      switch ($top.style) {
        case C.BorderStyle_1:
          paint.set$color(0, $top.color);
          path.reset$0(0);
          t1 = rect.left;
          t2 = rect.top;
          path.moveTo$2(0, t1, t2);
          t3 = rect.right;
          path.lineTo$2(0, t3, t2);
          t4 = $top.width;
          if (t4 === 0)
            paint.set$style(0, C.PaintingStyle_1);
          else {
            paint.set$style(0, C.PaintingStyle_0);
            t2 += t4;
            path.lineTo$2(0, t3 - right.width, t2);
            path.lineTo$2(0, t1 + left.width, t2);
          }
          canvas.drawPath$2(path, paint);
          break;
        case C.BorderStyle_0:
          break;
      }
      switch (right.style) {
        case C.BorderStyle_1:
          paint.set$color(0, right.color);
          path.reset$0(0);
          t1 = rect.right;
          t2 = rect.top;
          path.moveTo$2(0, t1, t2);
          t3 = rect.bottom;
          path.lineTo$2(0, t1, t3);
          t4 = right.width;
          if (t4 === 0)
            paint.set$style(0, C.PaintingStyle_1);
          else {
            paint.set$style(0, C.PaintingStyle_0);
            t1 -= t4;
            path.lineTo$2(0, t1, t3 - bottom.width);
            path.lineTo$2(0, t1, t2 + $top.width);
          }
          canvas.drawPath$2(path, paint);
          break;
        case C.BorderStyle_0:
          break;
      }
      switch (bottom.style) {
        case C.BorderStyle_1:
          paint.set$color(0, bottom.color);
          path.reset$0(0);
          t1 = rect.right;
          t2 = rect.bottom;
          path.moveTo$2(0, t1, t2);
          t3 = rect.left;
          path.lineTo$2(0, t3, t2);
          t4 = bottom.width;
          if (t4 === 0)
            paint.set$style(0, C.PaintingStyle_1);
          else {
            paint.set$style(0, C.PaintingStyle_0);
            t2 -= t4;
            path.lineTo$2(0, t3 + left.width, t2);
            path.lineTo$2(0, t1 - right.width, t2);
          }
          canvas.drawPath$2(path, paint);
          break;
        case C.BorderStyle_0:
          break;
      }
      switch (left.style) {
        case C.BorderStyle_1:
          paint.set$color(0, left.color);
          path.reset$0(0);
          t1 = rect.left;
          t2 = rect.bottom;
          path.moveTo$2(0, t1, t2);
          t3 = rect.top;
          path.lineTo$2(0, t1, t3);
          t4 = left.width;
          if (t4 === 0)
            paint.set$style(0, C.PaintingStyle_1);
          else {
            paint.set$style(0, C.PaintingStyle_0);
            t1 += t4;
            path.lineTo$2(0, t1, t3 + $top.width);
            path.lineTo$2(0, t1, t2 - bottom.width);
          }
          canvas.drawPath$2(path, paint);
          break;
        case C.BorderStyle_0:
          break;
      }
    },
    BorderStyle: function BorderStyle(t0) {
      this._borders$_name = t0;
    },
    BorderSide: function BorderSide(t0, t1, t2) {
      this.color = t0;
      this.width = t1;
      this.style = t2;
    },
    ShapeBorder: function ShapeBorder() {
    },
    _CompoundBorder: function _CompoundBorder(t0) {
      this.borders = t0;
    },
    _CompoundBorder_dimensions_closure: function _CompoundBorder_dimensions_closure() {
    },
    _CompoundBorder_scale_closure: function _CompoundBorder_scale_closure(t0) {
      this.t = t0;
    },
    _CompoundBorder_toString_closure: function _CompoundBorder_toString_closure() {
    },
    MouseTracker__shouldMarkStateDirty: function(state, value) {
      var lastEvent;
      if (state == null)
        return true;
      lastEvent = state._latestEvent;
      if (value instanceof F.PointerSignalEvent)
        return false;
      return lastEvent instanceof F.PointerAddedEvent || value instanceof F.PointerRemovedEvent || !J.$eq$(lastEvent.position, value.position);
    },
    MouseTracker__dispatchDeviceCallbacks: function(lastAnnotations, nextAnnotations, previousEvent, unhandledEvent) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, enteringAnnotations, lastHoverPosition, hoveringAnnotations, _null = null,
        latestEvent = unhandledEvent == null ? previousEvent : unhandledEvent;
      for (t1 = lastAnnotations.get$iterator(lastAnnotations), t2 = new H.WhereIterator(t1, new Y.MouseTracker__dispatchDeviceCallbacks_closure(nextAnnotations)), t3 = latestEvent == null, t4 = type$.PointerExitEvent; t2.moveNext$0();) {
        t5 = t1.get$current(t1);
        t5.toString;
        t6 = t3 ? _null : latestEvent.buttons;
        t7 = t3 ? _null : latestEvent.delta;
        t8 = t3 ? _null : latestEvent.device;
        t9 = t3 ? _null : latestEvent.distance;
        t10 = t3 ? _null : latestEvent.distanceMax;
        t11 = t3 ? _null : latestEvent.down;
        t12 = t3 ? _null : latestEvent.kind;
        t13 = t3 ? _null : latestEvent.localDelta;
        t14 = t3 ? _null : latestEvent.localPosition;
        t15 = t3 ? _null : latestEvent.obscured;
        t16 = t3 ? _null : latestEvent.orientation;
        t17 = t4._as(t3 ? _null : latestEvent.original);
        t18 = t3 ? _null : latestEvent.position;
        t19 = t3 ? _null : latestEvent.pressureMax;
        t20 = t3 ? _null : latestEvent.pressureMin;
        t21 = t3 ? _null : latestEvent.radiusMajor;
        t22 = t3 ? _null : latestEvent.radiusMax;
        t23 = t3 ? _null : latestEvent.radiusMin;
        t24 = t3 ? _null : latestEvent.radiusMinor;
        t25 = t3 ? _null : latestEvent.size;
        t26 = t3 ? _null : latestEvent.synthesized;
        t27 = t3 ? _null : latestEvent.tilt;
        t28 = t3 ? _null : latestEvent.timeStamp;
        t29 = t3 ? _null : latestEvent.transform;
        if (t14 == null)
          t14 = t18;
        if (t13 == null)
          t13 = t7;
        t5.onExit.call$1(new F.PointerExitEvent(t28, 0, t12, t8, t18, t14, t7, t13, t6, t11, t15, 0, t20, t19, t9, t10, t25, t21, t24, t23, t22, t16, t27, 0, t26, t29, t17));
      }
      t1 = nextAnnotations.difference$1(lastAnnotations).toList$0(0);
      enteringAnnotations = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"));
      for (t1 = new H.ListIterator(enteringAnnotations, enteringAnnotations.get$length(enteringAnnotations)), t2 = type$.PointerEnterEvent; t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        t4.toString;
        t5 = t3 ? _null : latestEvent.buttons;
        t6 = t3 ? _null : latestEvent.delta;
        t7 = t3 ? _null : latestEvent.device;
        t8 = t3 ? _null : latestEvent.distance;
        t9 = t3 ? _null : latestEvent.distanceMax;
        t10 = t3 ? _null : latestEvent.down;
        t11 = t3 ? _null : latestEvent.kind;
        t12 = t3 ? _null : latestEvent.localDelta;
        t13 = t3 ? _null : latestEvent.localPosition;
        t14 = t3 ? _null : latestEvent.obscured;
        t15 = t3 ? _null : latestEvent.orientation;
        t16 = t2._as(t3 ? _null : latestEvent.original);
        t17 = t3 ? _null : latestEvent.position;
        t18 = t3 ? _null : latestEvent.pressureMax;
        t19 = t3 ? _null : latestEvent.pressureMin;
        t20 = t3 ? _null : latestEvent.radiusMajor;
        t21 = t3 ? _null : latestEvent.radiusMax;
        t22 = t3 ? _null : latestEvent.radiusMin;
        t23 = t3 ? _null : latestEvent.radiusMinor;
        t24 = t3 ? _null : latestEvent.size;
        t25 = t3 ? _null : latestEvent.synthesized;
        t26 = t3 ? _null : latestEvent.tilt;
        t27 = t3 ? _null : latestEvent.timeStamp;
        t28 = t3 ? _null : latestEvent.transform;
        if (t13 == null)
          t13 = t17;
        if (t12 == null)
          t12 = t6;
        t4.onEnter.call$1(new F.PointerEnterEvent(t27, 0, t11, t7, t17, t13, t6, t12, t5, t10, t14, 0, t19, t18, t8, t9, t24, t20, t23, t22, t21, t15, t26, 0, t25, t28, t16));
      }
      if (unhandledEvent instanceof F.PointerHoverEvent) {
        lastHoverPosition = previousEvent instanceof F.PointerHoverEvent ? previousEvent.position : _null;
        if (lastHoverPosition == null || !lastHoverPosition.$eq(0, unhandledEvent.position)) {
          t1 = nextAnnotations.toList$0(0);
          hoveringAnnotations = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"));
        } else
          hoveringAnnotations = enteringAnnotations;
        for (t1 = new H.ListIterator(hoveringAnnotations, hoveringAnnotations.get$length(hoveringAnnotations)); t1.moveNext$0();)
          t1.__internal$_current.onHover.call$1(unhandledEvent);
      }
    },
    MouseTrackerAnnotation: function MouseTrackerAnnotation(t0, t1, t2) {
      this.onEnter = t0;
      this.onHover = t1;
      this.onExit = t2;
    },
    _MouseState: function _MouseState(t0, t1) {
      this._annotations = t0;
      this._latestEvent = t1;
    },
    _MouseState_toString_describeEvent: function _MouseState_toString_describeEvent() {
    },
    MouseTracker: function MouseTracker(t0, t1, t2, t3) {
      var _ = this;
      _.annotationFinder = t0;
      _._router = t1;
      _._mouseStates = t2;
      _._hasScheduledPostFrameCheck = _._duringDeviceUpdate = false;
      _.ChangeNotifier__listeners = t3;
    },
    MouseTracker__handleEvent_closure: function MouseTracker__handleEvent_closure(t0, t1) {
      this.event = t0;
      this.previousEvent = t1;
    },
    MouseTracker__updateAllDevices_closure: function MouseTracker__updateAllDevices_closure() {
    },
    MouseTracker__dispatchDeviceCallbacks_closure: function MouseTracker__dispatchDeviceCallbacks_closure(t0) {
      this.nextAnnotations = t0;
    },
    MouseTracker_schedulePostFrameCheck_closure: function MouseTracker_schedulePostFrameCheck_closure(t0) {
      this.$this = t0;
    },
    _MouseTrackerAnnotation_Object_Diagnosticable: function _MouseTrackerAnnotation_Object_Diagnosticable() {
    },
    IconTheme_merge: function(child, data) {
      return new T.Builder(new Y.IconTheme_merge_closure(null, data, child), null);
    },
    IconTheme__getInheritedIconThemeData: function(context) {
      var iconTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.IconTheme),
        t1 = iconTheme == null ? null : iconTheme.data;
      return t1 == null ? C.IconThemeData_Color_4278190080_1_24 : t1;
    },
    IconTheme: function IconTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    IconTheme_merge_closure: function IconTheme_merge_closure(t0, t1, t2) {
      this.key = t0;
      this.data = t1;
      this.child = t2;
    },
    BouncingScrollSimulation: function BouncingScrollSimulation(t0, t1, t2, t3) {
      var _ = this;
      _.leadingExtent = t0;
      _.trailingExtent = t1;
      _.spring = t2;
      _._springTime = _._springSimulation = _._frictionSimulation = null;
      _._timeOffset = 0;
      _.tolerance = t3;
    },
    ClampingScrollSimulation: function ClampingScrollSimulation(t0, t1, t2) {
      var _ = this;
      _.position = t0;
      _.velocity = t1;
      _._distance = _._scroll_simulation$_duration = null;
      _.tolerance = t2;
    }
  },
  X = {AnimationStatus: function AnimationStatus(t0) {
      this._animation$_name = t0;
    }, Animation0: function Animation0() {
    },
    BottomSheetThemeData_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = P.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.elevation;
      t4 = P.lerpDouble(t4, t3 ? _null : b.elevation, t);
      t5 = t1 ? _null : a.modalBackgroundColor;
      t5 = P.Color_lerp(t5, t3 ? _null : b.modalBackgroundColor, t);
      t6 = t1 ? _null : a.modalElevation;
      t6 = P.lerpDouble(t6, t3 ? _null : b.modalElevation, t);
      t7 = t1 ? _null : a.shape;
      t7 = Y.ShapeBorder_lerp(t7, t3 ? _null : b.shape, t);
      if (t < 0.5)
        t1 = t1 ? _null : a.clipBehavior;
      else
        t1 = t3 ? _null : b.clipBehavior;
      return new X.BottomSheetThemeData(t2, t4, t5, t6, t7, t1);
    },
    BottomSheetThemeData: function BottomSheetThemeData(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.modalBackgroundColor = t2;
      _.modalElevation = t3;
      _.shape = t4;
      _.clipBehavior = t5;
    },
    _BottomSheetThemeData_Object_Diagnosticable: function _BottomSheetThemeData_Object_Diagnosticable() {
    },
    ThemeData_ThemeData: function(brightness) {
      var toggleableActiveColor, accentColor, accentColorBrightness, accentIsDark, canvasColor, bottomAppBarColor, cardColor, dividerColor, primaryIsDark0, secondary, t1, t2, t3, t4, t5, t6, t7, t8, t9, colorScheme, selectedRowColor, unselectedWidgetColor, secondaryHeaderColor, textSelectionColor, textSelectionHandleColor, backgroundColor, dialogBackgroundColor, indicatorColor, hintColor, errorColor, primaryIconTheme, accentIconTheme, iconTheme, platform, typography, defaultTextTheme, defaultPrimaryTextTheme, defaultAccentTextTheme, textTheme, primaryTextTheme, accentTextTheme, buttonColor, focusColor, hoverColor, buttonTheme, disabledColor, highlightColor, splashColor, chipTheme, _null = null,
        isDark = brightness === C.Brightness_0,
        primaryColor = isDark ? C.Map_HFpTk.$index(0, 900) : C.MaterialColor_Map_JNwaj_4280391411,
        primaryColorBrightness = X.ThemeData_estimateBrightnessForColor(primaryColor),
        primaryColorLight = isDark ? C.Map_HFpTk.$index(0, 500) : C.Map_JNwaj.$index(0, 100),
        primaryColorDark = isDark ? C.Color_4278190080 : C.Map_JNwaj.$index(0, 700),
        primaryIsDark = primaryColorBrightness === C.Brightness_0;
      if (isDark)
        toggleableActiveColor = C.Map_iTYZn.$index(0, 200);
      else
        toggleableActiveColor = C.Map_JNwaj.$index(0, 600);
      accentColor = isDark ? C.Map_iTYZn.$index(0, 200) : C.Map_JNwaj.$index(0, 500);
      accentColorBrightness = X.ThemeData_estimateBrightnessForColor(accentColor);
      accentIsDark = accentColorBrightness === C.Brightness_0;
      canvasColor = isDark ? C.Map_HFpTk.$index(0, 850) : C.Map_HFpTk.$index(0, 50);
      bottomAppBarColor = isDark ? C.Map_HFpTk.$index(0, 800) : C.Color_4294967295;
      cardColor = isDark ? C.Map_HFpTk.$index(0, 800) : C.Color_4294967295;
      dividerColor = isDark ? C.Color_536870911 : C.Color_520093696;
      primaryIsDark0 = X.ThemeData_estimateBrightnessForColor(C.MaterialColor_Map_JNwaj_4280391411) === C.Brightness_0;
      if (accentColor == null)
        secondary = isDark ? C.Map_iTYZn.$index(0, 200) : C.MaterialColor_Map_JNwaj_4280391411;
      else
        secondary = accentColor;
      t1 = X.ThemeData_estimateBrightnessForColor(secondary);
      if (primaryColorDark == null)
        t2 = isDark ? C.Color_4278190080 : C.Map_JNwaj.$index(0, 700);
      else
        t2 = primaryColorDark;
      t3 = isDark ? C.Map_iTYZn.$index(0, 700) : C.Map_JNwaj.$index(0, 700);
      if (cardColor == null)
        t4 = isDark ? C.Map_HFpTk.$index(0, 800) : C.Color_4294967295;
      else
        t4 = cardColor;
      t5 = isDark ? C.Map_HFpTk.$index(0, 700) : C.Map_JNwaj.$index(0, 200);
      t6 = C.Map_JNc9P.$index(0, 700);
      t7 = primaryIsDark0 ? C.Color_4294967295 : C.Color_4278190080;
      t1 = t1 === C.Brightness_0 ? C.Color_4294967295 : C.Color_4278190080;
      t8 = isDark ? C.Color_4294967295 : C.Color_4278190080;
      t9 = primaryIsDark0 ? C.Color_4294967295 : C.Color_4278190080;
      colorScheme = A.ColorScheme$(t5, brightness, t6, t9, isDark ? C.Color_4278190080 : C.Color_4294967295, t7, t1, t8, C.MaterialColor_Map_JNwaj_4280391411, t2, secondary, t3, t4);
      selectedRowColor = C.Map_HFpTk.$index(0, 100);
      unselectedWidgetColor = isDark ? C.Color_3019898879 : C.Color_2315255808;
      secondaryHeaderColor = isDark ? C.Map_HFpTk.$index(0, 700) : C.Map_JNwaj.$index(0, 50);
      textSelectionColor = isDark ? accentColor : C.Map_JNwaj.$index(0, 200);
      textSelectionHandleColor = isDark ? C.Map_iTYZn.$index(0, 400) : C.Map_JNwaj.$index(0, 300);
      backgroundColor = isDark ? C.Map_HFpTk.$index(0, 700) : C.Map_JNwaj.$index(0, 200);
      dialogBackgroundColor = isDark ? C.Map_HFpTk.$index(0, 800) : C.Color_4294967295;
      indicatorColor = J.$eq$(accentColor, primaryColor) ? C.Color_4294967295 : accentColor;
      hintColor = isDark ? C.Color_2164260863 : C.Color_2315255808;
      errorColor = C.Map_JNc9P.$index(0, 700);
      primaryIconTheme = primaryIsDark ? C.IconThemeData_Color_4294967295_null_null : C.IconThemeData_Color_4278190080_null_null;
      accentIconTheme = accentIsDark ? C.IconThemeData_Color_4294967295_null_null : C.IconThemeData_Color_4278190080_null_null;
      iconTheme = isDark ? C.IconThemeData_Color_4294967295_null_null : C.IconThemeData_Color_3707764736_null_null;
      platform = U.defaultTargetPlatform();
      typography = U.Typography_Typography$material2014(platform);
      defaultTextTheme = isDark ? typography.white : typography.black;
      defaultPrimaryTextTheme = primaryIsDark ? typography.white : typography.black;
      defaultAccentTextTheme = accentIsDark ? typography.white : typography.black;
      textTheme = defaultTextTheme.merge$1(_null);
      primaryTextTheme = defaultPrimaryTextTheme.merge$1(_null);
      accentTextTheme = defaultAccentTextTheme.merge$1(_null);
      buttonColor = isDark ? C.Map_JNwaj.$index(0, 600) : C.Map_HFpTk.$index(0, 300);
      focusColor = isDark ? P.Color$fromARGB(31, 255, 255, 255) : P.Color$fromARGB(31, 0, 0, 0);
      hoverColor = isDark ? P.Color$fromARGB(10, 255, 255, 255) : P.Color$fromARGB(10, 0, 0, 0);
      buttonTheme = M.ButtonThemeData$(false, buttonColor, colorScheme, _null, focusColor, 36, _null, hoverColor, C.ButtonBarLayoutBehavior_1, C.MaterialTapTargetSize_0, 88, _null, _null, _null, C.ButtonTextTheme_0);
      disabledColor = isDark ? C.Color_1660944383 : C.Color_1627389952;
      highlightColor = isDark ? C.Color_1087163596 : C.Color_1723645116;
      splashColor = isDark ? C.Color_1087163596 : C.Color_1724434632;
      chipTheme = K.ChipThemeData_ChipThemeData$fromDefaults(brightness, textTheme.bodyText1, primaryColor);
      return X.ThemeData$raw(accentColor, accentColorBrightness, accentIconTheme, accentTextTheme, C.AppBarTheme_ccN, false, backgroundColor, C.MaterialBannerThemeData_null_null_null_null, bottomAppBarColor, C.BottomAppBarTheme_null_null_null, C.BottomNavigationBarThemeData_ABh, C.BottomSheetThemeData_M2D, brightness, C.ButtonBarThemeData_A0t, buttonColor, buttonTheme, canvasColor, cardColor, C.CardTheme_hKX, chipTheme, colorScheme, _null, C.Color_4282549748, dialogBackgroundColor, C.DialogTheme_maI, disabledColor, dividerColor, C.DividerThemeData_Tnu, errorColor, false, C.FloatingActionButtonThemeData_IWY, focusColor, highlightColor, hintColor, hoverColor, iconTheme, indicatorColor, C.C_InputDecorationTheme, C.MaterialTapTargetSize_0, C.NavigationRailThemeData_U06, C.C_PageTransitionsTheme, platform, C.PopupMenuThemeData_null_null_null_null, primaryColor, primaryColorBrightness, primaryColorDark, primaryColorLight, primaryIconTheme, primaryTextTheme, canvasColor, secondaryHeaderColor, selectedRowColor, C.SliderThemeData_Q5Z, C.SnackBarThemeData_gc6, splashColor, C.C__InkSplashFactory, C.TabBarTheme_Srx, textSelectionColor, textSelectionHandleColor, textTheme, C.ToggleButtonsThemeData_UsI, toggleableActiveColor, C.TooltipThemeData_kSE, typography, unselectedWidgetColor, C.VisualDensity_0_0);
    },
    ThemeData$raw: function(accentColor, accentColorBrightness, accentIconTheme, accentTextTheme, appBarTheme, applyElevationOverlayColor, backgroundColor, bannerTheme, bottomAppBarColor, bottomAppBarTheme, bottomNavigationBarTheme, bottomSheetTheme, brightness, buttonBarTheme, buttonColor, buttonTheme, canvasColor, cardColor, cardTheme, chipTheme, colorScheme, cupertinoOverrideTheme, cursorColor, dialogBackgroundColor, dialogTheme, disabledColor, dividerColor, dividerTheme, errorColor, fixTextFieldOutlineLabel, floatingActionButtonTheme, focusColor, highlightColor, hintColor, hoverColor, iconTheme, indicatorColor, inputDecorationTheme, materialTapTargetSize, navigationRailTheme, pageTransitionsTheme, platform, popupMenuTheme, primaryColor, primaryColorBrightness, primaryColorDark, primaryColorLight, primaryIconTheme, primaryTextTheme, scaffoldBackgroundColor, secondaryHeaderColor, selectedRowColor, sliderTheme, snackBarTheme, splashColor, splashFactory, tabBarTheme, textSelectionColor, textSelectionHandleColor, textTheme, toggleButtonsTheme, toggleableActiveColor, tooltipTheme, typography, unselectedWidgetColor, visualDensity) {
      return new X.ThemeData(brightness, visualDensity, primaryColor, primaryColorBrightness, primaryColorLight, primaryColorDark, canvasColor, accentColor, accentColorBrightness, scaffoldBackgroundColor, bottomAppBarColor, cardColor, dividerColor, focusColor, hoverColor, highlightColor, splashColor, splashFactory, selectedRowColor, unselectedWidgetColor, disabledColor, buttonTheme, toggleButtonsTheme, buttonColor, secondaryHeaderColor, textSelectionColor, cursorColor, textSelectionHandleColor, backgroundColor, dialogBackgroundColor, indicatorColor, hintColor, errorColor, toggleableActiveColor, textTheme, primaryTextTheme, accentTextTheme, inputDecorationTheme, iconTheme, primaryIconTheme, accentIconTheme, sliderTheme, tabBarTheme, tooltipTheme, cardTheme, chipTheme, platform, materialTapTargetSize, false, pageTransitionsTheme, appBarTheme, bottomAppBarTheme, colorScheme, snackBarTheme, dialogTheme, floatingActionButtonTheme, navigationRailTheme, typography, cupertinoOverrideTheme, bottomSheetTheme, popupMenuTheme, bannerTheme, dividerTheme, buttonBarTheme, bottomNavigationBarTheme, false);
    },
    ThemeData_ThemeData$fallback: function() {
      var secondary, t1, t2, t3, t4, t5, t6, t7, colorScheme, selectedRowColor, secondaryHeaderColor, textSelectionColor, textSelectionHandleColor, backgroundColor, indicatorColor, errorColor, primaryIconTheme, accentIconTheme, platform, typography, defaultTextTheme, defaultPrimaryTextTheme, defaultAccentTextTheme, textTheme, primaryTextTheme, accentTextTheme, buttonColor, focusColor, hoverColor, buttonTheme, chipTheme, _null = null,
        primaryColorBrightness = X.ThemeData_estimateBrightnessForColor(C.MaterialColor_Map_JNwaj_4280391411),
        primaryColorLight = C.Map_JNwaj.$index(0, 100),
        primaryColorDark = C.Map_JNwaj.$index(0, 700),
        primaryIsDark = primaryColorBrightness === C.Brightness_0,
        toggleableActiveColor = C.Map_JNwaj.$index(0, 600),
        accentColor = C.Map_JNwaj.$index(0, 500),
        accentColorBrightness = X.ThemeData_estimateBrightnessForColor(accentColor),
        accentIsDark = accentColorBrightness === C.Brightness_0,
        canvasColor = C.Map_HFpTk.$index(0, 50),
        primaryIsDark0 = X.ThemeData_estimateBrightnessForColor(C.MaterialColor_Map_JNwaj_4280391411) === C.Brightness_0;
      if (accentColor == null)
        secondary = C.MaterialColor_Map_JNwaj_4280391411;
      else
        secondary = accentColor;
      t1 = X.ThemeData_estimateBrightnessForColor(secondary);
      if (primaryColorDark == null)
        t2 = C.Map_JNwaj.$index(0, 700);
      else
        t2 = primaryColorDark;
      t3 = C.Map_JNwaj.$index(0, 700);
      t4 = C.Map_JNwaj.$index(0, 200);
      t5 = C.Map_JNc9P.$index(0, 700);
      t6 = primaryIsDark0 ? C.Color_4294967295 : C.Color_4278190080;
      t1 = t1 === C.Brightness_0 ? C.Color_4294967295 : C.Color_4278190080;
      t7 = primaryIsDark0 ? C.Color_4294967295 : C.Color_4278190080;
      colorScheme = A.ColorScheme$(t4, C.Brightness_1, t5, t7, C.Color_4294967295, t6, t1, C.Color_4278190080, C.MaterialColor_Map_JNwaj_4280391411, t2, secondary, t3, C.Color_4294967295);
      selectedRowColor = C.Map_HFpTk.$index(0, 100);
      secondaryHeaderColor = C.Map_JNwaj.$index(0, 50);
      textSelectionColor = C.Map_JNwaj.$index(0, 200);
      textSelectionHandleColor = C.Map_JNwaj.$index(0, 300);
      backgroundColor = C.Map_JNwaj.$index(0, 200);
      indicatorColor = J.$eq$(accentColor, C.MaterialColor_Map_JNwaj_4280391411) ? C.Color_4294967295 : accentColor;
      errorColor = C.Map_JNc9P.$index(0, 700);
      primaryIconTheme = primaryIsDark ? C.IconThemeData_Color_4294967295_null_null : C.IconThemeData_Color_4278190080_null_null;
      accentIconTheme = accentIsDark ? C.IconThemeData_Color_4294967295_null_null : C.IconThemeData_Color_4278190080_null_null;
      platform = U.defaultTargetPlatform();
      typography = U.Typography_Typography$material2014(platform);
      defaultTextTheme = typography.black;
      defaultPrimaryTextTheme = primaryIsDark ? typography.white : defaultTextTheme;
      defaultAccentTextTheme = accentIsDark ? typography.white : defaultTextTheme;
      textTheme = defaultTextTheme.merge$1(_null);
      primaryTextTheme = defaultPrimaryTextTheme.merge$1(_null);
      accentTextTheme = defaultAccentTextTheme.merge$1(_null);
      buttonColor = C.Map_HFpTk.$index(0, 300);
      focusColor = P.Color$fromARGB(31, 0, 0, 0);
      hoverColor = P.Color$fromARGB(10, 0, 0, 0);
      buttonTheme = M.ButtonThemeData$(false, buttonColor, colorScheme, _null, focusColor, 36, _null, hoverColor, C.ButtonBarLayoutBehavior_1, C.MaterialTapTargetSize_0, 88, _null, _null, _null, C.ButtonTextTheme_0);
      chipTheme = K.ChipThemeData_ChipThemeData$fromDefaults(C.Brightness_1, textTheme.bodyText1, C.MaterialColor_Map_JNwaj_4280391411);
      return X.ThemeData$raw(accentColor, accentColorBrightness, accentIconTheme, accentTextTheme, C.AppBarTheme_ccN, false, backgroundColor, C.MaterialBannerThemeData_null_null_null_null, C.Color_4294967295, C.BottomAppBarTheme_null_null_null, C.BottomNavigationBarThemeData_ABh, C.BottomSheetThemeData_M2D, C.Brightness_1, C.ButtonBarThemeData_A0t, buttonColor, buttonTheme, canvasColor, C.Color_4294967295, C.CardTheme_hKX, chipTheme, colorScheme, _null, C.Color_4282549748, C.Color_4294967295, C.DialogTheme_maI, C.Color_1627389952, C.Color_520093696, C.DividerThemeData_Tnu, errorColor, false, C.FloatingActionButtonThemeData_IWY, focusColor, C.Color_1723645116, C.Color_2315255808, hoverColor, C.IconThemeData_Color_3707764736_null_null, indicatorColor, C.C_InputDecorationTheme, C.MaterialTapTargetSize_0, C.NavigationRailThemeData_U06, C.C_PageTransitionsTheme, platform, C.PopupMenuThemeData_null_null_null_null, C.MaterialColor_Map_JNwaj_4280391411, primaryColorBrightness, primaryColorDark, primaryColorLight, primaryIconTheme, primaryTextTheme, canvasColor, secondaryHeaderColor, selectedRowColor, C.SliderThemeData_Q5Z, C.SnackBarThemeData_gc6, C.Color_1724434632, C.C__InkSplashFactory, C.TabBarTheme_Srx, textSelectionColor, textSelectionHandleColor, textTheme, C.ToggleButtonsThemeData_UsI, toggleableActiveColor, C.TooltipThemeData_kSE, typography, C.Color_2315255808, C.VisualDensity_0_0);
    },
    ThemeData_localize: function(baseTheme, localTextGeometry) {
      return $.$get$ThemeData__localizedThemeDataCache().putIfAbsent$2(0, new X._IdentityThemeDataCacheKey(baseTheme, localTextGeometry), new X.ThemeData_localize_closure(baseTheme, localTextGeometry));
    },
    ThemeData_estimateBrightnessForColor: function(color) {
      var t1 = 0.2126 * P.Color__linearizeColorComponent(((16711680 & color.get$value(color)) >>> 16) / 255) + 0.7152 * P.Color__linearizeColorComponent(((65280 & color.get$value(color)) >>> 8) / 255) + 0.0722 * P.Color__linearizeColorComponent(((255 & color.get$value(color)) >>> 0) / 255) + 0.05;
      if (t1 * t1 > 0.15)
        return C.Brightness_1;
      return C.Brightness_0;
    },
    MaterialTapTargetSize: function MaterialTapTargetSize(t0) {
      this._theme_data$_name = t0;
    },
    ThemeData: function ThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65) {
      var _ = this;
      _.brightness = t0;
      _.visualDensity = t1;
      _.primaryColor = t2;
      _.primaryColorBrightness = t3;
      _.primaryColorLight = t4;
      _.primaryColorDark = t5;
      _.canvasColor = t6;
      _.accentColor = t7;
      _.accentColorBrightness = t8;
      _.scaffoldBackgroundColor = t9;
      _.bottomAppBarColor = t10;
      _.cardColor = t11;
      _.dividerColor = t12;
      _.focusColor = t13;
      _.hoverColor = t14;
      _.highlightColor = t15;
      _.splashColor = t16;
      _.splashFactory = t17;
      _.selectedRowColor = t18;
      _.unselectedWidgetColor = t19;
      _.disabledColor = t20;
      _.buttonTheme = t21;
      _.toggleButtonsTheme = t22;
      _.buttonColor = t23;
      _.secondaryHeaderColor = t24;
      _.textSelectionColor = t25;
      _.cursorColor = t26;
      _.textSelectionHandleColor = t27;
      _.backgroundColor = t28;
      _.dialogBackgroundColor = t29;
      _.indicatorColor = t30;
      _.hintColor = t31;
      _.errorColor = t32;
      _.toggleableActiveColor = t33;
      _.textTheme = t34;
      _.primaryTextTheme = t35;
      _.accentTextTheme = t36;
      _.inputDecorationTheme = t37;
      _.iconTheme = t38;
      _.primaryIconTheme = t39;
      _.accentIconTheme = t40;
      _.sliderTheme = t41;
      _.tabBarTheme = t42;
      _.tooltipTheme = t43;
      _.cardTheme = t44;
      _.chipTheme = t45;
      _.platform = t46;
      _.materialTapTargetSize = t47;
      _.applyElevationOverlayColor = t48;
      _.pageTransitionsTheme = t49;
      _.appBarTheme = t50;
      _.bottomAppBarTheme = t51;
      _.colorScheme = t52;
      _.snackBarTheme = t53;
      _.dialogTheme = t54;
      _.floatingActionButtonTheme = t55;
      _.navigationRailTheme = t56;
      _.typography = t57;
      _.cupertinoOverrideTheme = t58;
      _.bottomSheetTheme = t59;
      _.popupMenuTheme = t60;
      _.bannerTheme = t61;
      _.dividerTheme = t62;
      _.buttonBarTheme = t63;
      _.bottomNavigationBarTheme = t64;
      _.fixTextFieldOutlineLabel = t65;
    },
    ThemeData_localize_closure: function ThemeData_localize_closure(t0, t1) {
      this.baseTheme = t0;
      this.localTextGeometry = t1;
    },
    MaterialBasedCupertinoThemeData: function MaterialBasedCupertinoThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._materialTheme = t0;
      _._cupertinoOverrideTheme = t1;
      _._defaults = t2;
      _.brightness = t3;
      _._primaryColor = t4;
      _._primaryContrastingColor = t5;
      _._textTheme = t6;
      _._barBackgroundColor = t7;
      _._scaffoldBackgroundColor = t8;
    },
    _IdentityThemeDataCacheKey: function _IdentityThemeDataCacheKey(t0, t1) {
      this.baseTheme = t0;
      this.localTextGeometry = t1;
    },
    _FifoCache: function _FifoCache(t0, t1, t2) {
      this._cache = t0;
      this._maximumSize = t1;
      this.$ti = t2;
    },
    VisualDensity: function VisualDensity(t0, t1) {
      this.horizontal = t0;
      this.vertical = t1;
    },
    _ThemeData_Object_Diagnosticable: function _ThemeData_Object_Diagnosticable() {
    },
    _VisualDensity_Object_Diagnosticable: function _VisualDensity_Object_Diagnosticable() {
    },
    CircleBorder: function CircleBorder(t0) {
      this.side = t0;
    },
    RoundedRectangleBorder: function RoundedRectangleBorder(t0, t1) {
      this.side = t0;
      this.borderRadius = t1;
    },
    _RoundedRectangleToCircleBorder: function _RoundedRectangleToCircleBorder(t0, t1, t2) {
      this.side = t0;
      this.borderRadius = t1;
      this.circleness = t2;
    },
    RenderSliverFixedExtentBoxAdaptor: function RenderSliverFixedExtentBoxAdaptor() {
    },
    RenderSliverFixedExtentList: function RenderSliverFixedExtentList(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._itemExtent = t0;
      _._childManager = t1;
      _._keepAliveBucket = t2;
      _._debugDanglingKeepAlives = null;
      _._debugChildIntegrityEnabled = true;
      _.ContainerRenderObjectMixin__childCount = t3;
      _.ContainerRenderObjectMixin__firstChild = t4;
      _.ContainerRenderObjectMixin__lastChild = t5;
      _.debugCreator = _.parentData = _._sliver$_geometry = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    SystemChrome_setApplicationSwitcherDescription: function(description) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemChrome_setApplicationSwitcherDescription = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(C.OptionalMethodChannel_cdS.invokeMethod$1$2("SystemChrome.setApplicationSwitcherDescription", P.LinkedHashMap_LinkedHashMap$_literal(["label", description.label, "primaryColor", description.primaryColor], type$.String, type$.dynamic), type$.void), $async$SystemChrome_setApplicationSwitcherDescription);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$SystemChrome_setApplicationSwitcherDescription, $async$completer);
    },
    SystemChrome_setSystemUIOverlayStyle: function(style) {
      if ($.SystemChrome__pendingStyle != null) {
        $.SystemChrome__pendingStyle = style;
        return;
      }
      if (style.$eq(0, $.SystemChrome__latestStyle))
        return;
      $.SystemChrome__pendingStyle = style;
      P.scheduleMicrotask(new X.SystemChrome_setSystemUIOverlayStyle_closure());
    },
    ApplicationSwitcherDescription: function ApplicationSwitcherDescription(t0, t1) {
      this.label = t0;
      this.primaryColor = t1;
    },
    SystemUiOverlayStyle: function SystemUiOverlayStyle(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.systemNavigationBarColor = t0;
      _.systemNavigationBarDividerColor = t1;
      _.systemNavigationBarIconBrightness = t2;
      _.statusBarColor = t3;
      _.statusBarBrightness = t4;
      _.statusBarIconBrightness = t5;
    },
    SystemChrome_setSystemUIOverlayStyle_closure: function SystemChrome_setSystemUIOverlayStyle_closure() {
    },
    TextSelection$: function(baseOffset, extentOffset) {
      var t1 = baseOffset < extentOffset,
        t2 = t1 ? extentOffset : baseOffset;
      return new X.TextSelection(baseOffset, extentOffset, t1 ? baseOffset : extentOffset, t2);
    },
    TextSelection: function TextSelection(t0, t1, t2, t3) {
      var _ = this;
      _.baseOffset = t0;
      _.extentOffset = t1;
      _.start = t2;
      _.end = t3;
    },
    AnnotatedRegion: function AnnotatedRegion(t0, t1, t2, t3) {
      var _ = this;
      _.value = t0;
      _.child = t1;
      _.key = t2;
      _.$ti = t3;
    },
    IconData: function IconData(t0, t1) {
      this.codePoint = t0;
      this.matchTextDirection = t1;
    },
    ModalBarrier$: function(barrierSemanticsDismissible, color, dismissible, semanticsLabel) {
      return new X.ModalBarrier(color, false, true, semanticsLabel, null);
    },
    ModalBarrier: function ModalBarrier(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.dismissible = t1;
      _.barrierSemanticsDismissible = t2;
      _.semanticsLabel = t3;
      _.key = t4;
    },
    ModalBarrier_build_closure: function ModalBarrier_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _AnyTapGestureRecognizer: function _AnyTapGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onAnyTapUp = null;
      _._wonArenaForPrimaryPointer = _._sentTapDown = false;
      _._up = _._down = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _.state = t2;
      _.initialPosition = _.primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _._kindFilter = t6;
      _._pointerToKind = t7;
    },
    _ModalBarrierSemanticsDelegate: function _ModalBarrierSemanticsDelegate(t0) {
      this.onDismiss = t0;
    },
    _AnyTapGestureRecognizerFactory: function _AnyTapGestureRecognizerFactory(t0) {
      this.onAnyTapUp = t0;
    },
    _ModalBarrierGestureDetector: function _ModalBarrierGestureDetector(t0, t1, t2) {
      this.child = t0;
      this.onDismiss = t1;
      this.key = t2;
    },
    OverlayEntry$: function(builder, maintainState) {
      return new X.OverlayEntry(builder, maintainState, new N.LabeledGlobalKey(null, type$.LabeledGlobalKey__OverlayEntryWidgetState));
    },
    OverlayEntry: function OverlayEntry(t0, t1, t2) {
      var _ = this;
      _.builder = t0;
      _._opaque = false;
      _._maintainState = t1;
      _._overlay = null;
      _._key = t2;
    },
    OverlayEntry_remove_closure: function OverlayEntry_remove_closure(t0, t1) {
      this.$this = t0;
      this.overlay = t1;
    },
    _OverlayEntryWidget: function _OverlayEntryWidget(t0, t1, t2) {
      this.entry = t0;
      this.tickerEnabled = t1;
      this.key = t2;
    },
    _OverlayEntryWidgetState: function _OverlayEntryWidgetState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _OverlayEntryWidgetState__markNeedsBuild_closure: function _OverlayEntryWidgetState__markNeedsBuild_closure() {
    },
    Overlay: function Overlay(t0, t1) {
      this.initialEntries = t0;
      this.key = t1;
    },
    OverlayState: function OverlayState(t0, t1, t2) {
      var _ = this;
      _._entries = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    OverlayState_insert_closure: function OverlayState_insert_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entry = t3;
    },
    OverlayState_insertAll_closure: function OverlayState_insertAll_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entries = t3;
    },
    OverlayState_rearrange_closure: function OverlayState_rearrange_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.newEntriesList = t1;
      _.old = t2;
      _.below = t3;
      _.above = t4;
    },
    OverlayState__remove_closure: function OverlayState__remove_closure(t0, t1) {
      this.$this = t0;
      this.entry = t1;
    },
    OverlayState__didChangeEntryOpacity_closure: function OverlayState__didChangeEntryOpacity_closure() {
    },
    _Theatre: function _Theatre(t0, t1, t2) {
      this.skipCount = t0;
      this.children = t1;
      this.key = t2;
    },
    _TheatreElement: function _TheatreElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._framework$_children = null;
      _._forgottenChildren = t0;
      _._parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _._cachedHash = t1;
      _._depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    _RenderTheatre: function _RenderTheatre(t0, t1, t2, t3, t4) {
      var _ = this;
      _._hasVisualOverflow = false;
      _._overlay$_resolvedAlignment = null;
      _._overlay$_textDirection = t0;
      _._overlay$_skipCount = t1;
      _.ContainerRenderObjectMixin__childCount = t2;
      _.ContainerRenderObjectMixin__firstChild = t3;
      _.ContainerRenderObjectMixin__lastChild = t4;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderTheatre_hitTestChildren_closure: function _RenderTheatre_hitTestChildren_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.position = t1;
      this.childParentData = t2;
    },
    _OverlayState_State_TickerProviderStateMixin: function _OverlayState_State_TickerProviderStateMixin() {
    },
    __RenderTheatre_RenderBox_ContainerRenderObjectMixin: function __RenderTheatre_RenderBox_ContainerRenderObjectMixin() {
    },
    LogicalKeySet$: function(key1, key2) {
      var t1 = type$.LogicalKeyboardKey,
        t2 = P.HashSet_HashSet(t1);
      t2.add$1(0, key1);
      t2 = new X.LogicalKeySet(t2);
      t2.KeySet$4(key1, key2, null, null, {}, t1);
      return t2;
    },
    Shortcuts$: function(child, debugLabel, shortcuts) {
      return new X.Shortcuts(shortcuts, child, debugLabel, null);
    },
    KeySet: function KeySet() {
    },
    LogicalKeySet: function LogicalKeySet(t0) {
      this._shortcuts$_keys = t0;
      this._hashCode = null;
    },
    ShortcutManager: function ShortcutManager(t0, t1) {
      this._shortcuts = t0;
      this.ChangeNotifier__listeners = t1;
    },
    Shortcuts: function Shortcuts(t0, t1, t2, t3) {
      var _ = this;
      _.shortcuts = t0;
      _.child = t1;
      _.debugLabel = t2;
      _.key = t3;
    },
    _ShortcutsState: function _ShortcutsState(t0) {
      var _ = this;
      _._widget = _._internalManager = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _ShortcutsMarker: function _ShortcutsMarker(t0, t1, t2) {
      this.notifier = t0;
      this.child = t1;
      this.key = t2;
    },
    _LogicalKeySet_KeySet_Diagnosticable: function _LogicalKeySet_KeySet_Diagnosticable() {
    },
    _ShortcutManager_ChangeNotifier_Diagnosticable: function _ShortcutManager_ChangeNotifier_Diagnosticable() {
    },
    HapticFeedback_vibrate: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$HapticFeedback_vibrate = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(C.OptionalMethodChannel_cdS.invokeMethod$1$1("HapticFeedback.vibrate", type$.void), $async$HapticFeedback_vibrate);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$HapticFeedback_vibrate, $async$completer);
    },
    HapticFeedback_mediumImpact: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$HapticFeedback_mediumImpact = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(C.OptionalMethodChannel_cdS.invokeMethod$1$2("HapticFeedback.vibrate", "HapticFeedbackType.mediumImpact", type$.void), $async$HapticFeedback_mediumImpact);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$HapticFeedback_mediumImpact, $async$completer);
    }
  },
  G = {
    AnimationController$: function(debugLabel, duration, lowerBound, reverseDuration, upperBound, value, vsync) {
      var t1 = new G.AnimationController(lowerBound, upperBound, debugLabel, C.AnimationBehavior_0, duration, reverseDuration, C._AnimationDirection_0, C.AnimationStatus_0, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      t1._ticker = vsync.createTicker$1(t1.get$_animation_controller$_tick());
      t1._internalSetValue$1(value == null ? lowerBound : value);
      return t1;
    },
    AnimationController$unbounded: function(debugLabel, value, vsync) {
      var t1 = new G.AnimationController(-1 / 0, 1 / 0, debugLabel, C.AnimationBehavior_1, null, null, C._AnimationDirection_0, C.AnimationStatus_0, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      t1._ticker = vsync.createTicker$1(t1.get$_animation_controller$_tick());
      t1._internalSetValue$1(value);
      return t1;
    },
    _AnimationDirection: function _AnimationDirection(t0) {
      this._animation_controller$_name = t0;
    },
    AnimationBehavior: function AnimationBehavior(t0) {
      this._animation_controller$_name = t0;
    },
    AnimationController: function AnimationController(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.lowerBound = t0;
      _.upperBound = t1;
      _.debugLabel = t2;
      _.animationBehavior = t3;
      _.duration = t4;
      _.reverseDuration = t5;
      _._lastElapsedDuration = _._animation_controller$_value = _._simulation = _._ticker = null;
      _._direction = t6;
      _._animation_controller$_status = null;
      _._lastReportedStatus = t7;
      _.AnimationLocalStatusListenersMixin__statusListeners = t8;
      _.AnimationLocalListenersMixin__listeners = t9;
    },
    _InterpolationSimulation: function _InterpolationSimulation(t0, t1, t2, t3, t4) {
      var _ = this;
      _._durationInSeconds = t0;
      _._begin = t1;
      _._animation_controller$_end = t2;
      _._curve = t3;
      _.tolerance = t4;
    },
    _AnimationController_Animation_AnimationEagerListenerMixin: function _AnimationController_Animation_AnimationEagerListenerMixin() {
    },
    _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin: function _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin() {
    },
    _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    WriteBuffer0: function WriteBuffer0() {
      this._serialization$_eightBytesAsList = this._serialization$_eightBytes = this._serialization$_buffer = null;
    },
    ReadBuffer0: function ReadBuffer0(t0) {
      this.data = t0;
      this._serialization$_position = 0;
    },
    PointerSignalResolver: function PointerSignalResolver() {
      this._currentEvent = this._firstRegisteredCallback = null;
    },
    DividerThemeData: function DividerThemeData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.space = t1;
      _.thickness = t2;
      _.indent = t3;
      _.endIndent = t4;
    },
    _DividerThemeData_Object_Diagnosticable: function _DividerThemeData_Object_Diagnosticable() {
    },
    flipAxis: function(direction) {
      switch (direction) {
        case C.Axis_0:
          return C.Axis_1;
        case C.Axis_1:
          return C.Axis_0;
      }
      return null;
    },
    axisDirectionToAxis: function(axisDirection) {
      switch (axisDirection) {
        case C.AxisDirection_0:
        case C.AxisDirection_2:
          return C.Axis_1;
        case C.AxisDirection_3:
        case C.AxisDirection_1:
          return C.Axis_0;
      }
      return null;
    },
    textDirectionToAxisDirection: function(textDirection) {
      switch (textDirection) {
        case C.TextDirection_0:
          return C.AxisDirection_3;
        case C.TextDirection_1:
          return C.AxisDirection_1;
      }
      return null;
    },
    flipAxisDirection: function(axisDirection) {
      switch (axisDirection) {
        case C.AxisDirection_0:
          return C.AxisDirection_2;
        case C.AxisDirection_1:
          return C.AxisDirection_3;
        case C.AxisDirection_2:
          return C.AxisDirection_0;
        case C.AxisDirection_3:
          return C.AxisDirection_1;
      }
      return null;
    },
    axisDirectionIsReversed: function(axisDirection) {
      switch (axisDirection) {
        case C.AxisDirection_0:
        case C.AxisDirection_3:
          return true;
        case C.AxisDirection_2:
        case C.AxisDirection_1:
          return false;
      }
      return null;
    },
    RenderComparison: function RenderComparison(t0, t1) {
      this.index = t0;
      this._basic_types$_name = t1;
    },
    Axis: function Axis(t0) {
      this._basic_types$_name = t0;
    },
    VerticalDirection: function VerticalDirection(t0) {
      this._basic_types$_name = t0;
    },
    AxisDirection: function AxisDirection(t0) {
      this._basic_types$_name = t0;
    },
    InlineSpanSemanticsInformation$: function(text, recognizer, semanticsLabel) {
      return new G.InlineSpanSemanticsInformation(text, semanticsLabel, recognizer, false);
    },
    Accumulator: function Accumulator() {
      this._inline_span$_value = 0;
    },
    InlineSpanSemanticsInformation: function InlineSpanSemanticsInformation(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.semanticsLabel = t1;
      _.recognizer = t2;
      _.requiresOwnNode = t3;
    },
    InlineSpan: function InlineSpan() {
    },
    InlineSpan_getSpanForPosition_closure: function InlineSpan_getSpanForPosition_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.position = t1;
      this.offset = t2;
    },
    applyGrowthDirectionToAxisDirection: function(axisDirection, growthDirection) {
      switch (growthDirection) {
        case C.GrowthDirection_0:
          return axisDirection;
        case C.GrowthDirection_1:
          return G.flipAxisDirection(axisDirection);
      }
      return null;
    },
    applyGrowthDirectionToScrollDirection: function(scrollDirection, growthDirection) {
      switch (growthDirection) {
        case C.GrowthDirection_0:
          return scrollDirection;
        case C.GrowthDirection_1:
          return N.flipScrollDirection(scrollDirection);
      }
      return null;
    },
    SliverConstraints$: function(axisDirection, cacheOrigin, crossAxisDirection, crossAxisExtent, growthDirection, overlap, precedingScrollExtent, remainingCacheExtent, remainingPaintExtent, scrollOffset, userScrollDirection, viewportMainAxisExtent) {
      return new G.SliverConstraints(axisDirection, growthDirection, userScrollDirection, scrollOffset, precedingScrollExtent, overlap, remainingPaintExtent, crossAxisExtent, crossAxisDirection, viewportMainAxisExtent, cacheOrigin, remainingCacheExtent);
    },
    SliverGeometry$: function(cacheExtent, hasVisualOverflow, hitTestExtent, layoutExtent, maxPaintExtent, paintExtent, scrollExtent, scrollOffsetCorrection) {
      var t1 = layoutExtent == null ? paintExtent : layoutExtent,
        t2 = hitTestExtent == null ? paintExtent : hitTestExtent,
        t3 = cacheExtent == null ? layoutExtent : cacheExtent;
      if (t3 == null)
        t3 = paintExtent;
      return new G.SliverGeometry(scrollExtent, paintExtent, t1, maxPaintExtent, t2, paintExtent > 0, hasVisualOverflow, scrollOffsetCorrection, t3);
    },
    GrowthDirection: function GrowthDirection(t0) {
      this._sliver$_name = t0;
    },
    SliverConstraints: function SliverConstraints(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.axisDirection = t0;
      _.growthDirection = t1;
      _.userScrollDirection = t2;
      _.scrollOffset = t3;
      _.precedingScrollExtent = t4;
      _.overlap = t5;
      _.remainingPaintExtent = t6;
      _.crossAxisExtent = t7;
      _.crossAxisDirection = t8;
      _.viewportMainAxisExtent = t9;
      _.cacheOrigin = t10;
      _.remainingCacheExtent = t11;
    },
    SliverGeometry: function SliverGeometry(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.scrollExtent = t0;
      _.paintExtent = t1;
      _.layoutExtent = t2;
      _.maxPaintExtent = t3;
      _.hitTestExtent = t4;
      _.visible = t5;
      _.hasVisualOverflow = t6;
      _.scrollOffsetCorrection = t7;
      _.cacheExtent = t8;
    },
    SliverHitTestResult: function SliverHitTestResult(t0, t1) {
      this._path = t0;
      this._transforms = t1;
    },
    SliverHitTestEntry: function SliverHitTestEntry(t0, t1, t2) {
      var _ = this;
      _.mainAxisPosition = t0;
      _.crossAxisPosition = t1;
      _.target = t2;
      _._transform = null;
    },
    SliverLogicalParentData: function SliverLogicalParentData() {
    },
    SliverPhysicalParentData: function SliverPhysicalParentData(t0) {
      this.paintOffset = t0;
    },
    SliverPhysicalContainerParentData: function SliverPhysicalContainerParentData(t0, t1, t2) {
      this.ContainerParentDataMixin_previousSibling = t0;
      this.ContainerParentDataMixin_nextSibling = t1;
      this.paintOffset = t2;
    },
    RenderSliver: function RenderSliver() {
    },
    RenderSliverHelpers: function RenderSliverHelpers() {
    },
    RenderSliverHelpers_hitTestBoxChild_closure: function RenderSliverHelpers_hitTestBoxChild_closure(t0, t1) {
      this._box_0 = t0;
      this.child = t1;
    },
    _SliverGeometry_Object_Diagnosticable: function _SliverGeometry_Object_Diagnosticable() {
    },
    _SliverPhysicalContainerParentData_SliverPhysicalParentData_ContainerParentDataMixin: function _SliverPhysicalContainerParentData_SliverPhysicalParentData_ContainerParentDataMixin() {
    },
    LogicalKeyboardKey_isControlCharacter: function(label) {
      var codeUnit, t1;
      if (label.length > 1)
        return false;
      codeUnit = J._codeUnitAt$1$s(label, 0);
      if (!(codeUnit <= 31 && true))
        t1 = codeUnit >= 127 && codeUnit <= 159;
      else
        t1 = true;
      return t1;
    },
    KeyboardKey: function KeyboardKey() {
    },
    LogicalKeyboardKey: function LogicalKeyboardKey(t0, t1, t2) {
      this.keyId = t0;
      this.debugName = t1;
      this.keyLabel = t2;
    },
    PhysicalKeyboardKey: function PhysicalKeyboardKey(t0, t1) {
      this.usbHidUsage = t0;
      this.debugName = t1;
    },
    _KeyboardKey_Object_Diagnosticable: function _KeyboardKey_Object_Diagnosticable() {
    },
    DecorationTween: function DecorationTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    BorderRadiusTween: function BorderRadiusTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    TextStyleTween: function TextStyleTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    ImplicitlyAnimatedWidget: function ImplicitlyAnimatedWidget() {
    },
    ImplicitlyAnimatedWidgetState: function ImplicitlyAnimatedWidgetState() {
    },
    ImplicitlyAnimatedWidgetState_initState_closure: function ImplicitlyAnimatedWidgetState_initState_closure(t0) {
      this.$this = t0;
    },
    ImplicitlyAnimatedWidgetState_didUpdateWidget_closure: function ImplicitlyAnimatedWidgetState_didUpdateWidget_closure(t0) {
      this.$this = t0;
    },
    ImplicitlyAnimatedWidgetState__constructTweens_closure: function ImplicitlyAnimatedWidgetState__constructTweens_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    AnimatedWidgetBaseState: function AnimatedWidgetBaseState() {
    },
    AnimatedWidgetBaseState__handleAnimationChanged_closure: function AnimatedWidgetBaseState__handleAnimationChanged_closure() {
    },
    AnimatedDefaultTextStyle: function AnimatedDefaultTextStyle(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.style = t1;
      _.curve = t2;
      _.duration = t3;
      _.onEnd = t4;
      _.key = t5;
    },
    _AnimatedDefaultTextStyleState: function _AnimatedDefaultTextStyleState(t0, t1) {
      var _ = this;
      _._implicit_animations$_animation = _._implicit_animations$_controller = _._implicit_animations$_style = null;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _AnimatedDefaultTextStyleState_forEachTween_closure: function _AnimatedDefaultTextStyleState_forEachTween_closure() {
    },
    AnimatedPhysicalModel: function AnimatedPhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.clipBehavior = t2;
      _.borderRadius = t3;
      _.elevation = t4;
      _.color = t5;
      _.animateColor = t6;
      _.shadowColor = t7;
      _.curve = t8;
      _.duration = t9;
      _.onEnd = t10;
      _.key = t11;
    },
    _AnimatedPhysicalModelState: function _AnimatedPhysicalModelState(t0, t1) {
      var _ = this;
      _._implicit_animations$_animation = _._implicit_animations$_controller = _._implicit_animations$_shadowColor = _._implicit_animations$_color = _._implicit_animations$_elevation = _._borderRadius = null;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _AnimatedPhysicalModelState_forEachTween_closure: function _AnimatedPhysicalModelState_forEachTween_closure() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure0: function _AnimatedPhysicalModelState_forEachTween_closure0() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure1: function _AnimatedPhysicalModelState_forEachTween_closure1() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure2: function _AnimatedPhysicalModelState_forEachTween_closure2() {
    },
    _ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin: function _ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin() {
    },
    OverscrollNotification$: function(context, dragDetails, metrics, overscroll, velocity) {
      return new G.OverscrollNotification(dragDetails, overscroll, velocity, metrics, context, 0);
    },
    defaultScrollNotificationPredicate: function(notification) {
      return notification.ViewportNotificationMixin__depth === 0;
    },
    ViewportNotificationMixin: function ViewportNotificationMixin() {
    },
    ScrollNotification: function ScrollNotification() {
    },
    ScrollStartNotification: function ScrollStartNotification(t0, t1, t2, t3) {
      var _ = this;
      _.dragDetails = t0;
      _.metrics = t1;
      _.context = t2;
      _.ViewportNotificationMixin__depth = t3;
    },
    ScrollUpdateNotification: function ScrollUpdateNotification(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dragDetails = t0;
      _.scrollDelta = t1;
      _.metrics = t2;
      _.context = t3;
      _.ViewportNotificationMixin__depth = t4;
    },
    OverscrollNotification: function OverscrollNotification(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.dragDetails = t0;
      _.overscroll = t1;
      _.velocity = t2;
      _.metrics = t3;
      _.context = t4;
      _.ViewportNotificationMixin__depth = t5;
    },
    ScrollEndNotification: function ScrollEndNotification(t0, t1, t2, t3) {
      var _ = this;
      _.dragDetails = t0;
      _.metrics = t1;
      _.context = t2;
      _.ViewportNotificationMixin__depth = t3;
    },
    UserScrollNotification: function UserScrollNotification(t0, t1, t2, t3) {
      var _ = this;
      _.direction = t0;
      _.metrics = t1;
      _.context = t2;
      _.ViewportNotificationMixin__depth = t3;
    },
    _ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin: function _ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin() {
    },
    _kDefaultSemanticIndexCallback: function(_, localIndex) {
      return localIndex;
    },
    SliverChildListDelegate$: function(children, addAutomaticKeepAlives, addRepaintBoundaries, addSemanticIndexes) {
      return new G.SliverChildListDelegate(true, true, true, children, P.LinkedHashMap_LinkedHashMap$_literal([null, 0], type$.Key, type$.int));
    },
    SliverMultiBoxAdaptorElement__extrapolateMaxScrollOffset: function(firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset, childCount) {
      if (lastIndex === childCount - 1)
        return trailingScrollOffset;
      return trailingScrollOffset + (trailingScrollOffset - leadingScrollOffset) / (lastIndex - firstIndex + 1) * (childCount - lastIndex - 1);
    },
    SliverChildDelegate: function SliverChildDelegate() {
    },
    _SaltedValueKey: function _SaltedValueKey(t0) {
      this.value = t0;
    },
    SliverChildBuilderDelegate: function SliverChildBuilderDelegate(t0, t1, t2, t3, t4) {
      var _ = this;
      _.builder = t0;
      _.childCount = t1;
      _.addAutomaticKeepAlives = t2;
      _.addRepaintBoundaries = t3;
      _.addSemanticIndexes = t4;
    },
    SliverChildListDelegate: function SliverChildListDelegate(t0, t1, t2, t3, t4) {
      var _ = this;
      _.addAutomaticKeepAlives = t0;
      _.addRepaintBoundaries = t1;
      _.addSemanticIndexes = t2;
      _.children = t3;
      _._keyToIndex = t4;
    },
    SliverWithKeepAliveWidget: function SliverWithKeepAliveWidget() {
    },
    SliverMultiBoxAdaptorWidget: function SliverMultiBoxAdaptorWidget() {
    },
    SliverList: function SliverList(t0, t1) {
      this.delegate = t0;
      this.key = t1;
    },
    SliverFixedExtentList: function SliverFixedExtentList(t0, t1, t2) {
      this.itemExtent = t0;
      this.delegate = t1;
      this.key = t2;
    },
    SliverMultiBoxAdaptorElement: function SliverMultiBoxAdaptorElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._childWidgets = t0;
      _._childElements = t1;
      _._currentlyUpdatingChildIndex = _._currentBeforeChild = null;
      _._didUnderflow = false;
      _._parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _._cachedHash = t2;
      _._depth = _._slot = null;
      _._widget = t3;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t4;
      _._debugForgottenChildrenWithGlobalKey = t5;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    SliverMultiBoxAdaptorElement_performRebuild_processElement: function SliverMultiBoxAdaptorElement_performRebuild_processElement(t0, t1, t2) {
      this.$this = t0;
      this.newChildren = t1;
      this.indexToLayoutOffset = t2;
    },
    SliverMultiBoxAdaptorElement_performRebuild_closure: function SliverMultiBoxAdaptorElement_performRebuild_closure() {
    },
    SliverMultiBoxAdaptorElement_performRebuild_closure0: function SliverMultiBoxAdaptorElement_performRebuild_closure0(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    SliverMultiBoxAdaptorElement__build_closure: function SliverMultiBoxAdaptorElement__build_closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    SliverMultiBoxAdaptorElement_createChild_closure: function SliverMultiBoxAdaptorElement_createChild_closure(t0, t1, t2) {
      this.$this = t0;
      this.after = t1;
      this.index = t2;
    },
    SliverMultiBoxAdaptorElement_removeChild_closure: function SliverMultiBoxAdaptorElement_removeChild_closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    KeepAlive: function KeepAlive(t0, t1, t2) {
      this.keepAlive = t0;
      this.child = t1;
      this.key = t2;
    },
    BenchDrawRect: function BenchDrawRect(t0, t1) {
      this.wobbleCounter = 0;
      this.isTracingEnabled = t0;
      this.name = t1;
    },
    _synthesiseDownButtons: function(buttons, kind) {
      switch (kind) {
        case C.PointerDeviceKind_1:
          return buttons;
        case C.PointerDeviceKind_0:
        case C.PointerDeviceKind_2:
        case C.PointerDeviceKind_3:
          return (buttons | 1) >>> 0;
        default:
          return buttons === 0 ? 1 : buttons;
      }
    },
    PointerEventConverter_expand: function($async$data, $async$devicePixelRatio) {
      return P._makeSyncStarIterable(function() {
        var data = $async$data,
          devicePixelRatio = $async$devicePixelRatio;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, _i, datum, position, delta, radiusMinor, radiusMajor, radiusMin, radiusMax, timeStamp, kind, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13;
        return function $async$PointerEventConverter_expand($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = data.length, _i = 0;
              case 2:
                // for condition
                if (!(_i < data.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                datum = data[_i];
                position = new P.Offset(datum.physicalX / devicePixelRatio, datum.physicalY / devicePixelRatio);
                delta = new P.Offset(datum.physicalDeltaX / devicePixelRatio, datum.physicalDeltaY / devicePixelRatio);
                radiusMinor = datum.radiusMinor / devicePixelRatio;
                radiusMajor = datum.radiusMajor / devicePixelRatio;
                radiusMin = datum.radiusMin / devicePixelRatio;
                radiusMax = datum.radiusMax / devicePixelRatio;
                timeStamp = datum.timeStamp;
                kind = datum.kind;
                t2 = datum.signalKind;
                $async$goto = t2 == null || t2 === C.PointerSignalKind_0 ? 5 : 7;
                break;
              case 5:
                // then
              case 8:
                // switch
                switch (datum.change) {
                  case C.PointerChange_1:
                    // goto case
                    $async$goto = 10;
                    break;
                  case C.PointerChange_3:
                    // goto case
                    $async$goto = 11;
                    break;
                  case C.PointerChange_4:
                    // goto case
                    $async$goto = 12;
                    break;
                  case C.PointerChange_5:
                    // goto case
                    $async$goto = 13;
                    break;
                  case C.PointerChange_6:
                    // goto case
                    $async$goto = 14;
                    break;
                  case C.PointerChange_0:
                    // goto case
                    $async$goto = 15;
                    break;
                  case C.PointerChange_2:
                    // goto case
                    $async$goto = 16;
                    break;
                  default:
                    // goto after switch
                    $async$goto = 9;
                    break;
                }
                break;
              case 10:
                // case
                t2 = datum.device;
                t3 = datum.pressureMin;
                t4 = datum.pressureMax;
                t5 = datum.distance;
                t6 = datum.distanceMax;
                t7 = datum.orientation;
                t8 = datum.tilt;
                $async$goto = 17;
                return new F.PointerAddedEvent(timeStamp, 0, kind, t2, position, position, C.Offset_0_0, C.Offset_0_0, 0, false, false, 0, t3, t4, t5, t6, 0, 0, 0, radiusMin, radiusMax, t7, t8, 0, false, null, null);
              case 17:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 11:
                // case
                t2 = datum.device;
                t3 = datum.buttons;
                t4 = datum.pressureMin;
                t5 = datum.pressureMax;
                t6 = datum.distance;
                t7 = datum.distanceMax;
                t8 = datum.size;
                t9 = datum.orientation;
                t10 = datum.tilt;
                t11 = datum.synthesized;
                $async$goto = 18;
                return new F.PointerHoverEvent(timeStamp, 0, kind, t2, position, position, delta, delta, t3, false, false, 0, t4, t5, t6, t7, t8, radiusMajor, radiusMinor, radiusMin, radiusMax, t9, t10, 0, t11, null, null);
              case 18:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 12:
                // case
                t2 = datum.pointerIdentifier;
                t3 = datum.device;
                t4 = G._synthesiseDownButtons(datum.buttons, kind);
                t5 = datum.pressure;
                t6 = datum.pressureMin;
                t7 = datum.pressureMax;
                t8 = datum.distanceMax;
                t9 = datum.size;
                t10 = datum.orientation;
                t11 = datum.tilt;
                $async$goto = 19;
                return new F.PointerDownEvent(timeStamp, t2, kind, t3, position, position, C.Offset_0_0, C.Offset_0_0, t4, true, false, t5, t6, t7, 0, t8, t9, radiusMajor, radiusMinor, radiusMin, radiusMax, t10, t11, 0, false, null, null);
              case 19:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 13:
                // case
                t2 = datum.pointerIdentifier;
                t3 = datum.device;
                t4 = G._synthesiseDownButtons(datum.buttons, kind);
                t5 = datum.pressure;
                t6 = datum.pressureMin;
                t7 = datum.pressureMax;
                t8 = datum.distanceMax;
                t9 = datum.size;
                t10 = datum.orientation;
                t11 = datum.tilt;
                t12 = datum.platformData;
                t13 = datum.synthesized;
                $async$goto = 20;
                return new F.PointerMoveEvent(timeStamp, t2, kind, t3, position, position, delta, delta, t4, true, false, t5, t6, t7, 0, t8, t9, radiusMajor, radiusMinor, radiusMin, radiusMax, t10, t11, t12, t13, null, null);
              case 20:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 14:
                // case
                t2 = datum.pointerIdentifier;
                t3 = datum.device;
                t4 = datum.buttons;
                t5 = datum.pressure;
                t6 = datum.pressureMin;
                t7 = datum.pressureMax;
                t8 = datum.distance;
                t9 = datum.distanceMax;
                t10 = datum.size;
                t11 = datum.orientation;
                t12 = datum.tilt;
                $async$goto = 21;
                return new F.PointerUpEvent(timeStamp, t2, kind, t3, position, position, C.Offset_0_0, C.Offset_0_0, t4, false, false, t5, t6, t7, t8, t9, t10, radiusMajor, radiusMinor, radiusMin, radiusMax, t11, t12, 0, false, null, null);
              case 21:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 15:
                // case
                t2 = datum.pointerIdentifier;
                t3 = datum.device;
                t4 = datum.buttons;
                t5 = datum.pressureMin;
                t6 = datum.pressureMax;
                t7 = datum.distance;
                t8 = datum.distanceMax;
                t9 = datum.size;
                t10 = datum.orientation;
                t11 = datum.tilt;
                $async$goto = 22;
                return new F.PointerCancelEvent(timeStamp, t2, kind, t3, position, position, C.Offset_0_0, C.Offset_0_0, t4, false, false, 0, t5, t6, t7, t8, t9, radiusMajor, radiusMinor, radiusMin, radiusMax, t10, t11, 0, false, null, null);
              case 22:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 16:
                // case
                t2 = datum.device;
                t3 = datum.pressureMin;
                t4 = datum.pressureMax;
                t5 = datum.distanceMax;
                $async$goto = 23;
                return new F.PointerRemovedEvent(timeStamp, 0, kind, t2, position, position, C.Offset_0_0, C.Offset_0_0, 0, false, false, 0, t3, t4, 0, t5, 0, 0, 0, radiusMin, radiusMax, 0, 0, 0, false, null, null);
              case 23:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 9:
                // after switch
                // goto join
                $async$goto = 6;
                break;
              case 7:
                // else
              case 24:
                // switch
                switch (t2) {
                  case C.PointerSignalKind_1:
                    // goto case
                    $async$goto = 26;
                    break;
                  case C.PointerSignalKind_0:
                    // goto case
                    $async$goto = 27;
                    break;
                  case C.PointerSignalKind_2:
                    // goto case
                    $async$goto = 28;
                    break;
                  default:
                    // goto after switch
                    $async$goto = 25;
                    break;
                }
                break;
              case 26:
                // case
                t2 = datum.scrollDeltaX;
                t3 = datum.scrollDeltaY;
                t4 = datum.device;
                $async$goto = 29;
                return new F.PointerScrollEvent(new P.Offset(t2 / devicePixelRatio, t3 / devicePixelRatio), timeStamp, 0, kind, t4, position, position, C.Offset_0_0, C.Offset_0_0, 0, false, false, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, false, null, null);
              case 29:
                // after yield
                // goto after switch
                $async$goto = 25;
                break;
              case 27:
                // case
                // goto after switch
                $async$goto = 25;
                break;
              case 28:
                // case
                // goto after switch
                $async$goto = 25;
                break;
              case 25:
                // after switch
              case 6:
                // join
              case 3:
                // for update
                data.length === t1 || (0, H.throwConcurrentModificationError)(data), ++_i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.PointerEvent);
    }
  },
  S = {
    ProxyAnimation$: function(animation) {
      var t1 = new S.ProxyAnimation(new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function), 0);
      t1._animations$_parent = animation;
      if (animation == null) {
        t1._status = C.AnimationStatus_0;
        t1._animations$_value = 0;
      }
      return t1;
    },
    CurvedAnimation$: function(curve, $parent, reverseCurve) {
      var t1 = new S.CurvedAnimation($parent, curve, reverseCurve);
      t1._updateCurveDirection$1($parent.get$status($parent));
      $parent.addStatusListener$1(t1.get$_updateCurveDirection());
      return t1;
    },
    TrainHoppingAnimation$: function(_currentTrain, _nextTrain, onSwitchedTrain) {
      var t2, t3,
        t1 = new S.TrainHoppingAnimation(_currentTrain, _nextTrain, onSwitchedTrain, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      if (J.$eq$(_currentTrain.get$value(_currentTrain), _nextTrain.get$value(_nextTrain))) {
        t1._currentTrain = _nextTrain;
        t1._nextTrain = null;
        t2 = _nextTrain;
      } else {
        if (_currentTrain.get$value(_currentTrain) > _nextTrain.get$value(_nextTrain))
          t1._mode = C._TrainHoppingMode_1;
        else
          t1._mode = C._TrainHoppingMode_0;
        t2 = _currentTrain;
      }
      t2.addStatusListener$1(t1.get$_statusChangeHandler());
      t2 = t1.get$_valueChangeHandler();
      t1._currentTrain.addListener$1(0, t2);
      t3 = t1._nextTrain;
      if (t3 != null) {
        t3.didRegisterListener$0();
        t3 = t3.AnimationLocalListenersMixin__listeners;
        t3._isDirty = true;
        t3._list.push(t2);
      }
      return t1;
    },
    _AlwaysCompleteAnimation: function _AlwaysCompleteAnimation() {
    },
    _AlwaysDismissedAnimation: function _AlwaysDismissedAnimation() {
    },
    AnimationWithParentMixin: function AnimationWithParentMixin() {
    },
    ProxyAnimation: function ProxyAnimation(t0, t1, t2) {
      var _ = this;
      _._animations$_parent = _._animations$_value = _._status = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t0;
      _.AnimationLocalListenersMixin__listeners = t1;
      _.AnimationLazyListenerMixin__listenerCounter = t2;
    },
    ReverseAnimation: function ReverseAnimation(t0, t1, t2) {
      this.parent = t0;
      this.AnimationLocalStatusListenersMixin__statusListeners = t1;
      this.AnimationLazyListenerMixin__listenerCounter = t2;
    },
    CurvedAnimation: function CurvedAnimation(t0, t1, t2) {
      var _ = this;
      _.parent = t0;
      _.curve = t1;
      _.reverseCurve = t2;
      _._curveDirection = null;
    },
    _TrainHoppingMode: function _TrainHoppingMode(t0) {
      this._animations$_name = t0;
    },
    TrainHoppingAnimation: function TrainHoppingAnimation(t0, t1, t2, t3, t4) {
      var _ = this;
      _._currentTrain = t0;
      _._nextTrain = t1;
      _._mode = null;
      _.onSwitchedTrain = t2;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t3;
      _.AnimationLocalListenersMixin__listeners = t4;
    },
    CompoundAnimation: function CompoundAnimation() {
    },
    AnimationMin: function AnimationMin(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.first = t0;
      _.next = t1;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t2;
      _.AnimationLocalListenersMixin__listeners = t3;
      _.AnimationLazyListenerMixin__listenerCounter = t4;
      _.$ti = t5;
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin() {
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    _CurvedAnimation_Animation_AnimationWithParentMixin: function _CurvedAnimation_Animation_AnimationWithParentMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    _ReverseAnimation_Animation_AnimationLazyListenerMixin: function _ReverseAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin: function _ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    AnimationLazyListenerMixin: function AnimationLazyListenerMixin() {
    },
    AnimationEagerListenerMixin: function AnimationEagerListenerMixin() {
    },
    AnimationLocalListenersMixin: function AnimationLocalListenersMixin() {
    },
    AnimationLocalStatusListenersMixin: function AnimationLocalStatusListenersMixin() {
    },
    DragStartBehavior: function DragStartBehavior(t0) {
      this._recognizer$_name = t0;
    },
    GestureRecognizer: function GestureRecognizer() {
    },
    OneSequenceGestureRecognizer: function OneSequenceGestureRecognizer() {
    },
    GestureRecognizerState: function GestureRecognizerState(t0) {
      this._recognizer$_name = t0;
    },
    PrimaryPointerGestureRecognizer: function PrimaryPointerGestureRecognizer() {
    },
    PrimaryPointerGestureRecognizer_addAllowedPointer_closure: function PrimaryPointerGestureRecognizer_addAllowedPointer_closure(t0, t1) {
      this.$this = t0;
      this.event = t1;
    },
    OffsetPair: function OffsetPair(t0, t1) {
      this.local = t0;
      this.global = t1;
    },
    _GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin: function _GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin() {
    },
    ThemeMode: function ThemeMode(t0) {
      this._app0$_name = t0;
    },
    MaterialApp: function MaterialApp(t0, t1, t2) {
      this.home = t0;
      this.title = t1;
      this.key = t2;
    },
    _MaterialScrollBehavior: function _MaterialScrollBehavior() {
    },
    _MaterialAppState: function _MaterialAppState(t0) {
      var _ = this;
      _._widget = _._navigatorObservers = _._heroController = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _MaterialAppState_build_closure: function _MaterialAppState_build_closure() {
    },
    _MaterialAppState_build_closure0: function _MaterialAppState_build_closure0(t0) {
      this.$this = t0;
    },
    _MaterialAppState_build_closure1: function _MaterialAppState_build_closure1() {
    },
    FloatingActionButtonThemeData_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t1 ? _null : a.foregroundColor;
      t3 = b == null;
      t2 = P.Color_lerp(t2, t3 ? _null : b.foregroundColor, t);
      t4 = t1 ? _null : a.backgroundColor;
      t4 = P.Color_lerp(t4, t3 ? _null : b.backgroundColor, t);
      t5 = t1 ? _null : a.focusColor;
      t5 = P.Color_lerp(t5, t3 ? _null : b.focusColor, t);
      t6 = t1 ? _null : a.hoverColor;
      t6 = P.Color_lerp(t6, t3 ? _null : b.hoverColor, t);
      t7 = t1 ? _null : a.splashColor;
      t7 = P.Color_lerp(t7, t3 ? _null : b.splashColor, t);
      t8 = t1 ? _null : a.elevation;
      t8 = P.lerpDouble(t8, t3 ? _null : b.elevation, t);
      t9 = t1 ? _null : a.focusElevation;
      t9 = P.lerpDouble(t9, t3 ? _null : b.focusElevation, t);
      t10 = t1 ? _null : a.hoverElevation;
      t10 = P.lerpDouble(t10, t3 ? _null : b.hoverElevation, t);
      t11 = t1 ? _null : a.disabledElevation;
      t11 = P.lerpDouble(t11, t3 ? _null : b.disabledElevation, t);
      t12 = t1 ? _null : a.highlightElevation;
      t12 = P.lerpDouble(t12, t3 ? _null : b.highlightElevation, t);
      t1 = t1 ? _null : a.shape;
      return new S.FloatingActionButtonThemeData(t2, t4, t5, t6, t7, t8, t9, t10, t11, t12, Y.ShapeBorder_lerp(t1, t3 ? _null : b.shape, t));
    },
    FloatingActionButtonThemeData: function FloatingActionButtonThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.foregroundColor = t0;
      _.backgroundColor = t1;
      _.focusColor = t2;
      _.hoverColor = t3;
      _.splashColor = t4;
      _.elevation = t5;
      _.focusElevation = t6;
      _.hoverElevation = t7;
      _.disabledElevation = t8;
      _.highlightElevation = t9;
      _.shape = t10;
    },
    _FloatingActionButtonThemeData_Object_Diagnosticable: function _FloatingActionButtonThemeData_Object_Diagnosticable() {
    },
    ToggleButtonsThemeData_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t1 ? _null : a.textStyle;
      t3 = b == null;
      t2 = A.TextStyle_lerp(t2, t3 ? _null : b.textStyle, t);
      t4 = t1 ? _null : a.constraints;
      t4 = S.BoxConstraints_lerp(t4, t3 ? _null : b.constraints, t);
      t5 = t1 ? _null : a.color;
      t5 = P.Color_lerp(t5, t3 ? _null : b.color, t);
      t6 = t1 ? _null : a.selectedColor;
      t6 = P.Color_lerp(t6, t3 ? _null : b.selectedColor, t);
      t7 = t1 ? _null : a.disabledColor;
      t7 = P.Color_lerp(t7, t3 ? _null : b.disabledColor, t);
      t8 = t1 ? _null : a.fillColor;
      t8 = P.Color_lerp(t8, t3 ? _null : b.fillColor, t);
      t9 = t1 ? _null : a.focusColor;
      t9 = P.Color_lerp(t9, t3 ? _null : b.focusColor, t);
      t10 = t1 ? _null : a.highlightColor;
      t10 = P.Color_lerp(t10, t3 ? _null : b.highlightColor, t);
      t11 = t1 ? _null : a.hoverColor;
      t11 = P.Color_lerp(t11, t3 ? _null : b.hoverColor, t);
      t12 = t1 ? _null : a.splashColor;
      t12 = P.Color_lerp(t12, t3 ? _null : b.splashColor, t);
      t13 = t1 ? _null : a.borderColor;
      t13 = P.Color_lerp(t13, t3 ? _null : b.borderColor, t);
      t14 = t1 ? _null : a.selectedBorderColor;
      t14 = P.Color_lerp(t14, t3 ? _null : b.selectedBorderColor, t);
      t15 = t1 ? _null : a.disabledBorderColor;
      t15 = P.Color_lerp(t15, t3 ? _null : b.disabledBorderColor, t);
      t16 = t1 ? _null : a.borderRadius;
      t16 = K.BorderRadius_lerp(t16, t3 ? _null : b.borderRadius, t);
      t1 = t1 ? _null : a.borderWidth;
      return new S.ToggleButtonsThemeData(t2, t4, t5, t6, t7, t8, t9, t10, t12, t11, t13, t14, t15, P.lerpDouble(t1, t3 ? _null : b.borderWidth, t), t16);
    },
    ToggleButtonsThemeData: function ToggleButtonsThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.textStyle = t0;
      _.constraints = t1;
      _.color = t2;
      _.selectedColor = t3;
      _.disabledColor = t4;
      _.fillColor = t5;
      _.focusColor = t6;
      _.highlightColor = t7;
      _.splashColor = t8;
      _.hoverColor = t9;
      _.borderColor = t10;
      _.selectedBorderColor = t11;
      _.disabledBorderColor = t12;
      _.borderWidth = t13;
      _.borderRadius = t14;
    },
    _ToggleButtonsThemeData_Object_Diagnosticable: function _ToggleButtonsThemeData_Object_Diagnosticable() {
    },
    Tooltip$: function(child, message) {
      return new S.Tooltip(message, child, null);
    },
    Tooltip: function Tooltip(t0, t1, t2) {
      this.message = t0;
      this.child = t1;
      this.key = t2;
    },
    _TooltipState: function _TooltipState(t0, t1) {
      var _ = this;
      _._mouseIsConnected = _.waitDuration = _.showDuration = _._showTimer = _._hideTimer = _._entry = _._tooltip$_controller = _.excludeFromSemantics = _.preferBelow = _.verticalOffset = _.textStyle = _.decoration = _.margin = _.padding = _.height = null;
      _._longPressActivated = false;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _TooltipState__handleMouseTrackerChange_closure: function _TooltipState__handleMouseTrackerChange_closure(t0, t1) {
      this.$this = t0;
      this.mouseIsConnected = t1;
    },
    _TooltipState__createNewEntry_closure: function _TooltipState__createNewEntry_closure(t0) {
      this.overlay = t0;
    },
    _TooltipState_build_closure: function _TooltipState_build_closure(t0) {
      this.$this = t0;
    },
    _TooltipState_build_closure0: function _TooltipState_build_closure0(t0) {
      this.$this = t0;
    },
    _TooltipPositionDelegate: function _TooltipPositionDelegate(t0, t1, t2) {
      this.target = t0;
      this.verticalOffset = t1;
      this.preferBelow = t2;
    },
    _TooltipOverlay: function _TooltipOverlay(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.message = t0;
      _.height = t1;
      _.padding = t2;
      _.margin = t3;
      _.decoration = t4;
      _.textStyle = t5;
      _.animation = t6;
      _.target = t7;
      _.verticalOffset = t8;
      _.preferBelow = t9;
      _.key = t10;
    },
    __TooltipState_State_SingleTickerProviderStateMixin: function __TooltipState_State_SingleTickerProviderStateMixin() {
    },
    BoxDecoration$: function(border, borderRadius, boxShadow, color, gradient, image, shape) {
      return new S.BoxDecoration(color, image, border, borderRadius, boxShadow, gradient, shape);
    },
    BoxDecoration_lerp: function(a, b, t) {
      var t1, t2, t3, t4, t5, t6, t7;
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      t1 = P.Color_lerp(a.color, b.color, t);
      t2 = t < 0.5;
      t3 = t2 ? a.image : b.image;
      t4 = F.BoxBorder_lerp(a.border, b.border, t);
      t5 = K.BorderRadiusGeometry_lerp(a.borderRadius, b.borderRadius, t);
      t6 = O.BoxShadow_lerpList(a.boxShadow, b.boxShadow, t);
      t7 = T.Gradient_lerp(a.gradient, b.gradient, t);
      return S.BoxDecoration$(t4, t5, t6, t1, t7, t3, t2 ? a.shape : b.shape);
    },
    BoxDecoration: function BoxDecoration(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.color = t0;
      _.image = t1;
      _.border = t2;
      _.borderRadius = t3;
      _.boxShadow = t4;
      _.gradient = t5;
      _.shape = t6;
    },
    _BoxDecorationPainter: function _BoxDecorationPainter(t0, t1) {
      var _ = this;
      _._box_decoration$_decoration = t0;
      _._imagePainter = _._rectForCachedBackgroundPaint = _._cachedBackgroundPaint = null;
      _.onChanged = t1;
    },
    PlaceholderSpan: function PlaceholderSpan() {
    },
    StadiumBorder: function StadiumBorder(t0) {
      this.side = t0;
    },
    _StadiumToCircleBorder: function _StadiumToCircleBorder(t0, t1) {
      this.side = t0;
      this.circleness = t1;
    },
    _StadiumToRoundedRectangleBorder: function _StadiumToRoundedRectangleBorder(t0, t1, t2) {
      this.side = t0;
      this.borderRadius = t1;
      this.rectness = t2;
    },
    BoxConstraints$tight: function(size) {
      var t1 = size._dx,
        t2 = size._dy;
      return new S.BoxConstraints(t1, t1, t2, t2);
    },
    BoxConstraints$tightFor: function(height, width) {
      var t3, t4,
        t1 = width == null,
        t2 = t1 ? 0 : width;
      t1 = t1 ? 1 / 0 : width;
      t3 = height == null;
      t4 = t3 ? 0 : height;
      return new S.BoxConstraints(t2, t1, t4, t3 ? 1 / 0 : height);
    },
    BoxConstraints_lerp: function(a, b, t) {
      var t2, t3, t4,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = a.minWidth;
      t1.toString;
      t1 = isFinite(t1) ? P.lerpDouble(t1, b.minWidth, t) : 1 / 0;
      t2 = a.maxWidth;
      t2.toString;
      t2 = isFinite(t2) ? P.lerpDouble(t2, b.maxWidth, t) : 1 / 0;
      t3 = a.minHeight;
      t3.toString;
      t3 = isFinite(t3) ? P.lerpDouble(t3, b.minHeight, t) : 1 / 0;
      t4 = a.maxHeight;
      t4.toString;
      return new S.BoxConstraints(t1, t2, t3, isFinite(t4) ? P.lerpDouble(t4, b.maxHeight, t) : 1 / 0);
    },
    BoxConstraints: function BoxConstraints(t0, t1, t2, t3) {
      var _ = this;
      _.minWidth = t0;
      _.maxWidth = t1;
      _.minHeight = t2;
      _.maxHeight = t3;
    },
    BoxConstraints_toString_describe: function BoxConstraints_toString_describe() {
    },
    BoxHitTestResult: function BoxHitTestResult(t0, t1) {
      this._path = t0;
      this._transforms = t1;
    },
    BoxHitTestEntry: function BoxHitTestEntry(t0, t1) {
      this.localPosition = t0;
      this.target = t1;
      this._transform = null;
    },
    BoxParentData: function BoxParentData(t0) {
      this.offset = t0;
    },
    ContainerBoxParentData: function ContainerBoxParentData() {
    },
    RenderBox: function RenderBox() {
    },
    RenderBox_getDistanceToActualBaseline_closure: function RenderBox_getDistanceToActualBaseline_closure(t0, t1) {
      this.$this = t0;
      this.baseline = t1;
    },
    RenderBoxContainerDefaultsMixin: function RenderBoxContainerDefaultsMixin() {
    },
    RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure: function RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.position = t1;
      this.childParentData = t2;
    },
    _ContainerBoxParentData_BoxParentData_ContainerParentDataMixin: function _ContainerBoxParentData_BoxParentData_ContainerParentDataMixin() {
    },
    WidgetsApp_defaultShortcuts: function() {
      var t1 = $.$get$WidgetsApp__defaultWebShortcuts();
      return t1;
    },
    _WidgetsAppState_basicLocaleListResolution: function(preferredLocales, supportedLocales) {
      var t1, t2, allSupportedLocales, languageAndCountryLocales, languageAndScriptLocales, languageLocales, countryLocales, _i, locale, matchesLanguageCode, matchesCountryCode, localeIndex, userLocale, match, resolvedLocale, _s2_ = "en", _s2_0 = "US";
      if (preferredLocales == null || preferredLocales.length === 0)
        return C.JSArray_methods.get$first(supportedLocales);
      t1 = type$.String;
      t2 = type$.Locale;
      allSupportedLocales = P.HashMap_HashMap(t1, t2);
      languageAndCountryLocales = P.HashMap_HashMap(t1, t2);
      languageAndScriptLocales = P.HashMap_HashMap(t1, t2);
      languageLocales = P.HashMap_HashMap(t1, t2);
      countryLocales = P.HashMap_HashMap(t1, t2);
      for (_i = 0; _i < 1; ++_i) {
        locale = supportedLocales[_i];
        t1 = P.Locale__replaceDeprecatedLanguageSubtag(_s2_) + "_null_" + P.Locale__replaceDeprecatedRegionSubtag(_s2_0);
        if (allSupportedLocales.$index(0, t1) == null)
          allSupportedLocales.$indexSet(0, t1, locale);
        t1 = P.Locale__replaceDeprecatedLanguageSubtag(_s2_) + "_null";
        if (languageAndScriptLocales.$index(0, t1) == null)
          languageAndScriptLocales.$indexSet(0, t1, locale);
        t1 = P.Locale__replaceDeprecatedLanguageSubtag(_s2_) + "_" + P.Locale__replaceDeprecatedRegionSubtag(_s2_0);
        if (languageAndCountryLocales.$index(0, t1) == null)
          languageAndCountryLocales.$indexSet(0, t1, locale);
        t1 = P.Locale__replaceDeprecatedLanguageSubtag(_s2_);
        if (languageLocales.$index(0, t1) == null)
          languageLocales.$indexSet(0, t1, locale);
        t1 = P.Locale__replaceDeprecatedRegionSubtag(_s2_0);
        if (countryLocales.$index(0, t1) == null)
          countryLocales.$indexSet(0, t1, locale);
      }
      for (matchesLanguageCode = null, matchesCountryCode = null, localeIndex = 0; localeIndex < preferredLocales.length; ++localeIndex) {
        userLocale = preferredLocales[localeIndex];
        userLocale.toString;
        if (allSupportedLocales.containsKey$1(0, P.Locale__replaceDeprecatedLanguageSubtag(_s2_) + "_null_" + P.Locale__replaceDeprecatedRegionSubtag(_s2_0)))
          return userLocale;
        P.Locale__replaceDeprecatedRegionSubtag(_s2_0);
        match = languageAndCountryLocales.$index(0, P.Locale__replaceDeprecatedLanguageSubtag(_s2_) + "_" + P.Locale__replaceDeprecatedRegionSubtag(_s2_0));
        if (match != null)
          return match;
        if (matchesLanguageCode != null)
          return matchesLanguageCode;
        match = languageLocales.$index(0, P.Locale__replaceDeprecatedLanguageSubtag(_s2_));
        if (match != null) {
          if (localeIndex === 0) {
            t1 = localeIndex + 1;
            if (t1 < preferredLocales.length) {
              preferredLocales[t1].toString;
              t1 = P.Locale__replaceDeprecatedLanguageSubtag(_s2_) === P.Locale__replaceDeprecatedLanguageSubtag(_s2_);
            } else
              t1 = false;
            t1 = !t1;
          } else
            t1 = false;
          if (t1)
            return match;
          matchesLanguageCode = match;
        }
        if (matchesCountryCode == null) {
          P.Locale__replaceDeprecatedRegionSubtag(_s2_0);
          t1 = true;
        } else
          t1 = false;
        if (t1) {
          match = countryLocales.$index(0, P.Locale__replaceDeprecatedRegionSubtag(_s2_0));
          if (match != null)
            matchesCountryCode = match;
        }
      }
      resolvedLocale = matchesLanguageCode == null ? matchesCountryCode : matchesLanguageCode;
      return resolvedLocale == null ? C.JSArray_methods.get$first(supportedLocales) : resolvedLocale;
    },
    WidgetsApp: function WidgetsApp(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27) {
      var _ = this;
      _.navigatorKey = t0;
      _.onGenerateRoute = t1;
      _.onGenerateInitialRoutes = t2;
      _.pageRouteBuilder = t3;
      _.home = t4;
      _.routes = t5;
      _.onUnknownRoute = t6;
      _.initialRoute = t7;
      _.navigatorObservers = t8;
      _.builder = t9;
      _.title = t10;
      _.onGenerateTitle = t11;
      _.textStyle = t12;
      _.color = t13;
      _.locale = t14;
      _.localizationsDelegates = t15;
      _.localeListResolutionCallback = t16;
      _.localeResolutionCallback = t17;
      _.supportedLocales = t18;
      _.showPerformanceOverlay = t19;
      _.checkerboardRasterCacheImages = t20;
      _.checkerboardOffscreenLayers = t21;
      _.showSemanticsDebugger = t22;
      _.inspectorSelectButtonBuilder = t23;
      _.debugShowCheckedModeBanner = t24;
      _.shortcuts = t25;
      _.actions = t26;
      _.key = t27;
    },
    _WidgetsAppState: function _WidgetsAppState(t0) {
      var _ = this;
      _._widget = _._app$_locale = _._navigator = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _WidgetsAppState__onGenerateRoute_closure: function _WidgetsAppState__onGenerateRoute_closure(t0) {
      this.$this = t0;
    },
    _WidgetsAppState_build_closure: function _WidgetsAppState_build_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _MediaQueryFromWindow: function _MediaQueryFromWindow(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _MediaQueryFromWindowsState: function _MediaQueryFromWindowsState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _MediaQueryFromWindowsState_didChangeMetrics_closure: function _MediaQueryFromWindowsState_didChangeMetrics_closure() {
    },
    _MediaQueryFromWindowsState_didChangePlatformBrightness_closure: function _MediaQueryFromWindowsState_didChangePlatformBrightness_closure() {
    },
    __MediaQueryFromWindowsState_State_WidgetsBindingObserver: function __MediaQueryFromWindowsState_State_WidgetsBindingObserver() {
    },
    __WidgetsAppState_State_WidgetsBindingObserver: function __WidgetsAppState_State_WidgetsBindingObserver() {
    },
    InheritedNotifier: function InheritedNotifier() {
    },
    _InheritedNotifierElement: function _InheritedNotifierElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._inherited_notifier$_dirty = false;
      _._dependents = t0;
      _._parent = _._framework$_child = null;
      _._cachedHash = t1;
      _._depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
      _.$ti = t5;
    },
    PageStorageBucket__maybeAddKey: function(context, keys) {
      var widget = context.get$widget(),
        key = widget.key;
      if (key instanceof S.PageStorageKey)
        keys.push(key);
      return !(widget instanceof S.PageStorage);
    },
    PageStorage_of: function(context) {
      var widget = context.findAncestorWidgetOfExactType$1$0(type$.PageStorage);
      return widget == null ? null : widget.bucket;
    },
    PageStorageKey: function PageStorageKey() {
    },
    _StorageEntryIdentifier: function _StorageEntryIdentifier(t0) {
      this.keys = t0;
    },
    PageStorageBucket: function PageStorageBucket() {
      this._storage = null;
    },
    PageStorageBucket__allKeys_closure: function PageStorageBucket__allKeys_closure(t0) {
      this.keys = t0;
    },
    PageStorage: function PageStorage(t0, t1, t2) {
      this.child = t0;
      this.bucket = t1;
      this.key = t2;
    },
    setEquals: function(a, b) {
      var t1;
      if (a == null)
        return b == null;
      if (b == null || a.get$length(a) !== b.get$length(b))
        return false;
      if (a === b)
        return true;
      for (t1 = a.get$iterator(a); t1.moveNext$0();)
        if (!b.contains$1(0, t1.get$current(t1)))
          return false;
      return true;
    },
    listEquals: function(a, b) {
      var index;
      if (a == null)
        return b == null;
      if (b == null || a.length !== b.length)
        return false;
      if (a === b)
        return true;
      for (index = 0; index < a.length; ++index)
        if (!J.$eq$(a[index], b[index]))
          return false;
      return true;
    },
    mapEquals: function(a, b) {
      var t1, key;
      if (a == null)
        return b == null;
      if (b == null || a.get$length(a) !== b.get$length(b))
        return false;
      if (a === b)
        return true;
      for (t1 = a.get$keys(a), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        key = t1.get$current(t1);
        if (!b.containsKey$1(0, key) || !J.$eq$(b.$index(0, key), a.$index(0, key)))
          return false;
      }
      return true;
    },
    SemanticsService_tooltip: function(message) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$SemanticsService_tooltip = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(C.BasicMessageChannel_8hp.send$1(0, new E.TooltipSemanticsEvent(message, "tooltip").toMap$0()), $async$SemanticsService_tooltip);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$SemanticsService_tooltip, $async$completer);
    }
  },
  Z = {ParametricCurve: function ParametricCurve() {
    }, Curve: function Curve() {
    }, _Linear: function _Linear() {
    }, Interval: function Interval(t0, t1, t2) {
      this.begin = t0;
      this.end = t1;
      this.curve = t2;
    }, Threshold: function Threshold() {
    }, Cubic: function Cubic(t0, t1, t2, t3) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.c = t2;
      _.d = t3;
    }, FlippedCurve: function FlippedCurve(t0) {
      this.curve = t0;
    }, _DecelerateCurve: function _DecelerateCurve() {
    }, RawMaterialButton: function RawMaterialButton(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18) {
      var _ = this;
      _.onPressed = t0;
      _.textStyle = t1;
      _.fillColor = t2;
      _.focusColor = t3;
      _.hoverColor = t4;
      _.splashColor = t5;
      _.elevation = t6;
      _.hoverElevation = t7;
      _.focusElevation = t8;
      _.highlightElevation = t9;
      _.disabledElevation = t10;
      _.constraints = t11;
      _.shape = t12;
      _.child = t13;
      _.materialTapTargetSize = t14;
      _.focusNode = t15;
      _.autofocus = t16;
      _.clipBehavior = t17;
      _.key = t18;
    }, _RawMaterialButtonState: function _RawMaterialButtonState(t0, t1) {
      var _ = this;
      _._states = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    }, _RawMaterialButtonState__handleHighlightChanged_closure: function _RawMaterialButtonState__handleHighlightChanged_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    }, _RawMaterialButtonState__handleHoveredChanged_closure: function _RawMaterialButtonState__handleHoveredChanged_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    }, _RawMaterialButtonState__handleFocusedChanged_closure: function _RawMaterialButtonState__handleFocusedChanged_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    }, _InputPadding: function _InputPadding(t0, t1, t2) {
      this.minSize = t0;
      this.child = t1;
      this.key = t2;
    }, _RenderInputPadding: function _RenderInputPadding(t0, t1) {
      var _ = this;
      _._minSize = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    }, _RenderInputPadding_hitTest_closure: function _RenderInputPadding_hitTest_closure(t0, t1) {
      this.$this = t0;
      this.center = t1;
    }, DrawerController: function DrawerController() {
    }, DrawerControllerState: function DrawerControllerState() {
    }, _DrawerControllerState_State_SingleTickerProviderStateMixin: function _DrawerControllerState_State_SingleTickerProviderStateMixin() {
    }, FlexibleSpaceBarSettings: function FlexibleSpaceBarSettings(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.toolbarOpacity = t0;
      _.minExtent = t1;
      _.maxExtent = t2;
      _.currentExtent = t3;
      _.child = t4;
      _.key = t5;
    }, ClipContext: function ClipContext() {
    }, ClipContext_clipPathAndPaint_closure: function ClipContext_clipPathAndPaint_closure(t0, t1) {
      this.$this = t0;
      this.path = t1;
    }, ClipContext_clipRectAndPaint_closure: function ClipContext_clipRectAndPaint_closure(t0, t1) {
      this.$this = t0;
      this.rect = t1;
    },
    Decoration_lerp: function(a, b, t) {
      var _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      if (t1) {
        t1 = b.lerpFrom$2(_null, t);
        return t1 == null ? b : t1;
      }
      if (b == null) {
        t1 = a.lerpTo$2(_null, t);
        return t1 == null ? a : t1;
      }
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      t1 = b.lerpFrom$2(a, t);
      if (t1 == null)
        t1 = a.lerpTo$2(b, t);
      if (t1 == null)
        if (t < 0.5) {
          t1 = a.lerpTo$2(_null, t * 2);
          if (t1 == null)
            t1 = a;
        } else {
          t1 = b.lerpFrom$2(_null, (t - 0.5) * 2);
          if (t1 == null)
            t1 = b;
        }
      return t1;
    },
    Decoration: function Decoration() {
    },
    BoxPainter: function BoxPainter() {
    },
    _Decoration_Object_Diagnosticable: function _Decoration_Object_Diagnosticable() {
    },
    main: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, nextBenchmark;
      var $async$main = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($.$get$_client().requestNextBenchmark$0(), $async$main);
            case 3:
              // returning from await.
              nextBenchmark = $async$result;
              if (nextBenchmark === "__manual_fallback__") {
                Z._fallbackToManual("The server did not tell us which benchmark to run next.");
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 4;
              return P._asyncAwait(Z._runBenchmark(nextBenchmark), $async$main);
            case 4:
              // returning from await.
              window.location.reload();
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$main, $async$completer);
    },
    _runBenchmark: function(benchmarkName) {
      return Z._runBenchmark$body(benchmarkName);
    },
    _runBenchmark$body: function(benchmarkName) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], recorder, runner, profile, error, stackTrace, t1, exception, recorderFactory, $async$exception;
      var $async$_runBenchmark = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              recorderFactory = $.$get$benchmarks().$index(0, benchmarkName);
              if (recorderFactory == null) {
                Z._fallbackToManual("Benchmark " + H.S(benchmarkName) + " not found.");
                // goto return
                $async$goto = 1;
                break;
              }
              $async$handler = 4;
              recorder = recorderFactory.call$0();
              runner = recorder.get$isTracingEnabled() && !$.$get$_client().isInManualMode ? V.Runner$(recorder, new Z._runBenchmark_closure(benchmarkName), $.$get$_client().get$stopPerformanceTracing()) : V.Runner$(recorder, V.recorder___dummyAsyncVoidCallback$closure(), V.recorder___dummyAsyncVoidCallback$closure());
              $async$goto = 7;
              return P._asyncAwait(runner.run$0(), $async$_runBenchmark);
            case 7:
              // returning from await.
              profile = $async$result;
              t1 = $.$get$_client();
              $async$goto = !t1.isInManualMode ? 8 : 10;
              break;
            case 8:
              // then
              $async$goto = 11;
              return P._asyncAwait(t1.sendProfileData$1(profile), $async$_runBenchmark);
            case 11:
              // returning from await.
              // goto join
              $async$goto = 9;
              break;
            case 10:
              // else
              Z._printResultsToScreen(profile);
              P.print(profile);
            case 9:
              // join
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              error = H.unwrapException($async$exception);
              stackTrace = H.getTraceFromException($async$exception);
              t1 = $.$get$_client();
              if (t1.isInManualMode)
                throw $async$exception;
              $async$goto = 12;
              return P._asyncAwait(t1.reportError$2(error, stackTrace), $async$_runBenchmark);
            case 12:
              // returning from await.
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_runBenchmark, $async$completer);
    },
    _fallbackToManual: function(error) {
      var button, _null = null,
        t1 = document,
        t2 = t1.body,
        t3 = '    <div id="manual-panel">\n      <h3>' + error + '</h3>\n\n      <p>Choose one of the following benchmarks:</p>\n\n      <!-- Absolutely position it so it receives the clicks and not the glasspane -->\n      <ul style="position: absolute">\n        ',
        t4 = $.$get$benchmarks(),
        t5 = t4.get$keys(t4);
      t5 = t3 + H.MappedIterable_MappedIterable(t5, new Z._fallbackToManual_closure(), H._instanceType(t5)._eval$1("Iterable.E"), type$.String).join$1(0, "\n") + "\n      </ul>\n    </div>\n  ";
      t3 = H.setRuntimeTypeInfo([], type$.JSArray_NodeValidator);
      t3.push(W._Html5NodeValidator$(_null));
      t3.push(W._SimpleNodeValidator$(_null, H.setRuntimeTypeInfo(["*::style"], type$.JSArray_String), _null));
      t2.toString;
      C.BodyElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t2, "beforeend", t5, _null, new W.NodeValidatorBuilder(t3));
      for (t2 = t4.get$keys(t4), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        button = t1.querySelector("#" + H.S(t3));
        button.toString;
        J._addEventListener$3$x(button, "click", new Z._fallbackToManual_closure0(t3), null);
      }
    },
    _printResultsToScreen: function(profile) {
      var t1 = document,
        t2 = t1.body;
      (t2 && C.BodyElement_methods).remove$0(t2);
      t1.body = t1.createElement("body");
      t1 = t1.body;
      t2 = "<h2>" + profile.name + "</h2>";
      t1.toString;
      C.BodyElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t1, "beforeend", t2, null, null);
      profile.scoreData.forEach$1(0, new Z._printResultsToScreen_closure());
    },
    TimeseriesVisualization$: function(_timeseries) {
      var t1 = new Z.TimeseriesVisualization(_timeseries);
      t1.TimeseriesVisualization$1(_timeseries);
      return t1;
    },
    closure: function closure() {
    },
    closure0: function closure0() {
    },
    closure1: function closure1() {
    },
    closure2: function closure2() {
    },
    closure3: function closure3() {
    },
    closure4: function closure4() {
    },
    closure5: function closure5() {
    },
    closure6: function closure6() {
    },
    closure7: function closure7() {
    },
    closure8: function closure8() {
    },
    closure9: function closure9() {
    },
    closure10: function closure10() {
    },
    closure11: function closure11() {
    },
    _runBenchmark_closure: function _runBenchmark_closure(t0) {
      this.benchmarkName = t0;
    },
    _fallbackToManual_closure: function _fallbackToManual_closure() {
    },
    _fallbackToManual_closure0: function _fallbackToManual_closure0(t0) {
      this.benchmarkName = t0;
    },
    _printResultsToScreen_closure: function _printResultsToScreen_closure() {
    },
    TimeseriesVisualization: function TimeseriesVisualization(t0) {
      var _ = this;
      _._timeseries = t0;
      _._maxValueChartRange = _._screenWidth = _._ctx = _._canvas = _._stats = null;
    },
    TimeseriesVisualization_closure: function TimeseriesVisualization_closure() {
    },
    TimeseriesVisualization_closure0: function TimeseriesVisualization_closure0() {
    },
    LocalBenchmarkServerClient: function LocalBenchmarkServerClient() {
      this.isInManualMode = null;
    },
    LocalBenchmarkServerClient__requestXhr_closure: function LocalBenchmarkServerClient__requestXhr_closure(t0, t1) {
      this.completer = t0;
      this.xhr = t1;
    }
  },
  R = {
    Tween$: function(begin, end, $T) {
      return new R.Tween(begin, end, $T._eval$1("Tween<0>"));
    },
    CurveTween$: function(curve) {
      return new R.CurveTween(curve);
    },
    Animatable: function Animatable() {
    },
    _AnimatedEvaluation: function _AnimatedEvaluation(t0, t1, t2) {
      this.parent = t0;
      this._evaluatable = t1;
      this.$ti = t2;
    },
    _ChainedEvaluation: function _ChainedEvaluation(t0, t1, t2) {
      this._tween$_parent = t0;
      this._evaluatable = t1;
      this.$ti = t2;
    },
    Tween: function Tween(t0, t1, t2) {
      this.begin = t0;
      this.end = t1;
      this.$ti = t2;
    },
    ReverseTween: function ReverseTween(t0, t1, t2, t3) {
      var _ = this;
      _.parent = t0;
      _.begin = t1;
      _.end = t2;
      _.$ti = t3;
    },
    ColorTween: function ColorTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    RectTween: function RectTween() {
    },
    IntTween: function IntTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    CurveTween: function CurveTween(t0) {
      this.curve = t0;
    },
    __AnimatedEvaluation_Animation_AnimationWithParentMixin: function __AnimatedEvaluation_Animation_AnimationWithParentMixin() {
    },
    ObserverList$: function($T) {
      return new R.ObserverList(H.setRuntimeTypeInfo([], $T._eval$1("JSArray<0>")), $T._eval$1("ObserverList<0>"));
    },
    ObserverList: function ObserverList(t0, t1) {
      var _ = this;
      _._list = t0;
      _._isDirty = false;
      _._observer_list$_set = null;
      _.$ti = t1;
    },
    HashedObserverList: function HashedObserverList(t0, t1) {
      this._observer_list$_map = t0;
      this.$ti = t1;
    },
    StackFrame$: function(className, column, isConstructor, line, method, number, $package, packagePath, packageScheme, source) {
      return new R.StackFrame(source, number, packageScheme, $package, packagePath, line, column, className, method);
    },
    StackFrame_fromStackString: function(stack) {
      var t1 = new H.MappedListIterable(H.setRuntimeTypeInfo(C.JSString_methods.trim$0(stack).split("\n"), type$.JSArray_String), R.stack_frame_StackFrame_fromStackTraceLine$closure(), type$.MappedListIterable_String_StackFrame).super$Iterable$skipWhile(0, new R.StackFrame_fromStackString_closure());
      return P.List_List$from(t1, true, t1.$ti._eval$1("Iterable.E"));
    },
    StackFrame__parseWebFrame: function(line) {
      var t1 = R.StackFrame__parseWebNonDebugFrame(line);
      return t1;
    },
    StackFrame__parseWebNonDebugFrame: function(line) {
      var classAndMethod, className,
        _s9_ = "<unknown>",
        match = $.$get$StackFrame__webNonDebugFramePattern().firstMatch$1(line);
      if (match == null)
        return null;
      classAndMethod = H.setRuntimeTypeInfo(match._match[1].split("."), type$.JSArray_String);
      className = classAndMethod.length > 1 ? C.JSArray_methods.get$first(classAndMethod) : _s9_;
      return R.StackFrame$(className, -1, false, -1, classAndMethod.length > 1 ? H.SubListIterable$(classAndMethod, 1, null, type$.String).join$1(0, ".") : C.JSArray_methods.get$single(classAndMethod), -1, _s9_, _s9_, _s9_, line);
    },
    StackFrame_fromStackTraceLine: function(line) {
      var t1, t2, method, className, parts, isConstructor, packageUri, packagePath, $package, t3, t4, _null = null;
      if (line === "<asynchronous suspension>")
        return C.StackFrame_SOW;
      else if (line === "...")
        return C.StackFrame_8sg;
      if (!J.startsWith$1$s(line, "#"))
        return R.StackFrame__parseWebFrame(line);
      t1 = P.RegExp_RegExp("^#(\\d+) +(.+) \\((.+?):?(\\d+){0,1}:?(\\d+){0,1}\\)$", true).firstMatch$1(line)._match;
      t2 = t1[2];
      t2.toString;
      method = H.stringReplaceAllUnchecked(t2, ".<anonymous closure>", "");
      if (C.JSString_methods.startsWith$1(method, "new")) {
        className = method.split(" ")[1];
        if (J.contains$1$asx(className, ".")) {
          parts = className.split(".");
          className = parts[0];
          method = parts[1];
        } else
          method = "";
        isConstructor = true;
      } else {
        if (C.JSString_methods.contains$1(method, ".")) {
          parts = method.split(".");
          className = parts[0];
          method = parts[1];
        } else
          className = "";
        isConstructor = false;
      }
      packageUri = P.Uri_parse(t1[3]);
      packagePath = packageUri.get$path(packageUri);
      if (packageUri.get$scheme() === "dart" || packageUri.get$scheme() === "package") {
        $package = packageUri.get$pathSegments()[0];
        packagePath = C.JSString_methods.replaceFirst$2(packageUri.get$path(packageUri), J.$add$ansx(packageUri.get$pathSegments()[0], "/"), "");
      } else
        $package = "<unknown>";
      t2 = P.int_parse(t1[1], _null, _null);
      t3 = packageUri.get$scheme();
      t4 = t1[4];
      t4 = t4 == null ? -1 : P.int_parse(t4, _null, _null);
      t1 = t1[5];
      return R.StackFrame$(className, t1 == null ? -1 : P.int_parse(t1, _null, _null), isConstructor, t4, method, t2, $package, packagePath, t3, line);
    },
    StackFrame: function StackFrame(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.source = t0;
      _.number = t1;
      _.packageScheme = t2;
      _.$package = t3;
      _.packagePath = t4;
      _.line = t5;
      _.column = t6;
      _.className = t7;
      _.method = t8;
    },
    StackFrame_fromStackString_closure: function StackFrame_fromStackString_closure() {
    },
    Velocity: function Velocity(t0) {
      this.pixelsPerSecond = t0;
    },
    VelocityEstimate: function VelocityEstimate(t0, t1, t2, t3) {
      var _ = this;
      _.pixelsPerSecond = t0;
      _.confidence = t1;
      _.duration = t2;
      _.offset = t3;
    },
    _PointAtTime: function _PointAtTime(t0, t1) {
      this.time = t0;
      this.point = t1;
    },
    VelocityTracker: function VelocityTracker(t0) {
      this._samples = t0;
      this._velocity_tracker$_index = 0;
    },
    BackButtonIcon__getIconData: function(platform) {
      switch (platform) {
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_3:
        case C.TargetPlatform_5:
          return C.IconData_58820_true;
        case C.TargetPlatform_2:
        case C.TargetPlatform_4:
          return C.IconData_58848_true;
      }
      return null;
    },
    BackButtonIcon: function BackButtonIcon(t0) {
      this.key = t0;
    },
    BackButton: function BackButton(t0) {
      this.key = t0;
    },
    BackButton_build_closure: function BackButton_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    InkResponse$: function(autofocus, borderRadius, canRequestFocus, child, containedInkWell, customBorder, enableFeedback, excludeFromSemantics, focusColor, focusNode, highlightColor, highlightShape, hoverColor, key, onDoubleTap, onFocusChange, onHighlightChanged, onHover, onLongPress, onTap, onTapCancel, onTapDown, radius, splashColor, splashFactory) {
      return new R.InkResponse(child, onTap, onTapDown, onTapCancel, onDoubleTap, onLongPress, onHighlightChanged, onHover, containedInkWell, highlightShape, radius, borderRadius, customBorder, focusColor, hoverColor, highlightColor, splashColor, splashFactory, true, false, onFocusChange, false, focusNode, canRequestFocus, key);
    },
    InkWell$: function(autofocus, canRequestFocus, child, customBorder, enableFeedback, focusColor, focusNode, highlightColor, hoverColor, onFocusChange, onHighlightChanged, onHover, onLongPress, onTap, splashColor) {
      var _null = null;
      return new R.InkWell(child, onTap, _null, _null, _null, onLongPress, onHighlightChanged, onHover, true, C.BoxShape_0, _null, _null, customBorder, focusColor, hoverColor, highlightColor, splashColor, _null, true, false, onFocusChange, false, focusNode, canRequestFocus, _null);
    },
    InteractiveInkFeature: function InteractiveInkFeature() {
    },
    InteractiveInkFeatureFactory: function InteractiveInkFeatureFactory() {
    },
    InkResponse: function InkResponse(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _.child = t0;
      _.onTap = t1;
      _.onTapDown = t2;
      _.onTapCancel = t3;
      _.onDoubleTap = t4;
      _.onLongPress = t5;
      _.onHighlightChanged = t6;
      _.onHover = t7;
      _.containedInkWell = t8;
      _.highlightShape = t9;
      _.radius = t10;
      _.borderRadius = t11;
      _.customBorder = t12;
      _.focusColor = t13;
      _.hoverColor = t14;
      _.highlightColor = t15;
      _.splashColor = t16;
      _.splashFactory = t17;
      _.enableFeedback = t18;
      _.excludeFromSemantics = t19;
      _.onFocusChange = t20;
      _.autofocus = t21;
      _.focusNode = t22;
      _.canRequestFocus = t23;
      _.key = t24;
    },
    _HighlightType: function _HighlightType(t0) {
      this._ink_well$_name = t0;
    },
    _InkResponseState: function _InkResponseState(t0, t1, t2, t3) {
      var _ = this;
      _._currentSplash = _._splashes = null;
      _._hovering = false;
      _._highlights = t0;
      _._actionMap = null;
      _._hasFocus = false;
      _.AutomaticKeepAliveClientMixin__keepAliveHandle = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
      _.$ti = t3;
    },
    _InkResponseState_highlightsExist_closure: function _InkResponseState_highlightsExist_closure() {
    },
    _InkResponseState_updateHighlight_handleInkRemoval: function _InkResponseState_updateHighlight_handleInkRemoval(t0, t1) {
      this.$this = t0;
      this.type = t1;
    },
    _InkResponseState__createInkFeature_onRemoved: function _InkResponseState__createInkFeature_onRemoved(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _InkResponseState__handleFocusHighlightModeChange_closure: function _InkResponseState__handleFocusHighlightModeChange_closure(t0) {
      this.$this = t0;
    },
    _InkResponseState_build_closure: function _InkResponseState_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    InkWell: function InkWell(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _.child = t0;
      _.onTap = t1;
      _.onTapDown = t2;
      _.onTapCancel = t3;
      _.onDoubleTap = t4;
      _.onLongPress = t5;
      _.onHighlightChanged = t6;
      _.onHover = t7;
      _.containedInkWell = t8;
      _.highlightShape = t9;
      _.radius = t10;
      _.borderRadius = t11;
      _.customBorder = t12;
      _.focusColor = t13;
      _.hoverColor = t14;
      _.highlightColor = t15;
      _.splashColor = t16;
      _.splashFactory = t17;
      _.enableFeedback = t18;
      _.excludeFromSemantics = t19;
      _.onFocusChange = t20;
      _.autofocus = t21;
      _.focusNode = t22;
      _.canRequestFocus = t23;
      _.key = t24;
    },
    __InkResponseState_State_AutomaticKeepAliveClientMixin: function __InkResponseState_State_AutomaticKeepAliveClientMixin() {
    },
    PopupMenuThemeData_lerp: function(a, b, t) {
      var t2, t3, t4, t5, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t1 ? _null : a.color;
      t3 = b == null;
      t2 = P.Color_lerp(t2, t3 ? _null : b.color, t);
      t4 = t1 ? _null : a.shape;
      t4 = Y.ShapeBorder_lerp(t4, t3 ? _null : b.shape, t);
      t5 = t1 ? _null : a.elevation;
      t5 = P.lerpDouble(t5, t3 ? _null : b.elevation, t);
      t1 = t1 ? _null : a.textStyle;
      return new R.PopupMenuThemeData(t2, t4, t5, A.TextStyle_lerp(t1, t3 ? _null : b.textStyle, t));
    },
    PopupMenuThemeData: function PopupMenuThemeData(t0, t1, t2, t3) {
      var _ = this;
      _.color = t0;
      _.shape = t1;
      _.elevation = t2;
      _.textStyle = t3;
    },
    _PopupMenuThemeData_Object_Diagnosticable: function _PopupMenuThemeData_Object_Diagnosticable() {
    },
    TextTheme$: function(bodyText1, bodyText2, button, caption, headline1, headline2, headline3, headline4, headline5, headline6, overline, subtitle1, subtitle2) {
      var _null = null,
        t1 = headline1 == null ? _null : headline1,
        t2 = headline2 == null ? _null : headline2,
        t3 = headline3 == null ? _null : headline3,
        t4 = headline4 == null ? _null : headline4,
        t5 = headline5 == null ? _null : headline5,
        t6 = headline6 == null ? _null : headline6,
        t7 = subtitle1 == null ? _null : subtitle1,
        t8 = subtitle2 == null ? _null : subtitle2,
        t9 = bodyText1 == null ? _null : bodyText1;
      return new R.TextTheme(t1, t2, t3, t4, t5, t6, t7, t8, t9, bodyText2 == null ? _null : bodyText2, caption, button, overline);
    },
    TextTheme_lerp: function(a, b, t) {
      var t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _null = null,
        t1 = a == null,
        t2 = t1 ? _null : a.headline1,
        t3 = b == null;
      t2 = A.TextStyle_lerp(t2, t3 ? _null : b.headline1, t);
      t4 = t1 ? _null : a.headline2;
      t4 = A.TextStyle_lerp(t4, t3 ? _null : b.headline2, t);
      t5 = t1 ? _null : a.headline3;
      t5 = A.TextStyle_lerp(t5, t3 ? _null : b.headline3, t);
      t6 = t1 ? _null : a.headline4;
      t6 = A.TextStyle_lerp(t6, t3 ? _null : b.headline4, t);
      t7 = t1 ? _null : a.headline5;
      t7 = A.TextStyle_lerp(t7, t3 ? _null : b.headline5, t);
      t8 = t1 ? _null : a.headline6;
      t8 = A.TextStyle_lerp(t8, t3 ? _null : b.headline6, t);
      t9 = t1 ? _null : a.subtitle1;
      t9 = A.TextStyle_lerp(t9, t3 ? _null : b.subtitle1, t);
      t10 = t1 ? _null : a.subtitle2;
      t10 = A.TextStyle_lerp(t10, t3 ? _null : b.subtitle2, t);
      t11 = t1 ? _null : a.bodyText1;
      t11 = A.TextStyle_lerp(t11, t3 ? _null : b.bodyText1, t);
      t12 = t1 ? _null : a.bodyText2;
      t12 = A.TextStyle_lerp(t12, t3 ? _null : b.bodyText2, t);
      t13 = t1 ? _null : a.caption;
      t13 = A.TextStyle_lerp(t13, t3 ? _null : b.caption, t);
      t14 = t1 ? _null : a.button;
      t14 = A.TextStyle_lerp(t14, t3 ? _null : b.button, t);
      t1 = t1 ? _null : a.overline;
      return R.TextTheme$(t11, t12, t14, t13, t2, t4, t5, t6, t7, t8, A.TextStyle_lerp(t1, t3 ? _null : b.overline, t), t9, t10);
    },
    TextTheme: function TextTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.headline1 = t0;
      _.headline2 = t1;
      _.headline3 = t2;
      _.headline4 = t3;
      _.headline5 = t4;
      _.headline6 = t5;
      _.subtitle1 = t6;
      _.subtitle2 = t7;
      _.bodyText1 = t8;
      _.bodyText2 = t9;
      _.caption = t10;
      _.button = t11;
      _.overline = t12;
    },
    _TextTheme_Object_Diagnosticable: function _TextTheme_Object_Diagnosticable() {
    },
    RawKeyEventDataWindows: function RawKeyEventDataWindows(t0, t1, t2, t3) {
      var _ = this;
      _.keyCode = t0;
      _.scanCode = t1;
      _.characterCodePoint = t2;
      _.modifiers = t3;
    },
    RawKeyEventDataWindows_getModifierSide_findSide: function RawKeyEventDataWindows_getModifierSide_findSide(t0) {
      this.$this = t0;
    },
    ScrollPositionWithSingleContext$: function(context, debugLabel, initialPixels, keepScrollOffset, oldPosition, physics) {
      var t1 = type$.JSArray_of_void_Function,
        t2 = type$.ObserverList_of_void_Function;
      t2 = new R.ScrollPositionWithSingleContext(C.ScrollDirection_0, physics, context, true, debugLabel, new B.ValueNotifier(false, new R.ObserverList(H.setRuntimeTypeInfo([], t1), t2)), new R.ObserverList(H.setRuntimeTypeInfo([], t1), t2));
      t2.ScrollPosition$5$context$debugLabel$keepScrollOffset$oldPosition$physics(context, debugLabel, true, oldPosition, physics);
      t2.ScrollPositionWithSingleContext$6$context$debugLabel$initialPixels$keepScrollOffset$oldPosition$physics(context, debugLabel, initialPixels, true, oldPosition, physics);
      return t2;
    },
    ScrollPositionWithSingleContext: function ScrollPositionWithSingleContext(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._heldPreviousVelocity = 0;
      _._userScrollDirection = t0;
      _._currentDrag = null;
      _.physics = t1;
      _.context = t2;
      _.keepScrollOffset = t3;
      _.debugLabel = t4;
      _._viewportDimension = _._pixels = _._maxScrollExtent = _._minScrollExtent = null;
      _._haveDimensions = false;
      _._didChangeViewportDimensionOrReceiveCorrection = true;
      _._semanticActions = null;
      _.isScrollingNotifier = t5;
      _._activity = null;
      _.ChangeNotifier__listeners = t6;
    },
    ElevationOverlay_applyOverlay: function(context, color, elevation) {
      var theme = K.Theme_of(context);
      if (elevation > 0)
        theme.toString;
      return color;
    }
  },
  E = {
    CupertinoDynamicColor_resolve: function(resolvable, context) {
      var inheritedTheme, t1, brightness, isHighContrastEnabled, resolved, t2, t3, t4, t5, t6, t7, t8, _null = null;
      if (resolvable == null)
        return _null;
      if (resolvable instanceof E.CupertinoDynamicColor) {
        if (resolvable.get$_isPlatformBrightnessDependent()) {
          inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$._InheritedCupertinoTheme);
          t1 = inheritedTheme == null ? _null : inheritedTheme.theme;
          t1 = t1 == null ? _null : t1.data;
          t1 = t1 == null ? _null : t1.get$brightness();
          if (t1 == null) {
            t1 = F.MediaQuery_of(context, true);
            t1 = t1 == null ? _null : t1.platformBrightness;
          }
          brightness = t1 == null ? C.Brightness_1 : t1;
        } else
          brightness = C.Brightness_1;
        if (resolvable.get$_isHighContrastDependent()) {
          t1 = F.MediaQuery_of(context, true);
          t1 = t1 == null ? _null : t1.highContrast;
          isHighContrastEnabled = t1 === true;
        } else
          isHighContrastEnabled = false;
        if (resolvable.get$_isInterfaceElevationDependent())
          K.CupertinoUserInterfaceLevel_of(context, true);
        switch (brightness) {
          case C.Brightness_1:
            switch (C.CupertinoUserInterfaceLevelData_0) {
              case C.CupertinoUserInterfaceLevelData_0:
                resolved = isHighContrastEnabled ? resolvable.highContrastColor : resolvable.color;
                break;
              case C.CupertinoUserInterfaceLevelData_1:
                resolved = isHighContrastEnabled ? resolvable.highContrastElevatedColor : resolvable.elevatedColor;
                break;
              default:
                resolved = _null;
            }
            break;
          case C.Brightness_0:
            switch (C.CupertinoUserInterfaceLevelData_0) {
              case C.CupertinoUserInterfaceLevelData_0:
                resolved = isHighContrastEnabled ? resolvable.darkHighContrastColor : resolvable.darkColor;
                break;
              case C.CupertinoUserInterfaceLevelData_1:
                resolved = isHighContrastEnabled ? resolvable.darkHighContrastElevatedColor : resolvable.darkElevatedColor;
                break;
              default:
                resolved = _null;
            }
            break;
          default:
            resolved = _null;
        }
        t1 = resolvable.color;
        t2 = resolvable.darkColor;
        t3 = resolvable.highContrastColor;
        t4 = resolvable.darkHighContrastColor;
        t5 = resolvable.elevatedColor;
        t6 = resolvable.darkElevatedColor;
        t7 = resolvable.highContrastElevatedColor;
        t8 = resolvable.darkHighContrastElevatedColor;
        t8 = new E.CupertinoDynamicColor(resolved, resolvable._colors$_debugLabel, _null, t1, t2, t3, t4, t5, t6, t7, t8, 0);
        t1 = t8;
      } else
        t1 = resolvable;
      return t1;
    },
    CupertinoDynamicColor: function CupertinoDynamicColor(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._effectiveColor = t0;
      _._colors$_debugLabel = t1;
      _._debugResolveContext = t2;
      _.color = t3;
      _.darkColor = t4;
      _.highContrastColor = t5;
      _.darkHighContrastColor = t6;
      _.elevatedColor = t7;
      _.darkElevatedColor = t8;
      _.highContrastElevatedColor = t9;
      _.darkHighContrastElevatedColor = t10;
      _.value = t11;
    },
    CupertinoDynamicColor_toString_toString: function CupertinoDynamicColor_toString_toString(t0) {
      this.$this = t0;
    },
    _CupertinoDynamicColor_Color_Diagnosticable: function _CupertinoDynamicColor_Color_Diagnosticable() {
    },
    _hitTestInteractive: function(customPaintKey, offset) {
      if ($.GlobalKey__registry.$index(0, customPaintKey) == null)
        return false;
      return type$.ScrollbarPainter._as(type$.CustomPaint._as($.GlobalKey__registry.$index(0, customPaintKey).get$widget()).foregroundPainter).hitTestInteractive$1(type$.RenderBox._as($.GlobalKey__registry.$index(0, customPaintKey).get$renderObject()).globalToLocal$1(offset));
    },
    CupertinoScrollbar: function CupertinoScrollbar(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.controller = t1;
      _.isAlwaysShown = t2;
      _.key = t3;
    },
    _CupertinoScrollbarState: function _CupertinoScrollbarState(t0, t1, t2) {
      var _ = this;
      _._customPaintKey = t0;
      _._currentController = _._scrollbar0$_drag = _._dragScrollbarPositionY = _._fadeoutTimer = _._thicknessAnimationController = _._fadeoutOpacityAnimation = _._fadeoutAnimationController = _._scrollbar0$_painter = null;
      _._pressStartY = 0;
      _.TickerProviderStateMixin__tickers = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _CupertinoScrollbarState_initState_closure: function _CupertinoScrollbarState_initState_closure(t0) {
      this.$this = t0;
    },
    _CupertinoScrollbarState_didChangeDependencies_closure: function _CupertinoScrollbarState_didChangeDependencies_closure(t0) {
      this.$this = t0;
    },
    _CupertinoScrollbarState__dragScrollbar_closure: function _CupertinoScrollbarState__dragScrollbar_closure() {
    },
    _CupertinoScrollbarState__startFadeoutTimer_closure: function _CupertinoScrollbarState__startFadeoutTimer_closure(t0) {
      this.$this = t0;
    },
    _CupertinoScrollbarState__handleLongPress_closure: function _CupertinoScrollbarState__handleLongPress_closure() {
    },
    _CupertinoScrollbarState__gestures_closure: function _CupertinoScrollbarState__gestures_closure(t0) {
      this.$this = t0;
    },
    _CupertinoScrollbarState__gestures_closure0: function _CupertinoScrollbarState__gestures_closure0(t0) {
      this.$this = t0;
    },
    _ThumbPressGestureRecognizer: function _ThumbPressGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._customPaintKey = t0;
      _._longPressAccepted = false;
      _._velocityTracker = _.onLongPressEnd = _.onLongPressUp = _.onLongPressMoveUpdate = _.onLongPressStart = _.onLongPress = _._long_press$_initialButtons = _._longPressOrigin = null;
      _.deadline = t1;
      _.postAcceptSlopTolerance = t2;
      _.state = t3;
      _.initialPosition = _.primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._recognizer$_entries = t4;
      _._trackedPointers = t5;
      _.debugOwner = t6;
      _._kindFilter = t7;
      _._pointerToKind = t8;
    },
    __CupertinoScrollbarState_State_TickerProviderStateMixin: function __CupertinoScrollbarState_State_TickerProviderStateMixin() {
    },
    _ToolbarContainerLayout: function _ToolbarContainerLayout() {
    },
    AppBar: function AppBar(t0, t1, t2, t3, t4) {
      var _ = this;
      _.title = t0;
      _.bottom = t1;
      _.elevation = t2;
      _.preferredSize = t3;
      _.key = t4;
    },
    _AppBarState: function _AppBarState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _AppBarTitleBox: function _AppBarTitleBox(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _RenderAppBarTitleBox: function _RenderAppBarTitleBox(t0, t1, t2) {
      var _ = this;
      _._shifted_box$_resolvedAlignment = null;
      _._shifted_box$_alignment = t0;
      _._shifted_box$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    MaterialColor: function MaterialColor(t0, t1) {
      this._swatch = t0;
      this.value = t1;
    },
    MaterialAccentColor: function MaterialAccentColor(t0, t1) {
      this._swatch = t0;
      this.value = t1;
    },
    _DefaultHeroTag: function _DefaultHeroTag() {
    },
    FloatingActionButton: function FloatingActionButton(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.onPressed = t1;
      _._sizeConstraints = t2;
      _.key = t3;
    },
    NavigationRailThemeData_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = P.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.elevation;
      t4 = P.lerpDouble(t4, t3 ? _null : b.elevation, t);
      t5 = t1 ? _null : a.unselectedLabelTextStyle;
      t5 = A.TextStyle_lerp(t5, t3 ? _null : b.unselectedLabelTextStyle, t);
      t6 = t1 ? _null : a.selectedLabelTextStyle;
      t6 = A.TextStyle_lerp(t6, t3 ? _null : b.selectedLabelTextStyle, t);
      t7 = t1 ? _null : a.unselectedIconTheme;
      t7 = T.IconThemeData_lerp(t7, t3 ? _null : b.unselectedIconTheme, t);
      t8 = t1 ? _null : a.selectedIconTheme;
      t8 = T.IconThemeData_lerp(t8, t3 ? _null : b.selectedIconTheme, t);
      t9 = t1 ? _null : a.groupAlignment;
      t9 = P.lerpDouble(t9, t3 ? _null : b.groupAlignment, t);
      if (t < 0.5)
        t1 = t1 ? _null : a.labelType;
      else
        t1 = t3 ? _null : b.labelType;
      return new E.NavigationRailThemeData(t2, t4, t5, t6, t7, t8, t9, t1);
    },
    NavigationRailThemeData: function NavigationRailThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.unselectedLabelTextStyle = t2;
      _.selectedLabelTextStyle = t3;
      _.unselectedIconTheme = t4;
      _.selectedIconTheme = t5;
      _.groupAlignment = t6;
      _.labelType = t7;
    },
    _NavigationRailThemeData_Object_Diagnosticable: function _NavigationRailThemeData_Object_Diagnosticable() {
    },
    Scrollbar: function Scrollbar(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _ScrollbarState: function _ScrollbarState(t0, t1) {
      var _ = this;
      _._scrollbar$_fadeoutTimer = _._scrollbar$_fadeoutOpacityAnimation = _._scrollbar$_fadeoutAnimationController = _._useCupertinoScrollbar = _._themeColor = _._scrollbar$_textDirection = _._materialPainter = null;
      _.TickerProviderStateMixin__tickers = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _ScrollbarState_didChangeDependencies_closure: function _ScrollbarState_didChangeDependencies_closure(t0) {
      this.$this = t0;
    },
    _ScrollbarState__handleScrollNotification_closure: function _ScrollbarState__handleScrollNotification_closure(t0) {
      this.$this = t0;
    },
    __ScrollbarState_State_TickerProviderStateMixin: function __ScrollbarState_State_TickerProviderStateMixin() {
    },
    _TabStyle$: function(animation, child, labelColor, labelStyle, selected, unselectedLabelColor, unselectedLabelStyle) {
      return new E._TabStyle(labelStyle, unselectedLabelStyle, selected, labelColor, unselectedLabelColor, child, animation, null);
    },
    _indexChangeProgress: function(controller) {
      var controllerValue = controller.get$animation(controller)._animation_controller$_value,
        previousIndex = controller._previousIndex,
        currentIndex = controller._tab_controller$_index;
      if (controller._indexIsChangingCount === 0)
        return C.JSNumber_methods.clamp$2(Math.abs(currentIndex - controllerValue), 0, 1);
      return Math.abs(controllerValue - currentIndex) / Math.abs(currentIndex - previousIndex);
    },
    _IndicatorPainter__tabOffsetsEqual: function(a, b) {
      var i;
      if (a == null || b == null || a.length !== b.length)
        return false;
      for (i = 0; i < a.length; ++i)
        if (!J.$eq$(a[i], b[i]))
          return false;
      return true;
    },
    Tab: function Tab(t0, t1) {
      this.text = t0;
      this.key = t1;
    },
    _TabStyle: function _TabStyle(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.labelStyle = t0;
      _.unselectedLabelStyle = t1;
      _.selected = t2;
      _.labelColor = t3;
      _.unselectedLabelColor = t4;
      _.child = t5;
      _.listenable = t6;
      _.key = t7;
    },
    _TabLabelBarRenderer: function _TabLabelBarRenderer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.onPerformLayout = t0;
      _._flex$_direction = t1;
      _._mainAxisAlignment = t2;
      _._mainAxisSize = t3;
      _._crossAxisAlignment = t4;
      _._flex$_textDirection = t5;
      _._verticalDirection = t6;
      _._flex$_textBaseline = t7;
      _._flex$_overflow = null;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t8;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t9;
      _.ContainerRenderObjectMixin__childCount = t10;
      _.ContainerRenderObjectMixin__firstChild = t11;
      _.ContainerRenderObjectMixin__lastChild = t12;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _TabLabelBar: function _TabLabelBar(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.onPerformLayout = t0;
      _.direction = t1;
      _.mainAxisAlignment = t2;
      _.mainAxisSize = t3;
      _.crossAxisAlignment = t4;
      _.textDirection = t5;
      _.verticalDirection = t6;
      _.textBaseline = t7;
      _.children = t8;
      _.key = t9;
    },
    _IndicatorPainter: function _IndicatorPainter(t0, t1, t2, t3, t4) {
      var _ = this;
      _.controller = t0;
      _.indicator = t1;
      _.indicatorSize = t2;
      _.tabKeys = t3;
      _._tabs$_painter = _._currentRect = _._currentTextDirection = _._currentTabOffsets = null;
      _._tabs$_needsPaint = false;
      _._repaint = t4;
    },
    _ChangeAnimation: function _ChangeAnimation(t0) {
      this.controller = t0;
    },
    _DragAnimation: function _DragAnimation(t0, t1) {
      this.controller = t0;
      this.index = t1;
    },
    _TabBarScrollPosition: function _TabBarScrollPosition(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.tabBar = t0;
      _._initialViewportDimensionWasZero = null;
      _._heldPreviousVelocity = 0;
      _._userScrollDirection = t1;
      _._currentDrag = null;
      _.physics = t2;
      _.context = t3;
      _.keepScrollOffset = t4;
      _.debugLabel = t5;
      _._viewportDimension = _._pixels = _._maxScrollExtent = _._minScrollExtent = null;
      _._haveDimensions = false;
      _._didChangeViewportDimensionOrReceiveCorrection = true;
      _._semanticActions = null;
      _.isScrollingNotifier = t6;
      _._activity = null;
      _.ChangeNotifier__listeners = t7;
    },
    _TabBarScrollController: function _TabBarScrollController(t0, t1, t2, t3) {
      var _ = this;
      _.tabBar = t0;
      _._initialScrollOffset = t1;
      _._positions = t2;
      _.ChangeNotifier__listeners = t3;
    },
    TabBar: function TabBar(t0, t1, t2) {
      this.tabs = t0;
      this.isScrollable = t1;
      this.key = t2;
    },
    _TabBarState: function _TabBarState(t0) {
      var _ = this;
      _._widget = _._tabKeys = _._tabStripWidth = _._currentIndex = _._indicatorPainter = _._tabs$_controller = _._scrollController = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _TabBarState_initState_closure: function _TabBarState_initState_closure() {
    },
    _TabBarState_didUpdateWidget_closure: function _TabBarState_didUpdateWidget_closure() {
    },
    _TabBarState__handleTabControllerTick_closure: function _TabBarState__handleTabControllerTick_closure() {
    },
    _TabBarState_build_closure: function _TabBarState_build_closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    TabBarView: function TabBarView(t0, t1) {
      this.children = t0;
      this.key = t1;
    },
    _TabBarViewState: function _TabBarViewState(t0) {
      var _ = this;
      _._currentIndex = _._childrenWithKey = _._tabs$_children = _._pageController = _._tabs$_controller = null;
      _._warpUnderwayCount = 0;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _TabBarViewState__warpToCurrentIndex_closure: function _TabBarViewState__warpToCurrentIndex_closure(t0, t1, t2) {
      this.$this = t0;
      this.initialPage = t1;
      this.previousIndex = t2;
    },
    _TabBarViewState__warpToCurrentIndex_closure0: function _TabBarViewState__warpToCurrentIndex_closure0(t0, t1) {
      this.$this = t0;
      this.originalChildren = t1;
    },
    __ChangeAnimation_Animation_AnimationWithParentMixin: function __ChangeAnimation_Animation_AnimationWithParentMixin() {
    },
    __DragAnimation_Animation_AnimationWithParentMixin: function __DragAnimation_Animation_AnimationWithParentMixin() {
    },
    ColorSwatch: function ColorSwatch() {
    },
    ImageCache: function ImageCache(t0, t1, t2) {
      var _ = this;
      _._pendingImages = t0;
      _._image_cache$_cache = t1;
      _._liveImages = t2;
      _._currentSizeBytes = 0;
    },
    _CachedImage: function _CachedImage() {
    },
    _LiveImage: function _LiveImage() {
    },
    _PendingImage: function _PendingImage() {
    },
    RenderProxyBox: function RenderProxyBox() {
    },
    RenderProxyBoxMixin: function RenderProxyBoxMixin() {
    },
    HitTestBehavior: function HitTestBehavior(t0) {
      this._proxy_box$_name = t0;
    },
    RenderProxyBoxWithHitTestBehavior: function RenderProxyBoxWithHitTestBehavior() {
    },
    RenderConstrainedBox: function RenderConstrainedBox(t0, t1) {
      var _ = this;
      _._additionalConstraints = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderLimitedBox: function RenderLimitedBox(t0, t1, t2) {
      var _ = this;
      _._proxy_box$_maxWidth = t0;
      _._maxHeight = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderOpacity: function RenderOpacity(t0, t1, t2, t3) {
      var _ = this;
      _._alpha = t0;
      _._proxy_box$_opacity = t1;
      _._alwaysIncludeSemantics = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAnimatedOpacityMixin: function RenderAnimatedOpacityMixin() {
    },
    RenderAnimatedOpacity: function RenderAnimatedOpacity(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RenderAnimatedOpacityMixin__alpha = t0;
      _.RenderAnimatedOpacityMixin__currentlyNeedsCompositing = t1;
      _.RenderAnimatedOpacityMixin__opacity = t2;
      _.RenderAnimatedOpacityMixin__alwaysIncludeSemantics = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    CustomClipper: function CustomClipper() {
    },
    ShapeBorderClipper: function ShapeBorderClipper(t0, t1) {
      this.shape = t0;
      this.textDirection = t1;
    },
    _RenderCustomClip: function _RenderCustomClip() {
    },
    RenderClipRect: function RenderClipRect(t0, t1, t2) {
      var _ = this;
      _._clipper = t0;
      _._clip = null;
      _._clipBehavior = t1;
      _._debugText = _._debugPaint = null;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderClipPath: function RenderClipPath(t0, t1, t2) {
      var _ = this;
      _._clipper = t0;
      _._clip = null;
      _._clipBehavior = t1;
      _._debugText = _._debugPaint = null;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderPhysicalModelBase: function _RenderPhysicalModelBase() {
    },
    RenderPhysicalModel: function RenderPhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._proxy_box$_shape = t0;
      _._proxy_box$_borderRadius = t1;
      _._proxy_box$_elevation = t2;
      _._proxy_box$_shadowColor = t3;
      _._proxy_box$_color = t4;
      _._clipper = t5;
      _._clip = null;
      _._clipBehavior = t6;
      _._debugText = _._debugPaint = null;
      _.RenderObjectWithChildMixin__child = t7;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderPhysicalShape: function RenderPhysicalShape(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._proxy_box$_elevation = t0;
      _._proxy_box$_shadowColor = t1;
      _._proxy_box$_color = t2;
      _._clipper = t3;
      _._clip = null;
      _._clipBehavior = t4;
      _._debugText = _._debugPaint = null;
      _.RenderObjectWithChildMixin__child = t5;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    DecorationPosition: function DecorationPosition(t0) {
      this._proxy_box$_name = t0;
    },
    RenderDecoratedBox: function RenderDecoratedBox(t0, t1, t2, t3) {
      var _ = this;
      _._painter = null;
      _._proxy_box$_decoration = t0;
      _._proxy_box$_position = t1;
      _._proxy_box$_configuration = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderTransform: function RenderTransform(t0, t1) {
      var _ = this;
      _._proxy_box$_textDirection = _._proxy_box$_alignment = _._origin = null;
      _.transformHitTests = t0;
      _._proxy_box$_transform = null;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderTransform_hitTestChildren_closure: function RenderTransform_hitTestChildren_closure(t0) {
      this.$this = t0;
    },
    RenderFractionalTranslation: function RenderFractionalTranslation(t0, t1, t2) {
      var _ = this;
      _._translation = t0;
      _.transformHitTests = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderFractionalTranslation_hitTestChildren_closure: function RenderFractionalTranslation_hitTestChildren_closure(t0) {
      this.$this = t0;
    },
    RenderPointerListener: function RenderPointerListener(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.onPointerDown = t0;
      _.onPointerMove = t1;
      _.onPointerUp = t2;
      _.onPointerCancel = t3;
      _.onPointerSignal = t4;
      _.behavior = t5;
      _.RenderObjectWithChildMixin__child = t6;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderMouseRegion: function RenderMouseRegion(t0, t1, t2, t3, t4) {
      var _ = this;
      _._proxy_box$_opaque = t0;
      _._onEnter = t1;
      _._onHover = t2;
      _._onExit = t3;
      _._hoverAnnotation = null;
      _._annotationIsActive = false;
      _.RenderObjectWithChildMixin__child = t4;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderRepaintBoundary: function RenderRepaintBoundary(t0) {
      var _ = this;
      _._debugAsymmetricPaintCount = _._debugSymmetricPaintCount = 0;
      _.RenderObjectWithChildMixin__child = t0;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderIgnorePointer: function RenderIgnorePointer(t0, t1, t2) {
      var _ = this;
      _._ignoring = t0;
      _._ignoringSemantics = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderOffstage: function RenderOffstage(t0, t1) {
      var _ = this;
      _._proxy_box$_offstage = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAbsorbPointer: function RenderAbsorbPointer(t0, t1, t2) {
      var _ = this;
      _._absorbing = t0;
      _._ignoringSemantics = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderSemanticsGestureHandler: function RenderSemanticsGestureHandler(t0) {
      var _ = this;
      _._onVerticalDragUpdate = _._onHorizontalDragUpdate = _._onLongPress = _._onTap = _._validActions = null;
      _.RenderObjectWithChildMixin__child = t0;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderSemanticsAnnotations: function RenderSemanticsAnnotations(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52) {
      var _ = this;
      _._container = t0;
      _._explicitChildNodes = t1;
      _._excludeSemantics = t2;
      _._checked = t3;
      _._enabled = t4;
      _._selected = t5;
      _._button = t6;
      _._link = t7;
      _._header = t8;
      _._textField = t9;
      _._readOnly = t10;
      _._focusable = t11;
      _._focused = t12;
      _._inMutuallyExclusiveGroup = t13;
      _._obscured = t14;
      _._multiline = t15;
      _._scopesRoute = t16;
      _._namesRoute = t17;
      _._hidden = t18;
      _._image = t19;
      _._liveRegion = t20;
      _._proxy_box$_maxValueLength = t21;
      _._proxy_box$_currentValueLength = t22;
      _._toggled = t23;
      _._label = t24;
      _._proxy_box$_value = t25;
      _._proxy_box$_increasedValue = t26;
      _._proxy_box$_decreasedValue = t27;
      _._proxy_box$_hint = t28;
      _._hintOverrides = t29;
      _._proxy_box$_textDirection = t30;
      _._proxy_box$_sortKey = t31;
      _._onTap = t32;
      _._onDismiss = t33;
      _._onLongPress = t34;
      _._onScrollLeft = t35;
      _._onScrollRight = t36;
      _._onScrollUp = t37;
      _._onScrollDown = t38;
      _._onIncrease = t39;
      _._onDecrease = t40;
      _._onCopy = t41;
      _._onCut = t42;
      _._onPaste = t43;
      _._onMoveCursorForwardByCharacter = t44;
      _._onMoveCursorBackwardByCharacter = t45;
      _._onMoveCursorForwardByWord = t46;
      _._onMoveCursorBackwardByWord = t47;
      _._onSetSelection = t48;
      _._onDidGainAccessibilityFocus = t49;
      _._onDidLoseAccessibilityFocus = t50;
      _._proxy_box$_customSemanticsActions = t51;
      _.RenderObjectWithChildMixin__child = t52;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderBlockSemantics: function RenderBlockSemantics(t0, t1) {
      var _ = this;
      _._blocking = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderMergeSemantics: function RenderMergeSemantics(t0) {
      var _ = this;
      _.RenderObjectWithChildMixin__child = t0;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderExcludeSemantics: function RenderExcludeSemantics(t0, t1) {
      var _ = this;
      _._excluding = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderIndexedSemantics: function RenderIndexedSemantics(t0, t1) {
      var _ = this;
      _._proxy_box$_index = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAnnotatedRegion: function RenderAnnotatedRegion(t0, t1, t2, t3) {
      var _ = this;
      _._proxy_box$_value = t0;
      _._sized = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
      _.$ti = t3;
    },
    _RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin: function _RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin() {
    },
    _RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin: function _RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin() {
    },
    _RenderProxyBox_RenderBox_RenderObjectWithChildMixin: function _RenderProxyBox_RenderBox_RenderObjectWithChildMixin() {
    },
    _RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin: function _RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin() {
    },
    SemanticsEvent: function SemanticsEvent() {
    },
    TooltipSemanticsEvent: function TooltipSemanticsEvent(t0, t1) {
      this.message = t0;
      this.type = t1;
    },
    LongPressSemanticsEvent: function LongPressSemanticsEvent(t0) {
      this.type = t0;
    },
    TapSemanticEvent: function TapSemanticEvent(t0) {
      this.type = t0;
    },
    NavigationToolbar: function NavigationToolbar(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.leading = t0;
      _.middle = t1;
      _.trailing = t2;
      _.centerMiddle = t3;
      _.middleSpacing = t4;
      _.key = t5;
    },
    _ToolbarSlot: function _ToolbarSlot(t0) {
      this._navigation_toolbar$_name = t0;
    },
    _ToolbarLayout: function _ToolbarLayout(t0, t1, t2) {
      var _ = this;
      _.centerMiddle = t0;
      _.middleSpacing = t1;
      _.textDirection = t2;
      _._debugChildrenNeedingLayout = _._idToChild = null;
    },
    PrimaryScrollController_of: function(context) {
      var result = context.dependOnInheritedWidgetOfExactType$1$0(type$.PrimaryScrollController);
      return result == null ? null : result.controller;
    },
    PrimaryScrollController: function PrimaryScrollController(t0, t1, t2) {
      this.controller = t0;
      this.child = t1;
      this.key = t2;
    },
    ScrollbarPainter$: function(color, crossAxisMargin, fadeoutOpacityAnimation, mainAxisMargin, minLength, minOverscrollLength, padding, radius, textDirection, thickness) {
      var t1 = minOverscrollLength == null ? minLength : minOverscrollLength;
      t1 = new E.ScrollbarPainter(color, textDirection, thickness, fadeoutOpacityAnimation, mainAxisMargin, crossAxisMargin, radius, padding, minLength, t1, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      fadeoutOpacityAnimation.parent.addListener$1(0, t1.get$notifyListeners());
      return t1;
    },
    ScrollbarPainter: function ScrollbarPainter(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._scrollbar1$_color = t0;
      _._scrollbar1$_textDirection = t1;
      _.thickness = t2;
      _.fadeoutOpacityAnimation = t3;
      _.mainAxisMargin = t4;
      _.crossAxisMargin = t5;
      _.radius = t6;
      _._scrollbar1$_padding = t7;
      _.minLength = t8;
      _.minOverscrollLength = t9;
      _._thumbRect = _._lastAxisDirection = _._lastMetrics = null;
      _.ChangeNotifier__listeners = t10;
    },
    SingleChildScrollView: function SingleChildScrollView(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.scrollDirection = t0;
      _.controller = t1;
      _.primary = t2;
      _.child = t3;
      _.dragStartBehavior = t4;
      _.key = t5;
    },
    SingleChildScrollView_build_closure: function SingleChildScrollView_build_closure(t0, t1) {
      this._box_0 = t0;
      this.axisDirection = t1;
    },
    _SingleChildViewport: function _SingleChildViewport(t0, t1, t2, t3) {
      var _ = this;
      _.axisDirection = t0;
      _.offset = t1;
      _.child = t2;
      _.key = t3;
    },
    _RenderSingleChildViewport: function _RenderSingleChildViewport(t0, t1, t2) {
      var _ = this;
      _._single_child_scroll_view$_axisDirection = t0;
      _._single_child_scroll_view$_offset = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderSingleChildViewport_paint_paintContents: function _RenderSingleChildViewport_paint_paintContents(t0, t1) {
      this.$this = t0;
      this.paintOffset = t1;
    },
    _RenderSingleChildViewport_hitTestChildren_closure: function _RenderSingleChildViewport_hitTestChildren_closure(t0, t1) {
      this.$this = t0;
      this.position = t1;
    },
    __RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin: function __RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin() {
    },
    Matrix4_tryInvert: function(other) {
      var r = new E.Matrix4(new Float64Array(16));
      if (r.copyInverse$1(other) === 0)
        return null;
      return r;
    },
    Matrix4$zero: function() {
      return new E.Matrix4(new Float64Array(16));
    },
    Matrix4_Matrix4$identity: function() {
      var t1 = new E.Matrix4(new Float64Array(16));
      t1.setIdentity$0();
      return t1;
    },
    Matrix4_Matrix4$translationValues: function(x, y, z) {
      var t1 = new Float64Array(16),
        t2 = new E.Matrix4(t1);
      t2.setIdentity$0();
      t1[14] = z;
      t1[13] = y;
      t1[12] = x;
      return t2;
    },
    Matrix4_Matrix4$diagonal3Values: function(x, y, z) {
      var t1 = new Float64Array(16);
      t1[15] = 1;
      t1[10] = z;
      t1[5] = y;
      t1[0] = x;
      return new E.Matrix4(t1);
    },
    Matrix4: function Matrix4(t0) {
      this._m4storage = t0;
    },
    Vector3: function Vector3(t0) {
      this._v3storage = t0;
    },
    Vector4: function Vector4(t0) {
      this._v4storage = t0;
    },
    debugInstrumentAction: function(description, action) {
      var t1 = action.call$0();
      return t1;
    },
    debugFormatDouble: function(value) {
      if (value == null)
        return "null";
      return C.JSNumber_methods.toStringAsFixed$1(value, 1);
    }
  },
  T = {CupertinoIconThemeData: function CupertinoIconThemeData(t0, t1, t2) {
      this.color = t0;
      this._opacity = t1;
      this.size = t2;
    }, _CupertinoIconThemeData_IconThemeData_Diagnosticable: function _CupertinoIconThemeData_IconThemeData_Diagnosticable() {
    }, TargetPlatform: function TargetPlatform(t0) {
      this._platform$_name = t0;
    },
    LongPressGestureRecognizer$: function(debugOwner, duration, kind, postAcceptSlopTolerance) {
      var t1 = duration == null ? C.Duration_500000 : duration,
        t2 = type$.int;
      return new T.LongPressGestureRecognizer(t1, postAcceptSlopTolerance, C.GestureRecognizerState_0, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.GestureArenaEntry), P.HashSet_HashSet(t2), debugOwner, kind, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.PointerDeviceKind));
    },
    LongPressStartDetails: function LongPressStartDetails(t0) {
      this.localPosition = t0;
    },
    LongPressMoveUpdateDetails: function LongPressMoveUpdateDetails(t0) {
      this.localPosition = t0;
    },
    LongPressEndDetails: function LongPressEndDetails(t0, t1) {
      this.localPosition = t0;
      this.velocity = t1;
    },
    LongPressGestureRecognizer: function LongPressGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._longPressAccepted = false;
      _._velocityTracker = _.onLongPressEnd = _.onLongPressUp = _.onLongPressMoveUpdate = _.onLongPressStart = _.onLongPress = _._long_press$_initialButtons = _._longPressOrigin = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _.state = t2;
      _.initialPosition = _.primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _._kindFilter = t6;
      _._pointerToKind = t7;
    },
    LongPressGestureRecognizer__checkLongPressStart_closure: function LongPressGestureRecognizer__checkLongPressStart_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressMoveUpdate_closure: function LongPressGestureRecognizer__checkLongPressMoveUpdate_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    LongPressGestureRecognizer__checkLongPressEnd_closure: function LongPressGestureRecognizer__checkLongPressEnd_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    UnderlineTabIndicator: function UnderlineTabIndicator(t0, t1) {
      this.borderSide = t0;
      this.insets = t1;
    },
    _UnderlinePainter: function _UnderlinePainter(t0, t1) {
      this.decoration = t0;
      this.onChanged = t1;
    },
    TooltipThemeData_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t1 ? _null : a.height;
      t3 = b == null;
      t2 = P.lerpDouble(t2, t3 ? _null : b.height, t);
      t4 = t1 ? _null : a.padding;
      t4 = V.EdgeInsetsGeometry_lerp(t4, t3 ? _null : b.padding, t);
      t5 = t1 ? _null : a.margin;
      t5 = V.EdgeInsetsGeometry_lerp(t5, t3 ? _null : b.margin, t);
      t6 = t1 ? _null : a.verticalOffset;
      t6 = P.lerpDouble(t6, t3 ? _null : b.verticalOffset, t);
      t7 = t < 0.5;
      t8 = t7 ? a.preferBelow : b.preferBelow;
      t7 = t7 ? a.excludeFromSemantics : b.excludeFromSemantics;
      t9 = t1 ? _null : a.decoration;
      t9 = Z.Decoration_lerp(t9, t3 ? _null : b.decoration, t);
      t1 = t1 ? _null : a.textStyle;
      return new T.TooltipThemeData(t2, t4, t5, t6, t8, t7, t9, A.TextStyle_lerp(t1, t3 ? _null : b.textStyle, t));
    },
    TooltipThemeData: function TooltipThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.height = t0;
      _.padding = t1;
      _.margin = t2;
      _.verticalOffset = t3;
      _.preferBelow = t4;
      _.excludeFromSemantics = t5;
      _.decoration = t6;
      _.textStyle = t7;
    },
    TooltipTheme: function TooltipTheme() {
    },
    _TooltipThemeData_Object_Diagnosticable: function _TooltipThemeData_Object_Diagnosticable() {
    },
    _sample: function(colors, stops, t) {
      var index, t1, t2, t3, t4;
      if (t <= C.JSArray_methods.get$first(stops))
        return C.JSArray_methods.get$first(colors);
      if (t >= C.JSArray_methods.get$last(stops))
        return C.JSArray_methods.get$last(colors);
      index = C.JSArray_methods.lastIndexWhere$1(stops, new T._sample_closure(t));
      t1 = colors[index];
      t2 = index + 1;
      t3 = colors[t2];
      t4 = stops[index];
      return P.Color_lerp(t1, t3, (t - t4) / (stops[t2] - t4));
    },
    _interpolateColorsAndStops: function(aColors, aStops, bColors, bStops, t) {
      var interpolatedStops,
        stops = P.SplayTreeSet$(null, null, type$.double);
      stops.addAll$1(0, aStops);
      stops.addAll$1(0, bStops);
      interpolatedStops = stops.toList$1$growable(0, false);
      return new T._ColorsAndStops(new H.MappedListIterable(interpolatedStops, new T._interpolateColorsAndStops_closure(aColors, aStops, bColors, bStops, t), H._arrayInstanceType(interpolatedStops)._eval$1("MappedListIterable<1,Color>")).toList$1$growable(0, false), interpolatedStops);
    },
    Gradient_lerp: function(a, b, t) {
      return null;
    },
    LinearGradient$: function(begin, colors, end, stops, tileMode) {
      return new T.LinearGradient(begin, end, tileMode, colors, stops, null);
    },
    LinearGradient_lerp: function(a, b, t) {
      var interpolated, t2, t3,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.scale$1(0, t);
      if (b == null)
        return a.scale$1(0, 1 - t);
      interpolated = T._interpolateColorsAndStops(a.colors, a._impliedStops$0(), b.colors, b._impliedStops$0(), t);
      t1 = K.AlignmentGeometry_lerp(a.begin, b.begin, t);
      t2 = K.AlignmentGeometry_lerp(a.end, b.end, t);
      t3 = t < 0.5 ? a.tileMode : b.tileMode;
      return T.LinearGradient$(t1, interpolated.colors, t2, interpolated.stops, t3);
    },
    _ColorsAndStops: function _ColorsAndStops(t0, t1) {
      this.colors = t0;
      this.stops = t1;
    },
    _sample_closure: function _sample_closure(t0) {
      this.t = t0;
    },
    _interpolateColorsAndStops_closure: function _interpolateColorsAndStops_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.aColors = t0;
      _.aStops = t1;
      _.bColors = t2;
      _.bStops = t3;
      _.t = t4;
    },
    Gradient: function Gradient() {
    },
    LinearGradient: function LinearGradient(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.begin = t0;
      _.end = t1;
      _.tileMode = t2;
      _.colors = t3;
      _.stops = t4;
      _.transform = t5;
    },
    LinearGradient_scale_closure: function LinearGradient_scale_closure(t0) {
      this.factor = t0;
    },
    Simulation: function Simulation() {
    },
    DebugOverflowIndicatorMixin: function DebugOverflowIndicatorMixin() {
    },
    PhysicalModelLayer$: function() {
      return new T.PhysicalModelLayer(C.Clip_0);
    },
    AnnotatedRegionLayer$: function(value, offset, opaque, size, $T) {
      var t1 = offset == null ? C.Offset_0_0 : offset;
      return new T.AnnotatedRegionLayer(value, size, t1, opaque, $T._eval$1("AnnotatedRegionLayer<0>"));
    },
    AnnotationEntry: function AnnotationEntry(t0, t1, t2) {
      this.annotation = t0;
      this.localPosition = t1;
      this.$ti = t2;
    },
    AnnotationResult: function AnnotationResult(t0, t1) {
      this._layer$_entries = t0;
      this.$ti = t1;
    },
    Layer: function Layer() {
    },
    PictureLayer: function PictureLayer(t0) {
      var _ = this;
      _.canvasBounds = t0;
      _._picture = null;
      _._willChangeHint = _._isComplexHint = false;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    PerformanceOverlayLayer: function PerformanceOverlayLayer(t0, t1, t2, t3, t4) {
      var _ = this;
      _._overlayRect = t0;
      _.optionsMask = t1;
      _.rasterizerThreshold = t2;
      _.checkerboardRasterCacheImages = t3;
      _.checkerboardOffscreenLayers = t4;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ContainerLayer: function ContainerLayer() {
    },
    OffsetLayer: function OffsetLayer(t0) {
      var _ = this;
      _._layer$_offset = t0;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ClipRectLayer: function ClipRectLayer(t0) {
      var _ = this;
      _._clipRect = null;
      _._layer$_clipBehavior = t0;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ClipPathLayer: function ClipPathLayer(t0) {
      var _ = this;
      _._clipPath = null;
      _._layer$_clipBehavior = t0;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    TransformLayer: function TransformLayer(t0, t1) {
      var _ = this;
      _._layer$_transform = t0;
      _._invertedTransform = _._lastEffectiveTransform = null;
      _._inverseDirty = true;
      _._layer$_offset = t1;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    OpacityLayer: function OpacityLayer(t0) {
      var _ = this;
      _._layer$_alpha = null;
      _._layer$_offset = t0;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    PhysicalModelLayer: function PhysicalModelLayer(t0) {
      var _ = this;
      _._clipPath = null;
      _._layer$_clipBehavior = t0;
      _._lastChild = _._firstChild = _._layer$_shadowColor = _._layer$_color = _._layer$_elevation = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    AnnotatedRegionLayer: function AnnotatedRegionLayer(t0, t1, t2, t3, t4) {
      var _ = this;
      _.value = t0;
      _.size = t1;
      _.offset = t2;
      _.opaque = t3;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
      _.$ti = t4;
    },
    _Layer_AbstractNode_DiagnosticableTreeMixin: function _Layer_AbstractNode_DiagnosticableTreeMixin() {
    },
    RenderShiftedBox: function RenderShiftedBox() {
    },
    RenderShiftedBox_hitTestChildren_closure: function RenderShiftedBox_hitTestChildren_closure(t0, t1, t2) {
      this.$this = t0;
      this.position = t1;
      this.childParentData = t2;
    },
    RenderPadding: function RenderPadding(t0, t1, t2) {
      var _ = this;
      _._resolvedPadding = null;
      _._shifted_box$_padding = t0;
      _._shifted_box$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAligningShiftedBox: function RenderAligningShiftedBox() {
    },
    RenderPositionedBox: function RenderPositionedBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _._widthFactor = t0;
      _._heightFactor = t1;
      _._shifted_box$_resolvedAlignment = null;
      _._shifted_box$_alignment = t2;
      _._shifted_box$_textDirection = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    SingleChildLayoutDelegate: function SingleChildLayoutDelegate() {
    },
    RenderCustomSingleChildLayoutBox: function RenderCustomSingleChildLayoutBox(t0, t1) {
      var _ = this;
      _._shifted_box$_delegate = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderShiftedBox_RenderBox_RenderObjectWithChildMixin: function _RenderShiftedBox_RenderBox_RenderObjectWithChildMixin() {
    },
    RenderSliverEdgeInsetsPadding: function RenderSliverEdgeInsetsPadding() {
    },
    RenderSliverPadding: function RenderSliverPadding(t0, t1, t2) {
      var _ = this;
      _._sliver_padding$_resolvedPadding = null;
      _._sliver_padding$_padding = t0;
      _._sliver_padding$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _.debugCreator = _.parentData = _._sliver$_geometry = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderSliverEdgeInsetsPadding_RenderSliver_RenderObjectWithChildMixin: function _RenderSliverEdgeInsetsPadding_RenderSliver_RenderObjectWithChildMixin() {
    },
    Directionality_of: function(context) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      return widget == null ? null : widget.textDirection;
    },
    Opacity$: function(child, opacity) {
      return new T.Opacity(opacity, child, null);
    },
    CustomPaint$: function(child, foregroundPainter, key, painter) {
      return new T.CustomPaint(painter, foregroundPainter, child, key);
    },
    Transform$: function(alignment, child, transform, transformHitTests) {
      return new T.Transform(transform, alignment, transformHitTests, child, null);
    },
    LayoutId$: function(child, id) {
      return new T.LayoutId(id, child, new D.ValueKey(id, type$.ValueKey_Object));
    },
    getAxisDirectionFromAxisReverseAndDirectionality: function(context, axis, reverse) {
      var axisDirection;
      switch (axis) {
        case C.Axis_0:
          axisDirection = G.textDirectionToAxisDirection(T.Directionality_of(context));
          return axisDirection;
        case C.Axis_1:
          return C.AxisDirection_2;
      }
      return null;
    },
    Stack$: function(alignment, children, fit) {
      return new T.Stack(alignment, fit, children, null);
    },
    Positioned$: function(bottom, child, height, key, left, right, $top, width) {
      return new T.Positioned(left, $top, right, bottom, width, height, child, key);
    },
    Row$: function(children, crossAxisAlignment, mainAxisAlignment, mainAxisSize) {
      return new T.Row(C.Axis_0, mainAxisAlignment, mainAxisSize, crossAxisAlignment, null, C.VerticalDirection_1, null, children, null);
    },
    Column$: function(children, crossAxisAlignment, mainAxisAlignment) {
      return new T.Column(C.Axis_1, mainAxisAlignment, C.MainAxisSize_1, crossAxisAlignment, null, C.VerticalDirection_1, null, children, null);
    },
    Expanded$: function(child) {
      return new T.Expanded(1, C.FlexFit_0, child, null);
    },
    RichText$: function(locale, maxLines, overflow, softWrap, strutStyle, text, textAlign, textDirection, textHeightBehavior, textScaleFactor, textWidthBasis) {
      return new T.RichText(text, textAlign, textDirection, softWrap, overflow, textScaleFactor, maxLines, locale, strutStyle, textWidthBasis, textHeightBehavior, T.RichText__extractChildren(text), null);
    },
    RichText__extractChildren: function(span) {
      var result = H.setRuntimeTypeInfo([], type$.JSArray_Widget);
      span.visitChildren$1(new T.RichText__extractChildren_closure(result));
      return result;
    },
    Listener$: function(behavior, child, onPointerCancel, onPointerDown, onPointerSignal, onPointerUp) {
      return new T.Listener(onPointerDown, onPointerUp, onPointerCancel, onPointerSignal, behavior, child, null);
    },
    MouseRegion$: function(child, onEnter, onExit, onHover, opaque) {
      return new T.MouseRegion(onEnter, onHover, onExit, opaque, child, null);
    },
    Semantics$: function(button, child, container, enabled, explicitChildNodes, focusable, focused, header, label, namesRoute, onDismiss, scopesRoute, selected, textDirection) {
      var _null = null;
      return new T.Semantics(new A.SemanticsProperties(enabled, _null, _null, selected, button, _null, header, _null, _null, focusable, focused, _null, _null, _null, _null, scopesRoute, namesRoute, _null, _null, _null, _null, label, _null, _null, _null, _null, _null, textDirection, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, onDismiss, _null), container, explicitChildNodes, false, child, _null);
    },
    KeyedSubtree_ensureUniqueKeysForList: function(items) {
      var itemsWithUniqueKeys, t2, t3, itemIndex, _i, item, t4,
        t1 = items.length;
      if (t1 === 0)
        return items;
      itemsWithUniqueKeys = H.setRuntimeTypeInfo([], type$.JSArray_Widget);
      for (t1 = items.length, t2 = type$.ValueKey_int, t3 = type$.ValueKey_Key, itemIndex = 0, _i = 0; _i < items.length; items.length === t1 || (0, H.throwConcurrentModificationError)(items), ++_i) {
        item = items[_i];
        t4 = item.key;
        itemsWithUniqueKeys.push(new T.KeyedSubtree(item, t4 != null ? new D.ValueKey(t4, t3) : new D.ValueKey(itemIndex, t2)));
        ++itemIndex;
      }
      return itemsWithUniqueKeys;
    },
    Directionality: function Directionality(t0, t1, t2) {
      this.textDirection = t0;
      this.child = t1;
      this.key = t2;
    },
    Opacity: function Opacity(t0, t1, t2) {
      this.opacity = t0;
      this.child = t1;
      this.key = t2;
    },
    CustomPaint: function CustomPaint(t0, t1, t2, t3) {
      var _ = this;
      _.painter = t0;
      _.foregroundPainter = t1;
      _.child = t2;
      _.key = t3;
    },
    ClipRect: function ClipRect(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ClipPath: function ClipPath(t0, t1, t2, t3) {
      var _ = this;
      _.clipper = t0;
      _.clipBehavior = t1;
      _.child = t2;
      _.key = t3;
    },
    PhysicalModel: function PhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.shape = t0;
      _.clipBehavior = t1;
      _.borderRadius = t2;
      _.elevation = t3;
      _.color = t4;
      _.shadowColor = t5;
      _.child = t6;
      _.key = t7;
    },
    PhysicalShape: function PhysicalShape(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.clipper = t0;
      _.clipBehavior = t1;
      _.elevation = t2;
      _.color = t3;
      _.shadowColor = t4;
      _.child = t5;
      _.key = t6;
    },
    Transform: function Transform(t0, t1, t2, t3, t4) {
      var _ = this;
      _.transform = t0;
      _.alignment = t1;
      _.transformHitTests = t2;
      _.child = t3;
      _.key = t4;
    },
    FractionalTranslation: function FractionalTranslation(t0, t1, t2, t3) {
      var _ = this;
      _.translation = t0;
      _.transformHitTests = t1;
      _.child = t2;
      _.key = t3;
    },
    Padding: function Padding(t0, t1, t2) {
      this.padding = t0;
      this.child = t1;
      this.key = t2;
    },
    Align: function Align(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alignment = t0;
      _.widthFactor = t1;
      _.heightFactor = t2;
      _.child = t3;
      _.key = t4;
    },
    Center: function Center(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alignment = t0;
      _.widthFactor = t1;
      _.heightFactor = t2;
      _.child = t3;
      _.key = t4;
    },
    CustomSingleChildLayout: function CustomSingleChildLayout(t0, t1, t2) {
      this.delegate = t0;
      this.child = t1;
      this.key = t2;
    },
    LayoutId: function LayoutId(t0, t1, t2) {
      this.id = t0;
      this.child = t1;
      this.key = t2;
    },
    CustomMultiChildLayout: function CustomMultiChildLayout(t0, t1, t2) {
      this.delegate = t0;
      this.children = t1;
      this.key = t2;
    },
    SizedBox: function SizedBox(t0, t1, t2, t3) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.child = t2;
      _.key = t3;
    },
    ConstrainedBox: function ConstrainedBox(t0, t1, t2) {
      this.constraints = t0;
      this.child = t1;
      this.key = t2;
    },
    LimitedBox: function LimitedBox(t0, t1, t2, t3) {
      var _ = this;
      _.maxWidth = t0;
      _.maxHeight = t1;
      _.child = t2;
      _.key = t3;
    },
    Offstage: function Offstage(t0, t1, t2) {
      this.offstage = t0;
      this.child = t1;
      this.key = t2;
    },
    _OffstageElement: function _OffstageElement(t0, t1, t2, t3) {
      var _ = this;
      _._parent = _._ancestorRenderObjectElement = _._renderObject = _._framework$_child = null;
      _._cachedHash = t0;
      _._depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    SliverPadding: function SliverPadding(t0, t1, t2) {
      this.padding = t0;
      this.child = t1;
      this.key = t2;
    },
    Stack: function Stack(t0, t1, t2, t3) {
      var _ = this;
      _.alignment = t0;
      _.fit = t1;
      _.children = t2;
      _.key = t3;
    },
    Positioned: function Positioned(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.width = t4;
      _.height = t5;
      _.child = t6;
      _.key = t7;
    },
    PositionedDirectional: function PositionedDirectional(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.top = t1;
      _.bottom = t2;
      _.width = t3;
      _.child = t4;
      _.key = t5;
    },
    Flex: function Flex() {
    },
    Row: function Row(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.direction = t0;
      _.mainAxisAlignment = t1;
      _.mainAxisSize = t2;
      _.crossAxisAlignment = t3;
      _.textDirection = t4;
      _.verticalDirection = t5;
      _.textBaseline = t6;
      _.children = t7;
      _.key = t8;
    },
    Column: function Column(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.direction = t0;
      _.mainAxisAlignment = t1;
      _.mainAxisSize = t2;
      _.crossAxisAlignment = t3;
      _.textDirection = t4;
      _.verticalDirection = t5;
      _.textBaseline = t6;
      _.children = t7;
      _.key = t8;
    },
    Flexible: function Flexible(t0, t1, t2, t3) {
      var _ = this;
      _.flex = t0;
      _.fit = t1;
      _.child = t2;
      _.key = t3;
    },
    Expanded: function Expanded(t0, t1, t2, t3) {
      var _ = this;
      _.flex = t0;
      _.fit = t1;
      _.child = t2;
      _.key = t3;
    },
    RichText: function RichText(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.text = t0;
      _.textAlign = t1;
      _.textDirection = t2;
      _.softWrap = t3;
      _.overflow = t4;
      _.textScaleFactor = t5;
      _.maxLines = t6;
      _.locale = t7;
      _.strutStyle = t8;
      _.textWidthBasis = t9;
      _.textHeightBehavior = t10;
      _.children = t11;
      _.key = t12;
    },
    RichText__extractChildren_closure: function RichText__extractChildren_closure(t0) {
      this.result = t0;
    },
    DefaultAssetBundle: function DefaultAssetBundle() {
    },
    Listener: function Listener(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.onPointerDown = t0;
      _.onPointerUp = t1;
      _.onPointerCancel = t2;
      _.onPointerSignal = t3;
      _.behavior = t4;
      _._basic$_child = t5;
      _.key = t6;
    },
    _PointerListener: function _PointerListener(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onPointerDown = t0;
      _.onPointerMove = t1;
      _.onPointerUp = t2;
      _.onPointerCancel = t3;
      _.onPointerSignal = t4;
      _.behavior = t5;
      _.child = t6;
      _.key = t7;
    },
    MouseRegion: function MouseRegion(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.onEnter = t0;
      _.onHover = t1;
      _.onExit = t2;
      _.opaque = t3;
      _.child = t4;
      _.key = t5;
    },
    _MouseRegionState: function _MouseRegionState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _RawMouseRegion: function _RawMouseRegion(t0, t1, t2) {
      this.owner = t0;
      this.child = t1;
      this.key = t2;
    },
    RepaintBoundary: function RepaintBoundary(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    IgnorePointer: function IgnorePointer(t0, t1, t2, t3) {
      var _ = this;
      _.ignoring = t0;
      _.ignoringSemantics = t1;
      _.child = t2;
      _.key = t3;
    },
    AbsorbPointer: function AbsorbPointer(t0, t1, t2) {
      this.absorbing = t0;
      this.child = t1;
      this.key = t2;
    },
    Semantics: function Semantics(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.properties = t0;
      _.container = t1;
      _.explicitChildNodes = t2;
      _.excludeSemantics = t3;
      _.child = t4;
      _.key = t5;
    },
    MergeSemantics: function MergeSemantics(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    BlockSemantics: function BlockSemantics(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ExcludeSemantics: function ExcludeSemantics(t0, t1, t2) {
      this.excluding = t0;
      this.child = t1;
      this.key = t2;
    },
    IndexedSemantics: function IndexedSemantics(t0, t1, t2) {
      this.index = t0;
      this.child = t1;
      this.key = t2;
    },
    KeyedSubtree: function KeyedSubtree(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    Builder: function Builder(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    ColoredBox: function ColoredBox(t0, t1, t2) {
      this.color = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderColoredBox: function _RenderColoredBox(t0, t1, t2) {
      var _ = this;
      _._basic$_color = t0;
      _.behavior = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _boundingBoxFor: function(context, ancestorContext) {
      var box = type$.RenderBox._as(context.get$renderObject()),
        t1 = box.getTransformTo$1(0, ancestorContext == null ? null : ancestorContext.get$renderObject()),
        t2 = box._size;
      return T.MatrixUtils_transformRect(t1, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
    },
    Hero__allHeroesFor: function(context, isUserGestureTransition, $navigator) {
      var result = P.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$._HeroState);
      context.visitChildren$1(new T.Hero__allHeroesFor_visitor($navigator, new T.Hero__allHeroesFor_inviteHero(result, isUserGestureTransition)));
      return result;
    },
    HeroFlightDirection: function HeroFlightDirection(t0) {
      this._heroes$_name = t0;
    },
    Hero: function Hero(t0, t1, t2) {
      this.tag = t0;
      this.child = t1;
      this.key = t2;
    },
    Hero__allHeroesFor_inviteHero: function Hero__allHeroesFor_inviteHero(t0, t1) {
      this.result = t0;
      this.isUserGestureTransition = t1;
    },
    Hero__allHeroesFor_visitor: function Hero__allHeroesFor_visitor(t0, t1) {
      this.navigator = t0;
      this.inviteHero = t1;
    },
    _HeroState: function _HeroState(t0, t1) {
      var _ = this;
      _._heroes$_key = t0;
      _._placeholderSize = null;
      _._shouldIncludeChild = true;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _HeroState_startFlight_closure: function _HeroState_startFlight_closure(t0, t1) {
      this.$this = t0;
      this.box = t1;
    },
    _HeroState_ensurePlaceholderIsHidden_closure: function _HeroState_ensurePlaceholderIsHidden_closure(t0) {
      this.$this = t0;
    },
    _HeroFlightManifest: function _HeroFlightManifest(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.type = t0;
      _.overlay = t1;
      _.navigatorRect = t2;
      _.fromRoute = t3;
      _.toRoute = t4;
      _.fromHero = t5;
      _.toHero = t6;
      _.createRectTween = t7;
      _.shuttleBuilder = t8;
      _.isUserGestureTransition = t9;
      _.isDiverted = t10;
    },
    _HeroFlight: function _HeroFlight(t0, t1) {
      var _ = this;
      _.onFlightEnded = t0;
      _.shuttle = _.heroRectTween = null;
      _._heroOpacity = t1;
      _.overlayEntry = _.manifest = _._proxyAnimation = null;
      _._aborted = false;
    },
    _HeroFlight__buildOverlay_closure: function _HeroFlight__buildOverlay_closure(t0) {
      this.$this = t0;
    },
    HeroController: function HeroController(t0, t1) {
      this.createRectTween = t0;
      this._flights = t1;
      this._navigator$_navigator = null;
    },
    HeroController_didStopUserGesture_isInvalidFlight: function HeroController_didStopUserGesture_isInvalidFlight() {
    },
    HeroController__maybeStartHeroTransition_closure: function HeroController__maybeStartHeroTransition_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.$this = t0;
      _.from = t1;
      _.to = t2;
      _.animation = t3;
      _.flightType = t4;
      _.isUserGestureTransition = t5;
    },
    HeroController_closure: function HeroController_closure() {
    },
    IconThemeData_lerp: function(a, b, t) {
      var t4, _null = null,
        t1 = a == null,
        t2 = t1 ? _null : a.color,
        t3 = b == null;
      t2 = P.Color_lerp(t2, t3 ? _null : b.color, t);
      t4 = t1 ? _null : a.get$opacity(a);
      t4 = P.lerpDouble(t4, t3 ? _null : b.get$opacity(b), t);
      t1 = t1 ? _null : a.size;
      return new T.IconThemeData(t2, t4, P.lerpDouble(t1, t3 ? _null : b.size, t));
    },
    IconThemeData: function IconThemeData(t0, t1, t2) {
      this.color = t0;
      this._opacity = t1;
      this.size = t2;
    },
    _IconThemeData_Object_Diagnosticable: function _IconThemeData_Object_Diagnosticable() {
    },
    ModalRoute_of: function(context, $T) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$._ModalScopeStatus),
        t1 = widget == null ? null : widget.route;
      return $T._eval$1("ModalRoute<0>")._as(t1);
    },
    OverlayRoute: function OverlayRoute() {
    },
    TransitionRoute: function TransitionRoute() {
    },
    TransitionRoute__updateSecondaryAnimation__jumpOnAnimationEnd: function TransitionRoute__updateSecondaryAnimation__jumpOnAnimationEnd(t0, t1, t2) {
      this.$this = t0;
      this.nextTrain = t1;
      this.nextRoute = t2;
    },
    TransitionRoute__updateSecondaryAnimation_closure: function TransitionRoute__updateSecondaryAnimation_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.nextTrain = t1;
      this._jumpOnAnimationEnd = t2;
    },
    TransitionRoute__updateSecondaryAnimation_closure0: function TransitionRoute__updateSecondaryAnimation_closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.nextRoute = t2;
    },
    TransitionRoute__setSecondaryAnimation_closure: function TransitionRoute__setSecondaryAnimation_closure(t0, t1) {
      this.$this = t0;
      this.animation = t1;
    },
    LocalHistoryRoute: function LocalHistoryRoute() {
    },
    _ModalScopeStatus: function _ModalScopeStatus(t0, t1, t2, t3, t4) {
      var _ = this;
      _.isCurrent = t0;
      _.canPop = t1;
      _.route = t2;
      _.child = t3;
      _.key = t4;
    },
    _ModalScope: function _ModalScope(t0, t1, t2) {
      this.route = t0;
      this.key = t1;
      this.$ti = t2;
    },
    _ModalScopeState: function _ModalScopeState(t0, t1, t2) {
      var _ = this;
      _._listenable = _._page = null;
      _.focusScopeNode = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
      _.$ti = t2;
    },
    _ModalScopeState__forceRebuildPage_closure: function _ModalScopeState__forceRebuildPage_closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build_closure0: function _ModalScopeState_build_closure0(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build__closure: function _ModalScopeState_build__closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build_closure: function _ModalScopeState_build_closure(t0) {
      this.$this = t0;
    },
    ModalRoute: function ModalRoute() {
    },
    ModalRoute_offstage_closure: function ModalRoute_offstage_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    ModalRoute_changedInternalState_closure: function ModalRoute_changedInternalState_closure() {
    },
    _ModalRoute_TransitionRoute_LocalHistoryRoute: function _ModalRoute_TransitionRoute_LocalHistoryRoute() {
    },
    BenchCardInfiniteScroll: function BenchCardInfiniteScroll(t0, t1) {
      var _ = this;
      _._drawFrameStopwatch = _._runCompleter = _.profile = _.didStop = null;
      _.isTracingEnabled = t0;
      _.name = t1;
    },
    _InfiniteScrollCards: function _InfiniteScrollCards(t0) {
      this.key = t0;
    },
    _InfiniteScrollCardsState: function _InfiniteScrollCardsState(t0) {
      var _ = this;
      _._widget = _.offset = _.scrollController = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _InfiniteScrollCardsState_initState_closure: function _InfiniteScrollCardsState_initState_closure(t0) {
      this.$this = t0;
    },
    _InfiniteScrollCardsState_build_closure: function _InfiniteScrollCardsState_build_closure() {
    },
    MatrixUtils_getAsTranslation: function(transform) {
      var values = transform._m4storage;
      if (values[0] === 1 && values[1] === 0 && values[2] === 0 && values[3] === 0 && values[4] === 0 && values[5] === 1 && values[6] === 0 && values[7] === 0 && values[8] === 0 && values[9] === 0 && values[10] === 1 && values[11] === 0 && values[14] === 0 && values[15] === 1)
        return new P.Offset(values[12], values[13]);
      return null;
    },
    MatrixUtils_matrixEquals: function(a, b) {
      var t1, t2, t3;
      if (a == b)
        return true;
      if (a == null)
        return T.MatrixUtils_isIdentity(b);
      if (b == null)
        return T.MatrixUtils_isIdentity(a);
      t1 = a._m4storage;
      t2 = t1[0];
      t3 = b._m4storage;
      return t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3] && t1[4] === t3[4] && t1[5] === t3[5] && t1[6] === t3[6] && t1[7] === t3[7] && t1[8] === t3[8] && t1[9] === t3[9] && t1[10] === t3[10] && t1[11] === t3[11] && t1[12] === t3[12] && t1[13] === t3[13] && t1[14] === t3[14] && t1[15] === t3[15];
    },
    MatrixUtils_isIdentity: function(a) {
      var t1 = a._m4storage;
      return t1[0] === 1 && t1[1] === 0 && t1[2] === 0 && t1[3] === 0 && t1[4] === 0 && t1[5] === 1 && t1[6] === 0 && t1[7] === 0 && t1[8] === 0 && t1[9] === 0 && t1[10] === 1 && t1[11] === 0 && t1[12] === 0 && t1[13] === 0 && t1[14] === 0 && t1[15] === 1;
    },
    MatrixUtils_transformPoint: function(transform, point) {
      var storage = transform._m4storage,
        x = point._dx,
        y = point._dy,
        rx = storage[0] * x + storage[4] * y + storage[12],
        ry = storage[1] * x + storage[5] * y + storage[13],
        rw = storage[3] * x + storage[7] * y + storage[15];
      if (rw === 1)
        return new P.Offset(rx, ry);
      else
        return new P.Offset(rx / rw, ry / rw);
    },
    MatrixUtils__accumulate: function(m, x, y, first, isAffine) {
      var t1,
        w = isAffine ? 1 : 1 / (m[3] * x + m[7] * y + m[15]),
        tx = (m[0] * x + m[4] * y + m[12]) * w,
        ty = (m[1] * x + m[5] * y + m[13]) * w;
      if (first) {
        t1 = $.MatrixUtils__minMax;
        t1[2] = tx;
        t1[0] = tx;
        t1[3] = ty;
        t1[1] = ty;
      } else {
        t1 = $.MatrixUtils__minMax;
        if (tx < t1[0])
          t1[0] = tx;
        if (ty < t1[1])
          t1[1] = ty;
        if (tx > t1[2])
          t1[2] = tx;
        if (ty > t1[3])
          t1[3] = ty;
      }
    },
    MatrixUtils_transformRect: function(transform, rect) {
      var isAffine, wx, hx, rx, wy, hy, ry, left, right, $top, bottom, hw, rw, ulx, uly, urx, t3, ury, t4, llx, lly, lrx, lry,
        storage = transform._m4storage,
        x = rect.left,
        y = rect.top,
        t1 = rect.right,
        w = t1 - x,
        t2 = rect.bottom,
        h = t2 - y;
      if (!isFinite(w) || !isFinite(h)) {
        isAffine = storage[3] === 0 && storage[7] === 0 && storage[15] === 1;
        if ($.MatrixUtils__minMax == null)
          $.MatrixUtils__minMax = new Float64Array(4);
        T.MatrixUtils__accumulate(storage, x, y, true, isAffine);
        T.MatrixUtils__accumulate(storage, t1, y, false, isAffine);
        T.MatrixUtils__accumulate(storage, x, t2, false, isAffine);
        T.MatrixUtils__accumulate(storage, t1, t2, false, isAffine);
        t1 = $.MatrixUtils__minMax;
        return new P.Rect(t1[0], t1[1], t1[2], t1[3]);
      }
      t1 = storage[0];
      wx = t1 * w;
      t2 = storage[4];
      hx = t2 * h;
      rx = t1 * x + t2 * y + storage[12];
      t2 = storage[1];
      wy = t2 * w;
      t1 = storage[5];
      hy = t1 * h;
      ry = t2 * x + t1 * y + storage[13];
      t1 = storage[3];
      if (t1 === 0 && storage[7] === 0 && storage[15] === 1) {
        left = rx + wx;
        if (wx < 0)
          right = rx;
        else {
          right = left;
          left = rx;
        }
        if (hx < 0)
          left += hx;
        else
          right += hx;
        $top = ry + wy;
        if (wy < 0)
          bottom = ry;
        else {
          bottom = $top;
          $top = ry;
        }
        if (hy < 0)
          $top += hy;
        else
          bottom += hy;
        return new P.Rect(left, $top, right, bottom);
      } else {
        t2 = storage[7];
        hw = t2 * h;
        rw = t1 * x + t2 * y + storage[15];
        ulx = rx / rw;
        uly = ry / rw;
        t2 = rx + wx;
        t1 = rw + t1 * w;
        urx = t2 / t1;
        t3 = ry + wy;
        ury = t3 / t1;
        t4 = rw + hw;
        llx = (rx + hx) / t4;
        lly = (ry + hy) / t4;
        t1 += hw;
        lrx = (t2 + hx) / t1;
        lry = (t3 + hy) / t1;
        return new P.Rect(T.MatrixUtils__min4(ulx, urx, llx, lrx), T.MatrixUtils__min4(uly, ury, lly, lry), T.MatrixUtils__max4(ulx, urx, llx, lrx), T.MatrixUtils__max4(uly, ury, lly, lry));
      }
    },
    MatrixUtils__min4: function(a, b, c, d) {
      var e = a < b ? a : b,
        f = c < d ? c : d;
      return e < f ? e : f;
    },
    MatrixUtils__max4: function(a, b, c, d) {
      var e = a > b ? a : b,
        f = c > d ? c : d;
      return e > f ? e : f;
    },
    MatrixUtils_inverseTransformRect: function(transform, rect) {
      var transform0;
      if (T.MatrixUtils_isIdentity(transform))
        return rect;
      transform0 = new E.Matrix4(new Float64Array(16));
      transform0.setFrom$1(transform);
      transform0.copyInverse$1(transform0);
      return T.MatrixUtils_transformRect(transform0, rect);
    }
  },
  K = {
    CupertinoUserInterfaceLevel_of: function(context, nullOk) {
      context.dependOnInheritedWidgetOfExactType$1$0(type$.CupertinoUserInterfaceLevel);
      return null;
    },
    CupertinoUserInterfaceLevelData: function CupertinoUserInterfaceLevelData(t0) {
      this._interface_level$_name = t0;
    },
    CupertinoUserInterfaceLevel: function CupertinoUserInterfaceLevel() {
    },
    CupertinoTheme: function CupertinoTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    _InheritedCupertinoTheme: function _InheritedCupertinoTheme(t0, t1, t2) {
      this.theme = t0;
      this.child = t1;
      this.key = t2;
    },
    CupertinoThemeData: function CupertinoThemeData() {
    },
    _NoDefaultCupertinoThemeData: function _NoDefaultCupertinoThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.primaryColor = t0;
      _.primaryContrastingColor = t1;
      _.textTheme = t2;
      _.barBackgroundColor = t3;
      _.scaffoldBackgroundColor = t4;
      _._defaults = t5;
      _.brightness = t6;
      _._primaryColor = t7;
      _._primaryContrastingColor = t8;
      _._textTheme = t9;
      _._barBackgroundColor = t10;
      _._scaffoldBackgroundColor = t11;
    },
    _CupertinoThemeDefaults: function _CupertinoThemeDefaults() {
    },
    _CupertinoTextThemeDefaults: function _CupertinoTextThemeDefaults() {
    },
    _CupertinoThemeData_Object_Diagnosticable: function _CupertinoThemeData_Object_Diagnosticable() {
    },
    Checkbox: function Checkbox(t0, t1, t2, t3) {
      var _ = this;
      _.value = t0;
      _.onChanged = t1;
      _.tristate = t2;
      _.key = t3;
    },
    _CheckboxState: function _CheckboxState(t0, t1) {
      var _ = this;
      _._checkbox$_actionMap = null;
      _._checkbox$_hovering = _._checkbox$_focused = false;
      _.TickerProviderStateMixin__tickers = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _CheckboxState__handleFocusHighlightChanged_closure: function _CheckboxState__handleFocusHighlightChanged_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    _CheckboxState__handleHoverChanged_closure: function _CheckboxState__handleHoverChanged_closure(t0, t1) {
      this.$this = t0;
      this.hovering = t1;
    },
    _CheckboxState_build_closure: function _CheckboxState_build_closure(t0, t1, t2) {
      this.$this = t0;
      this.themeData = t1;
      this.additionalConstraints = t2;
    },
    _CheckboxRenderObjectWidget: function _CheckboxRenderObjectWidget(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.value = t0;
      _.tristate = t1;
      _.hasFocus = t2;
      _.hovering = t3;
      _.activeColor = t4;
      _.checkColor = t5;
      _.inactiveColor = t6;
      _.focusColor = t7;
      _.hoverColor = t8;
      _.onChanged = t9;
      _.vsync = t10;
      _.additionalConstraints = t11;
      _.key = t12;
    },
    _RenderCheckbox: function _RenderCheckbox(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._oldValue = t0;
      _.checkColor = t1;
      _._reactionHoverFade = _._reactionHoverFadeController = _._reactionFocusFade = _._reactionFocusFadeController = _._reaction = _._reactionController = _._toggleable$_position = _._positionController = null;
      _._toggleable$_hasFocus = t2;
      _._toggleable$_hovering = t3;
      _._vsync = t4;
      _._toggleable$_value = t5;
      _._tristate = t6;
      _._activeColor = t7;
      _._inactiveColor = t8;
      _._toggleable$_hoverColor = t9;
      _._toggleable$_focusColor = t10;
      _._onChanged = t11;
      _._downPosition = _._tap = null;
      _._additionalConstraints = t12;
      _.RenderObjectWithChildMixin__child = t13;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    __CheckboxState_State_TickerProviderStateMixin: function __CheckboxState_State_TickerProviderStateMixin() {
    },
    ChipThemeData$: function(backgroundColor, brightness, checkmarkColor, deleteIconColor, disabledColor, elevation, labelPadding, labelStyle, padding, pressElevation, secondaryLabelStyle, secondarySelectedColor, selectedColor, selectedShadowColor, shadowColor, shape) {
      return new K.ChipThemeData(backgroundColor, deleteIconColor, disabledColor, selectedColor, secondarySelectedColor, shadowColor, selectedShadowColor, checkmarkColor, labelPadding, padding, shape, labelStyle, secondaryLabelStyle, brightness, elevation, pressElevation);
    },
    ChipThemeData_ChipThemeData$fromDefaults: function(brightness, labelStyle, secondaryColor) {
      var backgroundColor, deleteIconColor, disabledColor, selectedColor, secondarySelectedColor, secondaryLabelStyle, _null = null,
        primaryColor = brightness === C.Brightness_1 ? C.Color_4278190080 : C.Color_4294967295,
        t1 = primaryColor.value,
        t2 = (16711680 & t1) >>> 16,
        t3 = (65280 & t1) >>> 8;
      t1 = (255 & t1) >>> 0;
      backgroundColor = P.Color$fromARGB(31, t2, t3, t1);
      deleteIconColor = P.Color$fromARGB(222, t2, t3, t1);
      disabledColor = P.Color$fromARGB(12, t2, t3, t1);
      selectedColor = P.Color$fromARGB(61, t2, t3, t1);
      secondarySelectedColor = P.Color$fromARGB(61, (16711680 & secondaryColor.get$value(secondaryColor)) >>> 16, (65280 & secondaryColor.get$value(secondaryColor)) >>> 8, (255 & secondaryColor.get$value(secondaryColor)) >>> 0);
      secondaryLabelStyle = labelStyle.copyWith$1$color(P.Color$fromARGB(222, (16711680 & secondaryColor.get$value(secondaryColor)) >>> 16, (65280 & secondaryColor.get$value(secondaryColor)) >>> 8, (255 & secondaryColor.get$value(secondaryColor)) >>> 0));
      return K.ChipThemeData$(backgroundColor, brightness, _null, deleteIconColor, disabledColor, _null, C.EdgeInsets_8_0_8_0, labelStyle.copyWith$1$color(P.Color$fromARGB(222, t2, t3, t1)), C.EdgeInsets_4_4_4_4, _null, secondaryLabelStyle, secondarySelectedColor, selectedColor, _null, _null, C.StadiumBorder_wjC);
    },
    ChipThemeData_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t1 ? _null : a.backgroundColor;
      t3 = b == null;
      t2 = P.Color_lerp(t2, t3 ? _null : b.backgroundColor, t);
      t4 = t1 ? _null : a.deleteIconColor;
      t4 = P.Color_lerp(t4, t3 ? _null : b.deleteIconColor, t);
      t5 = t1 ? _null : a.disabledColor;
      t5 = P.Color_lerp(t5, t3 ? _null : b.disabledColor, t);
      t6 = t1 ? _null : a.selectedColor;
      t6 = P.Color_lerp(t6, t3 ? _null : b.selectedColor, t);
      t7 = t1 ? _null : a.secondarySelectedColor;
      t7 = P.Color_lerp(t7, t3 ? _null : b.secondarySelectedColor, t);
      t8 = t1 ? _null : a.shadowColor;
      t8 = P.Color_lerp(t8, t3 ? _null : b.shadowColor, t);
      t9 = t1 ? _null : a.selectedShadowColor;
      t9 = P.Color_lerp(t9, t3 ? _null : b.selectedShadowColor, t);
      t10 = t1 ? _null : a.checkmarkColor;
      t10 = P.Color_lerp(t10, t3 ? _null : b.checkmarkColor, t);
      t11 = t1 ? _null : a.labelPadding;
      t11 = V.EdgeInsetsGeometry_lerp(t11, t3 ? _null : b.labelPadding, t);
      t12 = t1 ? _null : a.padding;
      t12 = V.EdgeInsetsGeometry_lerp(t12, t3 ? _null : b.padding, t);
      t13 = t1 ? _null : a.shape;
      t13 = Y.ShapeBorder_lerp(t13, t3 ? _null : b.shape, t);
      t14 = t1 ? _null : a.labelStyle;
      t14 = A.TextStyle_lerp(t14, t3 ? _null : b.labelStyle, t);
      t15 = t1 ? _null : a.secondaryLabelStyle;
      t15 = A.TextStyle_lerp(t15, t3 ? _null : b.secondaryLabelStyle, t);
      if (t < 0.5) {
        t16 = t1 ? _null : a.brightness;
        if (t16 == null)
          t16 = C.Brightness_1;
      } else {
        t16 = t3 ? _null : b.brightness;
        if (t16 == null)
          t16 = C.Brightness_1;
      }
      t17 = t1 ? _null : a.elevation;
      t17 = P.lerpDouble(t17, t3 ? _null : b.elevation, t);
      t1 = t1 ? _null : a.pressElevation;
      return K.ChipThemeData$(t2, t16, t10, t4, t5, t17, t11, t14, t12, P.lerpDouble(t1, t3 ? _null : b.pressElevation, t), t15, t7, t6, t9, t8, t13);
    },
    ChipThemeData: function ChipThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.backgroundColor = t0;
      _.deleteIconColor = t1;
      _.disabledColor = t2;
      _.selectedColor = t3;
      _.secondarySelectedColor = t4;
      _.shadowColor = t5;
      _.selectedShadowColor = t6;
      _.checkmarkColor = t7;
      _.labelPadding = t8;
      _.padding = t9;
      _.shape = t10;
      _.labelStyle = t11;
      _.secondaryLabelStyle = t12;
      _.brightness = t13;
      _.elevation = t14;
      _.pressElevation = t15;
    },
    _ChipThemeData_Object_Diagnosticable: function _ChipThemeData_Object_Diagnosticable() {
    },
    _FadeUpwardsPageTransition: function _FadeUpwardsPageTransition(t0, t1, t2, t3) {
      var _ = this;
      _._positionAnimation = t0;
      _._opacityAnimation = t1;
      _.child = t2;
      _.key = t3;
    },
    PageTransitionsBuilder: function PageTransitionsBuilder() {
    },
    FadeUpwardsPageTransitionsBuilder: function FadeUpwardsPageTransitionsBuilder() {
    },
    CupertinoPageTransitionsBuilder: function CupertinoPageTransitionsBuilder() {
    },
    PageTransitionsTheme: function PageTransitionsTheme() {
    },
    PageTransitionsTheme__all_closure: function PageTransitionsTheme__all_closure(t0) {
      this.builders = t0;
    },
    _PageTransitionsTheme_Object_Diagnosticable: function _PageTransitionsTheme_Object_Diagnosticable() {
    },
    SnackBarThemeData: function SnackBarThemeData(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.backgroundColor = t0;
      _.actionTextColor = t1;
      _.disabledActionTextColor = t2;
      _.contentTextStyle = t3;
      _.elevation = t4;
      _.shape = t5;
      _.behavior = t6;
    },
    _SnackBarThemeData_Object_Diagnosticable: function _SnackBarThemeData_Object_Diagnosticable() {
    },
    Theme_of: function(context) {
      var t1, theme, _null = null,
        inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$._InheritedTheme),
        category = L.Localizations_of(context, C.Type_MaterialLocalizations_flR, type$.MaterialLocalizations) == null ? _null : C.ScriptCategory_0;
      if (category == null)
        category = C.ScriptCategory_0;
      t1 = inheritedTheme == null ? _null : inheritedTheme.theme;
      theme = t1 == null ? _null : t1.data;
      if (theme == null)
        theme = $.$get$Theme__kFallbackTheme();
      return X.ThemeData_localize(theme, theme.typography.geometryThemeFor$1(category));
    },
    Theme: function Theme(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.isMaterialAppTheme = t1;
      _.child = t2;
      _.key = t3;
    },
    _InheritedTheme: function _InheritedTheme(t0, t1, t2) {
      this.theme = t0;
      this.child = t1;
      this.key = t2;
    },
    ThemeDataTween: function ThemeDataTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    AnimatedTheme: function AnimatedTheme(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.data = t0;
      _.isMaterialAppTheme = t1;
      _.child = t2;
      _.curve = t3;
      _.duration = t4;
      _.onEnd = t5;
      _.key = t6;
    },
    _AnimatedThemeState: function _AnimatedThemeState(t0, t1) {
      var _ = this;
      _._implicit_animations$_animation = _._implicit_animations$_controller = _._theme$_data = null;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _AnimatedThemeState_forEachTween_closure: function _AnimatedThemeState_forEachTween_closure() {
    },
    AlignmentGeometry_lerp: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      if (a instanceof K.Alignment && b instanceof K.Alignment)
        return K.Alignment_lerp(a, b, t);
      if (a instanceof K.AlignmentDirectional && b instanceof K.AlignmentDirectional)
        return K.AlignmentDirectional_lerp(a, b, t);
      return new K._MixedAlignment(P.lerpDouble(a.get$_x(), b.get$_x(), t), P.lerpDouble(a.get$_alignment$_start(a), b.get$_alignment$_start(b), t), P.lerpDouble(a.get$_y(), b.get$_y(), t));
    },
    Alignment_lerp: function(a, b, t) {
      return new K.Alignment(P.lerpDouble(a.x, b.x, t), P.lerpDouble(a.y, b.y, t));
    },
    Alignment__stringify: function(x, y) {
      var t2, t3,
        t1 = x === -1;
      if (t1 && y === -1)
        return "topLeft";
      t2 = x === 0;
      if (t2 && y === -1)
        return "topCenter";
      t3 = x === 1;
      if (t3 && y === -1)
        return "topRight";
      if (t1 && y === 0)
        return "centerLeft";
      if (t2 && y === 0)
        return "center";
      if (t3 && y === 0)
        return "centerRight";
      if (t1 && y === 1)
        return "bottomLeft";
      if (t2 && y === 1)
        return "bottomCenter";
      if (t3 && y === 1)
        return "bottomRight";
      return "Alignment(" + J.toStringAsFixed$1$n(x, 1) + ", " + J.toStringAsFixed$1$n(y, 1) + ")";
    },
    AlignmentDirectional_lerp: function(a, b, t) {
      return new K.AlignmentDirectional(P.lerpDouble(a.start, b.start, t), P.lerpDouble(a.y, b.y, t));
    },
    AlignmentDirectional__stringify: function(start, y) {
      var t2, t3,
        t1 = start === -1;
      if (t1 && y === -1)
        return "AlignmentDirectional.topStart";
      t2 = start === 0;
      if (t2 && y === -1)
        return "AlignmentDirectional.topCenter";
      t3 = start === 1;
      if (t3 && y === -1)
        return "AlignmentDirectional.topEnd";
      if (t1 && y === 0)
        return "AlignmentDirectional.centerStart";
      if (t2 && y === 0)
        return "AlignmentDirectional.center";
      if (t3 && y === 0)
        return "AlignmentDirectional.centerEnd";
      if (t1 && y === 1)
        return "AlignmentDirectional.bottomStart";
      if (t2 && y === 1)
        return "AlignmentDirectional.bottomCenter";
      if (t3 && y === 1)
        return "AlignmentDirectional.bottomEnd";
      return "AlignmentDirectional(" + J.toStringAsFixed$1$n(start, 1) + ", " + J.toStringAsFixed$1$n(y, 1) + ")";
    },
    AlignmentGeometry: function AlignmentGeometry() {
    },
    Alignment: function Alignment(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    AlignmentDirectional: function AlignmentDirectional(t0, t1) {
      this.start = t0;
      this.y = t1;
    },
    _MixedAlignment: function _MixedAlignment(t0, t1, t2) {
      this._x = t0;
      this._alignment$_start = t1;
      this._y = t2;
    },
    BorderRadiusGeometry_lerp: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        a = C.BorderRadius_tLn;
      return a.add$1(0, (b == null ? C.BorderRadius_tLn : b).subtract$1(a).$mul(0, t));
    },
    BorderRadius$circular: function(radius) {
      var t1 = new P.Radius(radius, radius);
      return new K.BorderRadius(t1, t1, t1, t1);
    },
    BorderRadius_lerp: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      return new K.BorderRadius(P.Radius_lerp(a.topLeft, b.topLeft, t), P.Radius_lerp(a.topRight, b.topRight, t), P.Radius_lerp(a.bottomLeft, b.bottomLeft, t), P.Radius_lerp(a.bottomRight, b.bottomRight, t));
    },
    BorderRadiusGeometry: function BorderRadiusGeometry() {
    },
    BorderRadius: function BorderRadius(t0, t1, t2, t3) {
      var _ = this;
      _.topLeft = t0;
      _.topRight = t1;
      _.bottomLeft = t2;
      _.bottomRight = t3;
    },
    _MixedBorderRadius: function _MixedBorderRadius(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._topLeft = t0;
      _._topRight = t1;
      _._bottomLeft = t2;
      _._bottomRight = t3;
      _._topStart = t4;
      _._topEnd = t5;
      _._bottomStart = t6;
      _._bottomEnd = t7;
    },
    PaintingContext__repaintCompositedChild: function(child, childContext, debugAlsoPaintedParent) {
      var childLayer = type$.OffsetLayer._as(child._layer);
      if (childLayer == null)
        child._layer = new T.OffsetLayer(C.Offset_0_0);
      else
        childLayer.removeAllChildren$0();
      childContext = new K.PaintingContext(child._layer, child.get$paintBounds());
      child._paintWithContext$2(childContext, C.Offset_0_0);
      childContext.stopRecordingIfNeeded$0();
    },
    RenderObject__cleanChildRelayoutBoundary: function(child) {
      child._cleanRelayoutBoundary$0();
    },
    FlutterErrorDetailsForRendering$: function(context, exception, informationCollector, library, renderObject, stack) {
      return new K.FlutterErrorDetailsForRendering(exception, stack, library, context, informationCollector, false);
    },
    _SemanticsGeometry__transformRect: function(rect, transform) {
      var t1;
      if (rect == null)
        return null;
      if (!rect.get$isEmpty(rect)) {
        t1 = transform._m4storage;
        t1 = t1[0] === 0 && t1[1] === 0 && t1[2] === 0 && t1[3] === 0 && t1[4] === 0 && t1[5] === 0 && t1[6] === 0 && t1[7] === 0 && t1[8] === 0 && t1[9] === 0 && t1[10] === 0 && t1[11] === 0 && t1[12] === 0 && t1[13] === 0 && t1[14] === 0 && t1[15] === 0;
      } else
        t1 = true;
      if (t1)
        return C.Rect_0_0_0_0;
      return T.MatrixUtils_inverseTransformRect(transform, rect);
    },
    _SemanticsGeometry__applyIntermediatePaintTransforms: function(ancestor, child, transform, clipRectTransform) {
      var t1 = type$.RenderObject,
        intermediateParent = t1._as(child._node$_parent);
      for (; intermediateParent !== ancestor;) {
        intermediateParent.applyPaintTransform$2(child, transform);
        intermediateParent = t1._as(intermediateParent._node$_parent);
        child = t1._as(child._node$_parent);
      }
      ancestor.applyPaintTransform$2(child, transform);
      ancestor.applyPaintTransform$2(child, clipRectTransform);
    },
    _SemanticsGeometry__intersectRects: function(a, b) {
      if (a == null)
        return b;
      if (b == null)
        return a;
      return a.intersect$1(b);
    },
    ParentData: function ParentData() {
    },
    PaintingContext: function PaintingContext(t0, t1) {
      var _ = this;
      _._containerLayer = t0;
      _.estimatedBounds = t1;
      _._object$_canvas = _._object$_recorder = _._currentLayer = null;
    },
    PaintingContext_pushClipRect_closure: function PaintingContext_pushClipRect_closure(t0, t1, t2) {
      this.$this = t0;
      this.painter = t1;
      this.offset = t2;
    },
    PaintingContext_pushClipPath_closure: function PaintingContext_pushClipPath_closure(t0, t1, t2) {
      this.$this = t0;
      this.painter = t1;
      this.offset = t2;
    },
    Constraints: function Constraints() {
    },
    SemanticsHandle: function SemanticsHandle(t0, t1) {
      this._object$_owner = t0;
      this.listener = t1;
    },
    PipelineOwner: function PipelineOwner(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.onNeedVisualUpdate = t0;
      _.onSemanticsOwnerCreated = t1;
      _.onSemanticsOwnerDisposed = t2;
      _._rootNode = null;
      _._nodesNeedingLayout = t3;
      _._debugAllowMutationsToDirtySubtrees = _._debugDoingLayout = false;
      _._nodesNeedingCompositingBitsUpdate = t4;
      _._nodesNeedingPaint = t5;
      _._debugDoingPaint = false;
      _._semanticsOwner = null;
      _._outstandingSemanticsHandles = 0;
      _._debugDoingSemantics = false;
      _._nodesNeedingSemantics = t6;
    },
    PipelineOwner_flushLayout_closure: function PipelineOwner_flushLayout_closure() {
    },
    PipelineOwner_flushCompositingBits_closure: function PipelineOwner_flushCompositingBits_closure() {
    },
    PipelineOwner_flushPaint_closure: function PipelineOwner_flushPaint_closure() {
    },
    PipelineOwner_flushSemantics_closure: function PipelineOwner_flushSemantics_closure() {
    },
    RenderObject: function RenderObject() {
    },
    RenderObject__debugReportException_closure: function RenderObject__debugReportException_closure(t0) {
      this.$this = t0;
    },
    RenderObject_invokeLayoutCallback_closure: function RenderObject_invokeLayoutCallback_closure(t0, t1, t2) {
      this.$this = t0;
      this.callback = t1;
      this.T = t2;
    },
    RenderObject__updateCompositingBits_closure: function RenderObject__updateCompositingBits_closure(t0) {
      this.$this = t0;
    },
    RenderObject_clearSemantics_closure: function RenderObject_clearSemantics_closure() {
    },
    RenderObject__getSemanticsForParent_closure: function RenderObject__getSemanticsForParent_closure(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.childrenMergeIntoParent = t2;
      _.fragments = t3;
      _.toBeMarkedExplicit = t4;
      _.config = t5;
      _.producesForkingFragment = t6;
    },
    RenderObjectWithChildMixin: function RenderObjectWithChildMixin() {
    },
    ContainerParentDataMixin: function ContainerParentDataMixin() {
    },
    ContainerRenderObjectMixin: function ContainerRenderObjectMixin() {
    },
    RelayoutWhenSystemFontsChangeMixin: function RelayoutWhenSystemFontsChangeMixin() {
    },
    FlutterErrorDetailsForRendering: function FlutterErrorDetailsForRendering(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    _SemanticsFragment: function _SemanticsFragment() {
    },
    _ContainerSemanticsFragment: function _ContainerSemanticsFragment(t0, t1) {
      this.interestingFragments = t0;
      this.dropsSemanticsOfPreviousSiblings = t1;
    },
    _InterestingSemanticsFragment: function _InterestingSemanticsFragment() {
    },
    _RootSemanticsFragment: function _RootSemanticsFragment(t0, t1, t2) {
      var _ = this;
      _._object$_children = t0;
      _._ancestorChain = t1;
      _._object$_tagsForChildren = null;
      _.dropsSemanticsOfPreviousSiblings = t2;
    },
    _RootSemanticsFragment_compileChildren_closure: function _RootSemanticsFragment_compileChildren_closure(t0, t1) {
      this.parentSemanticsClipRect = t0;
      this.parentPaintClipRect = t1;
    },
    _SwitchableSemanticsFragment: function _SwitchableSemanticsFragment(t0, t1, t2, t3, t4) {
      var _ = this;
      _._mergeIntoParent = t0;
      _._config = t1;
      _._isConfigWritable = false;
      _._object$_children = t2;
      _._isExplicit = false;
      _._ancestorChain = t3;
      _._object$_tagsForChildren = null;
      _.dropsSemanticsOfPreviousSiblings = t4;
    },
    _SwitchableSemanticsFragment_compileChildren_closure: function _SwitchableSemanticsFragment_compileChildren_closure(t0) {
      this.node = t0;
    },
    _AbortingSemanticsFragment: function _AbortingSemanticsFragment(t0, t1) {
      this._ancestorChain = t0;
      this._object$_tagsForChildren = null;
      this.dropsSemanticsOfPreviousSiblings = t1;
    },
    _SemanticsGeometry: function _SemanticsGeometry() {
      var _ = this;
      _._object$_rect = _._object$_transform = _._semanticsClipRect = _._paintClipRect = null;
      _._markAsHidden = false;
    },
    DiagnosticsDebugCreator: function DiagnosticsDebugCreator(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._diagnostics$_value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    _RenderObject_AbstractNode_DiagnosticableTreeMixin: function _RenderObject_AbstractNode_DiagnosticableTreeMixin() {
    },
    RenderStack_layoutPositionedChild: function(child, childParentData, size, alignment) {
      var childConstraints, x, t2, hasVisualOverflow, y,
        t1 = childParentData.left;
      if (t1 != null && childParentData.right != null)
        childConstraints = C.BoxConstraints_mlX0.tighten$1$width(size._dx - childParentData.right - t1);
      else {
        t1 = childParentData.width;
        childConstraints = t1 != null ? C.BoxConstraints_mlX0.tighten$1$width(t1) : C.BoxConstraints_mlX0;
      }
      t1 = childParentData.top;
      if (t1 != null && childParentData.bottom != null)
        childConstraints = childConstraints.tighten$1$height(size._dy - childParentData.bottom - t1);
      child.layout$2$parentUsesSize(childConstraints, true);
      x = childParentData.left;
      if (!(x != null)) {
        t1 = childParentData.right;
        t2 = child._size;
        x = t1 != null ? size._dx - t1 - t2._dx : alignment.alongOffset$1(type$.Offset._as(size.$sub(0, t2)))._dx;
      }
      hasVisualOverflow = (x < 0 || x + child._size._dx > size._dx) && true;
      y = childParentData.top;
      if (!(y != null)) {
        t1 = childParentData.bottom;
        t2 = child._size;
        y = t1 != null ? size._dy - t1 - t2._dy : alignment.alongOffset$1(type$.Offset._as(size.$sub(0, t2)))._dy;
      }
      if (y < 0 || y + child._size._dy > size._dy)
        hasVisualOverflow = true;
      childParentData.offset = new P.Offset(x, y);
      return hasVisualOverflow;
    },
    RelativeRect: function RelativeRect(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    StackParentData: function StackParentData(t0, t1, t2) {
      var _ = this;
      _.height = _.width = _.left = _.bottom = _.right = _.top = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    StackFit: function StackFit(t0) {
      this._stack$_name = t0;
    },
    Overflow: function Overflow() {
    },
    RenderStack: function RenderStack(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._stack$_hasVisualOverflow = false;
      _._resolvedAlignment = null;
      _._alignment = t0;
      _._stack$_textDirection = t1;
      _._fit = t2;
      _._overflow = t3;
      _.ContainerRenderObjectMixin__childCount = t4;
      _.ContainerRenderObjectMixin__firstChild = t5;
      _.ContainerRenderObjectMixin__lastChild = t6;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderStack_RenderBox_ContainerRenderObjectMixin: function _RenderStack_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    Navigator_maybePop: function(context) {
      return K.Navigator_of(context).maybePop$1(null);
    },
    Navigator_of: function(context) {
      var $navigator = context.findAncestorStateOfType$1$0(type$.NavigatorState);
      return $navigator;
    },
    Navigator_defaultGenerateInitialRoutes: function($navigator, initialRouteName) {
      var t1, routeParts, t2, _i, t3, routeName, _null = null,
        result = H.setRuntimeTypeInfo([], type$.JSArray_Route_dynamic);
      if (C.JSString_methods.startsWith$1(initialRouteName, "/") && initialRouteName.length > 1) {
        initialRouteName = C.JSString_methods.substring$1(initialRouteName, 1);
        t1 = type$.dynamic;
        result.push($navigator._routeNamed$1$3$allowNull$arguments("/", true, _null, t1));
        routeParts = initialRouteName.split("/");
        if (initialRouteName.length !== 0)
          for (t2 = routeParts.length, _i = 0, t3 = ""; _i < t2; ++_i, t3 = routeName) {
            routeName = t3 + ("/" + H.S(routeParts[_i]));
            result.push($navigator._routeNamed$1$3$allowNull$arguments(routeName, true, _null, t1));
          }
        if (C.JSArray_methods.get$last(result) == null)
          C.JSArray_methods.set$length(result, 0);
      } else if (initialRouteName !== "/")
        result.push($navigator._routeNamed$1$3$allowNull$arguments(initialRouteName, true, _null, type$.dynamic));
      if (!!result.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeWhere"));
      C.JSArray_methods._removeWhere$2(result, new K.Navigator_defaultGenerateInitialRoutes_closure(), true);
      if (result.length === 0)
        result.push($navigator._routeNamed$1$2$arguments("/", _null, type$.dynamic));
      return result;
    },
    _RouteEntry_isRoutePredicate: function(route) {
      return new K._RouteEntry_isRoutePredicate_closure(route);
    },
    RoutePopDisposition: function RoutePopDisposition(t0) {
      this._navigator$_name = t0;
    },
    Route: function Route() {
    },
    Route_didPush_closure: function Route_didPush_closure(t0) {
      this.$this = t0;
    },
    Route_didAdd_closure: function Route_didAdd_closure(t0) {
      this.$this = t0;
    },
    Route_isCurrent_closure: function Route_isCurrent_closure() {
    },
    Route_isFirst_closure: function Route_isFirst_closure() {
    },
    Route_isActive_closure: function Route_isActive_closure() {
    },
    RouteSettings: function RouteSettings(t0, t1) {
      this.name = t0;
      this.$arguments = t1;
    },
    Page: function Page() {
    },
    NavigatorObserver: function NavigatorObserver() {
    },
    RouteTransitionRecord: function RouteTransitionRecord() {
    },
    TransitionDelegate: function TransitionDelegate() {
    },
    DefaultTransitionDelegate: function DefaultTransitionDelegate() {
    },
    Navigator: function Navigator(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.initialRoute = t0;
      _.onGenerateRoute = t1;
      _.onUnknownRoute = t2;
      _.observers = t3;
      _.onGenerateInitialRoutes = t4;
      _.key = t5;
    },
    Navigator_defaultGenerateInitialRoutes_closure: function Navigator_defaultGenerateInitialRoutes_closure() {
    },
    _RouteLifecycle: function _RouteLifecycle(t0, t1) {
      this.index = t0;
      this._navigator$_name = t1;
    },
    _RouteEntry: function _RouteEntry(t0, t1) {
      var _ = this;
      _.route = t0;
      _.currentState = t1;
      _.lastAnnouncedNextRoute = _.lastAnnouncedPoppedNextRoute = _.lastAnnouncedPreviousRoute = null;
      _.doingPop = false;
      _._reportRemovalToObserver = true;
      _._debugWaitingForExitDecision = false;
    },
    _RouteEntry_handlePush_closure: function _RouteEntry_handlePush_closure(t0, t1) {
      this.$this = t0;
      this.navigator = t1;
    },
    _RouteEntry_closure1: function _RouteEntry_closure1() {
    },
    _RouteEntry_closure: function _RouteEntry_closure() {
    },
    _RouteEntry_closure0: function _RouteEntry_closure0() {
    },
    _RouteEntry_isRoutePredicate_closure: function _RouteEntry_isRoutePredicate_closure(t0) {
      this.route = t0;
    },
    NavigatorState: function NavigatorState(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._overlayKey = t0;
      _._history = t1;
      _.focusScopeNode = t2;
      _._debugLocked = false;
      _._lastAnnouncedRouteName = null;
      _._debugUpdatingPage = false;
      _._userGesturesInProgressCount = 0;
      _.userGestureInProgressNotifier = t3;
      _._activePointers = t4;
      _.TickerProviderStateMixin__tickers = t5;
      _._widget = null;
      _._debugLifecycleState = t6;
      _._framework$_element = null;
    },
    NavigatorState_initState_closure: function NavigatorState_initState_closure() {
    },
    NavigatorState__flushHistoryUpdates_closure: function NavigatorState__flushHistoryUpdates_closure() {
    },
    NavigatorState_maybePop_closure: function NavigatorState_maybePop_closure() {
    },
    NavigatorState_maybePop_closure0: function NavigatorState_maybePop_closure0() {
    },
    NavigatorState__cancelActivePointers_closure: function NavigatorState__cancelActivePointers_closure(t0) {
      this.absorber = t0;
    },
    _NavigatorState_State_TickerProviderStateMixin: function _NavigatorState_State_TickerProviderStateMixin() {
    },
    ScrollBehavior: function ScrollBehavior() {
    },
    ScrollConfiguration: function ScrollConfiguration(t0, t1, t2) {
      this.behavior = t0;
      this.child = t1;
      this.key = t2;
    },
    SlideTransition$: function(child, position, textDirection, transformHitTests) {
      return new K.SlideTransition(textDirection, transformHitTests, child, position, null);
    },
    ScaleTransition$: function(child, scale) {
      return new K.ScaleTransition(child, scale, null);
    },
    RotationTransition$: function(child, turns) {
      return new K.RotationTransition(child, turns, null);
    },
    FadeTransition$: function(child, opacity) {
      return new K.FadeTransition(opacity, child, null);
    },
    AnimatedBuilder$: function(animation, builder, child) {
      return new K.AnimatedBuilder(builder, child, animation, null);
    },
    AnimatedWidget: function AnimatedWidget() {
    },
    _AnimatedState: function _AnimatedState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _AnimatedState__handleChange_closure: function _AnimatedState__handleChange_closure() {
    },
    SlideTransition: function SlideTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _.textDirection = t0;
      _.transformHitTests = t1;
      _.child = t2;
      _.listenable = t3;
      _.key = t4;
    },
    ScaleTransition: function ScaleTransition(t0, t1, t2) {
      this.child = t0;
      this.listenable = t1;
      this.key = t2;
    },
    RotationTransition: function RotationTransition(t0, t1, t2) {
      this.child = t0;
      this.listenable = t1;
      this.key = t2;
    },
    FadeTransition: function FadeTransition(t0, t1, t2) {
      this.opacity = t0;
      this.child = t1;
      this.key = t2;
    },
    DecoratedBoxTransition: function DecoratedBoxTransition(t0, t1, t2, t3) {
      var _ = this;
      _.decoration = t0;
      _.child = t1;
      _.listenable = t2;
      _.key = t3;
    },
    AnimatedBuilder: function AnimatedBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.builder = t0;
      _.child = t1;
      _.listenable = t2;
      _.key = t3;
    },
    BenchBuildMaterialCheckbox: function BenchBuildMaterialCheckbox(t0, t1) {
      var _ = this;
      _._drawFrameStopwatch = _._runCompleter = _.profile = _.didStop = null;
      _.showWidget = true;
      _._hostState = null;
      _.isTracingEnabled = t0;
      _.name = t1;
    },
    BenchBuildMaterialCheckbox_createWidget_closure: function BenchBuildMaterialCheckbox_createWidget_closure(t0) {
      this.$this = t0;
    },
    BenchBuildMaterialCheckbox__buildRow_closure: function BenchBuildMaterialCheckbox__buildRow_closure() {
    },
    BenchBuildMaterialCheckbox__buildRow__closure: function BenchBuildMaterialCheckbox__buildRow__closure() {
    }
  },
  L = {CupertinoLocalizations: function CupertinoLocalizations() {
    }, _CupertinoLocalizationsDelegate: function _CupertinoLocalizationsDelegate() {
    }, DefaultCupertinoLocalizations: function DefaultCupertinoLocalizations() {
    }, FloatingLabelBehavior: function FloatingLabelBehavior() {
    }, InputDecorationTheme: function InputDecorationTheme() {
    }, _InputDecorationTheme_Object_Diagnosticable: function _InputDecorationTheme_Object_Diagnosticable() {
    }, RenderPerformanceOverlay: function RenderPerformanceOverlay(t0, t1, t2, t3) {
      var _ = this;
      _._optionsMask = t0;
      _._rasterizerThreshold = t1;
      _._checkerboardRasterCacheImages = t2;
      _._checkerboardOffscreenLayers = t3;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    }, AutomaticKeepAlive: function AutomaticKeepAlive(t0, t1) {
      this.child = t0;
      this.key = t1;
    }, _AutomaticKeepAliveState: function _AutomaticKeepAliveState(t0) {
      var _ = this;
      _._automatic_keep_alive$_child = _._handles = null;
      _._keepingAlive = false;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    }, _AutomaticKeepAliveState__addClient_closure: function _AutomaticKeepAliveState__addClient_closure(t0) {
      this.$this = t0;
    }, _AutomaticKeepAliveState__getChildElement_closure: function _AutomaticKeepAliveState__getChildElement_closure(t0) {
      this._box_0 = t0;
    }, _AutomaticKeepAliveState__createCallback_closure: function _AutomaticKeepAliveState__createCallback_closure(t0, t1) {
      this.$this = t0;
      this.handle = t1;
    }, _AutomaticKeepAliveState__createCallback__closure: function _AutomaticKeepAliveState__createCallback__closure(t0) {
      this.$this = t0;
    }, _AutomaticKeepAliveState__createCallback__closure0: function _AutomaticKeepAliveState__createCallback__closure0(t0) {
      this.$this = t0;
    }, _AutomaticKeepAliveState__createCallback___closure: function _AutomaticKeepAliveState__createCallback___closure(t0) {
      this.$this = t0;
    }, KeepAliveNotification: function KeepAliveNotification(t0) {
      this.handle = t0;
    }, KeepAliveHandle: function KeepAliveHandle(t0) {
      this.ChangeNotifier__listeners = t0;
    }, AutomaticKeepAliveClientMixin: function AutomaticKeepAliveClientMixin() {
    },
    Focus$: function(autofocus, canRequestFocus, child, debugLabel, focusNode, includeSemantics, key, onFocusChange, onKey, skipTraversal) {
      return new L.Focus(debugLabel, child, onKey, onFocusChange, autofocus, focusNode, skipTraversal, includeSemantics, canRequestFocus, key);
    },
    Focus_of: function(context, nullOk, scopeOk) {
      var marker = context.dependOnInheritedWidgetOfExactType$1$0(type$._FocusMarker),
        node = marker == null ? null : marker.notifier;
      if (node == null)
        return null;
      return node;
    },
    FocusScope$: function(autofocus, child, key, node) {
      var _null = null;
      return new L.FocusScope(_null, child, _null, _null, autofocus, node, _null, true, _null, key);
    },
    FocusScope_of: function(context) {
      var marker = context.dependOnInheritedWidgetOfExactType$1$0(type$._FocusMarker),
        t1 = marker == null ? null : marker.notifier;
      t1 = t1 == null ? null : t1.get$nearestScope();
      return t1 == null ? context._owner.focusManager.rootScope : t1;
    },
    Focus: function Focus(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.debugLabel = t0;
      _.child = t1;
      _.onKey = t2;
      _.onFocusChange = t3;
      _.autofocus = t4;
      _.focusNode = t5;
      _.skipTraversal = t6;
      _.includeSemantics = t7;
      _.canRequestFocus = t8;
      _.key = t9;
    },
    _FocusState: function _FocusState(t0) {
      var _ = this;
      _._canRequestFocus = _._hasPrimaryFocus = _._internalNode = null;
      _._didAutofocus = false;
      _._widget = _._focusAttachment = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _FocusState__handleFocusChanged_closure: function _FocusState__handleFocusChanged_closure(t0, t1) {
      this.$this = t0;
      this.hasPrimaryFocus = t1;
    },
    _FocusState__handleFocusChanged_closure0: function _FocusState__handleFocusChanged_closure0(t0, t1) {
      this.$this = t0;
      this.canRequestFocus = t1;
    },
    FocusScope: function FocusScope(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.debugLabel = t0;
      _.child = t1;
      _.onKey = t2;
      _.onFocusChange = t3;
      _.autofocus = t4;
      _.focusNode = t5;
      _.skipTraversal = t6;
      _.includeSemantics = t7;
      _.canRequestFocus = t8;
      _.key = t9;
    },
    _FocusScopeState: function _FocusScopeState(t0) {
      var _ = this;
      _._canRequestFocus = _._hasPrimaryFocus = _._internalNode = null;
      _._didAutofocus = false;
      _._widget = _._focusAttachment = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _FocusMarker: function _FocusMarker(t0, t1, t2) {
      this.notifier = t0;
      this.child = t1;
      this.key = t2;
    },
    Icon: function Icon(t0, t1) {
      this.icon = t0;
      this.key = t1;
    },
    _loadAll: function(locale, allDelegates) {
      var types, delegates, _i, delegate, t3, t4, inputValue, futureValue, _box_1 = {},
        t1 = type$.Type,
        t2 = type$.dynamic,
        output = P.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      _box_1.pendingList = null;
      types = P.LinkedHashSet_LinkedHashSet$_empty(t1);
      delegates = H.setRuntimeTypeInfo([], type$.JSArray_LocalizationsDelegate_dynamic);
      for (t1 = allDelegates.length, _i = 0; _i < allDelegates.length; allDelegates.length === t1 || (0, H.throwConcurrentModificationError)(allDelegates), ++_i) {
        delegate = allDelegates[_i];
        delegate.toString;
        t3 = H.instanceType(delegate)._eval$1("LocalizationsDelegate.T");
        if (!types.contains$1(0, H.createRuntimeType(t3)) && delegate.isSupported$1(locale)) {
          types.add$1(0, H.createRuntimeType(t3));
          delegates.push(delegate);
        }
      }
      for (t1 = delegates.length, t3 = type$.JSArray__Pending, _i = 0; _i < delegates.length; delegates.length === t1 || (0, H.throwConcurrentModificationError)(delegates), ++_i) {
        t4 = {};
        delegate = delegates[_i];
        inputValue = delegate.load$1(0, locale);
        t4.completedValue = null;
        futureValue = inputValue.then$1$1(new L._loadAll_closure(t4), t2);
        if (t4.completedValue != null)
          output.$indexSet(0, H.createRuntimeType(H._instanceType(delegate)._eval$1("LocalizationsDelegate.T")), t4.completedValue);
        else {
          t4 = _box_1.pendingList;
          if (t4 == null)
            t4 = _box_1.pendingList = H.setRuntimeTypeInfo([], t3);
          t4.push(new L._Pending(delegate, futureValue));
        }
      }
      t1 = _box_1.pendingList;
      if (t1 == null)
        return new O.SynchronousFuture(output, type$.SynchronousFuture_Map_Type_dynamic);
      return P.Future_wait(new H.MappedListIterable(t1, new L._loadAll_closure0(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Future<@>>")), t2).then$1$1(new L._loadAll_closure1(_box_1, output), type$.Map_Type_dynamic);
    },
    Localizations_localeOf: function(context, nullOk) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$._LocalizationsScope);
      if (scope == null)
        return null;
      return scope.localizationsState._localizations$_locale;
    },
    Localizations_of: function(context, type, $T) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$._LocalizationsScope),
        t1 = scope == null ? null : scope.localizationsState;
      return t1 == null ? null : $T._as(J.$index$asx(t1._typeToResources, type));
    },
    _Pending: function _Pending(t0, t1) {
      this.delegate = t0;
      this.futureValue = t1;
    },
    _loadAll_closure: function _loadAll_closure(t0) {
      this._box_0 = t0;
    },
    _loadAll_closure0: function _loadAll_closure0() {
    },
    _loadAll_closure1: function _loadAll_closure1(t0, t1) {
      this._box_1 = t0;
      this.output = t1;
    },
    LocalizationsDelegate: function LocalizationsDelegate() {
    },
    WidgetsLocalizations: function WidgetsLocalizations() {
    },
    _WidgetsLocalizationsDelegate: function _WidgetsLocalizationsDelegate() {
    },
    DefaultWidgetsLocalizations: function DefaultWidgetsLocalizations() {
    },
    _LocalizationsScope: function _LocalizationsScope(t0, t1, t2, t3) {
      var _ = this;
      _.localizationsState = t0;
      _.typeToResources = t1;
      _.child = t2;
      _.key = t3;
    },
    Localizations: function Localizations(t0, t1, t2, t3) {
      var _ = this;
      _.locale = t0;
      _.delegates = t1;
      _.child = t2;
      _.key = t3;
    },
    _LocalizationsState: function _LocalizationsState(t0, t1, t2) {
      var _ = this;
      _._localizedResourcesScopeKey = t0;
      _._typeToResources = t1;
      _._widget = _._localizations$_locale = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _LocalizationsState_load_closure: function _LocalizationsState_load_closure(t0) {
      this._box_0 = t0;
    },
    _LocalizationsState_load_closure0: function _LocalizationsState_load_closure0(t0, t1) {
      this.$this = t0;
      this.locale = t1;
    },
    _LocalizationsState_load__closure: function _LocalizationsState_load__closure(t0, t1, t2) {
      this.$this = t0;
      this.value = t1;
      this.locale = t2;
    },
    GlowingOverscrollIndicator$: function(axisDirection, child, color) {
      return new L.GlowingOverscrollIndicator(axisDirection, color, child, null);
    },
    _GlowController$: function(axis, color, vsync) {
      var decelerator, _null = null,
        t1 = type$.Tween_double,
        t2 = new R.Tween(0, 0, t1),
        t3 = new R.Tween(0, 0, t1),
        t4 = new L._GlowController(C._GlowState_0, t2, t3, 0.5, 0.5, color, axis, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function)),
        t5 = G.AnimationController$(_null, _null, 0, _null, 1, _null, vsync);
      t5.addStatusListener$1(t4.get$_changePhase());
      t4._glowController = t5;
      decelerator = S.CurvedAnimation$(C.C__DecelerateCurve, t5, _null);
      decelerator.parent.addListener$1(0, t4.get$notifyListeners());
      type$.Animation_double._as(decelerator);
      t4._glowOpacity = new R._AnimatedEvaluation(decelerator, t2, t1._eval$1("_AnimatedEvaluation<Animatable.T>"));
      t4._glowSize = new R._AnimatedEvaluation(decelerator, t3, t1._eval$1("_AnimatedEvaluation<Animatable.T>"));
      t4._displacementTicker = vsync.createTicker$1(t4.get$_tickDisplacement());
      return t4;
    },
    GlowingOverscrollIndicator: function GlowingOverscrollIndicator(t0, t1, t2, t3) {
      var _ = this;
      _.axisDirection = t0;
      _.color = t1;
      _.child = t2;
      _.key = t3;
    },
    _GlowingOverscrollIndicatorState: function _GlowingOverscrollIndicatorState(t0, t1, t2) {
      var _ = this;
      _._lastNotificationType = _._leadingAndTrailingListener = _._trailingController = _._leadingController = null;
      _._accepted = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _GlowState: function _GlowState(t0) {
      this._overscroll_indicator$_name = t0;
    },
    _GlowController: function _GlowController(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._overscroll_indicator$_state = t0;
      _._pullRecedeTimer = _._glowController = null;
      _._glowOpacityTween = t1;
      _._glowOpacity = null;
      _._glowSizeTween = t2;
      _._displacementTickerLastElapsed = _._displacementTicker = _._glowSize = null;
      _._displacementTarget = t3;
      _._displacement = t4;
      _._pullDistance = 0;
      _._overscroll_indicator$_color = t5;
      _._axis = t6;
      _.ChangeNotifier__listeners = t7;
    },
    _GlowController_pull_closure: function _GlowController_pull_closure(t0) {
      this.$this = t0;
    },
    _GlowingOverscrollIndicatorPainter: function _GlowingOverscrollIndicatorPainter(t0, t1, t2, t3) {
      var _ = this;
      _.leadingController = t0;
      _.trailingController = t1;
      _.axisDirection = t2;
      _._repaint = t3;
    },
    OverscrollIndicatorNotification: function OverscrollIndicatorNotification(t0, t1) {
      this.leading = t0;
      this.ViewportNotificationMixin__depth = t1;
    },
    _OverscrollIndicatorNotification_Notification_ViewportNotificationMixin: function _OverscrollIndicatorNotification_Notification_ViewportNotificationMixin() {
    },
    __GlowingOverscrollIndicatorState_State_TickerProviderStateMixin: function __GlowingOverscrollIndicatorState_State_TickerProviderStateMixin() {
    },
    PerformanceOverlay: function PerformanceOverlay(t0, t1, t2, t3) {
      var _ = this;
      _.optionsMask = t0;
      _.checkerboardRasterCacheImages = t1;
      _.checkerboardOffscreenLayers = t2;
      _.key = t3;
    },
    BouncingScrollPhysics__applyFriction: function(extentOutside, absDelta, gamma) {
      var deltaToLimit, total;
      if (extentOutside > 0) {
        deltaToLimit = extentOutside / gamma;
        if (absDelta < deltaToLimit)
          return absDelta * gamma;
        total = 0 + extentOutside;
        absDelta -= deltaToLimit;
      } else
        total = 0;
      return total + absDelta;
    },
    ScrollPhysics: function ScrollPhysics(t0) {
      this.parent = t0;
    },
    BouncingScrollPhysics: function BouncingScrollPhysics(t0) {
      this.parent = t0;
    },
    ClampingScrollPhysics: function ClampingScrollPhysics(t0) {
      this.parent = t0;
    },
    AlwaysScrollableScrollPhysics: function AlwaysScrollableScrollPhysics(t0) {
      this.parent = t0;
    },
    DefaultTextStyle$: function(child, maxLines, overflow, softWrap, style, textAlign, textHeightBehavior, textWidthBasis) {
      return new L.DefaultTextStyle(style, textAlign, softWrap, overflow, maxLines, textWidthBasis, textHeightBehavior, child, null);
    },
    Text$: function(data, overflow, softWrap, style, textAlign) {
      return new L.Text(data, style, textAlign, softWrap, overflow, null);
    },
    DefaultTextStyle: function DefaultTextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.style = t0;
      _.textAlign = t1;
      _.softWrap = t2;
      _.overflow = t3;
      _.maxLines = t4;
      _.textWidthBasis = t5;
      _.textHeightBehavior = t6;
      _.child = t7;
      _.key = t8;
    },
    Text: function Text(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.data = t0;
      _.style = t1;
      _.textAlign = t2;
      _.softWrap = t3;
      _.overflow = t4;
      _.key = t5;
    }
  },
  D = {
    CupertinoPageRoute__isPopGestureEnabled: function(route) {
      var t1;
      if (route.get$isFirst())
        return false;
      if (route.get$willHandlePopInternally())
        return false;
      t1 = route._animationProxy;
      if (t1.get$status(t1) !== C.AnimationStatus_3)
        return false;
      t1 = route._secondaryAnimationProxy;
      if (t1.get$status(t1) !== C.AnimationStatus_0)
        return false;
      if (route._navigator$_navigator.userGestureInProgressNotifier._change_notifier$_value)
        return false;
      return true;
    },
    CupertinoPageRoute_buildPageTransitions: function(route, context, animation, secondaryAnimation, child, $T) {
      var t3, t4, t5, t6, t7,
        linearTransition = route._navigator$_navigator.userGestureInProgressNotifier._change_notifier$_value,
        t1 = linearTransition ? animation : S.CurvedAnimation$(C.Cubic_izR, animation, C.Cubic_OcD),
        t2 = $.$get$_kRightMiddleTween();
      t1.toString;
      t3 = type$.Animation_double;
      t3._as(t1);
      t2.toString;
      t4 = linearTransition ? secondaryAnimation : S.CurvedAnimation$(C.Cubic_izR, secondaryAnimation, C.Cubic_OcD);
      t5 = $.$get$_kMiddleLeftTween();
      t4.toString;
      t3._as(t4);
      t5.toString;
      t6 = linearTransition ? animation : S.CurvedAnimation$(C.Cubic_izR, animation, null);
      t7 = $.$get$_kGradientShadowTween();
      t6.toString;
      t3._as(t6);
      t7.toString;
      return new D.CupertinoPageTransition(new R._AnimatedEvaluation(t1, t2, t2.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), new R._AnimatedEvaluation(t4, t5, t5.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), new R._AnimatedEvaluation(t6, t7, H._instanceType(t7)._eval$1("_AnimatedEvaluation<Animatable.T>")), new D._CupertinoBackGestureDetector(child, new D.CupertinoPageRoute_buildPageTransitions_closure(route), new D.CupertinoPageRoute_buildPageTransitions_closure0(route, $T), null, $T._eval$1("_CupertinoBackGestureDetector<0>")), null);
    },
    _CupertinoEdgeShadowDecoration_lerp: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      t1 = t1 ? null : a.edgeGradient;
      return new D._CupertinoEdgeShadowDecoration(T.LinearGradient_lerp(t1, b == null ? null : b.edgeGradient, t));
    },
    CupertinoPageRoute_buildPageTransitions_closure: function CupertinoPageRoute_buildPageTransitions_closure(t0) {
      this.route = t0;
    },
    CupertinoPageRoute_buildPageTransitions_closure0: function CupertinoPageRoute_buildPageTransitions_closure0(t0, t1) {
      this.route = t0;
      this.T = t1;
    },
    CupertinoPageTransition: function CupertinoPageTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _._primaryPositionAnimation = t0;
      _._secondaryPositionAnimation = t1;
      _._primaryShadowAnimation = t2;
      _.child = t3;
      _.key = t4;
    },
    _CupertinoBackGestureDetector: function _CupertinoBackGestureDetector(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.enabledCallback = t1;
      _.onStartPopGesture = t2;
      _.key = t3;
      _.$ti = t4;
    },
    _CupertinoBackGestureDetectorState: function _CupertinoBackGestureDetectorState(t0, t1) {
      var _ = this;
      _._widget = _._recognizer = _._backGestureController = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
      _.$ti = t1;
    },
    _CupertinoBackGestureController: function _CupertinoBackGestureController(t0, t1) {
      this.controller = t0;
      this.navigator = t1;
    },
    _CupertinoBackGestureController_dragEnd_closure: function _CupertinoBackGestureController_dragEnd_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _CupertinoEdgeShadowDecoration: function _CupertinoEdgeShadowDecoration(t0) {
      this.edgeGradient = t0;
    },
    _CupertinoEdgeShadowPainter: function _CupertinoEdgeShadowPainter(t0, t1) {
      this._route$_decoration = t0;
      this.onChanged = t1;
    },
    Key: function Key() {
    },
    LocalKey: function LocalKey() {
    },
    ValueKey: function ValueKey(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    _TypeLiteral: function _TypeLiteral(t0) {
      this.$ti = t0;
    },
    GestureDisposition: function GestureDisposition(t0) {
      this._arena$_name = t0;
    },
    GestureArenaMember: function GestureArenaMember() {
    },
    GestureArenaEntry: function GestureArenaEntry(t0, t1, t2) {
      this._arena = t0;
      this._arena$_pointer = t1;
      this._member = t2;
    },
    _GestureArena: function _GestureArena(t0) {
      var _ = this;
      _.members = t0;
      _.isOpen = true;
      _.hasPendingSweep = _.isHeld = false;
      _.eagerWinner = null;
    },
    _GestureArena_toString_closure: function _GestureArena_toString_closure(t0) {
      this.$this = t0;
    },
    GestureArenaManager: function GestureArenaManager(t0) {
      this._arenas = t0;
    },
    GestureArenaManager_add_closure: function GestureArenaManager_add_closure(t0, t1) {
      this.$this = t0;
      this.pointer = t1;
    },
    GestureArenaManager__tryToResolveArena_closure: function GestureArenaManager__tryToResolveArena_closure(t0, t1, t2) {
      this.$this = t0;
      this.pointer = t1;
      this.state = t2;
    },
    _maxBy: function(input, keyFunc) {
      var maxValue, maxKey, _i, value, key;
      for (maxValue = null, maxKey = null, _i = 0; _i < 4; ++_i) {
        value = input[_i];
        key = keyFunc.call$1(value);
        if (maxKey == null || key > maxKey) {
          maxKey = key;
          maxValue = value;
        }
      }
      return maxValue;
    },
    MaterialPointArcTween: function MaterialPointArcTween(t0, t1) {
      var _ = this;
      _._arc$_dirty = true;
      _._endAngle = _._beginAngle = _._radius = _._center = null;
      _.begin = t0;
      _.end = t1;
    },
    MaterialPointArcTween__initialize_sweepAngle: function MaterialPointArcTween__initialize_sweepAngle(t0, t1) {
      this.$this = t0;
      this.distanceFromAtoB = t1;
    },
    _CornerId: function _CornerId(t0) {
      this._arc$_name = t0;
    },
    _Diagonal: function _Diagonal(t0, t1) {
      this.beginId = t0;
      this.endId = t1;
    },
    MaterialRectArcTween: function MaterialRectArcTween(t0, t1) {
      var _ = this;
      _._arc$_dirty = true;
      _._endArc = _._beginArc = null;
      _.begin = t0;
      _.end = t1;
    },
    MaterialRectArcTween__initialize_closure: function MaterialRectArcTween__initialize_closure(t0, t1) {
      this.$this = t0;
      this.centersVector = t1;
    },
    BottomAppBarTheme: function BottomAppBarTheme(t0, t1, t2) {
      this.color = t0;
      this.elevation = t1;
      this.shape = t2;
    },
    _BottomAppBarTheme_Object_Diagnosticable: function _BottomAppBarTheme_Object_Diagnosticable() {
    },
    ShaderWarmUp: function ShaderWarmUp() {
    },
    DefaultShaderWarmUp: function DefaultShaderWarmUp() {
    },
    FrictionSimulation: function FrictionSimulation(t0, t1, t2, t3, t4) {
      var _ = this;
      _._drag = t0;
      _._dragLog = t1;
      _._friction_simulation$_x = t2;
      _._v = t3;
      _.tolerance = t4;
    },
    GestureDetector$: function(behavior, child, dragStartBehavior, excludeFromSemantics, key, onDoubleTap, onHorizontalDragCancel, onHorizontalDragDown, onHorizontalDragEnd, onHorizontalDragUpdate, onLongPress, onPanDown, onPanEnd, onPanUpdate, onTap, onTapCancel, onTapDown, onVerticalDragEnd, onVerticalDragStart, onVerticalDragUpdate) {
      return new D.GestureDetector(child, onTapDown, onTap, onTapCancel, onDoubleTap, onLongPress, onVerticalDragStart, onVerticalDragUpdate, onVerticalDragEnd, onHorizontalDragDown, onHorizontalDragUpdate, onHorizontalDragEnd, onHorizontalDragCancel, onPanDown, onPanUpdate, onPanEnd, behavior, excludeFromSemantics, dragStartBehavior, key);
    },
    RawGestureDetector$: function(behavior, child, excludeFromSemantics, gestures, key, semantics) {
      return new D.RawGestureDetector(child, gestures, behavior, excludeFromSemantics, semantics, key);
    },
    GestureRecognizerFactory: function GestureRecognizerFactory() {
    },
    GestureRecognizerFactoryWithHandlers: function GestureRecognizerFactoryWithHandlers(t0, t1, t2) {
      this._constructor = t0;
      this._initializer = t1;
      this.$ti = t2;
    },
    GestureDetector: function GestureDetector(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _.child = t0;
      _.onTapDown = t1;
      _.onTap = t2;
      _.onTapCancel = t3;
      _.onDoubleTap = t4;
      _.onLongPress = t5;
      _.onVerticalDragStart = t6;
      _.onVerticalDragUpdate = t7;
      _.onVerticalDragEnd = t8;
      _.onHorizontalDragDown = t9;
      _.onHorizontalDragUpdate = t10;
      _.onHorizontalDragEnd = t11;
      _.onHorizontalDragCancel = t12;
      _.onPanDown = t13;
      _.onPanUpdate = t14;
      _.onPanEnd = t15;
      _.behavior = t16;
      _.excludeFromSemantics = t17;
      _.dragStartBehavior = t18;
      _.key = t19;
    },
    GestureDetector_build_closure: function GestureDetector_build_closure(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure0: function GestureDetector_build_closure0(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure1: function GestureDetector_build_closure1(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure2: function GestureDetector_build_closure2(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure3: function GestureDetector_build_closure3(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure4: function GestureDetector_build_closure4(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure5: function GestureDetector_build_closure5(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure6: function GestureDetector_build_closure6(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure7: function GestureDetector_build_closure7(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure8: function GestureDetector_build_closure8(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure9: function GestureDetector_build_closure9(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure10: function GestureDetector_build_closure10(t0) {
      this.$this = t0;
    },
    RawGestureDetector: function RawGestureDetector(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.gestures = t1;
      _.behavior = t2;
      _.excludeFromSemantics = t3;
      _.semantics = t4;
      _.key = t5;
    },
    RawGestureDetectorState: function RawGestureDetectorState(t0, t1) {
      var _ = this;
      _._recognizers = t0;
      _._widget = _._gesture_detector$_semantics = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _GestureSemantics: function _GestureSemantics(t0, t1, t2) {
      this.assignSemantics = t0;
      this.child = t1;
      this.key = t2;
    },
    SemanticsGestureDelegate: function SemanticsGestureDelegate() {
    },
    _DefaultSemanticsGestureDelegate: function _DefaultSemanticsGestureDelegate(t0) {
      this.detectorState = t0;
    },
    _DefaultSemanticsGestureDelegate__getTapHandler_closure: function _DefaultSemanticsGestureDelegate__getTapHandler_closure(t0) {
      this.tap = t0;
    },
    _DefaultSemanticsGestureDelegate__getLongPressHandler_closure: function _DefaultSemanticsGestureDelegate__getLongPressHandler_closure(t0) {
      this.longPress = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure(t0) {
      this.horizontal = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0(t0) {
      this.pan = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1(t0, t1) {
      this.horizontalHandler = t0;
      this.panHandler = t1;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure(t0) {
      this.vertical = t0;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0(t0) {
      this.pan = t0;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1(t0, t1) {
      this.verticalHandler = t0;
      this.panHandler = t1;
    },
    PageController$: function(initialPage) {
      return new D.PageController(initialPage, 0, H.setRuntimeTypeInfo([], type$.JSArray_ScrollPosition), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
    },
    PageController: function PageController(t0, t1, t2, t3) {
      var _ = this;
      _.initialPage = t0;
      _._initialScrollOffset = t1;
      _._positions = t2;
      _.ChangeNotifier__listeners = t3;
    },
    PageMetrics: function PageMetrics(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.viewportFraction = t0;
      _.minScrollExtent = t1;
      _.maxScrollExtent = t2;
      _.pixels = t3;
      _.viewportDimension = t4;
      _.axisDirection = t5;
    },
    _PagePosition: function _PagePosition(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._pageToUseOnStartup = t0;
      _._viewportFraction = t1;
      _._heldPreviousVelocity = 0;
      _._userScrollDirection = t2;
      _._currentDrag = null;
      _.physics = t3;
      _.context = t4;
      _.keepScrollOffset = t5;
      _.debugLabel = t6;
      _._viewportDimension = _._pixels = _._maxScrollExtent = _._minScrollExtent = null;
      _._haveDimensions = false;
      _._didChangeViewportDimensionOrReceiveCorrection = true;
      _._semanticActions = null;
      _.isScrollingNotifier = t7;
      _._activity = null;
      _.ChangeNotifier__listeners = t8;
    },
    _ForceImplicitScrollPhysics: function _ForceImplicitScrollPhysics(t0, t1) {
      this.allowImplicitScrolling = t0;
      this.parent = t1;
    },
    PageScrollPhysics: function PageScrollPhysics(t0) {
      this.parent = t0;
    },
    PageView: function PageView(t0, t1, t2, t3, t4) {
      var _ = this;
      _.controller = t0;
      _.physics = t1;
      _.childrenDelegate = t2;
      _.dragStartBehavior = t3;
      _.key = t4;
    },
    _PageViewState: function _PageViewState(t0) {
      var _ = this;
      _._lastReportedPage = 0;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _PageViewState_build_closure0: function _PageViewState_build_closure0(t0) {
      this.$this = t0;
    },
    _PageViewState_build_closure: function _PageViewState_build_closure(t0, t1) {
      this.$this = t0;
      this.axisDirection = t1;
    },
    debugPrintThrottled: function(message, wrapWidth) {
      var messageLines = H.setRuntimeTypeInfo(message.split("\n"), type$.JSArray_String);
      $.$get$_debugPrintBuffer().addAll$1(0, messageLines);
      if (!$._debugPrintScheduled)
        D._debugPrintTask();
    },
    _debugPrintTask: function() {
      var t3, line,
        t1 = $._debugPrintScheduled = false,
        t2 = $.$get$_debugPrintStopwatch();
      if (P.Duration$(t2.get$elapsedMicroseconds(), 0)._duration > 1000000) {
        t2.stop$0(0);
        t3 = t2._stop;
        t2._core$_start = t3 == null ? $.Primitives_timerTicks.call$0() : t3;
        $._debugPrintedCharacters = 0;
      }
      while (true) {
        if ($._debugPrintedCharacters < 12288) {
          t2 = $.$get$_debugPrintBuffer();
          t2 = !t2.get$isEmpty(t2);
        } else
          t2 = t1;
        if (!t2)
          break;
        line = $.$get$_debugPrintBuffer().removeFirst$0();
        $._debugPrintedCharacters = $._debugPrintedCharacters + line.length;
        H.printString(H.S(line));
      }
      t1 = $.$get$_debugPrintBuffer();
      if (!t1.get$isEmpty(t1)) {
        $._debugPrintScheduled = true;
        $._debugPrintedCharacters = 0;
        P.Timer_Timer(C.Duration_1000000, D.print___debugPrintTask$closure());
        if ($._debugPrintCompleter == null)
          $._debugPrintCompleter = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
      } else {
        $.$get$_debugPrintStopwatch().start$0(0);
        t1 = $._debugPrintCompleter;
        if (t1 != null)
          t1.complete$0(0);
        $._debugPrintCompleter = null;
      }
    },
    debugPrintDone: function() {
      var t1 = $._debugPrintCompleter;
      t1 = t1 == null ? null : t1.future;
      if (t1 == null) {
        t1 = new P._Future($.Zone__current, type$._Future_void);
        t1._asyncComplete$1(null);
      }
      return t1;
    }
  },
  U = {
    ErrorDescription$: function(message) {
      var _null = null;
      return new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [message], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
    },
    ErrorSummary$: function(message) {
      var _null = null;
      return new U.ErrorSummary(_null, false, true, _null, _null, _null, false, [message], _null, C.DiagnosticLevel_6, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
    },
    ErrorHint$: function(message) {
      var _null = null;
      return new U.ErrorHint(_null, false, true, _null, _null, _null, false, [message], _null, C.DiagnosticLevel_5, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
    },
    FlutterErrorDetails$: function(context, exception, informationCollector, library, silent, stack) {
      return new U.FlutterErrorDetails(exception, stack, library, context, informationCollector, false);
    },
    FlutterError_FlutterError: function(message) {
      var _null = null,
        lines = H.setRuntimeTypeInfo(message.split("\n"), type$.JSArray_String),
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode),
        t2 = C.JSArray_methods.get$first(lines);
      t1.push(new U.ErrorSummary(_null, false, true, _null, _null, _null, false, [t2], _null, C.DiagnosticLevel_6, _null, false, false, _null, C.DiagnosticsTreeStyle_7));
      for (t2 = H.SubListIterable$(lines, 1, _null, type$.String), t2 = new H.MappedListIterable(t2, new U.FlutterError_FlutterError_closure(), t2.$ti._eval$1("MappedListIterable<ListIterable.E,DiagnosticsNode>")), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();)
        t1.push(t2.__internal$_current);
      return new U.FlutterError(t1);
    },
    FlutterError$fromParts: function(diagnostics) {
      return new U.FlutterError(diagnostics);
    },
    FlutterError_dumpErrorToConsole: function(details, forceReport) {
      if ($.FlutterError__errorCount === 0 || false)
        D.print__debugPrintThrottled$closure().call$1(C.JSString_methods.trimRight$0(new Y.TextTreeRenderer(100, 100, C.DiagnosticLevel_2, 5).render$1(new U._FlutterErrorDetailsNode(details, null, true, true, null, C.DiagnosticsTreeStyle_5))));
      else
        D.print__debugPrintThrottled$closure().call$1("Another exception was thrown: " + details.get$summary().toString$0(0));
      $.FlutterError__errorCount = $.FlutterError__errorCount + 1;
    },
    FlutterError_defaultStackFilter: function($frames) {
      var skipped, index, t1, frame, className, $package, t2, reasons, _i, result, index0, t3, suffix,
        removedPackagesAndClasses = P.LinkedHashMap_LinkedHashMap$_literal(["dart:async-patch", 0, "dart:async", 0, "package:stack_trace", 0, "class _AssertionError", 0, "class _FakeAsync", 0, "class _FrameCallbackEntry", 0, "class _Timer", 0, "class _RawReceivePortImpl", 0], type$.String, type$.int),
        parsedFrames = R.StackFrame_fromStackString(J.join$1$ax($frames, "\n"));
      for (skipped = 0, index = 0; t1 = parsedFrames.length, index < t1; ++index) {
        frame = parsedFrames[index];
        className = "class " + H.S(frame.className);
        $package = H.S(frame.packageScheme) + ":" + H.S(frame.$package);
        if (removedPackagesAndClasses.containsKey$1(0, className)) {
          ++skipped;
          removedPackagesAndClasses.$indexSet(0, className, removedPackagesAndClasses.$index(0, className) + 1);
          C.JSArray_methods.removeAt$1(parsedFrames, index);
          --index;
        } else if (removedPackagesAndClasses.containsKey$1(0, $package)) {
          ++skipped;
          removedPackagesAndClasses.$indexSet(0, $package, removedPackagesAndClasses.$index(0, $package) + 1);
          C.JSArray_methods.removeAt$1(parsedFrames, index);
          --index;
        }
      }
      t1 = new Array(t1);
      t1.fixed$length = Array;
      t2 = type$.JSArray_String;
      reasons = H.setRuntimeTypeInfo(t1, t2);
      for (t1 = $.FlutterError__stackFilters.length, _i = 0; _i < $.FlutterError__stackFilters.length; $.FlutterError__stackFilters.length === t1 || (0, H.throwConcurrentModificationError)($.FlutterError__stackFilters), ++_i)
        $.FlutterError__stackFilters[_i].filter$2(0, parsedFrames, reasons);
      result = H.setRuntimeTypeInfo([], t2);
      for (t1 = reasons.length - 1, index = 0; index < parsedFrames.length; index = index0 + 1) {
        index0 = index;
        while (true) {
          if (index0 < t1) {
            t3 = reasons[index0];
            t3 = t3 != null && J.$eq$(reasons[index0 + 1], t3);
          } else
            t3 = false;
          if (!t3)
            break;
          ++index0;
        }
        if (reasons[index0] != null)
          suffix = index0 !== index ? " (" + (index0 - index + 2) + " frames)" : " (1 frame)";
        else
          suffix = "";
        t3 = reasons[index0];
        result.push(H.S(t3 == null ? parsedFrames[index0].source : t3) + suffix);
      }
      t1 = H.setRuntimeTypeInfo([], t2);
      for (t2 = removedPackagesAndClasses.get$entries(removedPackagesAndClasses), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        if (t3.value > 0)
          t1.push(t3.key);
      }
      C.JSArray_methods.sort$0(t1);
      if (skipped === 1)
        result.push("(elided one frame from " + H.S(C.JSArray_methods.get$single(t1)) + ")");
      else if (skipped > 1) {
        t2 = t1.length;
        if (t2 > 1)
          t1[t2 - 1] = "and " + H.S(C.JSArray_methods.get$last(t1));
        if (t1.length > 2)
          result.push("(elided " + skipped + " frames from " + C.JSArray_methods.join$1(t1, ", ") + ")");
        else
          result.push("(elided " + skipped + " frames from " + C.JSArray_methods.join$1(t1, " ") + ")");
      }
      return result;
    },
    DiagnosticsStackTrace$: function($name, stack, stackFilter) {
      var t1;
      if (stack == null)
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
      else
        t1 = J.map$1$1$ax(U.FlutterError_defaultStackFilter(H.setRuntimeTypeInfo(C.JSString_methods.trimRight$0(stack.toString$0(0)).split("\n"), type$.JSArray_String)), U.assertions_DiagnosticsStackTrace__createStackFrame$closure(), type$.DiagnosticsNode).toList$0(0);
      return new U.DiagnosticsStackTrace(C.List_empty2, t1, stack, true, $name, true, true, null, C.DiagnosticsTreeStyle_7);
    },
    DiagnosticsStackTrace__createStackFrame: function(frame) {
      return Y.DiagnosticsNode_DiagnosticsNode$message(frame, false, C.DiagnosticsTreeStyle_8);
    },
    StackFilter: function StackFilter() {
    },
    _ErrorDiagnostic: function _ErrorDiagnostic() {
    },
    ErrorDescription: function ErrorDescription(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._diagnostics$_value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    ErrorSummary: function ErrorSummary(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._diagnostics$_value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    ErrorHint: function ErrorHint(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._diagnostics$_value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    ErrorSpacer: function ErrorSpacer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._diagnostics$_value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    FlutterErrorDetails: function FlutterErrorDetails(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    FlutterErrorDetails_summary_formatException: function FlutterErrorDetails_summary_formatException(t0) {
      this.$this = t0;
    },
    FlutterErrorDetails_summary_closure: function FlutterErrorDetails_summary_closure() {
    },
    FlutterErrorDetails_summary_closure0: function FlutterErrorDetails_summary_closure0() {
    },
    FlutterErrorDetails_debugFillProperties_closure: function FlutterErrorDetails_debugFillProperties_closure() {
    },
    FlutterError: function FlutterError(t0) {
      this.diagnostics = t0;
    },
    FlutterError_FlutterError_closure: function FlutterError_FlutterError_closure() {
    },
    FlutterError_closure: function FlutterError_closure() {
    },
    FlutterError_toString_closure: function FlutterError_toString_closure(t0) {
      this.renderer = t0;
    },
    DiagnosticsStackTrace: function DiagnosticsStackTrace(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._diagnostics$_children = t0;
      _._properties = t1;
      _.value = t2;
      _.allowTruncate = t3;
      _.name = t4;
      _.showSeparator = t5;
      _.showName = t6;
      _.linePrefix = t7;
      _.style = t8;
    },
    _FlutterErrorDetailsNode: function _FlutterErrorDetailsNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _._cachedBuilder = null;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
    },
    _FlutterError_Error_DiagnosticableTreeMixin: function _FlutterError_Error_DiagnosticableTreeMixin() {
    },
    _FlutterErrorDetails_Object_Diagnosticable: function _FlutterErrorDetails_Object_Diagnosticable() {
    },
    _getClipCallback: function(referenceBox, containedInkWell, rectCallback) {
      if (containedInkWell)
        return new U._getClipCallback_closure(referenceBox);
      return null;
    },
    _getTargetRadius: function(referenceBox, containedInkWell, rectCallback, position) {
      var size, d1, t1, d2, t2, d3, d4;
      if (containedInkWell) {
        size = referenceBox._size;
        size.toString;
        d1 = position.$sub(0, C.Offset_0_0).get$distance();
        t1 = 0 + size._dx;
        d2 = position.$sub(0, new P.Offset(t1, 0)).get$distance();
        t2 = 0 + size._dy;
        d3 = position.$sub(0, new P.Offset(0, t2)).get$distance();
        d4 = position.$sub(0, new P.Offset(t1, t2)).get$distance();
        return Math.ceil(Math.max(Math.max(d1, d2), Math.max(d3, d4)));
      }
      return 35;
    },
    _getClipCallback_closure: function _getClipCallback_closure(t0) {
      this.referenceBox = t0;
    },
    _InkSplashFactory: function _InkSplashFactory() {
    },
    InkSplash: function InkSplash(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._ink_splash$_position = t0;
      _._ink_splash$_borderRadius = t1;
      _._customBorder = t2;
      _._targetRadius = t3;
      _._clipCallback = t4;
      _._repositionToReferenceBox = t5;
      _._ink_splash$_textDirection = t6;
      _._ink_splash$_alphaController = _._ink_splash$_alpha = _._radiusController = _._ink_splash$_radius = null;
      _._ink_well$_color = t7;
      _._material$_controller = t8;
      _.referenceBox = t9;
      _.onRemoved = t10;
      _._debugDisposed = false;
    },
    MaterialLocalizations: function MaterialLocalizations() {
    },
    _MaterialLocalizationsDelegate: function _MaterialLocalizationsDelegate() {
    },
    DefaultMaterialLocalizations: function DefaultMaterialLocalizations() {
    },
    TabBarTheme: function TabBarTheme(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.indicator = t0;
      _.indicatorSize = t1;
      _.labelColor = t2;
      _.labelPadding = t3;
      _.labelStyle = t4;
      _.unselectedLabelColor = t5;
      _.unselectedLabelStyle = t6;
    },
    _TabBarTheme_Object_Diagnosticable: function _TabBarTheme_Object_Diagnosticable() {
    },
    DefaultTabController_of: function(context) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$._TabControllerScope);
      return scope == null ? null : scope.controller;
    },
    TabController: function TabController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._animationController = t0;
      _.length = t1;
      _._tab_controller$_index = t2;
      _._previousIndex = t3;
      _._indexIsChangingCount = 0;
      _.ChangeNotifier__listeners = t4;
    },
    TabController__changeIndex_closure: function TabController__changeIndex_closure(t0) {
      this.$this = t0;
    },
    _TabControllerScope: function _TabControllerScope(t0, t1, t2, t3) {
      var _ = this;
      _.controller = t0;
      _.enabled = t1;
      _.child = t2;
      _.key = t3;
    },
    DefaultTabController: function DefaultTabController(t0, t1, t2) {
      this.length = t0;
      this.child = t1;
      this.key = t2;
    },
    _DefaultTabControllerState: function _DefaultTabControllerState(t0, t1) {
      var _ = this;
      _._tab_controller$_controller = null;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    __DefaultTabControllerState_State_SingleTickerProviderStateMixin: function __DefaultTabControllerState_State_SingleTickerProviderStateMixin() {
    },
    Typography_Typography$material2014: function(platform) {
      return U.Typography_Typography$_withPlatform(platform, null, null, C.TextTheme_s8k, C.TextTheme_TnS, C.TextTheme_i7B);
    },
    Typography_Typography$_withPlatform: function(platform, black, white, englishLike, dense, tall) {
      switch (platform) {
        case C.TargetPlatform_2:
        case C.TargetPlatform_4:
          black = C.TextTheme_k4X;
          white = C.TextTheme_tEM;
          break;
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
          black = C.TextTheme_cAf;
          white = C.TextTheme_Z0t;
          break;
        case C.TargetPlatform_5:
          black = C.TextTheme_EOZ;
          white = C.TextTheme_mGH;
          break;
        case C.TargetPlatform_3:
          black = C.TextTheme_CZR;
          white = C.TextTheme_efs;
          break;
      }
      return new U.Typography(black, white, englishLike, dense, tall);
    },
    ScriptCategory: function ScriptCategory(t0) {
      this._typography$_name = t0;
    },
    Typography: function Typography(t0, t1, t2, t3, t4) {
      var _ = this;
      _.black = t0;
      _.white = t1;
      _.englishLike = t2;
      _.dense = t3;
      _.tall = t4;
    },
    _Typography_Object_Diagnosticable: function _Typography_Object_Diagnosticable() {
    },
    TextPainter$: function(ellipsis, locale, maxLines, strutStyle, text, textAlign, textDirection, textHeightBehavior, textScaleFactor, textWidthBasis) {
      return new U.TextPainter(text, textAlign, textDirection, textScaleFactor, ellipsis, locale, maxLines, strutStyle, textWidthBasis, textHeightBehavior);
    },
    PlaceholderDimensions: function PlaceholderDimensions(t0, t1) {
      this.size = t0;
      this.baseline = t1;
    },
    TextWidthBasis: function TextWidthBasis(t0) {
      this._text_painter$_name = t0;
    },
    TextPainter: function TextPainter(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._text_painter$_paragraph = null;
      _._text_painter$_needsLayout = true;
      _._text_painter$_text = t0;
      _._text_painter$_textAlign = t1;
      _._text_painter$_textDirection = t2;
      _._textScaleFactor = t3;
      _._text_painter$_ellipsis = t4;
      _._text_painter$_locale = t5;
      _._text_painter$_maxLines = t6;
      _._text_painter$_strutStyle = t7;
      _._textWidthBasis = t8;
      _._text_painter$_textHeightBehavior = t9;
      _._lastMaxWidth = _._lastMinWidth = _._text_painter$_placeholderDimensions = _._inlinePlaceholderScales = _._inlinePlaceholderBoxes = null;
    },
    RenderSliverList: function RenderSliverList(t0, t1, t2, t3, t4) {
      var _ = this;
      _._childManager = t0;
      _._keepAliveBucket = t1;
      _._debugDanglingKeepAlives = null;
      _._debugChildIntegrityEnabled = true;
      _.ContainerRenderObjectMixin__childCount = t2;
      _.ContainerRenderObjectMixin__firstChild = t3;
      _.ContainerRenderObjectMixin__lastChild = t4;
      _.debugCreator = _.parentData = _._sliver$_geometry = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderSliverList_performLayout_advance: function RenderSliverList_performLayout_advance(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.childConstraints = t2;
    },
    StringCodec0: function StringCodec0() {
    },
    JSONMessageCodec0: function JSONMessageCodec0() {
    },
    JSONMethodCodec0: function JSONMethodCodec0() {
    },
    StandardMessageCodec0: function StandardMessageCodec0() {
    },
    StandardMessageCodec_writeValue_closure0: function StandardMessageCodec_writeValue_closure0(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    _getParent: function(context) {
      var t1 = {};
      t1.parent = null;
      context.visitAncestorElements$1(new U._getParent_closure(t1));
      return t1.parent;
    },
    Actions$: function(actions, child) {
      return new U.Actions(actions, child, null);
    },
    Actions__visitActionsAncestors: function(context, visitor) {
      var t2, ancestor,
        t1 = type$._ActionsMarker,
        actionsElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; t2 = actionsElement != null, t2; actionsElement = ancestor) {
        if (J.$eq$(visitor.call$1(actionsElement), true))
          break;
        t2 = U._getParent(actionsElement)._inheritedWidgets;
        ancestor = t2 == null ? null : t2.$index(0, H.createRuntimeType(t1));
      }
      return t2;
    },
    Actions__findDispatcher: function(context) {
      var t1 = {};
      t1.dispatcher = null;
      U.Actions__visitActionsAncestors(context, new U.Actions__findDispatcher_closure(t1));
      return C.C_ActionDispatcher;
    },
    Actions_invoke: function(context, intent, nullOk, $T) {
      var t2, t1 = {};
      t1.actionElement = t1.action = null;
      U.Actions__visitActionsAncestors(context, new U.Actions_invoke_closure(t1, intent, $T));
      t2 = t1.actionElement;
      return t2 != null ? U.Actions__findDispatcher(t2).invokeAction$3(t1.action, intent, context) != null : null;
    },
    _getParent_closure: function _getParent_closure(t0) {
      this._box_0 = t0;
    },
    Intent: function Intent() {
    },
    Action: function Action() {
    },
    ContextAction: function ContextAction() {
    },
    CallbackAction: function CallbackAction(t0, t1, t2) {
      this.onInvoke = t0;
      this._listeners = t1;
      this.$ti = t2;
    },
    ActionDispatcher: function ActionDispatcher() {
    },
    Actions: function Actions(t0, t1, t2) {
      this.actions = t0;
      this.child = t1;
      this.key = t2;
    },
    Actions__findDispatcher_closure: function Actions__findDispatcher_closure(t0) {
      this._box_0 = t0;
    },
    Actions_invoke_closure: function Actions_invoke_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.intent = t1;
      this.T = t2;
    },
    _ActionsState: function _ActionsState(t0, t1, t2) {
      var _ = this;
      _.listenedActions = t0;
      _.rebuildKey = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _ActionsState__handleActionChanged_closure: function _ActionsState__handleActionChanged_closure(t0) {
      this.$this = t0;
    },
    _ActionsMarker: function _ActionsMarker(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dispatcher = t0;
      _.actions = t1;
      _.rebuildKey = t2;
      _.child = t3;
      _.key = t4;
    },
    FocusableActionDetector: function FocusableActionDetector(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.enabled = t0;
      _.focusNode = t1;
      _.autofocus = t2;
      _.actions = t3;
      _.onShowFocusHighlight = t4;
      _.onShowHoverHighlight = t5;
      _.child = t6;
      _.key = t7;
    },
    _FocusableActionDetectorState: function _FocusableActionDetectorState(t0) {
      var _ = this;
      _._actions$_focused = _._actions$_hovering = _._canShowHighlight = false;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _FocusableActionDetectorState_initState_closure: function _FocusableActionDetectorState_initState_closure(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__updateHighlightMode_closure: function _FocusableActionDetectorState__updateHighlightMode_closure(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__handleMouseEnter_closure: function _FocusableActionDetectorState__handleMouseEnter_closure(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__handleMouseExit_closure: function _FocusableActionDetectorState__handleMouseExit_closure(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__handleFocusChange_closure: function _FocusableActionDetectorState__handleFocusChange_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    _FocusableActionDetectorState__mayTriggerCallback_shouldShowHoverHighlight: function _FocusableActionDetectorState__mayTriggerCallback_shouldShowHoverHighlight(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState__mayTriggerCallback_shouldShowFocusHighlight: function _FocusableActionDetectorState__mayTriggerCallback_shouldShowFocusHighlight(t0) {
      this.$this = t0;
    },
    _FocusableActionDetectorState_didUpdateWidget_closure: function _FocusableActionDetectorState_didUpdateWidget_closure(t0, t1) {
      this.$this = t0;
      this.oldWidget = t1;
    },
    DoNothingIntent: function DoNothingIntent() {
    },
    DoNothingAction: function DoNothingAction(t0) {
      this._listeners = t0;
    },
    ActivateIntent: function ActivateIntent() {
    },
    _Action_Object_Diagnosticable: function _Action_Object_Diagnosticable() {
    },
    _ActionDispatcher_Object_Diagnosticable: function _ActionDispatcher_Object_Diagnosticable() {
    },
    _Intent_Object_Diagnosticable: function _Intent_Object_Diagnosticable() {
    },
    _getAncestor: function(context, count) {
      var t1 = {};
      t1.count = count;
      t1.target = null;
      context.visitAncestorElements$1(new U._getAncestor_closure(t1));
      return t1.target;
    },
    _FocusTraversalGroupInfo$: function(marker, defaultPolicy, members) {
      var t1 = marker == null ? null : marker.policy;
      if (t1 == null)
        t1 = defaultPolicy;
      return new U._FocusTraversalGroupInfo(t1, members);
    },
    _ReadingOrderSortData_commonDirectionalityOf: function(list) {
      var t1, common, common0,
        allAncestors = new H.MappedListIterable(list, new U._ReadingOrderSortData_commonDirectionalityOf_closure(), H._arrayInstanceType(list)._eval$1("MappedListIterable<1,Set<Directionality>>"));
      for (t1 = new H.ListIterator(allAncestors, allAncestors.get$length(allAncestors)), common = null; t1.moveNext$0();) {
        common0 = t1.__internal$_current;
        common = (common == null ? common0 : common).intersection$1(0, common0);
      }
      if (common.get$isEmpty(common))
        return C.JSArray_methods.get$first(list).directionality;
      t1 = C.JSArray_methods.get$first(list).get$directionalAncestors();
      return (t1 && C.JSArray_methods).firstWhere$1(t1, common.get$contains(common)).textDirection;
    },
    _ReadingOrderSortData_sortWithDirectionality: function(list, directionality) {
      N.mergeSort(list, new U._ReadingOrderSortData_sortWithDirectionality_closure(directionality), type$._ReadingOrderSortData);
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality: function(list, directionality) {
      N.mergeSort(list, new U._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(directionality), type$._ReadingOrderDirectionalGroupData);
    },
    FocusTraversalGroup_of: function(context, nullOk) {
      var inherited = context == null ? null : context.dependOnInheritedWidgetOfExactType$1$0(type$._FocusTraversalGroupMarker);
      return inherited == null ? null : inherited.policy;
    },
    _getAncestor_closure: function _getAncestor_closure(t0) {
      this._box_0 = t0;
    },
    _FocusTraversalGroupInfo: function _FocusTraversalGroupInfo(t0, t1) {
      this.policy = t0;
      this.members = t1;
    },
    TraversalDirection: function TraversalDirection(t0) {
      this._focus_traversal$_name = t0;
    },
    FocusTraversalPolicy: function FocusTraversalPolicy() {
    },
    FocusTraversalPolicy__sortAllDescendants_visitGroups: function FocusTraversalPolicy__sortAllDescendants_visitGroups(t0, t1, t2) {
      this.groupKeys = t0;
      this.groups = t1;
      this.sortedDescendants = t2;
    },
    _DirectionalPolicyDataEntry: function _DirectionalPolicyDataEntry(t0, t1) {
      this.direction = t0;
      this.node = t1;
    },
    _DirectionalPolicyData: function _DirectionalPolicyData(t0) {
      this.history = t0;
    },
    DirectionalFocusTraversalPolicyMixin: function DirectionalFocusTraversalPolicyMixin() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure(t0) {
      this.node = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure(t0, t1) {
      this.vertical = t0;
      this.first = t1;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure() {
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure() {
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate: function DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate(t0, t1, t2) {
      this.$this = t0;
      this.policyData = t1;
      this.nearestScope = t2;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure: function DirectionalFocusTraversalPolicyMixin_inDirection_closure(t0) {
      this.focusedScrollable = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure0: function DirectionalFocusTraversalPolicyMixin_inDirection_closure0(t0) {
      this.band = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure1: function DirectionalFocusTraversalPolicyMixin_inDirection_closure1(t0) {
      this.focusedChild = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure2: function DirectionalFocusTraversalPolicyMixin_inDirection_closure2(t0) {
      this.focusedScrollable = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure3: function DirectionalFocusTraversalPolicyMixin_inDirection_closure3(t0) {
      this.band = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure4: function DirectionalFocusTraversalPolicyMixin_inDirection_closure4(t0) {
      this.focusedChild = t0;
    },
    _ReadingOrderSortData: function _ReadingOrderSortData(t0, t1, t2) {
      var _ = this;
      _.directionality = t0;
      _.rect = t1;
      _.node = t2;
      _._directionalAncestors = null;
    },
    _ReadingOrderSortData_commonDirectionalityOf_closure: function _ReadingOrderSortData_commonDirectionalityOf_closure() {
    },
    _ReadingOrderSortData_sortWithDirectionality_closure: function _ReadingOrderSortData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors: function _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors() {
    },
    _ReadingOrderDirectionalGroupData: function _ReadingOrderDirectionalGroupData(t0) {
      this.members = t0;
      this._rect = null;
    },
    _ReadingOrderDirectionalGroupData_rect_closure: function _ReadingOrderDirectionalGroupData_rect_closure() {
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure: function _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    ReadingOrderTraversalPolicy: function ReadingOrderTraversalPolicy(t0) {
      this.DirectionalFocusTraversalPolicyMixin__policyData = t0;
    },
    ReadingOrderTraversalPolicy__pickNext_closure: function ReadingOrderTraversalPolicy__pickNext_closure() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand: function ReadingOrderTraversalPolicy__pickNext_inBand() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand_closure: function ReadingOrderTraversalPolicy__pickNext_inBand_closure(t0) {
      this.band = t0;
    },
    FocusTraversalGroup: function FocusTraversalGroup(t0, t1, t2) {
      this.child = t0;
      this.policy = t1;
      this.key = t2;
    },
    _FocusTraversalGroupState: function _FocusTraversalGroupState(t0) {
      var _ = this;
      _._widget = _.focusNode = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _FocusTraversalGroupMarker: function _FocusTraversalGroupMarker(t0, t1, t2, t3) {
      var _ = this;
      _.policy = t0;
      _.focusNode = t1;
      _.child = t2;
      _.key = t3;
    },
    RequestFocusIntent: function RequestFocusIntent() {
    },
    RequestFocusAction: function RequestFocusAction(t0) {
      this._listeners = t0;
    },
    NextFocusIntent: function NextFocusIntent() {
    },
    NextFocusAction: function NextFocusAction(t0) {
      this._listeners = t0;
    },
    PreviousFocusIntent: function PreviousFocusIntent() {
    },
    PreviousFocusAction: function PreviousFocusAction(t0) {
      this._listeners = t0;
    },
    DirectionalFocusIntent: function DirectionalFocusIntent() {
    },
    DirectionalFocusAction: function DirectionalFocusAction(t0) {
      this._listeners = t0;
    },
    _FocusTraversalPolicy_Object_Diagnosticable: function _FocusTraversalPolicy_Object_Diagnosticable() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin() {
    },
    __ReadingOrderDirectionalGroupData_Object_Diagnosticable: function __ReadingOrderDirectionalGroupData_Object_Diagnosticable() {
    },
    __ReadingOrderSortData_Object_Diagnosticable: function __ReadingOrderSortData_Object_Diagnosticable() {
    },
    NotificationListener$: function(child, onNotification, $T) {
      return new U.NotificationListener(child, onNotification, null, $T._eval$1("NotificationListener<0>"));
    },
    Notification0: function Notification0() {
    },
    NotificationListener: function NotificationListener(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.onNotification = t1;
      _.key = t2;
      _.$ti = t3;
    },
    LayoutChangedNotification: function LayoutChangedNotification() {
    },
    TickerMode_of: function(context) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$._EffectiveTickerMode),
        t1 = widget == null ? null : widget.enabled;
      return t1 !== false;
    },
    TickerMode: function TickerMode(t0, t1, t2) {
      this.enabled = t0;
      this.child = t1;
      this.key = t2;
    },
    _EffectiveTickerMode: function _EffectiveTickerMode(t0, t1, t2) {
      this.enabled = t0;
      this.child = t1;
      this.key = t2;
    },
    SingleTickerProviderStateMixin: function SingleTickerProviderStateMixin() {
    },
    TickerProviderStateMixin: function TickerProviderStateMixin() {
    },
    _WidgetTicker: function _WidgetTicker(t0, t1, t2) {
      var _ = this;
      _._creator = t0;
      _._ticker$_future = null;
      _._muted = false;
      _._startTime = null;
      _._onTick = t1;
      _._animationId = null;
      _.debugLabel = t2;
      _._debugCreationStack = null;
    },
    Title$: function(child, color, title) {
      return new U.Title(title, color, child, null);
    },
    Title: function Title(t0, t1, t2, t3) {
      var _ = this;
      _.title = t0;
      _.color = t1;
      _.child = t2;
      _.key = t3;
    },
    compute: function(callback, message, debugLabel, $Q, $R) {
      return U.compute$body(callback, message, debugLabel, $Q, $R, $R);
    },
    compute$body: function(callback, message, debugLabel, $Q, $R, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue;
      var $async$compute = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(null, $async$compute);
            case 3:
              // returning from await.
              $async$returnValue = callback.call$1(message);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$compute, $async$completer);
    },
    defaultTargetPlatform: function() {
      return C.TargetPlatform_0;
    },
    createLocalImageConfiguration: function(context) {
      var t1, t2;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultAssetBundle);
      t1 = $.$get$rootBundle();
      t2 = F.MediaQuery_of(context, true);
      t2 = t2 == null ? null : t2.devicePixelRatio;
      if (t2 == null)
        t2 = 1;
      return new M.ImageConfiguration(t1, t2, L.Localizations_localeOf(context, true), T.Directionality_of(context), null, U.defaultTargetPlatform());
    }
  },
  N = {BindingBase: function BindingBase() {
    }, BindingBase_lockEvents_closure: function BindingBase_lockEvents_closure(t0) {
      this.$this = t0;
    }, BindingBase_registerSignalServiceExtension_closure: function BindingBase_registerSignalServiceExtension_closure(t0) {
      this.callback = t0;
    }, BindingBase_registerBoolServiceExtension_closure: function BindingBase_registerBoolServiceExtension_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.setter = t1;
      _.name = t2;
      _.getter = t3;
    }, BindingBase_registerNumericServiceExtension_closure: function BindingBase_registerNumericServiceExtension_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.name = t1;
      _.setter = t2;
      _.getter = t3;
    }, BindingBase_registerServiceExtension_closure: function BindingBase_registerServiceExtension_closure(t0, t1) {
      this.methodName = t0;
      this.callback = t1;
    }, BindingBase_registerServiceExtension__closure: function BindingBase_registerServiceExtension__closure() {
    },
    FlutterErrorDetailsForPointerEventDispatcher$: function(context, $event, exception, hitTestEntry, informationCollector, library, stack) {
      return new N.FlutterErrorDetailsForPointerEventDispatcher(exception, stack, library, context, informationCollector, false);
    },
    GestureBinding: function GestureBinding() {
    },
    GestureBinding_dispatchEvent_closure: function GestureBinding_dispatchEvent_closure(t0) {
      this.event = t0;
    },
    GestureBinding_dispatchEvent_closure0: function GestureBinding_dispatchEvent_closure0(t0, t1) {
      this.event = t0;
      this.entry = t1;
    },
    FlutterErrorDetailsForPointerEventDispatcher: function FlutterErrorDetailsForPointerEventDispatcher(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    TapDownDetails$: function(globalPosition, kind, localPosition) {
      return new N.TapDownDetails(globalPosition);
    },
    TapUpDetails$: function(globalPosition, localPosition) {
      return new N.TapUpDetails();
    },
    TapDownDetails: function TapDownDetails(t0) {
      this.globalPosition = t0;
    },
    TapUpDetails: function TapUpDetails() {
    },
    BaseTapGestureRecognizer: function BaseTapGestureRecognizer() {
    },
    TapGestureRecognizer: function TapGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onSecondaryTapCancel = _.onSecondaryTapUp = _.onSecondaryTapDown = _.onTapCancel = _.onTap = _.onTapUp = _.onTapDown = null;
      _._wonArenaForPrimaryPointer = _._sentTapDown = false;
      _._up = _._down = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _.state = t2;
      _.initialPosition = _.primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _._kindFilter = t6;
      _._pointerToKind = t7;
    },
    TapGestureRecognizer_handleTapDown_closure: function TapGestureRecognizer_handleTapDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    TapGestureRecognizer_handleTapUp_closure: function TapGestureRecognizer_handleTapUp_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    SnackBarClosedReason: function SnackBarClosedReason(t0) {
      this._snack_bar$_name = t0;
    },
    SnackBar: function SnackBar() {
    },
    PaintingBinding: function PaintingBinding() {
    },
    _SystemFontsNotifier: function _SystemFontsNotifier(t0) {
      this._systemFontsCallbacks = t0;
    },
    Tolerance: function Tolerance(t0, t1) {
      this.distance = t0;
      this.velocity = t1;
    },
    debugDumpRenderTree: function() {
      var t1 = $.RendererBinding__instance;
      t1 = t1 == null ? null : t1.RendererBinding__pipelineOwner._rootNode;
      t1 = t1 == null ? null : t1.super$DiagnosticableTreeMixin$toStringDeep(C.DiagnosticLevel_2, "", "");
      D.print__debugPrintThrottled$closure().call$1(t1 == null ? "Render tree unavailable." : t1);
    },
    debugDumpSemanticsTree: function(childOrder) {
      var t1 = $.RendererBinding__instance;
      if (t1 != null)
        t1.RendererBinding__pipelineOwner.toString;
      D.print__debugPrintThrottled$closure().call$1("Semantics not collected.");
    },
    RendererBinding: function RendererBinding() {
    },
    flipScrollDirection: function(direction) {
      switch (direction) {
        case C.ScrollDirection_0:
          return C.ScrollDirection_0;
        case C.ScrollDirection_1:
          return C.ScrollDirection_2;
        case C.ScrollDirection_2:
          return C.ScrollDirection_1;
      }
      return null;
    },
    ScrollDirection: function ScrollDirection(t0) {
      this._viewport_offset$_name = t0;
    },
    ViewportOffset: function ViewportOffset() {
    },
    timeDilation: function(value) {
      var t1;
      if ($._timeDilation == value)
        return;
      t1 = $.SchedulerBinding__instance;
      if (t1 != null)
        t1.resetEpoch$0();
      $._timeDilation = value;
    },
    SchedulerBinding__taskSorter: function(e1, e2) {
      return -C.JSInt_methods.compareTo$1(e1.priority, e2.priority);
    },
    defaultSchedulingStrategy: function(priority, scheduler) {
      var t1 = scheduler.SchedulerBinding__transientCallbacks;
      if (t1.get$length(t1) > 0)
        return priority >= 100000;
      return true;
    },
    _TaskEntry: function _TaskEntry(t0, t1, t2, t3, t4) {
      var _ = this;
      _.task = t0;
      _.priority = t1;
      _.debugLabel = t2;
      _.flow = t3;
      _.completer = _.debugStack = null;
      _.$ti = t4;
    },
    _TaskEntry_run_closure: function _TaskEntry_run_closure(t0) {
      this.$this = t0;
    },
    _FrameCallbackEntry: function _FrameCallbackEntry(t0) {
      this.callback = t0;
      this.debugStack = null;
    },
    SchedulerPhase: function SchedulerPhase(t0, t1) {
      this.index = t0;
      this._binding$_name = t1;
    },
    SchedulerBinding: function SchedulerBinding() {
    },
    SchedulerBinding_endOfFrame_closure: function SchedulerBinding_endOfFrame_closure(t0) {
      this.$this = t0;
    },
    SchedulerBinding_scheduleWarmUpFrame_closure: function SchedulerBinding_scheduleWarmUpFrame_closure(t0) {
      this.$this = t0;
    },
    SchedulerBinding_scheduleWarmUpFrame_closure0: function SchedulerBinding_scheduleWarmUpFrame_closure0(t0, t1) {
      this.$this = t0;
      this.hadScheduledFrame = t1;
    },
    SchedulerBinding_scheduleWarmUpFrame_closure1: function SchedulerBinding_scheduleWarmUpFrame_closure1(t0) {
      this.$this = t0;
    },
    SchedulerBinding_handleBeginFrame_closure: function SchedulerBinding_handleBeginFrame_closure(t0) {
      this.$this = t0;
    },
    SemanticsBinding: function SemanticsBinding() {
    },
    ServicesBinding__parseLicenses: function(rawLicenses) {
      var t1, _i, license, t2, split,
        _licenseSeparator = "\n" + C.JSString_methods.$mul("-", 80) + "\n",
        result = H.setRuntimeTypeInfo([], type$.JSArray_LicenseEntry),
        licenses = rawLicenses.split(_licenseSeparator);
      for (t1 = licenses.length, _i = 0; _i < t1; ++_i) {
        license = licenses[_i];
        t2 = J.getInterceptor$asx(license);
        split = t2.indexOf$1(license, "\n\n");
        if (split >= 0) {
          t2.substring$2(license, 0, split).split("\n");
          t2.substring$1(license, split + 2);
          result.push(new F.LicenseEntryWithLineBreaks());
        } else
          result.push(new F.LicenseEntryWithLineBreaks());
      }
      return result;
    },
    ServicesBinding__parseAppLifecycleMessage: function(message) {
      switch (message) {
        case "AppLifecycleState.paused":
          return C.AppLifecycleState_2;
        case "AppLifecycleState.resumed":
          return C.AppLifecycleState_0;
        case "AppLifecycleState.inactive":
          return C.AppLifecycleState_1;
        case "AppLifecycleState.detached":
          return C.AppLifecycleState_3;
      }
      return null;
    },
    ServicesBinding: function ServicesBinding() {
    },
    ServicesBinding__addLicenses_closure: function ServicesBinding__addLicenses_closure(t0) {
      this.rawLicenses = t0;
    },
    ServicesBinding__addLicenses_closure0: function ServicesBinding__addLicenses_closure0(t0, t1) {
      this.parsedLicenses = t0;
      this.rawLicenses = t1;
    },
    _DefaultBinaryMessenger: function _DefaultBinaryMessenger() {
    },
    _DefaultBinaryMessenger__sendPlatformMessage_closure: function _DefaultBinaryMessenger__sendPlatformMessage_closure(t0) {
      this.completer = t0;
    },
    _DefaultBinaryMessenger_setMessageHandler_closure: function _DefaultBinaryMessenger_setMessageHandler_closure(t0, t1) {
      this.$this = t0;
      this.channel = t1;
    },
    debugDumpApp: function() {
      D.print__debugPrintThrottled$closure().call$1(J.get$runtimeType$($.WidgetsBinding__instance).toString$0(0) + " - RELEASE MODE");
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__renderViewElement;
      if (t1 != null) {
        t1.toDiagnosticsNode$0();
        D.print__debugPrintThrottled$closure().call$1("");
      } else
        D.print__debugPrintThrottled$closure().call$1("<no tree currently mounted>");
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0() {
    },
    WidgetsBindingObserver: function WidgetsBindingObserver() {
    },
    WidgetsBinding: function WidgetsBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty(t0) {
      this.className = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    WidgetsBinding_scheduleAttachRootWidget_closure: function WidgetsBinding_scheduleAttachRootWidget_closure(t0, t1) {
      this.$this = t0;
      this.rootWidget = t1;
    },
    RenderObjectToWidgetAdapter: function RenderObjectToWidgetAdapter(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.container = t1;
      _.debugShortDescription = t2;
      _.key = t3;
      _.$ti = t4;
    },
    RenderObjectToWidgetAdapter_attachToRenderTree_closure: function RenderObjectToWidgetAdapter_attachToRenderTree_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.owner = t2;
    },
    RenderObjectToWidgetAdapter_attachToRenderTree_closure0: function RenderObjectToWidgetAdapter_attachToRenderTree_closure0(t0) {
      this._box_0 = t0;
    },
    RenderObjectToWidgetElement: function RenderObjectToWidgetElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._parent = _._ancestorRenderObjectElement = _._renderObject = _._newWidget = _._child = null;
      _._cachedHash = t0;
      _._depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
      _.$ti = t4;
    },
    WidgetsFlutterBinding: function WidgetsFlutterBinding(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42) {
      var _ = this;
      _.WidgetsBinding__buildOwner = t0;
      _.WidgetsBinding__observers = t1;
      _.WidgetsBinding__needToReportFirstFrame = t2;
      _.WidgetsBinding__firstFrameCompleter = t3;
      _.WidgetsBinding_debugBuildingDirtyElements = t4;
      _.WidgetsBinding__renderViewElement = t5;
      _.WidgetsBinding__readyToProduceFrames = t6;
      _.RendererBinding__mouseTracker = t7;
      _.RendererBinding__pipelineOwner = t8;
      _.RendererBinding__semanticsHandle = t9;
      _.RendererBinding__firstFrameDeferredCount = t10;
      _.RendererBinding__firstFrameSent = t11;
      _.SemanticsBinding__accessibilityFeatures = t12;
      _.PaintingBinding__imageCache = t13;
      _.PaintingBinding__systemFonts = t14;
      _.ServicesBinding__defaultBinaryMessenger = t15;
      _.SchedulerBinding__timingsCallbacks = t16;
      _.SchedulerBinding__lifecycleState = t17;
      _.SchedulerBinding_schedulingStrategy = t18;
      _.SchedulerBinding__taskQueue = t19;
      _.SchedulerBinding__hasRequestedAnEventLoopCallback = t20;
      _.SchedulerBinding__nextFrameCallbackId = t21;
      _.SchedulerBinding__transientCallbacks = t22;
      _.SchedulerBinding__removedIds = t23;
      _.SchedulerBinding__persistentCallbacks = t24;
      _.SchedulerBinding__postFrameCallbacks = t25;
      _.SchedulerBinding__nextFrameCompleter = t26;
      _.SchedulerBinding__hasScheduledFrame = t27;
      _.SchedulerBinding__schedulerPhase = t28;
      _.SchedulerBinding__framesEnabled = t29;
      _.SchedulerBinding__warmUpFrame = t30;
      _.SchedulerBinding__firstRawTimeStampInEpoch = t31;
      _.SchedulerBinding__epochStart = t32;
      _.SchedulerBinding__lastRawTimeStamp = t33;
      _.SchedulerBinding__currentFrameTimeStamp = t34;
      _.SchedulerBinding__debugFrameNumber = t35;
      _.SchedulerBinding__debugBanner = t36;
      _.SchedulerBinding__ignoreNextEngineDrawFrame = t37;
      _.GestureBinding__pendingPointerEvents = t38;
      _.GestureBinding_pointerRouter = t39;
      _.GestureBinding_gestureArena = t40;
      _.GestureBinding_pointerSignalResolver = t41;
      _.GestureBinding__hitTests = t42;
      _._lockCount = 0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding() {
    },
    Widget_canUpdate: function(oldWidget, newWidget) {
      return J.get$runtimeType$(oldWidget).$eq(0, J.get$runtimeType$(newWidget)) && J.$eq$(oldWidget.key, newWidget.key);
    },
    _InactiveElements__deactivateRecursively: function(element) {
      element.deactivate$0();
      element.visitChildren$1(N.framework__InactiveElements__deactivateRecursively$closure());
    },
    Element__sort: function(a, b) {
      var t1 = a._depth,
        t2 = b._depth;
      if (t1 < t2)
        return -1;
      if (t2 < t1)
        return 1;
      t1 = b._dirty;
      if (t1 && !a._dirty)
        return -1;
      if (a._dirty && !t1)
        return 1;
      return 0;
    },
    Element__activateRecursively: function(element) {
      element.activate$0();
      element.visitChildren$1(N.framework_Element__activateRecursively$closure());
    },
    ErrorWidget__defaultErrorWidgetBuilder: function(details) {
      var exception = details.exception,
        t1 = exception instanceof U.FlutterError ? exception : null;
      return new N.ErrorWidget("", t1, new N.UniqueKey());
    },
    _debugReportException: function(context, exception, stack, informationCollector) {
      var details = U.FlutterErrorDetails$(context, exception, informationCollector, "widgets library", false, stack);
      $.$get$FlutterError_onError().call$1(details);
      return details;
    },
    UniqueKey: function UniqueKey() {
    },
    GlobalKey: function GlobalKey() {
    },
    LabeledGlobalKey: function LabeledGlobalKey(t0, t1) {
      this._debugLabel = t0;
      this.$ti = t1;
    },
    GlobalObjectKey: function GlobalObjectKey(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    Widget: function Widget() {
    },
    StatelessWidget: function StatelessWidget() {
    },
    StatefulWidget: function StatefulWidget() {
    },
    _StateLifecycle: function _StateLifecycle(t0) {
      this._framework$_name = t0;
    },
    State: function State() {
    },
    ProxyWidget: function ProxyWidget() {
    },
    ParentDataWidget: function ParentDataWidget() {
    },
    InheritedWidget: function InheritedWidget() {
    },
    RenderObjectWidget: function RenderObjectWidget() {
    },
    LeafRenderObjectWidget: function LeafRenderObjectWidget() {
    },
    SingleChildRenderObjectWidget: function SingleChildRenderObjectWidget() {
    },
    MultiChildRenderObjectWidget: function MultiChildRenderObjectWidget() {
    },
    _ElementLifecycle: function _ElementLifecycle(t0) {
      this._framework$_name = t0;
    },
    _InactiveElements: function _InactiveElements(t0) {
      this._locked = false;
      this._framework$_elements = t0;
    },
    _InactiveElements__unmount_closure: function _InactiveElements__unmount_closure(t0, t1) {
      this.$this = t0;
      this.element = t1;
    },
    BuildContext: function BuildContext() {
    },
    BuildOwner: function BuildOwner(t0, t1, t2) {
      var _ = this;
      _.onBuildScheduled = null;
      _._inactiveElements = t0;
      _._dirtyElements = t1;
      _._scheduledFlushDirtyElements = false;
      _._dirtyElementsNeedsResorting = null;
      _.focusManager = t2;
      _._debugStateLockLevel = 0;
      _._debugBuilding = false;
      _._debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans = _._debugCurrentBuildTarget = null;
    },
    BuildOwner_buildScope_closure: function BuildOwner_buildScope_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    BuildOwner_finalizeTree_closure: function BuildOwner_finalizeTree_closure(t0) {
      this.$this = t0;
    },
    Element: function Element() {
    },
    Element_renderObject_visit: function Element_renderObject_visit(t0) {
      this._box_0 = t0;
    },
    Element_updateSlotForChild_visit: function Element_updateSlotForChild_visit(t0) {
      this.newSlot = t0;
    },
    Element__updateDepth_closure: function Element__updateDepth_closure(t0) {
      this.expectedDepth = t0;
    },
    Element_detachRenderObject_closure: function Element_detachRenderObject_closure() {
    },
    Element_attachRenderObject_closure: function Element_attachRenderObject_closure(t0) {
      this.newSlot = t0;
    },
    Element_debugDescribeChildren_closure: function Element_debugDescribeChildren_closure(t0) {
      this.children = t0;
    },
    _ElementDiagnosticableTreeNode: function _ElementDiagnosticableTreeNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.stateful = t0;
      _.value = t1;
      _._cachedBuilder = null;
      _.name = t2;
      _.showSeparator = t3;
      _.showName = t4;
      _.linePrefix = t5;
      _.style = t6;
    },
    ErrorWidget: function ErrorWidget(t0, t1, t2) {
      this.message = t0;
      this._flutterError = t1;
      this.key = t2;
    },
    ComponentElement: function ComponentElement() {
    },
    ComponentElement_performRebuild_closure: function ComponentElement_performRebuild_closure(t0) {
      this.$this = t0;
    },
    ComponentElement_performRebuild_closure0: function ComponentElement_performRebuild_closure0(t0) {
      this.$this = t0;
    },
    StatelessElement: function StatelessElement(t0, t1, t2, t3) {
      var _ = this;
      _._parent = _._framework$_child = null;
      _._cachedHash = t0;
      _._depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    StatefulElement: function StatefulElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._framework$_state = t0;
      _._didChangeDependencies = false;
      _._parent = _._framework$_child = null;
      _._cachedHash = t1;
      _._depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    ProxyElement: function ProxyElement() {
    },
    ParentDataElement: function ParentDataElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._parent = _._framework$_child = null;
      _._cachedHash = t0;
      _._depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
      _.$ti = t4;
    },
    ParentDataElement__applyParentData_applyParentDataToChild: function ParentDataElement__applyParentData_applyParentDataToChild(t0) {
      this.widget = t0;
    },
    InheritedElement: function InheritedElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._dependents = t0;
      _._parent = _._framework$_child = null;
      _._cachedHash = t1;
      _._depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    RenderObjectElement: function RenderObjectElement() {
    },
    RenderObjectElement_updateChildren_replaceWithNullIfForgotten: function RenderObjectElement_updateChildren_replaceWithNullIfForgotten(t0) {
      this.forgottenChildren = t0;
    },
    RootRenderObjectElement: function RootRenderObjectElement() {
    },
    LeafRenderObjectElement: function LeafRenderObjectElement(t0, t1, t2, t3) {
      var _ = this;
      _._parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _._cachedHash = t0;
      _._depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    SingleChildRenderObjectElement: function SingleChildRenderObjectElement(t0, t1, t2, t3) {
      var _ = this;
      _._parent = _._ancestorRenderObjectElement = _._renderObject = _._framework$_child = null;
      _._cachedHash = t0;
      _._depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    MultiChildRenderObjectElement: function MultiChildRenderObjectElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._framework$_children = null;
      _._forgottenChildren = t0;
      _._parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _._cachedHash = t1;
      _._depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    MultiChildRenderObjectElement_children_closure: function MultiChildRenderObjectElement_children_closure(t0) {
      this.$this = t0;
    },
    DebugCreator: function DebugCreator(t0) {
      this.element = t0;
    },
    IndexedSlot: function IndexedSlot(t0, t1, t2) {
      this.value = t0;
      this.index = t1;
      this.$ti = t2;
    },
    _State_Object_Diagnosticable: function _State_Object_Diagnosticable() {
    },
    _ElementLocationStatsTracker$: function() {
      var t1 = type$.JSArray__LocationCount;
      return new N._ElementLocationStatsTracker(H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1));
    },
    transformDebugCreator: function(properties) {
      return N.transformDebugCreator$body(properties);
    },
    transformDebugCreator$body: function($async$properties) {
      return P._makeSyncStarIterable(function() {
        var properties = $async$properties;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, foundStackTrace, t2, pending;
        return function $async$transformDebugCreator($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                pending = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
                t1 = J.get$iterator$ax(properties), foundStackTrace = false;
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                t2 = t1.get$current(t1);
                if (!foundStackTrace && t2 instanceof U.DiagnosticsStackTrace)
                  foundStackTrace = true;
                $async$goto = t2 instanceof K.DiagnosticsDebugCreator ? 4 : 6;
                break;
              case 4:
                // then
                $async$goto = 7;
                return P._IterationMarker_yieldStar(N._parseDiagnosticsNode(t2));
              case 7:
                // after yield
                // goto join
                $async$goto = 5;
                break;
              case 6:
                // else
                $async$goto = foundStackTrace ? 8 : 10;
                break;
              case 8:
                // then
                pending.push(t2);
                // goto join
                $async$goto = 9;
                break;
              case 10:
                // else
                $async$goto = 11;
                return t2;
              case 11:
                // after yield
              case 9:
                // join
              case 5:
                // join
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                $async$goto = 12;
                return P._IterationMarker_yieldStar(pending);
              case 12:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    _parseDiagnosticsNode: function(node) {
      if (!(node instanceof K.DiagnosticsDebugCreator))
        return null;
      return N._describeRelevantUserCode(type$.DebugCreator._as(node.get$value(node)).element);
    },
    _describeRelevantUserCode: function(element) {
      var nodes, t1, _null = null;
      if (!$.$get$WidgetInspectorService__instance().isWidgetCreationTracked$0())
        return H.setRuntimeTypeInfo([new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["Widget creation tracking is currently disabled. Enabling it enables improved error messages. It can be enabled by passing `--track-widget-creation` to `flutter run` or `flutter test`."], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), new U.ErrorSpacer("", false, true, _null, _null, _null, false, _null, C.C__NoDefaultValue, C.DiagnosticLevel_3, "", true, false, _null, C.DiagnosticsTreeStyle_8)], type$.JSArray_DiagnosticsNode);
      nodes = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
      t1 = new N._describeRelevantUserCode_processElement(nodes);
      if (t1.call$1(element))
        element.visitAncestorElements$1(t1);
      return nodes;
    },
    _isLocalCreationLocation: function(object) {
      N._getCreationLocation(object);
      return false;
    },
    _getCreationLocation: function(object) {
      if (object instanceof N.Element)
        object.get$widget();
      return null;
    },
    _InspectorReferenceData: function _InspectorReferenceData() {
    },
    _WidgetInspectorService: function _WidgetInspectorService(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.WidgetInspectorService__serializeRing = t0;
      _.WidgetInspectorService__serializeRingIndex = t1;
      _.WidgetInspectorService_selection = t2;
      _.WidgetInspectorService_selectionChangedCallback = t3;
      _.WidgetInspectorService__groups = t4;
      _.WidgetInspectorService__idToReferenceData = t5;
      _.WidgetInspectorService__objectToId = t6;
      _.WidgetInspectorService__nextId = t7;
      _.WidgetInspectorService__pubRootDirectories = t8;
      _.WidgetInspectorService__trackRebuildDirtyWidgets = t9;
      _.WidgetInspectorService__trackRepaintWidgets = t10;
      _.WidgetInspectorService__registerServiceExtensionCallback = t11;
      _.WidgetInspectorService__errorsSinceReload = t12;
      _.WidgetInspectorService__widgetCreationTracked = t13;
      _.WidgetInspectorService__frameStart = t14;
      _.WidgetInspectorService__rebuildStats = t15;
      _.WidgetInspectorService__repaintStats = t16;
    },
    WidgetInspectorService: function WidgetInspectorService() {
    },
    _LocationCount: function _LocationCount() {
    },
    _ElementLocationStatsTracker: function _ElementLocationStatsTracker(t0, t1, t2) {
      this._widget_inspector$_stats = t0;
      this.active = t1;
      this.newLocations = t2;
    },
    InspectorSelection: function InspectorSelection(t0) {
      var _ = this;
      _._candidates = t0;
      _._widget_inspector$_index = 0;
      _._widget_inspector$_currentElement = _._widget_inspector$_current = null;
    },
    _describeRelevantUserCode_processElement: function _describeRelevantUserCode_processElement(t0) {
      this.nodes = t0;
    },
    _TypedDataBuffer0: function _TypedDataBuffer0() {
    },
    _IntBuffer0: function _IntBuffer0() {
    },
    Uint8Buffer0: function Uint8Buffer0(t0, t1) {
      this._typed_buffers$_buffer = t0;
      this._typed_buffers$_length = t1;
    },
    insertionSort: function(list, compare, end, start, $T) {
      var pos, element, max, min, mid;
      for (pos = start + 1; pos < end;) {
        element = list[pos];
        for (max = pos, min = start; min < max;) {
          mid = min + C.JSInt_methods._shrOtherPositive$1(max - min, 1);
          if (compare.call$2(element, list[mid]) < 0)
            max = mid;
          else
            min = mid + 1;
        }
        ++pos;
        C.JSArray_methods.setRange$4(list, min + 1, pos, list, min);
        list[min] = element;
      }
    },
    mergeSort: function(list, compare, $T) {
      var middle, secondLength, t1, scratchSpace, firstTarget,
        end = list.length,
        $length = end - 0;
      if ($length < 2)
        return;
      if ($length < 32) {
        N.insertionSort(list, compare, end, 0, $T);
        return;
      }
      middle = C.JSInt_methods._shrOtherPositive$1($length, 1);
      secondLength = end - middle;
      t1 = new Array(secondLength);
      t1.fixed$length = Array;
      scratchSpace = H.setRuntimeTypeInfo(t1, $T._eval$1("JSArray<0>"));
      N._mergeSort(list, compare, middle, end, scratchSpace, 0);
      firstTarget = end - (middle - 0);
      N._mergeSort(list, compare, 0, middle, list, firstTarget);
      N._merge(compare, list, firstTarget, end, scratchSpace, 0, secondLength, list, 0);
    },
    _movingInsertionSort: function(list, compare, start, end, target, targetOffset) {
      var i, element, max, max0, min, mid,
        $length = end - start;
      if ($length === 0)
        return;
      target[targetOffset] = list[start];
      for (i = 1; i < $length; ++i) {
        element = list[start + i];
        max = targetOffset + i;
        for (max0 = max, min = targetOffset; min < max0;) {
          mid = min + C.JSInt_methods._shrOtherPositive$1(max0 - min, 1);
          if (compare.call$2(element, target[mid]) < 0)
            max0 = mid;
          else
            min = mid + 1;
        }
        C.JSArray_methods.setRange$4(target, min + 1, max + 1, target, min);
        target[min] = element;
      }
    },
    _mergeSort: function(list, compare, start, end, target, targetOffset) {
      var middle, firstLength, targetMiddle,
        $length = end - start;
      if ($length < 32) {
        N._movingInsertionSort(list, compare, start, end, target, targetOffset);
        return;
      }
      middle = start + C.JSInt_methods._shrOtherPositive$1($length, 1);
      firstLength = middle - start;
      targetMiddle = targetOffset + firstLength;
      N._mergeSort(list, compare, middle, end, target, targetMiddle);
      N._mergeSort(list, compare, start, middle, list, middle);
      N._merge(compare, list, middle, middle + firstLength, target, targetMiddle, targetMiddle + (end - middle), target, targetOffset);
    },
    _merge: function(compare, firstList, firstStart, firstEnd, secondList, secondStart, secondEnd, target, targetOffset) {
      var targetOffset0, cursor10, cursor20,
        cursor1 = firstStart + 1,
        firstElement = firstList[firstStart],
        cursor2 = secondStart + 1,
        secondElement = secondList[secondStart];
      for (; true; targetOffset = targetOffset0) {
        targetOffset0 = targetOffset + 1;
        if (compare.call$2(firstElement, secondElement) <= 0) {
          target[targetOffset] = firstElement;
          if (cursor1 === firstEnd) {
            targetOffset = targetOffset0;
            break;
          }
          cursor10 = cursor1 + 1;
          firstElement = firstList[cursor1];
        } else {
          target[targetOffset] = secondElement;
          if (cursor2 !== secondEnd) {
            cursor20 = cursor2 + 1;
            secondElement = secondList[cursor2];
            cursor2 = cursor20;
            continue;
          }
          targetOffset = targetOffset0 + 1;
          target[targetOffset0] = firstElement;
          C.JSArray_methods.setRange$4(target, targetOffset, targetOffset + (firstEnd - cursor1), firstList, cursor1);
          return;
        }
        cursor1 = cursor10;
      }
      targetOffset0 = targetOffset + 1;
      target[targetOffset] = secondElement;
      C.JSArray_methods.setRange$4(target, targetOffset0, targetOffset0 + (secondEnd - cursor2), secondList, cursor2);
    },
    positionDependentBox: function(childSize, preferBelow, size, target, verticalOffset) {
      var fitsAbove, tooltipBelow, y, x, normalizedTargetX, edge,
        t1 = target._dy,
        t2 = t1 + verticalOffset,
        t3 = childSize._dy,
        t4 = size._dy - 10,
        fitsBelow = t2 + t3 <= t4;
      t3 = t1 - verticalOffset - t3;
      fitsAbove = t3 >= 10;
      if (preferBelow)
        tooltipBelow = fitsBelow || !fitsAbove;
      else
        tooltipBelow = !(fitsAbove || !fitsBelow);
      y = tooltipBelow ? Math.min(t2, t4) : Math.max(t3, 10);
      t1 = size._dx;
      t2 = childSize._dx;
      if (t1 - 20 < t2)
        x = (t1 - t2) / 2;
      else {
        t3 = t1 - 10;
        normalizedTargetX = J.clamp$2$n(target._dx, 10, t3);
        t4 = t2 / 2;
        edge = 10 + t4;
        if (normalizedTargetX < edge)
          x = 10;
        else
          x = normalizedTargetX > t1 - edge ? t3 - t2 : normalizedTargetX - t4;
      }
      return new P.Offset(x, y);
    }
  },
  B = {Listenable: function Listenable() {
    }, ChangeNotifier: function ChangeNotifier() {
    }, ChangeNotifier_notifyListeners_closure: function ChangeNotifier_notifyListeners_closure(t0) {
      this.$this = t0;
    }, _MergingListenable: function _MergingListenable(t0) {
      this._change_notifier$_children = t0;
    }, ValueNotifier: function ValueNotifier(t0, t1) {
      this._change_notifier$_value = t0;
      this.ChangeNotifier__listeners = t1;
    }, AbstractNode: function AbstractNode() {
    }, _Vector: function _Vector(t0, t1, t2) {
      this._lsq_solver$_offset = t0;
      this._lsq_solver$_length = t1;
      this._lsq_solver$_elements = t2;
    }, _Matrix: function _Matrix(t0, t1) {
      this._columns = t0;
      this._lsq_solver$_elements = t1;
    }, PolynomialFit: function PolynomialFit(t0) {
      this.coefficients = t0;
      this.confidence = null;
    }, LeastSquaresSolver: function LeastSquaresSolver(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.w = t2;
    },
    IconButton$: function(color, icon, onPressed, tooltip) {
      return new B.IconButton(icon, color, onPressed, tooltip, null);
    },
    IconButton: function IconButton(t0, t1, t2, t3, t4) {
      var _ = this;
      _.icon = t0;
      _.color = t1;
      _.onPressed = t2;
      _.tooltip = t3;
      _.key = t4;
    },
    MultiChildLayoutParentData: function MultiChildLayoutParentData(t0, t1, t2) {
      var _ = this;
      _.id = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    MultiChildLayoutDelegate: function MultiChildLayoutDelegate() {
    },
    RenderCustomMultiChildLayoutBox: function RenderCustomMultiChildLayoutBox(t0, t1, t2, t3) {
      var _ = this;
      _._custom_layout$_delegate = t0;
      _.ContainerRenderObjectMixin__childCount = t1;
      _.ContainerRenderObjectMixin__firstChild = t2;
      _.ContainerRenderObjectMixin__lastChild = t3;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin: function _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    RawKeyEvent_RawKeyEvent$fromMessage: function(message) {
      var t2, t3, t4, t5, t6, t7, t8, data, type,
        _s9_ = "codePoint",
        _s7_ = "keyCode",
        _s8_ = "scanCode",
        _s9_0 = "metaState",
        _s9_1 = "modifiers",
        t1 = J.getInterceptor$asx(message),
        keymap = H._asStringS(t1.$index(message, "keymap"));
      switch (keymap) {
        case "android":
          t2 = H._asIntS(t1.$index(message, "flags"));
          if (t2 == null)
            t2 = 0;
          t3 = H._asIntS(t1.$index(message, _s9_));
          if (t3 == null)
            t3 = 0;
          t4 = H._asIntS(t1.$index(message, _s7_));
          if (t4 == null)
            t4 = 0;
          t5 = H._asIntS(t1.$index(message, "plainCodePoint"));
          if (t5 == null)
            t5 = 0;
          t6 = H._asIntS(t1.$index(message, _s8_));
          if (t6 == null)
            t6 = 0;
          t7 = H._asIntS(t1.$index(message, _s9_0));
          if (t7 == null)
            t7 = 0;
          t8 = H._asIntS(t1.$index(message, "source"));
          if (t8 == null)
            t8 = 0;
          H._asIntS(t1.$index(message, "vendorId"));
          H._asIntS(t1.$index(message, "productId"));
          H._asIntS(t1.$index(message, "deviceId"));
          H._asIntS(t1.$index(message, "repeatCount"));
          data = new Q.RawKeyEventDataAndroid(t2, t3, t5, t4, t6, t7, t8);
          break;
        case "fuchsia":
          t2 = H._asIntS(t1.$index(message, "hidUsage"));
          if (t2 == null)
            t2 = 0;
          t3 = H._asIntS(t1.$index(message, _s9_));
          if (t3 == null)
            t3 = 0;
          t4 = H._asIntS(t1.$index(message, _s9_1));
          data = new Q.RawKeyEventDataFuchsia(t2, t3, t4 == null ? 0 : t4);
          break;
        case "macos":
          t2 = H._asStringS(t1.$index(message, "characters"));
          if (t2 == null)
            t2 = "";
          t3 = H._asStringS(t1.$index(message, "charactersIgnoringModifiers"));
          if (t3 == null)
            t3 = "";
          t4 = H._asIntS(t1.$index(message, _s7_));
          if (t4 == null)
            t4 = 0;
          t5 = H._asIntS(t1.$index(message, _s9_1));
          data = new B.RawKeyEventDataMacOs(t2, t3, t4, t5 == null ? 0 : t5);
          break;
        case "linux":
          t2 = H._asStringS(t1.$index(message, "toolkit"));
          t2 = O.KeyHelper_KeyHelper(t2 == null ? "" : t2);
          t3 = H._asIntS(t1.$index(message, "unicodeScalarValues"));
          if (t3 == null)
            t3 = 0;
          t4 = H._asIntS(t1.$index(message, _s7_));
          if (t4 == null)
            t4 = 0;
          t5 = H._asIntS(t1.$index(message, _s8_));
          if (t5 == null)
            t5 = 0;
          t6 = H._asIntS(t1.$index(message, _s9_1));
          if (t6 == null)
            t6 = 0;
          data = new O.RawKeyEventDataLinux(t2, t3, t5, t4, t6, J.$eq$(t1.$index(message, "type"), "keydown"));
          break;
        case "web":
          data = new A.RawKeyEventDataWeb(H._asStringS(t1.$index(message, "code")), H._asStringS(t1.$index(message, "key")), H._asIntS(t1.$index(message, _s9_0)));
          break;
        case "windows":
          data = new R.RawKeyEventDataWindows(H._asIntS(t1.$index(message, _s7_)), H._asIntS(t1.$index(message, _s8_)), H._asIntS(t1.$index(message, "characterCodePoint")), H._asIntS(t1.$index(message, _s9_1)));
          break;
        default:
          throw H.wrapException(U.FlutterError_FlutterError("Unknown keymap for key events: " + H.S(keymap)));
      }
      type = H._asStringS(t1.$index(message, "type"));
      switch (type) {
        case "keydown":
          H._asStringS(t1.$index(message, "character"));
          return new B.RawKeyDownEvent(data);
        case "keyup":
          return new B.RawKeyUpEvent(data);
        default:
          throw H.wrapException(U.FlutterError_FlutterError("Unknown key event type: " + H.S(type)));
      }
    },
    KeyboardSide: function KeyboardSide(t0) {
      this._raw_keyboard$_name = t0;
    },
    ModifierKey: function ModifierKey(t0) {
      this._raw_keyboard$_name = t0;
    },
    RawKeyEventData: function RawKeyEventData() {
    },
    RawKeyEvent: function RawKeyEvent() {
    },
    RawKeyDownEvent: function RawKeyDownEvent(t0) {
      this.data = t0;
    },
    RawKeyUpEvent: function RawKeyUpEvent(t0) {
      this.data = t0;
    },
    RawKeyboard: function RawKeyboard(t0, t1) {
      this._raw_keyboard$_listeners = t0;
      this._keysPressed = t1;
    },
    _ModifierSidePair: function _ModifierSidePair(t0, t1) {
      this.modifier = t0;
      this.side = t1;
    },
    _RawKeyEvent_Object_Diagnosticable: function _RawKeyEvent_Object_Diagnosticable() {
    },
    RawKeyEventDataMacOs__isUnprintableKey: function(label) {
      var codeUnit;
      if (label.length > 1)
        return false;
      codeUnit = J._codeUnitAt$1$s(label, 0);
      return codeUnit >= 63232 && codeUnit <= 63743;
    },
    RawKeyEventDataMacOs: function RawKeyEventDataMacOs(t0, t1, t2, t3) {
      var _ = this;
      _.characters = t0;
      _.charactersIgnoringModifiers = t1;
      _.keyCode = t2;
      _.modifiers = t3;
    },
    RawKeyEventDataMacOs_getModifierSide_findSide: function RawKeyEventDataMacOs_getModifierSide_findSide(t0) {
      this.$this = t0;
    },
    ListView$builder: function(controller, itemBuilder, itemCount) {
      var _null = null,
        t1 = controller == null && true,
        t2 = controller == null && true;
      t2 = t2 ? C.AlwaysScrollableScrollPhysics_null : _null;
      return new B.ListView(_null, new G.SliverChildBuilderDelegate(itemBuilder, itemCount, true, true, true), _null, C.Axis_1, false, controller, t1, t2, false, _null, itemCount, C.DragStartBehavior_1, C.ScrollViewKeyboardDismissBehavior_0, _null);
    },
    ScrollViewKeyboardDismissBehavior: function ScrollViewKeyboardDismissBehavior(t0) {
      this._scroll_view$_name = t0;
    },
    ScrollView: function ScrollView() {
    },
    ScrollView_build_closure: function ScrollView_build_closure(t0, t1, t2) {
      this.$this = t0;
      this.axisDirection = t1;
      this.slivers = t2;
    },
    ScrollView_build_closure0: function ScrollView_build_closure0(t0) {
      this.context = t0;
    },
    BoxScrollView: function BoxScrollView() {
    },
    ListView: function ListView(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.itemExtent = t0;
      _.childrenDelegate = t1;
      _.padding = t2;
      _.scrollDirection = t3;
      _.reverse = t4;
      _.controller = t5;
      _.primary = t6;
      _.physics = t7;
      _.shrinkWrap = t8;
      _.cacheExtent = t9;
      _.semanticChildCount = t10;
      _.dragStartBehavior = t11;
      _.keyboardDismissBehavior = t12;
      _.key = t13;
    },
    nearEqual: function(a, b, epsilon) {
      if (a == null || b == null)
        return a == b;
      return a > b - epsilon && a < b + epsilon || a === b;
    }
  },
  F = {
    LicenseRegistry_addLicense: function(collector) {
      var t1 = $.LicenseRegistry__collectors;
      (t1 == null ? $.LicenseRegistry__collectors = H.setRuntimeTypeInfo([], type$.JSArray_of_Stream_LicenseEntry_Function) : t1).push(collector);
    },
    LicenseEntry: function LicenseEntry() {
    },
    LicenseEntryWithLineBreaks: function LicenseEntryWithLineBreaks() {
    },
    PointerEvent_transformPosition: function(transform, position) {
      var t1, t2, position3;
      if (transform == null)
        return position;
      t1 = position._dx;
      t2 = position._dy;
      position3 = new E.Vector3(new Float64Array(3));
      position3.setValues$3(t1, t2, 0);
      t1 = transform.perspectiveTransform$1(position3)._v3storage;
      return new P.Offset(t1[0], t1[1]);
    },
    PointerEvent_transformDeltaViaPositions: function(transform, transformedEndPosition, untransformedDelta, untransformedEndPosition) {
      if (transform == null)
        return untransformedDelta;
      if (transformedEndPosition == null)
        transformedEndPosition = F.PointerEvent_transformPosition(transform, untransformedEndPosition);
      return transformedEndPosition.$sub(0, F.PointerEvent_transformPosition(transform, untransformedEndPosition.$sub(0, untransformedDelta)));
    },
    PointerEvent_removePerspectiveTransform: function(transform) {
      var t2, t3,
        t1 = new Float64Array(4),
        vector = new E.Vector4(t1);
      vector.setValues$4(0, 0, 1, 0);
      transform.toString;
      t2 = new Float64Array(16);
      t3 = new E.Matrix4(t2);
      t3.setFrom$1(transform);
      t2[11] = t1[3];
      t2[10] = t1[2];
      t2[9] = t1[1];
      t2[8] = t1[0];
      t3.setRow$2(2, vector);
      return t3;
    },
    PointerAddedEvent$: function(device, distance, distanceMax, kind, localPosition, obscured, orientation, original, position, pressureMax, pressureMin, radiusMax, radiusMin, tilt, timeStamp, transform) {
      var t1 = localPosition == null ? position : localPosition;
      return new F.PointerAddedEvent(timeStamp, 0, kind, device, position, t1, C.Offset_0_0, C.Offset_0_0, 0, false, obscured, 0, pressureMin, pressureMax, distance, distanceMax, 0, 0, 0, radiusMin, radiusMax, orientation, tilt, 0, false, transform, original);
    },
    PointerRemovedEvent$: function(device, distanceMax, kind, localPosition, obscured, original, position, pressureMax, pressureMin, radiusMax, radiusMin, timeStamp, transform) {
      var t1 = localPosition == null ? position : localPosition;
      return new F.PointerRemovedEvent(timeStamp, 0, kind, device, position, t1, C.Offset_0_0, C.Offset_0_0, 0, false, obscured, 0, pressureMin, pressureMax, 0, distanceMax, 0, 0, 0, radiusMin, radiusMax, 0, 0, 0, false, transform, original);
    },
    PointerHoverEvent$: function(buttons, delta, device, distance, distanceMax, kind, localDelta, localPosition, obscured, orientation, original, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp, transform) {
      var t1 = localPosition == null ? position : localPosition;
      return new F.PointerHoverEvent(timeStamp, 0, kind, device, position, t1, delta, localDelta == null ? delta : localDelta, buttons, false, obscured, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, synthesized, transform, original);
    },
    PointerEnterEvent$: function(buttons, delta, device, distance, distanceMax, down, kind, localDelta, localPosition, obscured, orientation, original, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp, transform) {
      var t1 = localPosition == null ? position : localPosition;
      return new F.PointerEnterEvent(timeStamp, 0, kind, device, position, t1, delta, localDelta == null ? delta : localDelta, buttons, down, obscured, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, synthesized, transform, original);
    },
    PointerExitEvent$: function(buttons, delta, device, distance, distanceMax, down, kind, localDelta, localPosition, obscured, orientation, original, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp, transform) {
      var t1 = localPosition == null ? position : localPosition;
      return new F.PointerExitEvent(timeStamp, 0, kind, device, position, t1, delta, localDelta == null ? delta : localDelta, buttons, down, obscured, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, synthesized, transform, original);
    },
    PointerDownEvent$: function(buttons, device, distanceMax, kind, localPosition, obscured, orientation, original, pointer, position, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, tilt, timeStamp, transform) {
      var t1 = localPosition == null ? position : localPosition;
      return new F.PointerDownEvent(timeStamp, pointer, kind, device, position, t1, C.Offset_0_0, C.Offset_0_0, buttons, true, obscured, pressure, pressureMin, pressureMax, 0, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, transform, original);
    },
    PointerMoveEvent$: function(buttons, delta, device, distanceMax, kind, localDelta, localPosition, obscured, orientation, original, platformData, pointer, position, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp, transform) {
      var t1 = localPosition == null ? position : localPosition;
      return new F.PointerMoveEvent(timeStamp, pointer, kind, device, position, t1, delta, localDelta == null ? delta : localDelta, buttons, true, obscured, pressure, pressureMin, pressureMax, 0, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, platformData, synthesized, transform, original);
    },
    PointerUpEvent$: function(buttons, device, distance, distanceMax, kind, localPosition, obscured, orientation, original, pointer, position, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, tilt, timeStamp, transform) {
      var t1 = localPosition == null ? position : localPosition;
      return new F.PointerUpEvent(timeStamp, pointer, kind, device, position, t1, C.Offset_0_0, C.Offset_0_0, buttons, false, obscured, pressure, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, transform, original);
    },
    PointerScrollEvent$: function(device, kind, localPosition, original, position, scrollDelta, timeStamp, transform) {
      var t1 = localPosition == null ? position : localPosition;
      return new F.PointerScrollEvent(scrollDelta, timeStamp, 0, kind, device, position, t1, C.Offset_0_0, C.Offset_0_0, 0, false, false, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, false, transform, original);
    },
    PointerCancelEvent$: function(buttons, device, distance, distanceMax, kind, localPosition, obscured, orientation, original, pointer, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, tilt, timeStamp, transform) {
      var t1 = localPosition == null ? position : localPosition;
      return new F.PointerCancelEvent(timeStamp, pointer, kind, device, position, t1, C.Offset_0_0, C.Offset_0_0, buttons, false, obscured, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, transform, original);
    },
    PointerEvent0: function PointerEvent0() {
    },
    PointerAddedEvent: function PointerAddedEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.timeStamp = t0;
      _.pointer = t1;
      _.kind = t2;
      _.device = t3;
      _.position = t4;
      _.localPosition = t5;
      _.delta = t6;
      _.localDelta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    PointerRemovedEvent: function PointerRemovedEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.timeStamp = t0;
      _.pointer = t1;
      _.kind = t2;
      _.device = t3;
      _.position = t4;
      _.localPosition = t5;
      _.delta = t6;
      _.localDelta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    PointerHoverEvent: function PointerHoverEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.timeStamp = t0;
      _.pointer = t1;
      _.kind = t2;
      _.device = t3;
      _.position = t4;
      _.localPosition = t5;
      _.delta = t6;
      _.localDelta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    PointerEnterEvent: function PointerEnterEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.timeStamp = t0;
      _.pointer = t1;
      _.kind = t2;
      _.device = t3;
      _.position = t4;
      _.localPosition = t5;
      _.delta = t6;
      _.localDelta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    PointerExitEvent: function PointerExitEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.timeStamp = t0;
      _.pointer = t1;
      _.kind = t2;
      _.device = t3;
      _.position = t4;
      _.localPosition = t5;
      _.delta = t6;
      _.localDelta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    PointerDownEvent: function PointerDownEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.timeStamp = t0;
      _.pointer = t1;
      _.kind = t2;
      _.device = t3;
      _.position = t4;
      _.localPosition = t5;
      _.delta = t6;
      _.localDelta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    PointerMoveEvent: function PointerMoveEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.timeStamp = t0;
      _.pointer = t1;
      _.kind = t2;
      _.device = t3;
      _.position = t4;
      _.localPosition = t5;
      _.delta = t6;
      _.localDelta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    PointerUpEvent: function PointerUpEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.timeStamp = t0;
      _.pointer = t1;
      _.kind = t2;
      _.device = t3;
      _.position = t4;
      _.localPosition = t5;
      _.delta = t6;
      _.localDelta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    PointerSignalEvent: function PointerSignalEvent() {
    },
    PointerScrollEvent: function PointerScrollEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27) {
      var _ = this;
      _.scrollDelta = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.localPosition = t6;
      _.delta = t7;
      _.localDelta = t8;
      _.buttons = t9;
      _.down = t10;
      _.obscured = t11;
      _.pressure = t12;
      _.pressureMin = t13;
      _.pressureMax = t14;
      _.distance = t15;
      _.distanceMax = t16;
      _.size = t17;
      _.radiusMajor = t18;
      _.radiusMinor = t19;
      _.radiusMin = t20;
      _.radiusMax = t21;
      _.orientation = t22;
      _.tilt = t23;
      _.platformData = t24;
      _.synthesized = t25;
      _.transform = t26;
      _.original = t27;
    },
    PointerCancelEvent: function PointerCancelEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.timeStamp = t0;
      _.pointer = t1;
      _.kind = t2;
      _.device = t3;
      _.position = t4;
      _.localPosition = t5;
      _.delta = t6;
      _.localDelta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _PointerEvent_Object_Diagnosticable: function _PointerEvent_Object_Diagnosticable() {
    },
    _CountdownZoned: function _CountdownZoned() {
      this._timeout = false;
    },
    _TapTracker: function _TapTracker(t0, t1, t2, t3, t4) {
      var _ = this;
      _.pointer = t0;
      _.entry = t1;
      _._initialGlobalPosition = t2;
      _.initialButtons = t3;
      _._doubleTapMinTimeCountdown = t4;
      _._isTrackingPointer = false;
    },
    DoubleTapGestureRecognizer: function DoubleTapGestureRecognizer(t0, t1, t2, t3) {
      var _ = this;
      _._firstTap = _._doubleTapTimer = _.onDoubleTap = null;
      _._trackers = t0;
      _.debugOwner = t1;
      _._kindFilter = t2;
      _._pointerToKind = t3;
    },
    RenderToggleable: function RenderToggleable() {
    },
    BoxBorder_lerp: function(a, b, t) {
      var t1, t2, t0;
      if (a instanceof F.Border || a == null)
        t1 = b instanceof F.Border || b == null;
      else
        t1 = false;
      if (t1) {
        t1 = type$.Border;
        return F.Border_lerp(t1._as(a), t1._as(b), t);
      }
      t1 = a instanceof F.BorderDirectional;
      if (t1 || a == null)
        t2 = b instanceof F.BorderDirectional || b == null;
      else
        t2 = false;
      if (t2) {
        t1 = type$.BorderDirectional;
        return F.BorderDirectional_lerp(t1._as(a), t1._as(b), t);
      }
      if (b instanceof F.Border && t1) {
        t = 1 - t;
        t0 = b;
        b = a;
        a = t0;
      }
      if (a instanceof F.Border && b instanceof F.BorderDirectional) {
        t1 = b.start;
        if (t1.$eq(0, C.BorderSide_m7u) && b.end.$eq(0, C.BorderSide_m7u))
          return new F.Border(Y.BorderSide_lerp(a.top, b.top, t), Y.BorderSide_lerp(a.right, C.BorderSide_m7u, t), Y.BorderSide_lerp(a.bottom, b.bottom, t), Y.BorderSide_lerp(a.left, C.BorderSide_m7u, t));
        t2 = a.left;
        if (t2.$eq(0, C.BorderSide_m7u) && a.right.$eq(0, C.BorderSide_m7u))
          return new F.BorderDirectional(Y.BorderSide_lerp(a.top, b.top, t), Y.BorderSide_lerp(C.BorderSide_m7u, t1, t), Y.BorderSide_lerp(C.BorderSide_m7u, b.end, t), Y.BorderSide_lerp(a.bottom, b.bottom, t));
        if (t < 0.5) {
          t1 = t * 2;
          return new F.Border(Y.BorderSide_lerp(a.top, b.top, t), Y.BorderSide_lerp(a.right, C.BorderSide_m7u, t1), Y.BorderSide_lerp(a.bottom, b.bottom, t), Y.BorderSide_lerp(t2, C.BorderSide_m7u, t1));
        }
        t2 = (t - 0.5) * 2;
        return new F.BorderDirectional(Y.BorderSide_lerp(a.top, b.top, t), Y.BorderSide_lerp(C.BorderSide_m7u, t1, t2), Y.BorderSide_lerp(C.BorderSide_m7u, b.end, t2), Y.BorderSide_lerp(a.bottom, b.bottom, t));
      }
      throw H.wrapException(U.FlutterError$fromParts(H.setRuntimeTypeInfo([U.ErrorSummary$("BoxBorder.lerp can only interpolate Border and BorderDirectional classes."), U.ErrorDescription$("BoxBorder.lerp() was called with two objects of type " + J.get$runtimeType$(a).toString$0(0) + " and " + J.get$runtimeType$(b).toString$0(0) + ":\n  " + H.S(a) + "\n  " + H.S(b) + "\nHowever, only Border and BorderDirectional classes are supported by this method."), U.ErrorHint$("For a more general interpolation method, consider using ShapeBorder.lerp instead.")], type$.JSArray_DiagnosticsNode)));
    },
    BoxBorder__paintUniformBorderWithRadius: function(canvas, rect, side, borderRadius) {
      var outer, width,
        paint = new H.SurfacePaint(new H.SurfacePaintData());
      paint.set$color(0, side.color);
      outer = borderRadius.toRRect$1(rect);
      width = side.width;
      if (width === 0) {
        paint.set$style(0, C.PaintingStyle_1);
        paint.set$strokeWidth(0);
        canvas.drawRRect$2(outer, paint);
      } else
        canvas.drawDRRect$3(outer, outer.inflate$1(-width), paint);
    },
    BoxBorder__paintUniformBorderWithCircle: function(canvas, rect, side) {
      var paint = side.toPaint$0(),
        t1 = rect.get$shortestSide();
      canvas.drawCircle$3(rect.get$center(), (t1 - side.width) / 2, paint);
    },
    BoxBorder__paintUniformBorderWithRectangle: function(canvas, rect, side) {
      var paint = side.toPaint$0();
      canvas.drawRect$2(rect.inflate$1(-(side.width / 2)), paint);
    },
    Border_lerp: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.scale$1(0, t);
      if (b == null)
        return a.scale$1(0, 1 - t);
      return new F.Border(Y.BorderSide_lerp(a.top, b.top, t), Y.BorderSide_lerp(a.right, b.right, t), Y.BorderSide_lerp(a.bottom, b.bottom, t), Y.BorderSide_lerp(a.left, b.left, t));
    },
    BorderDirectional_lerp: function(a, b, t) {
      var t2, t3,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.scale$1(0, t);
      if (b == null)
        return a.scale$1(0, 1 - t);
      t1 = Y.BorderSide_lerp(a.top, b.top, t);
      t2 = Y.BorderSide_lerp(a.end, b.end, t);
      t3 = Y.BorderSide_lerp(a.bottom, b.bottom, t);
      return new F.BorderDirectional(t1, Y.BorderSide_lerp(a.start, b.start, t), t2, t3);
    },
    BoxShape: function BoxShape(t0) {
      this._box_border$_name = t0;
    },
    BoxBorder: function BoxBorder() {
    },
    Border: function Border(t0, t1, t2, t3) {
      var _ = this;
      _.top = t0;
      _.right = t1;
      _.bottom = t2;
      _.left = t3;
    },
    BorderDirectional: function BorderDirectional(t0, t1, t2, t3) {
      var _ = this;
      _.top = t0;
      _.start = t1;
      _.end = t2;
      _.bottom = t3;
    },
    _startIsTopLeft: function(direction, textDirection, verticalDirection) {
      switch (direction) {
        case C.Axis_0:
          switch (textDirection) {
            case C.TextDirection_1:
              return true;
            case C.TextDirection_0:
              return false;
          }
          break;
        case C.Axis_1:
          switch (verticalDirection) {
            case C.VerticalDirection_1:
              return true;
            case C.VerticalDirection_0:
              return false;
          }
          break;
      }
      return null;
    },
    RenderFlex$: function(children, crossAxisAlignment, direction, mainAxisAlignment, mainAxisSize, textBaseline, textDirection, verticalDirection) {
      var _null = null,
        t1 = new F.RenderFlex(direction, mainAxisAlignment, mainAxisSize, crossAxisAlignment, textDirection, verticalDirection, textBaseline, P.List_List$filled(4, U.TextPainter$(_null, _null, _null, _null, _null, C.TextAlign_4, C.TextDirection_1, _null, 1, C.TextWidthBasis_0), type$.TextPainter), true, 0, _null, _null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.addAll$1(0, children);
      return t1;
    },
    FlexFit: function FlexFit(t0) {
      this._flex$_name = t0;
    },
    FlexParentData: function FlexParentData(t0, t1, t2) {
      var _ = this;
      _.fit = _.flex = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    MainAxisSize: function MainAxisSize(t0) {
      this._flex$_name = t0;
    },
    MainAxisAlignment: function MainAxisAlignment(t0) {
      this._flex$_name = t0;
    },
    CrossAxisAlignment: function CrossAxisAlignment(t0) {
      this._flex$_name = t0;
    },
    RenderFlex: function RenderFlex(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._flex$_direction = t0;
      _._mainAxisAlignment = t1;
      _._mainAxisSize = t2;
      _._crossAxisAlignment = t3;
      _._flex$_textDirection = t4;
      _._verticalDirection = t5;
      _._flex$_textBaseline = t6;
      _._flex$_overflow = null;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t7;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t8;
      _.ContainerRenderObjectMixin__childCount = t9;
      _.ContainerRenderObjectMixin__firstChild = t10;
      _.ContainerRenderObjectMixin__lastChild = t11;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderFlex_RenderBox_ContainerRenderObjectMixin: function _RenderFlex_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin: function _RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin() {
    },
    KeepAliveParentDataMixin: function KeepAliveParentDataMixin() {
    },
    RenderSliverWithKeepAliveMixin: function RenderSliverWithKeepAliveMixin() {
    },
    SliverMultiBoxAdaptorParentData: function SliverMultiBoxAdaptorParentData(t0, t1, t2) {
      var _ = this;
      _.index = null;
      _._keptAlive = false;
      _.KeepAliveParentDataMixin_keepAlive = t0;
      _.ContainerParentDataMixin_previousSibling = t1;
      _.ContainerParentDataMixin_nextSibling = t2;
      _.layoutOffset = null;
    },
    RenderSliverMultiBoxAdaptor: function RenderSliverMultiBoxAdaptor() {
    },
    RenderSliverMultiBoxAdaptor__createOrObtainChild_closure: function RenderSliverMultiBoxAdaptor__createOrObtainChild_closure(t0, t1, t2) {
      this.$this = t0;
      this.index = t1;
      this.after = t2;
    },
    RenderSliverMultiBoxAdaptor_collectGarbage_closure: function RenderSliverMultiBoxAdaptor_collectGarbage_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    RenderSliverMultiBoxAdaptor_collectGarbage__closure: function RenderSliverMultiBoxAdaptor_collectGarbage__closure() {
    },
    _RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin: function _RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin() {
    },
    _RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers: function _RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers() {
    },
    _RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers_RenderSliverWithKeepAliveMixin: function _RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers_RenderSliverWithKeepAliveMixin() {
    },
    _SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin: function _SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin() {
    },
    _SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin_KeepAliveParentDataMixin: function _SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin_KeepAliveParentDataMixin() {
    },
    MethodCall0: function MethodCall0(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    PlatformException: function PlatformException(t0, t1, t2) {
      this.code = t0;
      this.message = t1;
      this.details = t2;
    },
    MissingPluginException: function MissingPluginException(t0) {
      this.message = t0;
    },
    MediaQueryData$: function(accessibleNavigation, alwaysUse24HourFormat, boldText, devicePixelRatio, disableAnimations, highContrast, invertColors, padding, physicalDepth, platformBrightness, size, systemGestureInsets, textScaleFactor, viewInsets, viewPadding) {
      return new F.MediaQueryData(size, devicePixelRatio, textScaleFactor, platformBrightness, viewInsets, padding, viewPadding, systemGestureInsets, physicalDepth, false, accessibleNavigation, invertColors, highContrast, disableAnimations, boldText);
    },
    MediaQuery_of: function(context, nullOk) {
      var query = context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery);
      if (query != null)
        return query.data;
      if (nullOk)
        return null;
      throw H.wrapException(U.FlutterError$fromParts(H.setRuntimeTypeInfo([U.ErrorSummary$("MediaQuery.of() called with a context that does not contain a MediaQuery."), U.ErrorDescription$("No MediaQuery ancestor could be found starting from the context that was passed to MediaQuery.of(). This can happen because you do not have a WidgetsApp or MaterialApp widget (those widgets introduce a MediaQuery), or it can happen if the context you use comes from a widget above those widgets."), context.describeElement$1("The context used was")], type$.JSArray_DiagnosticsNode)));
    },
    MediaQueryData: function MediaQueryData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.size = t0;
      _.devicePixelRatio = t1;
      _.textScaleFactor = t2;
      _.platformBrightness = t3;
      _.viewInsets = t4;
      _.padding = t5;
      _.viewPadding = t6;
      _.systemGestureInsets = t7;
      _.physicalDepth = t8;
      _.alwaysUse24HourFormat = t9;
      _.accessibleNavigation = t10;
      _.invertColors = t11;
      _.highContrast = t12;
      _.disableAnimations = t13;
      _.boldText = t14;
    },
    MediaQuery: function MediaQuery(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    ScrollController: function ScrollController(t0, t1, t2) {
      this._initialScrollOffset = t0;
      this._positions = t1;
      this.ChangeNotifier__listeners = t2;
    },
    ScrollController_animateTo_closure: function ScrollController_animateTo_closure() {
    },
    Scrollable$: function(axisDirection, controller, dragStartBehavior, physics, semanticChildCount, viewportBuilder) {
      return new F.Scrollable(axisDirection, controller, physics, viewportBuilder, semanticChildCount, dragStartBehavior, null);
    },
    Scrollable_of: function(context) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$._ScrollableScope);
      return widget == null ? null : widget.scrollable;
    },
    Scrollable_ensureVisible: function(context, alignment, alignmentPolicy) {
      var t1, widget,
        futures = H.setRuntimeTypeInfo([], type$.JSArray_Future_void),
        scrollable = F.Scrollable_of(context);
      for (t1 = type$._ScrollableScope; scrollable != null;) {
        futures.push(scrollable._scrollable$_position.ensureVisible$5$alignment$alignmentPolicy$curve$duration(context.get$renderObject(), alignment, alignmentPolicy, C.Cubic_JUR, C.Duration_0));
        context = scrollable._framework$_element;
        widget = context.dependOnInheritedWidgetOfExactType$1$0(t1);
        scrollable = widget == null ? null : widget.scrollable;
      }
      futures.length !== 0;
      t1 = new P._Future($.Zone__current, type$._Future_void);
      t1._asyncComplete$1(null);
      return t1;
    },
    Scrollable: function Scrollable(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.axisDirection = t0;
      _.controller = t1;
      _.physics = t2;
      _.viewportBuilder = t3;
      _.semanticChildCount = t4;
      _.dragStartBehavior = t5;
      _.key = t6;
    },
    _ScrollableScope: function _ScrollableScope(t0, t1, t2, t3) {
      var _ = this;
      _.scrollable = t0;
      _.position = t1;
      _.child = t2;
      _.key = t3;
    },
    ScrollableState: function ScrollableState(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._physics = _._scrollable$_configuration = _._scrollable$_position = null;
      _._scrollSemanticsKey = t0;
      _._gestureDetectorKey = t1;
      _._ignorePointerKey = t2;
      _._gestureRecognizers = t3;
      _._shouldIgnorePointer = false;
      _._hold = _._scrollable$_drag = _._scrollable$_lastAxisDirection = _._lastCanDrag = null;
      _.TickerProviderStateMixin__tickers = t4;
      _._widget = null;
      _._debugLifecycleState = t5;
      _._framework$_element = null;
    },
    ScrollableState_setCanDrag_closure: function ScrollableState_setCanDrag_closure() {
    },
    ScrollableState_setCanDrag_closure0: function ScrollableState_setCanDrag_closure0(t0) {
      this.$this = t0;
    },
    ScrollableState_setCanDrag_closure1: function ScrollableState_setCanDrag_closure1() {
    },
    ScrollableState_setCanDrag_closure2: function ScrollableState_setCanDrag_closure2(t0) {
      this.$this = t0;
    },
    _ScrollSemantics: function _ScrollSemantics(t0, t1, t2, t3, t4) {
      var _ = this;
      _.position = t0;
      _.allowImplicitScrolling = t1;
      _.semanticChildCount = t2;
      _.child = t3;
      _.key = t4;
    },
    _RenderScrollSemantics: function _RenderScrollSemantics(t0, t1, t2, t3) {
      var _ = this;
      _._scrollable$_position = t0;
      _._allowImplicitScrolling = t1;
      _._semanticChildCount = t2;
      _._innerNode = null;
      _.RenderObjectWithChildMixin__child = t3;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ScrollIncrementType: function ScrollIncrementType(t0) {
      this._scrollable$_name = t0;
    },
    ScrollIntent: function ScrollIntent(t0, t1) {
      this.direction = t0;
      this.type = t1;
    },
    ScrollAction: function ScrollAction(t0) {
      this._listeners = t0;
    },
    _ScrollableState_State_TickerProviderStateMixin: function _ScrollableState_State_TickerProviderStateMixin() {
    },
    main0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$main0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(P.webOnlyInitializePlatform(), $async$main0);
            case 2:
              // returning from await.
              Z.main();
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$main0, $async$completer);
    }
  },
  O = {SynchronousFuture: function SynchronousFuture(t0, t1) {
      this._synchronous_future$_value = t0;
      this.$ti = t1;
    }, SynchronousFuture_whenComplete_closure: function SynchronousFuture_whenComplete_closure(t0) {
      this.$this = t0;
    },
    DragDownDetails$: function(globalPosition, localPosition) {
      return new O.DragDownDetails(globalPosition);
    },
    DragStartDetails$: function(globalPosition, localPosition, sourceTimeStamp) {
      return new O.DragStartDetails(sourceTimeStamp, globalPosition);
    },
    DragUpdateDetails$: function(delta, globalPosition, localPosition, primaryDelta, sourceTimeStamp) {
      return new O.DragUpdateDetails(sourceTimeStamp, delta, primaryDelta, globalPosition);
    },
    DragDownDetails: function DragDownDetails(t0) {
      this.globalPosition = t0;
    },
    DragStartDetails: function DragStartDetails(t0, t1) {
      this.sourceTimeStamp = t0;
      this.globalPosition = t1;
    },
    DragUpdateDetails: function DragUpdateDetails(t0, t1, t2, t3) {
      var _ = this;
      _.sourceTimeStamp = t0;
      _.delta = t1;
      _.primaryDelta = t2;
      _.globalPosition = t3;
    },
    DragEndDetails: function DragEndDetails(t0, t1) {
      this.velocity = t0;
      this.primaryVelocity = t1;
    },
    HitTestTarget: function HitTestTarget() {
    },
    HitTestEntry: function HitTestEntry(t0) {
      this.target = t0;
      this._transform = null;
    },
    HitTestResult: function HitTestResult(t0, t1) {
      this._path = t0;
      this._transforms = t1;
    },
    _DragState: function _DragState(t0) {
      this._monodrag$_name = t0;
    },
    DragGestureRecognizer: function DragGestureRecognizer() {
    },
    DragGestureRecognizer__checkDown_closure: function DragGestureRecognizer__checkDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkStart_closure: function DragGestureRecognizer__checkStart_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkUpdate_closure: function DragGestureRecognizer__checkUpdate_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkEnd_closure: function DragGestureRecognizer__checkEnd_closure(t0, t1) {
      this.estimate = t0;
      this.velocity = t1;
    },
    DragGestureRecognizer__checkEnd_closure0: function DragGestureRecognizer__checkEnd_closure0(t0) {
      this.estimate = t0;
    },
    DragGestureRecognizer__checkEnd_closure1: function DragGestureRecognizer__checkEnd_closure1(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    VerticalDragGestureRecognizer: function VerticalDragGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.dragStartBehavior = t0;
      _.maxFlingVelocity = _.minFlingVelocity = _.minFlingDistance = _.onCancel = _.onEnd = _.onUpdate = _.onStart = _.onDown = null;
      _._monodrag$_state = t1;
      _._globalDistanceMoved = _._lastTransform = _._initialButtons = _._lastPendingEventTimestamp = _._pendingDragOffset = _._initialPosition = null;
      _._velocityTrackers = t2;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _._kindFilter = t6;
      _._pointerToKind = t7;
    },
    HorizontalDragGestureRecognizer: function HorizontalDragGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.dragStartBehavior = t0;
      _.maxFlingVelocity = _.minFlingVelocity = _.minFlingDistance = _.onCancel = _.onEnd = _.onUpdate = _.onStart = _.onDown = null;
      _._monodrag$_state = t1;
      _._globalDistanceMoved = _._lastTransform = _._initialButtons = _._lastPendingEventTimestamp = _._pendingDragOffset = _._initialPosition = null;
      _._velocityTrackers = t2;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _._kindFilter = t6;
      _._pointerToKind = t7;
    },
    PanGestureRecognizer: function PanGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.dragStartBehavior = t0;
      _.maxFlingVelocity = _.minFlingVelocity = _.minFlingDistance = _.onCancel = _.onEnd = _.onUpdate = _.onStart = _.onDown = null;
      _._monodrag$_state = t1;
      _._globalDistanceMoved = _._lastTransform = _._initialButtons = _._lastPendingEventTimestamp = _._pendingDragOffset = _._initialPosition = null;
      _._velocityTrackers = t2;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _._kindFilter = t6;
      _._pointerToKind = t7;
    },
    PointerRouter: function PointerRouter(t0, t1) {
      this._routeMap = t0;
      this._globalRoutes = t1;
    },
    PointerRouter_addRoute_closure: function PointerRouter_addRoute_closure() {
    },
    PointerRouter__dispatchEventToRoutes_closure: function PointerRouter__dispatchEventToRoutes_closure(t0, t1, t2) {
      this.$this = t0;
      this.referenceRoutes = t1;
      this.event = t2;
    },
    FlutterErrorDetailsForPointerRouter: function FlutterErrorDetailsForPointerRouter(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    BoxShadow_lerp: function(a, b, t) {
      var t2, t3,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.scale$1(0, t);
      if (b == null)
        return a.scale$1(0, 1 - t);
      t1 = P.Color_lerp(a.color, b.color, t);
      t2 = P.Offset_lerp(a.offset, b.offset, t);
      t3 = P.lerpDouble(a.blurRadius, b.blurRadius, t);
      return new O.BoxShadow(P.lerpDouble(a.spreadRadius, b.spreadRadius, t), t1, t2, t3);
    },
    BoxShadow_lerpList: function(a, b, t) {
      var commonLength, i, t2, t3, t4, t5, t6, t7,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        a = H.setRuntimeTypeInfo([], type$.JSArray_BoxShadow);
      if (b == null)
        b = H.setRuntimeTypeInfo([], type$.JSArray_BoxShadow);
      commonLength = Math.min(a.length, b.length);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_BoxShadow);
      for (i = 0; i < commonLength; ++i)
        t1.push(O.BoxShadow_lerp(a[i], b[i], t));
      for (i = commonLength; i < a.length; ++i) {
        t2 = a[i];
        t3 = 1 - t;
        t4 = t2.color;
        t5 = t2.offset;
        t6 = t5._dx;
        t5 = t5._dy;
        t7 = t2.blurRadius;
        t1.push(new O.BoxShadow(t2.spreadRadius * t3, t4, new P.Offset(t6 * t3, t5 * t3), t7 * t3));
      }
      for (i = commonLength; i < b.length; ++i) {
        t2 = b[i];
        t3 = t2.color;
        t4 = t2.offset;
        t5 = t4._dx;
        t4 = t4._dy;
        t6 = t2.blurRadius;
        t1.push(new O.BoxShadow(t2.spreadRadius * t, t3, new P.Offset(t5 * t, t4 * t), t6 * t));
      }
      return t1;
    },
    BoxShadow: function BoxShadow(t0, t1, t2, t3) {
      var _ = this;
      _.spreadRadius = t0;
      _.color = t1;
      _.offset = t2;
      _.blurRadius = t3;
    },
    KeyHelper_KeyHelper: function(toolkit) {
      if (toolkit === "glfw")
        return new O.GLFWKeyHelper();
      else
        throw H.wrapException(U.FlutterError_FlutterError("Window toolkit not recognized: " + toolkit));
    },
    RawKeyEventDataLinux: function RawKeyEventDataLinux(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.keyHelper = t0;
      _.unicodeScalarValues = t1;
      _.scanCode = t2;
      _.keyCode = t3;
      _.modifiers = t4;
      _.isDown = t5;
    },
    KeyHelper: function KeyHelper() {
    },
    GLFWKeyHelper: function GLFWKeyHelper() {
    },
    _GLFWKeyHelper_Object_KeyHelper: function _GLFWKeyHelper_Object_KeyHelper() {
    },
    FocusNode$: function(canRequestFocus, debugLabel, onKey, skipTraversal) {
      return new O.FocusNode(skipTraversal, canRequestFocus, onKey, H.setRuntimeTypeInfo([], type$.JSArray_FocusNode), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
    },
    FocusScopeNode$: function(canRequestFocus, debugLabel, skipTraversal) {
      var t1 = type$.JSArray_FocusNode;
      return new O.FocusScopeNode(H.setRuntimeTypeInfo([], t1), skipTraversal, canRequestFocus, null, H.setRuntimeTypeInfo([], t1), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
    },
    FocusManager$: function() {
      var t1 = P.LinkedHashMap_LinkedHashMap(type$.void_Function_FocusHighlightMode, type$.int),
        t2 = O.FocusScopeNode$(true, "Root Focus Scope", false);
      t2 = t2._manager = new O.FocusManager(new R.HashedObserverList(t1, type$.HashedObserverList_of_void_Function_FocusHighlightMode), t2, P.LinkedHashSet_LinkedHashSet$_empty(type$.FocusNode), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      $.$get$RawKeyboard_instance()._raw_keyboard$_listeners.push(t2.get$_handleRawKeyEvent());
      $.GestureBinding__instance.GestureBinding_pointerRouter._globalRoutes.$indexSet(0, t2.get$_focus_manager$_handlePointerEvent(), null);
      return t2;
    },
    FocusManager__defaultModeForPlatform: function() {
      switch (U.defaultTargetPlatform()) {
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_2:
          var t1 = $.WidgetsBinding__instance.RendererBinding__mouseTracker._mouseStates;
          if (t1.get$isNotEmpty(t1))
            return C.FocusHighlightMode_1;
          return C.FocusHighlightMode_0;
        case C.TargetPlatform_3:
        case C.TargetPlatform_4:
        case C.TargetPlatform_5:
          return C.FocusHighlightMode_1;
      }
      return null;
    },
    FocusAttachment: function FocusAttachment(t0) {
      this._node = t0;
    },
    UnfocusDisposition: function UnfocusDisposition(t0) {
      this._focus_manager$_name = t0;
    },
    FocusNode: function FocusNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _._skipTraversal = t0;
      _._focus_manager$_canRequestFocus = t1;
      _._context = null;
      _._onKey = t2;
      _._focus_manager$_parent = _._descendants = _._ancestors = _._manager = null;
      _._children = t3;
      _._attachment = _._focus_manager$_debugLabel = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__listeners = t4;
    },
    FocusNode_traversalDescendants_closure: function FocusNode_traversalDescendants_closure() {
    },
    FocusNode_enclosingScope_closure: function FocusNode_enclosingScope_closure() {
    },
    FocusNode_enclosingScope_closure0: function FocusNode_enclosingScope_closure0() {
    },
    FocusNode_debugDescribeChildren_closure: function FocusNode_debugDescribeChildren_closure(t0) {
      this._box_0 = t0;
    },
    FocusScopeNode: function FocusScopeNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._focusedChildren = t0;
      _._skipTraversal = t1;
      _._focus_manager$_canRequestFocus = t2;
      _._context = null;
      _._onKey = t3;
      _._focus_manager$_parent = _._descendants = _._ancestors = _._manager = null;
      _._children = t4;
      _._attachment = _._focus_manager$_debugLabel = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__listeners = t5;
    },
    FocusHighlightMode: function FocusHighlightMode(t0) {
      this._focus_manager$_name = t0;
    },
    FocusHighlightStrategy: function FocusHighlightStrategy(t0) {
      this._focus_manager$_name = t0;
    },
    FocusManager: function FocusManager(t0, t1, t2, t3) {
      var _ = this;
      _._lastInteractionWasTouch = _._highlightMode = null;
      _._focus_manager$_listeners = t0;
      _.rootScope = t1;
      _._primaryFocus = null;
      _._dirtyNodes = t2;
      _._markedForFocus = null;
      _._haveScheduledUpdate = false;
      _.ChangeNotifier__listeners = t3;
    },
    _FocusManager_Object_DiagnosticableTreeMixin: function _FocusManager_Object_DiagnosticableTreeMixin() {
    },
    _FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier: function _FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier() {
    },
    _FocusNode_Object_DiagnosticableTreeMixin: function _FocusNode_Object_DiagnosticableTreeMixin() {
    },
    _FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier: function _FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier() {
    },
    generateLaidOutParagraphs: function(color, maxWordCountPerParagraph, minWordCountPerParagraph, paragraphCount, widthConstraint) {
      var t1, t2, wordPointer, i, wordCount, string, j, t3, builder, paragraph, _null = null,
        strings = H.setRuntimeTypeInfo([], type$.JSArray_Paragraph);
      for (t1 = maxWordCountPerParagraph - minWordCountPerParagraph + 1, t2 = type$.JSArray_String, wordPointer = 0, i = 0; i < paragraphCount; ++i) {
        wordCount = minWordCountPerParagraph + $.$get$_random().nextInt$1(t1);
        string = H.setRuntimeTypeInfo([], t2);
        for (j = 0; j < wordCount; ++j) {
          t3 = $.$get$lipsum();
          string.push(t3[wordPointer]);
          wordPointer = (wordPointer + 1) % t3.length;
        }
        builder = P.ParagraphBuilder_ParagraphBuilder(P.ParagraphStyle_ParagraphStyle(_null, "sans-serif", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
        builder.pushStyle$1(P.TextStyle_TextStyle(_null, color, _null, _null, _null, _null, _null, _null, _null, 18, _null, _null, _null, _null, _null, _null, _null, _null, _null));
        builder.addText$1(C.JSArray_methods.join$1(string, " "));
        builder.pop$0();
        paragraph = builder.build$0();
        paragraph.layout$1(new P.ParagraphConstraints(widthConstraint));
        strings.push(paragraph);
      }
      return strings;
    }
  },
  V = {AppBarTheme: function AppBarTheme(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.brightness = t0;
      _.color = t1;
      _.elevation = t2;
      _.iconTheme = t3;
      _.actionsIconTheme = t4;
      _.textTheme = t5;
    }, _AppBarTheme_Object_Diagnosticable: function _AppBarTheme_Object_Diagnosticable() {
    }, Card: function Card(t0, t1, t2) {
      this.elevation = t0;
      this.child = t1;
      this.key = t2;
    },
    MaterialStateProperty_resolveAs: function(value, states, $T) {
      if ($T._eval$1("MaterialStateProperty<0>")._is(value))
        return value.resolve$1(states);
      return value;
    },
    MaterialState: function MaterialState(t0) {
      this._material_state$_name = t0;
    },
    MaterialPageRoute: function MaterialPageRoute(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.builder = t0;
      _.fullscreenDialog = t1;
      _._offstage = false;
      _._secondaryAnimationProxy = _._animationProxy = null;
      _._willPopCallbacks = t2;
      _._scopeKey = t3;
      _._subtreeKey = t4;
      _._storageBucket = t5;
      _._modalScopeCache = _._modalBarrier = null;
      _.LocalHistoryRoute__localHistory = t6;
      _._transitionCompleter = t7;
      _._controller = _._animation = null;
      _._secondaryAnimation = t8;
      _._trainHoppingListenerRemover = _._result = null;
      _._overlayEntries = t9;
      _._navigator$_navigator = null;
      _._settings = t10;
      _._popCompleter = t11;
      _.$ti = t12;
    },
    EdgeInsetsGeometry_lerp: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      if (a instanceof V.EdgeInsets && b instanceof V.EdgeInsets)
        return V.EdgeInsets_lerp(a, b, t);
      if (a instanceof V.EdgeInsetsDirectional && b instanceof V.EdgeInsetsDirectional)
        return V.EdgeInsetsDirectional_lerp(a, b, t);
      return new V._MixedEdgeInsets(P.lerpDouble(a.get$_left(a), b.get$_left(b), t), P.lerpDouble(a.get$_right(a), b.get$_right(b), t), P.lerpDouble(a.get$_edge_insets$_start(a), b.get$_edge_insets$_start(b), t), P.lerpDouble(a.get$_edge_insets$_end(), b.get$_edge_insets$_end(), t), P.lerpDouble(a.get$_top(a), b.get$_top(b), t), P.lerpDouble(a.get$_bottom(a), b.get$_bottom(b), t));
    },
    EdgeInsets$fromWindowPadding: function(padding, devicePixelRatio) {
      var t1 = 0 / devicePixelRatio;
      return new V.EdgeInsets(t1, t1, t1, t1);
    },
    EdgeInsets_lerp: function(a, b, t) {
      return new V.EdgeInsets(P.lerpDouble(a.left, b.left, t), P.lerpDouble(a.top, b.top, t), P.lerpDouble(a.right, b.right, t), P.lerpDouble(a.bottom, b.bottom, t));
    },
    EdgeInsetsDirectional_lerp: function(a, b, t) {
      return new V.EdgeInsetsDirectional(P.lerpDouble(a.start, b.start, t), P.lerpDouble(a.top, b.top, t), P.lerpDouble(a.end, b.end, t), P.lerpDouble(a.bottom, b.bottom, t));
    },
    EdgeInsetsGeometry: function EdgeInsetsGeometry() {
    },
    EdgeInsets: function EdgeInsets(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    EdgeInsetsDirectional: function EdgeInsetsDirectional(t0, t1, t2, t3) {
      var _ = this;
      _.start = t0;
      _.top = t1;
      _.end = t2;
      _.bottom = t3;
    },
    _MixedEdgeInsets: function _MixedEdgeInsets(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._left = t0;
      _._right = t1;
      _._edge_insets$_start = t2;
      _._edge_insets$_end = t3;
      _._top = t4;
      _._bottom = t5;
    },
    RenderCustomPaint__updateSemanticsChildren: function(oldSemantics, newChildSemantics) {
      var newChildrenBottom, oldChildrenBottom, t1, newChildren, haveOldChildren, oldChild, newSemantics, newChild, oldKeyedChildren, oldChildrenTop, newChildrenTop, _box_0 = {};
      _box_0.newChildSemantics = newChildSemantics;
      if (oldSemantics == null)
        oldSemantics = C.List_empty6;
      if (newChildSemantics == null)
        newChildSemantics = C.List_empty7;
      _box_0.newChildSemantics = newChildSemantics;
      newChildrenBottom = J.get$length$asx(newChildSemantics) - 1;
      oldChildrenBottom = oldSemantics.length - 1;
      t1 = new Array(J.get$length$asx(newChildSemantics));
      t1.fixed$length = Array;
      newChildren = H.setRuntimeTypeInfo(t1, type$.JSArray_SemanticsNode);
      haveOldChildren = 0 <= oldChildrenBottom;
      t1 = 0 <= newChildrenBottom;
      while (true) {
        if (!(haveOldChildren && t1))
          break;
        oldChild = oldSemantics[0];
        newSemantics = J.$index$asx(newChildSemantics, 0);
        oldChild.toString;
        C.JSNull_methods.get$key(newSemantics);
        break;
      }
      while (true) {
        if (!(haveOldChildren && t1))
          break;
        oldChild = oldSemantics[oldChildrenBottom];
        newChild = J.$index$asx(newChildSemantics, newChildrenBottom);
        oldChild.toString;
        C.JSNull_methods.get$key(newChild);
        break;
      }
      if (haveOldChildren) {
        oldKeyedChildren = P.LinkedHashMap_LinkedHashMap$_empty(type$.Key, type$.SemanticsNode);
        for (oldChildrenTop = 0; oldChildrenTop <= oldChildrenBottom;) {
          oldSemantics[oldChildrenTop].toString;
          ++oldChildrenTop;
        }
        haveOldChildren = true;
      } else {
        oldChildrenTop = 0;
        oldKeyedChildren = null;
      }
      for (newChildrenTop = 0; newChildrenTop <= newChildrenBottom;) {
        newSemantics = J.$index$asx(_box_0.newChildSemantics, newChildrenTop);
        if (haveOldChildren) {
          oldChild = oldKeyedChildren.$index(0, C.JSNull_methods.get$key(newSemantics));
          if (oldChild != null) {
            newSemantics.get$key(newSemantics);
            oldChild = null;
          }
        } else
          oldChild = null;
        newChildren[newChildrenTop] = V.RenderCustomPaint__updateSemanticsChild(oldChild, newSemantics);
        ++newChildrenTop;
      }
      t1 = _box_0.newChildSemantics;
      newChildrenBottom = J.get$length$asx(t1) - 1;
      oldChildrenBottom = oldSemantics.length - 1;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        newChildren[newChildrenTop] = V.RenderCustomPaint__updateSemanticsChild(oldSemantics[oldChildrenTop], J.$index$asx(t1, newChildrenTop));
        ++newChildrenTop;
        ++oldChildrenTop;
      }
      return newChildren;
    },
    RenderCustomPaint__updateSemanticsChild: function(oldChild, newSemantics) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, newChild, properties, config;
      if (oldChild == null) {
        t1 = C.JSNull_methods.get$key(newSemantics);
        t2 = $.$get$SemanticsNode__kEmptyConfig();
        t3 = t2._isMergingSemanticsOfDescendants;
        t4 = t2._actions;
        t5 = t2._customSemanticsActions;
        t6 = t2._actionsAsBits;
        t7 = t2._flags;
        t8 = t2._semantics$_label;
        t9 = t2._semantics$_value;
        t10 = t2._decreasedValue;
        t11 = t2._increasedValue;
        t12 = t2._hint;
        t13 = t2._semantics$_elevation;
        t14 = t2._semantics$_thickness;
        t2 = t2._semantics$_textDirection;
        t15 = ($.SemanticsNode__lastIdentifier + 1) % 65535;
        $.SemanticsNode__lastIdentifier = t15;
        newChild = new A.SemanticsNode(t1, t15, null, C.Rect_0_0_0_0, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t2);
      } else
        newChild = oldChild;
      properties = newSemantics.get$properties();
      config = new A.SemanticsConfiguration(P.LinkedHashMap_LinkedHashMap$_empty(type$.SemanticsAction, type$.void_Function_dynamic), P.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.void_Function));
      properties.get$sortKey();
      config._sortKey = properties.get$sortKey();
      config._hasBeenAnnotated = true;
      properties.get$checked(properties);
      t1 = properties.get$checked(properties);
      config._setFlag$2(C.SemanticsFlag_1, true);
      config._setFlag$2(C.SemanticsFlag_2, t1);
      properties.get$selected(properties);
      config._setFlag$2(C.SemanticsFlag_4, properties.get$selected(properties));
      properties.get$button(properties);
      config._setFlag$2(C.SemanticsFlag_8, properties.get$button(properties));
      properties.get$link();
      config._setFlag$2(C.SemanticsFlag_4194304, properties.get$link());
      properties.get$textField();
      config._setFlag$2(C.SemanticsFlag_16, properties.get$textField());
      properties.get$readOnly(properties);
      config._setFlag$2(C.SemanticsFlag_1048576, properties.get$readOnly(properties));
      properties.get$focusable();
      config._setFlag$2(C.SemanticsFlag_2097152, properties.get$focusable());
      properties.get$focused(properties);
      config._setFlag$2(C.SemanticsFlag_32, properties.get$focused(properties));
      properties.get$enabled(properties);
      t1 = properties.get$enabled(properties);
      config._setFlag$2(C.SemanticsFlag_64, true);
      config._setFlag$2(C.SemanticsFlag_128, t1);
      properties.get$inMutuallyExclusiveGroup();
      config._setFlag$2(C.SemanticsFlag_256, properties.get$inMutuallyExclusiveGroup());
      properties.get$obscured();
      config._setFlag$2(C.SemanticsFlag_1024, properties.get$obscured());
      properties.get$multiline(properties);
      config._setFlag$2(C.SemanticsFlag_524288, properties.get$multiline(properties));
      properties.get$hidden(properties);
      config._setFlag$2(C.SemanticsFlag_8192, properties.get$hidden(properties));
      properties.get$header();
      config._setFlag$2(C.SemanticsFlag_512, properties.get$header());
      properties.get$scopesRoute();
      config._setFlag$2(C.SemanticsFlag_2048, properties.get$scopesRoute());
      properties.get$namesRoute();
      config._setFlag$2(C.SemanticsFlag_4096, properties.get$namesRoute());
      properties.get$liveRegion();
      config._setFlag$2(C.SemanticsFlag_32768, properties.get$liveRegion());
      properties.get$maxValueLength();
      config.set$maxValueLength(properties.get$maxValueLength());
      properties.get$currentValueLength();
      config.set$currentValueLength(properties.get$currentValueLength());
      properties.get$toggled();
      t1 = properties.get$toggled();
      config._setFlag$2(C.SemanticsFlag_65536, true);
      config._setFlag$2(C.SemanticsFlag_131072, t1);
      properties.get$image(properties);
      config._setFlag$2(C.SemanticsFlag_16384, properties.get$image(properties));
      properties.get$label(properties);
      config._semantics$_label = properties.get$label(properties);
      config._hasBeenAnnotated = true;
      properties.get$value(properties);
      config._semantics$_value = properties.get$value(properties);
      config._hasBeenAnnotated = true;
      properties.get$increasedValue();
      config._increasedValue = properties.get$increasedValue();
      config._hasBeenAnnotated = true;
      properties.get$decreasedValue();
      config._decreasedValue = properties.get$decreasedValue();
      config._hasBeenAnnotated = true;
      properties.get$hint(properties);
      config._hint = properties.get$hint(properties);
      config._hasBeenAnnotated = true;
      properties.get$textDirection();
      config._semantics$_textDirection = properties.get$textDirection();
      config._hasBeenAnnotated = true;
      properties.get$onTap();
      t1 = properties.get$onTap();
      config._addArgumentlessAction$2(C.SemanticsAction_1, t1);
      config._semantics$_onTap = t1;
      properties.get$onLongPress();
      t1 = properties.get$onLongPress();
      config._addArgumentlessAction$2(C.SemanticsAction_2, t1);
      config._semantics$_onLongPress = t1;
      properties.get$onScrollLeft();
      config._addArgumentlessAction$2(C.SemanticsAction_4, properties.get$onScrollLeft());
      properties.get$onScrollRight();
      config._addArgumentlessAction$2(C.SemanticsAction_8, properties.get$onScrollRight());
      properties.get$onScrollUp();
      config._addArgumentlessAction$2(C.SemanticsAction_16, properties.get$onScrollUp());
      properties.get$onScrollDown();
      config._addArgumentlessAction$2(C.SemanticsAction_32, properties.get$onScrollDown());
      properties.get$onIncrease();
      config._addArgumentlessAction$2(C.SemanticsAction_64, properties.get$onIncrease());
      properties.get$onDecrease();
      config._addArgumentlessAction$2(C.SemanticsAction_128, properties.get$onDecrease());
      properties.get$onCopy(properties);
      config._addArgumentlessAction$2(C.SemanticsAction_4096, properties.get$onCopy(properties));
      properties.get$onCut(properties);
      config._addArgumentlessAction$2(C.SemanticsAction_8192, properties.get$onCut(properties));
      properties.get$onPaste(properties);
      config._addArgumentlessAction$2(C.SemanticsAction_16384, properties.get$onPaste(properties));
      properties.get$onMoveCursorForwardByCharacter();
      config.set$onMoveCursorForwardByCharacter(properties.get$onMoveCursorForwardByCharacter());
      properties.get$onMoveCursorBackwardByCharacter();
      config.set$onMoveCursorBackwardByCharacter(properties.get$onMoveCursorBackwardByCharacter());
      properties.get$onMoveCursorForwardByWord();
      config.set$onMoveCursorForwardByWord(properties.get$onMoveCursorForwardByWord());
      properties.get$onMoveCursorBackwardByWord();
      config.set$onMoveCursorBackwardByWord(properties.get$onMoveCursorBackwardByWord());
      properties.get$onSetSelection();
      config.set$onSetSelection(properties.get$onSetSelection());
      properties.get$onDidGainAccessibilityFocus();
      config._addArgumentlessAction$2(C.SemanticsAction_32768, properties.get$onDidGainAccessibilityFocus());
      properties.get$onDidLoseAccessibilityFocus();
      config._addArgumentlessAction$2(C.SemanticsAction_65536, properties.get$onDidLoseAccessibilityFocus());
      properties.get$onDismiss();
      config._addArgumentlessAction$2(C.SemanticsAction_262144, properties.get$onDismiss());
      newChild.updateWith$2$childrenInInversePaintOrder$config(0, C.List_empty6, config);
      newChild.set$rect(0, newSemantics.get$rect(newSemantics));
      newChild.set$transform(0, newSemantics.get$transform(newSemantics));
      newChild.tags = newSemantics.get$tags();
      return newChild;
    },
    CustomPainter: function CustomPainter() {
    },
    CustomPainterSemantics: function CustomPainterSemantics() {
    },
    RenderCustomPaint: function RenderCustomPaint(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._custom_paint$_painter = t0;
      _._foregroundPainter = t1;
      _._preferredSize = t2;
      _.isComplex = t3;
      _.willChange = t4;
      _._foregroundSemanticsNodes = _._backgroundSemanticsNodes = _._foregroundSemanticsBuilder = _._backgroundSemanticsBuilder = null;
      _.RenderObjectWithChildMixin__child = t5;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderErrorBox$: function(message) {
      var t1 = new V.RenderErrorBox(message);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.RenderErrorBox$1(message);
      return t1;
    },
    RenderErrorBox: function RenderErrorBox(t0) {
      var _ = this;
      _.message = t0;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = _._paragraph = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    Priority: function Priority(t0) {
      this._priority$_value = t0;
    },
    SystemSound_play: function(type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemSound_play = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(C.OptionalMethodChannel_cdS.invokeMethod$1$2("SystemSound.play", "SystemSoundType.click", type$.void), $async$SystemSound_play);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$SystemSound_play, $async$completer);
    },
    SystemSoundType: function SystemSoundType() {
    },
    PageRoute: function PageRoute() {
    },
    _dummyAsyncVoidCallback: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$_dummyAsyncVoidCallback = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$_dummyAsyncVoidCallback, $async$completer);
    },
    Runner$: function(recorder, setUpAllDidRun, tearDownAllWillRun) {
      return new V.Runner(recorder, setUpAllDidRun, tearDownAllWillRun);
    },
    _computeAverage: function(label, values) {
      var t1 = J.getInterceptor$asx(values);
      if (t1.get$isEmpty(values))
        throw H.wrapException(P.StateError$(label + ": attempted to compute an average of an empty value list."));
      return t1.reduce$1(values, new V._computeAverage_closure()) / t1.get$length(values);
    },
    _computeStandardDeviationForPopulation: function(label, population) {
      var t1 = J.getInterceptor$asx(population);
      if (t1.get$isEmpty(population))
        throw H.wrapException(P.StateError$(label + ": attempted to compute the standard deviation of empty population."));
      return Math.sqrt(t1.fold$2(population, 0, new V._computeStandardDeviationForPopulation_closure(V._computeAverage(label, population))) / t1.get$length(population));
    },
    endMeasureFrame: function() {
      var _s19_ = "measured_frame_end#";
      window.performance.mark(_s19_ + $._currentFrameNumber);
      window.performance.measure("measured_frame", "measured_frame_start#" + $._currentFrameNumber, _s19_ + $._currentFrameNumber);
      $._currentFrameNumber = $._currentFrameNumber + 1;
    },
    registerEngineBenchmarkValueListener: function($name, listener) {
      if ($._engineBenchmarkListeners.containsKey$1(0, $name))
        throw H.wrapException(P.StateError$('A listener for "' + $name + '" is already registered.\nCall `stopListeningToEngineBenchmarkValues` to unregister the previous listener before registering a new one.'));
      if ($._engineBenchmarkListeners.get$isEmpty($._engineBenchmarkListeners))
        window._flutter_internal_on_benchmark = V.recorder___dispatchEngineBenchmarkValue$closure();
      $._engineBenchmarkListeners.$indexSet(0, $name, listener);
    },
    stopListeningToEngineBenchmarkValues: function($name) {
      $._engineBenchmarkListeners.remove$1(0, $name);
      if ($._engineBenchmarkListeners.get$isEmpty($._engineBenchmarkListeners))
        window._flutter_internal_on_benchmark = null;
    },
    _dispatchEngineBenchmarkValue: function($name, value) {
      var listener = $._engineBenchmarkListeners.$index(0, $name);
      if (listener != null)
        listener.call$1(value);
    },
    Runner: function Runner(t0, t1, t2) {
      this.recorder = t0;
      this.setUpAllDidRun = t1;
      this.tearDownAllWillRun = t2;
    },
    Recorder: function Recorder() {
    },
    RawRecorder: function RawRecorder() {
    },
    SceneBuilderRecorder: function SceneBuilderRecorder() {
    },
    SceneBuilderRecorder_run_closure: function SceneBuilderRecorder_run_closure(t0, t1) {
      this.$this = t0;
      this.profileCompleter = t1;
    },
    SceneBuilderRecorder_run_closure0: function SceneBuilderRecorder_run_closure0(t0, t1, t2) {
      this.$this = t0;
      this.profile = t1;
      this.profileCompleter = t2;
    },
    SceneBuilderRecorder_run__closure: function SceneBuilderRecorder_run__closure(t0, t1) {
      this.$this = t0;
      this.profile = t1;
    },
    SceneBuilderRecorder_run___closure: function SceneBuilderRecorder_run___closure(t0, t1) {
      this.sceneBuilder = t0;
      this.profile = t1;
    },
    SceneBuilderRecorder_run____closure: function SceneBuilderRecorder_run____closure(t0) {
      this.scene = t0;
    },
    WidgetRecorder: function WidgetRecorder() {
    },
    WidgetRecorder_run_closure: function WidgetRecorder_run_closure(t0) {
      this.localProfile = t0;
    },
    WidgetRecorder_run_closure0: function WidgetRecorder_run_closure0(t0) {
      this.localProfile = t0;
    },
    WidgetBuildRecorder: function WidgetBuildRecorder() {
    },
    _WidgetBuildRecorderHost: function _WidgetBuildRecorderHost(t0, t1) {
      this.recorder = t0;
      this.key = t1;
    },
    _WidgetBuildRecorderHostState: function _WidgetBuildRecorderHostState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _WidgetBuildRecorderHostState__setStateTrampoline_closure: function _WidgetBuildRecorderHostState__setStateTrampoline_closure() {
    },
    Timeseries: function Timeseries(t0, t1, t2) {
      this.name = t0;
      this.isReported = t1;
      this._allValues = t2;
    },
    Timeseries_computeStats_closure: function Timeseries_computeStats_closure(t0) {
      this.outlierCutOff = t0;
    },
    Timeseries_computeStats_closure0: function Timeseries_computeStats_closure0(t0) {
      this.outlierCutOff = t0;
    },
    TimeseriesStats: function TimeseriesStats(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.name = t0;
      _.average = t1;
      _.noise = t2;
      _.outlierCutOff = t3;
      _.outlierAverage = t4;
      _.cleanSampleCount = t5;
      _.outlierSampleCount = t6;
      _.samples = t7;
    },
    AnnotatedSample: function AnnotatedSample(t0, t1, t2) {
      this.magnitude = t0;
      this.isOutlier = t1;
      this.isWarmUpValue = t2;
    },
    Profile: function Profile(t0, t1, t2) {
      this.name = t0;
      this.scoreData = t1;
      this.extraData = t2;
    },
    Profile_addDataPoint_closure: function Profile_addDataPoint_closure(t0, t1) {
      this.key = t0;
      this.reported = t1;
    },
    Profile_shouldContinue_closure: function Profile_shouldContinue_closure(t0) {
      this.$this = t0;
    },
    _computeAverage_closure: function _computeAverage_closure() {
    },
    _computeStandardDeviationForPopulation_closure: function _computeStandardDeviationForPopulation_closure(t0) {
      this.mean = t0;
    },
    _RecordingWidgetsBinding: function _RecordingWidgetsBinding(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42) {
      var _ = this;
      _._recorder = null;
      _._benchmarkStopped = _._hasErrored = false;
      _.WidgetsBinding__buildOwner = t0;
      _.WidgetsBinding__observers = t1;
      _.WidgetsBinding__needToReportFirstFrame = t2;
      _.WidgetsBinding__firstFrameCompleter = t3;
      _.WidgetsBinding_debugBuildingDirtyElements = t4;
      _.WidgetsBinding__renderViewElement = t5;
      _.WidgetsBinding__readyToProduceFrames = t6;
      _.RendererBinding__mouseTracker = t7;
      _.RendererBinding__pipelineOwner = t8;
      _.RendererBinding__semanticsHandle = t9;
      _.RendererBinding__firstFrameDeferredCount = t10;
      _.RendererBinding__firstFrameSent = t11;
      _.SemanticsBinding__accessibilityFeatures = t12;
      _.PaintingBinding__imageCache = t13;
      _.PaintingBinding__systemFonts = t14;
      _.ServicesBinding__defaultBinaryMessenger = t15;
      _.SchedulerBinding__timingsCallbacks = t16;
      _.SchedulerBinding__lifecycleState = t17;
      _.SchedulerBinding_schedulingStrategy = t18;
      _.SchedulerBinding__taskQueue = t19;
      _.SchedulerBinding__hasRequestedAnEventLoopCallback = t20;
      _.SchedulerBinding__nextFrameCallbackId = t21;
      _.SchedulerBinding__transientCallbacks = t22;
      _.SchedulerBinding__removedIds = t23;
      _.SchedulerBinding__persistentCallbacks = t24;
      _.SchedulerBinding__postFrameCallbacks = t25;
      _.SchedulerBinding__nextFrameCompleter = t26;
      _.SchedulerBinding__hasScheduledFrame = t27;
      _.SchedulerBinding__schedulerPhase = t28;
      _.SchedulerBinding__framesEnabled = t29;
      _.SchedulerBinding__warmUpFrame = t30;
      _.SchedulerBinding__firstRawTimeStampInEpoch = t31;
      _.SchedulerBinding__epochStart = t32;
      _.SchedulerBinding__lastRawTimeStamp = t33;
      _.SchedulerBinding__currentFrameTimeStamp = t34;
      _.SchedulerBinding__debugFrameNumber = t35;
      _.SchedulerBinding__debugBanner = t36;
      _.SchedulerBinding__ignoreNextEngineDrawFrame = t37;
      _.GestureBinding__pendingPointerEvents = t38;
      _.GestureBinding_pointerRouter = t39;
      _.GestureBinding_gestureArena = t40;
      _.GestureBinding_pointerSignalResolver = t41;
      _.GestureBinding__hitTests = t42;
      _._lockCount = 0;
    },
    _RecordingWidgetsBinding__beginRecording_closure: function _RecordingWidgetsBinding__beginRecording_closure(t0) {
      this.$this = t0;
    },
    _RecordingWidgetsBinding__beginRecording_closure0: function _RecordingWidgetsBinding__beginRecording_closure0(t0, t1) {
      this.$this = t0;
      this.originalOnError = t1;
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(t0) {
      this.$this = t0;
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(t0) {
      this.$this = t0;
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(t0) {
      this.$this = t0;
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty(t0) {
      this.className = t0;
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding: function __RecordingWidgetsBinding_BindingBase_GestureBinding() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding() {
    },
    __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding: function __RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding() {
    }
  },
  Q = {MaterialBannerThemeData: function MaterialBannerThemeData(t0, t1, t2, t3) {
      var _ = this;
      _.backgroundColor = t0;
      _.contentTextStyle = t1;
      _.padding = t2;
      _.leadingPadding = t3;
    }, _MaterialBannerThemeData_Object_Diagnosticable: function _MaterialBannerThemeData_Object_Diagnosticable() {
    }, SliderThemeData: function SliderThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.trackHeight = t0;
      _.activeTrackColor = t1;
      _.inactiveTrackColor = t2;
      _.disabledActiveTrackColor = t3;
      _.disabledInactiveTrackColor = t4;
      _.activeTickMarkColor = t5;
      _.inactiveTickMarkColor = t6;
      _.disabledActiveTickMarkColor = t7;
      _.disabledInactiveTickMarkColor = t8;
      _.thumbColor = t9;
      _.overlappingShapeStrokeColor = t10;
      _.disabledThumbColor = t11;
      _.overlayColor = t12;
      _.valueIndicatorColor = t13;
      _.overlayShape = t14;
      _.tickMarkShape = t15;
      _.thumbShape = t16;
      _.trackShape = t17;
      _.valueIndicatorShape = t18;
      _.rangeTickMarkShape = t19;
      _.rangeThumbShape = t20;
      _.rangeTrackShape = t21;
      _.rangeValueIndicatorShape = t22;
      _.showValueIndicator = t23;
      _.valueIndicatorTextStyle = t24;
      _.minThumbSeparation = t25;
      _.thumbSelector = t26;
    }, _SliderThemeData_Object_Diagnosticable: function _SliderThemeData_Object_Diagnosticable() {
    },
    TextSpan$: function(children, style, text) {
      return new Q.TextSpan(text, children, style);
    },
    TextSpan: function TextSpan(t0, t1, t2) {
      this.text = t0;
      this.children = t1;
      this.style = t2;
    },
    TextSpan_debugDescribeChildren_closure: function TextSpan_debugDescribeChildren_closure() {
    },
    TextOverflow: function TextOverflow(t0) {
      this._paragraph$_name = t0;
    },
    TextParentData: function TextParentData(t0, t1, t2) {
      var _ = this;
      _.scale = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    RenderParagraph: function RenderParagraph(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._textPainter = t0;
      _._placeholderSpans = null;
      _._softWrap = t1;
      _._paragraph$_overflow = t2;
      _._needsClipping = false;
      _._cachedChildNodes = _._semanticsInfo = _._placeholderDimensions = _._overflowShader = null;
      _.ContainerRenderObjectMixin__childCount = t3;
      _.ContainerRenderObjectMixin__firstChild = t4;
      _.ContainerRenderObjectMixin__lastChild = t5;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderParagraph__extractPlaceholderSpans_closure: function RenderParagraph__extractPlaceholderSpans_closure(t0) {
      this.$this = t0;
    },
    RenderParagraph_hitTestChildren_closure: function RenderParagraph_hitTestChildren_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.position = t1;
      this.textParentData = t2;
    },
    RenderParagraph_paint_closure: function RenderParagraph_paint_closure(t0) {
      this._box_0 = t0;
    },
    RenderParagraph_describeSemanticsConfiguration_closure: function RenderParagraph_describeSemanticsConfiguration_closure() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin() {
    },
    RenderAbstractViewport_of: function(object) {
      var t1, t2;
      for (t1 = type$.RenderObject, t2 = type$.RenderAbstractViewport; object != null;) {
        if (t2._is(object))
          return object;
        object = t1._as(object._node$_parent);
      }
      return null;
    },
    RenderViewportBase_showInViewport: function(curve, descendant, duration, offset, rect, viewport) {
      var leadingEdgeOffset, trailingEdgeOffset, currentOffset, t1, t2, targetOffset, transform;
      if (descendant == null)
        return rect;
      leadingEdgeOffset = viewport.getOffsetToReveal$3$rect(descendant, 0, rect);
      trailingEdgeOffset = viewport.getOffsetToReveal$3$rect(descendant, 1, rect);
      currentOffset = offset._pixels;
      t1 = leadingEdgeOffset.offset;
      t2 = trailingEdgeOffset.offset;
      if (t1 < t2)
        targetOffset = Math.abs(currentOffset - t1) < Math.abs(currentOffset - t2) ? leadingEdgeOffset : trailingEdgeOffset;
      else if (currentOffset > t1)
        targetOffset = leadingEdgeOffset;
      else {
        if (!(currentOffset < t2)) {
          transform = descendant.getTransformTo$1(0, type$.RenderObject._as(viewport._node$_parent));
          return T.MatrixUtils_transformRect(transform, rect == null ? descendant.get$paintBounds() : rect);
        }
        targetOffset = trailingEdgeOffset;
      }
      offset.moveTo$3$curve$duration(0, targetOffset.offset, curve, duration);
      return targetOffset.rect;
    },
    CacheExtentStyle: function CacheExtentStyle(t0) {
      this._viewport$_name = t0;
    },
    RevealedOffset: function RevealedOffset(t0, t1) {
      this.offset = t0;
      this.rect = t1;
    },
    RenderViewportBase: function RenderViewportBase() {
    },
    RenderViewportBase_visitChildrenForSemantics_closure: function RenderViewportBase_visitChildrenForSemantics_closure() {
    },
    RenderViewportBase_hitTestChildren_closure: function RenderViewportBase_hitTestChildren_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.child = t2;
      _.sliverResult = t3;
    },
    RenderViewport: function RenderViewport(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._anchor = t0;
      _._viewport$_maxScrollExtent = _._viewport$_minScrollExtent = _._viewport$_center = null;
      _._viewport$_hasVisualOverflow = false;
      _._axisDirection = t1;
      _._crossAxisDirection = t2;
      _._viewport$_offset = t3;
      _._cacheExtent = t4;
      _._calculatedCacheExtent = null;
      _._cacheExtentStyle = t5;
      _.ContainerRenderObjectMixin__childCount = t6;
      _.ContainerRenderObjectMixin__firstChild = t7;
      _.ContainerRenderObjectMixin__lastChild = t8;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderViewportBase_RenderBox_ContainerRenderObjectMixin: function _RenderViewportBase_RenderBox_ContainerRenderObjectMixin() {
    },
    AssetBundle__utf8decode: function(data) {
      return C.C_Utf8Codec.decode$1(0, H.NativeUint8List_NativeUint8List$view(data.buffer, 0, null));
    },
    AssetBundle: function AssetBundle() {
    },
    CachingAssetBundle: function CachingAssetBundle() {
    },
    PlatformAssetBundle: function PlatformAssetBundle(t0, t1) {
      this._stringCache = t0;
      this._structuredDataCache = t1;
    },
    BinaryMessenger: function BinaryMessenger() {
    },
    RawKeyEventDataAndroid: function RawKeyEventDataAndroid(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.flags = t0;
      _.codePoint = t1;
      _.plainCodePoint = t2;
      _.keyCode = t3;
      _.scanCode = t4;
      _.metaState = t5;
      _.eventSource = t6;
    },
    RawKeyEventDataAndroid_getModifierSide_findSide: function RawKeyEventDataAndroid_getModifierSide_findSide(t0) {
      this.$this = t0;
    },
    RawKeyEventDataFuchsia: function RawKeyEventDataFuchsia(t0, t1, t2) {
      this.hidUsage = t0;
      this.codePoint = t1;
      this.modifiers = t2;
    },
    RawKeyEventDataFuchsia_getModifierSide_findSide: function RawKeyEventDataFuchsia_getModifierSide_findSide(t0) {
      this.$this = t0;
    },
    SafeArea$: function(bottom, child, $top) {
      return new Q.SafeArea($top, bottom, child, null);
    },
    SafeArea: function SafeArea(t0, t1, t2, t3) {
      var _ = this;
      _.top = t0;
      _.bottom = t1;
      _.child = t2;
      _.key = t3;
    },
    Viewport$: function(anchor, axisDirection, cacheExtent, cacheExtentStyle, center, offset, slivers) {
      return new Q.Viewport(axisDirection, anchor, offset, center, cacheExtent, cacheExtentStyle, slivers, null);
    },
    Viewport_getDefaultCrossAxisDirection: function(context, axisDirection) {
      switch (axisDirection) {
        case C.AxisDirection_0:
          return G.textDirectionToAxisDirection(T.Directionality_of(context));
        case C.AxisDirection_1:
          return C.AxisDirection_2;
        case C.AxisDirection_2:
          return G.textDirectionToAxisDirection(T.Directionality_of(context));
        case C.AxisDirection_3:
          return C.AxisDirection_2;
      }
      return null;
    },
    Viewport: function Viewport(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.axisDirection = t0;
      _.anchor = t1;
      _.offset = t2;
      _.center = t3;
      _.cacheExtent = t4;
      _.cacheExtentStyle = t5;
      _.children = t6;
      _.key = t7;
    },
    _ViewportElement: function _ViewportElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._framework$_children = null;
      _._forgottenChildren = t0;
      _._parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _._cachedHash = t1;
      _._depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._active = false;
      _._debugLifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    BenchSimpleLazyTextScroll: function BenchSimpleLazyTextScroll(t0, t1) {
      var _ = this;
      _._drawFrameStopwatch = _._runCompleter = _.profile = _.didStop = null;
      _.isTracingEnabled = t0;
      _.name = t1;
    },
    _TestScrollingWidget: function _TestScrollingWidget(t0, t1, t2, t3) {
      var _ = this;
      _.initialScrollOffset = t0;
      _.scrollDistance = t1;
      _.scrollDuration = t2;
      _.key = t3;
    },
    _TestScrollingWidgetState: function _TestScrollingWidgetState(t0) {
      var _ = this;
      _._widget = _.scrollController = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _TestScrollingWidgetState_initState_closure: function _TestScrollingWidgetState_initState_closure(t0) {
      this.$this = t0;
    },
    _TestScrollingWidgetState_build_closure: function _TestScrollingWidgetState_build_closure() {
    },
    _randomize: function(text) {
      return H.stringReplaceAllFuncUnchecked(text, "*", new Q._randomize_closure(), null);
    },
    Palette$: function(accent, $name, primary, threshold) {
      return new Q.Palette($name, primary, accent, threshold);
    },
    ColorItem$: function(color, index, prefix) {
      return new Q.ColorItem(index, color, prefix, null);
    },
    _randomize_closure: function _randomize_closure() {
    },
    ParagraphGenerator: function ParagraphGenerator() {
      this._counter = 0;
    },
    BenchTextLayout: function BenchTextLayout(t0, t1, t2, t3) {
      var _ = this;
      _.generator = t0;
      _.useCanvas = t1;
      _.isTracingEnabled = t2;
      _.name = t3;
    },
    BenchTextLayout_recordParagraphOperations_closure: function BenchTextLayout_recordParagraphOperations_closure(t0, t1) {
      this.paragraph = t0;
      this.maxWidth = t1;
    },
    BenchTextLayout_recordParagraphOperations_closure0: function BenchTextLayout_recordParagraphOperations_closure0(t0, t1) {
      this.text = t0;
      this.paragraph = t1;
    },
    BenchTextLayout_recordParagraphOperations_closure1: function BenchTextLayout_recordParagraphOperations_closure1(t0) {
      this.paragraph = t0;
    },
    BenchTextCachedLayout: function BenchTextCachedLayout(t0, t1, t2, t3) {
      var _ = this;
      _.useCanvas = t0;
      _.builder = t1;
      _.isTracingEnabled = t2;
      _.name = t3;
    },
    BenchTextCachedLayout_body_closure: function BenchTextCachedLayout_body_closure(t0) {
      this.paragraph = t0;
    },
    _TestMode: function _TestMode(t0) {
      this._bench_text_layout$_name = t0;
    },
    BenchBuildColorsGrid: function BenchBuildColorsGrid(t0, t1, t2) {
      var _ = this;
      _.mode = t0;
      _._textLayoutMicros = 0;
      _._drawFrameStopwatch = _._runCompleter = _.profile = _.didStop = null;
      _.showWidget = true;
      _._hostState = null;
      _.isTracingEnabled = t1;
      _.name = t2;
    },
    BenchBuildColorsGrid_setUpAll_closure: function BenchBuildColorsGrid_setUpAll_closure(t0) {
      this.$this = t0;
    },
    Palette: function Palette(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.primary = t1;
      _.accent = t2;
      _.threshold = t3;
    },
    ColorItem: function ColorItem(t0, t1, t2, t3) {
      var _ = this;
      _.index = t0;
      _.color = t1;
      _.prefix = t2;
      _.key = t3;
    },
    PaletteTabView: function PaletteTabView(t0, t1) {
      this.colors = t0;
      this.key = t1;
    },
    PaletteTabView_build_closure: function PaletteTabView_build_closure(t0, t1, t2) {
      this.$this = t0;
      this.whiteTextStyle = t1;
      this.blackTextStyle = t2;
    },
    PaletteTabView_build_closure0: function PaletteTabView_build_closure0(t0, t1, t2) {
      this.$this = t0;
      this.whiteTextStyle = t1;
      this.blackTextStyle = t2;
    },
    ColorsDemo: function ColorsDemo(t0) {
      this.key = t0;
    },
    ColorsDemo_build_closure: function ColorsDemo_build_closure() {
    },
    ColorsDemo_build_closure0: function ColorsDemo_build_closure0() {
    }
  },
  M = {BottomNavigationBarThemeData: function BottomNavigationBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.selectedIconTheme = t2;
      _.unselectedIconTheme = t3;
      _.selectedItemColor = t4;
      _.unselectedItemColor = t5;
      _.selectedLabelStyle = t6;
      _.unselectedLabelStyle = t7;
      _.showSelectedLabels = t8;
      _.showUnselectedLabels = t9;
      _.type = t10;
    }, _BottomNavigationBarThemeData_Object_Diagnosticable: function _BottomNavigationBarThemeData_Object_Diagnosticable() {
    },
    ButtonBarThemeData_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t < 0.5;
      t3 = t2 ? a.alignment : b.alignment;
      t4 = t2 ? a.mainAxisSize : b.mainAxisSize;
      t5 = t2 ? a.buttonTextTheme : b.buttonTextTheme;
      t6 = t1 ? _null : a.buttonMinWidth;
      t7 = b == null;
      t6 = P.lerpDouble(t6, t7 ? _null : b.buttonMinWidth, t);
      t8 = t1 ? _null : a.buttonHeight;
      t8 = P.lerpDouble(t8, t7 ? _null : b.buttonHeight, t);
      t1 = t1 ? _null : a.buttonPadding;
      t1 = V.EdgeInsetsGeometry_lerp(t1, t7 ? _null : b.buttonPadding, t);
      t7 = t2 ? a.buttonAlignedDropdown : b.buttonAlignedDropdown;
      t9 = t2 ? a.layoutBehavior : b.layoutBehavior;
      return new M.ButtonBarThemeData(t3, t4, t5, t6, t8, t1, t7, t9, t2 ? a.overflowDirection : b.overflowDirection);
    },
    ButtonBarThemeData: function ButtonBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.alignment = t0;
      _.mainAxisSize = t1;
      _.buttonTextTheme = t2;
      _.buttonMinWidth = t3;
      _.buttonHeight = t4;
      _.buttonPadding = t5;
      _.buttonAlignedDropdown = t6;
      _.layoutBehavior = t7;
      _.overflowDirection = t8;
    },
    _ButtonBarThemeData_Object_Diagnosticable: function _ButtonBarThemeData_Object_Diagnosticable() {
    },
    ButtonThemeData$: function(alignedDropdown, buttonColor, colorScheme, disabledColor, focusColor, height, highlightColor, hoverColor, layoutBehavior, materialTapTargetSize, minWidth, padding, shape, splashColor, textTheme) {
      return new M.ButtonThemeData(minWidth, height, textTheme, layoutBehavior, padding, shape, false, buttonColor, disabledColor, focusColor, hoverColor, highlightColor, splashColor, colorScheme, materialTapTargetSize);
    },
    ButtonTextTheme: function ButtonTextTheme(t0) {
      this._button_theme$_name = t0;
    },
    ButtonBarLayoutBehavior: function ButtonBarLayoutBehavior(t0) {
      this._button_theme$_name = t0;
    },
    ButtonThemeData: function ButtonThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.minWidth = t0;
      _.height = t1;
      _.textTheme = t2;
      _.layoutBehavior = t3;
      _._padding = t4;
      _._shape = t5;
      _.alignedDropdown = t6;
      _._buttonColor = t7;
      _._disabledColor = t8;
      _._focusColor = t9;
      _._hoverColor = t10;
      _._highlightColor = t11;
      _._splashColor = t12;
      _.colorScheme = t13;
      _._materialTapTargetSize = t14;
    },
    _ButtonThemeData_Object_Diagnosticable: function _ButtonThemeData_Object_Diagnosticable() {
    },
    Material$: function(animationDuration, borderOnForeground, child, clipBehavior, color, elevation, key, shadowColor, shape, textStyle, type) {
      return new M.Material(child, type, elevation, color, shadowColor, textStyle, shape, true, clipBehavior, animationDuration, key);
    },
    _MaterialState__transparentInterior: function(clipBehavior, contents, context, shape) {
      var child = new M._ShapeBorderPaint(contents, shape, true, null);
      if (clipBehavior === C.Clip_0)
        return child;
      return new T.ClipPath(new E.ShapeBorderClipper(shape, T.Directionality_of(context)), clipBehavior, child, null);
    },
    MaterialType: function MaterialType(t0) {
      this._material$_name = t0;
    },
    Material: function Material(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.child = t0;
      _.type = t1;
      _.elevation = t2;
      _.color = t3;
      _.shadowColor = t4;
      _.textStyle = t5;
      _.shape = t6;
      _.borderOnForeground = t7;
      _.clipBehavior = t8;
      _.animationDuration = t9;
      _.key = t10;
    },
    _MaterialState: function _MaterialState(t0, t1, t2) {
      var _ = this;
      _._inkFeatureRenderer = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _MaterialState_build_closure: function _MaterialState_build_closure(t0) {
      this.$this = t0;
    },
    _RenderInkFeatures: function _RenderInkFeatures(t0, t1, t2) {
      var _ = this;
      _.vsync = t0;
      _.color = t1;
      _._inkFeatures = null;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedBaselines = _._size = _._cachedIntrinsicDimensions = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _InkFeatures: function _InkFeatures(t0, t1, t2, t3) {
      var _ = this;
      _.color = t0;
      _.vsync = t1;
      _.child = t2;
      _.key = t3;
    },
    InkFeature: function InkFeature() {
    },
    ShapeBorderTween: function ShapeBorderTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    _MaterialInterior: function _MaterialInterior(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.borderOnForeground = t2;
      _.clipBehavior = t3;
      _.elevation = t4;
      _.color = t5;
      _.shadowColor = t6;
      _.curve = t7;
      _.duration = t8;
      _.onEnd = t9;
      _.key = t10;
    },
    _MaterialInteriorState: function _MaterialInteriorState(t0, t1) {
      var _ = this;
      _._implicit_animations$_animation = _._implicit_animations$_controller = _._border = _._shadowColor = _._elevation = null;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _MaterialInteriorState_forEachTween_closure: function _MaterialInteriorState_forEachTween_closure() {
    },
    _MaterialInteriorState_forEachTween_closure0: function _MaterialInteriorState_forEachTween_closure0() {
    },
    _MaterialInteriorState_forEachTween_closure1: function _MaterialInteriorState_forEachTween_closure1() {
    },
    _ShapeBorderPaint: function _ShapeBorderPaint(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.borderOnForeground = t2;
      _.key = t3;
    },
    _ShapeBorderPainter: function _ShapeBorderPainter(t0, t1, t2) {
      this.border = t0;
      this.textDirection = t1;
      this._repaint = t2;
    },
    __MaterialState_State_TickerProviderStateMixin: function __MaterialState_State_TickerProviderStateMixin() {
    },
    Scaffold_of: function(context, nullOk) {
      var result = context.findAncestorStateOfType$1$0(type$.ScaffoldState);
      if (nullOk || result != null)
        return result;
      throw H.wrapException(U.FlutterError$fromParts(H.setRuntimeTypeInfo([U.ErrorSummary$("Scaffold.of() called with a context that does not contain a Scaffold."), U.ErrorDescription$("No Scaffold ancestor could be found starting from the context that was passed to Scaffold.of(). This usually happens when the context provided is from the same StatefulWidget as that whose build function actually creates the Scaffold widget being sought."), U.ErrorHint$('There are several ways to avoid this problem. The simplest is to use a Builder to get a context that is "under" the Scaffold. For an example of this, please see the documentation for Scaffold.of():\n  https://api.flutter.dev/flutter/material/Scaffold/of.html'), U.ErrorHint$("A more efficient solution is to split your build function into several widgets. This introduces a new context from which you can obtain the Scaffold. In this solution, you would have an outer widget that creates the Scaffold populated by instances of your new inner widgets, and then in these inner widgets you would use Scaffold.of().\nA less elegant but more expedient solution is assign a GlobalKey to the Scaffold, then use the key.currentState property to obtain the ScaffoldState rather than using the Scaffold.of() function."), context.describeElement$1("The context used was")], type$.JSArray_DiagnosticsNode)));
    },
    _ScaffoldSlot: function _ScaffoldSlot(t0) {
      this._scaffold$_name = t0;
    },
    ScaffoldPrelayoutGeometry: function ScaffoldPrelayoutGeometry(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.floatingActionButtonSize = t0;
      _.bottomSheetSize = t1;
      _.contentBottom = t2;
      _.minInsets = t3;
      _.scaffoldSize = t4;
      _.snackBarSize = t5;
      _.textDirection = t6;
    },
    ScaffoldGeometry: function ScaffoldGeometry(t0, t1) {
      this.bottomNavigationBarTop = t0;
      this.floatingActionButtonArea = t1;
    },
    _ScaffoldGeometryNotifier: function _ScaffoldGeometryNotifier(t0, t1) {
      this.floatingActionButtonScale = null;
      this.geometry = t0;
      this.ChangeNotifier__listeners = t1;
    },
    _BodyBoxConstraints: function _BodyBoxConstraints(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.bottomWidgetsHeight = t0;
      _.appBarHeight = t1;
      _.minWidth = t2;
      _.maxWidth = t3;
      _.minHeight = t4;
      _.maxHeight = t5;
    },
    _BodyBuilder: function _BodyBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.body = t0;
      _.extendBody = t1;
      _.extendBodyBehindAppBar = t2;
      _.key = t3;
    },
    _ScaffoldLayout: function _ScaffoldLayout(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.extendBody = t0;
      _.extendBodyBehindAppBar = t1;
      _.minInsets = t2;
      _.textDirection = t3;
      _.geometryNotifier = t4;
      _.previousFloatingActionButtonLocation = t5;
      _.currentFloatingActionButtonLocation = t6;
      _.floatingActionButtonMoveAnimationProgress = t7;
      _.floatingActionButtonMotionAnimator = t8;
      _.isSnackBarFloating = t9;
      _._debugChildrenNeedingLayout = _._idToChild = null;
    },
    _FloatingActionButtonTransition: function _FloatingActionButtonTransition(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.fabMoveAnimation = t1;
      _.fabMotionAnimator = t2;
      _.geometryNotifier = t3;
      _.currentController = t4;
      _.key = t5;
    },
    _FloatingActionButtonTransitionState: function _FloatingActionButtonTransitionState(t0, t1) {
      var _ = this;
      _._previousChild = _._currentRotationAnimation = _._extendedCurrentScaleAnimation = _._currentScaleAnimation = _._previousRotationAnimation = _._previousScaleAnimation = _._previousController = null;
      _.TickerProviderStateMixin__tickers = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure: function _FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure(t0, t1) {
      this.$this = t0;
      this.status = t1;
    },
    Scaffold: function Scaffold(t0, t1, t2) {
      this.appBar = t0;
      this.body = t1;
      this.key = t2;
    },
    ScaffoldState: function ScaffoldState(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._drawerKey = t0;
      _._endDrawerKey = t1;
      _._appBarMaxHeight = null;
      _._endDrawerOpened = _._drawerOpened = false;
      _._snackBars = t2;
      _._accessibleNavigation = _._snackBarTimer = null;
      _._dismissedBottomSheets = t3;
      _._floatingActionButtonVisibilityController = _._floatingActionButtonLocation = _._previousFloatingActionButtonLocation = _._floatingActionButtonAnimator = _._floatingActionButtonMoveController = _._currentBottomSheet = null;
      _._primaryScrollController = t4;
      _._geometryNotifier = null;
      _._showBodyScrim = false;
      _._bodyScrimColor = t5;
      _.TickerProviderStateMixin__tickers = t6;
      _._widget = null;
      _._debugLifecycleState = t7;
      _._framework$_element = null;
    },
    ScaffoldState_hideCurrentSnackBar_closure: function ScaffoldState_hideCurrentSnackBar_closure(t0, t1, t2) {
      this.$this = t0;
      this.completer = t1;
      this.reason = t2;
    },
    ScaffoldState_build_closure: function ScaffoldState_build_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.children = t2;
      _._extendBody = t3;
      _.minInsets = t4;
      _.textDirection = t5;
    },
    ScaffoldFeatureController: function ScaffoldFeatureController() {
    },
    _StandardBottomSheet: function _StandardBottomSheet() {
    },
    _ScaffoldScope: function _ScaffoldScope(t0, t1, t2) {
      this.hasDrawer = t0;
      this.child = t1;
      this.key = t2;
    },
    _ScaffoldState_State_TickerProviderStateMixin: function _ScaffoldState_State_TickerProviderStateMixin() {
    },
    __FloatingActionButtonTransitionState_State_TickerProviderStateMixin: function __FloatingActionButtonTransitionState_State_TickerProviderStateMixin() {
    },
    ImageConfiguration: function ImageConfiguration(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.bundle = t0;
      _.devicePixelRatio = t1;
      _.locale = t2;
      _.textDirection = t3;
      _.size = t4;
      _.platform = t5;
    },
    SpringDescription$withDampingRatio: function(mass, ratio, stiffness) {
      return new M.SpringDescription(mass, stiffness, ratio * 2 * Math.sqrt(mass * stiffness));
    },
    _SpringSolution__SpringSolution: function(spring, initialPosition, initialVelocity) {
      var r, r1, r2, c2, w,
        t1 = spring.damping,
        t2 = t1 * t1,
        t3 = spring.mass,
        t4 = 4 * t3 * spring.stiffness,
        cmk = t2 - t4;
      if (cmk === 0) {
        r = -t1 / (2 * t3);
        return new M._CriticalSolution(r, initialPosition, initialVelocity / (r * initialPosition));
      }
      if (cmk > 0) {
        t1 = -t1;
        t3 = 2 * t3;
        r1 = (t1 - Math.sqrt(cmk)) / t3;
        r2 = (t1 + Math.sqrt(cmk)) / t3;
        c2 = (initialVelocity - r1 * initialPosition) / (r2 - r1);
        return new M._OverdampedSolution(r1, r2, initialPosition - c2, c2);
      }
      w = Math.sqrt(t4 - t2) / (2 * t3);
      r = -(t1 / 2 * t3);
      return new M._UnderdampedSolution(w, r, initialPosition, (initialVelocity - r * initialPosition) / w);
    },
    SpringDescription: function SpringDescription(t0, t1, t2) {
      this.mass = t0;
      this.stiffness = t1;
      this.damping = t2;
    },
    SpringType: function SpringType(t0) {
      this._spring_simulation$_name = t0;
    },
    SpringSimulation: function SpringSimulation() {
    },
    ScrollSpringSimulation: function ScrollSpringSimulation(t0, t1, t2) {
      this._endPosition = t0;
      this._solution = t1;
      this.tolerance = t2;
    },
    _CriticalSolution: function _CriticalSolution(t0, t1, t2) {
      this._r = t0;
      this._c1 = t1;
      this._c2 = t2;
    },
    _OverdampedSolution: function _OverdampedSolution(t0, t1, t2, t3) {
      var _ = this;
      _._r1 = t0;
      _._r2 = t1;
      _._c1 = t2;
      _._c2 = t3;
    },
    _UnderdampedSolution: function _UnderdampedSolution(t0, t1, t2, t3) {
      var _ = this;
      _._w = t0;
      _._r = t1;
      _._c1 = t2;
      _._c2 = t3;
    },
    Ticker: function Ticker(t0, t1) {
      var _ = this;
      _._ticker$_future = null;
      _._muted = false;
      _._startTime = null;
      _._onTick = t0;
      _._animationId = null;
      _.debugLabel = t1;
      _._debugCreationStack = null;
    },
    TickerFuture: function TickerFuture(t0) {
      this._primaryCompleter = t0;
      this._completed = this._secondaryCompleter = null;
    },
    TickerFuture_whenCompleteOrCancel_thunk: function TickerFuture_whenCompleteOrCancel_thunk(t0) {
      this.callback = t0;
    },
    TickerCanceled: function TickerCanceled(t0) {
      this.ticker = t0;
    },
    Container$: function(alignment, child, color, constraints, decoration, height, margin, padding, width) {
      var t1;
      if (width != null || height != null) {
        t1 = constraints == null ? null : constraints.tighten$2$height$width(height, width);
        if (t1 == null)
          t1 = S.BoxConstraints$tightFor(height, width);
      } else
        t1 = constraints;
      return new M.Container(child, alignment, padding, color, decoration, t1, margin, null);
    },
    DecoratedBox: function DecoratedBox(t0, t1, t2, t3) {
      var _ = this;
      _.decoration = t0;
      _.position = t1;
      _.child = t2;
      _.key = t3;
    },
    Container: function Container(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.child = t0;
      _.alignment = t1;
      _.padding = t2;
      _.color = t3;
      _.decoration = t4;
      _.constraints = t5;
      _.margin = t6;
      _.key = t7;
    },
    InheritedTheme: function InheritedTheme() {
    },
    ScrollActivity: function ScrollActivity() {
    },
    IdleScrollActivity: function IdleScrollActivity(t0) {
      this._delegate = t0;
    },
    HoldScrollActivity: function HoldScrollActivity(t0, t1) {
      this.onHoldCanceled = t0;
      this._delegate = t1;
    },
    ScrollDragController: function ScrollDragController(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._delegate = t0;
      _.onDragCanceled = t1;
      _.carriedVelocity = t2;
      _.motionStartDistanceThreshold = t3;
      _._lastNonStationaryTimestamp = t4;
      _._retainMomentum = t5;
      _._offsetSinceLastStop = t6;
      _._lastDetails = t7;
    },
    DragScrollActivity: function DragScrollActivity(t0, t1) {
      this._scroll_activity$_controller = t0;
      this._delegate = t1;
    },
    BallisticScrollActivity: function BallisticScrollActivity(t0) {
      this._scroll_activity$_controller = null;
      this._delegate = t0;
    },
    DrivenScrollActivity: function DrivenScrollActivity(t0) {
      this._scroll_activity$_controller = this._completer = null;
      this._delegate = t0;
    },
    FixedScrollMetrics$: function(axisDirection, maxScrollExtent, minScrollExtent, pixels, viewportDimension) {
      return new M.FixedScrollMetrics(minScrollExtent, maxScrollExtent, pixels, viewportDimension, axisDirection);
    },
    ScrollMetrics: function ScrollMetrics() {
    },
    FixedScrollMetrics: function FixedScrollMetrics(t0, t1, t2, t3, t4) {
      var _ = this;
      _.minScrollExtent = t0;
      _.maxScrollExtent = t1;
      _.pixels = t2;
      _.viewportDimension = t3;
      _.axisDirection = t4;
    },
    BenchDynamicClipOnStaticPicture$: function() {
      var t1 = new M.BenchDynamicClipOnStaticPicture(true, "dynamic_clip_on_static_picture");
      t1.BenchDynamicClipOnStaticPicture$0();
      return t1;
    },
    BenchDynamicClipOnStaticPicture: function BenchDynamicClipOnStaticPicture(t0, t1) {
      var _ = this;
      _.picture = _.clipSize = _.screenSize = null;
      _.pictureVerticalOffset = 0;
      _.isTracingEnabled = t0;
      _.name = t1;
    },
    Feedback_forTap: function(context) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1;
      var $async$Feedback_forTap = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                context.get$renderObject().sendSemanticsEvent$1(C.TapSemanticEvent_tap);
                switch (K.Theme_of(context).platform) {
                  case C.TargetPlatform_0:
                  case C.TargetPlatform_1:
                    $async$returnValue = V.SystemSound_play(C.SystemSoundType_0);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.TargetPlatform_2:
                  case C.TargetPlatform_3:
                  case C.TargetPlatform_4:
                  case C.TargetPlatform_5:
                    t1 = new P._Future($.Zone__current, type$._Future_void);
                    t1._asyncComplete$1(null);
                    $async$returnValue = t1;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
                t1 = new P._Future($.Zone__current, type$._Future_void);
                t1._asyncComplete$1(null);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return P._asyncStartSync($async$Feedback_forTap, $async$completer);
    },
    Feedback_forLongPress: function(context) {
      var t1;
      context.get$renderObject().sendSemanticsEvent$1(C.LongPressSemanticsEvent_longPress);
      switch (K.Theme_of(context).platform) {
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
          return X.HapticFeedback_vibrate();
        case C.TargetPlatform_2:
        case C.TargetPlatform_3:
        case C.TargetPlatform_4:
        case C.TargetPlatform_5:
          t1 = new P._Future($.Zone__current, type$._Future_void);
          t1._asyncComplete$1(null);
          return t1;
      }
      t1 = new P._Future($.Zone__current, type$._Future_void);
      t1._asyncComplete$1(null);
      return t1;
    },
    SystemNavigator_pop: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemNavigator_pop = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(C.OptionalMethodChannel_cdS.invokeMethod$1$2("SystemNavigator.pop", null, type$.void), $async$SystemNavigator_pop);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$SystemNavigator_pop, $async$completer);
    }
  },
  A = {CardTheme: function CardTheme(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.clipBehavior = t0;
      _.color = t1;
      _.shadowColor = t2;
      _.elevation = t3;
      _.margin = t4;
      _.shape = t5;
    }, _CardTheme_Object_Diagnosticable: function _CardTheme_Object_Diagnosticable() {
    },
    ColorScheme$: function(background, brightness, error, onBackground, onError, onPrimary, onSecondary, onSurface, primary, primaryVariant, secondary, secondaryVariant, surface) {
      return new A.ColorScheme(primary, primaryVariant, secondary, secondaryVariant, surface, background, error, onPrimary, onSecondary, onSurface, onBackground, onError, brightness);
    },
    ColorScheme: function ColorScheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.primary = t0;
      _.primaryVariant = t1;
      _.secondary = t2;
      _.secondaryVariant = t3;
      _.surface = t4;
      _.background = t5;
      _.error = t6;
      _.onPrimary = t7;
      _.onSecondary = t8;
      _.onSurface = t9;
      _.onBackground = t10;
      _.onError = t11;
      _.brightness = t12;
    },
    _ColorScheme_Object_Diagnosticable: function _ColorScheme_Object_Diagnosticable() {
    },
    FloatingActionButtonLocation: function FloatingActionButtonLocation() {
    },
    StandardFabLocation: function StandardFabLocation() {
    },
    FabFloatOffsetY: function FabFloatOffsetY() {
    },
    FabEndOffsetX: function FabEndOffsetX() {
    },
    _EndFloatFabLocation: function _EndFloatFabLocation() {
    },
    FloatingActionButtonAnimator: function FloatingActionButtonAnimator() {
    },
    _ScalingFabMotionAnimator: function _ScalingFabMotionAnimator() {
    },
    _AnimationSwap: function _AnimationSwap(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.parent = t0;
      _.swapThreshold = t1;
      _.first = t2;
      _.next = t3;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t4;
      _.AnimationLocalListenersMixin__listeners = t5;
      _.AnimationLazyListenerMixin__listenerCounter = t6;
      _.$ti = t7;
    },
    __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX: function __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX() {
    },
    __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY: function __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY() {
    },
    TextStyle$: function(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, inherit, letterSpacing, locale, $package, shadows, textBaseline, wordSpacing) {
      return new A.TextStyle(inherit, color, backgroundColor, fontFamily, fontFamilyFallback, $package, fontSize, fontWeight, fontStyle, letterSpacing, wordSpacing, textBaseline, height, locale, foreground, background, decoration, decorationColor, decorationStyle, decorationThickness, debugLabel, shadows, fontFeatures);
    },
    TextStyle_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      if (t1) {
        t1 = b.inherit;
        t2 = P.Color_lerp(_null, b.color, t);
        t3 = P.Color_lerp(_null, b.backgroundColor, t);
        t4 = t < 0.5;
        t5 = t4 ? _null : b.fontFamily;
        t6 = t4 ? _null : b.get$fontFamilyFallback();
        t7 = t4 ? _null : b.fontSize;
        t8 = P.FontWeight_lerp(_null, b.fontWeight, t);
        t9 = t4 ? _null : b.fontStyle;
        t10 = t4 ? _null : b.letterSpacing;
        t11 = t4 ? _null : b.wordSpacing;
        t12 = t4 ? _null : b.textBaseline;
        t13 = t4 ? _null : b.height;
        t14 = t4 ? _null : b.locale;
        t15 = t4 ? _null : b.foreground;
        t16 = t4 ? _null : b.background;
        t17 = t4 ? _null : b.decoration;
        t18 = t4 ? _null : b.shadows;
        t19 = t4 ? _null : b.fontFeatures;
        t20 = P.Color_lerp(_null, b.decorationColor, t);
        t21 = t4 ? _null : b.decorationStyle;
        return A.TextStyle$(t16, t3, t2, _null, t17, t20, t21, t4 ? _null : b.decorationThickness, t5, t6, t19, t7, t9, t8, t15, t13, t1, t10, t14, _null, t18, t12, t11);
      }
      if (b == null) {
        t1 = a.inherit;
        t2 = P.Color_lerp(a.color, _null, t);
        t3 = P.Color_lerp(_null, a.backgroundColor, t);
        t4 = t < 0.5;
        t5 = t4 ? a.fontFamily : _null;
        t6 = t4 ? a.get$fontFamilyFallback() : _null;
        t7 = t4 ? a.fontSize : _null;
        t8 = P.FontWeight_lerp(a.fontWeight, _null, t);
        t9 = t4 ? a.fontStyle : _null;
        t10 = t4 ? a.letterSpacing : _null;
        t11 = t4 ? a.wordSpacing : _null;
        t12 = t4 ? a.textBaseline : _null;
        t13 = t4 ? a.height : _null;
        t14 = t4 ? a.locale : _null;
        t15 = t4 ? a.foreground : _null;
        t16 = t4 ? a.background : _null;
        t17 = t4 ? a.shadows : _null;
        t18 = t4 ? a.fontFeatures : _null;
        t19 = t4 ? a.decoration : _null;
        t20 = P.Color_lerp(a.decorationColor, _null, t);
        t21 = t4 ? a.decorationStyle : _null;
        return A.TextStyle$(t16, t3, t2, _null, t19, t20, t21, t4 ? a.decorationThickness : _null, t5, t6, t18, t7, t9, t8, t15, t13, t1, t10, t14, _null, t17, t12, t11);
      }
      t1 = b.inherit;
      t2 = a.foreground;
      t3 = t2 == null;
      t4 = t3 && b.foreground == null ? P.Color_lerp(a.color, b.color, t) : _null;
      t5 = a.background;
      t6 = t5 == null;
      t7 = t6 && b.background == null ? P.Color_lerp(a.backgroundColor, b.backgroundColor, t) : _null;
      t8 = t < 0.5;
      t9 = t8 ? a.fontFamily : b.fontFamily;
      t10 = t8 ? a.get$fontFamilyFallback() : b.get$fontFamilyFallback();
      t11 = a.fontSize;
      t12 = t11 == null ? b.fontSize : t11;
      t13 = b.fontSize;
      t11 = P.lerpDouble(t12, t13 == null ? t11 : t13, t);
      t12 = P.FontWeight_lerp(a.fontWeight, b.fontWeight, t);
      t13 = t8 ? a.fontStyle : b.fontStyle;
      t14 = a.letterSpacing;
      t15 = t14 == null ? b.letterSpacing : t14;
      t16 = b.letterSpacing;
      t14 = P.lerpDouble(t15, t16 == null ? t14 : t16, t);
      t15 = a.wordSpacing;
      t16 = t15 == null ? b.wordSpacing : t15;
      t17 = b.wordSpacing;
      t15 = P.lerpDouble(t16, t17 == null ? t15 : t17, t);
      t16 = t8 ? a.textBaseline : b.textBaseline;
      t17 = a.height;
      t18 = t17 == null ? b.height : t17;
      t19 = b.height;
      t17 = P.lerpDouble(t18, t19 == null ? t17 : t19, t);
      t18 = t8 ? a.locale : b.locale;
      if (!t3 || b.foreground != null)
        if (t8) {
          if (t3) {
            t2 = new H.SurfacePaint(new H.SurfacePaintData());
            t2.set$color(0, a.color);
          }
        } else {
          t2 = b.foreground;
          if (t2 == null) {
            t2 = new H.SurfacePaint(new H.SurfacePaintData());
            t2.set$color(0, b.color);
          }
        }
      else
        t2 = _null;
      if (!t6 || b.background != null)
        if (t8)
          if (t6) {
            t3 = new H.SurfacePaint(new H.SurfacePaintData());
            t3.set$color(0, a.backgroundColor);
          } else
            t3 = t5;
        else {
          t3 = b.background;
          if (t3 == null) {
            t3 = new H.SurfacePaint(new H.SurfacePaintData());
            t3.set$color(0, b.backgroundColor);
          }
        }
      else
        t3 = _null;
      t5 = t8 ? a.shadows : b.shadows;
      t6 = t8 ? a.fontFeatures : b.fontFeatures;
      t19 = t8 ? a.decoration : b.decoration;
      t20 = P.Color_lerp(a.decorationColor, b.decorationColor, t);
      t8 = t8 ? a.decorationStyle : b.decorationStyle;
      t21 = a.decorationThickness;
      t22 = t21 == null ? b.decorationThickness : t21;
      t23 = b.decorationThickness;
      return A.TextStyle$(t3, t7, t4, _null, t19, t20, t8, P.lerpDouble(t22, t23 == null ? t21 : t23, t), t9, t10, t6, t11, t13, t12, t2, t17, t1, t14, t18, _null, t5, t16, t15);
    },
    TextStyle: function TextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22) {
      var _ = this;
      _.inherit = t0;
      _.color = t1;
      _.backgroundColor = t2;
      _.fontFamily = t3;
      _._text_style$_fontFamilyFallback = t4;
      _._package = t5;
      _.fontSize = t6;
      _.fontWeight = t7;
      _.fontStyle = t8;
      _.letterSpacing = t9;
      _.wordSpacing = t10;
      _.textBaseline = t11;
      _.height = t12;
      _.locale = t13;
      _.foreground = t14;
      _.background = t15;
      _.decoration = t16;
      _.decorationColor = t17;
      _.decorationStyle = t18;
      _.decorationThickness = t19;
      _.debugLabel = t20;
      _.shadows = t21;
      _.fontFeatures = t22;
    },
    _TextStyle_Object_Diagnosticable: function _TextStyle_Object_Diagnosticable() {
    },
    RenderSliverFillViewport: function RenderSliverFillViewport(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._sliver_fill0$_viewportFraction = t0;
      _._childManager = t1;
      _._keepAliveBucket = t2;
      _._debugDanglingKeepAlives = null;
      _._debugChildIntegrityEnabled = true;
      _.ContainerRenderObjectMixin__childCount = t3;
      _.ContainerRenderObjectMixin__firstChild = t4;
      _.ContainerRenderObjectMixin__lastChild = t5;
      _.debugCreator = _.parentData = _._sliver$_geometry = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ViewConfiguration: function ViewConfiguration(t0, t1) {
      this.size = t0;
      this.devicePixelRatio = t1;
    },
    RenderView: function RenderView(t0, t1, t2, t3) {
      var _ = this;
      _._view$_size = t0;
      _._view$_configuration = t1;
      _._window = t2;
      _._rootTransform = null;
      _.RenderObjectWithChildMixin__child = t3;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderView_RenderObject_RenderObjectWithChildMixin: function _RenderView_RenderObject_RenderObjectWithChildMixin() {
    },
    CustomSemanticsAction_getIdentifier: function(action) {
      var result = $.CustomSemanticsAction__ids.$index(0, action);
      if (result == null) {
        result = $.CustomSemanticsAction__nextId;
        $.CustomSemanticsAction__nextId = result + 1;
        $.CustomSemanticsAction__ids.$indexSet(0, action, result);
        $.CustomSemanticsAction__actions.$indexSet(0, result, action);
      }
      return result;
    },
    SemanticsData__sortedListsEqual: function(left, right) {
      var i;
      if (left.length !== right.length)
        return false;
      for (i = 0; i < left.length; ++i)
        if (!J.$eq$(left[i], right[i]))
          return false;
      return true;
    },
    _pointInParentCoordinates: function(node, point) {
      var t1, vector;
      if (node._semantics$_transform == null)
        return point;
      t1 = new Float64Array(3);
      vector = new E.Vector3(t1);
      vector.setValues$3(point._dx, point._dy, 0);
      node._semantics$_transform.transform3$1(vector);
      return new P.Offset(t1[0], t1[1]);
    },
    _childrenInDefaultOrder: function(children, textDirection) {
      var t1, _i, child, t2, t3, t4, t5, verticalGroups, group, depth, edge,
        edges = H.setRuntimeTypeInfo([], type$.JSArray__BoxEdge);
      for (t1 = children.length, _i = 0; _i < children.length; children.length === t1 || (0, H.throwConcurrentModificationError)(children), ++_i) {
        child = children[_i];
        t2 = child._semantics$_rect;
        t3 = t2.left;
        t4 = t2.top;
        t5 = t2.right;
        t2 = t2.bottom;
        edges.push(new A._BoxEdge(true, A._pointInParentCoordinates(child, new P.Offset(t3 - -0.1, t4 - -0.1))._dy, child));
        edges.push(new A._BoxEdge(false, A._pointInParentCoordinates(child, new P.Offset(t5 + -0.1, t2 + -0.1))._dy, child));
      }
      C.JSArray_methods.sort$0(edges);
      verticalGroups = H.setRuntimeTypeInfo([], type$.JSArray__SemanticsSortGroup);
      for (t1 = edges.length, t2 = type$.JSArray_SemanticsNode, group = null, depth = 0, _i = 0; _i < edges.length; edges.length === t1 || (0, H.throwConcurrentModificationError)(edges), ++_i) {
        edge = edges[_i];
        if (edge.isLeadingEdge) {
          ++depth;
          if (group == null)
            group = new A._SemanticsSortGroup(edge.offset, textDirection, H.setRuntimeTypeInfo([], t2));
          group.nodes.push(edge.node);
        } else
          --depth;
        if (depth === 0) {
          verticalGroups.push(group);
          group = null;
        }
      }
      C.JSArray_methods.sort$0(verticalGroups);
      t1 = type$.ExpandIterable__SemanticsSortGroup_SemanticsNode;
      return P.List_List$from(new H.ExpandIterable(verticalGroups, new A._childrenInDefaultOrder_closure(), t1), true, t1._eval$1("Iterable.E"));
    },
    SemanticsConfiguration$: function() {
      return new A.SemanticsConfiguration(P.LinkedHashMap_LinkedHashMap$_empty(type$.SemanticsAction, type$.void_Function_dynamic), P.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.void_Function));
    },
    _concatStrings: function(otherString, otherTextDirection, thisString, thisTextDirection) {
      var nestedLabel;
      if (otherString.length === 0)
        return thisString;
      if (thisTextDirection != otherTextDirection && otherTextDirection != null)
        switch (otherTextDirection) {
          case C.TextDirection_0:
            nestedLabel = "\u202b" + otherString + "\u202c";
            break;
          case C.TextDirection_1:
            nestedLabel = "\u202a" + otherString + "\u202c";
            break;
          default:
            nestedLabel = otherString;
        }
      else
        nestedLabel = otherString;
      if (thisString.length === 0)
        return nestedLabel;
      return thisString + "\n" + nestedLabel;
    },
    SemanticsTag: function SemanticsTag(t0) {
      this.name = t0;
    },
    CustomSemanticsAction: function CustomSemanticsAction() {
    },
    SemanticsData: function SemanticsData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22) {
      var _ = this;
      _.flags = t0;
      _.actions = t1;
      _.label = t2;
      _.value = t3;
      _.increasedValue = t4;
      _.decreasedValue = t5;
      _.hint = t6;
      _.textDirection = t7;
      _.textSelection = t8;
      _.scrollChildCount = t9;
      _.scrollIndex = t10;
      _.scrollPosition = t11;
      _.scrollExtentMax = t12;
      _.scrollExtentMin = t13;
      _.platformViewId = t14;
      _.maxValueLength = t15;
      _.currentValueLength = t16;
      _.rect = t17;
      _.tags = t18;
      _.transform = t19;
      _.elevation = t20;
      _.thickness = t21;
      _.customSemanticsActionIds = t22;
    },
    _SemanticsDiagnosticableNode: function _SemanticsDiagnosticableNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.childOrder = t0;
      _.value = t1;
      _._cachedBuilder = null;
      _.name = t2;
      _.showSeparator = t3;
      _.showName = t4;
      _.linePrefix = t5;
      _.style = t6;
    },
    SemanticsProperties: function SemanticsProperties(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46) {
      var _ = this;
      _.enabled = t0;
      _.checked = t1;
      _.toggled = t2;
      _.selected = t3;
      _.button = t4;
      _.link = t5;
      _.header = t6;
      _.textField = t7;
      _.readOnly = t8;
      _.focusable = t9;
      _.focused = t10;
      _.inMutuallyExclusiveGroup = t11;
      _.hidden = t12;
      _.obscured = t13;
      _.multiline = t14;
      _.scopesRoute = t15;
      _.namesRoute = t16;
      _.image = t17;
      _.liveRegion = t18;
      _.maxValueLength = t19;
      _.currentValueLength = t20;
      _.label = t21;
      _.value = t22;
      _.increasedValue = t23;
      _.decreasedValue = t24;
      _.hint = t25;
      _.hintOverrides = t26;
      _.textDirection = t27;
      _.sortKey = t28;
      _.onTap = t29;
      _.onLongPress = t30;
      _.onScrollLeft = t31;
      _.onScrollRight = t32;
      _.onScrollUp = t33;
      _.onScrollDown = t34;
      _.onIncrease = t35;
      _.onDecrease = t36;
      _.onCopy = t37;
      _.onCut = t38;
      _.onPaste = t39;
      _.onMoveCursorForwardByCharacter = t40;
      _.onMoveCursorBackwardByCharacter = t41;
      _.onSetSelection = t42;
      _.onDidGainAccessibilityFocus = t43;
      _.onDidLoseAccessibilityFocus = t44;
      _.onDismiss = t45;
      _.customSemanticsActions = t46;
    },
    SemanticsNode: function SemanticsNode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.key = t0;
      _.id = t1;
      _._showOnScreen = t2;
      _._semantics$_transform = null;
      _._semantics$_rect = t3;
      _.indexInParent = _.elevationAdjustment = _.parentPaintClipRect = _.parentSemanticsClipRect = null;
      _._isMergedIntoParent = false;
      _._mergeAllDescendantsIntoThisNode = t4;
      _._debugPreviousSnapshot = _._semantics$_children = null;
      _._semantics$_dirty = _._dead = false;
      _._actions = t5;
      _._customSemanticsActions = t6;
      _._actionsAsBits = t7;
      _.tags = null;
      _._flags = t8;
      _._semantics$_label = t9;
      _._semantics$_value = t10;
      _._decreasedValue = t11;
      _._increasedValue = t12;
      _._hint = t13;
      _._semantics$_elevation = t14;
      _._semantics$_thickness = t15;
      _._semantics$_hintOverrides = null;
      _._semantics$_textDirection = t16;
      _._currentValueLength = _._maxValueLength = _._platformViewId = _._scrollExtentMin = _._scrollExtentMax = _._scrollPosition = _._scrollIndex = _._scrollChildCount = _._textSelection = _._sortKey = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    SemanticsNode_getSemanticsData_closure: function SemanticsNode_getSemanticsData_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.customSemanticsActionIds = t2;
    },
    SemanticsNode__childrenInTraversalOrder_closure: function SemanticsNode__childrenInTraversalOrder_closure() {
    },
    SemanticsNode_debugDescribeChildren_closure: function SemanticsNode_debugDescribeChildren_closure(t0) {
      this.childOrder = t0;
    },
    _BoxEdge: function _BoxEdge(t0, t1, t2) {
      this.isLeadingEdge = t0;
      this.offset = t1;
      this.node = t2;
    },
    _SemanticsSortGroup: function _SemanticsSortGroup(t0, t1, t2) {
      this.startOffset = t0;
      this.textDirection = t1;
      this.nodes = t2;
    },
    _SemanticsSortGroup_sortedWithinVerticalGroup_closure: function _SemanticsSortGroup_sortedWithinVerticalGroup_closure() {
    },
    _SemanticsSortGroup_sortedWithinKnot_closure: function _SemanticsSortGroup_sortedWithinKnot_closure() {
    },
    _SemanticsSortGroup_sortedWithinKnot_search: function _SemanticsSortGroup_sortedWithinKnot_search(t0, t1, t2) {
      this.visitedIds = t0;
      this.edges = t1;
      this.sortedIds = t2;
    },
    _SemanticsSortGroup_sortedWithinKnot_closure0: function _SemanticsSortGroup_sortedWithinKnot_closure0() {
    },
    _SemanticsSortGroup_sortedWithinKnot_closure1: function _SemanticsSortGroup_sortedWithinKnot_closure1(t0) {
      this.nodeMap = t0;
    },
    _childrenInDefaultOrder_closure: function _childrenInDefaultOrder_closure() {
    },
    _TraversalSortNode: function _TraversalSortNode(t0, t1, t2) {
      this.node = t0;
      this.sortKey = t1;
      this.position = t2;
    },
    SemanticsOwner: function SemanticsOwner(t0, t1, t2, t3) {
      var _ = this;
      _._semantics$_dirtyNodes = t0;
      _._nodes = t1;
      _._detachedNodes = t2;
      _.ChangeNotifier__listeners = t3;
    },
    SemanticsOwner_sendSemanticsUpdate_closure: function SemanticsOwner_sendSemanticsUpdate_closure(t0) {
      this.$this = t0;
    },
    SemanticsOwner_sendSemanticsUpdate_closure0: function SemanticsOwner_sendSemanticsUpdate_closure0() {
    },
    SemanticsOwner_sendSemanticsUpdate_closure1: function SemanticsOwner_sendSemanticsUpdate_closure1() {
    },
    SemanticsOwner__getSemanticsActionHandlerForId_closure: function SemanticsOwner__getSemanticsActionHandlerForId_closure(t0, t1) {
      this._box_0 = t0;
      this.action = t1;
    },
    SemanticsConfiguration: function SemanticsConfiguration(t0, t1) {
      var _ = this;
      _._hasBeenAnnotated = _.isBlockingSemanticsOfPreviouslyPaintedNodes = _.explicitChildNodes = _._isSemanticBoundary = false;
      _._actions = t0;
      _._actionsAsBits = 0;
      _._currentValueLength = _._maxValueLength = _._platformViewId = _._scrollIndex = _._scrollChildCount = _._indexInParent = _._sortKey = _._semantics$_onLongPress = _._semantics$_onTap = null;
      _._isMergingSemanticsOfDescendants = false;
      _._customSemanticsActions = t1;
      _._hint = _._increasedValue = _._decreasedValue = _._semantics$_value = _._semantics$_label = "";
      _._semantics$_hintOverrides = null;
      _._semantics$_thickness = _._semantics$_elevation = 0;
      _._tagsForChildren = _._scrollExtentMin = _._scrollExtentMax = _._scrollPosition = _._textSelection = _._semantics$_textDirection = null;
      _._flags = 0;
    },
    SemanticsConfiguration__addArgumentlessAction_closure: function SemanticsConfiguration__addArgumentlessAction_closure(t0) {
      this.handler = t0;
    },
    SemanticsConfiguration_onMoveCursorForwardByCharacter_closure: function SemanticsConfiguration_onMoveCursorForwardByCharacter_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure: function SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onMoveCursorForwardByWord_closure: function SemanticsConfiguration_onMoveCursorForwardByWord_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onMoveCursorBackwardByWord_closure: function SemanticsConfiguration_onMoveCursorBackwardByWord_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onSetSelection_closure: function SemanticsConfiguration_onSetSelection_closure(t0) {
      this.value = t0;
    },
    DebugSemanticsDumpOrder: function DebugSemanticsDumpOrder(t0) {
      this._semantics$_name = t0;
    },
    SemanticsSortKey: function SemanticsSortKey() {
    },
    OrdinalSortKey: function OrdinalSortKey(t0, t1) {
      this.order = t0;
      this.name = t1;
    },
    _SemanticsData_Object_Diagnosticable: function _SemanticsData_Object_Diagnosticable() {
    },
    _SemanticsNode_AbstractNode_DiagnosticableTreeMixin: function _SemanticsNode_AbstractNode_DiagnosticableTreeMixin() {
    },
    _SemanticsSortKey_Object_Diagnosticable: function _SemanticsSortKey_Object_Diagnosticable() {
    },
    BasicMessageChannel: function BasicMessageChannel(t0, t1, t2) {
      this.name = t0;
      this.codec = t1;
      this.$ti = t2;
    },
    BasicMessageChannel_setMessageHandler_closure: function BasicMessageChannel_setMessageHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    MethodChannel: function MethodChannel(t0) {
      this.name = t0;
    },
    MethodChannel_setMethodCallHandler_closure: function MethodChannel_setMethodCallHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    OptionalMethodChannel: function OptionalMethodChannel(t0) {
      this.name = t0;
    },
    RawKeyEventDataWeb: function RawKeyEventDataWeb(t0, t1, t2) {
      this.code = t0;
      this.key = t1;
      this.metaState = t2;
    },
    ScrollPositionAlignmentPolicy: function ScrollPositionAlignmentPolicy(t0) {
      this._scroll_position$_name = t0;
    },
    ScrollPosition: function ScrollPosition() {
    },
    _ScrollPosition_ViewportOffset_ScrollMetrics: function _ScrollPosition_ViewportOffset_ScrollMetrics() {
    },
    SliverFillViewport: function SliverFillViewport(t0, t1, t2) {
      this.viewportFraction = t0;
      this.delegate = t1;
      this.key = t2;
    },
    _SliverFillViewportRenderObjectWidget: function _SliverFillViewportRenderObjectWidget(t0, t1, t2) {
      this.viewportFraction = t0;
      this.delegate = t1;
      this.key = t2;
    },
    _SliverFractionalPadding: function _SliverFractionalPadding(t0, t1, t2) {
      this.viewportFraction = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderSliverFractionalPadding: function _RenderSliverFractionalPadding(t0, t1) {
      var _ = this;
      _._lastResolvedConstraints = null;
      _._sliver_fill$_viewportFraction = t0;
      _._sliver_fill$_resolvedPadding = null;
      _.RenderObjectWithChildMixin__child = t1;
      _.debugCreator = _.parentData = _._sliver$_geometry = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _._needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    BenchPictureRecording: function BenchPictureRecording(t0, t1) {
      var _ = this;
      _.paragraph = _.paint = null;
      _.isTracingEnabled = t0;
      _.name = t1;
    },
    BenchPictureRecording_body_closure: function BenchPictureRecording_body_closure(t0, t1) {
      this.$this = t0;
      this.canvas = t1;
    },
    BenchPictureRecording_body_closure0: function BenchPictureRecording_body_closure0(t0) {
      this.recorder = t0;
    },
    BenchTextOutOfPictureBounds: function BenchTextOutOfPictureBounds(t0, t1) {
      var _ = this;
      _.multiLineParagraphs = _.singleLineParagraphs = null;
      _.isTracingEnabled = t0;
      _.name = t1;
    },
    BenchTextOutOfPictureBounds_onDrawFrame_fillCellWithText: function BenchTextOutOfPictureBounds_onDrawFrame_fillCellWithText(t0, t1) {
      this.canvas = t0;
      this.screenSize = t1;
    },
    hashObjects: function(objects) {
      var t1 = C.NativeFloat64List_methods.fold$2(objects, 0, new A.hashObjects_closure()),
        hash = 536870911 & t1 + ((67108863 & t1) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    hashObjects_closure: function hashObjects_closure() {
    }
  };
  var holders = [C, H, J, P, W, Y, X, G, S, Z, R, E, T, K, L, D, U, N, B, F, O, V, Q, M, A];
  hunkHelpers.setFunctionNamesIfNecessary(holders);
  var $ = {};
  H.webOnlyInitializeEngine_closure.prototype = {
    call$2: function(_, __) {
      var t1, _i;
      for (t1 = $._hotRestartListeners.length, _i = 0; _i < $._hotRestartListeners.length; $._hotRestartListeners.length === t1 || (0, H.throwConcurrentModificationError)($._hotRestartListeners), ++_i)
        $._hotRestartListeners[_i].call$0();
      P.ArgumentError_checkNotNull("OK", "result");
      t1 = new P._Future($.Zone__current, type$._Future_ServiceExtensionResponse);
      t1._asyncComplete$1(new P.ServiceExtensionResponse());
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 43
  };
  H.webOnlyInitializeEngine_closure0.prototype = {
    call$0: function() {
      var t2,
        t1 = this._box_0;
      if (!t1.waitingForAnimation) {
        t1.waitingForAnimation = true;
        t2 = window;
        C.Window_methods._ensureRequestAnimationFrame$0(t2);
        C.Window_methods._requestAnimationFrame$1(t2, W._wrapZone(new H.webOnlyInitializeEngine__closure(t1), type$.num));
      }
    },
    $signature: 0
  };
  H.webOnlyInitializeEngine__closure.prototype = {
    call$1: function(highResTime) {
      var highResTimeMicroseconds, t1, t2, t3;
      this._box_0.waitingForAnimation = false;
      highResTimeMicroseconds = C.JSNumber_methods.toInt$0(1000 * highResTime);
      t1 = $.$get$window();
      t2 = t1._onBeginFrame;
      if (t2 != null) {
        t3 = P.Duration$(highResTimeMicroseconds, 0);
        H._invoke1(t2, t1._onBeginFrameZone, t3);
      }
      t2 = t1._onDrawFrame;
      if (t2 != null)
        H._invoke(t2, t1._onDrawFrameZone);
    },
    $signature: 25
  };
  H._NullTreeSanitizer.prototype = {
    sanitizeTree$1: function(node) {
    }
  };
  H.AlarmClock.prototype = {
    set$datetime: function(value) {
      var now, t1, t2, _this = this;
      if (J.$eq$(value, _this._datetime))
        return;
      if (value == null) {
        _this._cancelTimer$0();
        _this._datetime = null;
        return;
      }
      now = _this._timestampFunction.call$0();
      t1 = value._value;
      t2 = now._value;
      if (t1 < t2) {
        _this._cancelTimer$0();
        _this._datetime = value;
        return;
      }
      if (_this._timer == null)
        _this._timer = P.Timer_Timer(P.Duration$(0, t1 - t2), _this.get$_timerDidFire());
      else if (_this._datetime._value > t1) {
        _this._cancelTimer$0();
        _this._timer = P.Timer_Timer(P.Duration$(0, t1 - t2), _this.get$_timerDidFire());
      }
      _this._datetime = value;
    },
    _cancelTimer$0: function() {
      var t1 = this._timer;
      if (t1 != null) {
        t1.cancel$0(0);
        this._timer = null;
      }
    },
    _timerDidFire$0: function() {
      var _this = this,
        now = _this._timestampFunction.call$0(),
        t1 = _this._datetime,
        t2 = now._value;
      t1 = t1._value;
      if (t2 >= t1) {
        _this._timer = null;
        _this.callback.call$0();
      } else
        _this._timer = P.Timer_Timer(P.Duration$(0, t1 - t2), _this.get$_timerDidFire());
    }
  };
  H.AssetManager.prototype = {
    get$_baseUrl: function() {
      var t1 = new H.WhereTypeIterable(new W._FrozenElementList(window.document.querySelectorAll("meta"), type$._FrozenElementList_Element), type$.WhereTypeIterable_MetaElement).firstWhere$2$orElse(0, new H.AssetManager__baseUrl_closure(), new H.AssetManager__baseUrl_closure0());
      return t1 == null ? null : t1.content;
    },
    getAssetUrl$1: function(asset) {
      var t1;
      if (P.Uri_parse(asset).get$hasScheme())
        return P._Uri__uriEncode(C.List_gnE, asset, C.C_Utf8Codec, false);
      t1 = this.get$_baseUrl();
      if (t1 == null)
        t1 = "";
      return P._Uri__uriEncode(C.List_gnE, t1 + ("assets/" + H.S(asset)), C.C_Utf8Codec, false);
    },
    load$1: function(_, asset) {
      return this.load$body$AssetManager(_, asset);
    },
    load$body$AssetManager: function(_, asset) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.ByteData),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, request, response, e, target, t1, exception, url, $async$exception;
      var $async$load$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              url = $async$self.getAssetUrl$1(asset);
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(W.HttpRequest_request(url, null, null, "arraybuffer", null), $async$load$1);
            case 7:
              // returning from await.
              request = $async$result;
              response = W._convertNativeToDart_XHR_Response(request.response);
              t1 = response;
              t1.toString;
              t1 = H.NativeByteData_NativeByteData$view(t1, 0, null);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (type$.ProgressEvent._is(t1)) {
                e = t1;
                target = W._convertNativeToDart_EventTarget(e.target);
                if (type$.HttpRequest._is(target)) {
                  if (target.status === 404 && asset === "AssetManifest.json") {
                    t1 = "Asset manifest does not exist at `" + H.S(url) + "` \u2013 ignoring.";
                    if (typeof console != "undefined")
                      window.console.warn(t1);
                    $async$returnValue = H.NativeByteData_NativeByteData$view(new Uint8Array(H._ensureNativeList(C.C_Utf8Codec.get$encoder().convert$1("{}"))).buffer, 0, null);
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                  throw H.wrapException(new H.AssetManagerException(url, target.status));
                }
                throw $async$exception;
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$load$1, $async$completer);
    }
  };
  H.AssetManager__baseUrl_closure.prototype = {
    call$1: function(e) {
      return J.get$name$x(e) === "assetBase";
    },
    $signature: 31
  };
  H.AssetManager__baseUrl_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  H.AssetManagerException.prototype = {
    toString$0: function(_) {
      return 'Failed to load asset at "' + H.S(this.url) + '" (' + H.S(this.httpStatus) + ")";
    },
    $isException: 1
  };
  H.BitmapCanvas.prototype = {
    set$bounds: function(_, newValue) {
      var newCanvasPositionX, newCanvasPositionY, _this = this;
      _this._bounds = newValue;
      newCanvasPositionX = J.floor$0$n(newValue.left) - 1;
      newCanvasPositionY = J.floor$0$n(_this._bounds.top) - 1;
      if (_this._canvasPositionX !== newCanvasPositionX || _this._canvasPositionY !== newCanvasPositionY) {
        _this._canvasPositionX = newCanvasPositionX;
        _this._canvasPositionY = newCanvasPositionY;
        _this._updateRootElementTransform$0();
      }
    },
    BitmapCanvas$1: function(_bounds) {
      var _this = this,
        t1 = _this.rootElement,
        t2 = t1.style;
      t2.position = "absolute";
      _this._canvasPositionX = J.floor$0$n(_this._bounds.left) - 1;
      _this._canvasPositionY = J.floor$0$n(_this._bounds.top) - 1;
      _this._updateRootElementTransform$0();
      _this._canvasPool._rootElement = t1;
      _this._setupInitialTransform$0();
    },
    _updateRootElementTransform$0: function() {
      var t1 = this.rootElement.style,
        t2 = "translate(" + this._canvasPositionX + "px, " + this._canvasPositionY + "px)";
      t1.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
    },
    _setupInitialTransform$0: function() {
      var _this = this,
        t1 = _this._bounds,
        t2 = t1.left,
        t3 = _this._canvasPositionX;
      t1 = t1.top;
      _this._canvasPool.translate$2(0, -t2 + (t2 - 1 - t3) + 1, -t1 + (t1 - 1 - _this._canvasPositionY) + 1);
    },
    doesFitBounds$1: function(newBounds) {
      return this._widthInBitmapPixels >= H.BitmapCanvas__widthToPhysical(newBounds.right - newBounds.left) && this._heightInBitmapPixels >= H.BitmapCanvas__heightToPhysical(newBounds.bottom - newBounds.top);
    },
    clear$0: function(_) {
      var t1, len, i, t2, t3, _this = this;
      _this._canvasPool.clear$0(0);
      t1 = _this.__engine$_children;
      len = t1.length;
      for (i = 0; i < len; ++i) {
        t2 = t1[i];
        t3 = t2.parentNode;
        if (t3 != null)
          t3.removeChild(t2);
      }
      C.JSArray_methods.set$length(t1, 0);
      _this._cachedLastStyle = null;
      _this._setupInitialTransform$0();
    },
    _applyPaint$1: function(paint) {
      var t3, strokeCap, paintStyle, colorString,
        t1 = this._canvasPool,
        contextHandle = t1.get$contextHandle(),
        t2 = paint.strokeWidth;
      if (t2 == null)
        t2 = 1;
      if (t2 !== contextHandle._currentLineWidth) {
        contextHandle._currentLineWidth = t2;
        contextHandle.context.lineWidth = t2;
      }
      t2 = paint.blendMode;
      if (t2 != contextHandle._currentBlendMode) {
        contextHandle._currentBlendMode = t2;
        t3 = contextHandle.context;
        t2 = H._stringForBlendMode(t2);
        t3.globalCompositeOperation = t2 == null ? "source-over" : t2;
      }
      strokeCap = paint.strokeCap;
      if (strokeCap == null)
        strokeCap = C.StrokeCap_0;
      if (strokeCap !== contextHandle._currentStrokeCap) {
        contextHandle._currentStrokeCap = strokeCap;
        contextHandle.context.lineCap = H._stringForStrokeCap(strokeCap);
      }
      if (C.StrokeJoin_0 !== contextHandle._currentStrokeJoin) {
        contextHandle._currentStrokeJoin = C.StrokeJoin_0;
        contextHandle.context.lineJoin = H._stringForStrokeJoin(C.StrokeJoin_0);
      }
      t2 = H._maskFilterToCss(paint.maskFilter);
      if (contextHandle._currentFilter !== t2) {
        contextHandle._currentFilter = t2;
        contextHandle.context.filter = t2;
      }
      t2 = paint.shader;
      if (t2 != null) {
        paintStyle = t2.createPaintStyle$1(t1.get$context(t1));
        contextHandle.set$fillStyle(0, paintStyle);
        contextHandle.set$strokeStyle(0, paintStyle);
      } else {
        t1 = paint.color;
        if (t1 != null) {
          colorString = H.colorToCssString(t1);
          contextHandle.set$fillStyle(0, colorString);
          contextHandle.set$strokeStyle(0, colorString);
        } else {
          contextHandle.set$fillStyle(0, "");
          contextHandle.set$strokeStyle(0, "");
        }
      }
    },
    save$0: function(_) {
      var t1 = this._canvasPool;
      t1.super$_SaveStackTracking$save(0);
      if (t1.__engine$_canvas != null) {
        t1.get$context(t1).save();
        ++t1._saveContextCount;
      }
      return this._saveCount++;
    },
    restore$0: function(_) {
      var t1 = this._canvasPool;
      t1.super$_SaveStackTracking$restore(0);
      if (t1.__engine$_canvas != null) {
        t1.get$context(t1).restore();
        t1.get$contextHandle().reset$0(0);
        --t1._saveContextCount;
      }
      --this._saveCount;
      this._cachedLastStyle = null;
    },
    translate$2: function(_, dx, dy) {
      this._canvasPool.translate$2(0, dx, dy);
    },
    scale$2: function(_, sx, sy) {
      var t1 = this._canvasPool;
      t1.super$_SaveStackTracking$scale(0, sx, sy);
      if (t1.__engine$_canvas != null)
        t1.get$context(t1).scale(sx, sy);
    },
    rotate$1: function(_, radians) {
      var t1 = this._canvasPool;
      t1.super$_SaveStackTracking$rotate(0, radians);
      if (t1.__engine$_canvas != null)
        t1.get$context(t1).rotate(radians);
    },
    transform$1: function(_, matrix4) {
      var t1 = this._canvasPool;
      t1.super$_SaveStackTracking$transform(0, matrix4);
      if (t1.__engine$_canvas != null)
        t1.get$context(t1).transform(matrix4[0], matrix4[1], matrix4[4], matrix4[5], matrix4[12], matrix4[13]);
    },
    clipRect$1: function(rect) {
      var t1 = this._canvasPool;
      t1.super$_SaveStackTracking$clipRect(rect);
      if (t1.__engine$_canvas != null)
        t1.__engine$_clipRect$2(t1.get$context(t1), rect);
    },
    clipRRect$1: function(rrect) {
      var t1 = this._canvasPool;
      t1.super$_SaveStackTracking$clipRRect(rrect);
      if (t1.__engine$_canvas != null)
        t1._clipRRect$2(t1.get$context(t1), rrect);
    },
    clipPath$1: function(_, path) {
      var ctx,
        t1 = this._canvasPool;
      t1.super$_SaveStackTracking$clipPath(0, path);
      if (t1.__engine$_canvas != null) {
        ctx = t1.get$context(t1);
        t1._runPath$2(ctx, path);
        ctx.clip();
      }
    },
    drawLine$3: function(p1, p2, paint) {
      var t1, ctx;
      this._applyPaint$1(paint);
      t1 = this._canvasPool;
      ctx = t1.get$context(t1);
      ctx.beginPath();
      ctx.moveTo(p1._dx, p1._dy);
      ctx.lineTo(p2._dx, p2._dy);
      ctx.stroke();
    },
    drawRect$2: function(rect, paint) {
      var t1, t2, t3, t4, t5;
      this._applyPaint$1(paint);
      t1 = this._canvasPool;
      t2 = paint.style;
      t1.get$context(t1).beginPath();
      t3 = t1.get$context(t1);
      t4 = rect.left;
      t5 = rect.top;
      t3.rect(t4, t5, rect.right - t4, rect.bottom - t5);
      t1.get$contextHandle().paint$1(t2);
    },
    drawRRect$2: function(rrect, paint) {
      var t1, t2;
      this._applyPaint$1(paint);
      t1 = this._canvasPool;
      t2 = paint.style;
      new H._RRectToCanvasRenderer(t1.get$context(t1)).render$1(rrect);
      t1.get$contextHandle().paint$1(t2);
    },
    drawDRRect$3: function(outer, inner, paint) {
      var t1, t2, renderer;
      this._applyPaint$1(paint);
      t1 = this._canvasPool;
      t2 = paint.style;
      renderer = new H._RRectToCanvasRenderer(t1.get$context(t1));
      renderer.render$1(outer);
      renderer.render$3$reverse$startNewPath(inner, true, false);
      t1.get$contextHandle().paint$1(t2);
    },
    drawCircle$3: function(c, radius, paint) {
      var t1, t2;
      this._applyPaint$1(paint);
      t1 = this._canvasPool;
      t2 = paint.style;
      t1.get$context(t1).beginPath();
      H.DomRenderer_ellipse(t1.get$context(t1), c._dx, c._dy, radius, radius, 0, 0, 6.283185307179586, false);
      t1.get$contextHandle().paint$1(t2);
    },
    drawPath$2: function(path, paint) {
      var t1, t2;
      this._applyPaint$1(paint);
      t1 = this._canvasPool;
      t2 = paint.style;
      t1._runPath$2(t1.get$context(t1), path);
      t1.get$contextHandle().paint$1(t2);
    },
    drawShadow$4: function(path, color, elevation, transparentOccluder) {
      var t2, t3, t4, t5, red, green, blue, alpha,
        t1 = this._canvasPool,
        shadow = H.computeShadow(path.getBounds$0(0), elevation);
      if (shadow != null) {
        t2 = transparentOccluder && H.browserEngine() !== C.BrowserEngine_1;
        t3 = shadow.offset;
        t4 = shadow.blurWidth;
        t5 = t3._dx;
        t3 = t3._dy;
        if (t2) {
          t1.get$context(t1).save();
          t1.get$context(t1).translate(t5, t3);
          t1.get$context(t1).filter = H._maskFilterToCss(new P.MaskFilter(C.BlurStyle_0, t4));
          t1.get$context(t1).strokeStyle = "";
          t1.get$context(t1).fillStyle = H.colorToCssString(color);
          t1._runPath$2(t1.get$context(t1), path);
          t1.get$context(t1).fill();
          t1.get$context(t1).restore();
        } else {
          t1.get$context(t1).save();
          t1.get$context(t1).filter = "none";
          t1.get$context(t1).strokeStyle = "";
          t2 = color.value;
          red = (16711680 & t2) >>> 16;
          green = (65280 & t2) >>> 8;
          blue = (255 & t2) >>> 0;
          alpha = C.JSDouble_methods.round$0(0.4 * ((4278190080 & t2) >>> 24));
          t1.get$context(t1).fillStyle = H.colorComponentsToCssString(red, green, blue, alpha);
          t1.get$context(t1).shadowBlur = t4;
          t1.get$context(t1).shadowColor = H.colorToCssString(P.Color$fromARGB(255, red, green, blue));
          t1.get$context(t1).shadowOffsetX = t5;
          t1.get$context(t1).shadowOffsetY = t3;
          t1._runPath$2(t1.get$context(t1), path);
          t1.get$context(t1).fill();
          t1.get$context(t1).restore();
        }
      }
    },
    _drawTextLine$4: function(style, line, x, y) {
      var letterSpacing, t2, len, i, char,
        t1 = this._canvasPool,
        ctx = t1.get$context(t1);
      x += line.left;
      letterSpacing = style.letterSpacing;
      t1 = letterSpacing == null || letterSpacing === 0;
      t2 = line.displayText;
      if (t1)
        (ctx && C.CanvasRenderingContext2D_methods).fillText$3(ctx, t2, x, y);
      else {
        len = t2.length;
        for (i = 0; i < len; ++i) {
          char = t2[i];
          ctx.fillText(char, x, y);
          x += letterSpacing + ctx.measureText(char).width;
        }
      }
    },
    drawParagraph$2: function(paragraph, offset) {
      var lines, t1, backgroundPaint, t2, y, len, i, paragraphElement, t3, clipElements, t4, _i, clipElement, _this = this,
        style = paragraph._geometricStyle;
      if (paragraph.get$_drawOnCanvas() && !_this._childOverdraw) {
        lines = paragraph._measurementResult.lines;
        t1 = paragraph._background;
        if (t1 == null)
          backgroundPaint = null;
        else {
          t1._frozen = true;
          backgroundPaint = t1._paintData;
        }
        if (backgroundPaint != null) {
          t1 = offset._dx;
          t2 = offset._dy;
          _this.drawRect$2(new P.Rect(t1, t2, t1 + paragraph.get$width(paragraph), t2 + paragraph.get$height(paragraph)), backgroundPaint);
        }
        if (!style.$eq(0, _this._cachedLastStyle)) {
          t1 = _this._canvasPool;
          t1.get$context(t1).font = style.get$cssFontString();
          _this._cachedLastStyle = style;
        }
        t1 = paragraph._paint;
        t1._frozen = true;
        _this._applyPaint$1(t1._paintData);
        y = offset._dy + paragraph.get$alphabeticBaseline(paragraph);
        len = lines.length;
        for (t1 = offset._dx, i = 0; i < len; ++i) {
          _this._drawTextLine$4(style, lines[i], t1, y);
          t2 = paragraph._measurementResult;
          t2 = t2 == null ? null : t2.lineHeight;
          y += t2 == null ? 0 : t2;
        }
        return;
      }
      paragraphElement = H._drawParagraphElement(paragraph, offset, null);
      t1 = _this._canvasPool;
      t2 = t1._clipStack;
      t3 = t1._currentTransform;
      if (t2 != null) {
        clipElements = H._clipContent(t2, paragraphElement, offset, t3);
        for (t2 = clipElements.length, t3 = _this.rootElement, t4 = _this.__engine$_children, _i = 0; _i < clipElements.length; clipElements.length === t2 || (0, H.throwConcurrentModificationError)(clipElements), ++_i) {
          clipElement = clipElements[_i];
          t3.appendChild(clipElement);
          t4.push(clipElement);
        }
      } else {
        H.setElementTransform(paragraphElement, H.transformWithOffset(t3, offset).__engine$_m4storage);
        _this.rootElement.appendChild(paragraphElement);
      }
      _this.__engine$_children.push(paragraphElement);
      if (t1.__engine$_canvas != null) {
        t1._restoreContextSave$0();
        t1._contextHandle.reset$0(0);
        t2 = t1._pool;
        if (t2 == null)
          t2 = t1._pool = H.setRuntimeTypeInfo([], type$.JSArray_CanvasElement);
        t2.push(t1.__engine$_canvas);
        t1._contextHandle = t1.__engine$_context = t1.__engine$_canvas = null;
      }
      _this._childOverdraw = true;
    },
    endOfPaint$0: function() {
      this._canvasPool.endOfPaint$0();
    },
    get$rootElement: function(receiver) {
      return this.rootElement;
    }
  };
  H.BrowserEngine.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.OperatingSystem.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.LocationStrategy.prototype = {};
  H.HashLocationStrategy.prototype = {
    onPopState$1: function(_, fn) {
      C.Window_methods.addEventListener$2(window, "popstate", fn);
      return new H.HashLocationStrategy_onPopState_closure(this, fn);
    },
    get$path: function(_) {
      var path = window.location.hash;
      if (path == null)
        path = "";
      if (path.length === 0 || path === "#")
        return "/";
      return C.JSString_methods.substring$1(path, 1);
    },
    prepareExternalUrl$1: function(internalUrl) {
      return internalUrl.length === 0 ? H.S(window.location.pathname) + H.S(window.location.search) : "#" + internalUrl;
    },
    _waitForPopState$0: function() {
      var t1 = {},
        t2 = new P._Future($.Zone__current, type$._Future_void);
      t1.unsubscribe = null;
      t1.unsubscribe = this.onPopState$1(0, new H.HashLocationStrategy__waitForPopState_closure(t1, new P._AsyncCompleter(t2, type$._AsyncCompleter_void)));
      return t2;
    }
  };
  H.HashLocationStrategy_onPopState_closure.prototype = {
    call$0: function() {
      C.Window_methods.removeEventListener$2(window, "popstate", this.fn);
      return null;
    },
    $signature: 1
  };
  H.HashLocationStrategy__waitForPopState_closure.prototype = {
    call$1: function(_) {
      this._box_0.unsubscribe.call$0();
      this.completer.complete$0(0);
    },
    $signature: 2
  };
  H.PlatformLocation.prototype = {};
  H.BrowserPlatformLocation.prototype = {};
  H._CanvasPool.prototype = {
    get$context: function(_) {
      if (this.__engine$_canvas == null)
        this._createCanvas$0();
      return this.__engine$_context;
    },
    get$contextHandle: function() {
      if (this.__engine$_canvas == null)
        this._createCanvas$0();
      return this._contextHandle;
    },
    _createCanvas$0: function() {
      var requiresClearRect, reused, t2, t3, t4, t5, ctx, _this = this,
        t1 = _this._reusablePool;
      if (t1 != null && t1.length !== 0) {
        _this.__engine$_canvas = (t1 && C.JSArray_methods).removeAt$1(t1, 0);
        requiresClearRect = true;
        reused = true;
      } else {
        t1 = _this._widthInBitmapPixels;
        t2 = H.EngineWindow_browserDevicePixelRatio();
        t3 = _this._heightInBitmapPixels;
        t4 = H.EngineWindow_browserDevicePixelRatio();
        t5 = W.CanvasElement_CanvasElement(t3, t1);
        _this.__engine$_canvas = t5;
        t5 = t5.style;
        t5.position = "absolute";
        t1 = H.S(t1 / t2) + "px";
        t5.width = t1;
        t1 = H.S(t3 / t4) + "px";
        t5.height = t1;
        requiresClearRect = false;
        reused = false;
      }
      t1 = _this._rootElement;
      t2 = t1.lastChild;
      t3 = _this.__engine$_canvas;
      if (t2 == null ? t3 != null : t2 !== t3)
        t1.appendChild(t3);
      t1 = _this._rootElement.firstChild;
      t2 = _this.__engine$_canvas;
      if (t1 == null ? t2 == null : t1 === t2) {
        t1 = t2.style;
        t1.zIndex = "-1";
      } else if (reused)
        t2.style.removeProperty("z-index");
      t1 = _this.__engine$_canvas.getContext("2d");
      _this.__engine$_context = t1;
      _this._contextHandle = new H.ContextStateHandle(t1, C.BlendMode_3, C.StrokeCap_0, C.StrokeJoin_0);
      ctx = _this.get$context(_this);
      ctx.save();
      ++_this._saveContextCount;
      ctx.setTransform(1, 0, 0, 1, 0, 0);
      if (requiresClearRect)
        ctx.clearRect(0, 0, _this._widthInBitmapPixels, _this._heightInBitmapPixels);
      ctx.scale(H.EngineWindow_browserDevicePixelRatio(), H.EngineWindow_browserDevicePixelRatio());
      _this._replayClipStack$0();
    },
    clear$0: function(_) {
      var ctx, e, exception, t1, _this = this;
      _this.super$_SaveStackTracking$clear(0);
      if (_this.__engine$_canvas != null) {
        ctx = _this.__engine$_context;
        if (ctx != null)
          try {
            ctx.font = "";
          } catch (exception) {
            e = H.unwrapException(exception);
            if (!J.$eq$(e.name, "NS_ERROR_FAILURE"))
              throw exception;
          }
      }
      if (_this.__engine$_canvas != null) {
        _this._restoreContextSave$0();
        _this._contextHandle.reset$0(0);
        t1 = _this._pool;
        if (t1 == null)
          t1 = _this._pool = H.setRuntimeTypeInfo([], type$.JSArray_CanvasElement);
        t1.push(_this.__engine$_canvas);
        _this._contextHandle = _this.__engine$_context = null;
      }
      _this._reusablePool = _this._pool;
      _this._contextHandle = _this.__engine$_context = _this.__engine$_canvas = _this._pool = null;
    },
    _replaySingleSaveEntry$4: function(clipDepth, prevTransform, transform, clipStack) {
      var clipCount, clipEntry, clipTimeTransform, t1, t2, ratio, t3, path,
        ctx = this.__engine$_context;
      if (clipStack != null)
        for (clipCount = clipStack.length; clipDepth < clipCount; ++clipDepth) {
          clipEntry = clipStack[clipDepth];
          clipTimeTransform = clipEntry.currentTransform;
          t1 = clipTimeTransform.__engine$_m4storage;
          t2 = prevTransform.__engine$_m4storage;
          if (t1[0] !== t2[0] || t1[1] !== t2[1] || t1[4] !== t2[4] || t1[5] !== t2[5] || t1[12] !== t2[12] || t1[13] !== t2[13]) {
            ratio = window.devicePixelRatio;
            if (ratio == null || ratio === 0)
              ratio = 1;
            ctx.setTransform(ratio, 0, 0, ratio, 0, 0);
            ctx.transform(t1[0], t1[1], t1[4], t1[5], t1[12], t1[13]);
            prevTransform = clipTimeTransform;
          }
          t1 = clipEntry.rect;
          if (t1 != null) {
            ctx.beginPath();
            t2 = t1.left;
            t3 = t1.top;
            ctx.rect(t2, t3, t1.right - t2, t1.bottom - t3);
            ctx.clip();
          } else {
            t1 = clipEntry.rrect;
            if (t1 != null) {
              path = P.Path_Path();
              path.addRRect$1(t1);
              this._runPath$2(ctx, path);
              ctx.clip();
            } else {
              t1 = clipEntry.path;
              if (t1 != null) {
                this._runPath$2(ctx, t1);
                ctx.clip();
              }
            }
          }
        }
      t1 = transform.__engine$_m4storage;
      t2 = prevTransform.__engine$_m4storage;
      if (t1[0] !== t2[0] || t1[1] !== t2[1] || t1[4] !== t2[4] || t1[5] !== t2[5] || t1[12] !== t2[12] || t1[13] !== t2[13]) {
        ratio = H.EngineWindow_browserDevicePixelRatio();
        ctx.setTransform(ratio, 0, 0, ratio, 0, 0);
        ctx.transform(t1[0], t1[1], t1[4], t1[5], t1[12], t1[13]);
      }
      return clipDepth;
    },
    _replayClipStack$0: function() {
      var t1, len, clipDepth, saveStackIndex, saveEntry, prevTransform0, _this = this,
        ctx = _this.__engine$_context,
        prevTransform = new H.Matrix40(new Float32Array(16));
      prevTransform.setIdentity$0();
      for (t1 = _this._saveStack, len = t1.length, clipDepth = 0, saveStackIndex = 0; saveStackIndex < len; ++saveStackIndex, prevTransform = prevTransform0) {
        saveEntry = t1[saveStackIndex];
        prevTransform0 = saveEntry.transform;
        clipDepth = _this._replaySingleSaveEntry$4(clipDepth, prevTransform, prevTransform0, saveEntry.clipStack);
        ctx.save();
        ++_this._saveContextCount;
      }
      _this._replaySingleSaveEntry$4(clipDepth, prevTransform, _this._currentTransform, _this._clipStack);
    },
    endOfPaint$0: function() {
      var t2, _i, e, t3,
        t1 = this._reusablePool;
      if (t1 != null) {
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          e = t1[_i];
          if (H.browserEngine() === C.BrowserEngine_1) {
            e.height = 0;
            e.width = 0;
          }
          t3 = e.parentNode;
          if (t3 != null)
            t3.removeChild(e);
        }
        this._reusablePool = null;
      }
      this._restoreContextSave$0();
    },
    _restoreContextSave$0: function() {
      for (; this._saveContextCount !== 0;) {
        this.__engine$_context.restore();
        --this._saveContextCount;
      }
    },
    translate$2: function(_, dx, dy) {
      var _this = this;
      _this.super$_SaveStackTracking$translate(0, dx, dy);
      if (_this.__engine$_canvas != null)
        _this.get$context(_this).translate(dx, dy);
    },
    __engine$_clipRect$2: function(ctx, rect) {
      var t1, t2;
      ctx.beginPath();
      t1 = rect.left;
      t2 = rect.top;
      ctx.rect(t1, t2, rect.right - t1, rect.bottom - t2);
      ctx.clip();
    },
    _clipRRect$2: function(ctx, rrect) {
      var path = P.Path_Path();
      path.addRRect$1(rrect);
      this._runPath$2(ctx, path);
      ctx.clip();
    },
    _runPath$2: function(ctx, path) {
      var t1, t2, _i, t3, t4, _i0, command;
      ctx.beginPath();
      for (t1 = path.subpaths, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        for (t3 = t1[_i].commands, t4 = t3.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i0) {
          command = t3[_i0];
          switch (command.type) {
            case 5:
              ctx.bezierCurveTo(command.x1, command.y1, command.x2, command.y2, command.x3, command.y3);
              break;
            case 3:
              ctx.closePath();
              break;
            case 2:
              H.DomRenderer_ellipse(ctx, command.x, command.y, command.radiusX, command.radiusY, command.rotation, command.startAngle, command.endAngle, command.anticlockwise);
              break;
            case 1:
              ctx.lineTo(command.x, command.y);
              break;
            case 0:
              ctx.moveTo(command.x, command.y);
              break;
            case 7:
              new H._RRectToCanvasRenderer(ctx).render$2$startNewPath(command.rrect, false);
              break;
            case 6:
              ctx.rect(command.x, command.y, command.width, command.height);
              break;
            case 4:
              ctx.quadraticCurveTo(command.x1, command.y1, command.x2, command.y2);
              break;
            default:
              throw H.wrapException(P.UnimplementedError$("Unknown path command " + command.toString$0(0)));
          }
        }
    },
    dispose$0: function() {
      if (H.browserEngine() === C.BrowserEngine_1 && this.__engine$_canvas != null) {
        var t1 = this.__engine$_canvas;
        t1.height = 0;
        t1.width = 0;
      }
      this._clearPool$0();
    },
    _clearPool$0: function() {
      var t2, _i, c, t3,
        t1 = this._pool;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          c = t1[_i];
          if (H.browserEngine() === C.BrowserEngine_1) {
            c.height = 0;
            c.width = 0;
          }
          t3 = c.parentNode;
          if (t3 != null)
            t3.removeChild(c);
        }
      this._pool = null;
    }
  };
  H.ContextStateHandle.prototype = {
    set$fillStyle: function(_, colorOrGradient) {
      var t1 = this._currentFillStyle;
      if (colorOrGradient == null ? t1 != null : colorOrGradient !== t1) {
        this._currentFillStyle = colorOrGradient;
        this.context.fillStyle = colorOrGradient;
      }
    },
    set$strokeStyle: function(_, colorOrGradient) {
      var t1 = this._currentStrokeStyle;
      if (colorOrGradient == null ? t1 != null : colorOrGradient !== t1) {
        this._currentStrokeStyle = colorOrGradient;
        this.context.strokeStyle = colorOrGradient;
      }
    },
    paint$1: function(style) {
      var t1 = this.context;
      if (style === C.PaintingStyle_1)
        t1.stroke();
      else
        t1.fill();
    },
    reset$0: function(_) {
      var _this = this,
        t1 = _this.context;
      t1.fillStyle = "";
      _this._currentFillStyle = t1.fillStyle;
      t1.strokeStyle = "";
      _this._currentStrokeStyle = t1.strokeStyle;
      t1.filter = "none";
      _this._currentFilter = "none";
      t1.globalCompositeOperation = "source-over";
      _this._currentBlendMode = C.BlendMode_3;
      t1.lineWidth = 1;
      _this._currentLineWidth = 1;
      t1.lineCap = "butt";
      _this._currentStrokeCap = C.StrokeCap_0;
      t1.lineJoin = "miter";
      _this._currentStrokeJoin = C.StrokeJoin_0;
    }
  };
  H._SaveStackTracking.prototype = {
    clear$0: function(_) {
      var t1;
      C.JSArray_methods.set$length(this._saveStack, 0);
      this._clipStack = null;
      t1 = new H.Matrix40(new Float32Array(16));
      t1.setIdentity$0();
      this._currentTransform = t1;
    },
    save$0: function(_) {
      var t1 = this._currentTransform,
        t2 = new H.Matrix40(new Float32Array(16));
      t2.setFrom$1(t1);
      t1 = this._clipStack;
      t1 = t1 == null ? null : P.List_List$from(t1, true, type$._SaveClipEntry);
      this._saveStack.push(new H._SaveStackEntry(t2, t1));
    },
    restore$0: function(_) {
      var entry,
        t1 = this._saveStack;
      if (t1.length === 0)
        return;
      entry = t1.pop();
      this._currentTransform = entry.transform;
      this._clipStack = entry.clipStack;
    },
    translate$2: function(_, dx, dy) {
      this._currentTransform.translate$2(0, dx, dy);
    },
    scale$2: function(_, sx, sy) {
      this._currentTransform.scale$2(0, sx, sy);
    },
    rotate$1: function(_, radians) {
      this._currentTransform.rotate$2(0, $.$get$_SaveStackTracking__unitZ(), radians);
    },
    transform$1: function(_, matrix4) {
      this._currentTransform.multiply$1(0, new H.Matrix40(matrix4));
    },
    clipRect$1: function(rect) {
      var t2, t3,
        t1 = this._clipStack;
      if (t1 == null)
        t1 = this._clipStack = H.setRuntimeTypeInfo([], type$.JSArray__SaveClipEntry);
      t2 = this._currentTransform;
      t3 = new H.Matrix40(new Float32Array(16));
      t3.setFrom$1(t2);
      C.JSArray_methods.add$1(t1, new H._SaveClipEntry(rect, null, null, t3));
    },
    clipRRect$1: function(rrect) {
      var t2, t3,
        t1 = this._clipStack;
      if (t1 == null)
        t1 = this._clipStack = H.setRuntimeTypeInfo([], type$.JSArray__SaveClipEntry);
      t2 = this._currentTransform;
      t3 = new H.Matrix40(new Float32Array(16));
      t3.setFrom$1(t2);
      C.JSArray_methods.add$1(t1, new H._SaveClipEntry(null, rrect, null, t3));
    },
    clipPath$1: function(_, path) {
      var t2, t3,
        t1 = this._clipStack;
      if (t1 == null)
        t1 = this._clipStack = H.setRuntimeTypeInfo([], type$.JSArray__SaveClipEntry);
      t2 = this._currentTransform;
      t3 = new H.Matrix40(new Float32Array(16));
      t3.setFrom$1(t2);
      C.JSArray_methods.add$1(t1, new H._SaveClipEntry(null, null, path, t3));
    }
  };
  H.ClipboardMessageHandler.prototype = {
    setDataMethodCall$2: function(methodCall, callback) {
      var t1 = {};
      t1.errorEnvelopeEncoded = false;
      this._copyToClipboardStrategy.setData$1(0, J.$index$asx(methodCall.$arguments, "text")).then$1$1(new H.ClipboardMessageHandler_setDataMethodCall_closure(t1, callback), type$.Null).catchError$1(new H.ClipboardMessageHandler_setDataMethodCall_closure0(t1, callback));
    },
    getDataMethodCall$1: function(callback) {
      this._pasteFromClipboardStrategy.getData$0(0).then$1$1(new H.ClipboardMessageHandler_getDataMethodCall_closure(callback), type$.Null).catchError$1(new H.ClipboardMessageHandler_getDataMethodCall_closure0(callback));
    }
  };
  H.ClipboardMessageHandler_setDataMethodCall_closure.prototype = {
    call$1: function(success) {
      var t1 = this.callback;
      if (success)
        t1.call$1(C.C_JSONMessageCodec0.encodeMessage$1([true]));
      else {
        t1.call$1(C.C_JSONMessageCodec0.encodeMessage$1(["copy_fail", "Clipboard.setData failed", null]));
        this._box_0.errorEnvelopeEncoded = true;
      }
    }
  };
  H.ClipboardMessageHandler_setDataMethodCall_closure0.prototype = {
    call$1: function(_) {
      if (!this._box_0.errorEnvelopeEncoded)
        this.callback.call$1(C.C_JSONMessageCodec0.encodeMessage$1(["copy_fail", "Clipboard.setData failed", null]));
    },
    $signature: 3
  };
  H.ClipboardMessageHandler_getDataMethodCall_closure.prototype = {
    call$1: function(data) {
      this.callback.call$1(C.C_JSONMessageCodec0.encodeMessage$1([P.LinkedHashMap_LinkedHashMap$_literal(["text", data], type$.String, type$.dynamic)]));
    }
  };
  H.ClipboardMessageHandler_getDataMethodCall_closure0.prototype = {
    call$1: function(error) {
      P.print("Could not get text from clipboard: " + H.S(error));
      this.callback.call$1(C.C_JSONMessageCodec0.encodeMessage$1(["paste_fail", "Clipboard.getData failed", null]));
    },
    $signature: 3
  };
  H.ClipboardAPICopyStrategy.prototype = {
    setData$1: function(_, text) {
      return this.setData$body$ClipboardAPICopyStrategy(_, text);
    },
    setData$body$ClipboardAPICopyStrategy: function(_, text) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], e, exception, t1, $async$exception;
      var $async$setData$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(P.promiseToFuture(window.navigator.clipboard.writeText(text), type$.dynamic), $async$setData$1);
            case 7:
              // returning from await.
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = H.unwrapException($async$exception);
              P.print("copy is not successful " + H.S(J.get$message$x(e)));
              t1 = new P._Future($.Zone__current, type$._Future_bool);
              t1._asyncComplete$1(false);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              t1 = new P._Future($.Zone__current, type$._Future_bool);
              t1._asyncComplete$1(true);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$setData$1, $async$completer);
    }
  };
  H.ClipboardAPIPasteStrategy.prototype = {
    getData$0: function(_) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue;
      var $async$getData$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = P.promiseToFuture(window.navigator.clipboard.readText(), type$.String);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$getData$0, $async$completer);
    }
  };
  H.ExecCommandCopyStrategy.prototype = {
    setData$1: function(_, text) {
      var t1 = this._setDataSync$1(text),
        t2 = new P._Future($.Zone__current, type$._Future_bool);
      t2._asyncComplete$1(t1);
      return t2;
    },
    _setDataSync$1: function(text) {
      var tempTextArea, result, e, exception,
        _s8_ = "-99999px",
        _s11_ = "transparent",
        t1 = document,
        tempElement = t1.createElement("textarea"),
        elementStyle = tempElement.style;
      elementStyle.position = "absolute";
      elementStyle.top = _s8_;
      elementStyle.left = _s8_;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "opacity"), "0", "");
      elementStyle.color = _s11_;
      elementStyle.backgroundColor = _s11_;
      elementStyle.background = _s11_;
      t1.body.appendChild(tempElement);
      tempTextArea = tempElement;
      tempTextArea.value = text;
      J.focus$0$x(tempTextArea);
      J.select$0$x(tempTextArea);
      result = false;
      try {
        result = t1.execCommand("copy");
        if (!result)
          P.print("copy is not successful");
      } catch (exception) {
        e = H.unwrapException(exception);
        P.print("copy is not successful " + H.S(J.get$message$x(e)));
      } finally {
        t1 = tempTextArea;
        if (t1 != null)
          J.remove$0$ax(t1);
      }
      return result;
    }
  };
  H.ExecCommandPasteStrategy.prototype = {
    getData$0: function(_) {
      P.print("Paste is not implemented for this browser.");
      throw H.wrapException(P.UnimplementedError$(null));
    }
  };
  H.CanvasKitCanvas.prototype = {
    save$0: function(_) {
      this.__engine$_canvas.skCanvas.callMethod$1("save");
    },
    saveLayer$2: function(bounds, paint) {
      this.__engine$_canvas.skCanvas.callMethod$2("saveLayer", H.setRuntimeTypeInfo([H.makeSkRect(bounds), paint.get$skiaObject()], type$.JSArray_JsObject));
    },
    restore$0: function(_) {
      this.__engine$_canvas.skCanvas.callMethod$1("restore");
    },
    translate$2: function(_, dx, dy) {
      this.__engine$_canvas.skCanvas.callMethod$2("translate", H.setRuntimeTypeInfo([dx, dy], type$.JSArray_double));
    },
    scale$2: function(_, sx, sy) {
      this.__engine$_canvas.skCanvas.callMethod$2("scale", H.setRuntimeTypeInfo([sx, sy], type$.JSArray_double));
      return null;
    },
    rotate$1: function(_, radians) {
      this.__engine$_canvas.skCanvas.callMethod$2("rotate", H.setRuntimeTypeInfo([radians * 180 / 3.141592653589793, 0, 0], type$.JSArray_double));
    },
    transform$1: function(_, matrix4) {
      var t1 = H.toMatrix32(matrix4);
      this.__engine$_canvas.skCanvas.callMethod$2("concat", H.setRuntimeTypeInfo([H.makeSkMatrixFromFloat32(t1)], type$.JSArray_JsArray_double));
    },
    clipRect$3$clipOp$doAntiAlias: function(rect, clipOp, doAntiAlias) {
      this.__engine$_canvas.clipRect$3(rect, clipOp, doAntiAlias);
    },
    clipRect$2$doAntiAlias: function(rect, doAntiAlias) {
      return this.clipRect$3$clipOp$doAntiAlias(rect, C.ClipOp_1, doAntiAlias);
    },
    clipRect$1: function(rect) {
      return this.clipRect$3$clipOp$doAntiAlias(rect, C.ClipOp_1, true);
    },
    clipRRect$2$doAntiAlias: function(rrect, doAntiAlias) {
      var intersectClipOp,
        t1 = this.__engine$_canvas;
      t1.toString;
      intersectClipOp = J.$index$asx($.canvasKit.$index(0, "ClipOp"), "Intersect");
      t1.skCanvas.callMethod$2("clipRRect", [H.makeSkRRect(rrect), intersectClipOp, true]);
    },
    clipRRect$1: function(rrect) {
      return this.clipRRect$2$doAntiAlias(rrect, true);
    },
    clipPath$2$doAntiAlias: function(_, path, doAntiAlias) {
      this.__engine$_canvas.clipPath$2(0, path, doAntiAlias);
    },
    clipPath$1: function($receiver, path) {
      return this.clipPath$2$doAntiAlias($receiver, path, true);
    },
    drawLine$3: function(p1, p2, paint) {
      this.__engine$_canvas.skCanvas.callMethod$2("drawLine", [p1._dx, p1._dy, p2._dx, p2._dy, paint.get$skiaObject()]);
    },
    drawRect$2: function(rect, paint) {
      var t1 = this.__engine$_canvas;
      t1.toString;
      t1.skCanvas.callMethod$2("drawRect", H.setRuntimeTypeInfo([H.makeSkRect(rect), paint.get$skiaObject()], type$.JSArray_JsObject));
    },
    drawRRect$2: function(rrect, paint) {
      this.__engine$_canvas.skCanvas.callMethod$2("drawRRect", H.setRuntimeTypeInfo([H.makeSkRRect(rrect), paint.get$skiaObject()], type$.JSArray_JsObject));
    },
    drawDRRect$3: function(outer, inner, paint) {
      this.__engine$_canvas.skCanvas.callMethod$2("drawDRRect", H.setRuntimeTypeInfo([H.makeSkRRect(outer), H.makeSkRRect(inner), paint.get$skiaObject()], type$.JSArray_JsObject));
    },
    drawCircle$3: function(c, radius, paint) {
      this.__engine$_canvas.skCanvas.callMethod$2("drawCircle", [c._dx, c._dy, radius, paint.get$skiaObject()]);
    },
    drawPath$2: function(path, paint) {
      this.__engine$_canvas.drawPath$2(path, paint);
    },
    drawParagraph$2: function(paragraph, offset) {
      this.__engine$_canvas.skCanvas.callMethod$2("drawParagraph", [paragraph.skParagraph, offset._dx, offset._dy]);
    },
    drawShadow$4: function(path, color, elevation, transparentOccluder) {
      var t1 = this.__engine$_canvas.skCanvas,
        t2 = $.$get$window()._debugDevicePixelRatio;
      H.drawSkShadow(t1, path, color, elevation, transparentOccluder, t2 != null ? t2 : H.EngineWindow_browserDevicePixelRatio());
    }
  };
  H._RegisteredFont.prototype = {};
  H.SkPaint.prototype = {
    _syncBlendMode$1: function(object) {
      object.callMethod$2("setBlendMode", H.setRuntimeTypeInfo([H.makeSkBlendMode(this._blendMode)], type$.JSArray_JsObject));
    },
    _syncStyle$1: function(object) {
      var skPaintStyle;
      switch (this._style) {
        case C.PaintingStyle_1:
          skPaintStyle = $.$get$SkPaint__skPaintStyleStroke();
          break;
        case C.PaintingStyle_0:
          skPaintStyle = $.$get$SkPaint__skPaintStyleFill();
          break;
        default:
          skPaintStyle = null;
      }
      object.callMethod$2("setStyle", H.setRuntimeTypeInfo([skPaintStyle], type$.JSArray_JsObject));
    },
    set$strokeCap: function(value) {
    },
    get$color: function(_) {
      return this._color;
    },
    _syncColor$1: function(object) {
      var t1 = this._color;
      object.callMethod$2("setColor", H.setRuntimeTypeInfo([t1 != null ? t1.get$value(t1) : 4278190080], type$.JSArray_int));
    },
    _syncShader$1: function(object) {
      var t1 = this._shader;
      object.callMethod$2("setShader", H.setRuntimeTypeInfo([t1 != null ? t1.createSkiaShader$0() : null], type$.JSArray_JsObject));
    },
    _syncMaskFilter$1: function(object) {
      var blurStyle, sigma, skBlurStyle, skMaskFilter,
        _s9_ = "BlurStyle",
        t1 = this._maskFilter;
      if (t1 != null) {
        blurStyle = t1._ui$_style;
        sigma = t1._sigma;
        switch (blurStyle) {
          case C.BlurStyle_0:
            skBlurStyle = J.$index$asx($.canvasKit.$index(0, _s9_), "Normal");
            break;
          case C.BlurStyle_1:
            skBlurStyle = J.$index$asx($.canvasKit.$index(0, _s9_), "Solid");
            break;
          case C.BlurStyle_2:
            skBlurStyle = J.$index$asx($.canvasKit.$index(0, _s9_), "Outer");
            break;
          case C.BlurStyle_3:
            skBlurStyle = J.$index$asx($.canvasKit.$index(0, _s9_), "Inner");
            break;
          default:
            skBlurStyle = null;
        }
        skMaskFilter = $.canvasKit.callMethod$2("MakeBlurMaskFilter", [skBlurStyle, sigma, true]);
      } else
        skMaskFilter = null;
      object.callMethod$2("setMaskFilter", H.setRuntimeTypeInfo([skMaskFilter], type$.JSArray_JsObject));
    },
    $isPaint: 1
  };
  H.SkPath.prototype = {
    addOval$1: function(oval) {
      this._skPath.callMethod$2("addOval", [H.makeSkRect(oval), false, 1]);
    },
    addRRect$1: function(rrect) {
      var skRect = H.makeSkRect(new P.Rect(rrect.left, rrect.top, rrect.right, rrect.bottom)),
        radii = H.setRuntimeTypeInfo([rrect.tlRadiusX, rrect.tlRadiusY, rrect.trRadiusX, rrect.trRadiusY, rrect.brRadiusX, rrect.brRadiusY, rrect.blRadiusX, rrect.blRadiusY], type$.JSArray_double);
      this._skPath.callMethod$2("addRoundRect", [skRect, P.JsArray_JsArray$from(radii, type$.double), false]);
    },
    addRect$1: function(rect) {
      this._skPath.callMethod$2("addRect", H.setRuntimeTypeInfo([H.makeSkRect(rect)], type$.JSArray_JsObject));
    },
    close$0: function(_) {
      this._skPath.callMethod$1("close");
    },
    contains$1: function(_, point) {
      return this._skPath.callMethod$2("contains", H.setRuntimeTypeInfo([point._dx, point._dy], type$.JSArray_double));
    },
    getBounds$0: function(_) {
      var bounds = this._skPath.callMethod$1("getBounds");
      return new P.Rect(bounds.$index(0, "fLeft"), bounds.$index(0, "fTop"), bounds.$index(0, "fRight"), bounds.$index(0, "fBottom"));
    },
    lineTo$2: function(_, x, y) {
      this._skPath.callMethod$2("lineTo", H.setRuntimeTypeInfo([x, y], type$.JSArray_double));
    },
    moveTo$2: function(_, x, y) {
      this._skPath.callMethod$2("moveTo", H.setRuntimeTypeInfo([x, y], type$.JSArray_double));
    },
    quadraticBezierTo$4: function(x1, y1, x2, y2) {
      this._skPath.callMethod$2("quadTo", H.setRuntimeTypeInfo([x1, y1, x2, y2], type$.JSArray_double));
    },
    reset$0: function(_) {
      this._skPath.callMethod$1("reset");
    },
    shift$1: function(offset) {
      var newPath = this._skPath.callMethod$1("copy");
      newPath.callMethod$2("transform", H.setRuntimeTypeInfo([1, 0, offset._dx, 0, 1, offset._dy, 0, 0, 0], type$.JSArray_double));
      return new H.SkPath(newPath);
    },
    $isPath: 1
  };
  H.SkParagraphStyle.prototype = {};
  H.SkiaObject.prototype = {
    get$skiaObject: function() {
      var obj, t1, _this = this;
      if (_this._skiaObject == null) {
        obj = P.JsObject_JsObject($.canvasKit.$index(0, "SkPaint"), null);
        _this._syncBlendMode$1(obj);
        _this._syncStyle$1(obj);
        obj.callMethod$2("setStrokeWidth", H.setRuntimeTypeInfo([_this._strokeWidth], type$.JSArray_double));
        obj.callMethod$2("setAntiAlias", H.setRuntimeTypeInfo([_this._isAntiAlias], type$.JSArray_bool));
        _this._syncColor$1(obj);
        _this._syncShader$1(obj);
        _this._syncMaskFilter$1(obj);
        t1 = type$.JSArray_JsObject;
        obj.callMethod$2("setColorFilter", H.setRuntimeTypeInfo([null], t1));
        obj.callMethod$2("setImageFilter", H.setRuntimeTypeInfo([null], t1));
        _this._skiaObject = obj;
        J.add$1$ax($.$get$SkiaObjects_managedObjects(), _this);
      }
      return _this._skiaObject;
    }
  };
  H.SkiaObjects_closure.prototype = {
    call$0: function() {
      $.$get$window().toString;
      null._postFrameCallbacks.push(H._engine_SkiaObjects_postFrameCleanUp$closure());
      return H.setRuntimeTypeInfo([], type$.JSArray_SkiaObject);
    },
    $signature: 133
  };
  H.closure12.prototype = {
    call$0: function() {
      var jsColorStops = new P.JsArray([], type$.JsArray_double);
      jsColorStops.super$JsObject$$indexSet(0, "length", 2);
      jsColorStops.$indexSet(0, 0, 0);
      jsColorStops.$indexSet(0, 1, 1);
      return jsColorStops;
    },
    $signature: 89
  };
  H.DomCanvas.prototype = {
    clear$0: function(_) {
      this.super$SaveElementStackTracking$clear(0);
      $.$get$domRenderer().clearDom$1(this.rootElement);
    },
    clipRect$1: function(rect) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    clipRRect$1: function(rrect) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    clipPath$1: function(_, path) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    drawLine$3: function(p1, p2, paint) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    drawRect$2: function(rect, paint) {
      this._drawRect$3(rect, paint, "draw-rect");
    },
    _drawRect$3: function(rect, paint, tagName) {
      var t2, t3, left, right, $top, bottom, effectiveTransform, translated, style, cssColor, _this = this,
        t1 = W._ElementFactoryProvider_createElement_tag(tagName, null),
        isStroke = paint.style === C.PaintingStyle_1,
        strokeWidth = paint.strokeWidth;
      if (strokeWidth == null)
        strokeWidth = 0;
      t2 = rect.left;
      t3 = rect.right;
      left = Math.min(H.checkNum(t2), H.checkNum(t3));
      right = Math.max(H.checkNum(t2), H.checkNum(t3));
      t3 = rect.top;
      t2 = rect.bottom;
      $top = Math.min(H.checkNum(t3), H.checkNum(t2));
      bottom = Math.max(H.checkNum(t3), H.checkNum(t2));
      if (_this.SaveElementStackTracking__currentTransform.isIdentity$0(0))
        if (isStroke) {
          t2 = strokeWidth / 2;
          effectiveTransform = "translate(" + H.S(left - t2) + "px, " + H.S($top - t2) + "px)";
        } else
          effectiveTransform = "translate(" + H.S(left) + "px, " + H.S($top) + "px)";
      else {
        t2 = _this.SaveElementStackTracking__currentTransform;
        t3 = new Float32Array(16);
        translated = new H.Matrix40(t3);
        translated.setFrom$1(t2);
        if (isStroke) {
          t2 = strokeWidth / 2;
          translated.translate$2(0, left - t2, $top - t2);
        } else
          translated.translate$2(0, left, $top);
        effectiveTransform = H.float64ListToCssTransform(t3);
      }
      style = t1.style;
      style.position = "absolute";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "transform-origin"), "0 0 0", "");
      C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "transform"), effectiveTransform, "");
      t2 = paint.color;
      cssColor = t2 == null ? "#000000" : H.colorToCssString(t2);
      t2 = paint.maskFilter;
      if (t2 != null) {
        t2 = "blur(" + H.S(t2._sigma) + "px)";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "filter"), t2, "");
      }
      t2 = right - left;
      if (isStroke) {
        t2 = H.S(t2 - strokeWidth) + "px";
        style.width = t2;
        t2 = H.S(bottom - $top - strokeWidth) + "px";
        style.height = t2;
        t2 = H.S(strokeWidth) + "px solid " + H.S(cssColor);
        style.border = t2;
      } else {
        t2 = H.S(t2) + "px";
        style.width = t2;
        t2 = H.S(bottom - $top) + "px";
        style.height = t2;
        style.backgroundColor = cssColor == null ? "" : cssColor;
      }
      t2 = _this.SaveElementStackTracking__elementStack;
      (t2.length === 0 ? _this.rootElement : C.JSArray_methods.get$last(t2)).appendChild(t1);
      return t1;
    },
    drawRRect$2: function(rrect, paint) {
      var t1 = this._drawRect$3(new P.Rect(rrect.left, rrect.top, rrect.right, rrect.bottom), paint, "draw-rrect").style,
        t2 = J.toStringAsFixed$1$n(rrect.blRadiusX, 3) + "px";
      t1.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "border-radius"), t2, "");
    },
    drawDRRect$3: function(outer, inner, paint) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    drawCircle$3: function(c, radius, paint) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    drawPath$2: function(path, paint) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    drawShadow$4: function(path, color, elevation, transparentOccluder) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    drawParagraph$2: function(paragraph, offset) {
      var paragraphElement = H._drawParagraphElement(paragraph, offset, this.SaveElementStackTracking__currentTransform),
        t1 = this.SaveElementStackTracking__elementStack;
      (t1.length === 0 ? this.rootElement : C.JSArray_methods.get$last(t1)).appendChild(paragraphElement);
    },
    endOfPaint$0: function() {
    },
    get$rootElement: function(receiver) {
      return this.rootElement;
    }
  };
  H.DomRenderer.prototype = {
    renderScene$1: function(sceneElement) {
      var t1 = this._sceneElement;
      if (sceneElement == null ? t1 != null : sceneElement !== t1) {
        if (t1 != null)
          J.remove$0$ax(t1);
        this._sceneElement = sceneElement;
        this._sceneHostElement.appendChild(sceneElement);
      }
    },
    createElement$1: function(_, tagName) {
      var element = document.createElement(tagName);
      return element;
    },
    setElementStyle$3: function(element, $name, value) {
      var t1;
      if (value == null)
        element.style.removeProperty($name);
      else {
        t1 = element.style;
        t1.toString;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, $name), value, null);
      }
    },
    reset$0: function(_) {
      var t2, sheet, isWebKit, isFirefox, bodyElement, t3, t4, _accesibilityPlaceholder, initialInnerWidth, _this = this, _s1_ = "0", _s4_ = "none", _box_0 = {},
        t1 = _this._styleElement;
      if (t1 != null)
        C.StyleElement_methods.remove$0(t1);
      t1 = document;
      t2 = t1.createElement("style");
      _this._styleElement = t2;
      t1.head.appendChild(t2);
      sheet = _this._styleElement.sheet;
      isWebKit = H.browserEngine() === C.BrowserEngine_1;
      isFirefox = H.browserEngine() === C.BrowserEngine_2;
      if (isFirefox)
        sheet.insertRule("flt-ruler-host p, flt-scene p { margin: 0; line-height: 100%;}", sheet.cssRules.length);
      else
        sheet.insertRule("flt-ruler-host p, flt-scene p { margin: 0; }", sheet.cssRules.length);
      sheet.insertRule("flt-semantics input[type=range] {\n  appearance: none;\n  -webkit-appearance: none;\n  width: 100%;\n  position: absolute;\n  border: none;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}", sheet.cssRules.length);
      if (isWebKit)
        sheet.insertRule("flt-semantics input[type=range]::-webkit-slider-thumb {  -webkit-appearance: none;}", sheet.cssRules.length);
      if (isFirefox) {
        sheet.insertRule("input::-moz-selection {  background-color: transparent;}", sheet.cssRules.length);
        sheet.insertRule("textarea::-moz-selection {  background-color: transparent;}", sheet.cssRules.length);
      } else {
        sheet.insertRule("input::selection {  background-color: transparent;}", sheet.cssRules.length);
        sheet.insertRule("textarea::selection {  background-color: transparent;}", sheet.cssRules.length);
      }
      sheet.insertRule('flt-semantics input,\nflt-semantics textarea,\nflt-semantics [contentEditable="true"] {\n  caret-color: transparent;\n}\n', sheet.cssRules.length);
      if (isWebKit)
        sheet.insertRule("flt-glass-pane * {\n  -webkit-tap-highlight-color: transparent;\n}\n", sheet.cssRules.length);
      bodyElement = t1.body;
      _this.setElementStyle$3(bodyElement, "position", "fixed");
      _this.setElementStyle$3(bodyElement, "top", _s1_);
      _this.setElementStyle$3(bodyElement, "right", _s1_);
      _this.setElementStyle$3(bodyElement, "bottom", _s1_);
      _this.setElementStyle$3(bodyElement, "left", _s1_);
      _this.setElementStyle$3(bodyElement, "overflow", "hidden");
      _this.setElementStyle$3(bodyElement, "padding", _s1_);
      _this.setElementStyle$3(bodyElement, "margin", _s1_);
      _this.setElementStyle$3(bodyElement, "user-select", _s4_);
      _this.setElementStyle$3(bodyElement, "-webkit-user-select", _s4_);
      _this.setElementStyle$3(bodyElement, "-ms-user-select", _s4_);
      _this.setElementStyle$3(bodyElement, "-moz-user-select", _s4_);
      _this.setElementStyle$3(bodyElement, "touch-action", _s4_);
      _this.setElementStyle$3(bodyElement, "font", "normal normal 14px sans-serif");
      _this.setElementStyle$3(bodyElement, "color", "red");
      bodyElement.spellcheck = false;
      for (t2 = new W._FrozenElementList(t1.head.querySelectorAll('meta[name="viewport"]'), type$._FrozenElementList_Element), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        t4 = t3.parentNode;
        if (t4 != null)
          t4.removeChild(t3);
      }
      t2 = _this._viewportMeta;
      if (t2 != null)
        C.MetaElement_methods.remove$0(t2);
      t2 = t1.createElement("meta");
      t2.setAttribute("flt-viewport", "");
      t2.name = "viewport";
      t2.content = "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no";
      _this._viewportMeta = t2;
      t1.head.appendChild(t2);
      t2 = _this._glassPaneElement;
      if (t2 != null)
        J.remove$0$ax(t2);
      t1 = _this.createElement$1(0, "flt-glass-pane");
      _this._glassPaneElement = t1;
      t1 = t1.style;
      t1.position = "absolute";
      t1.top = _s1_;
      t1.right = _s1_;
      t1.bottom = _s1_;
      t1.left = _s1_;
      bodyElement.appendChild(_this._glassPaneElement);
      t1 = _this.createElement$1(0, "flt-scene-host");
      _this._sceneHostElement = t1;
      t1 = t1.style;
      t1.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "pointer-events"), _s4_, "");
      _this._glassPaneElement.appendChild(_this._sceneHostElement);
      _accesibilityPlaceholder = H.EngineSemanticsOwner_instance().semanticsHelper._semanticsEnabler.prepareAccesibilityPlaceholder$0();
      _this._glassPaneElement.insertBefore(_accesibilityPlaceholder, _this._sceneHostElement);
      t1 = _this._glassPaneElement;
      if ($.PointerBinding__instance == null) {
        t1 = new H.PointerBinding(t1);
        t1._pointerDataConverter = new H.PointerDataConverter(P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._PointerState));
        t1._detector = C.C_PointerSupportDetector;
        t1._adapter = t1._createAdapter$0();
        $.PointerBinding__instance = t1;
      }
      _this._sceneHostElement.setAttribute("aria-hidden", "true");
      if (window.visualViewport == null && isWebKit) {
        initialInnerWidth = window.innerWidth;
        _box_0.checkCount = 0;
        P.Timer_Timer$periodic(C.Duration_100000, new H.DomRenderer_reset_closure(_box_0, _this, initialInnerWidth));
      }
      t1 = _this.get$_metricsDidChange();
      t2 = type$.Event;
      if (window.visualViewport != null) {
        t3 = window.visualViewport;
        t3.toString;
        _this._resizeSubscription = W._EventStreamSubscription$(t3, "resize", t1, false, t2);
      } else
        _this._resizeSubscription = W._EventStreamSubscription$(window, "resize", t1, false, t2);
    },
    _metricsDidChange$1: function($event) {
      var t2,
        t1 = $.$get$window();
      t1._computePhysicalSize$0();
      t2 = t1._onMetricsChanged;
      if (t2 != null)
        H._invoke(t2, t1._onMetricsChangedZone);
    },
    clearDom$1: function(node) {
      var t1, t2;
      for (; t1 = node.lastChild, t1 != null;) {
        t2 = t1.parentNode;
        if (t2 != null)
          t2.removeChild(t1);
      }
    }
  };
  H.DomRenderer_reset_closure.prototype = {
    call$1: function(t) {
      var t1 = ++this._box_0.checkCount;
      if (this.initialInnerWidth != window.innerWidth) {
        t.cancel$0(0);
        this.$this._metricsDidChange$1(null);
      } else if (t1 > 5)
        t.cancel$0(0);
    }
  };
  H.EngineCanvas.prototype = {};
  H._SaveStackEntry.prototype = {};
  H._SaveClipEntry.prototype = {};
  H.BrowserHistory.prototype = {
    get$currentPath: function() {
      var t1 = this._locationStrategy;
      t1 = t1 == null ? null : t1.get$path(t1);
      return t1 == null ? "/" : t1;
    },
    setRouteName$1: function(routeName) {
      var t1 = this._locationStrategy;
      if (t1 != null)
        this._setupFlutterEntry$3$path$replace(t1, routeName, true);
    },
    exit$0: function() {
      var backFuture, _this = this,
        t1 = _this._locationStrategy;
      if (t1 != null) {
        _this._tearoffStrategy$1(t1);
        t1 = _this._locationStrategy;
        t1.toString;
        window.history.back();
        backFuture = t1._waitForPopState$0();
        _this._locationStrategy = null;
        return backFuture;
      }
      t1 = new P._Future($.Zone__current, type$._Future_void);
      t1._asyncComplete$1(null);
      return t1;
    },
    _popStateListener$1: function($event) {
      var newRouteName, _this = this,
        _s18_ = "flutter/navigation",
        t1 = new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy($event.state, true);
      if (type$.Map_dynamic_dynamic._is(t1) && J.$eq$(J.$index$asx(t1, "origin"), true)) {
        _this._setupFlutterEntry$1(_this._locationStrategy);
        t1 = $.$get$window();
        if (t1._onPlatformMessage != null)
          t1.invokeOnPlatformMessage$3(_s18_, C.C_JSONMethodCodec0.encodeMethodCall$1(C.MethodCall_popRoute_null), new H.BrowserHistory__popStateListener_closure());
      } else if (H._isFlutterEntry(new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy($event.state, true))) {
        newRouteName = _this._userProvidedRouteName;
        _this._userProvidedRouteName = null;
        t1 = $.$get$window();
        if (t1._onPlatformMessage != null)
          t1.invokeOnPlatformMessage$3(_s18_, C.C_JSONMethodCodec0.encodeMethodCall$1(new H.MethodCall("pushRoute", newRouteName)), new H.BrowserHistory__popStateListener_closure0());
      } else {
        _this._userProvidedRouteName = _this.get$currentPath();
        t1 = _this._locationStrategy;
        t1.toString;
        window.history.back();
        t1._waitForPopState$0();
      }
    },
    _setupFlutterEntry$3$path$replace: function(strategy, path, replace) {
      var t1, t2, t3;
      if (path == null)
        path = this.get$currentPath();
      t1 = $._flutterState;
      if (replace) {
        t2 = strategy.prepareExternalUrl$1(path);
        t3 = window.history;
        t3.toString;
        t3.replaceState(new P._StructuredCloneDart2Js([], []).walk$1(t1), "flutter", t2);
      } else {
        t2 = strategy.prepareExternalUrl$1(path);
        t3 = window.history;
        t3.toString;
        t3.pushState(new P._StructuredCloneDart2Js([], []).walk$1(t1), "flutter", t2);
      }
    },
    _setupFlutterEntry$1: function(strategy) {
      return this._setupFlutterEntry$3$path$replace(strategy, null, false);
    },
    _setupStrategy$1: function(strategy) {
      var path, t1, t2, t3, _this = this;
      if (strategy == null)
        return;
      path = _this.get$currentPath();
      if (!H._isFlutterEntry(new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(window.history.state, true))) {
        t1 = $._originState;
        t2 = strategy.prepareExternalUrl$1("");
        t3 = window.history;
        t3.toString;
        t3.replaceState(new P._StructuredCloneDart2Js([], []).walk$1(t1), "origin", t2);
        _this._setupFlutterEntry$3$path$replace(strategy, path, false);
      }
      _this._unsubscribe = strategy.onPopState$1(0, _this.get$_popStateListener());
    },
    _tearoffStrategy$1: function(strategy) {
      if (strategy == null)
        return;
      this._unsubscribe.call$0();
      this._unsubscribe = null;
      window.history.back();
      strategy._waitForPopState$0();
    }
  };
  H.BrowserHistory__popStateListener_closure.prototype = {
    call$1: function(_) {
    },
    $signature: 17
  };
  H.BrowserHistory__popStateListener_closure0.prototype = {
    call$1: function(_) {
    },
    $signature: 17
  };
  H._SaveElementStackEntry.prototype = {};
  H.SaveElementStackTracking.prototype = {
    clear$0: function(_) {
      var t1;
      C.JSArray_methods.set$length(this.SaveElementStackTracking__saveStack, 0);
      C.JSArray_methods.set$length(this.SaveElementStackTracking__elementStack, 0);
      t1 = new H.Matrix40(new Float32Array(16));
      t1.setIdentity$0();
      this.SaveElementStackTracking__currentTransform = t1;
    },
    save$0: function(_) {
      var t2, t3, _this = this,
        t1 = _this.SaveElementStackTracking__elementStack;
      t1 = t1.length === 0 ? _this.rootElement : C.JSArray_methods.get$last(t1);
      t2 = _this.SaveElementStackTracking__currentTransform;
      t3 = new H.Matrix40(new Float32Array(16));
      t3.setFrom$1(t2);
      _this.SaveElementStackTracking__saveStack.push(new H._SaveElementStackEntry(t1, t3));
    },
    restore$0: function(_) {
      var entry, t2, t3, _this = this,
        t1 = _this.SaveElementStackTracking__saveStack;
      if (t1.length === 0)
        return;
      entry = t1.pop();
      _this.SaveElementStackTracking__currentTransform = entry.transform;
      t1 = _this.SaveElementStackTracking__elementStack;
      t2 = entry.savedElement;
      t3 = _this.rootElement;
      while (true) {
        if (!((t1.length === 0 ? t3 : C.JSArray_methods.get$last(t1)) !== t2))
          break;
        t1.pop();
      }
    },
    translate$2: function(_, dx, dy) {
      this.SaveElementStackTracking__currentTransform.translate$2(0, dx, dy);
    },
    scale$2: function(_, sx, sy) {
      this.SaveElementStackTracking__currentTransform.scale$2(0, sx, sy);
    },
    rotate$1: function(_, radians) {
      this.SaveElementStackTracking__currentTransform.rotate$2(0, $.$get$SaveElementStackTracking__unitZ(), radians);
    },
    transform$1: function(_, matrix4) {
      this.SaveElementStackTracking__currentTransform.multiply$1(0, new H.Matrix40(matrix4));
    }
  };
  H.HtmlImage.prototype = {$isImage: 1};
  H.Keyboard.prototype = {
    Keyboard$_$0: function() {
      var _this = this,
        t1 = new H.Keyboard$__closure(_this);
      _this._keydownListener = t1;
      C.Window_methods.addEventListener$2(window, "keydown", t1);
      t1 = new H.Keyboard$__closure0(_this);
      _this._keyupListener = t1;
      C.Window_methods.addEventListener$2(window, "keyup", t1);
      $._hotRestartListeners.push(new H.Keyboard$__closure1(_this));
    },
    dispose$0: function() {
      var t1, t2, _this = this;
      C.Window_methods.removeEventListener$2(window, "keydown", _this._keydownListener);
      C.Window_methods.removeEventListener$2(window, "keyup", _this._keyupListener);
      for (t1 = _this._keydownTimers, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t1.$index(0, t2.get$current(t2)).cancel$0(0);
      t1.clear$0(0);
      $.Keyboard__instance = _this._keyupListener = _this._keydownListener = null;
    },
    _handleHtmlEvent$1: function($event) {
      var timerKey, key, t2, t3, metaState, _this = this,
        t1 = $.$get$window();
      if (t1._onPlatformMessage == null)
        return;
      if (_this._shouldPreventDefault$1($event))
        $event.preventDefault();
      timerKey = $event.code;
      key = $event.key;
      if (!(key === "Meta" || key === "Shift" || key === "Alt" || key === "Control")) {
        t2 = _this._keydownTimers;
        t3 = t2.$index(0, timerKey);
        if (t3 != null)
          t3.cancel$0(0);
        if ($event.type === "keydown")
          t2.$indexSet(0, timerKey, P.Timer_Timer(C.Duration_1000000, new H.Keyboard__handleHtmlEvent_closure(_this, timerKey, $event)));
        else
          t2.remove$1(0, timerKey);
      }
      metaState = $event.getModifierState("Shift") ? 1 : 0;
      if ($event.getModifierState("Alt"))
        metaState |= 2;
      if ($event.getModifierState("Control"))
        metaState |= 4;
      if ($event.getModifierState("Meta"))
        metaState |= 8;
      _this._lastMetaState = metaState;
      t1.invokeOnPlatformMessage$3("flutter/keyevent", C.C_JSONMessageCodec0.encodeMessage$1(P.LinkedHashMap_LinkedHashMap$_literal(["type", $event.type, "keymap", "web", "code", $event.code, "key", $event.key, "metaState", metaState], type$.String, type$.dynamic)), H._engine___noopCallback$closure());
    },
    _shouldPreventDefault$1: function($event) {
      switch ($event.key) {
        case "Tab":
          return true;
        default:
          return false;
      }
    }
  };
  H.Keyboard$__closure.prototype = {
    call$1: function($event) {
      this.$this._handleHtmlEvent$1($event);
    },
    $signature: 2
  };
  H.Keyboard$__closure0.prototype = {
    call$1: function($event) {
      this.$this._handleHtmlEvent$1($event);
    },
    $signature: 2
  };
  H.Keyboard$__closure1.prototype = {
    call$0: function() {
      this.$this.dispose$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.Keyboard__handleHtmlEvent_closure.prototype = {
    call$0: function() {
      var t2, eventData,
        t1 = this.$this;
      t1._keydownTimers.remove$1(0, this.timerKey);
      t2 = this.event;
      eventData = P.LinkedHashMap_LinkedHashMap$_literal(["type", "keyup", "keymap", "web", "code", t2.code, "key", t2.key, "metaState", t1._lastMetaState], type$.String, type$.dynamic);
      $.$get$window().invokeOnPlatformMessage$3("flutter/keyevent", C.C_JSONMessageCodec0.encodeMessage$1(eventData), H._engine___noopCallback$closure());
    },
    $signature: 0
  };
  H.EnginePictureRecorder.prototype = {
    endRecording$0: function() {
      var t1, _this = this;
      if (!_this._isRecording)
        return null;
      _this._isRecording = false;
      t1 = _this.__engine$_canvas;
      t1._pictureBounds = t1._paintBounds.computeBounds$0();
      return new H.EnginePicture(_this.__engine$_canvas);
    }
  };
  H.EnginePicture.prototype = {
    toImage$2: function(width, height) {
      return this.toImage$body$EnginePicture(width, height);
    },
    toImage$body$EnginePicture: function(width, height) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Image),
        $async$returnValue, $async$self = this, imageDataUrl, e, imageRect, canvas;
      var $async$toImage$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              imageRect = new P.Rect(0, 0, width, height);
              canvas = H.BitmapCanvas$(imageRect);
              $async$self.recordingCanvas.apply$2(canvas, imageRect);
              imageDataUrl = canvas._canvasPool.__engine$_canvas.toDataURL("image/png", null);
              e = document.createElement("img");
              e.src = imageDataUrl;
              e.width = width;
              e.height = height;
              $async$returnValue = new H.HtmlImage();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$toImage$2, $async$completer);
    }
  };
  H.PlatformViewRegistry.prototype = {};
  H.PointerBinding.prototype = {
    _createAdapter$0: function() {
      var t1, _this = this;
      if ("PointerEvent" in window) {
        t1 = new H._PointerAdapter(P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._ButtonSanitizer), _this.glassPaneElement, _this.get$_onPointerData(), _this._pointerDataConverter);
        t1.setup$0();
        return t1;
      }
      if ("TouchEvent" in window) {
        t1 = new H._TouchAdapter(P.LinkedHashSet_LinkedHashSet$_empty(type$.int), _this.glassPaneElement, _this.get$_onPointerData(), _this._pointerDataConverter);
        t1.setup$0();
        return t1;
      }
      if ("MouseEvent" in window) {
        t1 = new H._MouseAdapter(new H._ButtonSanitizer(), _this.glassPaneElement, _this.get$_onPointerData(), _this._pointerDataConverter);
        t1.setup$0();
        return t1;
      }
      return null;
    },
    _onPointerData$1: function(data) {
      var t1 = H.setRuntimeTypeInfo(data.slice(0), H._arrayInstanceType(data)._eval$1("JSArray<1>")),
        t2 = $.$get$window(),
        t3 = t2._onPointerDataPacket;
      if (t3 != null)
        H._invoke1(t3, t2._onPointerDataPacketZone, new P.PointerDataPacket(t1));
    }
  };
  H.PointerSupportDetector.prototype = {
    toString$0: function(_) {
      return "pointers:" + ("PointerEvent" in window) + ", touch:" + ("TouchEvent" in window) + ", mouse:" + ("MouseEvent" in window);
    }
  };
  H._BaseAdapter.prototype = {
    addEventListener$3$acceptOutsideGlasspane: function(_, eventName, handler, acceptOutsideGlasspane) {
      var loggedHandler = new H._BaseAdapter_addEventListener_closure(this, acceptOutsideGlasspane, handler);
      $._BaseAdapter__listeners.$indexSet(0, eventName, loggedHandler);
      C.Window_methods.addEventListener$3(window, eventName, loggedHandler, true);
    },
    addEventListener$2: function($receiver, eventName, handler) {
      return this.addEventListener$3$acceptOutsideGlasspane($receiver, eventName, handler, false);
    }
  };
  H._BaseAdapter_addEventListener_closure.prototype = {
    call$1: function($event) {
      var t1;
      if (!this.acceptOutsideGlasspane && !this.$this.glassPaneElement.contains(J.get$target$x($event)))
        return;
      t1 = H.EngineSemanticsOwner_instance();
      if (C.JSArray_methods.contains$1(C.List_Cg9, $event.type)) {
        t1._getGestureModeClock$0().set$datetime(J.add$1$ax(t1._now.call$0(), C.Duration_500000));
        if (t1._gestureMode !== C.GestureMode_0) {
          t1._gestureMode = C.GestureMode_0;
          t1._notifyGestureModeListeners$0();
        }
      }
      if (t1.semanticsHelper._semanticsEnabler.shouldEnableSemantics$1($event))
        this.handler.call$1($event);
    },
    $signature: 2
  };
  H._WheelEventListenerMixin.prototype = {
    _convertWheelEventToPointerData$1: function($event) {
      var t1, data, t2, t3, t4, t5,
        deltaX = ($event && C.WheelEvent_methods).get$deltaX($event),
        deltaY = C.WheelEvent_methods.get$deltaY($event);
      switch (C.WheelEvent_methods.get$deltaMode($event)) {
        case 1:
          deltaX *= 32;
          deltaY *= 32;
          break;
        case 2:
          t1 = $.$get$window();
          deltaX *= t1.get$physicalSize()._dx;
          deltaY *= t1.get$physicalSize()._dy;
          break;
        case 0:
        default:
          break;
      }
      data = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      t1 = H._BaseAdapter__eventTimeStampToDuration($event.timeStamp);
      t2 = $event.clientX;
      $event.clientY;
      t3 = $.$get$window();
      t4 = t3._debugDevicePixelRatio;
      t4 = t4 != null ? t4 : H.EngineWindow_browserDevicePixelRatio();
      $event.clientX;
      t5 = $event.clientY;
      t3 = t3._debugDevicePixelRatio;
      t3 = t3 != null ? t3 : H.EngineWindow_browserDevicePixelRatio();
      this._pointerDataConverter.convert$14$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$timeStamp(data, $event.buttons, C.PointerChange_3, -1, C.PointerDeviceKind_1, t2 * t4, t5 * t3, 1, 1, 0, deltaX, deltaY, C.PointerSignalKind_1, t1);
      return data;
    },
    _addWheelEventListener$1: function(handler) {
      var t1, eventOptions = {},
        jsHandler = P.allowInterop(new H._WheelEventListenerMixin__addWheelEventListener_closure(handler));
      $._BaseAdapter__nativeListeners.$indexSet(0, "wheel", jsHandler);
      eventOptions.passive = false;
      t1 = this.glassPaneElement;
      t1.addEventListener.apply(t1, ["wheel", jsHandler, eventOptions]);
    }
  };
  H._WheelEventListenerMixin__addWheelEventListener_closure.prototype = {
    call$1: function($event) {
      return this.handler.call$1($event);
    },
    $signature: 18
  };
  H._SanitizedDetails.prototype = {
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + "(change: " + this.change.toString$0(0) + ", buttons: " + this.buttons + ")";
    }
  };
  H._ButtonSanitizer.prototype = {
    sanitizeDownEvent$2$button$buttons: function(button, buttons) {
      var t1;
      if (this._pressedButtons !== 0)
        return this.sanitizeMoveEvent$1$buttons(buttons);
      t1 = (buttons === 0 && button > -1 ? H.convertButtonToButtons(button) : buttons) & 1073741823;
      this._pressedButtons = t1;
      return new H._SanitizedDetails(C.PointerChange_4, t1);
    },
    sanitizeMoveEvent$1$buttons: function(buttons) {
      var newPressedButtons = buttons & 1073741823,
        t1 = this._pressedButtons,
        t2 = t1 === 0;
      if (!t2 && newPressedButtons === 0)
        return new H._SanitizedDetails(C.PointerChange_5, t1);
      if (t2 && newPressedButtons !== 0)
        return new H._SanitizedDetails(C.PointerChange_3, t1);
      this._pressedButtons = newPressedButtons;
      return new H._SanitizedDetails(newPressedButtons === 0 ? C.PointerChange_3 : C.PointerChange_5, newPressedButtons);
    },
    sanitizeUpEvent$0: function() {
      if (this._pressedButtons === 0)
        return null;
      this._pressedButtons = 0;
      return new H._SanitizedDetails(C.PointerChange_6, 0);
    }
  };
  H._PointerAdapter.prototype = {
    _ensureSanitizer$1: function(device) {
      return this._sanitizers.putIfAbsent$2(0, device, new H._PointerAdapter__ensureSanitizer_closure());
    },
    _removePointerIfUnhoverable$1: function($event) {
      if ($event.pointerType === "touch")
        this._sanitizers.remove$1(0, $event.pointerId);
    },
    _addPointerEventListener$3$acceptOutsideGlasspane: function(eventName, handler, acceptOutsideGlasspane) {
      this.addEventListener$3$acceptOutsideGlasspane(0, eventName, new H._PointerAdapter__addPointerEventListener_closure(handler), acceptOutsideGlasspane);
    },
    _addPointerEventListener$2: function(eventName, handler) {
      return this._addPointerEventListener$3$acceptOutsideGlasspane(eventName, handler, false);
    },
    setup$0: function() {
      var _this = this;
      _this._addPointerEventListener$2("pointerdown", new H._PointerAdapter_setup_closure(_this));
      _this._addPointerEventListener$3$acceptOutsideGlasspane("pointermove", new H._PointerAdapter_setup_closure0(_this), true);
      _this._addPointerEventListener$3$acceptOutsideGlasspane("pointerup", new H._PointerAdapter_setup_closure1(_this), true);
      _this._addPointerEventListener$2("pointercancel", new H._PointerAdapter_setup_closure2(_this));
      _this._addWheelEventListener$1(new H._PointerAdapter_setup_closure3(_this));
    },
    _convertEventsToPointerData$3$data$details$event: function(data, details, $event) {
      var timeStamp, t3, t4, t5, t6,
        kind = this._pointerTypeToDeviceKind$1($event.pointerType),
        device = kind === C.PointerDeviceKind_1 ? -1 : $event.pointerId,
        t1 = $event.tiltX,
        t2 = $event.tiltY;
      t1 = Math.abs(t1) > Math.abs(t2) ? t1 : t2;
      timeStamp = H._BaseAdapter__eventTimeStampToDuration($event.timeStamp);
      t2 = details.change;
      t3 = $event.clientX;
      $event.clientY;
      t4 = $.$get$window();
      t5 = t4._debugDevicePixelRatio;
      t5 = t5 != null ? t5 : H.EngineWindow_browserDevicePixelRatio();
      $event.clientX;
      t6 = $event.clientY;
      t4 = t4._debugDevicePixelRatio;
      t4 = t4 != null ? t4 : H.EngineWindow_browserDevicePixelRatio();
      this._pointerDataConverter.convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$signalKind$tilt$timeStamp(data, details.buttons, t2, device, kind, t3 * t5, t6 * t4, $event.pressure, 1, 0, C.PointerSignalKind_0, t1 / 180 * 3.141592653589793, timeStamp);
    },
    _expandEvents$1: function($event) {
      var coalescedEvents;
      if ("getCoalescedEvents" in $event) {
        coalescedEvents = J.cast$1$0$ax($event.getCoalescedEvents(), type$.PointerEvent_2);
        if (!coalescedEvents.get$isEmpty(coalescedEvents))
          return coalescedEvents;
      }
      return H.setRuntimeTypeInfo([$event], type$.JSArray_PointerEvent);
    },
    _pointerTypeToDeviceKind$1: function(pointerType) {
      switch (pointerType) {
        case "mouse":
          return C.PointerDeviceKind_1;
        case "pen":
          return C.PointerDeviceKind_2;
        case "touch":
          return C.PointerDeviceKind_0;
        default:
          return C.PointerDeviceKind_4;
      }
    }
  };
  H._PointerAdapter__ensureSanitizer_closure.prototype = {
    call$0: function() {
      return new H._ButtonSanitizer();
    },
    $signature: 174
  };
  H._PointerAdapter__addPointerEventListener_closure.prototype = {
    call$1: function($event) {
      return this.handler.call$1($event);
    },
    $signature: 18
  };
  H._PointerAdapter_setup_closure.prototype = {
    call$1: function($event) {
      var device = $event.pointerId,
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t1 = this.$this;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, t1._ensureSanitizer$1(device).sanitizeDownEvent$2$button$buttons($event.button, $event.buttons), $event);
      t1._callback.call$1(pointerData);
    }
  };
  H._PointerAdapter_setup_closure0.prototype = {
    call$1: function($event) {
      var t2,
        t1 = this.$this,
        sanitizer = t1._ensureSanitizer$1($event.pointerId),
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        detailsList = J.map$1$1$ax(t1._expandEvents$1($event), new H._PointerAdapter_setup__closure(sanitizer), type$._SanitizedDetails);
      for (t2 = new H.ListIterator(detailsList, detailsList.get$length(detailsList)); t2.moveNext$0();)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, t2.__internal$_current, $event);
      t1._callback.call$1(pointerData);
    }
  };
  H._PointerAdapter_setup__closure.prototype = {
    call$1: function(expandedEvent) {
      return this.sanitizer.sanitizeMoveEvent$1$buttons(expandedEvent.buttons);
    }
  };
  H._PointerAdapter_setup_closure1.prototype = {
    call$1: function($event) {
      var device = $event.pointerId,
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t1 = this.$this,
        details = t1._sanitizers.$index(0, device).sanitizeUpEvent$0();
      t1._removePointerIfUnhoverable$1($event);
      if (details != null)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
      t1._callback.call$1(pointerData);
    }
  };
  H._PointerAdapter_setup_closure2.prototype = {
    call$1: function($event) {
      var device = $event.pointerId,
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t1 = this.$this;
      t1._sanitizers.$index(0, device)._pressedButtons = 0;
      t1._removePointerIfUnhoverable$1($event);
      t1._convertEventsToPointerData$3$data$details$event(pointerData, new H._SanitizedDetails(C.PointerChange_0, 0), $event);
      t1._callback.call$1(pointerData);
    }
  };
  H._PointerAdapter_setup_closure3.prototype = {
    call$1: function($event) {
      var t1 = this.$this,
        t2 = t1._convertWheelEventToPointerData$1($event);
      t1._callback.call$1(t2);
      $event.preventDefault();
    },
    $signature: 2
  };
  H._TouchAdapter.prototype = {
    _addTouchEventListener$2: function(eventName, handler) {
      this.addEventListener$2(0, eventName, new H._TouchAdapter__addTouchEventListener_closure(handler));
    },
    setup$0: function() {
      var _this = this;
      _this._addTouchEventListener$2("touchstart", new H._TouchAdapter_setup_closure(_this));
      _this._addTouchEventListener$2("touchmove", new H._TouchAdapter_setup_closure0(_this));
      _this._addTouchEventListener$2("touchend", new H._TouchAdapter_setup_closure1(_this));
      _this._addTouchEventListener$2("touchcancel", new H._TouchAdapter_setup_closure2(_this));
    },
    _convertEventToPointerData$5$change$data$pressed$timeStamp$touch: function(change, data, pressed, timeStamp, touch) {
      var t3, t4, t5, t6,
        t1 = touch.identifier,
        t2 = C.JSNumber_methods.round$0(touch.clientX);
      C.JSNumber_methods.round$0(touch.clientY);
      t3 = $.$get$window();
      t4 = t3._debugDevicePixelRatio;
      t4 = t4 != null ? t4 : H.EngineWindow_browserDevicePixelRatio();
      C.JSNumber_methods.round$0(touch.clientX);
      t5 = C.JSNumber_methods.round$0(touch.clientY);
      t3 = t3._debugDevicePixelRatio;
      t3 = t3 != null ? t3 : H.EngineWindow_browserDevicePixelRatio();
      t6 = pressed ? 1 : 0;
      this._pointerDataConverter.convert$12$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$signalKind$timeStamp(data, t6, change, t1, C.PointerDeviceKind_0, t2 * t4, t5 * t3, 1, 1, 0, C.PointerSignalKind_0, timeStamp);
    }
  };
  H._TouchAdapter__addTouchEventListener_closure.prototype = {
    call$1: function($event) {
      return this.handler.call$1($event);
    },
    $signature: 18
  };
  H._TouchAdapter_setup_closure.prototype = {
    call$1: function($event) {
      var t1, t2, t3, t4, _i, touch,
        timeStamp = H._BaseAdapter__eventTimeStampToDuration($event.timeStamp),
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      for (t1 = $event.changedTouches, t2 = t1.length, t3 = this.$this, t4 = t3._pressedTouches, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        touch = t1[_i];
        if (!t4.contains$1(0, touch.identifier)) {
          t4.add$1(0, touch.identifier);
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(C.PointerChange_4, pointerData, true, timeStamp, touch);
        }
      }
      t3._callback.call$1(pointerData);
    }
  };
  H._TouchAdapter_setup_closure0.prototype = {
    call$1: function($event) {
      var timeStamp, pointerData, t1, t2, t3, t4, _i, touch;
      $event.preventDefault();
      timeStamp = H._BaseAdapter__eventTimeStampToDuration($event.timeStamp);
      pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      for (t1 = $event.changedTouches, t2 = t1.length, t3 = this.$this, t4 = t3._pressedTouches, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        touch = t1[_i];
        if (t4.contains$1(0, touch.identifier))
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(C.PointerChange_5, pointerData, true, timeStamp, touch);
      }
      t3._callback.call$1(pointerData);
    }
  };
  H._TouchAdapter_setup_closure1.prototype = {
    call$1: function($event) {
      var timeStamp, pointerData, t1, t2, t3, t4, _i, touch;
      $event.preventDefault();
      timeStamp = H._BaseAdapter__eventTimeStampToDuration($event.timeStamp);
      pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      for (t1 = $event.changedTouches, t2 = t1.length, t3 = this.$this, t4 = t3._pressedTouches, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        touch = t1[_i];
        if (t4.contains$1(0, touch.identifier)) {
          t4.remove$1(0, touch.identifier);
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(C.PointerChange_6, pointerData, false, timeStamp, touch);
        }
      }
      t3._callback.call$1(pointerData);
    }
  };
  H._TouchAdapter_setup_closure2.prototype = {
    call$1: function($event) {
      var t1, t2, t3, t4, _i, touch,
        timeStamp = H._BaseAdapter__eventTimeStampToDuration($event.timeStamp),
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      for (t1 = $event.changedTouches, t2 = t1.length, t3 = this.$this, t4 = t3._pressedTouches, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        touch = t1[_i];
        if (t4.contains$1(0, touch.identifier)) {
          t4.remove$1(0, touch.identifier);
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(C.PointerChange_0, pointerData, false, timeStamp, touch);
        }
      }
      t3._callback.call$1(pointerData);
    }
  };
  H._MouseAdapter.prototype = {
    _addMouseEventListener$3$acceptOutsideGlasspane: function(eventName, handler, acceptOutsideGlasspane) {
      this.addEventListener$3$acceptOutsideGlasspane(0, eventName, new H._MouseAdapter__addMouseEventListener_closure(handler), acceptOutsideGlasspane);
    },
    _addMouseEventListener$2: function(eventName, handler) {
      return this._addMouseEventListener$3$acceptOutsideGlasspane(eventName, handler, false);
    },
    setup$0: function() {
      var _this = this;
      _this._addMouseEventListener$2("mousedown", new H._MouseAdapter_setup_closure(_this));
      _this._addMouseEventListener$3$acceptOutsideGlasspane("mousemove", new H._MouseAdapter_setup_closure0(_this), true);
      _this._addMouseEventListener$3$acceptOutsideGlasspane("mouseup", new H._MouseAdapter_setup_closure1(_this), true);
      _this._addWheelEventListener$1(new H._MouseAdapter_setup_closure2(_this));
    },
    _convertEventsToPointerData$3$data$details$event: function(data, details, $event) {
      var t4, t5, t6,
        t1 = details.change,
        t2 = H._BaseAdapter__eventTimeStampToDuration($event.timeStamp),
        t3 = $event.clientX;
      $event.clientY;
      t4 = $.$get$window();
      t5 = t4._debugDevicePixelRatio;
      t5 = t5 != null ? t5 : H.EngineWindow_browserDevicePixelRatio();
      $event.clientX;
      t6 = $event.clientY;
      t4 = t4._debugDevicePixelRatio;
      t4 = t4 != null ? t4 : H.EngineWindow_browserDevicePixelRatio();
      this._pointerDataConverter.convert$12$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$signalKind$timeStamp(data, details.buttons, t1, -1, C.PointerDeviceKind_1, t3 * t5, t6 * t4, 1, 1, 0, C.PointerSignalKind_0, t2);
    }
  };
  H._MouseAdapter__addMouseEventListener_closure.prototype = {
    call$1: function($event) {
      return this.handler.call$1($event);
    },
    $signature: 18
  };
  H._MouseAdapter_setup_closure.prototype = {
    call$1: function($event) {
      var pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t1 = this.$this;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, t1._sanitizer.sanitizeDownEvent$2$button$buttons($event.button, $event.buttons), $event);
      t1._callback.call$1(pointerData);
    }
  };
  H._MouseAdapter_setup_closure0.prototype = {
    call$1: function($event) {
      var pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t1 = this.$this;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, t1._sanitizer.sanitizeMoveEvent$1$buttons($event.buttons), $event);
      t1._callback.call$1(pointerData);
    }
  };
  H._MouseAdapter_setup_closure1.prototype = {
    call$1: function($event) {
      var pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t1 = $event.buttons,
        t2 = this.$this,
        t3 = t2._sanitizer;
      t2._convertEventsToPointerData$3$data$details$event(pointerData, t1 === 0 ? t3.sanitizeUpEvent$0() : t3.sanitizeMoveEvent$1$buttons(t1), $event);
      t2._callback.call$1(pointerData);
    }
  };
  H._MouseAdapter_setup_closure2.prototype = {
    call$1: function($event) {
      var t1 = this.$this,
        t2 = t1._convertWheelEventToPointerData$1($event);
      t1._callback.call$1(t2);
      $event.preventDefault();
    },
    $signature: 2
  };
  H._PointerState.prototype = {};
  H.PointerDataConverter.prototype = {
    _ensureStateForPointer$3: function(device, x, y) {
      return this._pointers.putIfAbsent$2(0, device, new H.PointerDataConverter__ensureStateForPointer_closure(x, y));
    },
    _generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp: function(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp) {
      var t3,
        state = this._pointers.$index(0, device),
        t1 = state.x,
        t2 = state.y;
      state.x = physicalX;
      state.y = physicalY;
      t3 = state._pointer;
      if (t3 == null)
        t3 = 0;
      return P.PointerData$(buttons, change, device, distance, distanceMax, kind, false, orientation, physicalX - t1, physicalY - t2, physicalX, physicalY, platformData, t3, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scrollDeltaX, scrollDeltaY, signalKind, size, false, tilt, timeStamp);
    },
    _locationHasChanged$3: function(device, physicalX, physicalY) {
      var state = this._pointers.$index(0, device);
      return state.x !== physicalX || state.y !== physicalY;
    },
    _synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp: function(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scrollDeltaX, scrollDeltaY, size, tilt, timeStamp) {
      var t3,
        state = this._pointers.$index(0, device),
        t1 = state.x,
        t2 = state.y;
      state.x = physicalX;
      state.y = physicalY;
      t3 = state._pointer;
      if (t3 == null)
        t3 = 0;
      return P.PointerData$(buttons, change, device, distance, distanceMax, kind, false, orientation, physicalX - t1, physicalY - t2, physicalX, physicalY, platformData, t3, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scrollDeltaX, scrollDeltaY, C.PointerSignalKind_0, size, true, tilt, timeStamp);
    },
    convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp: function(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, scrollDeltaX, scrollDeltaY, signalKind, tilt, timeStamp) {
      var alreadyAdded, state, t1, _this = this;
      if (signalKind === C.PointerSignalKind_0)
        switch (change) {
          case C.PointerChange_1:
            _this._ensureStateForPointer$3(device, physicalX, physicalY);
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            break;
          case C.PointerChange_3:
            alreadyAdded = _this._pointers.containsKey$1(0, device);
            _this._ensureStateForPointer$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            break;
          case C.PointerChange_4:
            alreadyAdded = _this._pointers.containsKey$1(0, device);
            state = _this._ensureStateForPointer$3(device, physicalX, physicalY);
            state.toString;
            state._pointer = $._PointerState__pointerCount = $._PointerState__pointerCount + 1;
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(0, C.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            state.down = true;
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            break;
          case C.PointerChange_5:
            _this._pointers.$index(0, device);
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            break;
          case C.PointerChange_6:
          case C.PointerChange_0:
            t1 = _this._pointers;
            state = t1.$index(0, device);
            if (change === C.PointerChange_0) {
              physicalX = state.x;
              physicalY = state.y;
            }
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            state.down = false;
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            if (kind === C.PointerDeviceKind_0) {
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(0, C.PointerChange_2, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
              t1.remove$1(0, device);
            }
            break;
          case C.PointerChange_2:
            t1 = _this._pointers;
            state = t1.$index(0, device);
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, state.x, state.y, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            t1.remove$1(0, device);
            break;
        }
      else
        switch (signalKind) {
          case C.PointerSignalKind_1:
            alreadyAdded = _this._pointers.containsKey$1(0, device);
            state = _this._ensureStateForPointer$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              if (state.down)
                result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
              else
                result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            break;
          case C.PointerSignalKind_0:
            break;
          case C.PointerSignalKind_2:
            break;
        }
    },
    convert$14$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$timeStamp: function(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, scrollDeltaX, scrollDeltaY, signalKind, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, scrollDeltaX, scrollDeltaY, signalKind, 0, timeStamp);
    },
    convert$12$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$signalKind$timeStamp: function(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, signalKind, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, 0, 0, signalKind, 0, timeStamp);
    },
    convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$signalKind$tilt$timeStamp: function(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, signalKind, tilt, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, 0, 0, signalKind, tilt, timeStamp);
    }
  };
  H.PointerDataConverter__ensureStateForPointer_closure.prototype = {
    call$0: function() {
      return new H._PointerState(this.x, this.y);
    },
    $signature: 93
  };
  H.Profiler.prototype = {
    benchmark$2: function($name, value) {
      var onBenchmark = window._flutter_internal_on_benchmark;
      if (onBenchmark != null)
        onBenchmark.call$2($name, value);
    }
  };
  H._RRectRenderer.prototype = {
    render$3$reverse$startNewPath: function(inputRRect, reverse, startNewPath) {
      var t0, trRadiusX, tlRadiusX, trRadiusY, tlRadiusY, blRadiusX, brRadiusX, blRadiusY, brRadiusY, t1, t2, _this = this,
        rrect = inputRRect.scaleRadii$0(),
        left = rrect.left,
        right = rrect.right,
        $top = rrect.top,
        bottom = rrect.bottom;
      if (left > right) {
        t0 = right;
        right = left;
        left = t0;
      }
      if ($top > bottom) {
        t0 = bottom;
        bottom = $top;
        $top = t0;
      }
      trRadiusX = Math.abs(rrect.trRadiusX);
      tlRadiusX = Math.abs(rrect.tlRadiusX);
      trRadiusY = Math.abs(rrect.trRadiusY);
      tlRadiusY = Math.abs(rrect.tlRadiusY);
      blRadiusX = Math.abs(rrect.blRadiusX);
      brRadiusX = Math.abs(rrect.brRadiusX);
      blRadiusY = Math.abs(rrect.blRadiusY);
      brRadiusY = Math.abs(rrect.brRadiusY);
      if (!reverse) {
        if (startNewPath)
          _this.beginPath$0(0);
        _this.moveTo$2(0, left + trRadiusX, $top);
        t1 = right - trRadiusX;
        _this.lineTo$2(0, t1, $top);
        _this.ellipse$8(0, t1, $top + trRadiusY, trRadiusX, trRadiusY, 0, 4.71238898038469, 6.283185307179586, false);
        t1 = bottom - brRadiusY;
        _this.lineTo$2(0, right, t1);
        _this.ellipse$8(0, right - brRadiusX, t1, brRadiusX, brRadiusY, 0, 0, 1.5707963267948966, false);
        t1 = left + blRadiusX;
        _this.lineTo$2(0, t1, bottom);
        _this.ellipse$8(0, t1, bottom - blRadiusY, blRadiusX, blRadiusY, 0, 1.5707963267948966, 3.141592653589793, false);
        t1 = $top + tlRadiusY;
        _this.lineTo$2(0, left, t1);
        _this.ellipse$8(0, left + tlRadiusX, t1, tlRadiusX, tlRadiusY, 0, 3.141592653589793, 4.71238898038469, false);
      } else {
        t1 = right - trRadiusX;
        _this.moveTo$2(0, t1, $top);
        if (startNewPath)
          _this.beginPath$0(0);
        t2 = left + tlRadiusX;
        _this.lineTo$2(0, t2, $top);
        _this.ellipse$8(0, t2, $top + tlRadiusY, tlRadiusX, tlRadiusY, 0, 4.71238898038469, 3.141592653589793, true);
        t2 = bottom - blRadiusY;
        _this.lineTo$2(0, left, t2);
        _this.ellipse$8(0, left + blRadiusX, t2, blRadiusX, blRadiusY, 0, 3.141592653589793, 1.5707963267948966, true);
        t2 = right - brRadiusX;
        _this.lineTo$2(0, t2, bottom);
        _this.ellipse$8(0, t2, bottom - brRadiusY, brRadiusX, brRadiusY, 0, 1.5707963267948966, 0, true);
        t2 = $top + trRadiusY;
        _this.lineTo$2(0, right, t2);
        _this.ellipse$8(0, t1, t2, trRadiusX, trRadiusY, 0, 0, 4.71238898038469, true);
      }
    },
    render$1: function(inputRRect) {
      return this.render$3$reverse$startNewPath(inputRRect, false, true);
    },
    render$2$startNewPath: function(inputRRect, startNewPath) {
      return this.render$3$reverse$startNewPath(inputRRect, false, startNewPath);
    }
  };
  H._RRectToCanvasRenderer.prototype = {
    beginPath$0: function(_) {
      this.context.beginPath();
    },
    moveTo$2: function(_, x, y) {
      this.context.moveTo(x, y);
    },
    lineTo$2: function(_, x, y) {
      this.context.lineTo(x, y);
    },
    ellipse$8: function(_, centerX, centerY, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {
      H.DomRenderer_ellipse(this.context, centerX, centerY, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise);
    }
  };
  H.AccessibilityAnnouncements.prototype = {
    AccessibilityAnnouncements$_$0: function() {
      $._hotRestartListeners.push(new H.AccessibilityAnnouncements$__closure(this));
    },
    get$_domElement: function() {
      var liveRegion,
        t1 = this.__engine$_element;
      if (t1 == null) {
        liveRegion = document.createElement("label");
        liveRegion.setAttribute("id", "accessibility-element");
        t1 = liveRegion.style;
        t1.position = "fixed";
        t1.overflow = "hidden";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), "translate(-99999px, -99999px)", "");
        t1.width = "1px";
        t1.height = "1px";
        this.__engine$_element = liveRegion;
        t1 = liveRegion;
      }
      return t1;
    },
    handleMessage$2: function(codec, data) {
      var _this = this,
        message = J.$index$asx(J.$index$asx(codec.decodeMessage$1(data), "data"), "message");
      if (message != null && message.length !== 0) {
        _this.get$_domElement().setAttribute("aria-live", "polite");
        _this.get$_domElement().textContent = message;
        document.body.appendChild(_this.get$_domElement());
        _this._removeElementTimer = P.Timer_Timer(C.Duration_5000000, new H.AccessibilityAnnouncements_handleMessage_closure(_this));
      }
    }
  };
  H.AccessibilityAnnouncements$__closure.prototype = {
    call$0: function() {
      var t1 = this.$this._removeElementTimer;
      if (t1 != null)
        t1.cancel$0(0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.AccessibilityAnnouncements_handleMessage_closure.prototype = {
    call$0: function() {
      var t1 = this.$this.__engine$_element;
      (t1 && C.LabelElement_methods).remove$0(t1);
    },
    $signature: 0
  };
  H._CheckableKind.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.Checkable.prototype = {
    update$0: function(_) {
      var element, t2, _s4_ = "true",
        t1 = this.semanticsObject;
      if ((t1._dirtyFields & 1) !== 0) {
        switch (this.__engine$_kind) {
          case C._CheckableKind_0:
            t1.setAriaRole$2("checkbox", true);
            break;
          case C._CheckableKind_1:
            t1.setAriaRole$2("radio", true);
            break;
          case C._CheckableKind_2:
            t1.setAriaRole$2("switch", true);
            break;
        }
        if ((t1.__engine$_flags & 128) === 0) {
          element = t1.element;
          element.setAttribute("aria-disabled", _s4_);
          element.setAttribute("disabled", _s4_);
        } else
          this._removeDisabledAttribute$0();
        t2 = t1.__engine$_flags;
        t2 = (t2 & 2) !== 0 || (t2 & 131072) !== 0 ? _s4_ : "false";
        t1.element.setAttribute("aria-checked", t2);
      }
    },
    dispose$0: function() {
      var _this = this;
      switch (_this.__engine$_kind) {
        case C._CheckableKind_0:
          _this.semanticsObject.setAriaRole$2("checkbox", false);
          break;
        case C._CheckableKind_1:
          _this.semanticsObject.setAriaRole$2("radio", false);
          break;
        case C._CheckableKind_2:
          _this.semanticsObject.setAriaRole$2("switch", false);
          break;
      }
      _this._removeDisabledAttribute$0();
    },
    _removeDisabledAttribute$0: function() {
      var element = this.semanticsObject.element;
      element.removeAttribute("aria-disabled");
      element.removeAttribute("disabled");
    }
  };
  H.ImageRoleManager.prototype = {
    update$0: function(_) {
      var t2, t3, _this = this,
        t1 = _this.semanticsObject;
      if (t1.get$isVisualOnly()) {
        t2 = t1.__engine$_childrenInTraversalOrder;
        t2 = t2 != null && !C.NativeInt32List_methods.get$isEmpty(t2);
      } else
        t2 = false;
      if (t2) {
        if (_this._auxiliaryImageElement == null) {
          _this._auxiliaryImageElement = W._ElementFactoryProvider_createElement_tag("flt-semantics-img", null);
          t2 = t1.__engine$_childrenInTraversalOrder;
          if (t2 != null && !C.NativeInt32List_methods.get$isEmpty(t2)) {
            t2 = _this._auxiliaryImageElement.style;
            t2.position = "absolute";
            t2.top = "0";
            t2.left = "0";
            t3 = t1.__engine$_rect;
            t3 = H.S(t3.right - t3.left) + "px";
            t2.width = t3;
            t3 = t1.__engine$_rect;
            t3 = H.S(t3.bottom - t3.top) + "px";
            t2.height = t3;
          }
          t2 = _this._auxiliaryImageElement.style;
          t2.fontSize = "6px";
          t1.element.appendChild(_this._auxiliaryImageElement);
        }
        _this._auxiliaryImageElement.setAttribute("role", "img");
        _this._setLabel$1(_this._auxiliaryImageElement);
      } else if (t1.get$isVisualOnly()) {
        t1.setAriaRole$2("img", true);
        _this._setLabel$1(t1.element);
        _this._cleanUpAuxiliaryElement$0();
      } else {
        _this._cleanUpAuxiliaryElement$0();
        _this._cleanupElement$0();
      }
    },
    _setLabel$1: function(element) {
      var t1 = this.semanticsObject.__engine$_label;
      if (t1 != null && t1.length !== 0)
        element.setAttribute("aria-label", t1);
    },
    _cleanUpAuxiliaryElement$0: function() {
      var t1 = this._auxiliaryImageElement;
      if (t1 != null) {
        J.remove$0$ax(t1);
        this._auxiliaryImageElement = null;
      }
    },
    _cleanupElement$0: function() {
      var t1 = this.semanticsObject;
      t1.setAriaRole$2("img", false);
      t1.element.removeAttribute("aria-label");
    },
    dispose$0: function() {
      this._cleanUpAuxiliaryElement$0();
      this._cleanupElement$0();
    }
  };
  H.Incrementable.prototype = {
    Incrementable$1: function(semanticsObject) {
      var _this = this,
        t1 = _this.__engine$_element;
      semanticsObject.element.appendChild(t1);
      t1.type = "range";
      t1.setAttribute("role", "slider");
      C.InputElement_methods.addEventListener$2(t1, "change", new H.Incrementable_closure(_this, semanticsObject));
      t1 = new H.Incrementable_closure0(_this);
      _this._gestureModeListener = t1;
      semanticsObject.owner._gestureModeListeners.push(t1);
    },
    update$0: function(_) {
      var _this = this;
      switch (_this.semanticsObject.owner._gestureMode) {
        case C.GestureMode_1:
          _this._enableBrowserGestureHandling$0();
          _this._updateInputValues$0();
          break;
        case C.GestureMode_0:
          _this._disableBrowserGestureHandling$0();
          break;
      }
    },
    _enableBrowserGestureHandling$0: function() {
      var t1 = this.__engine$_element;
      if (!t1.disabled)
        return;
      t1.disabled = false;
    },
    _updateInputValues$0: function() {
      var t1, updateNeeded, surrogateTextValue, t2, surrogateMaxTextValue, surrogateMinTextValue, _this = this;
      if (!_this._pendingResync) {
        t1 = _this.semanticsObject._dirtyFields;
        updateNeeded = (t1 & 4096) !== 0 || (t1 & 8192) !== 0 || (t1 & 16384) !== 0;
      } else
        updateNeeded = true;
      if (!updateNeeded)
        return;
      _this._pendingResync = false;
      surrogateTextValue = "" + _this._currentSurrogateValue;
      t1 = _this.__engine$_element;
      t1.value = surrogateTextValue;
      t1.setAttribute("aria-valuenow", surrogateTextValue);
      t2 = _this.semanticsObject;
      t1.setAttribute("aria-valuetext", t2.__engine$_value);
      surrogateMaxTextValue = t2.__engine$_increasedValue != null ? "" + (_this._currentSurrogateValue + 1) : surrogateTextValue;
      t1.max = surrogateMaxTextValue;
      t1.setAttribute("aria-valuemax", surrogateMaxTextValue);
      surrogateMinTextValue = t2.__engine$_decreasedValue != null ? "" + (_this._currentSurrogateValue - 1) : surrogateTextValue;
      t1.min = surrogateMinTextValue;
      t1.setAttribute("aria-valuemin", surrogateMinTextValue);
    },
    _disableBrowserGestureHandling$0: function() {
      var t1 = this.__engine$_element;
      if (t1.disabled)
        return;
      t1.disabled = true;
    },
    dispose$0: function() {
      var t1, _this = this;
      C.JSArray_methods.remove$1(_this.semanticsObject.owner._gestureModeListeners, _this._gestureModeListener);
      _this._gestureModeListener = null;
      _this._disableBrowserGestureHandling$0();
      t1 = _this.__engine$_element;
      (t1 && C.InputElement_methods).remove$0(t1);
    }
  };
  H.Incrementable_closure.prototype = {
    call$1: function(_) {
      var newInputValue, _null = null,
        t1 = this.$this,
        t2 = t1.__engine$_element;
      if (t2.disabled)
        return;
      t1._pendingResync = true;
      newInputValue = P.int_parse(t2.value, _null, _null);
      t2 = t1._currentSurrogateValue;
      if (newInputValue > t2) {
        t1._currentSurrogateValue = t2 + 1;
        t1 = $.$get$window();
        H._invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, this.semanticsObject.id, C.SemanticsAction_64, _null);
      } else if (newInputValue < t2) {
        t1._currentSurrogateValue = t2 - 1;
        t1 = $.$get$window();
        H._invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, this.semanticsObject.id, C.SemanticsAction_128, _null);
      }
    },
    $signature: 2
  };
  H.Incrementable_closure0.prototype = {
    call$1: function(mode) {
      this.$this.update$0(0);
    },
    $signature: 41
  };
  H.LabelAndValue.prototype = {
    update$0: function(_) {
      var hasLabel, t3, shouldDisplayValue, t4, t5, _this = this,
        t1 = _this.semanticsObject,
        t2 = t1.__engine$_value,
        hasValue = t2 != null && t2.length !== 0;
      t2 = t1.__engine$_label;
      hasLabel = t2 != null && t2.length !== 0;
      if (hasValue) {
        t3 = t1.__engine$_actions;
        shouldDisplayValue = !((t3 & 64) !== 0 || (t3 & 128) !== 0) && (t1.__engine$_flags & 16) === 0;
      } else
        shouldDisplayValue = false;
      if (!hasLabel && !shouldDisplayValue) {
        _this._cleanUpDom$0();
        return;
      }
      if (hasLabel) {
        t2 = H.S(t2);
        if (shouldDisplayValue)
          t2 += " ";
      } else
        t2 = "";
      if (shouldDisplayValue)
        t2 += H.S(t1.__engine$_value);
      t3 = t1.element;
      t2 = t2.charCodeAt(0) == 0 ? t2 : t2;
      t3.setAttribute("aria-label", t2);
      if ((t1.__engine$_flags & 512) !== 0)
        t1.setAriaRole$2("heading", true);
      if (_this._auxiliaryValueElement == null) {
        _this._auxiliaryValueElement = W._ElementFactoryProvider_createElement_tag("flt-semantics-value", null);
        t4 = t1.__engine$_childrenInTraversalOrder;
        if (t4 != null && !C.NativeInt32List_methods.get$isEmpty(t4)) {
          t4 = _this._auxiliaryValueElement.style;
          t4.position = "absolute";
          t4.top = "0";
          t4.left = "0";
          t5 = t1.__engine$_rect;
          t5 = H.S(t5.right - t5.left) + "px";
          t4.width = t5;
          t1 = t1.__engine$_rect;
          t1 = H.S(t1.bottom - t1.top) + "px";
          t4.height = t1;
        }
        t1 = _this._auxiliaryValueElement.style;
        t1.fontSize = "6px";
        t3.appendChild(_this._auxiliaryValueElement);
      }
      _this._auxiliaryValueElement.textContent = t2;
    },
    _cleanUpDom$0: function() {
      var t1 = this._auxiliaryValueElement;
      if (t1 != null) {
        J.remove$0$ax(t1);
        this._auxiliaryValueElement = null;
      }
      t1 = this.semanticsObject;
      t1.element.removeAttribute("aria-label");
      t1.setAriaRole$2("heading", false);
    },
    dispose$0: function() {
      this._cleanUpDom$0();
    }
  };
  H.LiveRegion.prototype = {
    update$0: function(_) {
      var t1 = this.semanticsObject,
        t2 = t1.__engine$_label;
      t2 = t2 != null && t2.length !== 0;
      t1 = t1.element;
      if (t2)
        t1.setAttribute("aria-live", "polite");
      else
        t1.removeAttribute("aria-live");
    },
    dispose$0: function() {
      this.semanticsObject.element.removeAttribute("aria-live");
    }
  };
  H.Scrollable0.prototype = {
    _recomputeScrollPosition$0: function() {
      var t1, t2, t3, semanticsId, _this = this, _null = null;
      if (_this.get$_domScrollPosition() !== _this._effectiveNeutralScrollPosition) {
        t1 = _this.semanticsObject;
        if (!t1.owner.shouldAcceptBrowserGesture$1("scroll"))
          return;
        t2 = _this.get$_domScrollPosition();
        t3 = _this._effectiveNeutralScrollPosition;
        _this._neutralizeDomScrollPosition$0();
        t1.recomputePositionAndSize$0();
        semanticsId = t1.id;
        if (t2 > t3) {
          t1 = t1.__engine$_actions;
          if ((t1 & 32) !== 0 || (t1 & 16) !== 0) {
            t1 = $.$get$window();
            H._invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, semanticsId, C.SemanticsAction_16, _null);
          } else {
            t1 = $.$get$window();
            H._invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, semanticsId, C.SemanticsAction_4, _null);
          }
        } else {
          t1 = t1.__engine$_actions;
          if ((t1 & 32) !== 0 || (t1 & 16) !== 0) {
            t1 = $.$get$window();
            H._invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, semanticsId, C.SemanticsAction_32, _null);
          } else {
            t1 = $.$get$window();
            H._invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, semanticsId, C.SemanticsAction_8, _null);
          }
        }
      }
    },
    update$0: function(_) {
      var t1, t2, t3, _this = this;
      if (_this._scrollListener == null) {
        t1 = _this.semanticsObject;
        t2 = t1.element;
        t3 = t2.style;
        t3.toString;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, "touch-action"), "none", "");
        _this._gestureModeDidChange$0();
        t1 = t1.owner;
        t1._oneTimePostUpdateCallbacks.push(new H.Scrollable_update_closure(_this));
        t3 = new H.Scrollable_update_closure0(_this);
        _this._gestureModeListener = t3;
        t1._gestureModeListeners.push(t3);
        t3 = new H.Scrollable_update_closure1(_this);
        _this._scrollListener = t3;
        J.addEventListener$2$x(t2, "scroll", t3);
      }
    },
    get$_domScrollPosition: function() {
      var t1 = this.semanticsObject,
        t2 = t1.__engine$_actions;
      t2 = (t2 & 32) !== 0 || (t2 & 16) !== 0;
      t1 = t1.element;
      if (t2)
        return C.JSNumber_methods.round$0(t1.scrollTop);
      else
        return C.JSNumber_methods.round$0(t1.scrollLeft);
    },
    _neutralizeDomScrollPosition$0: function() {
      var t1 = this.semanticsObject,
        element = t1.element,
        t2 = t1.__engine$_actions;
      if ((t2 & 32) !== 0 || (t2 & 16) !== 0) {
        element.scrollTop = 10;
        t1.verticalContainerAdjustment = this._effectiveNeutralScrollPosition = C.JSNumber_methods.round$0(element.scrollTop);
        t1.horizontalContainerAdjustment = 0;
      } else {
        element.scrollLeft = 10;
        t2 = C.JSNumber_methods.round$0(element.scrollLeft);
        this._effectiveNeutralScrollPosition = t2;
        t1.verticalContainerAdjustment = 0;
        t1.horizontalContainerAdjustment = t2;
      }
    },
    _gestureModeDidChange$0: function() {
      var _s10_ = "overflow-y",
        _s10_0 = "overflow-x",
        t1 = this.semanticsObject,
        element = t1.element;
      switch (t1.owner._gestureMode) {
        case C.GestureMode_1:
          t1 = t1.__engine$_actions;
          if ((t1 & 32) !== 0 || (t1 & 16) !== 0) {
            t1 = element.style;
            t1.toString;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_), "scroll", "");
          } else {
            t1 = element.style;
            t1.toString;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_0), "scroll", "");
          }
          break;
        case C.GestureMode_0:
          t1 = t1.__engine$_actions;
          if ((t1 & 32) !== 0 || (t1 & 16) !== 0) {
            t1 = element.style;
            t1.toString;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_), "hidden", "");
          } else {
            t1 = element.style;
            t1.toString;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_0), "hidden", "");
          }
          break;
      }
    },
    dispose$0: function() {
      var t3, _this = this,
        t1 = _this.semanticsObject,
        t2 = t1.element,
        style = t2.style;
      style.removeProperty("overflowY");
      style.removeProperty("overflowX");
      style.removeProperty("touch-action");
      t3 = _this._scrollListener;
      if (t3 != null)
        J.removeEventListener$2$x(t2, "scroll", t3);
      C.JSArray_methods.remove$1(t1.owner._gestureModeListeners, _this._gestureModeListener);
      _this._gestureModeListener = null;
    }
  };
  H.Scrollable_update_closure.prototype = {
    call$0: function() {
      this.$this._neutralizeDomScrollPosition$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.Scrollable_update_closure0.prototype = {
    call$1: function(_) {
      this.$this._gestureModeDidChange$0();
    },
    $signature: 41
  };
  H.Scrollable_update_closure1.prototype = {
    call$1: function(_) {
      this.$this._recomputeScrollPosition$0();
    },
    $signature: 2
  };
  H.SemanticsUpdate.prototype = {};
  H.SemanticsNodeUpdate.prototype = {};
  H.Role.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.closure13.prototype = {
    call$1: function(object) {
      return H.Incrementable$(object);
    },
    $signature: 92
  };
  H.closure14.prototype = {
    call$1: function(object) {
      return new H.Scrollable0(object);
    },
    $signature: 90
  };
  H.closure15.prototype = {
    call$1: function(object) {
      return new H.LabelAndValue(object);
    },
    $signature: 71
  };
  H.closure16.prototype = {
    call$1: function(object) {
      return new H.Tappable(object);
    },
    $signature: 72
  };
  H.closure17.prototype = {
    call$1: function(object) {
      var t3, t4,
        t1 = new H.TextField(object),
        editableDomElement = (object.__engine$_flags & 524288) !== 0 ? document.createElement("textarea") : W.InputElement_InputElement(),
        t2 = new H.SemanticsTextEditingStrategy($.$get$textEditing(), H.setRuntimeTypeInfo([], type$.JSArray_StreamSubscription_Event));
      t2.domElement = editableDomElement;
      t1.textEditingElement = t2;
      t3 = t2.domElement;
      t3.spellcheck = false;
      t3.setAttribute("autocorrect", "off");
      t3.setAttribute("autocomplete", "off");
      t3.setAttribute("data-semantics-role", "text-field");
      t3 = t2.domElement.style;
      t3.position = "absolute";
      t3.top = "0";
      t3.left = "0";
      t4 = object.__engine$_rect;
      t4 = H.S(t4.right - t4.left) + "px";
      t3.width = t4;
      t4 = object.__engine$_rect;
      t4 = H.S(t4.bottom - t4.top) + "px";
      t3.height = t4;
      object.element.appendChild(t2.domElement);
      switch (H.browserEngine()) {
        case C.BrowserEngine_0:
        case C.BrowserEngine_3:
        case C.BrowserEngine_4:
        case C.BrowserEngine_2:
        case C.BrowserEngine_4:
        case C.BrowserEngine_5:
          t1._initializeForBlink$0();
          break;
        case C.BrowserEngine_1:
          t1._initializeForWebkit$0();
          break;
      }
      return t1;
    },
    $signature: 75
  };
  H.closure18.prototype = {
    call$1: function(object) {
      var t1 = new H.Checkable(object),
        t2 = object.__engine$_flags;
      if ((t2 & 256) !== 0)
        t1.__engine$_kind = C._CheckableKind_1;
      else if ((t2 & 65536) !== 0)
        t1.__engine$_kind = C._CheckableKind_2;
      else
        t1.__engine$_kind = C._CheckableKind_0;
      return t1;
    },
    $signature: 76
  };
  H.closure19.prototype = {
    call$1: function(object) {
      return new H.ImageRoleManager(object);
    },
    $signature: 77
  };
  H.closure20.prototype = {
    call$1: function(object) {
      return new H.LiveRegion(object);
    },
    $signature: 83
  };
  H.RoleManager.prototype = {};
  H.SemanticsObject.prototype = {
    getOrCreateChildContainer$0: function() {
      var t1, _this = this;
      if (_this._childContainerElement == null) {
        t1 = W._ElementFactoryProvider_createElement_tag("flt-semantics-container", null);
        _this._childContainerElement = t1;
        t1 = t1.style;
        t1.position = "absolute";
        _this.element.appendChild(_this._childContainerElement);
      }
      return _this._childContainerElement;
    },
    get$isVisualOnly: function() {
      var t1 = this.__engine$_flags;
      return (t1 & 16384) !== 0 && (this.__engine$_actions & 1) === 0 && (t1 & 8) === 0;
    },
    setAriaRole$2: function(ariaRoleName, condition) {
      var t1;
      if (condition)
        this.element.setAttribute("role", ariaRoleName);
      else {
        t1 = this.element;
        if (t1.getAttribute("role") === ariaRoleName)
          t1.removeAttribute("role");
      }
    },
    _updateRole$2: function(role, enabled) {
      var t1 = this._roleManagers,
        manager = t1.$index(0, role);
      if (enabled) {
        if (manager == null) {
          manager = $.$get$_roleFactories().$index(0, role).call$1(this);
          t1.$indexSet(0, role, manager);
        }
        manager.update$0(0);
      } else if (manager != null) {
        manager.dispose$0();
        t1.remove$1(0, role);
      }
    },
    recomputePositionAndSize$0: function() {
      var containerElement, hasZeroRectOffset, hasIdentityTransform, left, $top, effectiveTransform, effectiveTransformIsIdentity, t4, t5, _this = this,
        _s16_ = "transform-origin",
        _s9_ = "transform",
        t1 = _this.element,
        t2 = t1.style,
        t3 = _this.__engine$_rect;
      t3 = H.S(t3.right - t3.left) + "px";
      t2.width = t3;
      t3 = _this.__engine$_rect;
      t3 = H.S(t3.bottom - t3.top) + "px";
      t2.height = t3;
      t2 = _this.__engine$_childrenInTraversalOrder;
      containerElement = t2 != null && !C.NativeInt32List_methods.get$isEmpty(t2) ? _this.getOrCreateChildContainer$0() : null;
      t2 = _this.__engine$_rect;
      hasZeroRectOffset = t2.top === 0 && t2.left === 0;
      t2 = _this.__engine$_transform;
      hasIdentityTransform = t2 == null || H.transformKindOf(t2) === C.TransformKind_0;
      if (hasZeroRectOffset && hasIdentityTransform && _this.verticalContainerAdjustment === 0 && _this.horizontalContainerAdjustment === 0) {
        t1 = t1.style;
        t1.removeProperty(_s16_);
        t1.removeProperty(_s9_);
        if (containerElement != null) {
          t1 = containerElement.style;
          t1.removeProperty(_s16_);
          t1.removeProperty(_s9_);
        }
        return;
      }
      if (!hasZeroRectOffset) {
        t2 = _this.__engine$_transform;
        if (t2 == null) {
          t2 = _this.__engine$_rect;
          left = t2.left;
          $top = t2.top;
          effectiveTransform = H.Matrix4_Matrix4$translationValues0(left, $top, 0);
          effectiveTransformIsIdentity = left === 0 && $top === 0;
        } else {
          effectiveTransform = new H.Matrix40(new Float32Array(16));
          effectiveTransform.setFrom$1(new H.Matrix40(t2));
          t2 = _this.__engine$_rect;
          effectiveTransform.translate$3(0, t2.left, t2.top, 0);
          effectiveTransformIsIdentity = effectiveTransform.isIdentity$0(0);
        }
      } else if (!hasIdentityTransform) {
        effectiveTransform = new H.Matrix40(_this.__engine$_transform);
        effectiveTransformIsIdentity = false;
      } else {
        effectiveTransform = null;
        effectiveTransformIsIdentity = true;
      }
      if (!effectiveTransformIsIdentity) {
        t1 = t1.style;
        t1.toString;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s16_), "0 0 0", "");
        t2 = H.float64ListToCssTransform(effectiveTransform.__engine$_m4storage);
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s9_), t2, "");
      } else {
        t1 = t1.style;
        t1.removeProperty(_s16_);
        t1.removeProperty(_s9_);
      }
      if (containerElement != null)
        if (!hasZeroRectOffset || _this.verticalContainerAdjustment !== 0 || _this.horizontalContainerAdjustment !== 0) {
          t1 = _this.__engine$_rect;
          t2 = t1.left;
          t3 = _this.horizontalContainerAdjustment;
          t1 = t1.top;
          t4 = _this.verticalContainerAdjustment;
          t5 = containerElement.style;
          t5.toString;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t5, C.CssStyleDeclaration_methods._browserPropertyName$1(t5, _s16_), "0 0 0", "");
          t4 = "translate(" + H.S(-t2 + t3) + "px, " + H.S(-t1 + t4) + "px)";
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t5, C.CssStyleDeclaration_methods._browserPropertyName$1(t5, _s9_), t4, "");
        } else {
          t1 = containerElement.style;
          t1.removeProperty(_s16_);
          t1.removeProperty(_s9_);
        }
    },
    _updateChildrenInTraversalOrder$0: function() {
      var t2, len, i, object, containerElement, t3, t4, _i, id, intersectionIndicesNew, intersectionIndicesOld, minLength, newIndex, oldIndex, longestSequence, stationaryIds, refNode, childId, _this = this,
        t1 = _this.__engine$_childrenInTraversalOrder;
      if (t1 == null || t1.length === 0) {
        t2 = _this._previousChildrenInTraversalOrder;
        if (t2 == null || t2.length === 0) {
          _this._previousChildrenInTraversalOrder = t1;
          return;
        }
        len = t2.length;
        for (t1 = _this.owner, t2 = t1._semanticsTree, i = 0; i < len; ++i) {
          object = t2.$index(0, _this._previousChildrenInTraversalOrder[i]);
          t1._detachments.push(object);
        }
        _this._previousChildrenInTraversalOrder = null;
        J.remove$0$ax(_this._childContainerElement);
        _this._childContainerElement = null;
        _this._previousChildrenInTraversalOrder = _this.__engine$_childrenInTraversalOrder;
        return;
      }
      containerElement = _this.getOrCreateChildContainer$0();
      t1 = _this._previousChildrenInTraversalOrder;
      if (t1 == null || t1.length === 0) {
        t1 = _this._previousChildrenInTraversalOrder = _this.__engine$_childrenInTraversalOrder;
        for (t2 = t1.length, t3 = _this.owner, t4 = t3._semanticsTree, _i = 0; _i < t2; ++_i) {
          id = t1[_i];
          object = t4.$index(0, id);
          if (object == null) {
            object = H.SemanticsObject$(id, t3);
            t4.$indexSet(0, id, object);
          }
          containerElement.appendChild(object.element);
          object.__engine$_parent = _this;
          t3._attachments.$indexSet(0, object.id, _this);
        }
        _this._previousChildrenInTraversalOrder = _this.__engine$_childrenInTraversalOrder;
        return;
      }
      t1 = type$.JSArray_int;
      intersectionIndicesNew = H.setRuntimeTypeInfo([], t1);
      intersectionIndicesOld = H.setRuntimeTypeInfo([], t1);
      minLength = Math.min(_this._previousChildrenInTraversalOrder.length, _this.__engine$_childrenInTraversalOrder.length);
      newIndex = 0;
      while (true) {
        if (!(newIndex < minLength && _this._previousChildrenInTraversalOrder[newIndex] === _this.__engine$_childrenInTraversalOrder[newIndex]))
          break;
        intersectionIndicesNew.push(newIndex);
        intersectionIndicesOld.push(newIndex);
        ++newIndex;
      }
      t2 = _this._previousChildrenInTraversalOrder.length;
      t3 = _this.__engine$_childrenInTraversalOrder.length;
      if (t2 === t3 && newIndex === t3)
        return;
      for (; t2 = _this.__engine$_childrenInTraversalOrder, newIndex < t2.length;) {
        for (t3 = _this._previousChildrenInTraversalOrder, t4 = t3.length, oldIndex = 0; oldIndex < t4; ++oldIndex)
          if (t3[oldIndex] === t2[newIndex]) {
            intersectionIndicesNew.push(newIndex);
            intersectionIndicesOld.push(oldIndex);
            break;
          }
        ++newIndex;
      }
      longestSequence = H.longestIncreasingSubsequence(intersectionIndicesOld);
      stationaryIds = H.setRuntimeTypeInfo([], t1);
      for (t1 = longestSequence.length, i = 0; i < t1; ++i)
        stationaryIds.push(_this._previousChildrenInTraversalOrder[intersectionIndicesOld[longestSequence[i]]]);
      for (t1 = _this.owner, t2 = t1._semanticsTree, i = 0; i < _this._previousChildrenInTraversalOrder.length; ++i)
        if (!C.JSArray_methods.contains$1(intersectionIndicesOld, i)) {
          object = t2.$index(0, _this._previousChildrenInTraversalOrder[i]);
          t1._detachments.push(object);
        }
      for (i = _this.__engine$_childrenInTraversalOrder.length - 1, refNode = null; i >= 0; --i) {
        childId = _this.__engine$_childrenInTraversalOrder[i];
        object = t2.$index(0, childId);
        if (object == null) {
          object = H.SemanticsObject$(childId, t1);
          t2.$indexSet(0, childId, object);
        }
        if (!C.JSArray_methods.contains$1(stationaryIds, childId)) {
          t3 = object.element;
          if (refNode == null)
            containerElement.appendChild(t3);
          else
            containerElement.insertBefore(t3, refNode);
          object.__engine$_parent = _this;
          t1._attachments.$indexSet(0, object.id, _this);
        }
        refNode = object.element;
      }
      _this._previousChildrenInTraversalOrder = _this.__engine$_childrenInTraversalOrder;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.AccessibilityMode.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.GestureMode.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.EngineSemanticsOwner.prototype = {
    EngineSemanticsOwner$_$0: function() {
      $._hotRestartListeners.push(new H.EngineSemanticsOwner$__closure(this));
    },
    _finalizeTree$0: function() {
      var t1, t2, t3, _i, object, t4, t5, _this = this;
      for (t1 = _this._detachments, t2 = t1.length, t3 = _this._semanticsTree, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        object = t1[_i];
        t4 = _this._attachments;
        t5 = object.id;
        if (t4.$index(0, t5) == null) {
          t3.remove$1(0, t5);
          object.__engine$_parent = null;
          t4 = object.element;
          t5 = t4.parentNode;
          if (t5 != null)
            t5.removeChild(t4);
        }
      }
      _this._detachments = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsObject);
      _this._attachments = P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.SemanticsObject);
      t1 = _this._oneTimePostUpdateCallbacks;
      t2 = t1.length;
      if (t2 !== 0) {
        for (_i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].call$0();
        _this._oneTimePostUpdateCallbacks = H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function);
      }
    },
    set$semanticsEnabled: function(value) {
      var t1, t2;
      if (this._semanticsEnabled)
        return;
      this._semanticsEnabled = true;
      t1 = $.$get$window();
      t2 = t1._onSemanticsEnabledChanged;
      if (t2 != null)
        H._invoke(t2, t1._onSemanticsEnabledChangedZone);
    },
    _getGestureModeClock$0: function() {
      var _this = this,
        t1 = _this._gestureModeClock;
      if (t1 == null) {
        t1 = _this._gestureModeClock = new H.AlarmClock(_this._now);
        t1.callback = new H.EngineSemanticsOwner__getGestureModeClock_closure(_this);
      }
      return t1;
    },
    _notifyGestureModeListeners$0: function() {
      var t1, i;
      for (t1 = this._gestureModeListeners, i = 0; i < t1.length; ++i)
        t1[i].call$1(this._gestureMode);
    },
    shouldAcceptBrowserGesture$1: function(eventType) {
      if (C.JSArray_methods.contains$1(C.List_click_scroll, eventType))
        return this._gestureMode === C.GestureMode_1;
      return false;
    },
    updateSemantics$1: function(uiUpdate) {
      var t1, t2, t3, _i, nodeUpdate, t4, object, t5, t6, _this = this;
      if (!_this._semanticsEnabled)
        return;
      for (t1 = uiUpdate.__engine$_nodeUpdates, t2 = t1.length, t3 = _this._semanticsTree, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        nodeUpdate = t1[_i];
        t4 = nodeUpdate.id;
        object = t3.$index(0, t4);
        if (object == null) {
          object = H.SemanticsObject$(t4, _this);
          t3.$indexSet(0, t4, object);
        }
        t4 = nodeUpdate.flags;
        if (object.__engine$_flags !== t4) {
          object.__engine$_flags = t4;
          object._dirtyFields = (object._dirtyFields | 1) >>> 0;
        }
        t4 = nodeUpdate.value;
        if (object.__engine$_value != t4) {
          object.__engine$_value = t4;
          object._dirtyFields = (object._dirtyFields | 4096) >>> 0;
        }
        t4 = nodeUpdate.label;
        if (object.__engine$_label != t4) {
          object.__engine$_label = t4;
          object._dirtyFields = (object._dirtyFields | 1024) >>> 0;
        }
        t4 = nodeUpdate.rect;
        if (!J.$eq$(object.__engine$_rect, t4)) {
          object.__engine$_rect = t4;
          object._dirtyFields = (object._dirtyFields | 512) >>> 0;
        }
        t4 = nodeUpdate.transform;
        if (object.__engine$_transform !== t4) {
          object.__engine$_transform = t4;
          object._dirtyFields = (object._dirtyFields | 65536) >>> 0;
        }
        t4 = nodeUpdate.scrollPosition;
        if (object.__engine$_scrollPosition !== t4) {
          object.__engine$_scrollPosition = t4;
          object._dirtyFields = (object._dirtyFields | 64) >>> 0;
        }
        t4 = object.__engine$_actions;
        t5 = nodeUpdate.actions;
        if (t4 !== t5) {
          object.__engine$_actions = t5;
          object._dirtyFields = (object._dirtyFields | 2) >>> 0;
          t4 = t5;
        }
        t5 = nodeUpdate.textSelectionBase;
        if (object._textSelectionBase !== t5) {
          object._textSelectionBase = t5;
          object._dirtyFields = (object._dirtyFields | 4) >>> 0;
        }
        t5 = nodeUpdate.textSelectionExtent;
        if (object._textSelectionExtent !== t5) {
          object._textSelectionExtent = t5;
          object._dirtyFields = (object._dirtyFields | 8) >>> 0;
        }
        t5 = nodeUpdate.scrollChildren;
        if (object._scrollChildren !== t5) {
          object._scrollChildren = t5;
          object._dirtyFields = (object._dirtyFields | 16) >>> 0;
        }
        t5 = nodeUpdate.scrollIndex;
        if (object.__engine$_scrollIndex !== t5) {
          object.__engine$_scrollIndex = t5;
          object._dirtyFields = (object._dirtyFields | 32) >>> 0;
        }
        t5 = nodeUpdate.scrollExtentMax;
        if (object.__engine$_scrollExtentMax !== t5) {
          object.__engine$_scrollExtentMax = t5;
          object._dirtyFields = (object._dirtyFields | 128) >>> 0;
        }
        t5 = nodeUpdate.scrollExtentMin;
        if (object.__engine$_scrollExtentMin !== t5) {
          object.__engine$_scrollExtentMin = t5;
          object._dirtyFields = (object._dirtyFields | 256) >>> 0;
        }
        t5 = nodeUpdate.hint;
        if (object.__engine$_hint != t5) {
          object.__engine$_hint = t5;
          object._dirtyFields = (object._dirtyFields | 2048) >>> 0;
        }
        t5 = nodeUpdate.increasedValue;
        if (object.__engine$_increasedValue != t5) {
          object.__engine$_increasedValue = t5;
          object._dirtyFields = (object._dirtyFields | 8192) >>> 0;
        }
        t5 = nodeUpdate.decreasedValue;
        if (object.__engine$_decreasedValue != t5) {
          object.__engine$_decreasedValue = t5;
          object._dirtyFields = (object._dirtyFields | 16384) >>> 0;
        }
        t5 = nodeUpdate.textDirection;
        if (object._textDirection != t5) {
          object._textDirection = t5;
          object._dirtyFields = (object._dirtyFields | 32768) >>> 0;
        }
        t5 = object._childrenInHitTestOrder;
        t6 = nodeUpdate.childrenInHitTestOrder;
        if (t5 == null ? t6 != null : t5 !== t6) {
          object._childrenInHitTestOrder = t6;
          object._dirtyFields = (object._dirtyFields | 1048576) >>> 0;
        }
        t5 = object.__engine$_childrenInTraversalOrder;
        t6 = nodeUpdate.childrenInTraversalOrder;
        if (t5 == null ? t6 != null : t5 !== t6) {
          object.__engine$_childrenInTraversalOrder = t6;
          object._dirtyFields = (object._dirtyFields | 524288) >>> 0;
        }
        t5 = object._additionalActions;
        t6 = nodeUpdate.additionalActions;
        if (t5 == null ? t6 != null : t5 !== t6) {
          object._additionalActions = t6;
          object._dirtyFields = (object._dirtyFields | 2097152) >>> 0;
        }
        t5 = object.__engine$_label;
        if (!(t5 != null && t5.length !== 0)) {
          t5 = object.__engine$_value;
          t5 = t5 != null && t5.length !== 0;
        } else
          t5 = true;
        if (t5) {
          t5 = object.__engine$_flags;
          t4 = !((t5 & 16384) !== 0 && (t4 & 1) === 0 && (t5 & 8) === 0);
        } else
          t4 = false;
        object._updateRole$2(C.Role_2, t4);
        object._updateRole$2(C.Role_4, (object.__engine$_flags & 16) !== 0);
        object._updateRole$2(C.Role_3, (object.__engine$_actions & 1) !== 0 || (object.__engine$_flags & 8) !== 0);
        t4 = object.__engine$_actions;
        object._updateRole$2(C.Role_0, (t4 & 64) !== 0 || (t4 & 128) !== 0);
        t4 = object.__engine$_actions;
        object._updateRole$2(C.Role_1, (t4 & 32) !== 0 || (t4 & 16) !== 0 || (t4 & 4) !== 0 || (t4 & 8) !== 0);
        t4 = object.__engine$_flags;
        object._updateRole$2(C.Role_5, (t4 & 1) !== 0 || (t4 & 65536) !== 0);
        t4 = object.__engine$_flags;
        object._updateRole$2(C.Role_6, (t4 & 16384) !== 0 && (object.__engine$_actions & 1) === 0 && (t4 & 8) === 0);
        t4 = object.__engine$_flags;
        object._updateRole$2(C.Role_7, (t4 & 32768) !== 0 && (t4 & 8192) === 0);
        object._updateChildrenInTraversalOrder$0();
        t4 = object._dirtyFields;
        if ((t4 & 512) !== 0 || (t4 & 65536) !== 0 || (t4 & 64) !== 0)
          object.recomputePositionAndSize$0();
        object._dirtyFields = 0;
      }
      if (_this._rootSemanticsElement == null) {
        t1 = t3.$index(0, 0).element;
        _this._rootSemanticsElement = t1;
        t2 = $.$get$domRenderer();
        t2._glassPaneElement.insertBefore(t1, t2._sceneHostElement);
      }
      _this._finalizeTree$0();
    }
  };
  H.EngineSemanticsOwner$__closure.prototype = {
    call$0: function() {
      var t1 = this.$this._rootSemanticsElement;
      if (t1 != null)
        J.remove$0$ax(t1);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.EngineSemanticsOwner_closure.prototype = {
    call$0: function() {
      return new P.DateTime(Date.now(), false);
    },
    $signature: 189
  };
  H.EngineSemanticsOwner__getGestureModeClock_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1._gestureMode === C.GestureMode_1)
        return;
      t1._gestureMode = C.GestureMode_1;
      t1._notifyGestureModeListeners$0();
    },
    $signature: 0
  };
  H.SemanticsHelper.prototype = {};
  H.SemanticsEnabler.prototype = {
    shouldEnableSemantics$1: function($event) {
      if (!this.get$isWaitingToEnableSemantics())
        return true;
      else
        return this.tryEnableSemantics$1($event);
    }
  };
  H.DesktopSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics: function() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1: function($event) {
      var t1, t2, _this = this;
      if (_this._schedulePlaceholderRemoval) {
        J.remove$0$ax(_this._semanticsPlaceholder);
        _this.semanticsActivationTimer = _this._semanticsPlaceholder = null;
        return true;
      }
      if (H.EngineSemanticsOwner_instance()._semanticsEnabled)
        return true;
      if (!J.containsKey$1$x(C.Set_Yabt3._collection$_map, $event.type))
        return true;
      if (++_this.semanticsActivationAttempts >= 20)
        return _this._schedulePlaceholderRemoval = true;
      if (_this.semanticsActivationTimer != null)
        return false;
      t1 = J.get$target$x($event);
      t2 = _this._semanticsPlaceholder;
      if (t1 == null ? t2 == null : t1 === t2) {
        _this.semanticsActivationTimer = P.Timer_Timer(C.Duration_300000, new H.DesktopSemanticsEnabler_tryEnableSemantics_closure(_this));
        return false;
      }
      return true;
    },
    prepareAccesibilityPlaceholder$0: function() {
      var _this = this,
        t1 = W._ElementFactoryProvider_createElement_tag("flt-semantics-placeholder", null);
      _this._semanticsPlaceholder = t1;
      J.addEventListener$3$x(t1, "click", new H.DesktopSemanticsEnabler_prepareAccesibilityPlaceholder_closure(_this), true);
      t1 = _this._semanticsPlaceholder;
      t1.setAttribute("role", "button");
      t1.setAttribute("aria-live", "true");
      t1.setAttribute("tabindex", "0");
      t1.setAttribute("aria-label", "Enable accessibility");
      t1 = _this._semanticsPlaceholder.style;
      t1.position = "absolute";
      t1.left = "-1px";
      t1.top = "-1px";
      t1.width = "1px";
      t1.height = "1px";
      return _this._semanticsPlaceholder;
    }
  };
  H.DesktopSemanticsEnabler_tryEnableSemantics_closure.prototype = {
    call$0: function() {
      H.EngineSemanticsOwner_instance().set$semanticsEnabled(true);
      this.$this._schedulePlaceholderRemoval = true;
    },
    $signature: 0
  };
  H.DesktopSemanticsEnabler_prepareAccesibilityPlaceholder_closure.prototype = {
    call$1: function($event) {
      this.$this.tryEnableSemantics$1($event);
    },
    $signature: 2
  };
  H.MobileSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics: function() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1: function($event) {
      var blinkEnableConditionPassed, activationPoint, t1, activatingElementRect, t2, t3, deltaX, deltaY, safariEnableConditionPassed, _this = this;
      if (_this._schedulePlaceholderRemoval) {
        if (H.browserEngine() !== C.BrowserEngine_1 || $event.type === "touchend") {
          J.remove$0$ax(_this._semanticsPlaceholder);
          _this.semanticsActivationTimer = _this._semanticsPlaceholder = null;
        }
        return true;
      }
      if (H.EngineSemanticsOwner_instance()._semanticsEnabled)
        return true;
      if (++_this.semanticsActivationAttempts >= 20)
        return _this._schedulePlaceholderRemoval = true;
      if (!J.containsKey$1$x(C.Set_2jNg2._collection$_map, $event.type))
        return true;
      if (_this.semanticsActivationTimer != null)
        return false;
      blinkEnableConditionPassed = H.browserEngine() === C.BrowserEngine_0 && H.EngineSemanticsOwner_instance()._gestureMode === C.GestureMode_1;
      if (H.browserEngine() === C.BrowserEngine_1) {
        switch ($event.type) {
          case "click":
            activationPoint = J.get$offset$x($event);
            break;
          case "touchstart":
          case "touchend":
            t1 = $event.changedTouches;
            t1 = (t1 && C.TouchList_methods).get$first(t1);
            activationPoint = new P.Point(C.JSNumber_methods.round$0(t1.clientX), C.JSNumber_methods.round$0(t1.clientY), type$.Point_num);
            break;
          default:
            return true;
        }
        activatingElementRect = $.$get$domRenderer()._glassPaneElement.getBoundingClientRect();
        t1 = activatingElementRect.left;
        t2 = activatingElementRect.right;
        t3 = activatingElementRect.top;
        deltaX = activationPoint.x - (t1 + (t2 - t1) / 2);
        deltaY = activationPoint.y - (t3 + (activatingElementRect.bottom - t3) / 2);
        safariEnableConditionPassed = deltaX * deltaX + deltaY * deltaY < 1 && true;
      } else
        safariEnableConditionPassed = false;
      if (blinkEnableConditionPassed || safariEnableConditionPassed) {
        _this.semanticsActivationTimer = P.Timer_Timer(C.Duration_300000, new H.MobileSemanticsEnabler_tryEnableSemantics_closure(_this));
        return false;
      }
      return true;
    },
    prepareAccesibilityPlaceholder$0: function() {
      var _this = this,
        t1 = W._ElementFactoryProvider_createElement_tag("flt-semantics-placeholder", null);
      _this._semanticsPlaceholder = t1;
      J.addEventListener$3$x(t1, "click", new H.MobileSemanticsEnabler_prepareAccesibilityPlaceholder_closure(_this), true);
      t1 = _this._semanticsPlaceholder;
      t1.setAttribute("role", "button");
      t1.setAttribute("aria-label", "Enable accessibility");
      t1 = _this._semanticsPlaceholder.style;
      t1.position = "absolute";
      t1.left = "0";
      t1.top = "0";
      t1.right = "0";
      t1.bottom = "0";
      return _this._semanticsPlaceholder;
    }
  };
  H.MobileSemanticsEnabler_tryEnableSemantics_closure.prototype = {
    call$0: function() {
      H.EngineSemanticsOwner_instance().set$semanticsEnabled(true);
      this.$this._schedulePlaceholderRemoval = true;
    },
    $signature: 0
  };
  H.MobileSemanticsEnabler_prepareAccesibilityPlaceholder_closure.prototype = {
    call$1: function($event) {
      this.$this.tryEnableSemantics$1($event);
    },
    $signature: 2
  };
  H.Tappable.prototype = {
    update$0: function(_) {
      var t2, _this = this,
        t1 = _this.semanticsObject,
        element = t1.element;
      t1.setAriaRole$2("button", (t1.__engine$_flags & 8) !== 0);
      t2 = t1.__engine$_flags;
      if ((t2 & 128) === 0 && (t2 & 8) !== 0) {
        element.setAttribute("aria-disabled", "true");
        _this._stopListening$0();
      } else if ((t1.__engine$_actions & 1) !== 0 && (t2 & 16) === 0) {
        if (_this._clickListener == null) {
          t1 = new H.Tappable_update_closure(_this);
          _this._clickListener = t1;
          J.addEventListener$2$x(element, "click", t1);
        }
      } else
        _this._stopListening$0();
    },
    _stopListening$0: function() {
      var t1 = this._clickListener;
      if (t1 == null)
        return;
      J.removeEventListener$2$x(this.semanticsObject.element, "click", t1);
      this._clickListener = null;
    },
    dispose$0: function() {
      this._stopListening$0();
      this.semanticsObject.setAriaRole$2("button", false);
    }
  };
  H.Tappable_update_closure.prototype = {
    call$1: function(_) {
      var t2,
        t1 = this.$this.semanticsObject;
      if (t1.owner._gestureMode !== C.GestureMode_1)
        return;
      t2 = $.$get$window();
      H._invoke3(t2._onSemanticsAction, t2._onSemanticsActionZone, t1.id, C.SemanticsAction_1, null);
    },
    $signature: 2
  };
  H.SemanticsTextEditingStrategy.prototype = {
    disable$0: function(_) {
      this.domElement.blur();
    },
    initializeElementPlacement$0: function() {
    },
    initializeTextEditing$3$onAction$onChange: function(inputConfig, onAction, onChange) {
      var _this = this;
      _this.isEnabled = true;
      _this._inputConfiguration = inputConfig;
      _this._onChange = onChange;
      _this._onAction = onAction;
      _this.domElement.focus();
    },
    setEditingState$1: function(editingState) {
      this.super$DefaultTextEditingStrategy$setEditingState(editingState);
      this.domElement.focus();
    }
  };
  H.TextField.prototype = {
    _initializeForBlink$0: function() {
      J.addEventListener$2$x(this.textEditingElement.domElement, "focus", new H.TextField__initializeForBlink_closure(this));
    },
    _initializeForWebkit$0: function() {
      var _this = this, t1 = {};
      t1.lastTouchStartOffsetY = t1.lastTouchStartOffsetX = null;
      J.addEventListener$3$x(_this.textEditingElement.domElement, "touchstart", new H.TextField__initializeForWebkit_closure(t1, _this), true);
      J.addEventListener$3$x(_this.textEditingElement.domElement, "touchend", new H.TextField__initializeForWebkit_closure0(t1, _this), true);
    },
    update$0: function(_) {
    },
    dispose$0: function() {
      J.remove$0$ax(this.textEditingElement.domElement);
      $.$get$textEditing().useCustomEditableElement$1(null);
    }
  };
  H.TextField__initializeForBlink_closure.prototype = {
    call$1: function($event) {
      var t1 = this.$this,
        t2 = t1.semanticsObject;
      if (t2.owner._gestureMode !== C.GestureMode_1)
        return;
      $.$get$textEditing().useCustomEditableElement$1(t1.textEditingElement);
      t1 = $.$get$window();
      H._invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, t2.id, C.SemanticsAction_1, null);
    },
    $signature: 2
  };
  H.TextField__initializeForWebkit_closure.prototype = {
    call$1: function($event) {
      var t1, t2;
      $.$get$textEditing().useCustomEditableElement$1(this.$this.textEditingElement);
      t1 = $event.changedTouches;
      t1 = (t1 && C.TouchList_methods).get$last(t1);
      t2 = C.JSNumber_methods.round$0(t1.clientX);
      C.JSNumber_methods.round$0(t1.clientY);
      t1 = this._box_0;
      t1.lastTouchStartOffsetX = t2;
      t2 = $event.changedTouches;
      t2 = (t2 && C.TouchList_methods).get$last(t2);
      C.JSNumber_methods.round$0(t2.clientX);
      t1.lastTouchStartOffsetY = C.JSNumber_methods.round$0(t2.clientY);
    },
    $signature: 2
  };
  H.TextField__initializeForWebkit_closure0.prototype = {
    call$1: function($event) {
      var t2, offsetX, offsetY,
        t1 = this._box_0;
      if (t1.lastTouchStartOffsetX != null) {
        t2 = $event.changedTouches;
        t2 = (t2 && C.TouchList_methods).get$last(t2);
        offsetX = C.JSNumber_methods.round$0(t2.clientX);
        C.JSNumber_methods.round$0(t2.clientY);
        t2 = $event.changedTouches;
        t2 = (t2 && C.TouchList_methods).get$last(t2);
        C.JSNumber_methods.round$0(t2.clientX);
        offsetY = C.JSNumber_methods.round$0(t2.clientY);
        if (offsetX * offsetX + offsetY * offsetY < 324) {
          t2 = $.$get$window();
          H._invoke3(t2._onSemanticsAction, t2._onSemanticsActionZone, this.$this.semanticsObject.id, C.SemanticsAction_1, null);
        }
      }
      t1.lastTouchStartOffsetY = t1.lastTouchStartOffsetX = null;
    },
    $signature: 2
  };
  H._TypedDataBuffer.prototype = {
    get$length: function(_) {
      return this.__engine$_length;
    },
    $index: function(_, index) {
      if (index >= this.__engine$_length)
        throw H.wrapException(P.IndexError$(index, this, null, null, null));
      return this.__engine$_buffer[index];
    },
    $indexSet: function(_, index, value) {
      if (index >= this.__engine$_length)
        throw H.wrapException(P.IndexError$(index, this, null, null, null));
      this.__engine$_buffer[index] = value;
    },
    set$length: function(_, newLength) {
      var t2, i, newBuffer, _this = this,
        t1 = _this.__engine$_length;
      if (newLength < t1)
        for (t2 = _this.__engine$_buffer, i = newLength; i < t1; ++i)
          t2[i] = 0;
      else {
        t1 = _this.__engine$_buffer.length;
        if (newLength > t1) {
          if (t1 === 0)
            newBuffer = new Uint8Array(newLength);
          else
            newBuffer = _this._createBiggerBuffer$1(newLength);
          C.NativeUint8List_methods.setRange$3(newBuffer, 0, _this.__engine$_length, _this.__engine$_buffer);
          _this.__engine$_buffer = newBuffer;
        }
      }
      _this.__engine$_length = newLength;
    },
    __engine$_add$1: function(_, value) {
      var _this = this,
        t1 = _this.__engine$_length;
      if (t1 === _this.__engine$_buffer.length)
        _this.__engine$_grow$1(t1);
      _this.__engine$_buffer[_this.__engine$_length++] = value;
    },
    add$1: function(_, value) {
      var _this = this,
        t1 = _this.__engine$_length;
      if (t1 === _this.__engine$_buffer.length)
        _this.__engine$_grow$1(t1);
      _this.__engine$_buffer[_this.__engine$_length++] = value;
    },
    addAll$3: function(_, values, start, end) {
      P.RangeError_checkNotNegative(start, "start");
      if (end != null && start > end)
        throw H.wrapException(P.RangeError$range(end, start, null, "end", null));
      this._addAll$3(values, start, end);
    },
    addAll$1: function($receiver, values) {
      return this.addAll$3($receiver, values, 0, null);
    },
    _addAll$3: function(values, start, end) {
      var t1, i, value;
      if (type$.List_dynamic._is(values))
        end = end == null ? values.length : end;
      if (end != null) {
        this._insertKnownLength$4(this.__engine$_length, values, start, end);
        return;
      }
      for (t1 = J.get$iterator$ax(values), i = 0; t1.moveNext$0();) {
        value = t1.get$current(t1);
        if (i >= start)
          this.__engine$_add$1(0, value);
        ++i;
      }
      if (i < start)
        throw H.wrapException(P.StateError$("Too few elements"));
    },
    _insertKnownLength$4: function(index, values, start, end) {
      var t1, valuesLength, newLength, t2, _this = this;
      if (type$.List_dynamic._is(values)) {
        t1 = values.length;
        if (start > t1 || end > t1)
          throw H.wrapException(P.StateError$("Too few elements"));
      }
      valuesLength = end - start;
      newLength = _this.__engine$_length + valuesLength;
      _this._ensureCapacity$1(newLength);
      t1 = _this.__engine$_buffer;
      t2 = index + valuesLength;
      C.NativeUint8List_methods.setRange$4(t1, t2, _this.__engine$_length + valuesLength, t1, index);
      C.NativeUint8List_methods.setRange$4(_this.__engine$_buffer, index, t2, values, start);
      _this.__engine$_length = newLength;
    },
    _ensureCapacity$1: function(requiredCapacity) {
      var newBuffer, _this = this;
      if (requiredCapacity <= _this.__engine$_buffer.length)
        return;
      newBuffer = _this._createBiggerBuffer$1(requiredCapacity);
      C.NativeUint8List_methods.setRange$3(newBuffer, 0, _this.__engine$_length, _this.__engine$_buffer);
      _this.__engine$_buffer = newBuffer;
    },
    _createBiggerBuffer$1: function(requiredCapacity) {
      var t1,
        newLength = this.__engine$_buffer.length * 2;
      if (requiredCapacity != null && newLength < requiredCapacity)
        newLength = requiredCapacity;
      else if (newLength < 8)
        newLength = 8;
      t1 = H._isInt(newLength) ? newLength : H.throwExpression(P.ArgumentError$("Invalid length " + H.S(newLength)));
      return new Uint8Array(t1);
    },
    __engine$_grow$1: function($length) {
      var t1 = this._createBiggerBuffer$1(null);
      C.NativeUint8List_methods.setRange$3(t1, 0, $length, this.__engine$_buffer);
      this.__engine$_buffer = t1;
    }
  };
  H._IntBuffer.prototype = {};
  H.Uint8Buffer.prototype = {};
  H.MethodCall.prototype = {
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + "(" + this.method + ", " + H.S(this.$arguments) + ")";
    }
  };
  H.StringCodec.prototype = {
    decodeMessage$1: function(message) {
      return new P.Utf8Decoder(false).convert$1(H.NativeUint8List_NativeUint8List$view(message.buffer, 0, null));
    },
    encodeMessage$1: function(message) {
      return H.NativeByteData_NativeByteData$view(C.C_Utf8Encoder.convert$1(message).buffer, 0, null);
    }
  };
  H.JSONMessageCodec.prototype = {
    encodeMessage$1: function(message) {
      return C.C_StringCodec0.encodeMessage$1(C.C_JsonCodec.encode$1(message));
    },
    decodeMessage$1: function(message) {
      if (message == null)
        return message;
      return C.C_JsonCodec.decode$1(0, C.C_StringCodec0.decodeMessage$1(message));
    }
  };
  H.JSONMethodCodec.prototype = {
    encodeMethodCall$1: function($call) {
      return C.C_JSONMessageCodec0.encodeMessage$1(P.LinkedHashMap_LinkedHashMap$_literal(["method", $call.method, "args", $call.$arguments], type$.String, type$.dynamic));
    },
    decodeMethodCall$1: function(methodCall) {
      var t1, method, $arguments, _null = null,
        decoded = C.C_JSONMessageCodec0.decodeMessage$1(methodCall);
      if (!type$.Map_dynamic_dynamic._is(decoded))
        throw H.wrapException(P.FormatException$("Expected method call Map, got " + H.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      method = t1.$index(decoded, "method");
      $arguments = t1.$index(decoded, "args");
      if (typeof method == "string")
        return new H.MethodCall(method, $arguments);
      throw H.wrapException(P.FormatException$("Invalid method call: " + H.S(decoded), _null, _null));
    }
  };
  H.StandardMessageCodec.prototype = {
    encodeMessage$1: function(message) {
      var buffer = H.WriteBuffer$();
      this.writeValue$2(0, buffer, true);
      return buffer.done$0();
    },
    decodeMessage$1: function(message) {
      var buffer, result;
      if (message == null)
        return null;
      buffer = new H.ReadBuffer(message);
      result = this.readValue$1(0, buffer);
      if (buffer.__engine$_position < message.byteLength)
        throw H.wrapException(C.FormatException_oCg);
      return result;
    },
    writeValue$2: function(_, buffer, value) {
      var t1, t2, bytes, _this = this;
      if (value == null)
        buffer.__engine$_buffer.__engine$_add$1(0, 0);
      else if (H._isBool(value)) {
        t1 = value ? 1 : 2;
        buffer.__engine$_buffer.__engine$_add$1(0, t1);
      } else if (typeof value == "number") {
        buffer.__engine$_buffer.__engine$_add$1(0, 6);
        buffer._alignTo$1(8);
        buffer._eightBytes.setFloat64(0, value, C.C_Endian === $.$get$Endian_host());
        buffer.__engine$_buffer.addAll$1(0, buffer._eightBytesAsList);
      } else if (H._isInt(value)) {
        t1 = -2147483648 <= value && value <= 2147483647;
        t2 = buffer.__engine$_buffer;
        if (t1) {
          t2.__engine$_add$1(0, 3);
          buffer._eightBytes.setInt32(0, value, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_buffer.addAll$3(0, buffer._eightBytesAsList, 0, 4);
        } else {
          t2.__engine$_add$1(0, 4);
          C.NativeByteData_methods.setInt64$3(buffer._eightBytes, 0, value, $.$get$Endian_host());
        }
      } else if (typeof value == "string") {
        buffer.__engine$_buffer.__engine$_add$1(0, 7);
        bytes = C.C_Utf8Encoder.convert$1(value);
        _this.writeSize$2(buffer, bytes.length);
        buffer.__engine$_buffer.addAll$1(0, bytes);
      } else if (type$.Uint8List._is(value)) {
        buffer.__engine$_buffer.__engine$_add$1(0, 8);
        _this.writeSize$2(buffer, value.length);
        buffer.__engine$_buffer.addAll$1(0, value);
      } else if (type$.Int32List._is(value)) {
        buffer.__engine$_buffer.__engine$_add$1(0, 9);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._alignTo$1(4);
        buffer.__engine$_buffer.addAll$1(0, H.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 4 * t1));
      } else if (type$.Float64List._is(value)) {
        buffer.__engine$_buffer.__engine$_add$1(0, 11);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._alignTo$1(8);
        buffer.__engine$_buffer.addAll$1(0, H.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 8 * t1));
      } else if (type$.List_dynamic._is(value)) {
        buffer.__engine$_buffer.__engine$_add$1(0, 12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); t1.moveNext$0();)
          _this.writeValue$2(0, buffer, t1.get$current(t1));
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer.__engine$_buffer.__engine$_add$1(0, 13);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        t1.forEach$1(value, new H.StandardMessageCodec_writeValue_closure(_this, buffer));
      } else
        throw H.wrapException(P.ArgumentError$value(value, null, null));
    },
    readValue$1: function(_, buffer) {
      if (!(buffer.__engine$_position < buffer.data.byteLength))
        throw H.wrapException(C.FormatException_oCg);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2: function(type, buffer) {
      var result, value, $length, t1, list, i, t2, t3, _this = this;
      switch (type) {
        case 0:
          result = null;
          break;
        case 1:
          result = true;
          break;
        case 2:
          result = false;
          break;
        case 3:
          value = buffer.data.getInt32(buffer.__engine$_position, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 4;
          result = value;
          break;
        case 4:
          result = buffer.getInt64$0(0);
          break;
        case 5:
          result = P.int_parse(new P.Utf8Decoder(false).convert$1(buffer.getUint8List$1(_this.readSize$1(buffer))), null, 16);
          break;
        case 6:
          buffer._alignTo$1(8);
          value = buffer.data.getFloat64(buffer.__engine$_position, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 8;
          result = value;
          break;
        case 7:
          result = new P.Utf8Decoder(false).convert$1(buffer.getUint8List$1(_this.readSize$1(buffer)));
          break;
        case 8:
          result = buffer.getUint8List$1(_this.readSize$1(buffer));
          break;
        case 9:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(4);
          t1 = buffer.data;
          list = H.NativeInt32List_NativeInt32List$view(t1.buffer, t1.byteOffset + buffer.__engine$_position, $length);
          buffer.__engine$_position = buffer.__engine$_position + 4 * $length;
          result = list;
          break;
        case 10:
          result = buffer.getInt64List$1(_this.readSize$1(buffer));
          break;
        case 11:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(8);
          t1 = buffer.data;
          list = H.NativeFloat64List_NativeFloat64List$view(t1.buffer, t1.byteOffset + buffer.__engine$_position, $length);
          buffer.__engine$_position = buffer.__engine$_position + 8 * $length;
          result = list;
          break;
        case 12:
          $length = _this.readSize$1(buffer);
          result = new Array($length);
          result.fixed$length = Array;
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer.__engine$_position;
            if (!(t2 < t1.byteLength))
              H.throwExpression(C.FormatException_oCg);
            buffer.__engine$_position = t2 + 1;
            result[i] = _this.readValueOfType$2(t1.getUint8(t2), buffer);
          }
          break;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.dynamic;
          result = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer.__engine$_position;
            if (!(t2 < t1.byteLength))
              H.throwExpression(C.FormatException_oCg);
            buffer.__engine$_position = t2 + 1;
            t2 = _this.readValueOfType$2(t1.getUint8(t2), buffer);
            t3 = buffer.__engine$_position;
            if (!(t3 < t1.byteLength))
              H.throwExpression(C.FormatException_oCg);
            buffer.__engine$_position = t3 + 1;
            result.$indexSet(0, t2, _this.readValueOfType$2(t1.getUint8(t3), buffer));
          }
          break;
        default:
          throw H.wrapException(C.FormatException_oCg);
      }
      return result;
    },
    writeSize$2: function(buffer, value) {
      var t1;
      if (value < 254)
        buffer.__engine$_buffer.__engine$_add$1(0, value);
      else {
        t1 = buffer.__engine$_buffer;
        if (value <= 65535) {
          t1.__engine$_add$1(0, 254);
          buffer._eightBytes.setUint16(0, value, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_buffer.addAll$3(0, buffer._eightBytesAsList, 0, 2);
        } else {
          t1.__engine$_add$1(0, 255);
          buffer._eightBytes.setUint32(0, value, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_buffer.addAll$3(0, buffer._eightBytesAsList, 0, 4);
        }
      }
    },
    readSize$1: function(buffer) {
      var value = buffer.getUint8$0(0);
      switch (value) {
        case 254:
          value = buffer.data.getUint16(buffer.__engine$_position, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 2;
          return value;
        case 255:
          value = buffer.data.getUint32(buffer.__engine$_position, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 4;
          return value;
        default:
          return value;
      }
    }
  };
  H.StandardMessageCodec_writeValue_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(0, t2, key);
      t1.writeValue$2(0, t2, value);
    },
    $signature: 7
  };
  H.StandardMethodCodec.prototype = {
    decodeMethodCall$1: function(methodCall) {
      var buffer = new H.ReadBuffer(methodCall),
        method = C.C_StandardMessageCodec.readValue$1(0, buffer),
        $arguments = C.C_StandardMessageCodec.readValue$1(0, buffer);
      if (typeof method == "string" && !(buffer.__engine$_position < methodCall.byteLength))
        return new H.MethodCall(method, $arguments);
      else
        throw H.wrapException(C.FormatException_Qi2);
    },
    encodeSuccessEnvelope$1: function(result) {
      var buffer = H.WriteBuffer$();
      buffer.__engine$_buffer.__engine$_add$1(0, 0);
      C.C_StandardMessageCodec.writeValue$2(0, buffer, result);
      return buffer.done$0();
    },
    encodeErrorEnvelope$3$code$details$message: function(code, details, message) {
      var buffer = H.WriteBuffer$();
      buffer.__engine$_buffer.__engine$_add$1(0, 1);
      C.C_StandardMessageCodec.writeValue$2(0, buffer, code);
      C.C_StandardMessageCodec.writeValue$2(0, buffer, message);
      C.C_StandardMessageCodec.writeValue$2(0, buffer, details);
      return buffer.done$0();
    },
    encodeErrorEnvelope$2$code$message: function(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    }
  };
  H.WriteBuffer.prototype = {
    _alignTo$1: function(alignment) {
      var t1, i,
        mod = C.JSInt_methods.$mod(this.__engine$_buffer.__engine$_length, alignment);
      if (mod !== 0)
        for (t1 = alignment - mod, i = 0; i < t1; ++i)
          this.__engine$_buffer.__engine$_add$1(0, 0);
    },
    done$0: function() {
      var t1 = this.__engine$_buffer,
        t2 = t1.__engine$_buffer,
        result = H.NativeByteData_NativeByteData$view(t2.buffer, 0, t1.__engine$_length * t2.BYTES_PER_ELEMENT);
      this.__engine$_buffer = null;
      return result;
    }
  };
  H.ReadBuffer.prototype = {
    getUint8$0: function(_) {
      return this.data.getUint8(this.__engine$_position++);
    },
    getInt64$0: function(_) {
      var t1 = this.data;
      (t1 && C.NativeByteData_methods).getInt64$2(t1, this.__engine$_position, $.$get$Endian_host());
    },
    getUint8List$1: function($length) {
      var _this = this,
        t1 = _this.data,
        list = H.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + _this.__engine$_position, $length);
      _this.__engine$_position = _this.__engine$_position + $length;
      return list;
    },
    getInt64List$1: function($length) {
      var t1;
      this._alignTo$1(8);
      t1 = this.data;
      C.NativeByteBuffer_methods.asInt64List$2(t1.buffer, t1.byteOffset + this.__engine$_position, $length);
    },
    _alignTo$1: function(alignment) {
      var t1 = this.__engine$_position,
        mod = C.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this.__engine$_position = t1 + (alignment - mod);
    }
  };
  H.EngineGradient.prototype = {};
  H.GradientLinear.prototype = {
    createPaintStyle$1: function(ctx) {
      var i, _this = this,
        t1 = _this.from,
        t2 = _this.to,
        gradient = ctx.createLinearGradient(t1._dx, t1._dy, t2._dx, t2._dy);
      t1 = _this.colorStops;
      if (t1 == null) {
        t1 = _this.colors;
        gradient.addColorStop(0, H.colorToCssString(t1[0]));
        gradient.addColorStop(1, H.colorToCssString(t1[1]));
        return gradient;
      }
      for (t2 = _this.colors, i = 0; i < t2.length; ++i)
        gradient.addColorStop(t1[i], H.colorToCssString(t2[i]));
      return gradient;
    },
    createSkiaShader$0: function() {
      var i, t2, t3, _this = this,
        jsColors = new P.JsArray([], type$.JsArray_num),
        t1 = _this.colors;
      jsColors.super$JsObject$$indexSet(0, "length", t1.length);
      for (i = 0; i < t1.length; ++i) {
        t2 = J.get$value$x(t1[i]);
        t3 = C.JSInt_methods.toInt$0(i);
        if (i === t3) {
          t3 = i >= jsColors.get$length(jsColors);
          if (t3)
            H.throwExpression(P.RangeError$range(i, 0, jsColors.get$length(jsColors), null, null));
        }
        jsColors.super$JsObject$$indexSet(0, i, t2);
      }
      return $.canvasKit.callMethod$2("MakeLinearGradientShader", [H.makeSkPoint(_this.from), H.makeSkPoint(_this.to), jsColors, H.makeSkiaColorStops(_this.colorStops), _this.tileMode.index]);
    }
  };
  H.SurfaceShadowData.prototype = {};
  H._DomClip.prototype = {
    get$childContainer: function() {
      return this._DomClip__childContainer;
    },
    createElement$0: function(_) {
      var element = this.defaultCreateElement$1("flt-clip"),
        t1 = element.style;
      t1.overflow = "hidden";
      t1 = W._ElementFactoryProvider_createElement_tag("flt-clip-interior", null);
      this._DomClip__childContainer = t1;
      t1 = t1.style;
      t1.position = "absolute";
      element.appendChild(this._DomClip__childContainer);
      return element;
    }
  };
  H.PersistedClipRect.prototype = {
    recomputeTransformAndClip$0: function() {
      var _this = this;
      _this.__engine$_transform = _this.parent.__engine$_transform;
      _this._localClipBounds = _this.rect;
      _this._projectedClip = _this._localTransformInverse = null;
    },
    createElement$0: function(_) {
      var t1 = this.super$_DomClip$createElement(0);
      t1.setAttribute("clip-type", "rect");
      return t1;
    },
    apply$0: function() {
      var t5,
        t1 = this.rootElement.style,
        t2 = this.rect,
        t3 = t2.left,
        t4 = H.S(t3) + "px";
      t1.left = t4;
      t4 = t2.top;
      t5 = H.S(t4) + "px";
      t1.top = t5;
      t5 = H.S(t2.right - t3) + "px";
      t1.width = t5;
      t2 = H.S(t2.bottom - t4) + "px";
      t1.height = t2;
      t1 = this._DomClip__childContainer.style;
      t3 = H.S(-t3) + "px";
      t1.left = t3;
      t2 = H.S(-t4) + "px";
      t1.top = t2;
    },
    update$1: function(_, oldSurface) {
      this.super$PersistedContainerSurface$update(0, oldSurface);
      if (!J.$eq$(this.rect, oldSurface.rect))
        this.apply$0();
    },
    $isClipRectEngineLayer: 1
  };
  H.PersistedPhysicalShape.prototype = {
    recomputeTransformAndClip$0: function() {
      var t1, roundRect, rect, _this = this;
      _this.__engine$_transform = _this.parent.__engine$_transform;
      t1 = _this.path;
      roundRect = t1.get$webOnlyPathAsRoundedRect();
      if (roundRect != null)
        _this._localClipBounds = new P.Rect(roundRect.left, roundRect.top, roundRect.right, roundRect.bottom);
      else {
        rect = t1.get$webOnlyPathAsRect();
        if (rect != null)
          _this._localClipBounds = rect;
        else
          _this._localClipBounds = null;
      }
      _this._projectedClip = _this._localTransformInverse = null;
    },
    _applyShadow$0: function() {
      var t2, t3, _this = this,
        _s10_ = "box-shadow",
        t1 = _this.rootElement,
        shadow = H.computeShadow(_this.pathBounds, _this.elevation);
      if (shadow == null) {
        t1 = t1.style;
        t1.toString;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_), "none", "");
      } else {
        t2 = _this.shadowColor.value;
        t1 = t1.style;
        t3 = shadow.offset;
        t2 = H.S(t3._dx) + "px " + H.S(t3._dy) + "px " + H.S(shadow.blurWidth) + "px 0px rgba(" + ((16711680 & t2) >>> 16) + ", " + ((65280 & t2) >>> 8) + ", " + ((255 & t2) >>> 0) + ", " + H.S(0.4 * ((4278190080 & t2) >>> 24) / 255) + ")";
        t1.toString;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_), t2, "");
      }
    },
    createElement$0: function(_) {
      var t1 = this.super$_DomClip$createElement(0);
      t1.setAttribute("clip-type", "physical-shape");
      return t1;
    },
    apply$0: function() {
      var _this = this,
        t1 = _this.rootElement.style,
        t2 = H.colorToCssString(_this.color);
      t1.toString;
      t1.backgroundColor = t2 == null ? "" : t2;
      _this._applyShadow$0();
      _this._applyShape$0();
    },
    _applyShape$0: function() {
      var roundRect, borderRadius, style, t2, t3, rect, ellipse, rx, ry, left, $top, t4, t5, t6, t7, rootElementStyle, _this = this,
        _s13_ = "border-radius",
        _s6_ = "hidden",
        t1 = _this.path;
      if (t1 == null)
        return;
      roundRect = t1.get$webOnlyPathAsRoundedRect();
      if (roundRect != null) {
        borderRadius = H.S(roundRect.tlRadiusX) + "px " + H.S(roundRect.trRadiusX) + "px " + H.S(roundRect.brRadiusX) + "px " + H.S(roundRect.blRadiusX) + "px";
        style = _this.rootElement.style;
        t1 = roundRect.left;
        t2 = H.S(t1) + "px";
        style.left = t2;
        t2 = roundRect.top;
        t3 = H.S(t2) + "px";
        style.top = t3;
        t3 = H.S(roundRect.right - t1) + "px";
        style.width = t3;
        t3 = H.S(roundRect.bottom - t2) + "px";
        style.height = t3;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, _s13_), borderRadius, "");
        t3 = _this._DomClip__childContainer.style;
        t1 = H.S(-t1) + "px";
        t3.left = t1;
        t1 = H.S(-t2) + "px";
        t3.top = t1;
        if (_this.clipBehavior !== C.Clip_0)
          style.overflow = _s6_;
        return;
      } else {
        rect = t1.get$webOnlyPathAsRect();
        if (rect != null) {
          style = _this.rootElement.style;
          t1 = rect.left;
          t2 = H.S(t1) + "px";
          style.left = t2;
          t2 = rect.top;
          t3 = H.S(t2) + "px";
          style.top = t3;
          t3 = H.S(rect.right - t1) + "px";
          style.width = t3;
          t3 = H.S(rect.bottom - t2) + "px";
          style.height = t3;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, _s13_), "", "");
          t3 = _this._DomClip__childContainer.style;
          t1 = H.S(-t1) + "px";
          t3.left = t1;
          t1 = H.S(-t2) + "px";
          t3.top = t1;
          if (_this.clipBehavior !== C.Clip_0)
            style.overflow = _s6_;
          return;
        } else {
          ellipse = t1.get$webOnlyPathAsCircle();
          if (ellipse != null) {
            rx = ellipse.radiusX;
            ry = ellipse.radiusY;
            borderRadius = rx === ry ? H.S(rx) + "px " : H.S(rx) + "px " + H.S(ry) + "px ";
            style = _this.rootElement.style;
            left = ellipse.x - rx;
            $top = ellipse.y - ry;
            t1 = H.S(left) + "px";
            style.left = t1;
            t1 = H.S($top) + "px";
            style.top = t1;
            t1 = H.S(rx * 2) + "px";
            style.width = t1;
            t1 = H.S(ry * 2) + "px";
            style.height = t1;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, _s13_), borderRadius, "");
            t1 = _this._DomClip__childContainer.style;
            t2 = H.S(-left) + "px";
            t1.left = t2;
            t2 = H.S(-$top) + "px";
            t1.top = t2;
            if (_this.clipBehavior !== C.Clip_0)
              style.overflow = _s6_;
            return;
          }
        }
      }
      t2 = _this.pathBounds;
      t3 = t2.left;
      t4 = t2.top;
      t5 = t2.right - t3;
      t2 = t2.bottom - t4;
      t1 = W.Element_Element$html(H._pathToSvgClipPath(t1, -t3, -t4, 1 / t5, 1 / t2), new H._NullTreeSanitizer(), null);
      _this._clipElement = t1;
      t6 = $.$get$domRenderer();
      t7 = _this.rootElement;
      t6.toString;
      t7.appendChild(t1);
      t6.setElementStyle$3(_this.rootElement, "clip-path", "url(#svgClip" + $._clipIdCounter + ")");
      t6.setElementStyle$3(_this.rootElement, "-webkit-clip-path", "url(#svgClip" + $._clipIdCounter + ")");
      rootElementStyle = _this.rootElement.style;
      rootElementStyle.overflow = "";
      t1 = H.S(t3) + "px";
      rootElementStyle.left = t1;
      t1 = H.S(t4) + "px";
      rootElementStyle.top = t1;
      t1 = H.S(t5) + "px";
      rootElementStyle.width = t1;
      t1 = H.S(t2) + "px";
      rootElementStyle.height = t1;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(rootElementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(rootElementStyle, _s13_), "", "");
      t1 = _this._DomClip__childContainer.style;
      t3 = "-" + H.S(t3) + "px";
      t1.left = t3;
      t2 = "-" + H.S(t4) + "px";
      t1.top = t2;
    },
    update$1: function(_, oldSurface) {
      var t1, t2, style, _this = this;
      _this.super$PersistedContainerSurface$update(0, oldSurface);
      t1 = _this.color;
      if (!oldSurface.color.$eq(0, t1)) {
        t2 = _this.rootElement.style;
        t1 = H.colorToCssString(t1);
        t2.toString;
        t2.backgroundColor = t1 == null ? "" : t1;
      }
      if (oldSurface.elevation != _this.elevation || !oldSurface.shadowColor.$eq(0, _this.shadowColor))
        _this._applyShadow$0();
      t1 = oldSurface.path;
      t2 = oldSurface._clipElement;
      if (t1 != _this.path) {
        if (t2 != null)
          J.remove$0$ax(t2);
        style = _this.rootElement.style;
        style.toString;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "transform"), "", "");
        style.left = "";
        style.top = "";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "border-radius"), "", "");
        t1 = $.$get$domRenderer();
        t1.setElementStyle$3(_this.rootElement, "clip-path", "");
        t1.setElementStyle$3(_this.rootElement, "-webkit-clip-path", "");
        _this._applyShape$0();
      } else
        _this._clipElement = t2;
      oldSurface._clipElement = null;
    },
    $isPhysicalShapeEngineLayer: 1
  };
  H.PersistedClipPath.prototype = {
    createElement$0: function(_) {
      return this.defaultCreateElement$1("flt-clippath");
    },
    recomputeTransformAndClip$0: function() {
      var _this = this;
      _this.super$PersistedContainerSurface$recomputeTransformAndClip();
      if (_this._localClipBounds == null)
        _this._localClipBounds = _this.clipPath.getBounds$0(0);
    },
    apply$0: function() {
      var t2, t3, _this = this,
        t1 = _this.clipPath;
      if (t1 == null) {
        if (_this._clipElement != null) {
          t1 = $.$get$domRenderer();
          t1.setElementStyle$3(_this.rootElement, "clip-path", "");
          t1.setElementStyle$3(_this.rootElement, "-webkit-clip-path", "");
          J.remove$0$ax(_this._clipElement);
          _this._clipElement = null;
        }
        return;
      }
      t2 = _this._clipElement;
      if (t2 != null)
        J.remove$0$ax(t2);
      t1 = W.Element_Element$html(H.createSvgClipDef(_this.rootElement, t1), new H._NullTreeSanitizer(), null);
      _this._clipElement = t1;
      t2 = $.$get$domRenderer();
      t3 = _this.rootElement;
      t2.toString;
      t3.appendChild(t1);
    },
    update$1: function(_, oldSurface) {
      var t1, _this = this;
      _this.super$PersistedContainerSurface$update(0, oldSurface);
      if (oldSurface.clipPath != _this.clipPath) {
        _this._localClipBounds = null;
        t1 = oldSurface._clipElement;
        if (t1 != null)
          J.remove$0$ax(t1);
        _this.apply$0();
      } else
        _this._clipElement = oldSurface._clipElement;
      oldSurface._clipElement = null;
    },
    discard$0: function() {
      var t1 = this._clipElement;
      if (t1 != null)
        J.remove$0$ax(t1);
      this._clipElement = null;
      this.super$PersistedContainerSurface$discard();
    },
    $isClipPathEngineLayer: 1
  };
  H.PersistedOffset.prototype = {
    recomputeTransformAndClip$0: function() {
      var t2, t3, _this = this,
        t1 = _this.parent.__engine$_transform;
      _this.__engine$_transform = t1;
      t2 = _this.dx;
      if (t2 !== 0 || _this.dy !== 0) {
        t1.toString;
        t3 = new H.Matrix40(new Float32Array(16));
        t3.setFrom$1(t1);
        _this.__engine$_transform = t3;
        t3.translate$2(0, t2, _this.dy);
      }
      _this._localTransformInverse = _this._projectedClip = null;
    },
    get$localTransformInverse: function() {
      var _this = this,
        t1 = _this._localTransformInverse;
      return t1 == null ? _this._localTransformInverse = H.Matrix4_Matrix4$translationValues0(-_this.dx, -_this.dy, 0) : t1;
    },
    createElement$0: function(_) {
      var t1 = this.defaultCreateElement$1("flt-offset"),
        t2 = t1.style;
      t2.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "transform-origin"), "0 0 0", "");
      return t1;
    },
    apply$0: function() {
      var t1 = this.rootElement.style,
        t2 = "translate(" + H.S(this.dx) + "px, " + H.S(this.dy) + "px)";
      t1.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
    },
    update$1: function(_, oldSurface) {
      var _this = this;
      _this.super$PersistedContainerSurface$update(0, oldSurface);
      if (oldSurface.dx !== _this.dx || oldSurface.dy !== _this.dy)
        _this.apply$0();
    },
    $isOffsetEngineLayer: 1
  };
  H.PersistedOpacity.prototype = {
    recomputeTransformAndClip$0: function() {
      var t2, dx, dy, _this = this,
        t1 = _this.parent.__engine$_transform;
      _this.__engine$_transform = t1;
      t2 = _this.offset;
      dx = t2._dx;
      dy = t2._dy;
      if (dx !== 0 || dy !== 0) {
        t1.toString;
        t2 = new H.Matrix40(new Float32Array(16));
        t2.setFrom$1(t1);
        _this.__engine$_transform = t2;
        t2.translate$2(0, dx, dy);
      }
      _this._projectedClip = _this._localTransformInverse = null;
    },
    get$localTransformInverse: function() {
      var t1 = this._localTransformInverse;
      if (t1 == null) {
        t1 = this.offset;
        t1 = this._localTransformInverse = H.Matrix4_Matrix4$translationValues0(-t1._dx, -t1._dy, 0);
      }
      return t1;
    },
    createElement$0: function(_) {
      var t1 = this.defaultCreateElement$1("flt-opacity"),
        t2 = t1.style;
      t2.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "transform-origin"), "0 0 0", "");
      return t1;
    },
    apply$0: function() {
      var _this = this,
        t1 = _this.rootElement.style,
        t2 = H.S(_this.alpha / 255);
      t1.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), t2, "");
      t2 = _this.rootElement.style;
      t1 = _this.offset;
      t1 = "translate(" + H.S(t1._dx) + "px, " + H.S(t1._dy) + "px)";
      t2.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "transform"), t1, "");
    },
    update$1: function(_, oldSurface) {
      var _this = this;
      _this.super$PersistedContainerSurface$update(0, oldSurface);
      if (_this.alpha != oldSurface.alpha || !_this.offset.$eq(0, oldSurface.offset))
        _this.apply$0();
    },
    $isOpacityEngineLayer: 1
  };
  H.SurfacePaint.prototype = {
    set$blendMode: function(value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.blendMode = value;
    },
    get$style: function(_) {
      var t1 = this._paintData.style;
      return t1 == null ? C.PaintingStyle_0 : t1;
    },
    set$style: function(_, value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.style = value;
    },
    get$strokeWidth: function() {
      var t1 = this._paintData.strokeWidth;
      return t1 == null ? 0 : t1;
    },
    set$strokeWidth: function(value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.strokeWidth = value;
    },
    set$strokeCap: function(value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.strokeCap = value;
    },
    set$isAntiAlias: function(value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.isAntiAlias = value;
    },
    get$color: function(_) {
      return this._paintData.color;
    },
    set$color: function(_, value) {
      var t1, _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      t1 = _this._paintData;
      t1.color = J.get$runtimeType$(value).$eq(0, C.Type_Color_MG2) ? value : new P.Color((value.get$value(value) & 4294967295) >>> 0);
    },
    set$shader: function(value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.shader = value;
    },
    set$maskFilter: function(value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.maskFilter = value;
    },
    toString$0: function(_) {
      var t1, t2, semicolon, _this = this;
      if (_this.get$style(_this) === C.PaintingStyle_1) {
        t1 = "Paint(" + _this.get$style(_this).toString$0(0);
        _this.get$strokeWidth();
        t2 = _this.get$strokeWidth();
        t1 = t2 !== 0 ? t1 + (" " + H.S(_this.get$strokeWidth())) : t1 + " hairline";
        t2 = _this._paintData.strokeCap;
        if (t2 != null && t2 !== C.StrokeCap_0)
          t1 += " " + H.S(t2);
        semicolon = "; ";
      } else {
        semicolon = "";
        t1 = "Paint(";
      }
      t2 = _this._paintData;
      if (!t2.isAntiAlias) {
        t1 += semicolon + "antialias off";
        semicolon = "; ";
      }
      if (!J.$eq$(t2.color, C.Color_4278190080)) {
        t2 = _this._paintData.color;
        t1 = t2 != null ? t1 + (semicolon + t2.toString$0(0)) : t1 + (semicolon + "no color");
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isPaint: 1
  };
  H.SurfacePaintData.prototype = {
    clone$0: function(_) {
      var _this = this,
        t1 = new H.SurfacePaintData();
      t1.blendMode = _this.blendMode;
      t1.filterQuality = _this.filterQuality;
      t1.maskFilter = _this.maskFilter;
      t1.shader = _this.shader;
      t1.isAntiAlias = _this.isAntiAlias;
      t1.color = _this.color;
      t1.colorFilter = _this.colorFilter;
      t1.strokeWidth = _this.strokeWidth;
      t1.style = _this.style;
      t1.strokeJoin = _this.strokeJoin;
      t1.strokeCap = _this.strokeCap;
      return t1;
    }
  };
  H.SurfacePath.prototype = {
    get$_commands: function() {
      var t1 = this.subpaths;
      t1 = t1.length === 0 ? null : C.JSArray_methods.get$last(t1);
      return t1 == null ? null : t1.commands;
    },
    get$fillType: function() {
      return this._fillType;
    },
    _openNewSubpath$2: function(x, y) {
      var t1 = this.subpaths;
      C.JSArray_methods.add$1(t1, new H.Subpath(x, y, H.setRuntimeTypeInfo([], type$.JSArray_PathCommand)));
      (t1.length === 0 ? null : C.JSArray_methods.get$last(t1)).currentX = x;
      (t1.length === 0 ? null : C.JSArray_methods.get$last(t1)).currentY = y;
    },
    moveTo$2: function(_, x, y) {
      this._openNewSubpath$2(x, y);
      this.get$_commands().push(new H.MoveTo(x, y, 0));
    },
    lineTo$2: function(_, x, y) {
      var t1 = this.subpaths;
      if (t1.length === 0)
        this.moveTo$2(0, 0, 0);
      this.get$_commands().push(new H.LineTo(x, y, 1));
      (t1.length === 0 ? null : C.JSArray_methods.get$last(t1)).currentX = x;
      (t1.length === 0 ? null : C.JSArray_methods.get$last(t1)).currentY = y;
    },
    _ensurePathStarted$0: function() {
      var t1 = this.subpaths;
      if (t1.length === 0)
        C.JSArray_methods.add$1(t1, new H.Subpath(0, 0, H.setRuntimeTypeInfo([], type$.JSArray_PathCommand)));
    },
    quadraticBezierTo$4: function(x1, y1, x2, y2) {
      var t1;
      this._ensurePathStarted$0();
      this.get$_commands().push(new H.QuadraticCurveTo(x1, y1, x2, y2, 4));
      t1 = this.subpaths;
      (t1.length === 0 ? null : C.JSArray_methods.get$last(t1)).currentX = x2;
      (t1.length === 0 ? null : C.JSArray_methods.get$last(t1)).currentY = y2;
    },
    addRect$1: function(rect) {
      var t1 = rect.left,
        t2 = rect.top;
      this._openNewSubpath$2(t1, t2);
      this.get$_commands().push(new H.RectCommand(t1, t2, rect.right - t1, rect.bottom - t2, 6));
    },
    addOval$1: function(oval) {
      var center = oval.get$center(),
        radiusX = (oval.right - oval.left) / 2,
        t1 = center._dx,
        t2 = center._dy;
      this._openNewSubpath$2(t1 + radiusX, t2);
      this.get$_commands().push(new H.Ellipse(t1, t2, radiusX, (oval.bottom - oval.top) / 2, 0, 0, 6.283185307179586, false, 2));
    },
    addRRect$1: function(rrect) {
      var t1 = rrect.blRadiusX,
        t2 = rrect.tlRadiusX,
        leftRadius = Math.max(H.checkNum(t1), H.checkNum(t2));
      t2 = rrect.trRadiusX;
      t1 = rrect.brRadiusX;
      Math.max(H.checkNum(t2), H.checkNum(t1));
      t1 = rrect.left;
      t2 = rrect.top;
      rrect.right;
      this._openNewSubpath$2(t1 + leftRadius, t2);
      this.get$_commands().push(new H.RRectCommand(rrect, 7));
    },
    close$0: function(_) {
      var t1, t2, t3, _null = null;
      this._ensurePathStarted$0();
      this.get$_commands().push(C.CloseCommand_3);
      t1 = this.subpaths;
      t2 = (t1.length === 0 ? _null : C.JSArray_methods.get$last(t1)).startX;
      t3 = (t1.length === 0 ? _null : C.JSArray_methods.get$last(t1)).startY;
      (t1.length === 0 ? _null : C.JSArray_methods.get$last(t1)).currentX = t2;
      (t1.length === 0 ? _null : C.JSArray_methods.get$last(t1)).currentY = t3;
    },
    reset$0: function(_) {
      C.JSArray_methods.set$length(this.subpaths, 0);
    },
    contains$1: function(_, point) {
      var pointX, pointY, cmd, rRect, t2, t3, t4, t5, tlRadiusX, t6, tlRadiusY, t7, trRadiusX, trRadiusY, brRadiusX, brRadiusY, blRadiusX, blRadiusY, size, dpr, t8, t9, t10, recorderDevicePixelRatio, result,
        t1 = this.subpaths,
        subPathCount = t1.length;
      if (subPathCount === 0)
        return false;
      pointX = point._dx;
      pointY = point._dy;
      if (subPathCount === 1) {
        t1 = t1[0].commands;
        if (t1.length === 1) {
          cmd = t1[0];
          if (cmd instanceof H.RectCommand) {
            t1 = cmd.y;
            if (pointY < t1 || pointY > t1 + cmd.height)
              return false;
            t1 = cmd.x;
            if (pointX < t1 || pointX > t1 + cmd.width)
              return false;
            return true;
          } else if (cmd instanceof H.RRectCommand) {
            rRect = cmd.rrect;
            t1 = rRect.top;
            if (pointY < t1 || pointY > rRect.bottom)
              return false;
            t2 = rRect.left;
            if (pointX < t2 || pointX > rRect.right)
              return false;
            t3 = rRect.right;
            t4 = rRect.bottom;
            t5 = (t3 - t2) / 2;
            tlRadiusX = Math.min(H.checkNum(rRect.tlRadiusX), t5);
            t6 = (t4 - t1) / 2;
            tlRadiusY = Math.min(H.checkNum(rRect.tlRadiusY), t6);
            t7 = t2 + tlRadiusX;
            if (pointX < t7 && pointY < t1 + tlRadiusY)
              return H._ellipseContains(pointX, pointY, t7, t1 + tlRadiusY, tlRadiusX, tlRadiusY);
            trRadiusX = Math.min(H.checkNum(rRect.trRadiusX), t5);
            trRadiusY = Math.min(H.checkNum(rRect.trRadiusY), t6);
            t7 = t3 - trRadiusX;
            if (pointX >= t7 && pointY < t1 + trRadiusY)
              return H._ellipseContains(pointX, pointY, t7, t1 + trRadiusY, trRadiusX, trRadiusY);
            brRadiusX = Math.min(H.checkNum(rRect.brRadiusX), t5);
            brRadiusY = Math.min(H.checkNum(rRect.brRadiusY), t6);
            t1 = t3 - brRadiusX;
            if (pointX >= t1 && pointY >= t4 - brRadiusY)
              return H._ellipseContains(pointX, pointY, t1, t4 - brRadiusY, trRadiusX, trRadiusY);
            blRadiusX = Math.min(H.checkNum(rRect.blRadiusX), t5);
            blRadiusY = Math.min(H.checkNum(rRect.blRadiusY), t6);
            t1 = t2 + blRadiusX;
            if (pointX < t1 && pointY >= t4 - blRadiusY)
              return H._ellipseContains(pointX, pointY, t1, t4 - blRadiusY, trRadiusX, trRadiusY);
            return true;
          }
        }
      }
      t1 = $.$get$window();
      size = t1.get$physicalSize();
      t2 = $.SurfacePath__rawRecorder;
      if (t2 != null && t2._devicePixelRatio !== H.EngineWindow_browserDevicePixelRatio())
        $.SurfacePath__rawRecorder = null;
      dpr = t1._debugDevicePixelRatio;
      dpr = dpr != null ? dpr : H.EngineWindow_browserDevicePixelRatio();
      t1 = $.SurfacePath__rawRecorder;
      if (t1 == null) {
        t1 = 0 + size._dx / dpr;
        t2 = 0 + size._dy / dpr;
        t3 = new P.Rect(0, 0, t1, t2);
        t4 = W._ElementFactoryProvider_createElement_tag("flt-canvas", null);
        t5 = H.setRuntimeTypeInfo([], type$.JSArray_Element);
        t6 = H.EngineWindow_browserDevicePixelRatio();
        t1 -= 0;
        t7 = H.BitmapCanvas__widthToPhysical(t1);
        t2 -= 0;
        t8 = H.BitmapCanvas__heightToPhysical(t2);
        t1 = H.BitmapCanvas__widthToPhysical(t1);
        t2 = H.BitmapCanvas__heightToPhysical(t2);
        t9 = H.setRuntimeTypeInfo([], type$.JSArray__SaveStackEntry);
        t10 = new H.Matrix40(new Float32Array(16));
        t10.setIdentity$0();
        t6 = new P.RawRecordingCanvas(t3, t4, new H._CanvasPool(t1, t2, t9, t10), t5, t7, t8, t6);
        t6.BitmapCanvas$1(t3);
        $.SurfacePath__rawRecorder = t6;
        t1 = t6;
      }
      t1._canvasPool.translate$2(0, -1, -1);
      t1 = $.SurfacePath__rawRecorder;
      t2 = new H.SurfacePaint(new H.SurfacePaintData());
      t2.set$color(0, C.Color_4278190080);
      t2._frozen = true;
      t1.drawPath$2(this, t2._paintData);
      t2 = $.SurfacePath__rawRecorder;
      recorderDevicePixelRatio = t2._devicePixelRatio;
      t2 = t2._canvasPool;
      result = t2.get$context(t2).isPointInPath(pointX * recorderDevicePixelRatio, pointY * recorderDevicePixelRatio);
      $.SurfacePath__rawRecorder.clear$0(0);
      return result;
    },
    shift$1: function(offset) {
      var t1, t2, _i,
        shiftedSubPaths = H.setRuntimeTypeInfo([], type$.JSArray_Subpath);
      for (t1 = this.subpaths, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        shiftedSubPaths.push(t1[_i].shift$1(offset));
      return new H.SurfacePath(shiftedSubPaths, this._fillType);
    },
    getBounds$0: function(_) {
      var t1, t2, ltrbInitialized, left, $top, right, bottom, curX, curY, minX, maxX, minY, maxY, _i, t3, t4, _i0, op, rx, ry, t5, cosVal, sinVal, rxCos, ryCos, rxSin, rySin, leftDeltaX, rightDeltaX, topDeltaY, bottomDeltaY, centerX, centerY, rotatedX, rotatedY, rotatedX0, rotatedY0, cpX, cpY, x2, y2, denom, t10, tprime, t6, extremaX, extremaY, t20, tprime2, extrema2X, extrema2Y, cpX1, cpY1, cpX2, cpY2, endX, endY, a, b, s, t, t7, width, top0, height, rRect;
      for (t1 = this.subpaths, t2 = t1.length, ltrbInitialized = false, left = 0, $top = 0, right = 0, bottom = 0, curX = 0, curY = 0, minX = 0, maxX = 0, minY = 0, maxY = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        for (t3 = t1[_i].commands, t4 = t3.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i0) {
          op = t3[_i0];
          switch (op.type) {
            case 0:
              maxX = op.x;
              maxY = op.y;
              minY = maxY;
              minX = maxX;
              curY = minY;
              curX = minX;
              break;
            case 1:
              maxX = op.x;
              maxY = op.y;
              minY = maxY;
              minX = maxX;
              curY = minY;
              curX = minX;
              break;
            case 2:
              rx = op.radiusX;
              ry = op.radiusY;
              t5 = op.rotation;
              cosVal = Math.cos(t5);
              sinVal = Math.sin(t5);
              rxCos = rx * cosVal;
              ryCos = ry * cosVal;
              rxSin = rx * sinVal;
              rySin = ry * sinVal;
              leftDeltaX = rxCos - rySin;
              rightDeltaX = -rxCos - rySin;
              topDeltaY = ryCos + rxSin;
              bottomDeltaY = ryCos - rxSin;
              centerX = op.x;
              centerY = op.y;
              rotatedX = centerX + leftDeltaX;
              rotatedY = centerY + topDeltaY;
              rotatedX0 = centerX + rightDeltaX;
              rotatedY0 = centerY + bottomDeltaY;
              minX = Math.min(rotatedX, rotatedX0);
              maxX = Math.max(rotatedX, rotatedX0);
              minY = Math.min(rotatedY, rotatedY0);
              maxY = Math.max(rotatedY, rotatedY0);
              rotatedX = centerX - leftDeltaX;
              rotatedY = centerY - topDeltaY;
              minX = Math.min(minX, rotatedX);
              maxX = Math.max(maxX, rotatedX);
              minY = Math.min(minY, rotatedY);
              maxY = Math.max(maxY, rotatedY);
              rotatedX = centerX - rightDeltaX;
              rotatedY = centerY - bottomDeltaY;
              minX = Math.min(minX, rotatedX);
              maxX = Math.max(maxX, rotatedX);
              minY = Math.min(minY, rotatedY);
              maxY = Math.max(maxY, rotatedY);
              curX = centerX + rx;
              curY = centerY;
              break;
            case 4:
              cpX = op.x1;
              cpY = op.y1;
              x2 = op.x2;
              y2 = op.y2;
              minX = Math.min(H.checkNum(curX), x2);
              minY = Math.min(H.checkNum(curY), y2);
              maxX = Math.max(H.checkNum(curX), x2);
              maxY = Math.max(H.checkNum(curY), y2);
              denom = curX - 2 * cpX + x2;
              if (Math.abs(denom) > 1e-9) {
                t10 = (curX - cpX) / denom;
                if (t10 >= 0 && t10 <= 1) {
                  tprime = 1 - t10;
                  t5 = tprime * tprime;
                  t6 = 2 * t10 * tprime;
                  t10 *= t10;
                  extremaX = t5 * curX + t6 * cpX + t10 * x2;
                  extremaY = t5 * curY + t6 * cpY + t10 * y2;
                  minX = Math.min(minX, extremaX);
                  maxX = Math.max(maxX, extremaX);
                  minY = Math.min(minY, extremaY);
                  maxY = Math.max(maxY, extremaY);
                }
              }
              denom = curY - 2 * cpY + y2;
              if (Math.abs(denom) > 1e-9) {
                t20 = (curY - cpY) / denom;
                if (t20 >= 0 && t20 <= 1) {
                  tprime2 = 1 - t20;
                  t5 = tprime2 * tprime2;
                  t6 = 2 * t20 * tprime2;
                  t20 *= t20;
                  extrema2X = t5 * curX + t6 * cpX + t20 * x2;
                  extrema2Y = t5 * curY + t6 * cpY + t20 * y2;
                  minX = Math.min(minX, extrema2X);
                  maxX = Math.max(maxX, extrema2X);
                  minY = Math.min(minY, extrema2Y);
                  maxY = Math.max(maxY, extrema2Y);
                }
              }
              curY = y2;
              curX = x2;
              break;
            case 5:
              cpX1 = op.x1;
              cpY1 = op.y1;
              cpX2 = op.x2;
              cpY2 = op.y2;
              endX = op.x3;
              endY = op.y3;
              minX = Math.min(H.checkNum(curX), endX);
              minY = Math.min(H.checkNum(curY), endY);
              maxX = Math.max(H.checkNum(curX), endX);
              maxY = Math.max(H.checkNum(curY), endY);
              if (!(curX < cpX1 && cpX1 < cpX2 && cpX2 < endX))
                t5 = curX > cpX1 && cpX1 > cpX2 && cpX2 > endX;
              else
                t5 = true;
              if (!t5) {
                t5 = -curX;
                a = t5 + 3 * (cpX1 - cpX2) + endX;
                b = 2 * (curX - 2 * cpX1 + cpX2);
                s = b * b - 4 * a * (t5 + cpX1);
                if (s >= 0 && Math.abs(a) > 1e-9) {
                  t5 = -b;
                  t6 = 2 * a;
                  if (s === 0) {
                    t = t5 / t6;
                    tprime = 1 - t;
                    if (t >= 0 && t <= 1) {
                      t5 = 3 * tprime;
                      extremaX = tprime * tprime * tprime * curX + t5 * tprime * t * cpX1 + t5 * t * t * cpX2 + t * t * t * endX;
                      minX = Math.min(extremaX, minX);
                      maxX = Math.max(extremaX, maxX);
                    }
                  } else {
                    s = Math.sqrt(s);
                    t = (t5 - s) / t6;
                    tprime = 1 - t;
                    if (t >= 0 && t <= 1) {
                      t7 = 3 * tprime;
                      extremaX = tprime * tprime * tprime * curX + t7 * tprime * t * cpX1 + t7 * t * t * cpX2 + t * t * t * endX;
                      minX = Math.min(extremaX, minX);
                      maxX = Math.max(extremaX, maxX);
                    }
                    t = (t5 + s) / t6;
                    tprime = 1 - t;
                    if (t >= 0 && t <= 1) {
                      t5 = 3 * tprime;
                      extremaX = tprime * tprime * tprime * curX + t5 * tprime * t * cpX1 + t5 * t * t * cpX2 + t * t * t * endX;
                      minX = Math.min(extremaX, minX);
                      maxX = Math.max(extremaX, maxX);
                    }
                  }
                }
              }
              if (!(curY < cpY1 && cpY1 < cpY2 && cpY2 < endY))
                t5 = curY > cpY1 && cpY1 > cpY2 && cpY2 > endY;
              else
                t5 = true;
              if (!t5) {
                t5 = -curY;
                a = t5 + 3 * (cpY1 - cpY2) + endY;
                b = 2 * (curY - 2 * cpY1 + cpY2);
                s = b * b - 4 * a * (t5 + cpY1);
                if (s >= 0 && Math.abs(a) > 1e-9) {
                  t5 = -b;
                  t6 = 2 * a;
                  if (s === 0) {
                    t = t5 / t6;
                    tprime = 1 - t;
                    if (t >= 0 && t <= 1) {
                      t5 = 3 * tprime;
                      extremaY = tprime * tprime * tprime * curY + t5 * tprime * t * cpY1 + t5 * t * t * cpY2 + t * t * t * endY;
                      minY = Math.min(extremaY, minY);
                      maxY = Math.max(extremaY, maxY);
                    }
                  } else {
                    s = Math.sqrt(s);
                    t = (t5 - s) / t6;
                    tprime = 1 - t;
                    if (t >= 0 && t <= 1) {
                      t7 = 3 * tprime;
                      extremaY = tprime * tprime * tprime * curY + t7 * tprime * t * cpY1 + t7 * t * t * cpY2 + t * t * t * endY;
                      minY = Math.min(extremaY, minY);
                      maxY = Math.max(extremaY, maxY);
                    }
                    t20 = (t5 + s) / t6;
                    tprime2 = 1 - t20;
                    if (t20 >= 0 && t20 <= 1) {
                      t5 = 3 * tprime2;
                      extremaY = tprime2 * tprime2 * tprime2 * curY + t5 * tprime2 * t20 * cpY1 + t5 * t20 * t20 * cpY2 + t20 * t20 * t20 * endY;
                      minY = Math.min(extremaY, minY);
                      maxY = Math.max(extremaY, maxY);
                    }
                  }
                }
              }
              break;
            case 6:
              left = op.x;
              width = op.width;
              if (width < 0) {
                left -= width;
                width = -width;
              }
              top0 = op.y;
              height = op.height;
              if (height < 0) {
                top0 -= height;
                height = -height;
              }
              maxX = left + width;
              maxY = top0 + height;
              minY = top0;
              minX = left;
              curY = minY;
              curX = minX;
              break;
            case 7:
              rRect = op.rrect;
              minX = rRect.left;
              maxX = minX + (rRect.right - minX);
              minY = rRect.top;
              maxY = minY + (rRect.bottom - minY);
              curY = minY;
              curX = minX;
              break;
            case 3:
            default:
              break;
          }
          if (!ltrbInitialized) {
            bottom = maxY;
            right = maxX;
            $top = minY;
            left = minX;
            ltrbInitialized = true;
          } else {
            left = Math.min(H.checkNum(left), H.checkNum(minX));
            right = Math.max(H.checkNum(right), H.checkNum(maxX));
            $top = Math.min(H.checkNum($top), H.checkNum(minY));
            bottom = Math.max(H.checkNum(bottom), H.checkNum(maxY));
          }
        }
      return ltrbInitialized ? new P.Rect(left, $top, right, bottom) : C.Rect_0_0_0_0;
    },
    get$webOnlyPathAsRoundedRect: function() {
      var command,
        t1 = this.subpaths;
      if (t1.length !== 1)
        return null;
      t1 = t1[0].commands;
      if (t1.length !== 1)
        return null;
      command = t1[0];
      return command instanceof H.RRectCommand ? command.rrect : null;
    },
    get$webOnlyPathAsRect: function() {
      var command, t2,
        t1 = this.subpaths;
      if (t1.length !== 1)
        return null;
      t1 = t1[0].commands;
      if (t1.length !== 1)
        return null;
      command = t1[0];
      if (command instanceof H.RectCommand) {
        t1 = command.x;
        t2 = command.y;
        t2 = new P.Rect(t1, t2, t1 + command.width, t2 + command.height);
        t1 = t2;
      } else
        t1 = null;
      return t1;
    },
    get$webOnlyPathAsCircle: function() {
      var command,
        t1 = this.subpaths;
      if (t1.length !== 1)
        return null;
      t1 = t1[0].commands;
      if (t1.length !== 1)
        return null;
      command = t1[0];
      if (command instanceof H.Ellipse)
        if (C.JSNumber_methods.$mod(command.endAngle - command.startAngle, 6.283185307179586) === 0)
          return command;
      return null;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    },
    $isPath: 1
  };
  H._PaintRequest.prototype = {};
  H.PersistedStandardPicture.prototype = {
    matchForUpdate$1: function(existingSurface) {
      var didRequireBitmap, requiresBitmap, oldCanvas, oldPixelCount, _this = this,
        t1 = existingSurface.picture,
        t2 = _this.picture;
      if (t1 == t2)
        return 0;
      t1 = t1.recordingCanvas;
      if (!t1._didDraw)
        return 1;
      didRequireBitmap = t1._hasArbitraryPaint;
      requiresBitmap = t2.recordingCanvas._hasArbitraryPaint;
      if (didRequireBitmap !== requiresBitmap)
        return 1;
      else if (!requiresBitmap)
        return 1;
      else {
        oldCanvas = existingSurface.__engine$_canvas;
        if (!oldCanvas.doesFitBounds$1(_this._exactLocalCullRect))
          return 1;
        else {
          t1 = _this._exactLocalCullRect;
          t1 = H.BitmapCanvas__widthToPhysical(t1.right - t1.left);
          t2 = _this._exactLocalCullRect;
          t2 = H.BitmapCanvas__heightToPhysical(t2.bottom - t2.top);
          oldPixelCount = oldCanvas._widthInBitmapPixels * oldCanvas._heightInBitmapPixels;
          if (oldPixelCount === 0)
            return 1;
          return 1 - t1 * t2 / oldPixelCount;
        }
      }
    },
    _applyBitmapPaint$1: function(oldCanvas) {
      var t1, t2, _this = this;
      if (oldCanvas instanceof H.BitmapCanvas && oldCanvas.doesFitBounds$1(_this._optimalLocalCullRect) && oldCanvas._devicePixelRatio === H.EngineWindow_browserDevicePixelRatio()) {
        oldCanvas.set$bounds(0, _this._optimalLocalCullRect);
        _this.__engine$_canvas = oldCanvas;
        oldCanvas.clear$0(0);
        _this.picture.recordingCanvas.apply$2(_this.__engine$_canvas, _this._optimalLocalCullRect);
      } else {
        H._recycleCanvas(oldCanvas);
        t1 = $._paintQueue;
        t2 = _this._optimalLocalCullRect;
        t1.push(new H._PaintRequest(new P.Size(t2.right - t2.left, t2.bottom - t2.top), new H.PersistedStandardPicture__applyBitmapPaint_closure(_this)));
      }
    },
    _findOrCreateCanvas$1: function(bounds) {
      var boundsWidth, boundsHeight, requestedPixelCount, t3, bestRecycledCanvas, lastPixelCount, i, candidate, ratio, t4, t5, candidatePixelCount, fits, isSmaller, canvas,
        t1 = bounds.right - bounds.left,
        t2 = bounds.bottom - bounds.top;
      for (boundsWidth = t1 + 1, boundsHeight = t2 + 1, requestedPixelCount = t1 * t2, t3 = requestedPixelCount > 1, bestRecycledCanvas = null, lastPixelCount = 1 / 0, i = 0; i < $._recycledCanvases.length; ++i) {
        candidate = $._recycledCanvases[i];
        ratio = window.devicePixelRatio;
        t4 = ratio == null || ratio === 0 ? 1 : ratio;
        if (candidate._devicePixelRatio !== t4)
          continue;
        t4 = candidate._bounds;
        t5 = t4.right - t4.left;
        t4 = t4.bottom - t4.top;
        candidatePixelCount = t5 * t4;
        ratio = window.devicePixelRatio;
        if (candidate._widthInBitmapPixels >= C.JSNumber_methods.ceil$0(boundsWidth * (ratio == null || ratio === 0 ? 1 : ratio)) + 2) {
          ratio = window.devicePixelRatio;
          fits = candidate._heightInBitmapPixels >= C.JSNumber_methods.ceil$0(boundsHeight * (ratio == null || ratio === 0 ? 1 : ratio)) + 2;
        } else
          fits = false;
        isSmaller = candidatePixelCount < lastPixelCount;
        if (fits && isSmaller)
          if (!(isSmaller && t3 && candidatePixelCount / requestedPixelCount > 4)) {
            if (t5 === t1 && t4 === t2) {
              bestRecycledCanvas = candidate;
              break;
            }
            lastPixelCount = candidatePixelCount;
            bestRecycledCanvas = candidate;
          }
      }
      if (bestRecycledCanvas != null) {
        C.JSArray_methods.remove$1($._recycledCanvases, bestRecycledCanvas);
        bestRecycledCanvas.set$bounds(0, bounds);
        return bestRecycledCanvas;
      }
      canvas = H.BitmapCanvas$(bounds);
      return canvas;
    }
  };
  H.PersistedStandardPicture__applyBitmapPaint_closure.prototype = {
    call$0: function() {
      var t2, t3,
        t1 = this.$this;
      t1.__engine$_canvas = t1._findOrCreateCanvas$1(t1._optimalLocalCullRect);
      $.$get$domRenderer().clearDom$1(t1.rootElement);
      t2 = t1.rootElement;
      t3 = t1.__engine$_canvas;
      t2.appendChild(t3.get$rootElement(t3));
      t1.__engine$_canvas.clear$0(0);
      t1.picture.recordingCanvas.apply$2(t1.__engine$_canvas, t1._optimalLocalCullRect);
    },
    $signature: 0
  };
  H.PersistedPicture.prototype = {
    createElement$0: function(_) {
      return this.defaultCreateElement$1("flt-picture");
    },
    recomputeTransformAndClip$0: function() {
      var t2, t3, _this = this,
        t1 = _this.parent.__engine$_transform;
      _this.__engine$_transform = t1;
      t2 = _this.dx;
      if (t2 !== 0 || _this.dy !== 0) {
        t1.toString;
        t3 = new H.Matrix40(new Float32Array(16));
        t3.setFrom$1(t1);
        _this.__engine$_transform = t3;
        t3.translate$2(0, t2, _this.dy);
      }
      _this._computeExactCullRects$0();
    },
    _computeExactCullRects$0: function() {
      var clipTransform, bounds, localClipBounds, localInverse, t1, t2, _this = this,
        parentSurface = _this.parent;
      if (parentSurface._projectedClip == null) {
        clipTransform = new H.Matrix40(new Float32Array(16));
        clipTransform.setIdentity$0();
        for (bounds = null; parentSurface != null;) {
          localClipBounds = parentSurface._localClipBounds;
          if (localClipBounds != null)
            bounds = bounds == null ? H.transformRect(clipTransform, localClipBounds) : bounds.intersect$1(H.transformRect(clipTransform, localClipBounds));
          localInverse = parentSurface.get$localTransformInverse();
          if (localInverse != null && !localInverse.isIdentity$0(0))
            clipTransform.multiply$1(0, localInverse);
          parentSurface = parentSurface.parent;
        }
        if (bounds != null)
          t1 = bounds.right - bounds.left <= 0 || bounds.bottom - bounds.top <= 0;
        else
          t1 = false;
        if (t1)
          bounds = C.Rect_0_0_0_0;
        t1 = _this.parent;
        t1._projectedClip = bounds;
      } else
        t1 = parentSurface;
      t1 = t1._projectedClip;
      t2 = _this.localPaintBounds;
      if (t1 == null) {
        _this._exactLocalCullRect = t2;
        t1 = t2;
      } else
        t1 = _this._exactLocalCullRect = t2.intersect$1(t1);
      if (t1.right - t1.left <= 0 || t1.bottom - t1.top <= 0)
        _this._exactGlobalCullRect = _this._exactLocalCullRect = C.Rect_0_0_0_0;
    },
    _computeOptimalCullRect$1: function(oldSurface) {
      var oldOptimalLocalCullRect, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, newLocalCullRect, _this = this;
      if (oldSurface == null || !oldSurface.picture.recordingCanvas._didDraw) {
        _this._optimalLocalCullRect = _this._exactLocalCullRect;
        return true;
      }
      oldOptimalLocalCullRect = oldSurface === _this ? _this._optimalLocalCullRect : oldSurface._optimalLocalCullRect;
      if (J.$eq$(_this._exactLocalCullRect, C.Rect_0_0_0_0)) {
        _this._optimalLocalCullRect = C.Rect_0_0_0_0;
        return !J.$eq$(oldOptimalLocalCullRect, C.Rect_0_0_0_0);
      }
      t1 = _this._exactLocalCullRect;
      if (H.rectContainsOther(oldOptimalLocalCullRect, t1)) {
        _this._optimalLocalCullRect = oldOptimalLocalCullRect;
        return false;
      }
      t2 = oldOptimalLocalCullRect.left;
      t3 = t1.left;
      t4 = oldOptimalLocalCullRect.top;
      t5 = t1.top;
      t6 = t1.right;
      t7 = oldOptimalLocalCullRect.right;
      t1 = t1.bottom;
      t8 = oldOptimalLocalCullRect.bottom;
      t9 = t6 - t3;
      t10 = t1 - t5;
      newLocalCullRect = new P.Rect(t3 - H.PersistedPicture__predictTrend(t2 - t3, t9), t5 - H.PersistedPicture__predictTrend(t4 - t5, t10), t6 + H.PersistedPicture__predictTrend(t6 - t7, t9), t1 + H.PersistedPicture__predictTrend(t1 - t8, t10)).intersect$1(_this.localPaintBounds);
      t10 = J.$eq$(_this._optimalLocalCullRect, newLocalCullRect);
      _this._optimalLocalCullRect = newLocalCullRect;
      return !t10;
    },
    _applyPaint$1: function(oldSurface) {
      var t2, t3, t4, t5, t6, _this = this,
        oldCanvas = oldSurface == null ? null : oldSurface.__engine$_canvas,
        t1 = _this.picture.recordingCanvas;
      if (!t1._didDraw) {
        H._recycleCanvas(oldCanvas);
        $.$get$domRenderer().clearDom$1(_this.rootElement);
        return;
      }
      if (t1._hasArbitraryPaint)
        _this._applyBitmapPaint$1(oldCanvas);
      else {
        H._recycleCanvas(oldCanvas);
        t2 = W._ElementFactoryProvider_createElement_tag("flt-dom-canvas", null);
        t3 = H.setRuntimeTypeInfo([], type$.JSArray__SaveElementStackEntry);
        t4 = H.setRuntimeTypeInfo([], type$.JSArray_Element);
        t5 = new H.Matrix40(new Float32Array(16));
        t5.setIdentity$0();
        t6 = t2.style;
        t6.position = "absolute";
        t6.top = "0";
        t6.right = "0";
        t6.bottom = "0";
        t6.left = "0";
        _this.__engine$_canvas = new H.DomCanvas(t2, t3, t4, t5);
        $.$get$domRenderer().clearDom$1(_this.rootElement);
        t2 = _this.rootElement;
        t3 = _this.__engine$_canvas;
        t2.appendChild(t3.get$rootElement(t3));
        t1.apply$2(_this.__engine$_canvas, _this._optimalLocalCullRect);
      }
      _this._didApplyPaint.value = true;
    },
    _applyTranslate$0: function() {
      var t1 = this.rootElement.style,
        t2 = "translate(" + H.S(this.dx) + "px, " + H.S(this.dy) + "px)";
      t1.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
    },
    apply$0: function() {
      this._applyTranslate$0();
      this._applyPaint$1(null);
    },
    build$0: function() {
      this._computeOptimalCullRect$1(null);
      this.super$PersistedSurface$build();
    },
    update$1: function(_, oldSurface) {
      var cullRectChangeRequiresRepaint, _this = this;
      _this.super$PersistedSurface$update(0, oldSurface);
      if (_this.dx != oldSurface.dx || _this.dy != oldSurface.dy)
        _this._applyTranslate$0();
      cullRectChangeRequiresRepaint = _this._computeOptimalCullRect$1(oldSurface);
      if (_this.picture == oldSurface.picture)
        if (cullRectChangeRequiresRepaint)
          _this._applyPaint$1(oldSurface);
        else
          _this.__engine$_canvas = oldSurface.__engine$_canvas;
      else
        _this._applyPaint$1(oldSurface);
    },
    retain$0: function() {
      var _this = this;
      _this.super$PersistedSurface$retain();
      if (_this._computeOptimalCullRect$1(_this))
        _this._applyPaint$1(_this);
    },
    discard$0: function() {
      H._recycleCanvas(this.__engine$_canvas);
      this.super$PersistedSurface$discard();
    }
  };
  H.RecordingCanvas.prototype = {
    apply$2: function(engineCanvas, clipRect) {
      var i, len, i0, len0, command, e, t1, exception;
      try {
        if (H.rectContainsOther(clipRect, this._pictureBounds))
          for (i = 0, t1 = this._commands, len = t1.length; i < len; ++i)
            t1[i].apply$1(engineCanvas);
        else
          for (i0 = 0, t1 = this._commands, len0 = t1.length; i0 < len0; ++i0) {
            command = t1[i0];
            if (command instanceof H.DrawCommand)
              if (command.isInvisible$1(clipRect))
                continue;
            command.apply$1(engineCanvas);
          }
      } catch (exception) {
        e = H.unwrapException(exception);
        if (!J.$eq$(e.name, "NS_ERROR_FAILURE"))
          throw exception;
      }
      engineCanvas.endOfPaint$0();
    },
    drawRect$2: function(rect, paint) {
      var paintSpread, command, _this = this,
        t1 = paint._paintData;
      if (t1.shader != null)
        _this._hasArbitraryPaint = true;
      _this._didDraw = true;
      paintSpread = H._getPaintSpread(paint);
      paint._frozen = true;
      command = new H.PaintDrawRect(rect, t1, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t1 = _this._paintBounds;
      if (paintSpread !== 0)
        t1.grow$2(rect.inflate$1(paintSpread), command);
      else
        t1.grow$2(rect, command);
      _this._commands.push(command);
    },
    drawRRect$2: function(rrect, paint) {
      var paintSpread, t2, t3, t4, t5, t6, t7, command, _this = this,
        t1 = paint._paintData;
      if (t1.shader != null || !rrect.webOnlyUniformRadii)
        _this._hasArbitraryPaint = true;
      _this._didDraw = true;
      paintSpread = H._getPaintSpread(paint);
      t2 = rrect.left;
      t3 = rrect.right;
      t4 = Math.min(H.checkNum(t2), H.checkNum(t3));
      t5 = rrect.top;
      t6 = rrect.bottom;
      t7 = Math.min(H.checkNum(t5), H.checkNum(t6));
      t3 = Math.max(H.checkNum(t2), H.checkNum(t3));
      t6 = Math.max(H.checkNum(t5), H.checkNum(t6));
      paint._frozen = true;
      command = new H.PaintDrawRRect(rrect, t1, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      _this._paintBounds.growLTRB$5(t4 - paintSpread, t7 - paintSpread, t3 + paintSpread, t6 + paintSpread, command);
      _this._commands.push(command);
    },
    drawDRRect$3: function(outer, inner, paint) {
      var scaledOuter, scaledInner, outerTl, outerTr, outerBl, outerBr, innerTl, innerTr, innerBl, innerBr, paintSpread, command, _this = this,
        innerRect = new P.Rect(inner.left, inner.top, inner.right, inner.bottom),
        t1 = outer.left,
        t2 = outer.top,
        t3 = outer.right,
        t4 = outer.bottom,
        outerRect = new P.Rect(t1, t2, t3, t4);
      if (outerRect.$eq(0, innerRect) || !outerRect.intersect$1(innerRect).$eq(0, innerRect))
        return;
      scaledOuter = outer.scaleRadii$0();
      scaledInner = inner.scaleRadii$0();
      outerTl = H._measureBorderRadius(scaledOuter.tlRadiusX, scaledOuter.tlRadiusY);
      outerTr = H._measureBorderRadius(scaledOuter.trRadiusX, scaledOuter.trRadiusY);
      outerBl = H._measureBorderRadius(scaledOuter.blRadiusX, scaledOuter.blRadiusY);
      outerBr = H._measureBorderRadius(scaledOuter.brRadiusX, scaledOuter.brRadiusY);
      innerTl = H._measureBorderRadius(scaledInner.tlRadiusX, scaledInner.tlRadiusY);
      innerTr = H._measureBorderRadius(scaledInner.trRadiusX, scaledInner.trRadiusY);
      innerBl = H._measureBorderRadius(scaledInner.blRadiusX, scaledInner.blRadiusY);
      innerBr = H._measureBorderRadius(scaledInner.brRadiusX, scaledInner.brRadiusY);
      if (innerTl > outerTl || innerTr > outerTr || innerBl > outerBl || innerBr > outerBr)
        return;
      _this._didDraw = _this._hasArbitraryPaint = true;
      paintSpread = H._getPaintSpread(paint);
      paint._frozen = true;
      command = new H.PaintDrawDRRect(outer, inner, paint._paintData, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      _this._paintBounds.growLTRB$5(t1 - paintSpread, t2 - paintSpread, t3 + paintSpread, t4 + paintSpread, command);
      _this._commands.push(command);
    },
    drawPath$2: function(path, paint) {
      var rect, rrect, pathBounds, paintSpread, clone, command, _this = this;
      if (paint._paintData.shader == null) {
        rect = path.get$webOnlyPathAsRect();
        if (rect != null) {
          _this.drawRect$2(rect, paint);
          return;
        }
        rrect = path.get$webOnlyPathAsRoundedRect();
        if (rrect != null) {
          _this.drawRRect$2(rrect, paint);
          return;
        }
      }
      _this._didDraw = _this._hasArbitraryPaint = true;
      pathBounds = path.getBounds$0(0);
      paintSpread = H._getPaintSpread(paint);
      if (paintSpread !== 0)
        pathBounds = pathBounds.inflate$1(paintSpread);
      clone = new H.SurfacePath(P.List_List$from(path.subpaths, true, type$.Subpath), C.PathFillType_0);
      paint._frozen = true;
      command = new H.PaintDrawPath(clone, paint._paintData, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      _this._paintBounds.grow$2(pathBounds, command);
      clone._fillType = path.get$fillType();
      _this._commands.push(command);
    },
    drawParagraph$2: function(paragraph, offset) {
      var left, $top, command, _this = this;
      if (paragraph._measurementResult == null)
        return;
      _this._didDraw = true;
      if (paragraph._geometricStyle.ellipsis != null)
        _this._hasArbitraryPaint = true;
      left = offset._dx;
      $top = offset._dy;
      command = new H.PaintDrawParagraph(paragraph, offset, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      _this._paintBounds.growLTRB$5(left, $top, left + paragraph.get$width(paragraph), $top + paragraph.get$height(paragraph), command);
      _this._commands.push(command);
    }
  };
  H.PaintCommand.prototype = {};
  H.DrawCommand.prototype = {
    isInvisible$1: function(clipRect) {
      var _this = this;
      if (_this.isClippedOut)
        return true;
      return _this.bottomBound < clipRect.top || _this.topBound > clipRect.bottom || _this.rightBound < clipRect.left || _this.leftBound > clipRect.right;
    }
  };
  H.PaintSave.prototype = {
    apply$1: function(canvas) {
      canvas.save$0(0);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintRestore.prototype = {
    apply$1: function(canvas) {
      canvas.restore$0(0);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintTranslate.prototype = {
    apply$1: function(canvas) {
      canvas.translate$2(0, this.dx, this.dy);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintScale.prototype = {
    apply$1: function(canvas) {
      canvas.scale$2(0, this.sx, this.sy);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintRotate.prototype = {
    apply$1: function(canvas) {
      canvas.rotate$1(0, this.radians);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintTransform.prototype = {
    apply$1: function(canvas) {
      canvas.transform$1(0, this.matrix4);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintClipRect.prototype = {
    apply$1: function(canvas) {
      canvas.clipRect$1(this.rect);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintClipRRect.prototype = {
    apply$1: function(canvas) {
      canvas.clipRRect$1(this.rrect);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintClipPath.prototype = {
    apply$1: function(canvas) {
      canvas.clipPath$1(0, this.path);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawLine.prototype = {
    apply$1: function(canvas) {
      canvas.drawLine$3(this.p1, this.p2, this.paint);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawRect.prototype = {
    apply$1: function(canvas) {
      canvas.drawRect$2(this.rect, this.paint);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawRRect.prototype = {
    apply$1: function(canvas) {
      canvas.drawRRect$2(this.rrect, this.paint);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawDRRect.prototype = {
    apply$1: function(canvas) {
      canvas.drawDRRect$3(this.outer, this.inner, this.paint);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawCircle.prototype = {
    apply$1: function(canvas) {
      canvas.drawCircle$3(this.c, this.radius, this.paint);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawPath.prototype = {
    apply$1: function(canvas) {
      canvas.drawPath$2(this.path, this.paint);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawShadow.prototype = {
    apply$1: function(canvas) {
      var _this = this;
      canvas.drawShadow$4(_this.path, _this.color, _this.elevation, _this.transparentOccluder);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawParagraph.prototype = {
    apply$1: function(canvas) {
      canvas.drawParagraph$2(this.paragraph, this.offset);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.Subpath.prototype = {
    shift$1: function(offset) {
      var _i, _this = this,
        t1 = offset._dx,
        t2 = offset._dy,
        t3 = H.setRuntimeTypeInfo([], type$.JSArray_PathCommand),
        result = new H.Subpath(_this.startX + t1, _this.startY + t2, t3);
      result.currentX = _this.currentX + t1;
      result.currentY = _this.currentY + t2;
      for (t1 = _this.commands, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t3.push(t1[_i].shifted$1(offset));
      return result;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PathCommand.prototype = {};
  H.MoveTo.prototype = {
    shifted$1: function(offset) {
      return new H.MoveTo(this.x + offset._dx, this.y + offset._dy, 0);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.LineTo.prototype = {
    shifted$1: function(offset) {
      return new H.LineTo(this.x + offset._dx, this.y + offset._dy, 1);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.Ellipse.prototype = {
    shifted$1: function(offset) {
      var _this = this;
      return new H.Ellipse(_this.x + offset._dx, _this.y + offset._dy, _this.radiusX, _this.radiusY, _this.rotation, _this.startAngle, _this.endAngle, _this.anticlockwise, 2);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.QuadraticCurveTo.prototype = {
    shifted$1: function(offset) {
      var _this = this,
        t1 = offset._dx,
        t2 = offset._dy;
      return new H.QuadraticCurveTo(_this.x1 + t1, _this.y1 + t2, _this.x2 + t1, _this.y2 + t2, 4);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.RectCommand.prototype = {
    shifted$1: function(offset) {
      var _this = this;
      return new H.RectCommand(_this.x + offset._dx, _this.y + offset._dy, _this.width, _this.height, 6);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.RRectCommand.prototype = {
    shifted$1: function(offset) {
      return new H.RRectCommand(this.rrect.shift$1(offset), 7);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.CloseCommand.prototype = {
    shifted$1: function(offset) {
      return this;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H._PaintBounds.prototype = {
    clipRect$2: function(rect, command) {
      var t1, t4, t3, t2, _this = this,
        left = rect.left,
        $top = rect.top,
        right = rect.right,
        bottom = rect.bottom;
      if (!_this._currentMatrixIsIdentity) {
        t1 = $.$get$_PaintBounds__tempRectData();
        t1[0] = left;
        t1[1] = $top;
        t1[2] = right;
        t1[3] = bottom;
        H.transformLTRB(_this._currentMatrix, t1);
        left = t1[0];
        $top = t1[1];
        right = t1[2];
        bottom = t1[3];
      }
      if (!_this._clipRectInitialized) {
        _this._currentClipLeft = left;
        _this._currentClipTop = $top;
        _this._currentClipRight = right;
        _this._currentClipBottom = bottom;
        _this._clipRectInitialized = true;
        t4 = bottom;
        t3 = right;
        t2 = $top;
        t1 = left;
      } else {
        t1 = _this._currentClipLeft;
        if (left > t1) {
          _this._currentClipLeft = left;
          t1 = left;
        }
        t2 = _this._currentClipTop;
        if ($top > t2) {
          _this._currentClipTop = $top;
          t2 = $top;
        }
        t3 = _this._currentClipRight;
        if (right < t3) {
          _this._currentClipRight = right;
          t3 = right;
        }
        t4 = _this._currentClipBottom;
        if (bottom < t4) {
          _this._currentClipBottom = bottom;
          t4 = bottom;
        }
      }
      if (t1 >= t3 || t2 >= t4)
        command.isClippedOut = true;
      else {
        command.leftBound = t1;
        command.topBound = t2;
        command.rightBound = t3;
        command.bottomBound = t4;
      }
    },
    grow$2: function(r, command) {
      this.growLTRB$5(r.left, r.top, r.right, r.bottom, command);
    },
    growLTRB$5: function(left, $top, right, bottom, command) {
      var t1, transformedPointLeft, transformedPointTop, transformedPointRight, transformedPointBottom, transformedPointRight0, transformedPointLeft0, transformedPointBottom0, transformedPointTop0, _this = this;
      if (left == right || $top == bottom) {
        command.isClippedOut = true;
        return;
      }
      if (!_this._currentMatrixIsIdentity) {
        t1 = $.$get$_PaintBounds__tempRectData();
        t1[0] = left;
        t1[1] = $top;
        t1[2] = right;
        t1[3] = bottom;
        H.transformLTRB(_this._currentMatrix, t1);
        transformedPointLeft = t1[0];
        transformedPointTop = t1[1];
        transformedPointRight = t1[2];
        transformedPointBottom = t1[3];
      } else {
        transformedPointBottom = bottom;
        transformedPointRight = right;
        transformedPointTop = $top;
        transformedPointLeft = left;
      }
      if (_this._clipRectInitialized) {
        transformedPointRight0 = _this._currentClipRight;
        if (transformedPointLeft > transformedPointRight0) {
          command.isClippedOut = true;
          return;
        }
        transformedPointLeft0 = _this._currentClipLeft;
        if (transformedPointRight < transformedPointLeft0) {
          command.isClippedOut = true;
          return;
        }
        transformedPointBottom0 = _this._currentClipBottom;
        if (transformedPointTop > transformedPointBottom0) {
          command.isClippedOut = true;
          return;
        }
        transformedPointTop0 = _this._currentClipTop;
        if (transformedPointBottom < transformedPointTop0) {
          command.isClippedOut = true;
          return;
        }
        if (transformedPointLeft < transformedPointLeft0)
          transformedPointLeft = transformedPointLeft0;
        if (transformedPointRight > transformedPointRight0)
          transformedPointRight = transformedPointRight0;
        if (transformedPointTop < transformedPointTop0)
          transformedPointTop = transformedPointTop0;
        if (transformedPointBottom > transformedPointBottom0)
          transformedPointBottom = transformedPointBottom0;
      }
      command.leftBound = transformedPointLeft;
      command.topBound = transformedPointTop;
      command.rightBound = transformedPointRight;
      command.bottomBound = transformedPointBottom;
      if (_this._didPaintInsideClipArea) {
        _this.__engine$_left = Math.min(Math.min(H.checkNum(_this.__engine$_left), H.checkNum(transformedPointLeft)), H.checkNum(transformedPointRight));
        _this.__engine$_right = Math.max(Math.max(H.checkNum(_this.__engine$_right), H.checkNum(transformedPointLeft)), H.checkNum(transformedPointRight));
        _this.__engine$_top = Math.min(Math.min(H.checkNum(_this.__engine$_top), H.checkNum(transformedPointTop)), H.checkNum(transformedPointBottom));
        _this.__engine$_bottom = Math.max(Math.max(H.checkNum(_this.__engine$_bottom), H.checkNum(transformedPointTop)), H.checkNum(transformedPointBottom));
      } else {
        _this.__engine$_left = Math.min(H.checkNum(transformedPointLeft), H.checkNum(transformedPointRight));
        _this.__engine$_right = Math.max(H.checkNum(transformedPointLeft), H.checkNum(transformedPointRight));
        _this.__engine$_top = Math.min(H.checkNum(transformedPointTop), H.checkNum(transformedPointBottom));
        _this.__engine$_bottom = Math.max(H.checkNum(transformedPointTop), H.checkNum(transformedPointBottom));
      }
      _this._didPaintInsideClipArea = true;
    },
    saveTransformsAndClip$0: function() {
      var t1, t2, t3, _this = this;
      if (_this._clipStack == null)
        _this._clipStack = H.setRuntimeTypeInfo([], type$.JSArray_Rect);
      t1 = _this.__engine$_transforms;
      if (t1 == null)
        t1 = _this.__engine$_transforms = H.setRuntimeTypeInfo([], type$.JSArray_Matrix4);
      t2 = _this._currentMatrix;
      if (t2 == null)
        t2 = null;
      else {
        t3 = new H.Matrix40(new Float32Array(16));
        t3.setFrom$1(t2);
        t2 = t3;
      }
      t1.push(t2);
      t2 = _this._clipStack;
      t2.push(_this._clipRectInitialized ? new P.Rect(_this._currentClipLeft, _this._currentClipTop, _this._currentClipRight, _this._currentClipBottom) : null);
    },
    computeBounds$0: function() {
      var t1, t2, maxLeft, maxRight, maxTop, maxBottom, left, right, $top, bottom, _this = this;
      if (!_this._didPaintInsideClipArea)
        return C.Rect_0_0_0_0;
      t1 = _this.maxPaintBounds;
      t2 = t1.left;
      t2.toString;
      if (isNaN(t2))
        maxLeft = -1 / 0;
      else
        maxLeft = t2;
      t2 = t1.right;
      t2.toString;
      if (isNaN(t2))
        maxRight = 1 / 0;
      else
        maxRight = t2;
      t2 = t1.top;
      t2.toString;
      if (isNaN(t2))
        maxTop = -1 / 0;
      else
        maxTop = t2;
      t1 = t1.bottom;
      t1.toString;
      if (isNaN(t1))
        maxBottom = 1 / 0;
      else
        maxBottom = t1;
      t1 = _this.__engine$_left;
      t2 = _this.__engine$_right;
      left = Math.min(H.checkNum(t1), H.checkNum(t2));
      right = Math.max(H.checkNum(t1), H.checkNum(t2));
      t2 = _this.__engine$_top;
      t1 = _this.__engine$_bottom;
      $top = Math.min(H.checkNum(t2), H.checkNum(t1));
      bottom = Math.max(H.checkNum(t2), H.checkNum(t1));
      if (right < maxLeft || bottom < maxTop)
        return C.Rect_0_0_0_0;
      return new P.Rect(Math.max(left, maxLeft), Math.max($top, maxTop), Math.min(right, maxRight), Math.min(bottom, maxBottom));
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.SurfaceScene.prototype = {
    dispose$0: function() {
    }
  };
  H.PersistedScene.prototype = {
    recomputeTransformAndClip$0: function() {
      var t2,
        t1 = window.innerWidth;
      t1.toString;
      t2 = window.innerHeight;
      t2.toString;
      this._localClipBounds = new P.Rect(0, 0, t1, t2);
      t1 = new H.Matrix40(new Float32Array(16));
      t1.setIdentity$0();
      this._localTransformInverse = t1;
      this._projectedClip = null;
    },
    get$localTransformInverse: function() {
      return this._localTransformInverse;
    },
    createElement$0: function(_) {
      return this.defaultCreateElement$1("flt-scene");
    },
    apply$0: function() {
    }
  };
  H.SurfaceSceneBuilder.prototype = {
    _pushSurface$1: function(surface) {
      var t2,
        t1 = surface._oldLayer.value;
      if (t1 != null)
        t1.__engine$_state = C.PersistedSurfaceState_3;
      t1 = this._surfaceStack;
      t2 = C.JSArray_methods.get$last(t1);
      t2.__engine$_children.push(surface);
      surface.parent = t2;
      t1.push(surface);
      return surface;
    },
    pushOffset$3$oldLayer: function(dx, dy, oldLayer) {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface),
        t2 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t2);
      return this._pushSurface$1(new H.PersistedOffset(dx, dy, t2, t1, C.PersistedSurfaceState_0));
    },
    pushOffset$2: function(dx, dy) {
      return this.pushOffset$3$oldLayer(dx, dy, null);
    },
    pushTransform$2$oldLayer: function(matrix4, oldLayer) {
      var matrix, t1, t2;
      if (this._surfaceStack.length === 1) {
        matrix = new Float32Array(16);
        new H.Matrix40(matrix).setIdentity$0();
      } else
        matrix = H.toMatrix32(matrix4);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      t2 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t2);
      return this._pushSurface$1(new H.PersistedTransform(matrix, t2, t1, C.PersistedSurfaceState_0));
    },
    pushClipRect$3$clipBehavior$oldLayer: function(rect, clipBehavior, oldLayer) {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface),
        t2 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t2);
      return this._pushSurface$1(new H.PersistedClipRect(rect, null, t2, t1, C.PersistedSurfaceState_0));
    },
    pushClipRect$1: function(rect) {
      return this.pushClipRect$3$clipBehavior$oldLayer(rect, C.Clip_2, null);
    },
    pushClipPath$3$clipBehavior$oldLayer: function(path, clipBehavior, oldLayer) {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface),
        t2 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t2);
      return this._pushSurface$1(new H.PersistedClipPath(path, t2, t1, C.PersistedSurfaceState_0));
    },
    pushOpacity$3$offset$oldLayer: function(alpha, offset, oldLayer) {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface),
        t2 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t2);
      return this._pushSurface$1(new H.PersistedOpacity(alpha, offset, t2, t1, C.PersistedSurfaceState_0));
    },
    pushPhysicalShape$6$clipBehavior$color$elevation$oldLayer$path$shadowColor: function(clipBehavior, color, elevation, oldLayer, path, shadowColor) {
      var t3, t4, t5,
        t1 = color.get$value(color),
        t2 = shadowColor == null ? null : shadowColor.get$value(shadowColor);
      if (t2 == null)
        t2 = 4278190080;
      t3 = path.getBounds$0(0);
      t4 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      t5 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t5);
      return this._pushSurface$1(new H.PersistedPhysicalShape(path, t3, elevation, new P.Color((t1 & 4294967295) >>> 0), new P.Color((t2 & 4294967295) >>> 0), clipBehavior, null, t5, t4, C.PersistedSurfaceState_0));
    },
    addRetained$1: function(retainedLayer) {
      var t1;
      if (retainedLayer.__engine$_state === C.PersistedSurfaceState_1)
        retainedLayer.__engine$_state = C.PersistedSurfaceState_2;
      else
        retainedLayer.revive$0();
      t1 = C.JSArray_methods.get$last(this._surfaceStack);
      t1.__engine$_children.push(retainedLayer);
      retainedLayer.parent = t1;
    },
    pop$0: function() {
      this._surfaceStack.pop();
    },
    addPerformanceOverlay$2: function(enabledOptions, bounds) {
      if (!$.SurfaceSceneBuilder__webOnlyDidWarnAboutPerformanceOverlay) {
        $.SurfaceSceneBuilder__webOnlyDidWarnAboutPerformanceOverlay = true;
        window;
        if (typeof console != "undefined")
          window.console.warn("The performance overlay isn't supported on the web");
      }
    },
    addPicture$4$isComplexHint$willChangeHint: function(offset, picture, isComplexHint, willChangeHint) {
      var t1, t2,
        hints = isComplexHint ? 1 : 0;
      if (willChangeHint)
        hints |= 2;
      t1 = H.standardPictureFactory(offset._dx, offset._dy, picture, hints);
      t2 = C.JSArray_methods.get$last(this._surfaceStack);
      t2.__engine$_children.push(t1);
      t1.parent = t2;
    },
    addPicture$2: function(offset, picture) {
      return this.addPicture$4$isComplexHint$willChangeHint(offset, picture, false, false);
    },
    setRasterizerTracingThreshold$1: function(frameInterval) {
    },
    setCheckerboardRasterCacheImages$1: function(checkerboard) {
    },
    setCheckerboardOffscreenLayers$1: function(checkerboard) {
    },
    build$0: function() {
      H.timeAction("preroll_frame", new H.SurfaceSceneBuilder_build_closure(this));
      return H.timeAction("apply_frame", new H.SurfaceSceneBuilder_build_closure0(this));
    }
  };
  H.SurfaceSceneBuilder_build_closure.prototype = {
    call$0: function() {
      C.JSArray_methods.get$first(this.$this._surfaceStack).preroll$0();
    },
    $signature: 0
  };
  H.SurfaceSceneBuilder_build_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this._surfaceStack;
      if ($.SurfaceSceneBuilder__lastFrameScene == null)
        C.JSArray_methods.get$first(t1).build$0();
      else
        C.JSArray_methods.get$first(t1).update$1(0, $.SurfaceSceneBuilder__lastFrameScene);
      H.commitScene(C.JSArray_methods.get$first(t1));
      $.SurfaceSceneBuilder__lastFrameScene = C.JSArray_methods.get$first(t1);
      return new H.SurfaceScene(C.JSArray_methods.get$first(t1).rootElement);
    },
    $signature: 97
  };
  H.FrameReference.prototype = {};
  H.commitScene_closure.prototype = {
    call$2: function(a, b) {
      var t1 = a.canvasSize,
        t2 = b.canvasSize;
      return C.JSNumber_methods.compareTo$1(t2._dy * t2._dx, t1._dy * t1._dx);
    },
    $signature: 104
  };
  H.PersistedSurfaceState.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.PersistedSurface.prototype = {
    revive$0: function() {
      this.__engine$_state = C.PersistedSurfaceState_0;
    },
    get$childContainer: function() {
      return this.rootElement;
    },
    build$0: function() {
      var stack, exception, t1, t2, _this = this;
      if (_this.rootElement != null)
        try {
          throw H.wrapException(null);
        } catch (exception) {
          H.unwrapException(exception);
          stack = H.getTraceFromException(exception);
          t1 = "Attempted to build a " + H.getRuntimeType(_this).toString$0(0) + ", but it already has an HTML element ";
          t2 = _this.rootElement;
          P.print(t1 + H.S(t2.tagName) + ".");
          P.print(H.SubListIterable$(H.setRuntimeTypeInfo(J.toString$0$(stack).split("\n"), type$.JSArray_String), 0, 20, type$.String).join$1(0, "\n"));
        }
      t1 = _this.createElement$0(0);
      _this.rootElement = t1;
      if (H.browserEngine() === C.BrowserEngine_1) {
        t1 = t1.style;
        t1.zIndex = "0";
      }
      _this.apply$0();
      _this.__engine$_state = C.PersistedSurfaceState_1;
    },
    adoptElements$1: function(oldSurface) {
      this.rootElement = oldSurface.rootElement;
      oldSurface.rootElement = null;
      oldSurface.__engine$_state = C.PersistedSurfaceState_4;
    },
    update$1: function(_, oldSurface) {
      this.adoptElements$1(oldSurface);
      this.__engine$_state = C.PersistedSurfaceState_1;
    },
    retain$0: function() {
      if (this.__engine$_state === C.PersistedSurfaceState_2)
        $._retainedSurfaces.push(this);
    },
    discard$0: function() {
      J.remove$0$ax(this.rootElement);
      this.rootElement = null;
      this.__engine$_state = C.PersistedSurfaceState_4;
    },
    defaultCreateElement$1: function(tagName) {
      var t1 = W._ElementFactoryProvider_createElement_tag(tagName, null),
        t2 = t1.style;
      t2.position = "absolute";
      return t1;
    },
    get$localTransformInverse: function() {
      var t1 = this._localTransformInverse;
      if (t1 == null) {
        t1 = new H.Matrix40(new Float32Array(16));
        t1.setIdentity$0();
        this._localTransformInverse = t1;
      }
      return t1;
    },
    recomputeTransformAndClip$0: function() {
      var _this = this;
      _this.__engine$_transform = _this.parent.__engine$_transform;
      _this._projectedClip = _this._localTransformInverse = _this._localClipBounds = null;
    },
    preroll$0: function() {
      this.recomputeTransformAndClip$0();
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PersistedLeafSurface.prototype = {};
  H.PersistedContainerSurface.prototype = {
    preroll$0: function() {
      var t1, $length, i;
      this.super$PersistedSurface$preroll();
      t1 = this.__engine$_children;
      $length = t1.length;
      for (i = 0; i < $length; ++i)
        t1[i].preroll$0();
    },
    recomputeTransformAndClip$0: function() {
      var _this = this;
      _this.__engine$_transform = _this.parent.__engine$_transform;
      _this._projectedClip = _this._localTransformInverse = _this._localClipBounds = null;
    },
    build$0: function() {
      var t1, len, containerElement, i, child;
      this.super$PersistedSurface$build();
      t1 = this.__engine$_children;
      len = t1.length;
      containerElement = this.get$childContainer();
      for (i = 0; i < len; ++i) {
        child = t1[i];
        if (child.__engine$_state === C.PersistedSurfaceState_2)
          child.retain$0();
        else if (child instanceof H.PersistedContainerSurface && child._oldLayer.value != null)
          child.update$1(0, child._oldLayer.value);
        else
          child.build$0();
        containerElement.appendChild(child.rootElement);
      }
    },
    matchForUpdate$1: function(existingSurface) {
      return 1;
    },
    update$1: function(_, oldSurface) {
      var t1, _this = this;
      _this.super$PersistedSurface$update(0, oldSurface);
      if (oldSurface.__engine$_children.length === 0)
        _this._updateZeroToMany$1(oldSurface);
      else {
        t1 = _this.__engine$_children.length;
        if (t1 === 1)
          _this._updateManyToOne$1(oldSurface);
        else if (t1 === 0)
          H.PersistedContainerSurface__discardActiveChildren(oldSurface);
        else
          _this._updateManyToMany$1(oldSurface);
      }
    },
    _updateZeroToMany$1: function(oldSurface) {
      var i, newChild,
        containerElement = this.get$childContainer(),
        t1 = this.__engine$_children,
        $length = t1.length;
      for (i = 0; i < $length; ++i) {
        newChild = t1[i];
        if (newChild.__engine$_state === C.PersistedSurfaceState_2)
          newChild.retain$0();
        else if (newChild instanceof H.PersistedContainerSurface && newChild._oldLayer.value != null)
          newChild.update$1(0, newChild._oldLayer.value);
        else
          newChild.build$0();
        containerElement.appendChild(newChild.rootElement);
      }
    },
    _updateManyToOne$1: function(oldSurface) {
      var t1, t2, t3, bestMatch, bestScore, i, candidate, score, oldChild, _this = this,
        newChild = _this.__engine$_children[0];
      if (newChild.__engine$_state === C.PersistedSurfaceState_2) {
        t1 = newChild.rootElement.parentElement;
        t2 = _this.get$childContainer();
        if (t1 == null ? t2 != null : t1 !== t2)
          _this.get$childContainer().appendChild(newChild.rootElement);
        newChild.retain$0();
        H.PersistedContainerSurface__discardActiveChildren(oldSurface);
        return;
      }
      if (newChild instanceof H.PersistedContainerSurface && newChild._oldLayer.value != null) {
        t1 = newChild._oldLayer.value;
        t2 = t1.rootElement.parentElement;
        t3 = _this.get$childContainer();
        if (t2 == null ? t3 != null : t2 !== t3)
          _this.get$childContainer().appendChild(t1.rootElement);
        newChild.update$1(0, t1);
        H.PersistedContainerSurface__discardActiveChildren(oldSurface);
        return;
      }
      for (t1 = oldSurface.__engine$_children, bestMatch = null, bestScore = 2, i = 0; i < t1.length; ++i) {
        candidate = t1[i];
        if (!(candidate.__engine$_state === C.PersistedSurfaceState_1 && H.getRuntimeType(newChild).$eq(0, H.getRuntimeType(candidate))))
          continue;
        score = newChild.matchForUpdate$1(candidate);
        if (score < bestScore) {
          bestScore = score;
          bestMatch = candidate;
        }
      }
      if (bestMatch != null) {
        newChild.update$1(0, bestMatch);
        t2 = newChild.rootElement.parentElement;
        t3 = _this.get$childContainer();
        if (t2 == null ? t3 != null : t2 !== t3)
          _this.get$childContainer().appendChild(newChild.rootElement);
      } else {
        newChild.build$0();
        _this.get$childContainer().appendChild(newChild.rootElement);
      }
      for (i = 0; i < t1.length; ++i) {
        oldChild = t1[i];
        if (oldChild != bestMatch && oldChild.__engine$_state === C.PersistedSurfaceState_1)
          oldChild.discard$0();
      }
    },
    _updateManyToMany$1: function(oldSurface) {
      var insertDomNodeIfMoved, matches, t1, bottomInNew, newChild, matchedOldChild, _this = this, _box_0 = {},
        containerElement = _this.get$childContainer();
      _box_0.nextSibling = null;
      insertDomNodeIfMoved = new H.PersistedContainerSurface__updateManyToMany_insertDomNodeIfMoved(_box_0, _this, containerElement);
      matches = _this._matchChildren$1(oldSurface);
      for (t1 = _this.__engine$_children, bottomInNew = t1.length - 1; bottomInNew >= 0; --bottomInNew) {
        newChild = t1[bottomInNew];
        if (newChild.__engine$_state === C.PersistedSurfaceState_2)
          newChild.retain$0();
        else if (newChild instanceof H.PersistedContainerSurface && newChild._oldLayer.value != null)
          newChild.update$1(0, newChild._oldLayer.value);
        else {
          matchedOldChild = matches.$index(0, newChild);
          if (matchedOldChild != null)
            newChild.update$1(0, matchedOldChild);
          else
            newChild.build$0();
        }
        insertDomNodeIfMoved.call$1(newChild);
        _box_0.nextSibling = newChild;
      }
      H.PersistedContainerSurface__discardActiveChildren(oldSurface);
    },
    _matchChildren$1: function(oldSurface) {
      var i, child, oldChildren, newChildCount, oldChildCount, allMatches, indexInNew, newChild, indexInOld, oldChild, result, match, matchedChild,
        t1 = this.__engine$_children,
        newUnfilteredChildCount = t1.length,
        t2 = oldSurface.__engine$_children,
        oldUnfilteredChildCount = t2.length,
        t3 = type$.JSArray_PersistedSurface,
        newChildren = H.setRuntimeTypeInfo([], t3);
      for (i = 0; i < newUnfilteredChildCount; ++i) {
        child = t1[i];
        if (child.__engine$_state === C.PersistedSurfaceState_0)
          newChildren.push(child);
      }
      oldChildren = H.setRuntimeTypeInfo([], t3);
      for (i = 0; i < oldUnfilteredChildCount; ++i) {
        child = t2[i];
        if (child.__engine$_state === C.PersistedSurfaceState_1)
          oldChildren.push(child);
      }
      newChildCount = newChildren.length;
      oldChildCount = oldChildren.length;
      if (newChildCount === 0 || oldChildCount === 0)
        return C.Map_empty5;
      allMatches = H.setRuntimeTypeInfo([], type$.JSArray__PersistedSurfaceMatch);
      for (indexInNew = 0; indexInNew < newChildCount; ++indexInNew) {
        newChild = newChildren[indexInNew];
        for (indexInOld = 0; indexInOld < oldChildCount; ++indexInOld) {
          oldChild = oldChildren[indexInOld];
          if (oldChild != null)
            t1 = !(oldChild.__engine$_state === C.PersistedSurfaceState_1 && H.getRuntimeType(newChild).$eq(0, H.getRuntimeType(oldChild)));
          else
            t1 = true;
          if (t1)
            continue;
          allMatches.push(new H._PersistedSurfaceMatch(newChild, indexInOld, newChild.matchForUpdate$1(oldChild)));
        }
      }
      C.JSArray_methods.sort$1(allMatches, new H.PersistedContainerSurface__matchChildren_closure());
      t1 = type$.PersistedSurface;
      result = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (i = 0; i < allMatches.length; ++i) {
        match = allMatches[i];
        t1 = match.oldChildIndex;
        matchedChild = oldChildren[t1];
        if (matchedChild != null) {
          oldChildren[t1] = null;
          result.$indexSet(0, match.newChild, matchedChild);
        }
      }
      return result;
    },
    retain$0: function() {
      var t1, len, i;
      this.super$PersistedSurface$retain();
      t1 = this.__engine$_children;
      len = t1.length;
      for (i = 0; i < len; ++i)
        t1[i].retain$0();
    },
    revive$0: function() {
      var t1, len, i;
      this.super$PersistedSurface$revive();
      t1 = this.__engine$_children;
      len = t1.length;
      for (i = 0; i < len; ++i)
        t1[i].revive$0();
    },
    discard$0: function() {
      this.super$PersistedSurface$discard();
      H.PersistedContainerSurface__discardActiveChildren(this);
    }
  };
  H.PersistedContainerSurface__updateManyToMany_insertDomNodeIfMoved.prototype = {
    call$1: function(newChild) {
      var t4, moved,
        t1 = newChild.rootElement,
        t2 = t1.parentElement,
        t3 = this.containerElement;
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = t1.nextElementSibling;
        t4 = this._box_0.nextSibling;
        moved = t2 == null ? (t4 == null ? null : t4.rootElement) != null : t2 !== (t4 == null ? null : t4.rootElement);
      } else
        moved = true;
      if (moved) {
        t2 = this._box_0.nextSibling;
        if (t2 == null)
          t3.appendChild(t1);
        else
          t3.insertBefore(t1, t2.rootElement);
      }
    }
  };
  H.PersistedContainerSurface__matchChildren_closure.prototype = {
    call$2: function(m1, m2) {
      return C.JSNumber_methods.compareTo$1(m1.matchQuality, m2.matchQuality);
    },
    $signature: 107
  };
  H._PersistedSurfaceMatch.prototype = {};
  H.PersistedTransform.prototype = {
    recomputeTransformAndClip$0: function() {
      var _this = this;
      _this.__engine$_transform = _this.parent.__engine$_transform.multiplied$1(new H.Matrix40(_this.matrix4));
      _this._projectedClip = _this._localTransformInverse = null;
    },
    get$localTransformInverse: function() {
      var t1 = this._localTransformInverse;
      return t1 == null ? this._localTransformInverse = H.Matrix4_tryInvert0(new H.Matrix40(this.matrix4)) : t1;
    },
    createElement$0: function(_) {
      var t1 = this.defaultCreateElement$1("flt-transform"),
        t2 = t1.style;
      t2.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "transform-origin"), "0 0 0", "");
      return t1;
    },
    apply$0: function() {
      var t1 = this.rootElement.style,
        t2 = H.float64ListToCssTransform(this.matrix4);
      t1.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
    },
    update$1: function(_, oldSurface) {
      var t1, t2, matrixChanged, i;
      this.super$PersistedContainerSurface$update(0, oldSurface);
      t1 = oldSurface.matrix4;
      t2 = this.matrix4;
      if (t1 == null ? t2 == null : t1 === t2)
        return;
      t2.length;
      i = 0;
      while (true) {
        if (!(i < 16)) {
          matrixChanged = false;
          break;
        }
        if (t2[i] !== t1[i]) {
          matrixChanged = true;
          break;
        }
        ++i;
      }
      if (matrixChanged) {
        t1 = this.rootElement.style;
        t2 = H.float64ListToCssTransform(t2);
        t1.toString;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
      }
    },
    $isTransformEngineLayer: 1
  };
  H.FontCollection.prototype = {
    registerFonts$1: function(assetManager) {
      return this.registerFonts$body$FontCollection(assetManager);
    },
    registerFonts$body$FontCollection: function(assetManager) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, e, exception, t1, fontManifest, t2, t3, t4, family, fontAssetItem, asset, descriptors, t5, t6, byteData, $async$exception;
      var $async$registerFonts$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              byteData = null;
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(assetManager.load$1(0, "FontManifest.json"), $async$registerFonts$1);
            case 7:
              // returning from await.
              byteData = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (t1 instanceof H.AssetManagerException) {
                e = t1;
                if (e.httpStatus === 404) {
                  t1 = "Font manifest does not exist at `" + H.S(e.url) + "` \u2013 ignoring.";
                  if (typeof console != "undefined")
                    window.console.warn(t1);
                  // goto return
                  $async$goto = 1;
                  break;
                } else
                  throw $async$exception;
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              if (byteData == null)
                throw H.wrapException(P.AssertionError$("There was a problem trying to load FontManifest.json"));
              fontManifest = C.C_JsonCodec.decode$1(0, C.C_Utf8Codec.decode$1(0, H.NativeUint8List_NativeUint8List$view(byteData.buffer, 0, null)));
              if (fontManifest == null)
                throw H.wrapException(P.AssertionError$("There was a problem trying to load FontManifest.json"));
              if ($.$get$supportsFontLoadingApi())
                $async$self._assetFontManager = H.FontManager_FontManager();
              else
                $async$self._assetFontManager = new H._PolyfillFontManager(H.setRuntimeTypeInfo([], type$.JSArray_Future_void));
              for (t1 = J.get$iterator$ax(fontManifest), t2 = type$.String; t1.moveNext$0();) {
                t3 = t1.get$current(t1);
                t4 = J.getInterceptor$asx(t3);
                family = t4.$index(t3, "family");
                for (t3 = J.get$iterator$ax(t4.$index(t3, "fonts")); t3.moveNext$0();) {
                  fontAssetItem = t3.get$current(t3);
                  t4 = J.getInterceptor$asx(fontAssetItem);
                  asset = t4.$index(fontAssetItem, "asset");
                  descriptors = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
                  for (t5 = J.get$iterator$ax(t4.get$keys(fontAssetItem)); t5.moveNext$0();) {
                    t6 = t5.get$current(t5);
                    if (t6 !== "asset")
                      descriptors.$indexSet(0, t6, H.S(t4.$index(fontAssetItem, t6)));
                  }
                  $async$self._assetFontManager.registerAsset$3(family, "url(" + H.S(assetManager.getAssetUrl$1(asset)) + ")", descriptors);
                }
              }
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$registerFonts$1, $async$completer);
    },
    ensureFontsLoaded$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$ensureFontsLoaded$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._assetFontManager;
              $async$goto = 2;
              return P._asyncAwait(t1 == null ? null : P.Future_wait(t1._fontLoadingFutures, type$.void), $async$ensureFontsLoaded$0);
            case 2:
              // returning from await.
              t1 = $async$self._testFontManager;
              $async$goto = 3;
              return P._asyncAwait(t1 == null ? null : P.Future_wait(t1._fontLoadingFutures, type$.void), $async$ensureFontsLoaded$0);
            case 3:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$ensureFontsLoaded$0, $async$completer);
    }
  };
  H.FontManager.prototype = {
    registerAsset$3: function(family, asset, descriptors) {
      var t1 = $.$get$FontManager_startWithDigit()._nativeRegExp;
      if (typeof family != "string")
        H.throwExpression(H.argumentErrorValue(family));
      if (t1.test(family) || $.$get$FontManager_notPunctuation().stringMatch$1(family) != family)
        this._loadFontFace$3("'" + H.S(family) + "'", asset, descriptors);
      this._loadFontFace$3(family, asset, descriptors);
    },
    _loadFontFace$3: function(family, asset, descriptors) {
      var fontFace, e, exception, t1;
      try {
        fontFace = W.FontFace_FontFace(family, asset, descriptors);
        this._fontLoadingFutures.push(P.promiseToFuture(fontFace.load(), type$.FontFace).then$1$2$onError(new H.FontManager__loadFontFace_closure(fontFace), new H.FontManager__loadFontFace_closure0(family), type$.void));
      } catch (exception) {
        e = H.unwrapException(exception);
        window;
        t1 = 'Error while loading font family "' + H.S(family) + '":\n' + H.S(e);
        if (typeof console != "undefined")
          window.console.warn(t1);
      }
    }
  };
  H.FontManager__loadFontFace_closure.prototype = {
    call$1: function(_) {
      document.fonts.add(this.fontFace);
    }
  };
  H.FontManager__loadFontFace_closure0.prototype = {
    call$1: function(e) {
      var t1;
      window;
      t1 = 'Error while trying to load font family "' + H.S(this.family) + '":\n' + H.S(e);
      if (typeof console != "undefined")
        window.console.warn(t1);
    },
    $signature: 3
  };
  H._PolyfillFontManager.prototype = {
    registerAsset$3: function(family, asset, descriptors) {
      var fallbackFontName, t4, sansSerifWidth, fontStyleMap, t5, fontFaceDeclaration, fontLoadStyle, _s5_ = "style", _s6_ = "weight", t1 = {},
        t2 = document,
        paragraph = t2.createElement("p"),
        t3 = paragraph.style;
      t3.position = "absolute";
      t3 = paragraph.style;
      t3.visibility = "hidden";
      t3 = paragraph.style;
      t3.fontSize = "72px";
      fallbackFontName = H.browserEngine() === C.BrowserEngine_4 ? "Times New Roman" : "sans-serif";
      t3 = paragraph.style;
      t3.fontFamily = fallbackFontName;
      if (descriptors.$index(0, _s5_) != null) {
        t3 = paragraph.style;
        t4 = descriptors.$index(0, _s5_);
        t3.toString;
        t3.fontStyle = t4 == null ? "" : t4;
      }
      if (descriptors.$index(0, _s6_) != null) {
        t3 = paragraph.style;
        t4 = descriptors.$index(0, _s6_);
        t3.toString;
        t3.fontWeight = t4 == null ? "" : t4;
      }
      paragraph.textContent = "giItT1WQy@!-/#";
      t2.body.appendChild(paragraph);
      sansSerifWidth = C.JSNumber_methods.round$0(paragraph.offsetWidth);
      t3 = paragraph.style;
      t4 = "'" + H.S(family) + "', " + fallbackFontName;
      t3.fontFamily = t4;
      t3 = new P._Future($.Zone__current, type$._Future_void);
      t1._fontLoadStart = null;
      t4 = type$.String;
      fontStyleMap = P.LinkedHashMap_LinkedHashMap$_empty(t4, t4);
      fontStyleMap.$indexSet(0, "font-family", "'" + H.S(family) + "'");
      fontStyleMap.$indexSet(0, "src", asset);
      if (descriptors.$index(0, _s5_) != null)
        fontStyleMap.$indexSet(0, "font-style", descriptors.$index(0, _s5_));
      if (descriptors.$index(0, _s6_) != null)
        fontStyleMap.$indexSet(0, "font-weight", descriptors.$index(0, _s6_));
      t5 = fontStyleMap.get$keys(fontStyleMap);
      fontFaceDeclaration = H.MappedIterable_MappedIterable(t5, new H._PolyfillFontManager_registerAsset_closure(fontStyleMap), H._instanceType(t5)._eval$1("Iterable.E"), t4).join$1(0, " ");
      fontLoadStyle = t2.createElement("style");
      fontLoadStyle.type = "text/css";
      C.StyleElement_methods.setInnerHtml$1(fontLoadStyle, "@font-face { " + fontFaceDeclaration + " }");
      t2.head.appendChild(fontLoadStyle);
      if (C.JSString_methods.contains$1(family.toLowerCase(), "icon")) {
        C.ParagraphElement_methods.remove$0(paragraph);
        return;
      }
      t1._fontLoadStart = new P.DateTime(Date.now(), false);
      new H._PolyfillFontManager_registerAsset__watchWidth(t1, paragraph, sansSerifWidth, new P._AsyncCompleter(t3, type$._AsyncCompleter_void), family).call$0();
      this._fontLoadingFutures.push(t3);
    }
  };
  H._PolyfillFontManager_registerAsset__watchWidth.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.paragraph;
      if (C.JSNumber_methods.round$0(t1.offsetWidth) !== _this.sansSerifWidth) {
        C.ParagraphElement_methods.remove$0(t1);
        _this.completer.complete$0(0);
      } else if (P.Duration$(0, Date.now() - _this._box_0._fontLoadStart._value)._duration > 2000000) {
        _this.completer.complete$0(0);
        throw H.wrapException(P.Exception_Exception("Timed out trying to load font: " + H.S(_this.family)));
      } else
        P.Timer_Timer(C.Duration_50000, _this);
    },
    $signature: 1
  };
  H._PolyfillFontManager_registerAsset_closure.prototype = {
    call$1: function($name) {
      return H.S($name) + ": " + H.S(this.fontStyleMap.$index(0, $name)) + ";";
    }
  };
  H.LineBreakType.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.LineBreakResult.prototype = {};
  H.RulerManager.prototype = {
    _scheduleRulerCacheCleanup$0: function() {
      if (!this._rulerCacheCleanupScheduled) {
        this._rulerCacheCleanupScheduled = true;
        P.scheduleMicrotask(new H.RulerManager__scheduleRulerCacheCleanup_closure(this));
      }
    },
    dispose$0: function() {
      J.remove$0$ax(this._rulerHost);
    },
    _evictAllRulers$0: function() {
      this._rulers.forEach$1(0, new H.RulerManager__evictAllRulers_closure());
      this._rulers = P.LinkedHashMap_LinkedHashMap$_empty(type$.ParagraphGeometricStyle, type$.ParagraphRuler);
    },
    cleanUpRulerCache$0: function() {
      var t2, sortedByUsage, i, ruler, _this = this,
        t1 = $.$get$window().get$physicalSize();
      if (t1.get$isEmpty(t1)) {
        _this._evictAllRulers$0();
        return;
      }
      t1 = _this._rulers;
      t2 = _this.rulerCacheCapacity;
      if (t1.get$length(t1) > t2) {
        t1 = _this._rulers;
        t1 = t1.get$values(t1);
        sortedByUsage = P.List_List$from(t1, true, H._instanceType(t1)._eval$1("Iterable.E"));
        C.JSArray_methods.sort$1(sortedByUsage, new H.RulerManager_cleanUpRulerCache_closure());
        _this._rulers = P.LinkedHashMap_LinkedHashMap$_empty(type$.ParagraphGeometricStyle, type$.ParagraphRuler);
        for (i = 0; i < sortedByUsage.length; ++i) {
          ruler = sortedByUsage[i];
          ruler._hitCount = 0;
          if (i < t2)
            _this._rulers.$indexSet(0, ruler.style, ruler);
          else
            ruler.dispose$0();
        }
      }
    },
    findOrCreateRuler$1: function(style) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, elementStyle, _this = this, _s6_ = "hidden",
        _s8_ = "absolute",
        _s1_ = "0", _s4_ = "flex",
        _s14_ = "flex-direction",
        _s8_0 = "baseline",
        _s11_ = "align-items",
        ruler = _this._rulers.$index(0, style);
      if (ruler == null) {
        t1 = _this._rulers;
        t2 = document;
        t3 = t2.createElement("div");
        t4 = t2.createElement("div");
        t5 = t2.createElement("p");
        t6 = new H.TextDimensions(t5);
        t7 = t2.createElement("div");
        t8 = t2.createElement("p");
        t9 = new H.TextDimensions(t8);
        t10 = t2.createElement("div");
        t2 = t2.createElement("p");
        t11 = new H.TextDimensions(t2);
        ruler = new H.ParagraphRuler(style, _this, t3, t4, t6, t7, t9, t10, t11, P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_MeasurementResult), H.setRuntimeTypeInfo([], type$.JSArray_String));
        t12 = t4.style;
        t12.visibility = _s6_;
        t12.position = _s8_;
        t12.top = _s1_;
        t12.left = _s1_;
        t12.display = _s4_;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t12, C.CssStyleDeclaration_methods._browserPropertyName$1(t12, _s14_), "row", "");
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t12, C.CssStyleDeclaration_methods._browserPropertyName$1(t12, _s11_), _s8_0, "");
        t12.margin = _s1_;
        t12.border = _s1_;
        t12.padding = _s1_;
        t6.applyStyle$1(style);
        t12 = t5.style;
        t12.whiteSpace = "pre";
        t4.appendChild(t5);
        t6._cachedBoundingClientRect = null;
        t5 = _this._rulerHost;
        t5.appendChild(t4);
        t4.appendChild(t3);
        t3 = t7.style;
        t3.visibility = _s6_;
        t3.position = _s8_;
        t3.top = _s1_;
        t3.left = _s1_;
        t3.display = _s4_;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s14_), "row", "");
        t3.margin = _s1_;
        t3.border = _s1_;
        t3.padding = _s1_;
        t9.applyStyle$1(style);
        t3 = t8.style;
        t3.toString;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s4_), _s1_, "");
        t3.display = "inline";
        t3.whiteSpace = "pre-line";
        t7.appendChild(t8);
        t5.appendChild(t7);
        t3 = t10.style;
        t3.visibility = _s6_;
        t3.position = _s8_;
        t3.top = _s1_;
        t3.left = _s1_;
        t3.display = _s4_;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s14_), "row", "");
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s11_), _s8_0, "");
        t3.margin = _s1_;
        t3.border = _s1_;
        t3.padding = _s1_;
        t11.applyStyle$1(style);
        elementStyle = t2.style;
        elementStyle.display = "block";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "overflow-wrap"), "break-word", "");
        if (style.ellipsis != null) {
          elementStyle.overflow = _s6_;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "text-overflow"), "ellipsis", "");
        }
        t10.appendChild(t2);
        t11._cachedBoundingClientRect = null;
        t5.appendChild(t10);
        t1.$indexSet(0, style, ruler);
        _this._scheduleRulerCacheCleanup$0();
      }
      ++ruler._hitCount;
      return ruler;
    }
  };
  H.RulerManager__scheduleRulerCacheCleanup_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._rulerCacheCleanupScheduled = false;
      t1.cleanUpRulerCache$0();
    },
    $signature: 0
  };
  H.RulerManager__evictAllRulers_closure.prototype = {
    call$2: function(style, ruler) {
      ruler.dispose$0();
    },
    $signature: 108
  };
  H.RulerManager_cleanUpRulerCache_closure.prototype = {
    call$2: function(a, b) {
      return b._hitCount - a._hitCount;
    },
    $signature: 190
  };
  H.TextMeasurementService.prototype = {
    measure$2: function(_, paragraph, constraints) {
      var ruler = $.TextMeasurementService_rulerManager.findOrCreateRuler$1(paragraph._geometricStyle),
        result = ruler.cacheLookup$2(paragraph, constraints);
      if (result != null)
        return result;
      result = this._doMeasure$3(paragraph, constraints, ruler);
      ruler.cacheMeasurement$2(paragraph, result);
      return result;
    }
  };
  H.DomTextMeasurementService.prototype = {
    _doMeasure$3: function(paragraph, constraints, ruler) {
      var plainText, t1, t2, t3, width, t4, minIntrinsicWidth, maxIntrinsicWidth, alphabeticBaseline, height, alignOffset, lines, result, naturalHeight, maxLines, lineHeight, _null = null;
      ruler.__engine$_paragraph = paragraph;
      plainText = paragraph._plainText;
      ruler.measureAsSingleLine$0();
      t1 = ruler.minIntrinsicDimensions;
      t1.updateText$2(ruler.__engine$_paragraph, ruler.style);
      ruler.measureWithConstraints$1(constraints);
      t2 = plainText == null;
      t3 = t2 ? _null : C.JSString_methods.contains$1(plainText, "\n");
      t3 = t3 !== true && ruler.singleLineDimensions._readAndCacheMetrics$0().width <= constraints.width;
      width = constraints.width;
      t4 = ruler.singleLineDimensions;
      if (t3) {
        minIntrinsicWidth = t1._readAndCacheMetrics$0().width;
        maxIntrinsicWidth = t4._readAndCacheMetrics$0().width;
        alphabeticBaseline = ruler.get$alphabeticBaseline(ruler);
        height = t4.get$height(t4);
        maxIntrinsicWidth = H.DomTextMeasurementService__applySubPixelRoundingHack(minIntrinsicWidth, maxIntrinsicWidth);
        if (!t2) {
          alignOffset = H._calculateAlignOffsetForLine(maxIntrinsicWidth, width, paragraph);
          t1 = plainText.length;
          lines = H.setRuntimeTypeInfo([H.EngineLineMetrics$withText(plainText, t1, H._excludeTrailing(plainText, 0, t1, H._engine___newlinePredicate$closure()), true, alignOffset, 0, 0, maxIntrinsicWidth)], type$.JSArray_EngineLineMetrics);
        } else
          lines = _null;
        result = H.MeasurementResult$(width, alphabeticBaseline, height, alphabeticBaseline * 1.1662499904632568, true, height, lines, maxIntrinsicWidth, minIntrinsicWidth, height, paragraph._textAlign, paragraph._textDirection, width);
      } else {
        minIntrinsicWidth = t1._readAndCacheMetrics$0().width;
        maxIntrinsicWidth = t4._readAndCacheMetrics$0().width;
        alphabeticBaseline = ruler.get$alphabeticBaseline(ruler);
        t1 = ruler.constrainedDimensions;
        naturalHeight = t1.get$height(t1);
        maxLines = paragraph._geometricStyle.maxLines;
        if (maxLines == null) {
          lineHeight = _null;
          height = naturalHeight;
        } else {
          t1 = ruler.get$lineHeightDimensions();
          lineHeight = t1.get$height(t1);
          height = Math.min(H.checkNum(naturalHeight), maxLines * lineHeight);
        }
        result = H.MeasurementResult$(width, alphabeticBaseline, height, alphabeticBaseline * 1.1662499904632568, false, lineHeight, _null, H.DomTextMeasurementService__applySubPixelRoundingHack(minIntrinsicWidth, maxIntrinsicWidth), minIntrinsicWidth, naturalHeight, paragraph._textAlign, paragraph._textDirection, width);
      }
      ruler.didMeasure$0();
      return result;
    },
    measureSubstringWidth$3: function(paragraph, start, end) {
      var style = paragraph._geometricStyle,
        ruler = $.TextMeasurementService_rulerManager.findOrCreateRuler$1(style),
        text = J.substring$2$s(paragraph._plainText, start, end);
      ruler.__engine$_paragraph = H.EngineParagraph$(paragraph._background, style, paragraph._paint, paragraph._paragraphElement.cloneNode(true), text, paragraph._textAlign, paragraph._textDirection);
      ruler.measureAsSingleLine$0();
      ruler.didMeasure$0();
      return ruler.singleLineDimensions._readAndCacheMetrics$0().width;
    },
    getTextPositionForOffset$3: function(paragraph, constraints, offset) {
      var position,
        ruler = $.TextMeasurementService_rulerManager.findOrCreateRuler$1(paragraph._geometricStyle);
      ruler.__engine$_paragraph = paragraph;
      position = ruler.hitTest$2(constraints, offset);
      ruler.didMeasure$0();
      return new P.TextPosition(position, C.TextAffinity_1);
    },
    get$isCanvas: function() {
      return false;
    }
  };
  H.CanvasTextMeasurementService.prototype = {
    _doMeasure$3: function(paragraph, constraints, ruler) {
      var t2, linesCalculator, maxIntrinsicCalculator, reachedEndOfText, i, t3, t4, brk, chunkEnd, width, lineCount, lineHeight, naturalHeight, height,
        text = paragraph._plainText,
        style = paragraph._geometricStyle,
        t1 = this._canvasContext;
      t1.font = style.get$cssFontString();
      t2 = constraints.width;
      linesCalculator = new H.LinesCalculator(t1, paragraph, t2, H.setRuntimeTypeInfo([], type$.JSArray_EngineLineMetrics));
      maxIntrinsicCalculator = new H.MaxIntrinsicCalculator(t1, text, style);
      for (reachedEndOfText = false, i = 0, t3 = 0, t4 = 0; !reachedEndOfText; t4 = chunkEnd, i = t4) {
        brk = H.nextLineBreak(text, i);
        linesCalculator.update$1(0, brk);
        chunkEnd = brk.index;
        width = H._measureSubstring(t1, style, text, t4, H._excludeTrailing(text, t4, chunkEnd, H._engine___whitespacePredicate$closure()));
        if (width > t3)
          t3 = width;
        maxIntrinsicCalculator.update$1(0, brk);
        if (brk.type === C.LineBreakType_2)
          reachedEndOfText = true;
      }
      t1 = linesCalculator.lines;
      lineCount = t1.length;
      t4 = ruler.get$lineHeightDimensions();
      lineHeight = t4.get$height(t4);
      naturalHeight = lineCount * lineHeight;
      t4 = style.maxLines;
      height = t4 == null ? naturalHeight : Math.min(lineCount, t4) * lineHeight;
      return H.MeasurementResult$(t2, ruler.get$alphabeticBaseline(ruler), height, ruler.get$alphabeticBaseline(ruler) * 1.1662499904632568, lineCount === 1, lineHeight, t1, maxIntrinsicCalculator.value, t3, naturalHeight, paragraph._textAlign, paragraph._textDirection, t2);
    },
    measureSubstringWidth$3: function(paragraph, start, end) {
      var style = paragraph._geometricStyle,
        t1 = this._canvasContext;
      t1.font = style.get$cssFontString();
      return H._measureSubstring(t1, style, paragraph._plainText, start, end);
    },
    getTextPositionForOffset$3: function(paragraph, constraints, offset) {
      return C.TextPosition_0_TextAffinity_1;
    },
    get$isCanvas: function() {
      return true;
    }
  };
  H.LinesCalculator.prototype = {
    update$1: function(_, brk) {
      var t2, chunkEndWithoutSpace, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, isLastLine, breakingPoint, widthOfResultingLine, alignOffset, _this = this,
        t1 = brk.type,
        isHardBreak = t1 === C.LineBreakType_1 || t1 === C.LineBreakType_2,
        chunkEnd = brk.index;
      t1 = _this.__engine$_paragraph;
      t2 = t1._plainText;
      chunkEndWithoutSpace = H._excludeTrailing(t2, _this._chunkStart, chunkEnd, H._engine___whitespacePredicate$closure());
      for (t3 = t1._geometricStyle, t4 = t3.ellipsis, t5 = t4 != null, t6 = _this._maxWidth, t7 = _this._canvasContext, t8 = t3.maxLines, t9 = t8 == null, t10 = _this.lines, t11 = J.getInterceptor$s(t2); !_this._reachedMaxLines;) {
        if (H._measureSubstring(t7, t3, t2, _this._lineStart, chunkEndWithoutSpace) <= t6)
          break;
        t12 = _this._chunkStart;
        t13 = _this._lineStart;
        isLastLine = t5 && t9 || t10.length + 1 === t8;
        _this._reachedMaxLines = isLastLine;
        if (isLastLine && t5) {
          t12 = _this._cachedEllipsisWidth;
          if (t12 == null)
            t12 = _this._cachedEllipsisWidth = C.JSNumber_methods.round$0(t7.measureText(t4).width * 100) / 100;
          breakingPoint = _this.forceBreakSubstring$3$end$maxWidth$start(chunkEndWithoutSpace, t6 - t12, _this._lineStart);
          t12 = H._measureSubstring(t7, t3, t2, _this._lineStart, breakingPoint);
          t13 = _this._cachedEllipsisWidth;
          widthOfResultingLine = t12 + (t13 == null ? _this._cachedEllipsisWidth = C.JSNumber_methods.round$0(t7.measureText(t4).width * 100) / 100 : t13);
          alignOffset = H._calculateAlignOffsetForLine(widthOfResultingLine, t6, t1);
          t12 = t11.substring$2(t2, _this._lineStart, breakingPoint) + t4;
          t13 = _this._lineStart;
          t10.push(H.EngineLineMetrics$withText(t12, chunkEnd, H._excludeTrailing(t2, _this._chunkStart, chunkEnd, H._engine___newlinePredicate$closure()), false, alignOffset, t10.length, t13, widthOfResultingLine));
        } else if (t12 === t13) {
          breakingPoint = _this.forceBreakSubstring$3$end$maxWidth$start(chunkEndWithoutSpace, t6, t13);
          if (breakingPoint === chunkEndWithoutSpace)
            break;
          _this._addLineBreak$2$isHardBreak$lineEnd(false, breakingPoint);
          _this._chunkStart = breakingPoint;
        } else
          _this._addLineBreak$2$isHardBreak$lineEnd(false, t12);
      }
      if (_this._reachedMaxLines)
        return;
      if (isHardBreak)
        _this._addLineBreak$2$isHardBreak$lineEnd(true, chunkEnd);
      _this._chunkStart = chunkEnd;
    },
    _addLineBreak$2$isHardBreak$lineEnd: function(isHardBreak, lineEnd) {
      var _this = this,
        t1 = _this.__engine$_paragraph,
        t2 = t1._plainText,
        endWithoutNewlines = H._excludeTrailing(t2, _this._lineStart, lineEnd, H._engine___newlinePredicate$closure()),
        endWithoutSpace = H._excludeTrailing(t2, _this._lineStart, endWithoutNewlines, H._engine___whitespacePredicate$closure()),
        t3 = _this.lines,
        lineNumber = t3.length,
        t4 = t1._geometricStyle,
        lineWidth = H._measureSubstring(_this._canvasContext, t4, t2, _this._lineStart, endWithoutSpace),
        alignOffset = H._calculateAlignOffsetForLine(lineWidth, _this._maxWidth, t1);
      t1 = _this._lineStart;
      t3.push(H.EngineLineMetrics$withText(J.substring$2$s(t2, t1, endWithoutNewlines), lineEnd, endWithoutNewlines, isHardBreak, alignOffset, lineNumber, t1, lineWidth));
      _this._lineStart = lineEnd;
      if (t3.length === t4.maxLines)
        _this._reachedMaxLines = true;
    },
    forceBreakSubstring$3$end$maxWidth$start: function(end, maxWidth, start) {
      var high, mid, width,
        t1 = this.__engine$_paragraph,
        t2 = t1._geometricStyle,
        low = t2.ellipsis != null ? start : start + 1,
        t3 = this._canvasContext;
      t1 = t1._plainText;
      high = end;
      do {
        mid = C.JSInt_methods._tdivFast$1(low + high, 2);
        width = H._measureSubstring(t3, t2, t1, start, mid);
        if (width < maxWidth)
          low = mid;
        else {
          low = width > maxWidth ? low : mid;
          high = mid;
        }
      } while (high - low > 1);
      return low;
    }
  };
  H.MaxIntrinsicCalculator.prototype = {
    update$1: function(_, brk) {
      var hardLineEnd, t1, hardLineEndWithoutNewlines, lineWidth, _this = this;
      if (brk.type === C.LineBreakType_0)
        return;
      hardLineEnd = brk.index;
      t1 = _this.__engine$_text;
      hardLineEndWithoutNewlines = H._excludeTrailing(t1, _this._lastHardLineEnd, hardLineEnd, H._engine___newlinePredicate$closure());
      lineWidth = H._measureSubstring(_this._canvasContext, _this._style, t1, _this._lastHardLineEnd, hardLineEndWithoutNewlines);
      if (lineWidth > _this.value)
        _this.value = lineWidth;
      _this._lastHardLineEnd = hardLineEnd;
    }
  };
  H.EngineLineMetrics.prototype = {
    get$hashCode: function(_) {
      var _this = this, _null = null;
      return P.hashValues(_this.displayText, _this.startIndex, _this.endIndex, _this.hardBreak, _null, _null, _null, _null, _this.width, _this.left, _null, _this.lineNumber, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (_this.displayText === other.displayText)
        if (_this.startIndex === other.startIndex)
          if (_this.endIndex === other.endIndex)
            if (_this.hardBreak === other.hardBreak)
              if (_this.width == other.width)
                if (_this.left === other.left)
                  t1 = _this.lineNumber === other.lineNumber;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  H.EngineParagraph.prototype = {
    get$_hasLineMetrics: function() {
      var t1 = this._measurementResult;
      return (t1 == null ? null : t1.lines) != null;
    },
    get$width: function(_) {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.width;
      return t1 == null ? -1 : t1;
    },
    get$height: function(_) {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.height;
      return t1 == null ? 0 : t1;
    },
    get$_lineHeight: function(_) {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.lineHeight;
      return t1 == null ? 0 : t1;
    },
    get$longestLine: function() {
      var t1, t2, maxWidth, _i, maxWidth0;
      if (this.get$_hasLineMetrics()) {
        for (t1 = this._measurementResult.lines, t2 = t1.length, maxWidth = 0, _i = 0; _i < t2; ++_i) {
          maxWidth0 = t1[_i].width;
          if (maxWidth < maxWidth0)
            maxWidth = maxWidth0;
        }
        return maxWidth;
      }
      return 0;
    },
    get$maxIntrinsicWidth: function() {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.maxIntrinsicWidth;
      return t1 == null ? 0 : t1;
    },
    get$alphabeticBaseline: function(_) {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.alphabeticBaseline;
      return t1 == null ? -1 : t1;
    },
    get$ideographicBaseline: function(_) {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.ideographicBaseline;
      return t1 == null ? -1 : t1;
    },
    get$didExceedMaxLines: function() {
      return this._didExceedMaxLines;
    },
    layout$1: function(constraints) {
      var stopwatch, t2, _this = this,
        t1 = constraints.width;
      t1.toString;
      t1 = Math.floor(t1);
      constraints = new P.ParagraphConstraints(t1);
      if (constraints.$eq(0, _this._lastUsedConstraints))
        return;
      stopwatch = new P.Stopwatch();
      if ($.Stopwatch__frequency == null) {
        H.Primitives_initTicker();
        $.Stopwatch__frequency = $.Primitives_timerFrequency;
      }
      stopwatch.start$0(0);
      _this._measurementResult = H.TextMeasurementService_forParagraph(_this).measure$2(0, _this, constraints);
      stopwatch.stop$0(0);
      H.Profiler_instance().benchmark$2("text_layout", stopwatch.get$elapsedMicroseconds());
      _this._lastUsedConstraints = constraints;
      if (_this._geometricStyle.maxLines != null) {
        t2 = _this._measurementResult;
        t2 = t2 == null ? null : t2.naturalHeight;
        if (t2 == null)
          t2 = 0;
        _this._didExceedMaxLines = t2 > _this.get$height(_this);
      } else
        _this._didExceedMaxLines = false;
      if (_this._measurementResult.isSingleLine && true)
        switch (_this._textAlign) {
          case C.TextAlign_2:
            _this._alignOffset = (t1 - _this.get$maxIntrinsicWidth()) / 2;
            break;
          case C.TextAlign_1:
            _this._alignOffset = t1 - _this.get$maxIntrinsicWidth();
            break;
          case C.TextAlign_4:
            _this._alignOffset = _this._textDirection === C.TextDirection_0 ? t1 - _this.get$maxIntrinsicWidth() : 0;
            break;
          case C.TextAlign_5:
            _this._alignOffset = _this._textDirection === C.TextDirection_1 ? t1 - _this.get$maxIntrinsicWidth() : 0;
            break;
          default:
            _this._alignOffset = 0;
            break;
        }
    },
    getBoxesForPlaceholders$0: function() {
      return C.List_empty5;
    },
    get$_drawOnCanvas: function() {
      var t1, _this = this;
      if (!_this.get$_hasLineMetrics())
        return false;
      if (H.TextMeasurementService_forParagraph(_this).get$isCanvas() ? true : _this._geometricStyle.ellipsis == null) {
        t1 = _this._geometricStyle;
        t1 = t1.decoration == null && t1.wordSpacing == null && true;
      } else
        t1 = false;
      return t1;
    },
    getBoxesForRange$4$boxHeightStyle$boxWidthStyle: function(start, end, boxHeightStyle, boxWidthStyle) {
      var t1, $length, t2, t3, lines, startLine, endLine, boxes, i, t4, widthBeforeBox, widthAfterBox, t5, t6, $top, _this = this;
      if (start == end || start < 0 || end < 0)
        return H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      t1 = _this._plainText;
      if (t1 == null)
        return H.setRuntimeTypeInfo([new P.TextBox(0, 0, 0, _this.get$_lineHeight(_this), _this._textDirection)], type$.JSArray_TextBox);
      $length = t1.length;
      if (start > $length || end > $length)
        return H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      if (!_this.get$_hasLineMetrics()) {
        H.TextMeasurementService_forParagraph(_this);
        t2 = _this._lastUsedConstraints;
        t3 = _this._alignOffset;
        return $.TextMeasurementService_rulerManager.findOrCreateRuler$1(_this._geometricStyle).measureBoxesForRange$6$alignOffset$end$start$textDirection(t1, t2, t3, end, start, _this._textDirection);
      }
      lines = _this._measurementResult.lines;
      if (start >= (lines && C.JSArray_methods).get$last(lines).endIndex)
        return H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      startLine = _this._getLineForIndex$1(start);
      endLine = _this._getLineForIndex$1(end);
      if (end === endLine.startIndex)
        endLine = lines[endLine.lineNumber - 1];
      boxes = H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      for (i = startLine.lineNumber, t1 = endLine.lineNumber, t2 = _this._textDirection; i <= t1; ++i) {
        t3 = lines[i];
        t4 = t3.startIndex;
        widthBeforeBox = start <= t4 ? 0 : H.TextMeasurementService_forParagraph(_this).measureSubstringWidth$3(_this, t4, start);
        t4 = t3.endIndexWithoutNewlines;
        widthAfterBox = end >= t4 ? 0 : H.TextMeasurementService_forParagraph(_this).measureSubstringWidth$3(_this, end, t4);
        t4 = _this._measurementResult;
        t5 = t4 == null;
        t6 = t5 ? null : t4.lineHeight;
        if (t6 == null)
          t6 = 0;
        $top = t3.lineNumber * t6;
        t6 = t3.left;
        t4 = t5 ? null : t4.lineHeight;
        if (t4 == null)
          t4 = 0;
        boxes.push(new P.TextBox(t6 + widthBeforeBox, $top, t6 + t3.width - widthAfterBox, $top + t4, t2));
      }
      return boxes;
    },
    getBoxesForRange$2: function(start, end) {
      return this.getBoxesForRange$4$boxHeightStyle$boxWidthStyle(start, end, C.BoxHeightStyle_0, C.BoxWidthStyle_0);
    },
    getPositionForOffset$1: function(offset) {
      var t1, lineNumber, lineMetrics, lineLeft, dx, instance, low, high, low0, current, width, _this = this,
        lines = _this._measurementResult.lines;
      if (!_this.get$_hasLineMetrics())
        return H.TextMeasurementService_forParagraph(_this).getTextPositionForOffset$3(_this, _this._lastUsedConstraints, offset);
      t1 = offset._dy;
      if (t1 < 0)
        return new P.TextPosition(0, C.TextAffinity_1);
      lineNumber = C.JSNumber_methods.$tdiv(t1, _this._measurementResult.lineHeight);
      if (lineNumber >= lines.length)
        return new P.TextPosition(_this._plainText.length, C.TextAffinity_0);
      lineMetrics = lines[lineNumber];
      lineLeft = lineMetrics.left;
      t1 = offset._dx;
      if (t1 <= lineLeft)
        return new P.TextPosition(lineMetrics.startIndex, C.TextAffinity_1);
      if (t1 >= lineLeft + lineMetrics.width)
        return new P.TextPosition(lineMetrics.endIndexWithoutNewlines, C.TextAffinity_0);
      dx = t1 - lineLeft;
      instance = H.TextMeasurementService_forParagraph(_this);
      low = lineMetrics.startIndex;
      high = lineMetrics.endIndexWithoutNewlines;
      low0 = low;
      do {
        current = C.JSInt_methods._tdivFast$1(low0 + high, 2);
        width = instance.measureSubstringWidth$3(_this, low, current);
        if (width < dx)
          low0 = current;
        else {
          low0 = width > dx ? low0 : current;
          high = current;
        }
      } while (high - low0 > 1);
      if (low0 === high)
        return new P.TextPosition(high, C.TextAffinity_0);
      if (dx - instance.measureSubstringWidth$3(_this, low, low0) < instance.measureSubstringWidth$3(_this, low, high) - dx)
        return new P.TextPosition(low0, C.TextAffinity_1);
      else
        return new P.TextPosition(high, C.TextAffinity_0);
    },
    _getLineForIndex$1: function(index) {
      var t1, i, line,
        lines = this._measurementResult.lines;
      for (t1 = lines.length, i = 0; i < t1; ++i) {
        line = lines[i];
        if (index >= line.startIndex && index < line.endIndex)
          return line;
      }
      return C.JSArray_methods.get$last(lines);
    },
    $isParagraph: 1
  };
  H.EngineParagraphStyle.prototype = {
    get$_effectiveFontFamily: function() {
      var t1 = this._fontFamily;
      if (t1 == null || t1.length === 0)
        return "sans-serif";
      return t1;
    },
    get$_lineHeight: function(_) {
      var t2,
        t1 = this._strutStyle;
      if (t1 != null)
        t2 = false;
      else
        t2 = true;
      if (t2)
        return this._height;
      t1 = t1._height;
      t2 = this._height;
      if (t2 == null)
        t2 = 0;
      return Math.max(H.checkNum(t1), t2);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (_this._textAlign != other._textAlign)
        if (_this._textDirection != other._textDirection)
          _this._fontWeight != other._fontWeight;
      return true;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this._textAlign, _this._textDirection, _this._fontWeight, _this._fontStyle, _this._maxLines, _this._fontFamily, _this._fontSize, _this._height, _this._textHeightBehavior, _this._ellipsis, _this._locale, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.EngineTextStyle.prototype = {
    get$_effectiveFontFamily: function() {
      var t1 = this._fontFamily;
      if (t1.length === 0)
        return "sans-serif";
      return t1;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (J.$eq$(_this._color, other._color))
        if (J.$eq$(_this._decoration, other._decoration))
          if (J.$eq$(_this._decorationColor, other._decorationColor))
            if (_this._decorationStyle == other._decorationStyle)
              if (_this._fontWeight == other._fontWeight)
                t1 = _this._textBaseline == other._textBaseline && _this._fontFamily === other._fontFamily && _this._fontSize == other._fontSize && _this._letterSpacing == other._letterSpacing && _this._wordSpacing == other._wordSpacing && _this._height == other._height && J.$eq$(_this._locale, other._locale) && _this._background == other._background && _this._foreground == other._foreground && H._listEquals(_this._shadows, other._shadows) && H._listEquals(_this._fontFamilyFallback, other._fontFamilyFallback);
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this._color, _this._decoration, _this._decorationColor, _this._decorationStyle, _this._fontWeight, _this._fontStyle, _this._textBaseline, _this._fontFamily, _this._fontFamilyFallback, _this._fontSize, _this._letterSpacing, _this._wordSpacing, _this._height, _this._locale, _this._background, _this._foreground, _this._shadows, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.EngineParagraphBuilder.prototype = {
    pushStyle$1: function(style) {
      this._ops.push(style);
    },
    get$placeholderScales: function() {
      return this._placeholderScales;
    },
    pop$0: function() {
      this._ops.push($.$get$EngineParagraphBuilder__paragraphBuilderPop());
    },
    addText$1: function(text) {
      this._ops.push(text);
    },
    build$0: function() {
      var t1 = this._tryBuildPlainText$0();
      return t1 == null ? this._buildRichText$0() : t1;
    },
    _tryBuildPlainText$0: function() {
      var style, color0, decoration0, decorationColor0, decorationStyle0, fontWeight0, textBaseline0, fontSize0, letterSpacing0, wordSpacing0, height0, locale0, background0, foreground0, cumulativeStyle, paint, plainTextBuffer, plainText, t4, _this = this, _null = null,
        t1 = _this._paragraphStyle,
        fontWeight = t1._fontWeight,
        fontStyle = t1._fontStyle,
        fontFamily = t1._fontFamily,
        fontSize = t1._fontSize,
        textAlign = t1._textAlign,
        textDirection = t1._textDirection,
        locale = t1._locale,
        t2 = _this._ops,
        t3 = t2.length,
        foreground = _null,
        background = foreground,
        height = background,
        wordSpacing = height,
        letterSpacing = wordSpacing,
        textBaseline = letterSpacing,
        decorationStyle = textBaseline,
        decorationColor = decorationStyle,
        decoration = decorationColor,
        color = decoration,
        i = 0;
      while (true) {
        if (!(i < t3 && t2[i] instanceof H.EngineTextStyle))
          break;
        style = t2[i];
        color0 = style._color;
        if (color0 != null)
          color = color0;
        decoration0 = style._decoration;
        if (decoration0 != null)
          decoration = decoration0;
        decorationColor0 = style._decorationColor;
        if (decorationColor0 != null)
          decorationColor = decorationColor0;
        decorationStyle0 = style._decorationStyle;
        if (decorationStyle0 != null)
          decorationStyle = decorationStyle0;
        fontWeight0 = style._fontWeight;
        if (fontWeight0 != null)
          fontWeight = fontWeight0;
        textBaseline0 = style._textBaseline;
        if (textBaseline0 != null)
          textBaseline = textBaseline0;
        fontFamily = style._fontFamily;
        fontSize0 = style._fontSize;
        if (fontSize0 != null)
          fontSize = fontSize0;
        letterSpacing0 = style._letterSpacing;
        if (letterSpacing0 != null)
          letterSpacing = letterSpacing0;
        wordSpacing0 = style._wordSpacing;
        if (wordSpacing0 != null)
          wordSpacing = wordSpacing0;
        height0 = style._height;
        if (height0 != null)
          height = height0;
        locale0 = style._locale;
        if (locale0 != null)
          locale = locale0;
        background0 = style._background;
        if (background0 != null)
          background = background0;
        foreground0 = style._foreground;
        if (foreground0 != null)
          foreground = foreground0;
        ++i;
      }
      cumulativeStyle = H.EngineTextStyle$(background, color, decoration, decorationColor, decorationStyle, _null, fontFamily, _null, _null, fontSize, fontStyle, fontWeight, foreground, height, letterSpacing, locale, _null, textBaseline, wordSpacing);
      if (foreground != null)
        paint = foreground;
      else {
        paint = new H.SurfacePaint(new H.SurfacePaintData());
        if (color != null)
          paint.set$color(0, color);
      }
      if (i >= t2.length) {
        t2 = _this._paragraphElement;
        H._applyTextStyleToElement(t2, false, cumulativeStyle);
        t3 = t1._maxLines;
        return H.EngineParagraph$(cumulativeStyle._background, H.ParagraphGeometricStyle$(H._textDecorationToCssString(decoration, decorationStyle), t1._ellipsis, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, height, t3, _null, wordSpacing), paint, t2, "", textAlign, textDirection);
      }
      if (typeof t2[i] != "string")
        return _null;
      plainTextBuffer = new P.StringBuffer("");
      t3 = "";
      while (true) {
        if (!(i < t2.length && typeof t2[i] == "string"))
          break;
        t3 += H.S(t2[i]);
        plainTextBuffer._contents = t3;
        ++i;
      }
      for (; i < t2.length; ++i)
        if (!J.$eq$(t2[i], $.$get$EngineParagraphBuilder__paragraphBuilderPop()))
          return _null;
      t2 = plainTextBuffer._contents;
      plainText = t2.charCodeAt(0) == 0 ? t2 : t2;
      t2 = _this._paragraphElement;
      $.$get$domRenderer().toString;
      t2.toString;
      t2.appendChild(document.createTextNode(plainText));
      H._applyTextStyleToElement(t2, false, cumulativeStyle);
      t3 = cumulativeStyle._background;
      if (t3 != null)
        H._applyTextBackgroundToElement(t2, cumulativeStyle);
      t4 = t1._maxLines;
      return H.EngineParagraph$(t3, H.ParagraphGeometricStyle$(H._textDecorationToCssString(decoration, decorationStyle), t1._ellipsis, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, height, t4, _null, wordSpacing), paint, t2, plainText, textAlign, textDirection);
    },
    _buildRichText$0: function() {
      var t1, i, op, element, t2, t3, t4, t5, t6, t7, _this = this, _null = null, elementStack = [],
        currentElement = new H.EngineParagraphBuilder__buildRichText_currentElement(_this, elementStack);
      for (t1 = _this._ops, i = 0; i < t1.length; ++i) {
        op = t1[i];
        if (op instanceof H.EngineTextStyle) {
          $.$get$domRenderer().toString;
          element = document.createElement("span");
          H._applyTextStyleToElement(element, true, op);
          if (op._background != null)
            H._applyTextBackgroundToElement(element, op);
          currentElement.call$0().appendChild(element);
          elementStack.push(element);
        } else if (typeof op == "string") {
          t2 = $.$get$domRenderer();
          t3 = currentElement.call$0();
          t2.toString;
          t3.toString;
          t3.appendChild(document.createTextNode(op));
        } else {
          t2 = $.$get$EngineParagraphBuilder__paragraphBuilderPop();
          if (op == null ? t2 == null : op === t2)
            elementStack.pop();
          else
            throw H.wrapException(P.UnsupportedError$("Unsupported ParagraphBuilder operation: " + H.S(op)));
        }
      }
      t1 = _this._paragraphStyle;
      t2 = t1._fontFamily;
      t3 = t1._fontWeight;
      t4 = t1._fontStyle;
      t5 = t1._fontSize;
      t6 = t1._height;
      t7 = t1._maxLines;
      return H.EngineParagraph$(_null, H.ParagraphGeometricStyle$(_null, t1._ellipsis, t2, t5, t4, t3, _null, t6, t7, _null, _null), _null, _this._paragraphElement, _null, t1._textAlign, t1._textDirection);
    }
  };
  H.EngineParagraphBuilder__buildRichText_currentElement.prototype = {
    call$0: function() {
      var t1 = this.elementStack;
      return t1.length !== 0 ? C.JSArray_methods.get$last(t1) : this.$this._paragraphElement;
    },
    $signature: 116
  };
  H.ParagraphGeometricStyle.prototype = {
    get$effectiveFontFamily: function() {
      var t1 = this.fontFamily;
      if (t1 == null || t1.length === 0)
        return "sans-serif";
      return t1;
    },
    get$cssFontString: function() {
      var t2, _this = this,
        t1 = _this._cssFontString;
      if (t1 == null) {
        t1 = _this.fontWeight;
        t1 = (t1 != null ? "normal " + H.S(H.fontWeightToCss(t1)) : "normal normal") + " ";
        t2 = _this.fontSize;
        t1 = (t2 != null ? t1 + C.JSNumber_methods.floor$0(t2) + "px" : t1 + "14px") + " " + H.S(H.canonicalizeFontFamily(_this.get$effectiveFontFamily()));
        t1 = _this._cssFontString = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return t1;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (_this.fontWeight == other.fontWeight)
        t1 = _this.fontFamily == other.fontFamily && _this.fontSize == other.fontSize && _this.lineHeight == other.lineHeight && _this.maxLines == other.maxLines && _this.letterSpacing == other.letterSpacing && _this.wordSpacing == other.wordSpacing && _this.decoration == other.decoration && _this.ellipsis == other.ellipsis;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this,
        t1 = _this._cachedHashCode;
      return t1 == null ? _this._cachedHashCode = P.hashValues(_this.fontWeight, _this.fontStyle, _this.fontFamily, _this.fontSize, _this.lineHeight, _this.maxLines, _this.letterSpacing, _this.wordSpacing, _this.decoration, _this.ellipsis, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd) : t1;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.TextDimensions.prototype = {
    updateText$2: function(from, style) {
      var plainText, t1, copy;
      this._cachedBoundingClientRect = null;
      plainText = from._plainText;
      if (plainText != null) {
        t1 = this.__engine$_element;
        if (C.JSString_methods.endsWith$1(plainText, "\n"))
          t1.textContent = plainText + "\n";
        else
          t1.textContent = plainText;
      } else {
        copy = from._paragraphElement.cloneNode(true);
        copy.toString;
        new W._ChildNodeListLazy(this.__engine$_element).addAll$1(0, new W._ChildNodeListLazy(copy));
      }
    },
    updateConstraintWidth$2: function(width, ellipsis) {
      var t1, t2;
      this._cachedBoundingClientRect = null;
      width.toString;
      if (width == 1 / 0 || width == -1 / 0) {
        t1 = this.__engine$_element.style;
        t1.width = "";
        t1.whiteSpace = "pre";
      } else {
        t1 = this.__engine$_element;
        if (ellipsis != null) {
          t1 = t1.style;
          t2 = H.S(width) + "px";
          t1.width = t2;
          t1.whiteSpace = "pre";
        } else {
          t1 = t1.style;
          t2 = H.S(width) + "px";
          t1.width = t2;
          t1.whiteSpace = "pre-wrap";
        }
      }
    },
    applyStyle$1: function(style) {
      var decoration, _null = null,
        t1 = this.__engine$_element,
        elementStyle = t1.style,
        t2 = style.fontSize;
      t2 = t2 != null ? "" + C.JSNumber_methods.floor$0(t2) + "px" : _null;
      elementStyle.toString;
      elementStyle.fontSize = t2 == null ? "" : t2;
      t2 = H.canonicalizeFontFamily(style.get$effectiveFontFamily());
      elementStyle.fontFamily = t2 == null ? "" : t2;
      t2 = style.fontWeight;
      t2 = t2 != null ? H.fontWeightToCss(t2) : _null;
      elementStyle.fontWeight = t2 == null ? "" : t2;
      elementStyle.fontStyle = "";
      t2 = style.letterSpacing;
      t2 = t2 != null ? H.S(t2) + "px" : _null;
      elementStyle.letterSpacing = t2 == null ? "" : t2;
      t2 = style.wordSpacing;
      t2 = t2 != null ? H.S(t2) + "px" : _null;
      elementStyle.wordSpacing = t2 == null ? "" : t2;
      decoration = style.decoration;
      if (H.browserEngine() === C.BrowserEngine_1)
        $.$get$domRenderer().setElementStyle$3(t1, "-webkit-text-decoration", decoration);
      else
        elementStyle.textDecoration = decoration == null ? "" : decoration;
      t1 = style.lineHeight;
      if (t1 != null) {
        t1 = C.JSNumber_methods.toString$0(t1);
        elementStyle.lineHeight = t1;
      }
      this._cachedBoundingClientRect = null;
    },
    _readAndCacheMetrics$0: function() {
      var t1 = this._cachedBoundingClientRect;
      return t1 == null ? this._cachedBoundingClientRect = this.__engine$_element.getBoundingClientRect() : t1;
    },
    get$height: function(_) {
      var cachedHeight = this._readAndCacheMetrics$0().height;
      return H.browserEngine() === C.BrowserEngine_2 && true ? cachedHeight + 1 : cachedHeight;
    }
  };
  H.ParagraphRuler.prototype = {
    get$alphabeticBaseline: function(_) {
      var t1 = this._cachedAlphabeticBaseline;
      return t1 == null ? this._cachedAlphabeticBaseline = this._probe.getBoundingClientRect().bottom : t1;
    },
    get$lineHeightDimensions: function() {
      var t1, _this = this;
      if (_this._lineHeightDimensions == null) {
        t1 = document;
        _this._lineHeightHost = t1.createElement("div");
        _this._lineHeightDimensions = new H.TextDimensions(t1.createElement("p"));
        t1 = _this._lineHeightHost.style;
        t1.visibility = "hidden";
        t1.position = "absolute";
        t1.top = "0";
        t1.left = "0";
        t1.display = "flex";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "flex-direction"), "row", "");
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "align-items"), "baseline", "");
        t1.margin = "0";
        t1.border = "0";
        t1.padding = "0";
        _this.get$lineHeightDimensions().applyStyle$1(_this.style);
        t1 = _this.get$lineHeightDimensions().__engine$_element.style;
        t1.whiteSpace = "pre";
        t1 = _this.get$lineHeightDimensions();
        t1._cachedBoundingClientRect = null;
        t1.__engine$_element.textContent = " ";
        t1 = _this.get$lineHeightDimensions();
        _this._lineHeightHost.appendChild(t1.__engine$_element);
        t1._cachedBoundingClientRect = null;
        _this.rulerManager._rulerHost.appendChild(_this._lineHeightHost);
        _this._lineHeightHost.appendChild(_this._probe);
      }
      return _this._lineHeightDimensions;
    },
    measureAsSingleLine$0: function() {
      var t1 = this.__engine$_paragraph,
        t2 = this.singleLineDimensions;
      if (t1._plainText === "") {
        t2._cachedBoundingClientRect = null;
        t2.__engine$_element.textContent = " ";
      } else
        t2.updateText$2(t1, this.style);
    },
    measureWithConstraints$1: function(constraints) {
      var t1 = this.constrainedDimensions,
        t2 = this.style;
      t1.updateText$2(this.__engine$_paragraph, t2);
      t1.updateConstraintWidth$2(constraints.width + 0.5, t2.ellipsis);
    },
    hitTest$2: function(constraints, offset) {
      var el, textNodes, i, bounds, dx, dy, _this = this;
      _this.measureWithConstraints$1(constraints);
      el = _this.constrainedDimensions.__engine$_element;
      textNodes = H.setRuntimeTypeInfo([], type$.JSArray_Node);
      _this._collectTextNodes$2(el.childNodes, textNodes);
      for (i = textNodes.length - 1; i >= 0; --i) {
        bounds = textNodes[i].parentNode.getBoundingClientRect();
        dx = offset._dx;
        dy = offset._dy;
        if (dx >= bounds.left && dx < bounds.right && dy >= bounds.top && dy < bounds.bottom)
          return _this._countTextPosition$2(el.childNodes, textNodes[i]);
      }
      return 0;
    },
    _collectTextNodes$2: function(nodes, textNodes) {
      var childNodes, t1, _i, node;
      if (J.get$isEmpty$asx(nodes))
        return;
      childNodes = H.setRuntimeTypeInfo([], type$.JSArray_Node);
      for (t1 = nodes.length, _i = 0; _i < nodes.length; nodes.length === t1 || (0, H.throwConcurrentModificationError)(nodes), ++_i) {
        node = nodes[_i];
        if (node.nodeType === 3)
          textNodes.push(node);
        C.JSArray_methods.addAll$1(childNodes, node.childNodes);
      }
      this._collectTextNodes$2(childNodes, textNodes);
    },
    _countTextPosition$2: function(nodes, endNode) {
      var position, node, t1,
        stack = new H.ReversedListIterable(nodes, H.instanceType(nodes)._eval$1("ReversedListIterable<ListMixin.E>")).toList$0(0);
      for (position = 0; true;) {
        node = C.JSArray_methods.removeLast$0(stack);
        t1 = node.childNodes;
        C.JSArray_methods.addAll$1(stack, new H.ReversedListIterable(t1, H.instanceType(t1)._eval$1("ReversedListIterable<ListMixin.E>")));
        if (node === endNode)
          break;
        if (node.nodeType === 3)
          position += node.textContent.length;
      }
      return position;
    },
    didMeasure$0: function() {
      var t1, _this = this;
      if (_this.__engine$_paragraph._plainText == null) {
        t1 = $.$get$domRenderer();
        t1.clearDom$1(_this.singleLineDimensions.__engine$_element);
        t1.clearDom$1(_this.minIntrinsicDimensions.__engine$_element);
        t1.clearDom$1(_this.constrainedDimensions.__engine$_element);
      }
      _this.__engine$_paragraph = null;
    },
    measureBoxesForRange$6$alignOffset$end$start$textDirection: function(plainText, constraints, alignOffset, end, start, textDirection) {
      var t2, t3, value, boxes, maxLinesLimit, previousRect, _i, rect, t4,
        before = J.getInterceptor$s(plainText).substring$2(plainText, 0, start),
        rangeText = C.JSString_methods.substring$2(plainText, start, end),
        after = C.JSString_methods.substring$1(plainText, end),
        t1 = document,
        rangeSpan = t1.createElement("span");
      rangeSpan.textContent = rangeText;
      t2 = this.constrainedDimensions;
      t3 = t2.__engine$_element;
      $.$get$domRenderer().clearDom$1(t3);
      t3.appendChild(t1.createTextNode(before));
      t3.appendChild(rangeSpan);
      t3.appendChild(t1.createTextNode(after));
      t2.updateConstraintWidth$2(constraints.width, null);
      value = rangeSpan.getClientRects();
      if (value.prototype == null)
        value.prototype = Object.create(null);
      boxes = H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      t1 = this.style.maxLines;
      if (t1 == null)
        maxLinesLimit = 1 / 0;
      else {
        t2 = this.get$lineHeightDimensions();
        maxLinesLimit = t1 * t2.get$height(t2);
      }
      for (t1 = value.length, previousRect = null, _i = 0; _i < value.length; value.length === t1 || (0, H.throwConcurrentModificationError)(value), ++_i) {
        rect = value[_i];
        t2 = J.getInterceptor$x(rect);
        t4 = t2.get$top(rect);
        if (t4 == (previousRect == null ? null : J.get$top$x(previousRect)) && t2.get$left(rect) == t2.get$right(rect))
          continue;
        if (t2.get$top(rect) >= maxLinesLimit)
          break;
        boxes.push(new P.TextBox(t2.get$left(rect) + alignOffset, t2.get$top(rect), t2.get$right(rect) + alignOffset, t2.get$bottom(rect), textDirection));
        previousRect = rect;
      }
      $.$get$domRenderer().clearDom$1(t3);
      return boxes;
    },
    dispose$0: function() {
      var t1, _this = this;
      C.DivElement_methods.remove$0(_this._singleLineHost);
      C.DivElement_methods.remove$0(_this._minIntrinsicHost);
      C.DivElement_methods.remove$0(_this._constrainedHost);
      t1 = _this._lineHeightHost;
      if (t1 != null)
        C.DivElement_methods.remove$0(t1);
    },
    cacheMeasurement$2: function(paragraph, item) {
      var t2, i,
        plainText = paragraph._plainText,
        t1 = this._measurementCache,
        constraintCache = t1.$index(0, plainText);
      if (constraintCache == null) {
        constraintCache = H.setRuntimeTypeInfo([], type$.JSArray_MeasurementResult);
        t1.$indexSet(0, plainText, constraintCache);
      }
      constraintCache.push(item);
      if (constraintCache.length > 8)
        C.JSArray_methods.removeAt$1(constraintCache, 0);
      t2 = this._mruList;
      t2.push(plainText);
      if (t2.length > 2400) {
        for (i = 0; i < 100; ++i)
          t1.remove$1(0, t2[i]);
        C.JSArray_methods.removeRange$2(t2, 0, 100);
      }
    },
    cacheLookup$2: function(paragraph, constraints) {
      var constraintCache, len, t1, t2, t3, i, item,
        plainText = paragraph._plainText;
      if (plainText == null)
        return null;
      constraintCache = this._measurementCache.$index(0, plainText);
      if (constraintCache == null)
        return null;
      len = constraintCache.length;
      for (t1 = constraints.width, t2 = paragraph._textAlign, t3 = paragraph._textDirection, i = 0; i < len; ++i) {
        item = constraintCache[i];
        if (item.constraintWidth == t1 && item.textAlign === t2 && item.textDirection === t3)
          return item;
      }
      return null;
    }
  };
  H.MeasurementResult.prototype = {};
  H.EngineInputType.prototype = {
    get$submitActionOnEnter: function() {
      return true;
    },
    createDomElement$0: function() {
      return W.InputElement_InputElement();
    },
    configureInputMode$1: function(domElement) {
      if (this.get$inputmodeAttribute() == null)
        return;
      if (H.operatingSystem() === C.OperatingSystem_0 || H.operatingSystem() === C.OperatingSystem_1)
        domElement.setAttribute("inputmode", this.get$inputmodeAttribute());
    }
  };
  H.TextInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "text";
    }
  };
  H.NumberInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "numeric";
    }
  };
  H.PhoneInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "tel";
    }
  };
  H.EmailInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "email";
    }
  };
  H.UrlInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "url";
    }
  };
  H.MultilineInputType.prototype = {
    get$submitActionOnEnter: function() {
      return false;
    },
    createDomElement$0: function() {
      return document.createElement("textarea");
    },
    get$inputmodeAttribute: function() {
      return null;
    }
  };
  H.EditingState.prototype = {
    get$hashCode: function(_) {
      return P.hashValues(this.text, this.baseOffset, this.extentOffset, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!H.getRuntimeType(_this).$eq(0, J.get$runtimeType$(other)))
        return false;
      return _this.text == other.text && _this.baseOffset == other.baseOffset && _this.extentOffset == other.extentOffset;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.InputConfiguration.prototype = {};
  H.GloballyPositionedTextEditingStrategy.prototype = {
    placeElement$0: function() {
      var t1, t2, cssTransform, t3;
      this.super$DefaultTextEditingStrategy$placeElement();
      t1 = this._geometry;
      if (t1 != null) {
        t2 = this.domElement;
        cssTransform = H.float64ListToCssTransform(t1.globalTransform);
        t2 = t2.style;
        t3 = H.S(t1.width) + "px";
        t2.width = t3;
        t1 = H.S(t1.height) + "px";
        t2.height = t1;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "transform"), cssTransform, "");
      }
    }
  };
  H.DefaultTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange: function(inputConfig, onAction, onChange) {
      var autocorrectValue, elementStyle, _this = this,
        _s11_ = "transparent",
        _s4_ = "none",
        t1 = inputConfig.inputType.createDomElement$0();
      _this.domElement = t1;
      if (inputConfig.obscureText)
        t1.setAttribute("type", "password");
      autocorrectValue = inputConfig.autocorrect ? "on" : "off";
      _this.domElement.setAttribute("autocorrect", autocorrectValue);
      t1 = _this.domElement;
      t1.classList.add("flt-text-editing");
      elementStyle = t1.style;
      elementStyle.whiteSpace = "pre-wrap";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "align-content"), "center", "");
      elementStyle.position = "absolute";
      elementStyle.top = "0";
      elementStyle.left = "0";
      elementStyle.padding = "0";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "opacity"), "1", "");
      elementStyle.color = _s11_;
      elementStyle.backgroundColor = _s11_;
      elementStyle.background = _s11_;
      elementStyle.outline = _s4_;
      elementStyle.border = _s4_;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "resize"), _s4_, "");
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "text-shadow"), _s11_, "");
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "transform-origin"), "0 0 0", "");
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "caret-color"), _s11_, null);
      t1 = _this._style;
      if (t1 != null)
        t1.applyToDomElement$1(_this.domElement);
      _this.initializeElementPlacement$0();
      $.$get$domRenderer()._glassPaneElement.appendChild(_this.domElement);
      _this.isEnabled = true;
      _this._inputConfiguration = inputConfig;
      _this._onChange = onChange;
      _this._onAction = onAction;
    },
    initializeElementPlacement$0: function() {
      this.placeElement$0();
    },
    addEventHandlers$0: function() {
      var t3, t4, _this = this,
        t1 = _this._subscriptions,
        t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$_handleChange();
      t4 = type$._ElementEventStreamImpl_Event._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "input", t3, false, t4));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "keydown", _this.get$_maybeSendAction(), false, type$._ElementEventStreamImpl_KeyboardEvent._precomputed1));
      t1.push(W._EventStreamSubscription$(document, "selectionchange", t3, false, type$.Event));
      t3 = _this.domElement;
      t3.toString;
      t1.push(W._EventStreamSubscription$(t3, "blur", new H.DefaultTextEditingStrategy_addEventHandlers_closure(_this), false, t4));
      _this.preventDefaultForMouseEvents$0();
    },
    updateElementPlacement$1: function(geometry) {
      this._geometry = geometry;
      if (this.isEnabled)
        this.placeElement$0();
    },
    disable$0: function(_) {
      var t1, i, _this = this;
      _this.isEnabled = false;
      _this._geometry = _this._style = _this._lastEditingState = null;
      for (t1 = _this._subscriptions, i = 0; i < t1.length; ++i)
        t1[i].cancel$0(0);
      C.JSArray_methods.set$length(t1, 0);
      J.remove$0$ax(_this.domElement);
      _this.domElement = null;
    },
    setEditingState$1: function(editingState) {
      var t1, element;
      this._lastEditingState = editingState;
      if (this.isEnabled)
        t1 = !(editingState.baseOffset >= 0 && editingState.extentOffset >= 0);
      else
        t1 = true;
      if (t1)
        return;
      element = this.domElement;
      editingState.toString;
      if (type$.InputElement._is(element)) {
        element.value = editingState.text;
        element.setSelectionRange(editingState.baseOffset, editingState.extentOffset);
      } else if (type$.TextAreaElement._is(element)) {
        element.value = editingState.text;
        element.setSelectionRange(editingState.baseOffset, editingState.extentOffset);
      } else
        H.throwExpression(P.UnsupportedError$("Unsupported DOM element type"));
    },
    placeElement$0: function() {
      this.domElement.focus();
    },
    _handleChange$1: function($event) {
      var _this = this,
        newEditingState = H.EditingState_EditingState$fromDomElement(_this.domElement);
      if (!newEditingState.$eq(0, _this._lastEditingState)) {
        _this._lastEditingState = newEditingState;
        _this._onChange.call$1(newEditingState);
      }
    },
    _maybeSendAction$1: function($event) {
      var t1;
      if (this._inputConfiguration.inputType.get$submitActionOnEnter() && $event.keyCode === 13) {
        $event.preventDefault();
        t1 = this._inputConfiguration.inputAction;
        this._onAction.call$1(t1);
      }
    },
    preventDefaultForMouseEvents$0: function() {
      var t3, _this = this,
        t1 = _this._subscriptions,
        t2 = _this.domElement;
      t2.toString;
      t3 = type$._ElementEventStreamImpl_MouseEvent._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "mousedown", new H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure(), false, t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "mouseup", new H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0(), false, t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "mousemove", new H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1(), false, t3));
    }
  };
  H.DefaultTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1: function(_) {
      var t1, t2;
      $.$get$domRenderer().toString;
      t1 = document;
      t2 = this.$this;
      if (t1.hasFocus.apply(t1, []))
        t2.owner.sendTextConnectionClosedToFrameworkIfAny$0();
      else
        t2.domElement.focus();
    },
    $signature: 2
  };
  H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure.prototype = {
    call$1: function(_) {
      _.preventDefault();
    }
  };
  H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0.prototype = {
    call$1: function(_) {
      _.preventDefault();
    }
  };
  H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1.prototype = {
    call$1: function(_) {
      _.preventDefault();
    }
  };
  H.IOSTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange: function(inputConfig, onAction, onChange) {
      this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      inputConfig.inputType.configureInputMode$1(this.domElement);
    },
    initializeElementPlacement$0: function() {
      var t1 = this.domElement.style;
      t1.toString;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), "translate(-9999px, -9999px)", "");
      this._canPosition = false;
    },
    addEventHandlers$0: function() {
      var t3, t4, _this = this,
        t1 = _this._subscriptions,
        t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$_handleChange();
      t4 = type$._ElementEventStreamImpl_Event._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "input", t3, false, t4));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "keydown", _this.get$_maybeSendAction(), false, type$._ElementEventStreamImpl_KeyboardEvent._precomputed1));
      t1.push(W._EventStreamSubscription$(document, "selectionchange", t3, false, type$.Event));
      t3 = _this.domElement;
      t3.toString;
      t1.push(W._EventStreamSubscription$(t3, "focus", new H.IOSTextEditingStrategy_addEventHandlers_closure(_this), false, t4));
      _this._addTapListener$0();
      t3 = _this.domElement;
      t3.toString;
      t1.push(W._EventStreamSubscription$(t3, "blur", new H.IOSTextEditingStrategy_addEventHandlers_closure0(_this), false, t4));
    },
    updateElementPlacement$1: function(geometry) {
      var _this = this;
      _this._geometry = geometry;
      if (_this.isEnabled && _this._canPosition)
        _this.placeElement$0();
    },
    disable$0: function(_) {
      var t1;
      this.super$DefaultTextEditingStrategy$disable(0);
      t1 = this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._positionInputElementTimer = null;
    },
    _addTapListener$0: function() {
      var t1 = this.domElement;
      t1.toString;
      this._subscriptions.push(W._EventStreamSubscription$(t1, "click", new H.IOSTextEditingStrategy__addTapListener_closure(this), false, type$._ElementEventStreamImpl_MouseEvent._precomputed1));
    },
    _schedulePlacement$0: function() {
      var t1 = this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._positionInputElementTimer = P.Timer_Timer(C.Duration_100000, new H.IOSTextEditingStrategy__schedulePlacement_closure(this));
    }
  };
  H.IOSTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1: function(_) {
      this.$this._schedulePlacement$0();
    },
    $signature: 2
  };
  H.IOSTextEditingStrategy_addEventHandlers_closure0.prototype = {
    call$1: function(_) {
      this.$this.owner.sendTextConnectionClosedToFrameworkIfAny$0();
    },
    $signature: 2
  };
  H.IOSTextEditingStrategy__addTapListener_closure.prototype = {
    call$1: function(_) {
      var t2,
        t1 = this.$this;
      if (t1._canPosition) {
        t2 = t1.domElement.style;
        t2.toString;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "transform"), "translate(-9999px, -9999px)", "");
        t1._canPosition = false;
        t1._schedulePlacement$0();
      }
    }
  };
  H.IOSTextEditingStrategy__schedulePlacement_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._canPosition = true;
      t1.placeElement$0();
    },
    $signature: 0
  };
  H.AndroidTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange: function(inputConfig, onAction, onChange) {
      this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      inputConfig.inputType.configureInputMode$1(this.domElement);
    },
    addEventHandlers$0: function() {
      var t3, t4, _this = this,
        t1 = _this._subscriptions,
        t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$_handleChange();
      t4 = type$._ElementEventStreamImpl_Event._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "input", t3, false, t4));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "keydown", _this.get$_maybeSendAction(), false, type$._ElementEventStreamImpl_KeyboardEvent._precomputed1));
      t1.push(W._EventStreamSubscription$(document, "selectionchange", t3, false, type$.Event));
      t3 = _this.domElement;
      t3.toString;
      t1.push(W._EventStreamSubscription$(t3, "blur", new H.AndroidTextEditingStrategy_addEventHandlers_closure(_this), false, t4));
    }
  };
  H.AndroidTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1: function(_) {
      var t1, t2;
      $.$get$domRenderer().toString;
      t1 = document;
      t2 = this.$this;
      if (t1.hasFocus.apply(t1, []))
        t2.domElement.focus();
      else
        t2.owner.sendTextConnectionClosedToFrameworkIfAny$0();
    },
    $signature: 2
  };
  H.FirefoxTextEditingStrategy.prototype = {
    addEventHandlers$0: function() {
      var t3, t4, t5, _this = this,
        t1 = _this._subscriptions,
        t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$_handleChange();
      t4 = type$._ElementEventStreamImpl_Event._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "input", t3, false, t4));
      t2 = _this.domElement;
      t2.toString;
      t5 = type$._ElementEventStreamImpl_KeyboardEvent._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "keydown", _this.get$_maybeSendAction(), false, t5));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "keyup", new H.FirefoxTextEditingStrategy_addEventHandlers_closure(_this), false, t5));
      t5 = _this.domElement;
      t5.toString;
      t1.push(W._EventStreamSubscription$(t5, "select", t3, false, t4));
      t3 = _this.domElement;
      t3.toString;
      t1.push(W._EventStreamSubscription$(t3, "blur", new H.FirefoxTextEditingStrategy_addEventHandlers_closure0(_this), false, t4));
      _this.preventDefaultForMouseEvents$0();
    }
  };
  H.FirefoxTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1: function($event) {
      this.$this._handleChange$1($event);
    }
  };
  H.FirefoxTextEditingStrategy_addEventHandlers_closure0.prototype = {
    call$1: function(_) {
      var activeElement = document.activeElement,
        t1 = this.$this,
        t2 = t1.domElement;
      if (activeElement == null ? t2 != null : activeElement !== t2)
        t1.owner.sendTextConnectionClosedToFrameworkIfAny$0();
      else
        t2.focus();
    },
    $signature: 2
  };
  H.TextEditingChannel.prototype = {};
  H.HybridTextEditing.prototype = {
    get$editingElement: function() {
      var t1 = this._customEditingElement;
      if (t1 != null)
        return t1;
      return this._defaultEditingElement;
    },
    useCustomEditableElement$1: function(customEditingElement) {
      var _this = this;
      if (_this.isEditing && customEditingElement != _this._customEditingElement) {
        _this.isEditing = false;
        _this.get$editingElement().disable$0(0);
      }
      _this._customEditingElement = customEditingElement;
    },
    _startEditing$0: function() {
      var t1, t2, _this = this;
      _this.isEditing = true;
      t1 = _this.get$editingElement();
      t1.initializeTextEditing$3$onAction$onChange(_this._configuration, new H.HybridTextEditing__startEditing_closure(_this), new H.HybridTextEditing__startEditing_closure0(_this));
      t1.addEventHandlers$0();
      t2 = t1._lastEditingState;
      if (t2 != null)
        t1.setEditingState$1(t2);
      t1.domElement.focus();
    },
    sendTextConnectionClosedToFrameworkIfAny$0: function() {
      var t1, t2, _this = this;
      if (_this.isEditing) {
        _this.isEditing = false;
        _this.get$editingElement().disable$0(0);
        t1 = _this.channel;
        t2 = _this._clientId;
        t1.toString;
        t1 = $.$get$window();
        if (t1._onPlatformMessage != null)
          t1.invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec0.encodeMethodCall$1(new H.MethodCall("TextInputClient.onConnectionClosed", [t2])), H._engine___emptyCallback$closure());
      }
    }
  };
  H.HybridTextEditing__startEditing_closure0.prototype = {
    call$1: function(editingState) {
      var t1 = this.$this,
        t2 = t1.channel;
      t1 = t1._clientId;
      t2.toString;
      t2 = $.$get$window();
      if (t2._onPlatformMessage != null)
        t2.invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec0.encodeMethodCall$1(new H.MethodCall("TextInputClient.updateEditingState", [t1, P.LinkedHashMap_LinkedHashMap$_literal(["text", editingState.text, "selectionBase", editingState.baseOffset, "selectionExtent", editingState.extentOffset], type$.String, type$.dynamic)])), H._engine___emptyCallback$closure());
    }
  };
  H.HybridTextEditing__startEditing_closure.prototype = {
    call$1: function(inputAction) {
      var t1 = this.$this,
        t2 = t1.channel;
      t1 = t1._clientId;
      t2.toString;
      t2 = $.$get$window();
      if (t2._onPlatformMessage != null)
        t2.invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec0.encodeMethodCall$1(new H.MethodCall("TextInputClient.performAction", [t1, inputAction])), H._engine___emptyCallback$closure());
    }
  };
  H.EditableTextStyle.prototype = {
    applyToDomElement$1: function(domElement) {
      var _this = this,
        t1 = domElement.style,
        t2 = H.textAlignToCssValue(_this.textAlign, _this.textDirection);
      t1.toString;
      t1.textAlign = t2 == null ? "" : t2;
      t2 = _this.fontWeight + " " + H.S(_this.fontSize) + "px " + H.S(_this.fontFamily);
      t1.font = t2;
    }
  };
  H.EditableTextGeometry.prototype = {};
  H.TransformKind.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.Matrix40.prototype = {
    setFrom$1: function(arg) {
      var argStorage = arg.__engine$_m4storage,
        t1 = this.__engine$_m4storage;
      t1[15] = argStorage[15];
      t1[14] = argStorage[14];
      t1[13] = argStorage[13];
      t1[12] = argStorage[12];
      t1[11] = argStorage[11];
      t1[10] = argStorage[10];
      t1[9] = argStorage[9];
      t1[8] = argStorage[8];
      t1[7] = argStorage[7];
      t1[6] = argStorage[6];
      t1[5] = argStorage[5];
      t1[4] = argStorage[4];
      t1[3] = argStorage[3];
      t1[2] = argStorage[2];
      t1[1] = argStorage[1];
      t1[0] = argStorage[0];
    },
    $index: function(_, i) {
      return this.__engine$_m4storage[i];
    },
    translate$3: function(_, x, y, z) {
      var t1 = this.__engine$_m4storage,
        t2 = t1[0],
        t3 = t1[4],
        t4 = t1[8],
        t5 = t1[12],
        t6 = t1[1],
        t7 = t1[5],
        t8 = t1[9],
        t9 = t1[13],
        t10 = t1[2],
        t11 = t1[6],
        t12 = t1[10],
        t13 = t1[14],
        t14 = t1[3],
        t15 = t1[7],
        t16 = t1[11],
        t17 = t1[15];
      t1[12] = t2 * x + t3 * y + t4 * z + t5;
      t1[13] = t6 * x + t7 * y + t8 * z + t9;
      t1[14] = t10 * x + t11 * y + t12 * z + t13;
      t1[15] = t14 * x + t15 * y + t16 * z + t17;
    },
    translate$2: function($receiver, x, y) {
      return this.translate$3($receiver, x, y, 0);
    },
    scale$3: function(_, x, y, z) {
      var sy = y == null ? x : y,
        t1 = this.__engine$_m4storage;
      t1[0] = t1[0] * x;
      t1[1] = t1[1] * x;
      t1[2] = t1[2] * x;
      t1[3] = t1[3] * x;
      t1[4] = t1[4] * sy;
      t1[5] = t1[5] * sy;
      t1[6] = t1[6] * sy;
      t1[7] = t1[7] * sy;
      t1[8] = t1[8] * x;
      t1[9] = t1[9] * x;
      t1[10] = t1[10] * x;
      t1[11] = t1[11] * x;
      t1[12] = t1[12];
      t1[13] = t1[13];
      t1[14] = t1[14];
      t1[15] = t1[15];
    },
    scale$2: function($receiver, x, y) {
      return this.scale$3($receiver, x, y, null);
    },
    setIdentity$0: function() {
      var t1 = this.__engine$_m4storage;
      t1[0] = 1;
      t1[1] = 0;
      t1[2] = 0;
      t1[3] = 0;
      t1[4] = 0;
      t1[5] = 1;
      t1[6] = 0;
      t1[7] = 0;
      t1[8] = 0;
      t1[9] = 0;
      t1[10] = 1;
      t1[11] = 0;
      t1[12] = 0;
      t1[13] = 0;
      t1[14] = 0;
      t1[15] = 1;
    },
    $mul: function(_, arg) {
      var t1;
      if (typeof arg == "number") {
        t1 = new H.Matrix40(new Float32Array(16));
        t1.setFrom$1(this);
        t1.scale$3(0, arg, null, null);
        return t1;
      }
      if (arg instanceof H.Matrix40)
        return this.multiplied$1(arg);
      throw H.wrapException(P.ArgumentError$(arg));
    },
    isIdentity$0: function(_) {
      var t1 = this.__engine$_m4storage;
      return t1[0] === 1 && t1[1] === 0 && t1[2] === 0 && t1[3] === 0 && t1[4] === 0 && t1[5] === 1 && t1[6] === 0 && t1[7] === 0 && t1[8] === 0 && t1[9] === 0 && t1[10] === 1 && t1[11] === 0 && t1[12] === 0 && t1[13] === 0 && t1[14] === 0 && t1[15] === 1;
    },
    rotate$2: function(_, axis, angle) {
      var m23, m31, m32, m33, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13,
        len = Math.sqrt(axis.get$length2()),
        axisStorage = axis.__engine$_v3storage,
        x = axisStorage[0] / len,
        y = axisStorage[1] / len,
        z = axisStorage[2] / len,
        c = Math.cos(H.checkNum(angle)),
        s = Math.sin(H.checkNum(angle)),
        $C = 1 - c,
        m11 = x * x * $C + c,
        t1 = z * s,
        m12 = x * y * $C - t1,
        t2 = y * s,
        m13 = x * z * $C + t2,
        m21 = y * x * $C + t1,
        m22 = y * y * $C + c;
      t1 = x * s;
      m23 = y * z * $C - t1;
      m31 = z * x * $C - t2;
      m32 = z * y * $C + t1;
      m33 = z * z * $C + c;
      t1 = this.__engine$_m4storage;
      t2 = t1[0];
      t3 = t1[4];
      t4 = t1[8];
      t5 = t1[1];
      t6 = t1[5];
      t7 = t1[9];
      t8 = t1[2];
      t9 = t1[6];
      t10 = t1[10];
      t11 = t1[3];
      t12 = t1[7];
      t13 = t1[11];
      t1[0] = t2 * m11 + t3 * m21 + t4 * m31;
      t1[1] = t5 * m11 + t6 * m21 + t7 * m31;
      t1[2] = t8 * m11 + t9 * m21 + t10 * m31;
      t1[3] = t11 * m11 + t12 * m21 + t13 * m31;
      t1[4] = t2 * m12 + t3 * m22 + t4 * m32;
      t1[5] = t5 * m12 + t6 * m22 + t7 * m32;
      t1[6] = t8 * m12 + t9 * m22 + t10 * m32;
      t1[7] = t11 * m12 + t12 * m22 + t13 * m32;
      t1[8] = t2 * m13 + t3 * m23 + t4 * m33;
      t1[9] = t5 * m13 + t6 * m23 + t7 * m33;
      t1[10] = t8 * m13 + t9 * m23 + t10 * m33;
      t1[11] = t11 * m13 + t12 * m23 + t13 * m33;
    },
    copyInverse$1: function(arg) {
      var invDet, t1, t2, t3,
        argStorage = arg.__engine$_m4storage,
        a00 = argStorage[0],
        a01 = argStorage[1],
        a02 = argStorage[2],
        a03 = argStorage[3],
        a10 = argStorage[4],
        a11 = argStorage[5],
        a12 = argStorage[6],
        a13 = argStorage[7],
        a20 = argStorage[8],
        a21 = argStorage[9],
        a22 = argStorage[10],
        a23 = argStorage[11],
        a30 = argStorage[12],
        a31 = argStorage[13],
        a32 = argStorage[14],
        a33 = argStorage[15],
        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32,
        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det === 0) {
        this.setFrom$1(arg);
        return 0;
      }
      invDet = 1 / det;
      t1 = this.__engine$_m4storage;
      t1[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
      t1[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
      t1[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
      t1[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
      t2 = -a10;
      t1[4] = (t2 * b11 + a12 * b08 - a13 * b07) * invDet;
      t1[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
      t3 = -a30;
      t1[6] = (t3 * b05 + a32 * b02 - a33 * b01) * invDet;
      t1[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
      t1[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
      t1[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
      t1[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
      t1[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
      t1[12] = (t2 * b09 + a11 * b07 - a12 * b06) * invDet;
      t1[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
      t1[14] = (t3 * b03 + a31 * b01 - a32 * b00) * invDet;
      t1[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
      return det;
    },
    multiply$1: function(_, arg) {
      var t1 = this.__engine$_m4storage,
        m00 = t1[0],
        m01 = t1[4],
        m02 = t1[8],
        m03 = t1[12],
        m10 = t1[1],
        m11 = t1[5],
        m12 = t1[9],
        m13 = t1[13],
        m20 = t1[2],
        m21 = t1[6],
        m22 = t1[10],
        m23 = t1[14],
        m30 = t1[3],
        m31 = t1[7],
        m32 = t1[11],
        m33 = t1[15],
        argStorage = arg.__engine$_m4storage,
        n00 = argStorage[0],
        n01 = argStorage[4],
        n02 = argStorage[8],
        n03 = argStorage[12],
        n10 = argStorage[1],
        n11 = argStorage[5],
        n12 = argStorage[9],
        n13 = argStorage[13],
        n20 = argStorage[2],
        n21 = argStorage[6],
        n22 = argStorage[10],
        n23 = argStorage[14],
        n30 = argStorage[3],
        n31 = argStorage[7],
        n32 = argStorage[11],
        n33 = argStorage[15];
      t1[0] = m00 * n00 + m01 * n10 + m02 * n20 + m03 * n30;
      t1[4] = m00 * n01 + m01 * n11 + m02 * n21 + m03 * n31;
      t1[8] = m00 * n02 + m01 * n12 + m02 * n22 + m03 * n32;
      t1[12] = m00 * n03 + m01 * n13 + m02 * n23 + m03 * n33;
      t1[1] = m10 * n00 + m11 * n10 + m12 * n20 + m13 * n30;
      t1[5] = m10 * n01 + m11 * n11 + m12 * n21 + m13 * n31;
      t1[9] = m10 * n02 + m11 * n12 + m12 * n22 + m13 * n32;
      t1[13] = m10 * n03 + m11 * n13 + m12 * n23 + m13 * n33;
      t1[2] = m20 * n00 + m21 * n10 + m22 * n20 + m23 * n30;
      t1[6] = m20 * n01 + m21 * n11 + m22 * n21 + m23 * n31;
      t1[10] = m20 * n02 + m21 * n12 + m22 * n22 + m23 * n32;
      t1[14] = m20 * n03 + m21 * n13 + m22 * n23 + m23 * n33;
      t1[3] = m30 * n00 + m31 * n10 + m32 * n20 + m33 * n30;
      t1[7] = m30 * n01 + m31 * n11 + m32 * n21 + m33 * n31;
      t1[11] = m30 * n02 + m31 * n12 + m32 * n22 + m33 * n32;
      t1[15] = m30 * n03 + m31 * n13 + m32 * n23 + m33 * n33;
    },
    multiplied$1: function(arg) {
      var t1 = new H.Matrix40(new Float32Array(16));
      t1.setFrom$1(this);
      t1.multiply$1(0, arg);
      return t1;
    }
  };
  H.Vector30.prototype = {
    $index: function(_, i) {
      return this.__engine$_v3storage[i];
    },
    get$length: function(_) {
      var t1 = this.__engine$_v3storage,
        t2 = t1[0],
        t3 = t1[1];
      t1 = t1[2];
      return Math.sqrt(t2 * t2 + t3 * t3 + t1 * t1);
    },
    get$length2: function() {
      var t1 = this.__engine$_v3storage,
        t2 = t1[0],
        t3 = t1[1];
      t1 = t1[2];
      return t2 * t2 + t3 * t3 + t1 * t1;
    }
  };
  H.WebExperiments.prototype = {
    WebExperiments$_$0: function() {
      $.$get$_context().$indexSet(0, "_flutter_internal_update_experiment", this.get$updateExperiment());
      $._hotRestartListeners.push(new H.WebExperiments$__closure());
    },
    updateExperiment$2: function($name, enabled) {
      switch ($name) {
        case "useCanvasText":
          this._useCanvasText = enabled;
          break;
      }
    }
  };
  H.WebExperiments$__closure.prototype = {
    call$0: function() {
      $.$get$_context().$indexSet(0, "_flutter_internal_update_experiment", null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.EngineWindow.prototype = {
    get$devicePixelRatio: function(_) {
      var t1 = this._debugDevicePixelRatio;
      return t1 != null ? t1 : H.EngineWindow_browserDevicePixelRatio();
    },
    get$physicalSize: function() {
      if (this._physicalSize == null)
        this._computePhysicalSize$0();
      return this._physicalSize;
    },
    _computePhysicalSize$0: function() {
      var t1, t2, windowInnerWidth, windowInnerHeight, _this = this;
      if (window.visualViewport != null) {
        t1 = window.visualViewport.width;
        t2 = _this._debugDevicePixelRatio;
        windowInnerWidth = t1 * (t2 != null ? t2 : H.EngineWindow_browserDevicePixelRatio());
        t1 = window.visualViewport.height;
        t2 = _this._debugDevicePixelRatio;
        windowInnerHeight = t1 * (t2 != null ? t2 : H.EngineWindow_browserDevicePixelRatio());
      } else {
        t1 = window.innerWidth;
        t2 = _this._debugDevicePixelRatio;
        windowInnerWidth = t1 * (t2 != null ? t2 : H.EngineWindow_browserDevicePixelRatio());
        t1 = window.innerHeight;
        t2 = _this._debugDevicePixelRatio;
        windowInnerHeight = t1 * (t2 != null ? t2 : H.EngineWindow_browserDevicePixelRatio());
      }
      _this._physicalSize = new P.Size(windowInnerWidth, windowInnerHeight);
    },
    get$defaultRouteName: function() {
      var t1 = this._defaultRouteName;
      return t1 == null ? this._defaultRouteName = this._browserHistory.get$currentPath() : t1;
    },
    get$onMetricsChanged: function() {
      return this._onMetricsChanged;
    },
    set$onPlatformMessage: function(callback) {
      this._onPlatformMessage = callback;
      this._onPlatformMessageZone = $.Zone__current;
    },
    invokeOnPlatformMessage$3: function($name, data, callback) {
      H._invoke3(this._onPlatformMessage, this._onPlatformMessageZone, $name, data, callback);
    },
    __engine$_sendPlatformMessage$3: function($name, data, callback) {
      var url, decoded, t1, t2, $navigator, $arguments, t3, theme, $call, t4, t5, t6, t7, selectionBase, selectionExtent, text, transformList, textAlignIndex, textDirectionIndex, fontWeightIndex, fontWeight, codec, message, _this = this;
      switch ($name) {
        case "flutter/assets":
          url = C.C_Utf8Codec.decode$1(0, H.NativeUint8List_NativeUint8List$view(data.buffer, 0, null));
          $._assetManager.load$1(0, url).then$1$2$onError(new H.EngineWindow__sendPlatformMessage_closure(_this, callback), new H.EngineWindow__sendPlatformMessage_closure0(_this, callback), type$.Null);
          return;
        case "flutter/platform":
          decoded = C.C_JSONMethodCodec0.decodeMethodCall$1(data);
          switch (decoded.method) {
            case "SystemNavigator.pop":
              _this._browserHistory.exit$0().then$1$1(new H.EngineWindow__sendPlatformMessage_closure1(_this, callback), type$.Null);
              return;
            case "HapticFeedback.vibrate":
              t1 = $.$get$domRenderer();
              t2 = _this._getHapticFeedbackDuration$1(decoded.$arguments);
              t1.toString;
              $navigator = window.navigator;
              if ("vibrate" in $navigator)
                $navigator.vibrate.apply($navigator, H.setRuntimeTypeInfo([t2], type$.JSArray_num));
              _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec0.encodeMessage$1([true]));
              return;
            case "SystemChrome.setApplicationSwitcherDescription":
              $arguments = decoded.$arguments;
              t1 = $.$get$domRenderer();
              t2 = J.getInterceptor$asx($arguments);
              t3 = t2.$index($arguments, "label");
              t1.toString;
              t1 = document;
              t1.title = t3;
              t2 = t2.$index($arguments, "primaryColor");
              theme = t1.querySelector("#flutterweb-theme");
              if (theme == null) {
                theme = t1.createElement("meta");
                theme.id = "flutterweb-theme";
                theme.name = "theme-color";
                t1.head.appendChild(theme);
              }
              theme.content = H.colorToCssString(new P.Color((t2 & 4294967295) >>> 0));
              _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec0.encodeMessage$1([true]));
              return;
            case "SystemSound.play":
              _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec0.encodeMessage$1([true]));
              return;
            case "Clipboard.setData":
              new H.ClipboardMessageHandler(H.CopyToClipboardStrategy_CopyToClipboardStrategy(), H.PasteFromClipboardStrategy_PasteFromClipboardStrategy()).setDataMethodCall$2(decoded, callback);
              return;
            case "Clipboard.getData":
              new H.ClipboardMessageHandler(H.CopyToClipboardStrategy_CopyToClipboardStrategy(), H.PasteFromClipboardStrategy_PasteFromClipboardStrategy()).getDataMethodCall$1(callback);
              return;
          }
          break;
        case "flutter/textinput":
          t1 = $.$get$textEditing().channel;
          t1.toString;
          $call = C.C_JSONMethodCodec0.decodeMethodCall$1(data);
          t2 = $call.method;
          switch (t2) {
            case "TextInput.setClient":
              t1 = t1.implementation;
              t2 = $call.$arguments;
              t3 = J.getInterceptor$asx(t2);
              t4 = t3.$index(t2, 0);
              t2 = t3.$index(t2, 1);
              t3 = J.getInterceptor$asx(t2);
              t5 = H.EngineInputType_fromName(J.$index$asx(t3.$index(t2, "inputType"), "name"));
              t6 = t3.$index(t2, "inputAction");
              t7 = t3.$index(t2, "obscureText");
              t2 = t3.$index(t2, "autocorrect");
              t3 = t1._clientId;
              if (t3 != null && t3 !== t4 && t1.isEditing) {
                t1.isEditing = false;
                t1.get$editingElement().disable$0(0);
              }
              t1._clientId = t4;
              t1._configuration = new H.InputConfiguration(t5, t6, t7, t2);
              break;
            case "TextInput.setEditingState":
              t2 = $call.$arguments;
              t3 = J.getInterceptor$asx(t2);
              selectionBase = t3.$index(t2, "selectionBase");
              selectionExtent = t3.$index(t2, "selectionExtent");
              text = t3.$index(t2, "text");
              t2 = Math.max(0, H.checkNum(selectionBase));
              t3 = Math.max(0, H.checkNum(selectionExtent));
              t1.implementation.get$editingElement().setEditingState$1(new H.EditingState(text, t2, t3));
              break;
            case "TextInput.show":
              t1 = t1.implementation;
              if (!t1.isEditing)
                t1._startEditing$0();
              break;
            case "TextInput.setEditableSizeAndTransform":
              t2 = $call.$arguments;
              t3 = J.getInterceptor$asx(t2);
              transformList = P.List_List$from(t3.$index(t2, "transform"), true, type$.double);
              t4 = t3.$index(t2, "width");
              t2 = t3.$index(t2, "height");
              t3 = new Float32Array(H._ensureNativeList(transformList));
              t1.implementation.get$editingElement().updateElementPlacement$1(new H.EditableTextGeometry(t4, t2, t3));
              break;
            case "TextInput.setStyle":
              t2 = $call.$arguments;
              t3 = J.getInterceptor$asx(t2);
              textAlignIndex = t3.$index(t2, "textAlignIndex");
              textDirectionIndex = t3.$index(t2, "textDirectionIndex");
              fontWeightIndex = t3.$index(t2, "fontWeightIndex");
              fontWeight = fontWeightIndex != null ? H.fontWeightIndexToCss(fontWeightIndex) : "normal";
              t2 = new H.EditableTextStyle(t3.$index(t2, "fontSize"), fontWeight, t3.$index(t2, "fontFamily"), C.List_Agv[textAlignIndex], C.List_TextDirection_0_TextDirection_1[textDirectionIndex]);
              t1 = t1.implementation.get$editingElement();
              t1._style = t2;
              if (t1.isEnabled)
                t2.applyToDomElement$1(t1.domElement);
              break;
            case "TextInput.clearClient":
              t1 = t1.implementation;
              if (t1.isEditing) {
                t1.isEditing = false;
                t1.get$editingElement().disable$0(0);
              }
              break;
            case "TextInput.hide":
              t1 = t1.implementation;
              if (t1.isEditing) {
                t1.isEditing = false;
                t1.get$editingElement().disable$0(0);
              }
              break;
            case "TextInput.requestAutofill":
              break;
            default:
              H.throwExpression(P.StateError$("Unsupported method call on the flutter/textinput channel: " + t2));
          }
          $.$get$window()._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec0.encodeMessage$1([true]));
          return;
        case "flutter/web_test_e2e":
          _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec0.encodeMessage$1([H._handleWebTestEnd2EndMessage(C.C_JSONMethodCodec0, data)]));
          return;
        case "flutter/platform_views":
          H.handlePlatformViewCall(data, callback);
          return;
        case "flutter/accessibility":
          codec = new H.StandardMessageCodec();
          $.$get$accessibilityAnnouncements().handleMessage$2(codec, data);
          _this._replyToPlatformMessage$2(callback, codec.encodeMessage$1(true));
          return;
        case "flutter/navigation":
          decoded = C.C_JSONMethodCodec0.decodeMethodCall$1(data);
          message = decoded.$arguments;
          switch (decoded.method) {
            case "routeUpdated":
            case "routePushed":
            case "routeReplaced":
              _this._browserHistory.setRouteName$1(J.$index$asx(message, "routeName"));
              _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec0.encodeMessage$1([true]));
              break;
            case "routePopped":
              _this._browserHistory.setRouteName$1(J.$index$asx(message, "previousRouteName"));
              _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec0.encodeMessage$1([true]));
              break;
          }
          _this._defaultRouteName = "/";
          return;
      }
    },
    _getHapticFeedbackDuration$1: function(type) {
      switch (type) {
        case "HapticFeedbackType.lightImpact":
          return 10;
        case "HapticFeedbackType.mediumImpact":
          return 20;
        case "HapticFeedbackType.heavyImpact":
          return 30;
        case "HapticFeedbackType.selectionClick":
          return 10;
        default:
          return 50;
      }
    },
    _replyToPlatformMessage$2: function(callback, data) {
      P.Future_Future$delayed(C.Duration_0, type$.void).then$1$1(new H.EngineWindow__replyToPlatformMessage_closure(callback, data), type$.Null);
    },
    _updatePlatformBrightness$1: function(newPlatformBrightness) {
      var _this = this,
        previousPlatformBrightness = _this._platformBrightness;
      _this._platformBrightness = newPlatformBrightness;
      if (previousPlatformBrightness !== newPlatformBrightness && _this._onPlatformBrightnessChanged != null)
        H._invoke(_this._onPlatformBrightnessChanged, _this._onPlatformBrightnessChangedZone);
    },
    _addBrightnessMediaQueryListener$0: function() {
      var t2, _this = this,
        t1 = _this._brightnessMediaQuery;
      _this._updatePlatformBrightness$1(t1.matches ? C.Brightness_0 : C.Brightness_1);
      t2 = new H.EngineWindow__addBrightnessMediaQueryListener_closure(_this);
      _this._brightnessMediaQueryListener = t2;
      C.MediaQueryList_methods.addListener$1(t1, t2);
      $._hotRestartListeners.push(new H.EngineWindow__addBrightnessMediaQueryListener_closure0(_this));
    },
    render$1: function(scene) {
      $.$get$domRenderer().renderScene$1(scene.webOnlyRootElement);
    },
    onMetricsChanged$0: function() {
      return this.get$onMetricsChanged().call$0();
    }
  };
  H.EngineWindow__zonedPlatformMessageResponseCallback_closure.prototype = {
    call$1: function(data) {
      this.registrationZone.runUnaryGuarded$2(this.callback, data);
    },
    $signature: 17
  };
  H.EngineWindow__sendPlatformMessage_closure.prototype = {
    call$1: function(assetData) {
      this.$this._replyToPlatformMessage$2(this.callback, assetData);
    },
    $signature: 17
  };
  H.EngineWindow__sendPlatformMessage_closure0.prototype = {
    call$1: function(error) {
      var t1;
      window;
      t1 = "Error while trying to load an asset: " + H.S(error);
      if (typeof console != "undefined")
        window.console.warn(t1);
      this.$this._replyToPlatformMessage$2(this.callback, null);
    },
    $signature: 3
  };
  H.EngineWindow__sendPlatformMessage_closure1.prototype = {
    call$1: function(_) {
      this.$this._replyToPlatformMessage$2(this.callback, C.C_JSONMessageCodec0.encodeMessage$1([true]));
    },
    $signature: 13
  };
  H.EngineWindow__replyToPlatformMessage_closure.prototype = {
    call$1: function(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(this.data);
    },
    $signature: 13
  };
  H.EngineWindow__addBrightnessMediaQueryListener_closure.prototype = {
    call$1: function($event) {
      var t1 = $event.matches ? C.Brightness_0 : C.Brightness_1;
      this.$this._updatePlatformBrightness$1(t1);
    },
    $signature: 2
  };
  H.EngineWindow__addBrightnessMediaQueryListener_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._brightnessMediaQuery;
      (t2 && C.MediaQueryList_methods).removeListener$1(t2, t1._brightnessMediaQueryListener);
      t1._brightnessMediaQueryListener = null;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H._invoke3_closure.prototype = {
    call$0: function() {
      var _this = this;
      _this.callback.call$3(_this.arg1, _this.arg2, _this.arg3);
    },
    $signature: 0
  };
  H._DomCanvas_EngineCanvas_SaveElementStackTracking.prototype = {};
  H._PersistedClipRect_PersistedContainerSurface__DomClip.prototype = {
    adoptElements$1: function(oldSurface) {
      this.super$PersistedSurface$adoptElements(oldSurface);
      this._DomClip__childContainer = oldSurface._DomClip__childContainer;
      oldSurface._DomClip__childContainer = null;
    },
    discard$0: function() {
      this.super$PersistedContainerSurface$discard();
      this._DomClip__childContainer = null;
    }
  };
  H._PersistedPhysicalShape_PersistedContainerSurface__DomClip.prototype = {
    adoptElements$1: function(oldSurface) {
      this.super$PersistedSurface$adoptElements(oldSurface);
      this._DomClip__childContainer = oldSurface._DomClip__childContainer;
      oldSurface._DomClip__childContainer = null;
    },
    discard$0: function() {
      this.super$PersistedContainerSurface$discard();
      this._DomClip__childContainer = null;
    }
  };
  H.__MouseAdapter__BaseAdapter__WheelEventListenerMixin.prototype = {};
  H.__PointerAdapter__BaseAdapter__WheelEventListenerMixin.prototype = {};
  H.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq: function(receiver, other) {
      return receiver === other;
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    toString$0: function(receiver) {
      return "Instance of '" + H.S(H.Primitives_objectTypeName(receiver)) + "'";
    },
    noSuchMethod$1: function(receiver, invocation) {
      throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    },
    get$runtimeType: function(receiver) {
      return H.getRuntimeType(receiver);
    }
  };
  J.JSBool.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    get$hashCode: function(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType: function(receiver) {
      return C.Type_bool_lhE;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq: function(receiver, other) {
      return null == other;
    },
    toString$0: function(receiver) {
      return "null";
    },
    get$hashCode: function(receiver) {
      return 0;
    },
    get$runtimeType: function(receiver) {
      return C.Type_Null_Yyn;
    },
    noSuchMethod$1: function(receiver, invocation) {
      return this.super$Interceptor$noSuchMethod(receiver, invocation);
    },
    $isNull: 1
  };
  J.JSObject.prototype = {};
  J.JavaScriptObject.prototype = {
    get$hashCode: function(receiver) {
      return 0;
    },
    get$runtimeType: function(receiver) {
      return C.Type_JSObject_8k0;
    },
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isJSObject: 1
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0: function(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$JavaScriptObject$toString(receiver);
      return "JavaScript function for " + H.S(J.toString$0$(dartClosure));
    },
    $signature: function() {
      return {func: 1, opt: [,,,,,,,,,,,,,,,,]};
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    cast$1$0: function(receiver, $R) {
      return new H.CastList(receiver, H._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1: function(receiver, value) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("add"));
      receiver.push(value);
    },
    removeAt$1: function(receiver, index) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeAt"));
      if (index < 0 || index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    insert$2: function(receiver, index, value) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("insert"));
      if (index < 0 || index > receiver.length)
        throw H.wrapException(P.RangeError$value(index, null));
      receiver.splice(index, 0, value);
    },
    insertAll$2: function(receiver, index, iterable) {
      var insertionLength, end;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("insertAll"));
      P.RangeError_checkValueInInterval(index, 0, receiver.length, "index");
      if (!type$.EfficientLengthIterable_dynamic._is(iterable))
        iterable = J.toList$0$ax(iterable);
      insertionLength = J.get$length$asx(iterable);
      this.set$length(receiver, receiver.length + insertionLength);
      end = index + insertionLength;
      this.setRange$4(receiver, end, receiver.length, receiver, index);
      this.setRange$3(receiver, index, end, iterable);
    },
    removeLast$0: function(receiver) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeLast"));
      if (receiver.length === 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, -1));
      return receiver.pop();
    },
    remove$1: function(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    _removeWhere$2: function(receiver, test, removeMatching) {
      var i, element, t1, retained = [],
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (!test.call$1(element))
          retained.push(element);
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      t1 = retained.length;
      if (t1 === end)
        return;
      this.set$length(receiver, t1);
      for (i = 0; i < retained.length; ++i)
        receiver[i] = retained[i];
    },
    where$1: function(receiver, f) {
      return new H.WhereIterable(receiver, f, H._arrayInstanceType(receiver)._eval$1("WhereIterable<1>"));
    },
    addAll$1: function(receiver, collection) {
      var t1;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("addAll"));
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current(t1));
    },
    clear$0: function(receiver) {
      this.set$length(receiver, 0);
    },
    forEach$1: function(receiver, f) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1: function(receiver, f, $T) {
      return new H.MappedListIterable(receiver, f, H._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1: function(receiver, separator) {
      var i,
        list = new Array(receiver.length);
      list.fixed$length = Array;
      for (i = 0; i < receiver.length; ++i)
        list[i] = H.S(receiver[i]);
      return list.join(separator);
    },
    skip$1: function(receiver, n) {
      return H.SubListIterable$(receiver, n, null, H._arrayInstanceType(receiver)._precomputed1);
    },
    reduce$1: function(receiver, combine) {
      var value, i,
        $length = receiver.length;
      if ($length === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      value = receiver[0];
      for (i = 1; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if ($length !== receiver.length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    fold$1$2: function(receiver, initialValue, combine) {
      var value, i,
        $length = receiver.length;
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if (receiver.length !== $length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    fold$2: function($receiver, initialValue, combine) {
      return this.fold$1$2($receiver, initialValue, combine, type$.dynamic);
    },
    firstWhere$2$orElse: function(receiver, test, orElse) {
      var i, element,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (test.call$1(element))
          return element;
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(H.IterableElementError_noElement());
    },
    firstWhere$1: function($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    },
    lastWhere$2$orElse: function(receiver, test, orElse) {
      var i, element,
        $length = receiver.length;
      for (i = $length - 1; i >= 0; --i) {
        element = receiver[i];
        if (test.call$1(element))
          return element;
        if ($length !== receiver.length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(H.IterableElementError_noElement());
    },
    lastWhere$1: function($receiver, test) {
      return this.lastWhere$2$orElse($receiver, test, null);
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    sublist$2: function(receiver, start, end) {
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, "start", null));
      if (end == null)
        end = receiver.length;
      else if (end < start || end > receiver.length)
        throw H.wrapException(P.RangeError$range(end, start, receiver.length, "end", null));
      if (start === end)
        return H.setRuntimeTypeInfo([], H._arrayInstanceType(receiver));
      return H.setRuntimeTypeInfo(receiver.slice(start, end), H._arrayInstanceType(receiver));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(H.IterableElementError_noElement());
    },
    get$last: function(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw H.wrapException(H.IterableElementError_noElement());
    },
    get$single: function(receiver) {
      var t1 = receiver.length;
      if (t1 === 1)
        return receiver[0];
      if (t1 === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      throw H.wrapException(H.IterableElementError_tooMany());
    },
    removeRange$2: function(receiver, start, end) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeRange"));
      P.RangeError_checkValidRange(start, end, receiver.length);
      receiver.splice(start, end - start);
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, t1, i;
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("setRange"));
      P.RangeError_checkValidRange(start, end, receiver.length);
      $length = end - start;
      if ($length === 0)
        return;
      P.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw H.wrapException(H.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    any$1: function(receiver, test) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (test.call$1(receiver[i]))
          return true;
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    sort$1: function(receiver, compare) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("sort"));
      H.Sort_sort(receiver, compare == null ? J._interceptors_JSArray__compareAny$closure() : compare);
    },
    sort$0: function($receiver) {
      return this.sort$1($receiver, null);
    },
    contains$1: function(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.length !== 0;
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable: function(receiver, growable) {
      var t1 = H.setRuntimeTypeInfo(receiver.slice(0), H._arrayInstanceType(receiver));
      return t1;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$iterator: function(receiver) {
      return new J.ArrayIterator(receiver, receiver.length);
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$length: function(receiver, newLength) {
      var _s9_ = "newLength";
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("set length"));
      if (!H._isInt(newLength))
        throw H.wrapException(P.ArgumentError$value(newLength, _s9_, null));
      if (newLength < 0)
        throw H.wrapException(P.RangeError$range(newLength, 0, null, _s9_, null));
      receiver.length = newLength;
    },
    $index: function(receiver, index) {
      if (!H._isInt(index))
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (!H._isInt(index))
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $add: function(receiver, other) {
      var totalLength = receiver.length + J.get$length$asx(other),
        t1 = H.setRuntimeTypeInfo([], H._arrayInstanceType(receiver));
      this.set$length(t1, totalLength);
      this.setRange$3(t1, 0, receiver.length, receiver);
      this.setRange$3(t1, receiver.length, totalLength, other);
      return t1;
    },
    lastIndexWhere$1: function(receiver, test) {
      var i,
        start = receiver.length - 1;
      if (start < 0)
        return -1;
      for (i = start; i >= 0; --i)
        if (test.call$1(receiver[i]))
          return i;
      return -1;
    },
    set$last: function(receiver, element) {
      var t1 = receiver.length;
      if (t1 === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      this.$indexSet(receiver, t1 - 1, element);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current: function(_) {
      return this._current;
    },
    moveNext$0: function() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this.__interceptors$_length !== $length)
        throw H.wrapException(H.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this._current = null;
        return false;
      }
      _this._current = t1[t2];
      _this._index = t2 + 1;
      return true;
    }
  };
  J.JSNumber.prototype = {
    compareTo$1: function(receiver, b) {
      var bIsNegative;
      if (typeof b != "number")
        throw H.wrapException(H.argumentErrorValue(b));
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative: function(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    get$sign: function(receiver) {
      var t1;
      if (receiver > 0)
        t1 = 1;
      else
        t1 = receiver < 0 ? -1 : receiver;
      return t1;
    },
    toInt$0: function(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".toInt()"));
    },
    ceil$0: function(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647) {
          truncated = receiver | 0;
          return receiver === truncated ? truncated : truncated + 1;
        }
      } else if (receiver >= -2147483648)
        return receiver | 0;
      d = Math.ceil(receiver);
      if (isFinite(d))
        return d;
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".ceil()"));
    },
    floor$0: function(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".floor()"));
    },
    round$0: function(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".round()"));
    },
    roundToDouble$0: function(receiver) {
      if (receiver < 0)
        return -Math.round(-receiver);
      else
        return Math.round(receiver);
    },
    clamp$2: function(receiver, lowerLimit, upperLimit) {
      if (typeof lowerLimit != "number")
        throw H.wrapException(H.argumentErrorValue(lowerLimit));
      if (typeof upperLimit != "number")
        throw H.wrapException(H.argumentErrorValue(upperLimit));
      if (this.compareTo$1(lowerLimit, upperLimit) > 0)
        throw H.wrapException(H.argumentErrorValue(lowerLimit));
      if (this.compareTo$1(receiver, lowerLimit) < 0)
        return lowerLimit;
      if (this.compareTo$1(receiver, upperLimit) > 0)
        return upperLimit;
      return receiver;
    },
    toStringAsFixed$1: function(receiver, fractionDigits) {
      var result;
      if (fractionDigits > 20)
        throw H.wrapException(P.RangeError$range(fractionDigits, 0, 20, "fractionDigits", null));
      result = receiver.toFixed(fractionDigits);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    },
    toRadixString$1: function(receiver, radix) {
      var result, match, exponent, t1;
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (C.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        H.throwExpression(P.UnsupportedError$("Unexpected toString result: " + result));
      result = match[1];
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + C.JSString_methods.$mul("0", exponent);
    },
    toString$0: function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode: function(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return 536870911 & intValue;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return 536870911 & ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259;
    },
    $add: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver + other;
    },
    $sub: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver - other;
    },
    $mul: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver * other;
    },
    $mod: function(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      if (other < 0)
        return result - other;
      else
        return result + other;
    },
    $tdiv: function(receiver, other) {
      if (typeof other != "number")
        throw H.wrapException(H.argumentErrorValue(other));
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1: function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1: function(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw H.wrapException(P.UnsupportedError$("Result of truncating division is " + H.S(quotient) + ": " + H.S(receiver) + " ~/ " + H.S(other)));
    },
    $shl: function(receiver, other) {
      if (other < 0)
        throw H.wrapException(H.argumentErrorValue(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    _shrOtherPositive$1: function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1: function(receiver, other) {
      if (other < 0)
        throw H.wrapException(H.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1: function(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType: function(receiver) {
      return C.Type_num_cv7;
    },
    $isComparable: 1,
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$sign: function(receiver) {
      var t1;
      if (receiver > 0)
        t1 = 1;
      else
        t1 = receiver < 0 ? -1 : receiver;
      return t1;
    },
    get$runtimeType: function(receiver) {
      return C.Type_int_tHn;
    },
    $isint: 1
  };
  J.JSDouble.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_double_K1J;
    }
  };
  J.JSString.prototype = {
    codeUnitAt$1: function(receiver, index) {
      if (!H._isInt(index))
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        H.throwExpression(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    _codeUnitAt$1: function(receiver, index) {
      if (index >= receiver.length)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    allMatches$2: function(receiver, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw H.wrapException(P.RangeError$range(start, 0, t1, null, null));
      return new H._StringAllMatchesIterable(string, receiver, start);
    },
    allMatches$1: function($receiver, string) {
      return this.allMatches$2($receiver, string, 0);
    },
    matchAsPrefix$2: function(receiver, string, start) {
      var t1, i, _null = null;
      if (start < 0 || start > string.length)
        throw H.wrapException(P.RangeError$range(start, 0, string.length, _null, _null));
      t1 = receiver.length;
      if (start + t1 > string.length)
        return _null;
      for (i = 0; i < t1; ++i)
        if (this.codeUnitAt$1(string, start + i) !== this._codeUnitAt$1(receiver, i))
          return _null;
      return new H.StringMatch(start, receiver);
    },
    $add: function(receiver, other) {
      if (typeof other != "string")
        throw H.wrapException(P.ArgumentError$value(other, null, null));
      return receiver + other;
    },
    endsWith$1: function(receiver, other) {
      var otherLength = other.length,
        t1 = receiver.length;
      if (otherLength > t1)
        return false;
      return other === this.substring$1(receiver, t1 - otherLength);
    },
    replaceFirst$2: function(receiver, from, to) {
      P.RangeError_checkValueInInterval(0, 0, receiver.length, "startIndex");
      return H.stringReplaceFirstUnchecked(receiver, from, to, 0);
    },
    replaceRange$3: function(receiver, start, end, replacement) {
      end = P.RangeError_checkValidRange(start, end, receiver.length);
      if (!H._isInt(end))
        H.throwExpression(H.argumentErrorValue(end));
      return H.stringReplaceRangeUnchecked(receiver, start, end, replacement);
    },
    startsWith$2: function(receiver, pattern, index) {
      var endIndex;
      if (!H._isInt(index))
        H.throwExpression(H.argumentErrorValue(index));
      if (index < 0 || index > receiver.length)
        throw H.wrapException(P.RangeError$range(index, 0, receiver.length, null, null));
      if (typeof pattern == "string") {
        endIndex = index + pattern.length;
        if (endIndex > receiver.length)
          return false;
        return pattern === receiver.substring(index, endIndex);
      }
      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
    },
    startsWith$1: function($receiver, pattern) {
      return this.startsWith$2($receiver, pattern, 0);
    },
    substring$2: function(receiver, startIndex, endIndex) {
      if (!H._isInt(startIndex))
        H.throwExpression(H.argumentErrorValue(startIndex));
      if (endIndex == null)
        endIndex = receiver.length;
      if (startIndex < 0)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (startIndex > endIndex)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (endIndex > receiver.length)
        throw H.wrapException(P.RangeError$value(endIndex, null));
      return receiver.substring(startIndex, endIndex);
    },
    substring$1: function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    },
    toLowerCase$0: function(receiver) {
      return receiver.toLowerCase();
    },
    trim$0: function(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (this._codeUnitAt$1(result, 0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    trimLeft$0: function(receiver) {
      var result, startIndex;
      if (typeof receiver.trimLeft != "undefined") {
        result = receiver.trimLeft();
        if (result.length === 0)
          return result;
        startIndex = this._codeUnitAt$1(result, 0) === 133 ? J.JSString__skipLeadingWhitespace(result, 1) : 0;
      } else {
        startIndex = J.JSString__skipLeadingWhitespace(receiver, 0);
        result = receiver;
      }
      if (startIndex === 0)
        return result;
      if (startIndex === result.length)
        return "";
      return result.substring(startIndex);
    },
    trimRight$0: function(receiver) {
      var result, endIndex, t1;
      if (typeof receiver.trimRight != "undefined") {
        result = receiver.trimRight();
        endIndex = result.length;
        if (endIndex === 0)
          return result;
        t1 = endIndex - 1;
        if (this.codeUnitAt$1(result, t1) === 133)
          endIndex = J.JSString__skipTrailingWhitespace(result, t1);
      } else {
        endIndex = J.JSString__skipTrailingWhitespace(receiver, receiver.length);
        result = receiver;
      }
      if (endIndex === result.length)
        return result;
      if (endIndex === 0)
        return "";
      return result.substring(0, endIndex);
    },
    $mul: function(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw H.wrapException(C.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2: function(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    indexOf$2: function(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1: function($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    },
    lastIndexOf$2: function(receiver, pattern, start) {
      var t1, t2;
      if (start == null)
        start = receiver.length;
      else if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
      t1 = pattern.length;
      t2 = receiver.length;
      if (start + t1 > t2)
        start = t2 - t1;
      return receiver.lastIndexOf(pattern, start);
    },
    lastIndexOf$1: function($receiver, pattern) {
      return this.lastIndexOf$2($receiver, pattern, null);
    },
    contains$2: function(receiver, other, startIndex) {
      var t1 = receiver.length;
      if (startIndex > t1)
        throw H.wrapException(P.RangeError$range(startIndex, 0, t1, null, null));
      return H.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1: function($receiver, other) {
      return this.contains$2($receiver, other, 0);
    },
    compareTo$1: function(receiver, other) {
      var t1;
      if (typeof other != "string")
        throw H.wrapException(H.argumentErrorValue(other));
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0: function(receiver) {
      return receiver;
    },
    get$hashCode: function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = 536870911 & hash + receiver.charCodeAt(i);
        hash = 536870911 & hash + ((524287 & hash) << 10);
        hash ^= hash >> 6;
      }
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    get$runtimeType: function(receiver) {
      return C.Type_String_k8F;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isComparable: 1,
    $isString: 1
  };
  H._CastIterableBase.prototype = {
    get$iterator: function(_) {
      var t1 = H._instanceType(this);
      return new H.CastIterator(J.get$iterator$ax(this.get$_source()), t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("CastIterator<1,2>"));
    },
    get$length: function(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty: function(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1: function(_, count) {
      var t1 = H._instanceType(this);
      return H.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1: function(_, index) {
      return H._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    contains$1: function(_, other) {
      return J.contains$1$asx(this.get$_source(), other);
    },
    toString$0: function(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  H.CastIterator.prototype = {
    moveNext$0: function() {
      return this._source.moveNext$0();
    },
    get$current: function(_) {
      var t1 = this._source;
      return this.$ti._rest[1]._as(t1.get$current(t1));
    }
  };
  H.CastIterable.prototype = {
    get$_source: function() {
      return this._source;
    }
  };
  H._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  H._CastListBase.prototype = {
    $index: function(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));
    },
    $indexSet: function(_, index, value) {
      J.$indexSet$ax(this._source, index, this.$ti._precomputed1._as(value));
    },
    set$length: function(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    add$1: function(_, value) {
      J.add$1$ax(this._source, this.$ti._precomputed1._as(value));
    },
    remove$1: function(_, value) {
      return J.remove$1$ax(this._source, value);
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  H.CastList.prototype = {
    cast$1$0: function(_, $R) {
      return new H.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source: function() {
      return this._source;
    }
  };
  H.CastMap.prototype = {
    cast$2$0: function(_, RK, RV) {
      var t1 = this.$ti;
      return new H.CastMap(this._source, t1._eval$1("@<1>")._bind$1(t1._rest[1])._bind$1(RK)._bind$1(RV)._eval$1("CastMap<1,2,3,4>"));
    },
    containsKey$1: function(_, key) {
      return J.containsKey$1$x(this._source, key);
    },
    $index: function(_, key) {
      return this.$ti._rest[3]._as(J.$index$asx(this._source, key));
    },
    $indexSet: function(_, key, value) {
      var t1 = this.$ti;
      J.$indexSet$ax(this._source, t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    remove$1: function(_, key) {
      return this.$ti._rest[3]._as(J.remove$1$ax(this._source, key));
    },
    forEach$1: function(_, f) {
      J.forEach$1$ax(this._source, new H.CastMap_forEach_closure(this, f));
    },
    get$keys: function(_) {
      var t1 = this.$ti;
      return H.CastIterable_CastIterable(J.get$keys$x(this._source), t1._precomputed1, t1._rest[2]);
    },
    get$values: function(_) {
      var t1 = this.$ti;
      return H.CastIterable_CastIterable(J.get$values$x(this._source), t1._rest[1], t1._rest[3]);
    },
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this._source);
    },
    get$isNotEmpty: function(_) {
      return J.get$isNotEmpty$asx(this._source);
    }
  };
  H.CastMap_forEach_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this.$this.$ti;
      this.f.call$2(t1._rest[2]._as(key), t1._rest[3]._as(value));
    },
    $signature: function() {
      return this.$this.$ti._eval$1("Null(1,2)");
    }
  };
  H.CodeUnits.prototype = {
    get$length: function(_) {
      return this._string.length;
    },
    $index: function(_, i) {
      return C.JSString_methods.codeUnitAt$1(this._string, i);
    }
  };
  H.EfficientLengthIterable.prototype = {};
  H.ListIterable.prototype = {
    get$iterator: function(_) {
      return new H.ListIterator(this, this.get$length(this));
    },
    forEach$1: function(_, action) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        action.call$1(_this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    contains$1: function(_, element) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(_this.elementAt$1(0, i), element))
          return true;
        if ($length !== _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
      return false;
    },
    join$1: function(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = H.S(_this.elementAt$1(0, 0));
        if ($length != _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + H.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw H.wrapException(P.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += H.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw H.wrapException(P.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    where$1: function(_, test) {
      return this.super$Iterable$where(0, test);
    },
    map$1$1: function(_, f, $T) {
      return new H.MappedListIterable(this, f, H._instanceType(this)._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1: function(_, count) {
      return H.SubListIterable$(this, count, null, H._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$1$growable: function(_, growable) {
      var result, t2, i, _this = this,
        t1 = H._instanceType(_this)._eval$1("JSArray<ListIterable.E>");
      if (growable) {
        result = H.setRuntimeTypeInfo([], t1);
        C.JSArray_methods.set$length(result, _this.get$length(_this));
      } else {
        t2 = new Array(_this.get$length(_this));
        t2.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t2, t1);
      }
      for (i = 0; i < _this.get$length(_this); ++i)
        result[i] = _this.elementAt$1(0, i);
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  H.SubListIterable.prototype = {
    get$_endIndex: function() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._endOrLength;
      if (t1 == null || t1 > $length)
        return $length;
      return t1;
    },
    get$_startIndex: function() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length: function(_) {
      var t2,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      t2 = this._endOrLength;
      if (t2 == null || t2 >= $length)
        return $length - t1;
      return t2 - t1;
    },
    elementAt$1: function(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw H.wrapException(P.IndexError$(index, _this, "index", null, null));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1: function(_, count) {
      var newStart, t1, _this = this;
      P.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      t1 = _this._endOrLength;
      if (t1 != null && newStart >= t1)
        return new H.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return H.SubListIterable$(_this.__internal$_iterable, newStart, t1, _this.$ti._precomputed1);
    },
    take$1: function(_, count) {
      var t1, t2, newEnd, _this = this;
      P.RangeError_checkNotNegative(count, "count");
      t1 = _this._endOrLength;
      t2 = _this._start;
      newEnd = t2 + count;
      if (t1 == null)
        return H.SubListIterable$(_this.__internal$_iterable, t2, newEnd, _this.$ti._precomputed1);
      else {
        if (t1 < newEnd)
          return _this;
        return H.SubListIterable$(_this.__internal$_iterable, t2, newEnd, _this.$ti._precomputed1);
      }
    },
    toList$1$growable: function(_, growable) {
      var $length, t3, result, t4, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        end0 = _this._endOrLength;
      if (end0 != null && end0 < end)
        end = end0;
      $length = end - start;
      if ($length < 0)
        $length = 0;
      t3 = _this.$ti._eval$1("JSArray<1>");
      if (growable) {
        result = H.setRuntimeTypeInfo([], t3);
        C.JSArray_methods.set$length(result, $length);
      } else {
        t4 = new Array($length);
        t4.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t4, t3);
      }
      for (i = 0; i < $length; ++i) {
        result[i] = t2.elementAt$1(t1, start + i);
        if (t2.get$length(t1) < end)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  H.ListIterator.prototype = {
    get$current: function(_) {
      return this.__internal$_current;
    },
    moveNext$0: function() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length != $length)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.__internal$_current = null;
        return false;
      }
      _this.__internal$_current = t2.elementAt$1(t1, t3);
      ++_this.__internal$_index;
      return true;
    }
  };
  H.MappedIterable.prototype = {
    get$iterator: function(_) {
      return new H.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);
    },
    get$length: function(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  H.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  H.MappedIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.__internal$_current = _this._f.call$1(t1.get$current(t1));
        return true;
      }
      _this.__internal$_current = null;
      return false;
    },
    get$current: function(_) {
      return this.__internal$_current;
    }
  };
  H.MappedListIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  H.WhereIterable.prototype = {
    get$iterator: function(_) {
      return new H.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);
    },
    map$1$1: function(_, f, $T) {
      return new H.MappedIterable(this, f, this.$ti._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    }
  };
  H.WhereIterator.prototype = {
    moveNext$0: function() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (t2.call$1(t1.get$current(t1)))
          return true;
      return false;
    },
    get$current: function(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.ExpandIterable.prototype = {
    get$iterator: function(_) {
      return new H.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, C.C_EmptyIterator);
    }
  };
  H.ExpandIterator.prototype = {
    get$current: function(_) {
      return this.__internal$_current;
    },
    moveNext$0: function() {
      var t2, t3, _this = this,
        t1 = _this._currentExpansion;
      if (t1 == null)
        return false;
      for (t2 = _this._iterator, t3 = _this._f; !t1.moveNext$0();) {
        _this.__internal$_current = null;
        if (t2.moveNext$0()) {
          _this._currentExpansion = null;
          t1 = J.get$iterator$ax(t3.call$1(t2.get$current(t2)));
          _this._currentExpansion = t1;
        } else
          return false;
      }
      t1 = _this._currentExpansion;
      _this.__internal$_current = t1.get$current(t1);
      return true;
    }
  };
  H.TakeIterable.prototype = {
    get$iterator: function(_) {
      return new H.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount);
    }
  };
  H.EfficientLengthTakeIterable.prototype = {
    get$length: function(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  H.TakeIterator.prototype = {
    moveNext$0: function() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current: function(_) {
      var t1;
      if (this._remaining < 0)
        return null;
      t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.SkipIterable.prototype = {
    skip$1: function(_, count) {
      P.ArgumentError_checkNotNull(count, "count");
      P.RangeError_checkNotNegative(count, "count");
      return new H.SkipIterable(this.__internal$_iterable, this._skipCount + count, H._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator: function(_) {
      return new H.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount);
    }
  };
  H.EfficientLengthSkipIterable.prototype = {
    get$length: function(_) {
      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1: function(_, count) {
      P.ArgumentError_checkNotNull(count, "count");
      P.RangeError_checkNotNegative(count, "count");
      return new H.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  H.SkipIterator.prototype = {
    moveNext$0: function() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current: function(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.SkipWhileIterable.prototype = {
    get$iterator: function(_) {
      return new H.SkipWhileIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);
    }
  };
  H.SkipWhileIterator.prototype = {
    moveNext$0: function() {
      var t1, t2, _this = this;
      if (!_this._hasSkipped) {
        _this._hasSkipped = true;
        for (t1 = _this._iterator, t2 = _this._f; t1.moveNext$0();)
          if (!t2.call$1(t1.get$current(t1)))
            return true;
      }
      return _this._iterator.moveNext$0();
    },
    get$current: function(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.EmptyIterable.prototype = {
    get$iterator: function(_) {
      return C.C_EmptyIterator;
    },
    forEach$1: function(_, action) {
    },
    get$isEmpty: function(_) {
      return true;
    },
    get$length: function(_) {
      return 0;
    },
    elementAt$1: function(_, index) {
      throw H.wrapException(P.RangeError$range(index, 0, 0, "index", null));
    },
    contains$1: function(_, element) {
      return false;
    },
    map$1$1: function(_, f, $T) {
      return new H.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    skip$1: function(_, count) {
      P.RangeError_checkNotNegative(count, "count");
      return this;
    },
    toList$1$growable: function(_, growable) {
      var t2,
        t1 = this.$ti._eval$1("JSArray<1>");
      if (growable)
        t1 = H.setRuntimeTypeInfo([], t1);
      else {
        t2 = new Array(0);
        t2.fixed$length = Array;
        t1 = H.setRuntimeTypeInfo(t2, t1);
      }
      return t1;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  H.EmptyIterator.prototype = {
    moveNext$0: function() {
      return false;
    },
    get$current: function(_) {
      return null;
    }
  };
  H.WhereTypeIterable.prototype = {
    get$iterator: function(_) {
      return new H.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("WhereTypeIterator<1>"));
    }
  };
  H.WhereTypeIterator.prototype = {
    moveNext$0: function() {
      var t1, t2;
      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)
        if (t2._is(t1.get$current(t1)))
          return true;
      return false;
    },
    get$current: function(_) {
      var t1 = this._source;
      return t1.get$current(t1);
    }
  };
  H.FixedLengthListMixin.prototype = {
    set$length: function(receiver, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    },
    remove$1: function(receiver, element) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
    },
    clear$0: function(receiver) {
      throw H.wrapException(P.UnsupportedError$("Cannot clear a fixed-length list"));
    }
  };
  H.UnmodifiableListMixin.prototype = {
    $indexSet: function(_, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1: function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    },
    remove$1: function(_, element) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    },
    clear$0: function(_) {
      throw H.wrapException(P.UnsupportedError$("Cannot clear an unmodifiable list"));
    }
  };
  H.UnmodifiableListBase.prototype = {};
  H.ReversedListIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  };
  H.Symbol.prototype = {
    get$hashCode: function(_) {
      var hash = this._hashCode;
      if (hash != null)
        return hash;
      hash = 536870911 & 664597 * J.get$hashCode$(this.__internal$_name);
      this._hashCode = hash;
      return hash;
    },
    toString$0: function(_) {
      return 'Symbol("' + H.S(this.__internal$_name) + '")';
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof H.Symbol && this.__internal$_name == other.__internal$_name;
    },
    $isSymbol0: 1
  };
  H.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  H.ConstantMapView.prototype = {};
  H.ConstantMap.prototype = {
    cast$2$0: function(_, RK, RV) {
      var t1 = H._instanceType(this);
      return P.Map_castFrom(this, t1._precomputed1, t1._rest[1], RK, RV);
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$length(this) !== 0;
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    $indexSet: function(_, key, val) {
      return H.ConstantMap__throwUnmodifiable();
    },
    remove$1: function(_, key) {
      return H.ConstantMap__throwUnmodifiable();
    },
    $isMap: 1
  };
  H.ConstantStringMap.prototype = {
    get$length: function(_) {
      return this._length;
    },
    containsKey$1: function(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsObject.hasOwnProperty(key);
    },
    $index: function(_, key) {
      if (!this.containsKey$1(0, key))
        return null;
      return this._fetch$1(key);
    },
    _fetch$1: function(key) {
      return this._jsObject[key];
    },
    forEach$1: function(_, f) {
      var t1, i, key,
        keys = this._keys;
      for (t1 = keys.length, i = 0; i < t1; ++i) {
        key = keys[i];
        f.call$2(key, this._fetch$1(key));
      }
    },
    get$keys: function(_) {
      return new H._ConstantMapKeyIterable(this, H._instanceType(this)._eval$1("_ConstantMapKeyIterable<1>"));
    },
    get$values: function(_) {
      var t1 = H._instanceType(this);
      return H.MappedIterable_MappedIterable(this._keys, new H.ConstantStringMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    }
  };
  H.ConstantStringMap_values_closure.prototype = {
    call$1: function(key) {
      return this.$this._fetch$1(key);
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  H._ConstantMapKeyIterable.prototype = {
    get$iterator: function(_) {
      var t1 = this._map._keys;
      return new J.ArrayIterator(t1, t1.length);
    },
    get$length: function(_) {
      return this._map._keys.length;
    }
  };
  H.GeneralConstantMap.prototype = {
    _getMap$0: function() {
      var t1, _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        t1 = _this.$ti;
        backingMap = new H.JsLinkedHashMap(t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("JsLinkedHashMap<1,2>"));
        H.fillLiteralMap(_this._jsData, backingMap);
        _this.$map = backingMap;
      }
      return backingMap;
    },
    containsKey$1: function(_, key) {
      return this._getMap$0().containsKey$1(0, key);
    },
    $index: function(_, key) {
      return this._getMap$0().$index(0, key);
    },
    forEach$1: function(_, f) {
      this._getMap$0().forEach$1(0, f);
    },
    get$keys: function(_) {
      var t1 = this._getMap$0();
      return t1.get$keys(t1);
    },
    get$values: function(_) {
      var t1 = this._getMap$0();
      return t1.get$values(t1);
    },
    get$length: function(_) {
      var t1 = this._getMap$0();
      return t1.get$length(t1);
    }
  };
  H.Instantiation.prototype = {
    Instantiation$1: function(_genericClosure) {
      if (false)
        H.instantiatedGenericFunctionType(0, 0);
    },
    toString$0: function(_) {
      var types = "<" + C.JSArray_methods.join$1([H.createRuntimeType(this.$ti._precomputed1)], ", ") + ">";
      return H.S(this._genericClosure) + " with " + types;
    }
  };
  H.Instantiation1.prototype = {
    call$2: function(a0, a1) {
      return this._genericClosure.call$1$2(a0, a1, this.$ti._rest[0]);
    },
    $signature: function() {
      return H.instantiatedGenericFunctionType(H.closureFunctionType(this._genericClosure), this.$ti);
    }
  };
  H.JSInvocationMirror.prototype = {
    get$memberName: function() {
      var t1 = this.__js_helper$_memberName;
      return t1;
    },
    get$positionalArguments: function() {
      var t1, argumentCount, list, index, _this = this;
      if (_this.__js_helper$_kind === 1)
        return C.List_empty0;
      t1 = _this._arguments;
      argumentCount = t1.length - _this._namedArgumentNames.length - _this._typeArgumentCount;
      if (argumentCount === 0)
        return C.List_empty0;
      list = [];
      for (index = 0; index < argumentCount; ++index)
        list.push(t1[index]);
      return J.JSArray_markUnmodifiableList(list);
    },
    get$namedArguments: function() {
      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, _this = this;
      if (_this.__js_helper$_kind !== 0)
        return C.Map_empty;
      t1 = _this._namedArgumentNames;
      namedArgumentCount = t1.length;
      t2 = _this._arguments;
      namedArgumentsStartIndex = t2.length - namedArgumentCount - _this._typeArgumentCount;
      if (namedArgumentCount === 0)
        return C.Map_empty;
      map = new H.JsLinkedHashMap(type$.JsLinkedHashMap_Symbol_dynamic);
      for (i = 0; i < namedArgumentCount; ++i)
        map.$indexSet(0, new H.Symbol(t1[i]), t2[namedArgumentsStartIndex + i]);
      return new H.ConstantMapView(map, type$.ConstantMapView_Symbol_dynamic);
    }
  };
  H.Primitives_initTicker_closure.prototype = {
    call$0: function() {
      return C.JSNumber_methods.floor$0(1000 * this.performance.now());
    },
    $signature: 48
  };
  H.Primitives_functionNoSuchMethod_closure.prototype = {
    call$2: function($name, argument) {
      var t1 = this._box_0;
      t1.names = t1.names + "$" + H.S($name);
      this.namedArgumentList.push($name);
      this.$arguments.push(argument);
      ++t1.argumentCount;
    },
    $signature: 172
  };
  H.TypeErrorDecoder.prototype = {
    matchTypeError$1: function(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  H.NullError.prototype = {
    toString$0: function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(this.__js_helper$_message);
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  H.JsNoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(_this.__js_helper$_message);
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + H.S(_this.__js_helper$_message) + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + H.S(_this.__js_helper$_message) + ")";
    }
  };
  H.UnknownJsTypeError.prototype = {
    toString$0: function(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  H.ExceptionAndStackTrace.prototype = {};
  H.unwrapException_saveStackTrace.prototype = {
    call$1: function(error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = this.ex;
      return error;
    },
    $signature: 8
  };
  H._StackTrace.prototype = {
    toString$0: function(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  H.Closure.prototype = {
    toString$0: function(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + H.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call: function() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  H.TearOffClosure.prototype = {};
  H.StaticClosure.prototype = {
    toString$0: function(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + H.unminifyOrTag($name) + "'";
    }
  };
  H.BoundClosure.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof H.BoundClosure))
        return false;
      return _this._self === other._self && _this._target === other._target && _this._receiver === other._receiver;
    },
    get$hashCode: function(_) {
      var receiverHashCode,
        t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      return (receiverHashCode ^ H.Primitives_objectHashCode(this._target)) >>> 0;
    },
    toString$0: function(_) {
      var receiver = this._receiver;
      if (receiver == null)
        receiver = this._self;
      return "Closure '" + H.S(this._name) + "' of " + ("Instance of '" + H.S(H.Primitives_objectTypeName(receiver)) + "'");
    }
  };
  H.RuntimeError.prototype = {
    toString$0: function(_) {
      return "RuntimeError: " + H.S(this.message);
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  H.JsLinkedHashMap.prototype = {
    get$length: function(_) {
      return this._length;
    },
    get$isEmpty: function(_) {
      return this._length === 0;
    },
    get$isNotEmpty: function(_) {
      return !this.get$isEmpty(this);
    },
    get$keys: function(_) {
      return new H.LinkedHashMapKeyIterable(this, H._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values: function(_) {
      var _this = this,
        t1 = H._instanceType(_this);
      return H.MappedIterable_MappedIterable(_this.get$keys(_this), new H.JsLinkedHashMap_values_closure(_this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1: function(_, key) {
      var strings, nums, _this = this;
      if (typeof key == "string") {
        strings = _this._strings;
        if (strings == null)
          return false;
        return _this._containsTableEntry$2(strings, key);
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        if (nums == null)
          return false;
        return _this._containsTableEntry$2(nums, key);
      } else
        return _this.internalContainsKey$1(key);
    },
    internalContainsKey$1: function(key) {
      var _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return false;
      return _this.internalFindBucketIndex$2(_this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key)), key) >= 0;
    },
    addAll$1: function(_, other) {
      J.forEach$1$ax(other, new H.JsLinkedHashMap_addAll_closure(this));
    },
    $index: function(_, key) {
      var strings, cell, t1, nums, _this = this, _null = null;
      if (typeof key == "string") {
        strings = _this._strings;
        if (strings == null)
          return _null;
        cell = _this._getTableCell$2(strings, key);
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        if (nums == null)
          return _null;
        cell = _this._getTableCell$2(nums, key);
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return _this.internalGet$1(key);
    },
    internalGet$1: function(key) {
      var bucket, index, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = _this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key));
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet: function(_, key, value) {
      var strings, nums, _this = this;
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2: function(key, value) {
      var hash, bucket, index, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      if (bucket == null)
        _this._setTableEntry$3(rest, hash, [_this._newLinkedCell$2(key, value)]);
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      var value;
      if (this.containsKey$1(0, key))
        return this.$index(0, key);
      value = ifAbsent.call$0();
      this.$indexSet(0, key, value);
      return value;
    },
    remove$1: function(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this._removeHashTableEntry$2(_this._strings, key);
      else if (typeof key == "number" && (key & 0x3ffffff) === key)
        return _this._removeHashTableEntry$2(_this._nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1: function(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        _this._deleteTableEntry$2(rest, hash);
      return cell.hashMapCellValue;
    },
    clear$0: function(_) {
      var _this = this;
      if (_this._length > 0) {
        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this._last = null;
        _this._length = 0;
        _this._modified$0();
      }
    },
    forEach$1: function(_, action) {
      var _this = this,
        cell = _this._first,
        modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3: function(table, key, value) {
      var cell = this._getTableCell$2(table, key);
      if (cell == null)
        this._setTableEntry$3(table, key, this._newLinkedCell$2(key, value));
      else
        cell.hashMapCellValue = value;
    },
    _removeHashTableEntry$2: function(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = this._getTableCell$2(table, key);
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      this._deleteTableEntry$2(table, key);
      return cell.hashMapCellValue;
    },
    _modified$0: function() {
      this._modifications = this._modifications + 1 & 67108863;
    },
    _newLinkedCell$2: function(key, value) {
      var last, _this = this,
        cell = new H.LinkedHashMapCell(key, value);
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        last = _this._last;
        cell._previous = last;
        _this._last = last._next = cell;
      }
      ++_this._length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1: function(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this._length;
      _this._modified$0();
    },
    internalComputeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    },
    internalFindBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    _getTableCell$2: function(table, key) {
      return table[key];
    },
    _getTableBucket$2: function(table, key) {
      return table[key];
    },
    _setTableEntry$3: function(table, key, value) {
      table[key] = value;
    },
    _deleteTableEntry$2: function(table, key) {
      delete table[key];
    },
    _containsTableEntry$2: function(table, key) {
      return this._getTableCell$2(table, key) != null;
    },
    _newHashTable$0: function() {
      var _s20_ = "<non-identifier-key>",
        table = Object.create(null);
      this._setTableEntry$3(table, _s20_, table);
      this._deleteTableEntry$2(table, _s20_);
      return table;
    }
  };
  H.JsLinkedHashMap_values_closure.prototype = {
    call$1: function(each) {
      return this.$this.$index(0, each);
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  H.JsLinkedHashMap_addAll_closure.prototype = {
    call$2: function(key, value) {
      this.$this.$indexSet(0, key, value);
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("Null(1,2)");
    }
  };
  H.LinkedHashMapCell.prototype = {};
  H.LinkedHashMapKeyIterable.prototype = {
    get$length: function(_) {
      return this._map._length;
    },
    get$isEmpty: function(_) {
      return this._map._length === 0;
    },
    get$iterator: function(_) {
      var t1 = this._map,
        t2 = new H.LinkedHashMapKeyIterator(t1, t1._modifications);
      t2._cell = t1._first;
      return t2;
    },
    contains$1: function(_, element) {
      return this._map.containsKey$1(0, element);
    },
    forEach$1: function(_, f) {
      var t1 = this._map,
        cell = t1._first,
        modifications = t1._modifications;
      for (; cell != null;) {
        f.call$1(cell.hashMapCellKey);
        if (modifications !== t1._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        cell = cell._next;
      }
    }
  };
  H.LinkedHashMapKeyIterator.prototype = {
    get$current: function(_) {
      return this.__js_helper$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = _this._cell;
        if (t1 == null) {
          _this.__js_helper$_current = null;
          return false;
        } else {
          _this.__js_helper$_current = t1.hashMapCellKey;
          _this._cell = t1._next;
          return true;
        }
      }
    }
  };
  H.initHooks_closure.prototype = {
    call$1: function(o) {
      return this.getTag(o);
    },
    $signature: 8
  };
  H.initHooks_closure0.prototype = {
    call$2: function(o, tag) {
      return this.getUnknownTag(o, tag);
    }
  };
  H.initHooks_closure1.prototype = {
    call$1: function(tag) {
      return this.prototypeForTag(tag);
    }
  };
  H.JSSyntaxRegExp.prototype = {
    toString$0: function(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    firstMatch$1: function(string) {
      var m;
      if (typeof string != "string")
        H.throwExpression(H.argumentErrorValue(string));
      m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new H._MatchImplementation(m);
    },
    stringMatch$1: function(string) {
      var match = this.firstMatch$1(string);
      if (match != null)
        return match._match[0];
      return null;
    },
    $isRegExp: 1
  };
  H._MatchImplementation.prototype = {
    $index: function(_, index) {
      return this._match[index];
    },
    $isMatch: 1
  };
  H.StringMatch.prototype = {
    $index: function(_, g) {
      if (g !== 0)
        H.throwExpression(P.RangeError$value(g, null));
      return this.pattern;
    },
    $isMatch: 1
  };
  H._StringAllMatchesIterable.prototype = {
    get$iterator: function(_) {
      return new H._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);
    }
  };
  H._StringAllMatchesIterator.prototype = {
    moveNext$0: function() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new H.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current: function(_) {
      return this.__js_helper$_current;
    }
  };
  H.NativeByteBuffer.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_ByteBuffer_RkP;
    },
    asInt64List$2: function(receiver, offsetInBytes, $length) {
      throw H.wrapException(P.UnsupportedError$("Int64List not supported by dart2js."));
    },
    $isNativeByteBuffer: 1
  };
  H.NativeTypedData.prototype = {
    _invalidPosition$3: function(receiver, position, $length, $name) {
      if (!H._isInt(position))
        throw H.wrapException(P.ArgumentError$value(position, $name, "Invalid list position"));
      else
        throw H.wrapException(P.RangeError$range(position, 0, $length, $name, null));
    },
    _checkPosition$3: function(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    },
    $isNativeTypedData: 1,
    $isTypedData: 1
  };
  H.NativeByteData.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_ByteData_zNC;
    },
    getInt64$2: function(receiver, byteOffset, endian) {
      throw H.wrapException(P.UnsupportedError$("Int64 accessor not supported by dart2js."));
    },
    setInt64$3: function(receiver, byteOffset, value, endian) {
      throw H.wrapException(P.UnsupportedError$("Int64 accessor not supported by dart2js."));
    },
    $isByteData: 1
  };
  H.NativeTypedArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    _setRangeFast$4: function(receiver, start, end, source, skipCount) {
      var count, sourceLength,
        targetLength = receiver.length;
      this._checkPosition$3(receiver, start, targetLength, "start");
      this._checkPosition$3(receiver, end, targetLength, "end");
      if (start > end)
        throw H.wrapException(P.RangeError$range(start, 0, end, null, null));
      count = end - start;
      if (skipCount < 0)
        throw H.wrapException(P.ArgumentError$(skipCount));
      sourceLength = source.length;
      if (sourceLength - skipCount < count)
        throw H.wrapException(P.StateError$("Not enough elements"));
      if (skipCount !== 0 || sourceLength !== count)
        source = source.subarray(skipCount, skipCount + count);
      receiver.set(source, start);
    },
    $isJSIndexable: 1,
    $isJavaScriptIndexingBehavior: 1
  };
  H.NativeTypedArrayOfDouble.prototype = {
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  H.NativeTypedArrayOfInt.prototype = {
    $indexSet: function(receiver, index, value) {
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      if (type$.NativeTypedArrayOfInt._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  H.NativeFloat32List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Float32List_LB7;
    }
  };
  H.NativeFloat64List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Float64List_LB7;
    },
    $isFloat64List: 1
  };
  H.NativeInt16List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Int16List_uXf;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeInt32List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Int32List_O50;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isInt32List: 1
  };
  H.NativeInt8List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Int8List_ekJ;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint16List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Uint16List_2bx;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint32List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Uint32List_2bx;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint8ClampedList.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Uint8ClampedList_Jik;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint8List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Uint8List_WLA;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isNativeUint8List: 1,
    $isUint8List: 1
  };
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  H.Rti.prototype = {
    _eval$1: function(recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1: function(typeOrTuple) {
      return H._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  H._FunctionParameters.prototype = {};
  H._Type.prototype = {
    toString$0: function(_) {
      return H._rtiToString(this._rti, null);
    },
    $isType: 1
  };
  H._Error.prototype = {
    toString$0: function(_) {
      return this._message;
    }
  };
  H._TypeError.prototype = {
    get$message: function(_) {
      return this._message;
    }
  };
  P._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1: function(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 3
  };
  P._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1: function(callback) {
      var t1, t2;
      this._box_0.storedCallback = callback;
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    }
  };
  P._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._TimerImpl.prototype = {
    _TimerImpl$2: function(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(H.convertDartClosureToJS(new P._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw H.wrapException(P.UnsupportedError$("`setTimeout()` not found."));
    },
    _TimerImpl$periodic$2: function(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setInterval(H.convertDartClosureToJS(new P._TimerImpl$periodic_closure(this, milliseconds, Date.now(), callback), 0), milliseconds);
      else
        throw H.wrapException(P.UnsupportedError$("Periodic timer."));
    },
    cancel$0: function(_) {
      var t1;
      if (self.setTimeout != null) {
        t1 = this._handle;
        if (t1 == null)
          return;
        if (this._once)
          self.clearTimeout(t1);
        else
          self.clearInterval(t1);
        this._handle = null;
      } else
        throw H.wrapException(P.UnsupportedError$("Canceling a timer."));
    },
    $isTimer: 1
  };
  P._TimerImpl_internalCallback.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._handle = null;
      t1._tick = 1;
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._TimerImpl$periodic_closure.prototype = {
    call$0: function() {
      var duration, _this = this,
        t1 = _this.$this,
        tick = t1._tick + 1,
        t2 = _this.milliseconds;
      if (t2 > 0) {
        duration = Date.now() - _this.start;
        if (duration > (tick + 1) * t2)
          tick = C.JSInt_methods.$tdiv(duration, t2);
      }
      t1._tick = tick;
      _this.callback.call$1(t1);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._AsyncAwaitCompleter.prototype = {
    complete$1: function(_, value) {
      var t1 = !this.isSync || this.$ti._eval$1("Future<1>")._is(value),
        t2 = this._future;
      if (t1)
        t2._asyncComplete$1(value);
      else
        t2._completeWithValue$1(value);
    },
    completeError$2: function(e, st) {
      var t1;
      if (st == null)
        st = P.AsyncError_defaultStackTrace(e);
      t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    }
  };
  P._awaitOnObject_closure.prototype = {
    call$1: function(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 15
  };
  P._awaitOnObject_closure0.prototype = {
    call$2: function(error, stackTrace) {
      this.bodyFunction.call$2(1, new H.ExceptionAndStackTrace(error, stackTrace));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 171
  };
  P._wrapJsFunctionForAsync_closure.prototype = {
    call$2: function(errorCode, result) {
      this.$protected(errorCode, result);
    },
    $signature: 170
  };
  P._asyncStarHelper_closure.prototype = {
    call$0: function() {
      var t1 = this.controller,
        t2 = t1.controller,
        t3 = t2._state;
      if ((t3 & 1) !== 0 ? (t2.get$_subscription()._state & 4) !== 0 : (t3 & 2) === 0) {
        t1.isSuspended = true;
        return;
      }
      this.bodyFunctionOrErrorCode.call$2(null, 0);
    },
    $signature: 0
  };
  P._asyncStarHelper_closure0.prototype = {
    call$1: function(_) {
      var errorCode = this.controller.cancelationFuture != null ? 2 : 0;
      this.bodyFunctionOrErrorCode.call$2(errorCode, null);
    },
    $signature: 3
  };
  P._AsyncStarStreamController.prototype = {
    _AsyncStarStreamController$1: function(body, $T) {
      var t1 = new P._AsyncStarStreamController__resumeBody(body);
      this.controller = new P._AsyncStreamController(new P._AsyncStarStreamController_closure(t1), null, new P._AsyncStarStreamController_closure0(this, t1), new P._AsyncStarStreamController_closure1(this, body), $T._eval$1("_AsyncStreamController<0>"));
    }
  };
  P._AsyncStarStreamController__resumeBody.prototype = {
    call$0: function() {
      P.scheduleMicrotask(new P._AsyncStarStreamController__resumeBody_closure(this.body));
    },
    $signature: 0
  };
  P._AsyncStarStreamController__resumeBody_closure.prototype = {
    call$0: function() {
      this.body.call$2(0, null);
    },
    $signature: 0
  };
  P._AsyncStarStreamController_closure.prototype = {
    call$0: function() {
      this._resumeBody.call$0();
    },
    $signature: 0
  };
  P._AsyncStarStreamController_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1.isSuspended) {
        t1.isSuspended = false;
        this._resumeBody.call$0();
      }
    },
    $signature: 0
  };
  P._AsyncStarStreamController_closure1.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if ((t1.controller._state & 4) === 0) {
        t1.cancelationFuture = new P._Future($.Zone__current, type$._Future_dynamic);
        if (t1.isSuspended) {
          t1.isSuspended = false;
          P.scheduleMicrotask(new P._AsyncStarStreamController__closure(this.body));
        }
        return t1.cancelationFuture;
      }
    },
    $signature: 169
  };
  P._AsyncStarStreamController__closure.prototype = {
    call$0: function() {
      this.body.call$2(2, null);
    },
    $signature: 0
  };
  P._IterationMarker.prototype = {
    toString$0: function(_) {
      return "IterationMarker(" + this.state + ", " + H.S(this.value) + ")";
    }
  };
  P._SyncStarIterator.prototype = {
    get$current: function(_) {
      var t1 = this._nestedIterator;
      if (t1 == null)
        return this._async$_current;
      return t1.get$current(t1);
    },
    moveNext$0: function() {
      var t1, value, state, inner, _this = this;
      for (; true;) {
        t1 = _this._nestedIterator;
        if (t1 != null)
          if (t1.moveNext$0())
            return true;
          else
            _this._nestedIterator = null;
        value = function(body, SUCCESS, ERROR) {
          var errorValue,
            errorCode = SUCCESS;
          while (true)
            try {
              return body(errorCode, errorValue);
            } catch (error) {
              errorValue = error;
              errorCode = ERROR;
            }
        }(_this._body, 0, 1);
        if (value instanceof P._IterationMarker) {
          state = value.state;
          if (state === 2) {
            t1 = _this._suspendedBodies;
            if (t1 == null || t1.length === 0) {
              _this._async$_current = null;
              return false;
            }
            _this._body = t1.pop();
            continue;
          } else {
            t1 = value.value;
            if (state === 3)
              throw t1;
            else {
              inner = J.get$iterator$ax(t1);
              if (inner instanceof P._SyncStarIterator) {
                t1 = _this._suspendedBodies;
                if (t1 == null)
                  t1 = _this._suspendedBodies = [];
                t1.push(_this._body);
                _this._body = inner._body;
                continue;
              } else {
                _this._nestedIterator = inner;
                continue;
              }
            }
          }
        } else {
          _this._async$_current = value;
          return true;
        }
      }
      return false;
    }
  };
  P._SyncStarIterable.prototype = {
    get$iterator: function(_) {
      return new P._SyncStarIterator(this._outerHelper());
    }
  };
  P.Future.prototype = {};
  P.Future_Future$delayed_closure.prototype = {
    call$0: function() {
      this.result._complete$1(null);
    },
    $signature: 0
  };
  P.Future_wait_handleError.prototype = {
    call$2: function(theError, theStackTrace) {
      var _this = this,
        t1 = _this._box_0,
        t2 = --t1.remaining;
      if (t1.values != null) {
        t1.values = null;
        if (t1.remaining === 0 || _this.eagerError)
          _this.result._completeError$2(theError, theStackTrace);
        else {
          t1.error = theError;
          t1.stackTrace = theStackTrace;
        }
      } else if (t2 === 0 && !_this.eagerError)
        _this.result._completeError$2(t1.error, t1.stackTrace);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 167
  };
  P.Future_wait_closure.prototype = {
    call$1: function(value) {
      var _this = this,
        t1 = _this._box_0,
        t2 = --t1.remaining,
        t3 = t1.values;
      if (t3 != null) {
        t3[_this.pos] = value;
        if (t2 === 0)
          _this.result._completeWithValue$1(t3);
      } else if (t1.remaining === 0 && !_this.eagerError)
        _this.result._completeError$2(t1.error, t1.stackTrace);
    },
    $signature: function() {
      return this.T._eval$1("Null(0)");
    }
  };
  P._Completer.prototype = {
    completeError$2: function(error, stackTrace) {
      P.ArgumentError_checkNotNull(error, "error");
      if (this.future._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      this._completeError$2(error, stackTrace == null ? P.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    completeError$1: function(error) {
      return this.completeError$2(error, null);
    }
  };
  P._AsyncCompleter.prototype = {
    complete$1: function(_, value) {
      var t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    },
    complete$0: function($receiver) {
      return this.complete$1($receiver, null);
    },
    _completeError$2: function(error, stackTrace) {
      this.future._asyncCompleteError$2(error, stackTrace);
    }
  };
  P._FutureListener.prototype = {
    matchesErrorTest$1: function(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2(this.callback, asyncError.error);
    },
    handleError$1: function(asyncError) {
      var errorCallback = this.errorCallback,
        t1 = this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        return t1.runBinary$3(errorCallback, asyncError.error, asyncError.stackTrace);
      else
        return t1.runUnary$2(errorCallback, asyncError.error);
    }
  };
  P._Future.prototype = {
    then$1$2$onError: function(f, onError, $R) {
      var result,
        currentZone = $.Zone__current;
      if (currentZone !== C.C__RootZone)
        onError = onError != null ? P._registerErrorHandler(onError, currentZone) : onError;
      result = new P._Future($.Zone__current, $R._eval$1("_Future<0>"));
      this._addListener$1(new P._FutureListener(result, onError == null ? 1 : 3, f, onError));
      return result;
    },
    then$1$1: function(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    then$1: function(f) {
      return this.then$1$2$onError(f, null, type$.dynamic);
    },
    _thenAwait$1$2: function(f, onError, $E) {
      var result = new P._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new P._FutureListener(result, 19, f, onError));
      return result;
    },
    catchError$2$test: function(onError, test) {
      var t1 = $.Zone__current,
        result = new P._Future(t1, this.$ti);
      if (t1 !== C.C__RootZone)
        onError = P._registerErrorHandler(onError, t1);
      this._addListener$1(new P._FutureListener(result, 2, test, onError));
      return result;
    },
    catchError$1: function(onError) {
      return this.catchError$2$test(onError, null);
    },
    whenComplete$1: function(action) {
      var result = new P._Future($.Zone__current, this.$ti);
      this._addListener$1(new P._FutureListener(result, 8, action, null));
      return result;
    },
    _addListener$1: function(listener) {
      var t2, _this = this,
        t1 = _this._state;
      if (t1 <= 1) {
        listener._nextListener = _this._resultOrListeners;
        _this._resultOrListeners = listener;
      } else {
        if (t1 === 2) {
          t1 = _this._resultOrListeners;
          t2 = t1._state;
          if (t2 < 4) {
            t1._addListener$1(listener);
            return;
          }
          _this._state = t2;
          _this._resultOrListeners = t1._resultOrListeners;
        }
        P._rootScheduleMicrotask(null, null, _this._zone, new P._Future__addListener_closure(_this, listener));
      }
    },
    _prependListeners$1: function(listeners) {
      var t1, existingListeners, cursor, cursor0, t2, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 1) {
        existingListeners = _this._resultOrListeners;
        cursor = _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          for (; cursor0 = cursor._nextListener, cursor0 != null; cursor = cursor0)
            ;
          cursor._nextListener = existingListeners;
        }
      } else {
        if (t1 === 2) {
          t1 = _this._resultOrListeners;
          t2 = t1._state;
          if (t2 < 4) {
            t1._prependListeners$1(listeners);
            return;
          }
          _this._state = t2;
          _this._resultOrListeners = t1._resultOrListeners;
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        P._rootScheduleMicrotask(null, null, _this._zone, new P._Future__prependListeners_closure(_box_0, _this));
      }
    },
    _removeListeners$0: function() {
      var current = this._resultOrListeners;
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1: function(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _complete$1: function(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      if (t1._eval$1("Future<1>")._is(value))
        if (t1._is(value))
          P._Future__chainCoreFuture(value, _this);
        else
          P._Future__chainForeignFuture(value, _this);
      else {
        listeners = _this._removeListeners$0();
        _this._state = 4;
        _this._resultOrListeners = value;
        P._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1: function(value) {
      var _this = this,
        listeners = _this._removeListeners$0();
      _this._state = 4;
      _this._resultOrListeners = value;
      P._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2: function(error, stackTrace) {
      var _this = this,
        listeners = _this._removeListeners$0(),
        t1 = P.AsyncError$(error, stackTrace);
      _this._state = 8;
      _this._resultOrListeners = t1;
      P._Future__propagateToListeners(_this, listeners);
    },
    _completeError$1: function(error) {
      return this._completeError$2(error, null);
    },
    _asyncComplete$1: function(value) {
      if (this.$ti._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(value);
    },
    _asyncCompleteWithValue$1: function(value) {
      this._state = 1;
      P._rootScheduleMicrotask(null, null, this._zone, new P._Future__asyncCompleteWithValue_closure(this, value));
    },
    _chainFuture$1: function(value) {
      var _this = this;
      if (_this.$ti._is(value)) {
        if (value._state === 8) {
          _this._state = 1;
          P._rootScheduleMicrotask(null, null, _this._zone, new P._Future__chainFuture_closure(_this, value));
        } else
          P._Future__chainCoreFuture(value, _this);
        return;
      }
      P._Future__chainForeignFuture(value, _this);
    },
    _asyncCompleteError$2: function(error, stackTrace) {
      this._state = 1;
      P._rootScheduleMicrotask(null, null, this._zone, new P._Future__asyncCompleteError_closure(this, error, stackTrace));
    },
    $isFuture: 1
  };
  P._Future__addListener_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  P._Future__prependListeners_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  P._Future__chainForeignFuture_closure.prototype = {
    call$1: function(value) {
      var t1 = this.target;
      t1._state = 0;
      t1._complete$1(value);
    },
    $signature: 3
  };
  P._Future__chainForeignFuture_closure0.prototype = {
    call$2: function(error, stackTrace) {
      this.target._completeError$2(error, stackTrace);
    },
    call$1: function(error) {
      return this.call$2(error, null);
    },
    "call*": "call$2",
    $defaultValues: function() {
      return [null];
    },
    $signature: 163
  };
  P._Future__chainForeignFuture_closure1.prototype = {
    call$0: function() {
      this.target._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  P._Future__asyncCompleteWithValue_closure.prototype = {
    call$0: function() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  P._Future__chainFuture_closure.prototype = {
    call$0: function() {
      P._Future__chainCoreFuture(this.value, this.$this);
    },
    $signature: 0
  };
  P._Future__asyncCompleteError_closure.prototype = {
    call$0: function() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0: function() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this.listener;
        completeResult = t1.result._zone.run$1(t1.callback);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        if (_this.hasError) {
          t1 = _this._box_1.source._resultOrListeners.error;
          t2 = e;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = _this._box_1.source._resultOrListeners;
        else
          t2.listenerValueOrError = P.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        if (completeResult instanceof P._Future && completeResult._state >= 4) {
          if (completeResult._state === 8) {
            t1 = _this._box_0;
            t1.listenerValueOrError = completeResult._resultOrListeners;
            t1.listenerHasError = true;
          }
          return;
        }
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 1
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1: function(_) {
      return this.originalSource;
    },
    $signature: 162
  };
  P._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0: function() {
      var e, s, t1, exception, _this = this;
      try {
        t1 = _this.listener;
        _this._box_0.listenerValueOrError = t1.result._zone.runUnary$2(t1.callback, _this.sourceResult);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = _this._box_0;
        t1.listenerValueOrError = P.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 1
  };
  P._Future__propagateToListeners_handleError.prototype = {
    call$0: function() {
      var asyncError, e, s, t1, t2, exception, t3, t4, _this = this;
      try {
        asyncError = _this._box_1.source._resultOrListeners;
        t1 = _this.listener;
        if (t1.matchesErrorTest$1(asyncError) && t1.errorCallback != null) {
          t2 = _this._box_0;
          t2.listenerValueOrError = t1.handleError$1(asyncError);
          t2.listenerHasError = false;
        }
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = _this._box_1.source._resultOrListeners;
        t2 = t1.error;
        t3 = e;
        t4 = _this._box_0;
        if (t2 == null ? t3 == null : t2 === t3)
          t4.listenerValueOrError = t1;
        else
          t4.listenerValueOrError = P.AsyncError$(e, s);
        t4.listenerHasError = true;
      }
    },
    $signature: 1
  };
  P._AsyncCallbackEntry.prototype = {};
  P.Stream.prototype = {
    get$length: function(_) {
      var t1 = {},
        future = new P._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1, this), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }
  };
  P.Stream_Stream$fromIterable_closure.prototype = {
    call$0: function() {
      return new P._IterablePendingEvents(J.get$iterator$ax(this.elements));
    },
    $signature: function() {
      return this.T._eval$1("_IterablePendingEvents<0>()");
    }
  };
  P.Stream_length_closure.prototype = {
    call$1: function(_) {
      ++this._box_0.count;
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("Null(1)");
    }
  };
  P.Stream_length_closure0.prototype = {
    call$0: function() {
      this.future._complete$1(this._box_0.count);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P.StreamSubscription.prototype = {};
  P.StreamTransformerBase.prototype = {};
  P._StreamController.prototype = {
    get$_pendingEvents: function() {
      if ((this._state & 8) === 0)
        return this._varData;
      return this._varData.varData;
    },
    _ensurePendingEvents$0: function() {
      var t1, state, _this = this;
      if ((_this._state & 8) === 0) {
        t1 = _this._varData;
        return t1 == null ? _this._varData = new P._StreamImplEvents() : t1;
      }
      state = _this._varData;
      t1 = state.varData;
      return t1 == null ? state.varData = new P._StreamImplEvents() : t1;
    },
    get$_subscription: function() {
      if ((this._state & 8) !== 0)
        return this._varData.varData;
      return this._varData;
    },
    _badEventState$0: function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add event after closing");
      return new P.StateError("Cannot add event while adding a stream");
    },
    addStream$2$cancelOnError: function(_, source, cancelOnError) {
      var t2, t3, t4, _this = this,
        t1 = _this._state;
      if (t1 >= 4)
        throw H.wrapException(_this._badEventState$0());
      if ((t1 & 2) !== 0) {
        t1 = new P._Future($.Zone__current, type$._Future_dynamic);
        t1._asyncComplete$1(null);
        return t1;
      }
      t1 = _this._varData;
      t2 = new P._Future($.Zone__current, type$._Future_dynamic);
      t3 = source.listen$4$cancelOnError$onDone$onError(_this.get$_async$_add(_this), false, _this.get$_close(), _this.get$_addError());
      t4 = _this._state;
      if ((t4 & 1) !== 0 ? (_this.get$_subscription()._state & 4) !== 0 : (t4 & 2) === 0)
        t3.pause$0(0);
      _this._varData = new P._StreamControllerAddStreamState(t1, t2, t3);
      _this._state |= 8;
      return t2;
    },
    _ensureDoneFuture$0: function() {
      var t1 = this._doneFuture;
      if (t1 == null)
        t1 = this._doneFuture = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new P._Future($.Zone__current, type$._Future_dynamic);
      return t1;
    },
    add$1: function(_, value) {
      if (this._state >= 4)
        throw H.wrapException(this._badEventState$0());
      this._async$_add$1(0, value);
    },
    close$0: function(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) !== 0)
        return _this._ensureDoneFuture$0();
      if (t1 >= 4)
        throw H.wrapException(_this._badEventState$0());
      t1 = _this._state = t1 | 4;
      if ((t1 & 1) !== 0)
        _this._sendDone$0();
      else if ((t1 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, C.C__DelayedDone);
      return _this._ensureDoneFuture$0();
    },
    _async$_add$1: function(_, value) {
      var t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendData$1(value);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, new P._DelayedData(value));
    },
    _addError$2: function(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendError$2(error, stackTrace);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, new P._DelayedError(error, stackTrace));
    },
    _close$0: function() {
      var addState = this._varData;
      this._varData = addState.varData;
      this._state &= 4294967287;
      addState.addStreamFuture._asyncComplete$1(null);
    },
    _subscribe$4: function(onData, onError, onDone, cancelOnError) {
      var t1, t2, t3, subscription, pendingEvents, addState, _this = this;
      if ((_this._state & 3) !== 0)
        throw H.wrapException(P.StateError$("Stream has already been listened to."));
      t1 = H._instanceType(_this);
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      subscription = new P._ControllerSubscription(_this, t2, t3, t1._eval$1("_ControllerSubscription<1>"));
      subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1._precomputed1);
      pendingEvents = _this.get$_pendingEvents();
      t1 = _this._state |= 1;
      if ((t1 & 8) !== 0) {
        addState = _this._varData;
        addState.varData = subscription;
        addState.addSubscription.resume$0(0);
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new P._StreamController__subscribe_closure(_this));
      return subscription;
    },
    _recordCancel$1: function(subscription) {
      var e, s, exception, result0, t1, _this = this, result = null;
      if ((_this._state & 8) !== 0)
        result = _this._varData.cancel$0(0);
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      if (result == null)
        try {
          result = _this.onCancel.call$0();
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          result0 = new P._Future($.Zone__current, type$._Future_dynamic);
          result0._asyncCompleteError$2(e, s);
          result = result0;
        }
      else
        result = result.whenComplete$1(_this.onCancel);
      t1 = new P._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    }
  };
  P._StreamController__subscribe_closure.prototype = {
    call$0: function() {
      P._runGuarded(this.$this.onListen);
    },
    $signature: 0
  };
  P._StreamController__recordCancel_complete.prototype = {
    call$0: function() {
      var t1 = this.$this._doneFuture;
      if (t1 != null && t1._state === 0)
        t1._asyncComplete$1(null);
    },
    $signature: 1
  };
  P._AsyncStreamControllerDispatch.prototype = {
    _sendData$1: function(data) {
      this.get$_subscription()._addPending$1(new P._DelayedData(data));
    },
    _sendError$2: function(error, stackTrace) {
      this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace));
    },
    _sendDone$0: function() {
      this.get$_subscription()._addPending$1(C.C__DelayedDone);
    }
  };
  P._AsyncStreamController.prototype = {};
  P._ControllerStream.prototype = {
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      return this._async$_controller._subscribe$4(onData, onError, onDone, cancelOnError);
    },
    get$hashCode: function(_) {
      return (H.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof P._ControllerStream && other._async$_controller === this._async$_controller;
    }
  };
  P._ControllerSubscription.prototype = {
    _onCancel$0: function() {
      return this._async$_controller._recordCancel$1(this);
    },
    _onPause$0: function() {
      var t1 = this._async$_controller;
      if ((t1._state & 8) !== 0)
        t1._varData.addSubscription.pause$0(0);
      P._runGuarded(t1.onPause);
    },
    _onResume$0: function() {
      var t1 = this._async$_controller;
      if ((t1._state & 8) !== 0)
        t1._varData.addSubscription.resume$0(0);
      P._runGuarded(t1.onResume);
    }
  };
  P._AddStreamState.prototype = {
    cancel$0: function(_) {
      var cancel = this.addSubscription.cancel$0(0);
      if (cancel == null) {
        this.addStreamFuture._asyncComplete$1(null);
        return null;
      }
      return cancel.whenComplete$1(new P._AddStreamState_cancel_closure(this));
    }
  };
  P._AddStreamState_cancel_closure.prototype = {
    call$0: function() {
      this.$this.addStreamFuture._asyncComplete$1(null);
    },
    $signature: 0
  };
  P._StreamControllerAddStreamState.prototype = {};
  P._BufferingStreamSubscription.prototype = {
    _BufferingStreamSubscription$4: function(onData, onError, onDone, cancelOnError, $T) {
      var _this = this;
      _this._async$_onData = onData;
      if (type$.void_Function_Object_StackTrace._is(onError))
        _this._async$_onError = _this._zone.registerBinaryCallback$1(onError);
      else if (type$.void_Function_Object._is(onError))
        _this._async$_onError = onError;
      else
        H.throwExpression(P.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace."));
      _this._onDone = onDone;
    },
    _setPendingEvents$1: function(pendingEvents) {
      var _this = this;
      if (pendingEvents == null)
        return;
      _this._pending = pendingEvents;
      if (!pendingEvents.get$isEmpty(pendingEvents)) {
        _this._state = (_this._state | 64) >>> 0;
        _this._pending.schedule$1(_this);
      }
    },
    pause$0: function(_) {
      var t2, t3, _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t2 = (t1 + 128 | 4) >>> 0;
      _this._state = t2;
      if (t1 < 128 && _this._pending != null) {
        t3 = _this._pending;
        if (t3._state === 1)
          t3._state = 3;
      }
      if ((t1 & 4) === 0 && (t2 & 32) === 0)
        _this._guardCallback$1(_this.get$_onPause());
    },
    resume$0: function(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 128) {
        t1 = _this._state = t1 - 128;
        if (t1 < 128) {
          if ((t1 & 64) !== 0) {
            t1 = _this._pending;
            t1 = !t1.get$isEmpty(t1);
          } else
            t1 = false;
          if (t1)
            _this._pending.schedule$1(_this);
          else {
            t1 = (_this._state & 4294967291) >>> 0;
            _this._state = t1;
            if ((t1 & 32) === 0)
              _this._guardCallback$1(_this.get$_onResume());
          }
        }
      }
    },
    cancel$0: function(_) {
      var _this = this,
        t1 = (_this._state & 4294967279) >>> 0;
      _this._state = t1;
      if ((t1 & 8) === 0)
        _this._async$_cancel$0();
      t1 = _this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    _async$_cancel$0: function() {
      var t2, _this = this,
        t1 = _this._state = (_this._state | 8) >>> 0;
      if ((t1 & 64) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 32) === 0)
        _this._pending = null;
      _this._cancelFuture = _this._onCancel$0();
    },
    _onPause$0: function() {
    },
    _onResume$0: function() {
    },
    _onCancel$0: function() {
      return null;
    },
    _addPending$1: function($event) {
      var t1, _this = this,
        pending = _this._pending;
      (pending == null ? _this._pending = new P._StreamImplEvents() : pending).add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 64) === 0) {
        t1 = (t1 | 64) >>> 0;
        _this._state = t1;
        if (t1 < 128)
          _this._pending.schedule$1(_this);
      }
    },
    _sendData$1: function(data) {
      var _this = this,
        t1 = _this._state;
      _this._state = (t1 | 32) >>> 0;
      _this._zone.runUnaryGuarded$2(_this._async$_onData, data);
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _sendError$2: function(error, stackTrace) {
      var _this = this,
        t1 = _this._state,
        t2 = new P._BufferingStreamSubscription__sendError_sendError(_this, error, stackTrace);
      if ((t1 & 1) !== 0) {
        _this._state = (t1 | 16) >>> 0;
        _this._async$_cancel$0();
        t1 = _this._cancelFuture;
        if (t1 != null && t1 !== $.$get$Future__nullFuture())
          t1.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        _this._checkState$1((t1 & 4) !== 0);
      }
    },
    _sendDone$0: function() {
      var t2, _this = this,
        t1 = new P._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._async$_cancel$0();
      _this._state = (_this._state | 16) >>> 0;
      t2 = _this._cancelFuture;
      if (t2 != null && t2 !== $.$get$Future__nullFuture())
        t2.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1: function(callback) {
      var _this = this,
        t1 = _this._state;
      _this._state = (t1 | 32) >>> 0;
      callback.call$0();
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1: function(wasInputPaused) {
      var t1, isInputPaused, _this = this;
      if ((_this._state & 64) !== 0) {
        t1 = _this._pending;
        t1 = t1.get$isEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = _this._state = (_this._state & 4294967231) >>> 0;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t1 = _this._pending;
            t1 = t1 == null || t1.get$isEmpty(t1);
          } else
            t1 = false;
        else
          t1 = false;
        if (t1)
          _this._state = (_this._state & 4294967291) >>> 0;
      }
      for (; true; wasInputPaused = isInputPaused) {
        t1 = _this._state;
        if ((t1 & 8) !== 0) {
          _this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = (t1 ^ 32) >>> 0;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        _this._state = (_this._state & 4294967263) >>> 0;
      }
      t1 = _this._state;
      if ((t1 & 64) !== 0 && t1 < 128)
        _this._pending.schedule$1(_this);
    },
    $isStreamSubscription: 1
  };
  P._BufferingStreamSubscription__sendError_sendError.prototype = {
    call$0: function() {
      var onError, t3,
        t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 8) !== 0 && (t2 & 16) === 0)
        return;
      t1._state = (t2 | 32) >>> 0;
      onError = t1._async$_onError;
      t2 = this.error;
      t3 = t1._zone;
      if (type$.void_Function_Object_StackTrace._is(onError))
        t3.runBinaryGuarded$3(onError, t2, this.stackTrace);
      else
        t3.runUnaryGuarded$2(onError, t2);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    $signature: 1
  };
  P._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 42) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    $signature: 1
  };
  P._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      return this._createSubscription$4(onData, onError, onDone, cancelOnError);
    },
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      return P._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError, H._instanceType(this)._precomputed1);
    }
  };
  P._GeneratedStreamImpl.prototype = {
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      var t1, _this = this;
      if (_this._isUsed)
        throw H.wrapException(P.StateError$("Stream has already been listened to."));
      _this._isUsed = true;
      t1 = P._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError, _this.$ti._precomputed1);
      t1._setPendingEvents$1(_this._pending.call$0());
      return t1;
    }
  };
  P._IterablePendingEvents.prototype = {
    get$isEmpty: function(_) {
      return this._async$_iterator == null;
    },
    handleNext$1: function(dispatch) {
      var hasMore, e, s, exception, _this = this,
        t1 = _this._async$_iterator;
      if (t1 == null)
        throw H.wrapException(P.StateError$("No events pending."));
      hasMore = null;
      try {
        hasMore = t1.moveNext$0();
        if (hasMore) {
          t1 = _this._async$_iterator;
          dispatch._sendData$1(t1.get$current(t1));
        } else {
          _this._async$_iterator = null;
          dispatch._sendDone$0();
        }
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        if (hasMore == null) {
          _this._async$_iterator = C.C_EmptyIterator;
          dispatch._sendError$2(e, s);
        } else
          dispatch._sendError$2(e, s);
      }
    }
  };
  P._DelayedEvent.prototype = {
    get$next: function(receiver) {
      return this.next;
    },
    set$next: function(receiver, val) {
      return this.next = val;
    }
  };
  P._DelayedData.prototype = {
    perform$1: function(dispatch) {
      dispatch._sendData$1(this.value);
    }
  };
  P._DelayedError.prototype = {
    perform$1: function(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    }
  };
  P._DelayedDone.prototype = {
    perform$1: function(dispatch) {
      dispatch._sendDone$0();
    },
    get$next: function(_) {
      return null;
    },
    set$next: function(_, _0) {
      throw H.wrapException(P.StateError$("No events after a done."));
    }
  };
  P._PendingEvents.prototype = {
    schedule$1: function(dispatch) {
      var _this = this,
        t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    }
  };
  P._PendingEvents_schedule_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t1.handleNext$1(this.dispatch);
    },
    $signature: 0
  };
  P._StreamImplEvents.prototype = {
    get$isEmpty: function(_) {
      return this.lastPendingEvent == null;
    },
    add$1: function(_, $event) {
      var _this = this,
        t1 = _this.lastPendingEvent;
      if (t1 == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        t1.set$next(0, $event);
        _this.lastPendingEvent = $event;
      }
    },
    handleNext$1: function(dispatch) {
      var $event = this.firstPendingEvent,
        t1 = $event.get$next($event);
      this.firstPendingEvent = t1;
      if (t1 == null)
        this.lastPendingEvent = null;
      $event.perform$1(dispatch);
    }
  };
  P._StreamIterator.prototype = {};
  P.Timer.prototype = {};
  P.AsyncError.prototype = {
    toString$0: function(_) {
      return H.S(this.error);
    },
    $isError: 1,
    get$stackTrace: function() {
      return this.stackTrace;
    }
  };
  P._Zone.prototype = {};
  P._rootHandleUncaughtError_closure.prototype = {
    call$0: function() {
      var error,
        t1 = this._box_0,
        t2 = t1.stackTrace;
      if (t2 == null)
        throw H.wrapException(t1.error);
      error = H.wrapException(t1.error);
      error.stack = t2.toString$0(0);
      throw error;
    },
    $signature: 0
  };
  P._RootZone.prototype = {
    runGuarded$1: function(f) {
      var e, s, exception, _null = null;
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        P._rootRun(_null, _null, this, f);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, s);
      }
    },
    runUnaryGuarded$1$2: function(f, arg) {
      var e, s, exception, _null = null;
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        P._rootRunUnary(_null, _null, this, f, arg);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, s);
      }
    },
    runUnaryGuarded$2: function(f, arg) {
      return this.runUnaryGuarded$1$2(f, arg, type$.dynamic);
    },
    runBinaryGuarded$2$3: function(f, arg1, arg2) {
      var e, s, exception, _null = null;
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$2(arg1, arg2);
          return;
        }
        P._rootRunBinary(_null, _null, this, f, arg1, arg2);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, s);
      }
    },
    runBinaryGuarded$3: function(f, arg1, arg2) {
      return this.runBinaryGuarded$2$3(f, arg1, arg2, type$.dynamic, type$.dynamic);
    },
    bindCallback$1$1: function(f, $R) {
      return new P._RootZone_bindCallback_closure(this, f, $R);
    },
    bindCallbackGuarded$1: function(f) {
      return new P._RootZone_bindCallbackGuarded_closure(this, f);
    },
    bindUnaryCallbackGuarded$1$1: function(f, $T) {
      return new P._RootZone_bindUnaryCallbackGuarded_closure(this, f, $T);
    },
    $index: function(_, key) {
      return null;
    },
    run$1$1: function(f) {
      if ($.Zone__current === C.C__RootZone)
        return f.call$0();
      return P._rootRun(null, null, this, f);
    },
    run$1: function(f) {
      return this.run$1$1(f, type$.dynamic);
    },
    runUnary$2$2: function(f, arg) {
      if ($.Zone__current === C.C__RootZone)
        return f.call$1(arg);
      return P._rootRunUnary(null, null, this, f, arg);
    },
    runUnary$2: function(f, arg) {
      return this.runUnary$2$2(f, arg, type$.dynamic, type$.dynamic);
    },
    runBinary$3$3: function(f, arg1, arg2) {
      if ($.Zone__current === C.C__RootZone)
        return f.call$2(arg1, arg2);
      return P._rootRunBinary(null, null, this, f, arg1, arg2);
    },
    runBinary$3: function(f, arg1, arg2) {
      return this.runBinary$3$3(f, arg1, arg2, type$.dynamic, type$.dynamic, type$.dynamic);
    },
    registerBinaryCallback$3$1: function(f) {
      return f;
    },
    registerBinaryCallback$1: function(f) {
      return this.registerBinaryCallback$3$1(f, type$.dynamic, type$.dynamic, type$.dynamic);
    }
  };
  P._RootZone_bindCallback_closure.prototype = {
    call$0: function() {
      return this.$this.run$1(this.f);
    },
    $signature: function() {
      return this.R._eval$1("0()");
    }
  };
  P._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0: function() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 1
  };
  P._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1: function(arg) {
      return this.$this.runUnaryGuarded$2(this.f, arg);
    },
    $signature: function() {
      return this.T._eval$1("~(0)");
    }
  };
  P._HashMap.prototype = {
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._collection$_length !== 0;
    },
    get$keys: function(_) {
      return new P._HashMapKeyIterable(this, H._instanceType(this)._eval$1("_HashMapKeyIterable<1>"));
    },
    get$values: function(_) {
      var t1 = H._instanceType(this);
      return H.MappedIterable_MappedIterable(new P._HashMapKeyIterable(this, t1._eval$1("_HashMapKeyIterable<1>")), new P._HashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1: function(_, key) {
      var strings, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[key] != null;
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1: function(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index: function(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : P._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : P._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(0, key);
    },
    _get$1: function(_, key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet: function(_, key, value) {
      var strings, nums, _this = this;
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._collection$_strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = P._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._collection$_nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = P._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2: function(key, value) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        P._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._collection$_keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._collection$_keys = null;
        }
      }
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      var value;
      if (this.containsKey$1(0, key))
        return this.$index(0, key);
      value = ifAbsent.call$0();
      this.$indexSet(0, key, value);
      return value;
    },
    remove$1: function(_, key) {
      var t1 = this._remove$1(0, key);
      return t1;
    },
    _remove$1: function(_, key) {
      var hash, bucket, index, result, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return null;
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      --_this._collection$_length;
      _this._collection$_keys = null;
      result = bucket.splice(index, 2)[1];
      if (0 === bucket.length)
        delete rest[hash];
      return result;
    },
    clear$0: function(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._collection$_keys = null;
        _this._collection$_length = 0;
      }
    },
    forEach$1: function(_, action) {
      var $length, i, key, _this = this,
        keys = _this._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        key = keys[i];
        action.call$2(key, _this.$index(0, key));
        if (keys !== _this._collection$_keys)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0: function() {
      var result, strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        t1 = _this._collection$_keys;
      if (t1 != null)
        return t1;
      result = new Array(_this._collection$_length);
      result.fixed$length = Array;
      strings = _this._collection$_strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_keys = result;
    },
    _collection$_addHashTableEntry$3: function(table, key, value) {
      if (table[key] == null) {
        ++this._collection$_length;
        this._collection$_keys = null;
      }
      P._HashMap__setTableEntry(table, key, value);
    },
    _computeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2: function(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    }
  };
  P._HashMap_values_closure.prototype = {
    call$1: function(each) {
      return this.$this.$index(0, each);
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  P._IdentityHashMap.prototype = {
    _computeHashCode$1: function(key) {
      return H.objectHashCode(key) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  P._HashMapKeyIterable.prototype = {
    get$length: function(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$iterator: function(_) {
      var t1 = this._collection$_map;
      return new P._HashMapKeyIterator(t1, t1._computeKeys$0());
    },
    contains$1: function(_, element) {
      return this._collection$_map.containsKey$1(0, element);
    },
    forEach$1: function(_, f) {
      var $length, i,
        t1 = this._collection$_map,
        keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1._collection$_keys)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
      }
    }
  };
  P._HashMapKeyIterator.prototype = {
    get$current: function(_) {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var _this = this,
        keys = _this._collection$_keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._collection$_keys)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = keys[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  P._LinkedIdentityHashMap.prototype = {
    internalComputeHashCode$1: function(key) {
      return H.objectHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2: function(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i].hashMapCellKey;
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  P._HashSet.prototype = {
    _newSet$0: function() {
      return new P._HashSet(H._instanceType(this)._eval$1("_HashSet<1>"));
    },
    get$iterator: function(_) {
      return new P._HashSetIterator(this, this._computeElements$0());
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._collection$_length !== 0;
    },
    contains$1: function(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1: function(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    add$1: function(_, element) {
      var strings, nums, _this = this;
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = P._HashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = P._HashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(0, element);
    },
    _add$1: function(_, element) {
      var hash, bucket, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._HashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      ++_this._collection$_length;
      _this._elements = null;
      return true;
    },
    addAll$1: function(_, objects) {
      var t1;
      for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
        this.add$1(0, t1.get$current(t1));
    },
    remove$1: function(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(0, object);
    },
    _remove$1: function(_, object) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      --_this._collection$_length;
      _this._elements = null;
      bucket.splice(index, 1);
      if (0 === bucket.length)
        delete rest[hash];
      return true;
    },
    clear$0: function(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._elements = null;
        _this._collection$_length = 0;
      }
    },
    _computeElements$0: function() {
      var result, strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        t1 = _this._elements;
      if (t1 != null)
        return t1;
      result = new Array(_this._collection$_length);
      result.fixed$length = Array;
      strings = _this._collection$_strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._elements = result;
    },
    _collection$_addHashTableEntry$2: function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = 0;
      ++this._collection$_length;
      this._elements = null;
      return true;
    },
    _collection$_removeHashTableEntry$2: function(table, element) {
      if (table != null && table[element] != null) {
        delete table[element];
        --this._collection$_length;
        this._elements = null;
        return true;
      } else
        return false;
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i], element))
          return i;
      return -1;
    }
  };
  P._HashSetIterator.prototype = {
    get$current: function(_) {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var _this = this,
        elements = _this._elements,
        offset = _this._offset,
        t1 = _this._set;
      if (elements !== t1._elements)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = elements[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  P._LinkedHashSet.prototype = {
    _newSet$0: function() {
      return new P._LinkedHashSet(H._instanceType(this)._eval$1("_LinkedHashSet<1>"));
    },
    get$iterator: function(_) {
      var t1 = new P._LinkedHashSetIterator(this, this._collection$_modifications);
      t1._collection$_cell = this._collection$_first;
      return t1;
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._collection$_length !== 0;
    },
    contains$1: function(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        if (nums == null)
          return false;
        return nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1: function(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    forEach$1: function(_, action) {
      var _this = this,
        cell = _this._collection$_first,
        modifications = _this._collection$_modifications;
      for (; cell != null;) {
        action.call$1(cell._element);
        if (modifications !== _this._collection$_modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._collection$_next;
      }
    },
    add$1: function(_, element) {
      var strings, nums, _this = this;
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = P._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = P._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(0, element);
    },
    _add$1: function(_, element) {
      var hash, bucket, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1: function(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(0, object);
    },
    _remove$1: function(_, object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._collection$_unlinkCell$1(cell);
      return true;
    },
    clear$0: function(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._collection$_first = _this._collection$_last = null;
        _this._collection$_length = 0;
        _this._collection$_modified$0();
      }
    },
    _collection$_addHashTableEntry$2: function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _collection$_removeHashTableEntry$2: function(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = table[element];
      if (cell == null)
        return false;
      this._collection$_unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0: function() {
      this._collection$_modifications = 1073741823 & this._collection$_modifications + 1;
    },
    _collection$_newLinkedCell$1: function(element) {
      var last, _this = this,
        cell = new P._LinkedHashSetCell(element);
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        last = _this._collection$_last;
        cell._collection$_previous = last;
        _this._collection$_last = last._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _collection$_unlinkCell$1: function(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._element, element))
          return i;
      return -1;
    },
    $isLinkedHashSet: 1
  };
  P._LinkedHashSetCell.prototype = {};
  P._LinkedHashSetIterator.prototype = {
    get$current: function(_) {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = _this._collection$_cell;
        if (t1 == null) {
          _this._collection$_current = null;
          return false;
        } else {
          _this._collection$_current = t1._element;
          _this._collection$_cell = t1._collection$_next;
          return true;
        }
      }
    }
  };
  P.HashMap_HashMap$from_closure.prototype = {
    call$2: function(k, v) {
      this.result.$indexSet(0, k, v);
    },
    $signature: 7
  };
  P.IterableMixin.prototype = {
    map$1$1: function(_, f, $T) {
      return H.MappedIterable_MappedIterable(this, f, this.$ti._precomputed1, $T);
    },
    contains$1: function(_, element) {
      var t1, _this = this;
      for (t1 = _this.$ti, t1 = new P._SplayTreeKeyIterator(_this, H.setRuntimeTypeInfo([], t1._eval$1("JSArray<_SplayTreeNode<1>>")), _this._modificationCount, _this._splayCount, t1._eval$1("_SplayTreeKeyIterator<1>")), t1._findLeftMostDescendent$1(_this._root); t1.moveNext$0();)
        if (J.$eq$(t1.get$current(t1), element))
          return true;
      return false;
    },
    forEach$1: function(_, f) {
      var t1, _this = this;
      for (t1 = _this.$ti, t1 = new P._SplayTreeKeyIterator(_this, H.setRuntimeTypeInfo([], t1._eval$1("JSArray<_SplayTreeNode<1>>")), _this._modificationCount, _this._splayCount, t1._eval$1("_SplayTreeKeyIterator<1>")), t1._findLeftMostDescendent$1(_this._root); t1.moveNext$0();)
        f.call$1(t1.get$current(t1));
    },
    toList$1$growable: function(_, growable) {
      return P.List_List$from(this, true, this.$ti._precomputed1);
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    toSet$0: function(_) {
      return P.LinkedHashSet_LinkedHashSet$from(this, this.$ti._precomputed1);
    },
    get$length: function(_) {
      var count, _this = this,
        t1 = _this.$ti,
        it = new P._SplayTreeKeyIterator(_this, H.setRuntimeTypeInfo([], t1._eval$1("JSArray<_SplayTreeNode<1>>")), _this._modificationCount, _this._splayCount, t1._eval$1("_SplayTreeKeyIterator<1>"));
      it._findLeftMostDescendent$1(_this._root);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty: function(_) {
      var _this = this,
        t1 = _this.$ti;
      t1 = new P._SplayTreeKeyIterator(_this, H.setRuntimeTypeInfo([], t1._eval$1("JSArray<_SplayTreeNode<1>>")), _this._modificationCount, _this._splayCount, t1._eval$1("_SplayTreeKeyIterator<1>"));
      t1._findLeftMostDescendent$1(_this._root);
      return !t1.moveNext$0();
    },
    get$isNotEmpty: function(_) {
      return this._root != null;
    },
    skip$1: function(_, count) {
      return H.SkipIterable_SkipIterable(this, count, this.$ti._precomputed1);
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _this = this, _s5_ = "index";
      P.ArgumentError_checkNotNull(index, _s5_);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = _this.$ti, t1 = new P._SplayTreeKeyIterator(_this, H.setRuntimeTypeInfo([], t1._eval$1("JSArray<_SplayTreeNode<1>>")), _this._modificationCount, _this._splayCount, t1._eval$1("_SplayTreeKeyIterator<1>")), t1._findLeftMostDescendent$1(_this._root), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, _this, _s5_, null, elementIndex));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  P.IterableBase.prototype = {};
  P.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2: function(k, v) {
      this.result.$indexSet(0, k, v);
    },
    $signature: 7
  };
  P.LinkedHashSet.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1};
  P.ListBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
  P.ListMixin.prototype = {
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, this.get$length(receiver));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1: function(receiver, action) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        action.call$1(this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    get$isEmpty: function(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty: function(receiver) {
      return !this.get$isEmpty(receiver);
    },
    contains$1: function(receiver, element) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(this.$index(receiver, i), element))
          return true;
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    join$1: function(receiver, separator) {
      var t1;
      if (this.get$length(receiver) === 0)
        return "";
      t1 = P.StringBuffer__writeAll("", receiver, separator);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    map$1$1: function(receiver, f, $T) {
      return new H.MappedListIterable(receiver, f, H.instanceType(receiver)._eval$1("@<ListMixin.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    fold$1$2: function(receiver, initialValue, combine) {
      var value, i,
        $length = this.get$length(receiver);
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    fold$2: function($receiver, initialValue, combine) {
      return this.fold$1$2($receiver, initialValue, combine, type$.dynamic);
    },
    skip$1: function(receiver, count) {
      return H.SubListIterable$(receiver, count, null, H.instanceType(receiver)._eval$1("ListMixin.E"));
    },
    toList$1$growable: function(receiver, growable) {
      var i,
        result = H.setRuntimeTypeInfo([], H.instanceType(receiver)._eval$1("JSArray<ListMixin.E>"));
      C.JSArray_methods.set$length(result, this.get$length(receiver));
      for (i = 0; i < this.get$length(receiver); ++i)
        result[i] = this.$index(receiver, i);
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    add$1: function(receiver, element) {
      var t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    remove$1: function(receiver, element) {
      var i;
      for (i = 0; i < this.get$length(receiver); ++i)
        if (J.$eq$(this.$index(receiver, i), element)) {
          this._closeGap$2(receiver, i, i + 1);
          return true;
        }
      return false;
    },
    _closeGap$2: function(receiver, start, end) {
      var i, _this = this,
        $length = _this.get$length(receiver),
        size = end - start;
      for (i = end; i < $length; ++i)
        _this.$indexSet(receiver, i - size, _this.$index(receiver, i));
      _this.set$length(receiver, $length - size);
    },
    clear$0: function(receiver) {
      this.set$length(receiver, 0);
    },
    cast$1$0: function(receiver, $R) {
      return new H.CastList(receiver, H.instanceType(receiver)._eval$1("@<ListMixin.E>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    $add: function(receiver, other) {
      var result = H.setRuntimeTypeInfo([], H.instanceType(receiver)._eval$1("JSArray<ListMixin.E>"));
      C.JSArray_methods.set$length(result, this.get$length(receiver) + J.get$length$asx(other));
      C.JSArray_methods.setRange$3(result, 0, this.get$length(receiver), receiver);
      C.JSArray_methods.setRange$3(result, this.get$length(receiver), result.length, other);
      return result;
    },
    fillRange$3: function(receiver, start, end, fill) {
      var i;
      P.RangeError_checkValidRange(start, end, this.get$length(receiver));
      for (i = start; i < end; ++i)
        this.$indexSet(receiver, i, fill);
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, t1, i;
      P.RangeError_checkValidRange(start, end, this.get$length(receiver));
      $length = end - start;
      if ($length === 0)
        return;
      P.RangeError_checkNotNegative(skipCount, "skipCount");
      if (H.instanceType(receiver)._eval$1("List<ListMixin.E>")._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw H.wrapException(H.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
      else
        for (i = 0; i < $length; ++i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  P.MapBase.prototype = {};
  P.MapBase_mapToString_closure.prototype = {
    call$2: function(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += H.S(k);
      t1._contents = t2 + ": ";
      t1._contents += H.S(v);
    },
    $signature: 7
  };
  P.MapMixin.prototype = {
    cast$2$0: function(receiver, RK, RV) {
      var t1 = H.instanceType(receiver);
      return P.Map_castFrom(receiver, t1._eval$1("MapMixin.K"), t1._eval$1("MapMixin.V"), RK, RV);
    },
    forEach$1: function(receiver, action) {
      var t1, key;
      for (t1 = J.get$iterator$ax(this.get$keys(receiver)); t1.moveNext$0();) {
        key = t1.get$current(t1);
        action.call$2(key, this.$index(receiver, key));
      }
    },
    get$entries: function(receiver) {
      return J.map$1$1$ax(this.get$keys(receiver), new P.MapMixin_entries_closure(receiver), H.instanceType(receiver)._eval$1("MapEntry<MapMixin.K,MapMixin.V>"));
    },
    containsKey$1: function(receiver, key) {
      return J.contains$1$asx(this.get$keys(receiver), key);
    },
    get$length: function(receiver) {
      return J.get$length$asx(this.get$keys(receiver));
    },
    get$isEmpty: function(receiver) {
      return J.get$isEmpty$asx(this.get$keys(receiver));
    },
    get$isNotEmpty: function(receiver) {
      return J.get$isNotEmpty$asx(this.get$keys(receiver));
    },
    get$values: function(receiver) {
      var t1 = H.instanceType(receiver);
      return new P._MapBaseValueIterable(receiver, t1._eval$1("@<MapMixin.K>")._bind$1(t1._eval$1("MapMixin.V"))._eval$1("_MapBaseValueIterable<1,2>"));
    },
    toString$0: function(receiver) {
      return P.MapBase_mapToString(receiver);
    },
    $isMap: 1
  };
  P.MapMixin_entries_closure.prototype = {
    call$1: function(key) {
      var t1 = this.$this,
        t2 = H.instanceType(t1);
      return new P.MapEntry(key, J.$index$asx(t1, key), t2._eval$1("@<MapMixin.K>")._bind$1(t2._eval$1("MapMixin.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature: function() {
      return H.instanceType(this.$this)._eval$1("MapEntry<MapMixin.K,MapMixin.V>(MapMixin.K)");
    }
  };
  P._MapBaseValueIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._collection$_map);
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this._collection$_map);
    },
    get$isNotEmpty: function(_) {
      return J.get$isNotEmpty$asx(this._collection$_map);
    },
    get$iterator: function(_) {
      var t1 = this._collection$_map;
      return new P._MapBaseValueIterator(J.get$iterator$ax(J.get$keys$x(t1)), t1);
    }
  };
  P._MapBaseValueIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        t1 = _this._collection$_keys;
      if (t1.moveNext$0()) {
        _this._collection$_current = J.$index$asx(_this._collection$_map, t1.get$current(t1));
        return true;
      }
      _this._collection$_current = null;
      return false;
    },
    get$current: function(_) {
      return this._collection$_current;
    }
  };
  P._UnmodifiableMapMixin.prototype = {
    $indexSet: function(_, key, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable map"));
    },
    remove$1: function(_, key) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable map"));
    }
  };
  P.MapView.prototype = {
    cast$2$0: function(_, RK, RV) {
      var t1 = this._collection$_map;
      return t1.cast$2$0(t1, RK, RV);
    },
    $index: function(_, key) {
      return this._collection$_map.$index(0, key);
    },
    $indexSet: function(_, key, value) {
      this._collection$_map.$indexSet(0, key, value);
    },
    containsKey$1: function(_, key) {
      return this._collection$_map.containsKey$1(0, key);
    },
    forEach$1: function(_, action) {
      this._collection$_map.forEach$1(0, action);
    },
    get$isEmpty: function(_) {
      var t1 = this._collection$_map;
      return t1.get$isEmpty(t1);
    },
    get$length: function(_) {
      var t1 = this._collection$_map;
      return t1.get$length(t1);
    },
    get$keys: function(_) {
      var t1 = this._collection$_map;
      return t1.get$keys(t1);
    },
    remove$1: function(_, key) {
      return this._collection$_map.remove$1(0, key);
    },
    toString$0: function(_) {
      var t1 = this._collection$_map;
      return t1.toString$0(t1);
    },
    get$values: function(_) {
      var t1 = this._collection$_map;
      return t1.get$values(t1);
    },
    $isMap: 1
  };
  P.UnmodifiableMapView.prototype = {
    cast$2$0: function(_, RK, RV) {
      var t1 = this._collection$_map;
      return new P.UnmodifiableMapView(t1.cast$2$0(t1, RK, RV), RK._eval$1("@<0>")._bind$1(RV)._eval$1("UnmodifiableMapView<1,2>"));
    }
  };
  P.ListQueue.prototype = {
    get$iterator: function(_) {
      var _this = this;
      return new P._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head);
    },
    forEach$1: function(_, f) {
      var i, _this = this,
        modificationCount = _this._modificationCount;
      for (i = _this._head; i !== _this._tail; i = (i + 1 & _this._table.length - 1) >>> 0) {
        f.call$1(_this._table[i]);
        if (modificationCount !== _this._modificationCount)
          H.throwExpression(P.ConcurrentModificationError$(_this));
      }
    },
    get$isEmpty: function(_) {
      return this._head === this._tail;
    },
    get$length: function(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    get$first: function(_) {
      var t1 = this._head;
      if (t1 === this._tail)
        throw H.wrapException(H.IterableElementError_noElement());
      return this._table[t1];
    },
    get$last: function(_) {
      var t1 = this._head,
        t2 = this._tail;
      if (t1 === t2)
        throw H.wrapException(H.IterableElementError_noElement());
      t1 = this._table;
      return t1[(t2 - 1 & t1.length - 1) >>> 0];
    },
    elementAt$1: function(_, index) {
      var t1;
      P.RangeError_checkValidIndex(index, this, null, null);
      t1 = this._table;
      return t1[(this._head + index & t1.length - 1) >>> 0];
    },
    toList$1$growable: function(_, growable) {
      var _this = this,
        list = H.setRuntimeTypeInfo([], _this.$ti._eval$1("JSArray<1>"));
      C.JSArray_methods.set$length(list, _this.get$length(_this));
      _this._writeToList$1(list);
      return list;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    addAll$1: function(_, elements) {
      var addCount, $length, t2, t3, t4, newTable, endSpace, preSpace, _this = this,
        t1 = _this.$ti;
      if (t1._eval$1("List<1>")._is(elements)) {
        addCount = elements.length;
        $length = _this.get$length(_this);
        t2 = $length + addCount;
        t3 = _this._table;
        t4 = t3.length;
        if (t2 >= t4) {
          t3 = new Array(P.ListQueue__nextPowerOf2(t2 + (t2 >>> 1)));
          t3.fixed$length = Array;
          newTable = H.setRuntimeTypeInfo(t3, t1._eval$1("JSArray<1>"));
          _this._tail = _this._writeToList$1(newTable);
          _this._table = newTable;
          _this._head = 0;
          C.JSArray_methods.setRange$4(newTable, $length, t2, elements, 0);
          _this._tail += addCount;
        } else {
          t1 = _this._tail;
          endSpace = t4 - t1;
          if (addCount < endSpace) {
            C.JSArray_methods.setRange$4(t3, t1, t1 + addCount, elements, 0);
            _this._tail += addCount;
          } else {
            preSpace = addCount - endSpace;
            C.JSArray_methods.setRange$4(t3, t1, t1 + endSpace, elements, 0);
            C.JSArray_methods.setRange$4(_this._table, 0, preSpace, elements, endSpace);
            _this._tail = preSpace;
          }
        }
        ++_this._modificationCount;
      } else
        for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
          _this._add$1(0, t1.get$current(t1));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    addFirst$1: function(value) {
      var _this = this,
        t1 = _this._head,
        t2 = _this._table;
      t1 = _this._head = (t1 - 1 & t2.length - 1) >>> 0;
      t2[t1] = value;
      if (t1 === _this._tail)
        _this._grow$0();
      ++_this._modificationCount;
    },
    removeFirst$0: function() {
      var t2, result, _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw H.wrapException(H.IterableElementError_noElement());
      ++_this._modificationCount;
      t2 = _this._table;
      result = t2[t1];
      t2[t1] = null;
      _this._head = (t1 + 1 & t2.length - 1) >>> 0;
      return result;
    },
    removeLast$0: function(_) {
      var result, _this = this,
        t1 = _this._head,
        t2 = _this._tail;
      if (t1 === t2)
        throw H.wrapException(H.IterableElementError_noElement());
      ++_this._modificationCount;
      t1 = _this._table;
      t2 = _this._tail = (t2 - 1 & t1.length - 1) >>> 0;
      result = t1[t2];
      t1[t2] = null;
      return result;
    },
    _add$1: function(_, element) {
      var _this = this,
        t1 = _this._table,
        t2 = _this._tail;
      t1[t2] = element;
      t1 = (t2 + 1 & t1.length - 1) >>> 0;
      _this._tail = t1;
      if (_this._head === t1)
        _this._grow$0();
      ++_this._modificationCount;
    },
    _grow$0: function() {
      var newTable, t2, split, _this = this,
        t1 = new Array(_this._table.length * 2);
      t1.fixed$length = Array;
      newTable = H.setRuntimeTypeInfo(t1, _this.$ti._eval$1("JSArray<1>"));
      t1 = _this._table;
      t2 = _this._head;
      split = t1.length - t2;
      C.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
      C.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
      _this._head = 0;
      _this._tail = _this._table.length;
      _this._table = newTable;
    },
    _writeToList$1: function(target) {
      var $length, firstPartSize, _this = this,
        t1 = _this._head,
        t2 = _this._tail,
        t3 = _this._table;
      if (t1 <= t2) {
        $length = t2 - t1;
        C.JSArray_methods.setRange$4(target, 0, $length, t3, t1);
        return $length;
      } else {
        firstPartSize = t3.length - t1;
        C.JSArray_methods.setRange$4(target, 0, firstPartSize, t3, t1);
        C.JSArray_methods.setRange$4(target, firstPartSize, firstPartSize + _this._tail, _this._table, 0);
        return _this._tail + firstPartSize;
      }
    }
  };
  P._ListQueueIterator.prototype = {
    get$current: function(_) {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var t2, _this = this,
        t1 = _this._queue;
      if (_this._modificationCount !== t1._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(t1));
      t2 = _this._collection$_position;
      if (t2 === _this._end) {
        _this._collection$_current = null;
        return false;
      }
      t1 = t1._table;
      _this._collection$_current = t1[t2];
      _this._collection$_position = (t2 + 1 & t1.length - 1) >>> 0;
      return true;
    }
  };
  P.SetMixin.prototype = {
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$length(this) !== 0;
    },
    intersection$1: function(_, other) {
      var t1, element,
        result = this.toSet$0(0);
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (!other.contains$1(0, element))
          result.remove$1(0, element);
      }
      return result;
    },
    toList$1$growable: function(_, growable) {
      var result, t2, i, i0, _this = this,
        t1 = H._instanceType(_this)._eval$1("JSArray<SetMixin.E>");
      if (growable) {
        result = H.setRuntimeTypeInfo([], t1);
        C.JSArray_methods.set$length(result, _this.get$length(_this));
      } else {
        t2 = new Array(_this.get$length(_this));
        t2.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t2, t1);
      }
      for (t1 = _this.get$iterator(_this), i = 0; t1.moveNext$0(); i = i0) {
        i0 = i + 1;
        result[i] = t1.get$current(t1);
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    map$1$1: function(_, f, $T) {
      return new H.EfficientLengthMappedIterable(this, f, H._instanceType(this)._eval$1("@<SetMixin.E>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    forEach$1: function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current(t1));
    },
    skip$1: function(_, n) {
      return H.SkipIterable_SkipIterable(this, n, H._instanceType(this)._eval$1("SetMixin.E"));
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      P.ArgumentError_checkNotNull(index, _s5_);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));
    }
  };
  P._SetBase.prototype = {
    difference$1: function(other) {
      var t1, element,
        result = this._newSet$0();
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (!other.contains$1(0, element))
          result.add$1(0, element);
      }
      return result;
    },
    intersection$1: function(_, other) {
      var t1, element,
        result = this._newSet$0();
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (other.contains$1(0, element))
          result.add$1(0, element);
      }
      return result;
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$length(this) !== 0;
    },
    addAll$1: function(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        this.add$1(0, t1.get$current(t1));
    },
    removeAll$1: function(elements) {
      var t1, _i;
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, H.throwConcurrentModificationError)(elements), ++_i)
        this.remove$1(0, elements[_i]);
    },
    toList$1$growable: function(_, growable) {
      var t1, i, i0, _this = this,
        result = H.setRuntimeTypeInfo([], H._instanceType(_this)._eval$1("JSArray<1>"));
      C.JSArray_methods.set$length(result, _this.get$length(_this));
      for (t1 = _this.get$iterator(_this), i = 0; t1.moveNext$0(); i = i0) {
        i0 = i + 1;
        result[i] = t1.get$current(t1);
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    map$1$1: function(_, f, $T) {
      return new H.EfficientLengthMappedIterable(this, f, H._instanceType(this)._eval$1("@<1>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    forEach$1: function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current(t1));
    },
    skip$1: function(_, n) {
      return H.SkipIterable_SkipIterable(this, n, H._instanceType(this)._precomputed1);
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      P.ArgumentError_checkNotNull(index, _s5_);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1
  };
  P._UnmodifiableSet.prototype = {
    _newSet$0: function() {
      return P.LinkedHashSet_LinkedHashSet(this.$ti._precomputed1);
    },
    contains$1: function(_, element) {
      return J.containsKey$1$x(this._collection$_map, element);
    },
    get$iterator: function(_) {
      return J.get$iterator$ax(J.get$keys$x(this._collection$_map));
    },
    get$length: function(_) {
      return J.get$length$asx(this._collection$_map);
    },
    add$1: function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot change unmodifiable set"));
    },
    remove$1: function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot change unmodifiable set"));
    }
  };
  P._SplayTreeNode.prototype = {};
  P._SplayTreeMapNode.prototype = {};
  P._SplayTree.prototype = {
    _splayMin$1: function(node) {
      var current, current0;
      for (current = node; current0 = current.left, current0 != null; current = current0) {
        current.left = current0.right;
        current0.right = current;
      }
      return current;
    },
    _splayMax$1: function(node) {
      var current, current0;
      for (current = node; current0 = current.right, current0 != null; current = current0) {
        current.right = current0.left;
        current0.left = current;
      }
      return current;
    },
    _splay$1: function(key) {
      var left, right, current, comp, t1, tmp, current0, _this = this;
      if (_this.get$_root() == null)
        return -1;
      left = _this.get$_dummy();
      right = _this.get$_dummy();
      current = _this.get$_root();
      for (comp = null; true;) {
        comp = _this._compare$2(current.key, key);
        if (comp > 0) {
          t1 = current.left;
          if (t1 == null)
            break;
          comp = _this._compare$2(t1.key, key);
          if (comp > 0) {
            tmp = current.left;
            current.left = tmp.right;
            tmp.right = current;
            if (tmp.left == null) {
              current = tmp;
              break;
            }
            current = tmp;
          }
          right.left = current;
          current0 = current.left;
          right = current;
          current = current0;
        } else {
          if (comp < 0) {
            t1 = current.right;
            if (t1 == null)
              break;
            comp = _this._compare$2(t1.key, key);
            if (comp < 0) {
              tmp = current.right;
              current.right = tmp.left;
              tmp.left = current;
              if (tmp.right == null) {
                current = tmp;
                break;
              }
              current = tmp;
            }
            left.right = current;
            current0 = current.right;
          } else
            break;
          left = current;
          current = current0;
        }
      }
      left.right = current.left;
      right.left = current.right;
      current.left = _this.get$_dummy().right;
      current.right = _this.get$_dummy().left;
      _this.set$_root(current);
      _this.get$_dummy().right = null;
      _this.get$_dummy().left = null;
      ++_this._splayCount;
      return comp;
    },
    _remove$1: function(_, key) {
      var result, right, _this = this;
      if (_this.get$_root() == null)
        return null;
      if (_this._splay$1(key) !== 0)
        return null;
      result = _this.get$_root();
      --_this._count;
      if (_this.get$_root().left == null)
        _this.set$_root(_this.get$_root().right);
      else {
        right = _this.get$_root().right;
        _this.set$_root(_this._splayMax$1(_this.get$_root().left));
        _this.get$_root().right = right;
      }
      ++_this._modificationCount;
      return result;
    },
    _addNewRoot$2: function(node, comp) {
      var _this = this;
      ++_this._count;
      ++_this._modificationCount;
      if (_this.get$_root() == null) {
        _this.set$_root(node);
        return;
      }
      if (comp < 0) {
        node.left = _this.get$_root();
        node.right = _this.get$_root().right;
        _this.get$_root().right = null;
      } else {
        node.right = _this.get$_root();
        node.left = _this.get$_root().left;
        _this.get$_root().left = null;
      }
      _this.set$_root(node);
    },
    get$_collection$_first: function() {
      var _this = this;
      if (_this.get$_root() == null)
        return null;
      _this.set$_root(_this._splayMin$1(_this.get$_root()));
      return _this.get$_root();
    },
    get$_collection$_last: function() {
      var _this = this;
      if (_this.get$_root() == null)
        return null;
      _this.set$_root(_this._splayMax$1(_this.get$_root()));
      return _this.get$_root();
    }
  };
  P.SplayTreeMap.prototype = {
    _compare$2: function(key1, key2) {
      return this._comparator.call$2(key1, key2);
    },
    $index: function(_, key) {
      var _this = this;
      if (!_this._validKey.call$1(key))
        return null;
      if (_this._root != null)
        if (_this._splay$1(key) === 0)
          return _this._root.value;
      return null;
    },
    remove$1: function(_, key) {
      var mapRoot;
      if (!this._validKey.call$1(key))
        return null;
      mapRoot = this._remove$1(0, key);
      if (mapRoot != null)
        return mapRoot.value;
      return null;
    },
    $indexSet: function(_, key, value) {
      var comp, t1, _this = this;
      if (key == null)
        throw H.wrapException(P.ArgumentError$(key));
      comp = _this._splay$1(key);
      if (comp === 0) {
        _this._root.value = value;
        return;
      }
      t1 = _this.$ti;
      _this._addNewRoot$2(new P._SplayTreeMapNode(value, key, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("_SplayTreeMapNode<1,2>")), comp);
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      var comp, modificationCount, splayCount, value, t1, _this = this;
      if (key == null)
        throw H.wrapException(P.ArgumentError$(key));
      comp = _this._splay$1(key);
      if (comp === 0)
        return _this._root.value;
      modificationCount = _this._modificationCount;
      splayCount = _this._splayCount;
      value = ifAbsent.call$0();
      if (modificationCount !== _this._modificationCount)
        throw H.wrapException(P.ConcurrentModificationError$(_this));
      if (splayCount !== _this._splayCount)
        comp = _this._splay$1(key);
      t1 = _this.$ti;
      _this._addNewRoot$2(new P._SplayTreeMapNode(value, key, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("_SplayTreeMapNode<1,2>")), comp);
      return value;
    },
    get$isEmpty: function(_) {
      return this._root == null;
    },
    get$isNotEmpty: function(_) {
      return this._root != null;
    },
    forEach$1: function(_, f) {
      var node, _this = this,
        t1 = _this.$ti,
        nodes = new P._SplayTreeNodeIterator(_this, H.setRuntimeTypeInfo([], t1._eval$1("JSArray<_SplayTreeNode<1>>")), _this._modificationCount, _this._splayCount, t1._eval$1("_SplayTreeNodeIterator<1>"));
      nodes._findLeftMostDescendent$1(_this._root);
      for (; nodes.moveNext$0();) {
        node = nodes.get$current(nodes);
        f.call$2(node.key, node.value);
      }
    },
    get$length: function(_) {
      return this._count;
    },
    containsKey$1: function(_, key) {
      return this._validKey.call$1(key) && this._splay$1(key) === 0;
    },
    get$keys: function(_) {
      return new P._SplayTreeKeyIterable(this, this.$ti._eval$1("_SplayTreeKeyIterable<1>"));
    },
    get$values: function(_) {
      var t1 = this.$ti;
      return new P._SplayTreeValueIterable(this, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("_SplayTreeValueIterable<1,2>"));
    },
    firstKey$0: function() {
      if (this._root == null)
        return null;
      return this.get$_collection$_first().key;
    },
    lastKey$0: function() {
      if (this._root == null)
        return null;
      return this.get$_collection$_last().key;
    },
    $isMap: 1,
    get$_root: function() {
      return this._root;
    },
    get$_dummy: function() {
      return this._dummy;
    },
    set$_root: function(val) {
      return this._root = val;
    }
  };
  P.SplayTreeMap_closure.prototype = {
    call$1: function(v) {
      return this.K._is(v);
    },
    $signature: 31
  };
  P._SplayTreeIterator.prototype = {
    get$current: function(_) {
      var t1 = this._currentNode;
      if (t1 == null)
        return null;
      return this._getValue$1(t1);
    },
    _findLeftMostDescendent$1: function(node) {
      var t1;
      for (t1 = this._workList; node != null;) {
        t1.push(node);
        node = node.left;
      }
    },
    moveNext$0: function() {
      var t2, t3, _this = this,
        t1 = _this._tree;
      if (_this._modificationCount !== t1._modificationCount)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t2 = _this._workList;
      if (t2.length === 0) {
        _this._currentNode = null;
        return false;
      }
      if (t1._splayCount !== _this._splayCount && _this._currentNode != null) {
        t3 = _this._currentNode;
        C.JSArray_methods.set$length(t2, 0);
        if (t3 == null)
          _this._findLeftMostDescendent$1(t1.get$_root());
        else {
          t1._splay$1(t3.key);
          _this._findLeftMostDescendent$1(t1.get$_root().right);
        }
      }
      t1 = t2.pop();
      _this._currentNode = t1;
      _this._findLeftMostDescendent$1(t1.right);
      return true;
    }
  };
  P._SplayTreeKeyIterable.prototype = {
    get$length: function(_) {
      return this._tree._count;
    },
    get$isEmpty: function(_) {
      return this._tree._count === 0;
    },
    get$iterator: function(_) {
      var t1 = this._tree,
        t2 = this.$ti;
      t2 = new P._SplayTreeKeyIterator(t1, H.setRuntimeTypeInfo([], t2._eval$1("JSArray<_SplayTreeNode<1>>")), t1._modificationCount, t1._splayCount, t2._eval$1("_SplayTreeKeyIterator<1>"));
      t2._findLeftMostDescendent$1(t1._root);
      return t2;
    }
  };
  P._SplayTreeValueIterable.prototype = {
    get$length: function(_) {
      return this._collection$_map._count;
    },
    get$isEmpty: function(_) {
      return this._collection$_map._count === 0;
    },
    get$iterator: function(_) {
      var t1 = this._collection$_map,
        t2 = this.$ti;
      t2 = new P._SplayTreeValueIterator(t1, H.setRuntimeTypeInfo([], t2._eval$1("JSArray<_SplayTreeNode<1>>")), t1._modificationCount, t1._splayCount, t2._eval$1("@<1>")._bind$1(t2._rest[1])._eval$1("_SplayTreeValueIterator<1,2>"));
      t2._findLeftMostDescendent$1(t1._root);
      return t2;
    }
  };
  P._SplayTreeKeyIterator.prototype = {
    _getValue$1: function(node) {
      return node.key;
    }
  };
  P._SplayTreeValueIterator.prototype = {
    _getValue$1: function(node) {
      return node.value;
    }
  };
  P._SplayTreeNodeIterator.prototype = {
    _getValue$1: function(node) {
      return node;
    }
  };
  P.SplayTreeSet.prototype = {
    _compare$2: function(e1, e2) {
      return this._comparator.call$2(e1, e2);
    },
    get$iterator: function(_) {
      var _this = this,
        t1 = _this.$ti;
      t1 = new P._SplayTreeKeyIterator(_this, H.setRuntimeTypeInfo([], t1._eval$1("JSArray<_SplayTreeNode<1>>")), _this._modificationCount, _this._splayCount, t1._eval$1("_SplayTreeKeyIterator<1>"));
      t1._findLeftMostDescendent$1(_this._root);
      return t1;
    },
    get$length: function(_) {
      return this._count;
    },
    get$isEmpty: function(_) {
      return this._root == null;
    },
    get$isNotEmpty: function(_) {
      return this._root != null;
    },
    contains$1: function(_, element) {
      return this._validKey.call$1(element) && this._splay$1(element) === 0;
    },
    add$1: function(_, element) {
      var compare = this._splay$1(element);
      if (compare === 0)
        return false;
      this._addNewRoot$2(new P._SplayTreeNode(element, this.$ti._eval$1("_SplayTreeNode<1>")), compare);
      return true;
    },
    remove$1: function(_, object) {
      if (!this._validKey.call$1(object))
        return false;
      return this._remove$1(0, object) != null;
    },
    addAll$1: function(_, elements) {
      var t1, t2, element, compare;
      for (t1 = J.get$iterator$ax(elements), t2 = this.$ti._eval$1("_SplayTreeNode<1>"); t1.moveNext$0();) {
        element = t1.get$current(t1);
        compare = this._splay$1(element);
        if (compare !== 0)
          this._addNewRoot$2(new P._SplayTreeNode(element, t2), compare);
      }
    },
    intersection$1: function(_, other) {
      var element, _this = this,
        t1 = _this.$ti,
        result = P.SplayTreeSet$(_this._comparator, _this._validKey, t1._precomputed1);
      for (t1 = new P._SplayTreeKeyIterator(_this, H.setRuntimeTypeInfo([], t1._eval$1("JSArray<_SplayTreeNode<1>>")), _this._modificationCount, _this._splayCount, t1._eval$1("_SplayTreeKeyIterator<1>")), t1._findLeftMostDescendent$1(_this._root); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (other.contains$1(0, element))
          result.add$1(0, element);
      }
      return result;
    },
    _copyNode$1: function(node) {
      var t1;
      if (node == null)
        return null;
      t1 = new P._SplayTreeNode(node.key, this.$ti._eval$1("_SplayTreeNode<1>"));
      t1.left = this._copyNode$1(node.left);
      t1.right = this._copyNode$1(node.right);
      return t1;
    },
    toSet$0: function(_) {
      var _this = this,
        set = P.SplayTreeSet$(_this._comparator, _this._validKey, _this.$ti._precomputed1);
      set._count = _this._count;
      set._root = _this._copyNode$1(_this._root);
      return set;
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    get$_root: function() {
      return this._root;
    },
    get$_dummy: function() {
      return this._dummy;
    },
    set$_root: function(val) {
      return this._root = val;
    }
  };
  P.SplayTreeSet_closure.prototype = {
    call$1: function(v) {
      return this.E._is(v);
    },
    $signature: 31
  };
  P._ListBase_Object_ListMixin.prototype = {};
  P._SplayTreeMap__SplayTree_MapMixin.prototype = {};
  P._SplayTreeSet__SplayTree_IterableMixin.prototype = {};
  P._SplayTreeSet__SplayTree_IterableMixin_SetMixin.prototype = {};
  P._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  P._JsonMap.prototype = {
    $index: function(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._convert$_data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length: function(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._convert$_data;
        t1 = t1.get$length(t1);
      } else
        t1 = this._convert$_computeKeys$0().length;
      return t1;
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$length(this) > 0;
    },
    get$keys: function(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._convert$_data;
        return t1.get$keys(t1);
      }
      return new P._JsonMapKeyIterable(this);
    },
    get$values: function(_) {
      var t1, _this = this;
      if (_this._processed == null) {
        t1 = _this._convert$_data;
        return t1.get$values(t1);
      }
      return H.MappedIterable_MappedIterable(_this._convert$_computeKeys$0(), new P._JsonMap_values_closure(_this), type$.String, type$.dynamic);
    },
    $indexSet: function(_, key, value) {
      var processed, original, _this = this;
      if (_this._processed == null)
        _this._convert$_data.$indexSet(0, key, value);
      else if (_this.containsKey$1(0, key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1: function(_, key) {
      if (this._processed == null)
        return this._convert$_data.containsKey$1(0, key);
      if (typeof key != "string")
        return false;
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    remove$1: function(_, key) {
      if (this._processed != null && !this.containsKey$1(0, key))
        return null;
      return this._upgrade$0().remove$1(0, key);
    },
    forEach$1: function(_, f) {
      var keys, i, key, value, _this = this;
      if (_this._processed == null)
        return _this._convert$_data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = P._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._convert$_data)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0: function() {
      var keys = this._convert$_data;
      if (keys == null)
        keys = this._convert$_data = H.setRuntimeTypeInfo(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0: function() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._convert$_data;
      result = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        keys.push(null);
      else
        C.JSArray_methods.set$length(keys, 0);
      _this._original = _this._processed = null;
      return _this._convert$_data = result;
    },
    _process$1: function(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = P._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  P._JsonMap_values_closure.prototype = {
    call$1: function(each) {
      return this.$this.$index(0, each);
    },
    $signature: 8
  };
  P._JsonMapKeyIterable.prototype = {
    get$length: function(_) {
      var t1 = this._convert$_parent;
      return t1.get$length(t1);
    },
    elementAt$1: function(_, index) {
      var t1 = this._convert$_parent;
      return t1._processed == null ? t1.get$keys(t1).elementAt$1(0, index) : t1._convert$_computeKeys$0()[index];
    },
    get$iterator: function(_) {
      var t1 = this._convert$_parent;
      if (t1._processed == null) {
        t1 = t1.get$keys(t1);
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length);
      }
      return t1;
    },
    contains$1: function(_, key) {
      return this._convert$_parent.containsKey$1(0, key);
    }
  };
  P.Base64Codec.prototype = {
    normalize$3: function(_, source, start, end) {
      var inverseAlphabet, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, digit2, char0, value, t1, t2, endLength, $length,
        _s31_ = "Invalid base64 encoding length ";
      end = P.RangeError_checkValidRange(start, end, source.length);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        char = C.JSString_methods._codeUnitAt$1(source, i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            digit1 = H.hexDigitValue(C.JSString_methods._codeUnitAt$1(source, i0));
            digit2 = H.hexDigitValue(C.JSString_methods._codeUnitAt$1(source, i0 + 1));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          value = inverseAlphabet[char0];
          if (value >= 0) {
            char0 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t1 = buffer == null ? null : buffer._contents.length;
                if (t1 == null)
                  t1 = 0;
                firstPadding = t1 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null)
              buffer = new P.StringBuffer("");
            buffer._contents += C.JSString_methods.substring$2(source, sliceStart, i);
            buffer._contents += H.Primitives_stringFromCharCode(char);
            sliceStart = i0;
            continue;
          }
        }
        throw H.wrapException(P.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = buffer._contents += C.JSString_methods.substring$2(source, sliceStart, end);
        t2 = t1.length;
        if (firstPadding >= 0)
          P.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = C.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw H.wrapException(P.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return C.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        P.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = C.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw H.wrapException(P.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = C.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  P.Base64Encoder.prototype = {};
  P.Codec.prototype = {};
  P.Converter.prototype = {};
  P.Encoding.prototype = {};
  P.JsonUnsupportedObjectError.prototype = {
    toString$0: function(_) {
      var safeString = P.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  P.JsonCyclicError.prototype = {
    toString$0: function(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  P.JsonCodec.prototype = {
    decode$1: function(_, source) {
      var t1 = P._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    encode$2$toEncodable: function(value, toEncodable) {
      if (toEncodable == null)
        toEncodable = null;
      if (toEncodable == null)
        return P._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
      return P._JsonStringStringifier_stringify(value, toEncodable, null);
    },
    encode$1: function(value) {
      return this.encode$2$toEncodable(value, null);
    },
    get$encoder: function() {
      return C.JsonEncoder_null;
    },
    get$decoder: function() {
      return C.JsonDecoder_null;
    }
  };
  P.JsonEncoder.prototype = {};
  P.JsonDecoder.prototype = {};
  P._JsonStringifier.prototype = {
    writeStringContent$1: function(s) {
      var t1, t2, offset, i, charCode, t3,
        $length = s.length;
      for (t1 = J.getInterceptor$s(s), t2 = this._sink, offset = 0, i = 0; i < $length; ++i) {
        charCode = t1._codeUnitAt$1(s, i);
        if (charCode > 92)
          continue;
        if (charCode < 32) {
          if (i > offset)
            t2._contents += C.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t2._contents += H.Primitives_stringFromCharCode(92);
          switch (charCode) {
            case 8:
              t2._contents += H.Primitives_stringFromCharCode(98);
              break;
            case 9:
              t2._contents += H.Primitives_stringFromCharCode(116);
              break;
            case 10:
              t2._contents += H.Primitives_stringFromCharCode(110);
              break;
            case 12:
              t2._contents += H.Primitives_stringFromCharCode(102);
              break;
            case 13:
              t2._contents += H.Primitives_stringFromCharCode(114);
              break;
            default:
              t2._contents += H.Primitives_stringFromCharCode(117);
              t2._contents += H.Primitives_stringFromCharCode(48);
              t2._contents += H.Primitives_stringFromCharCode(48);
              t3 = charCode >>> 4 & 15;
              t2._contents += H.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
              t3 = charCode & 15;
              t2._contents += H.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            t2._contents += C.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t2._contents += H.Primitives_stringFromCharCode(92);
          t2._contents += H.Primitives_stringFromCharCode(charCode);
        }
      }
      if (offset === 0)
        t2._contents += H.S(s);
      else if (offset < $length)
        t2._contents += t1.substring$2(s, offset, $length);
    },
    _checkCycle$1: function(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw H.wrapException(new P.JsonCyclicError(object, null));
      }
      t1.push(object);
    },
    writeObject$1: function(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = P.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw H.wrapException(t1);
        }
        _this._seen.pop();
      } catch (exception) {
        e = H.unwrapException(exception);
        t1 = P.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw H.wrapException(t1);
      }
    },
    writeJsonValue$1: function(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this._sink._contents += C.JSNumber_methods.toString$0(object);
        return true;
      } else if (object === true) {
        _this._sink._contents += "true";
        return true;
      } else if (object === false) {
        _this._sink._contents += "false";
        return true;
      } else if (object == null) {
        _this._sink._contents += "null";
        return true;
      } else if (typeof object == "string") {
        t1 = _this._sink;
        t1._contents += '"';
        _this.writeStringContent$1(object);
        t1._contents += '"';
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        _this._seen.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        _this._seen.pop();
        return success;
      } else
        return false;
    },
    writeList$1: function(list) {
      var t2, i,
        t1 = this._sink;
      t1._contents += "[";
      t2 = J.getInterceptor$asx(list);
      if (t2.get$isNotEmpty(list)) {
        this.writeObject$1(t2.$index(list, 0));
        for (i = 1; i < t2.get$length(list); ++i) {
          t1._contents += ",";
          this.writeObject$1(t2.$index(list, i));
        }
      }
      t1._contents += "]";
    },
    writeMap$1: function(map) {
      var t2, keyValueList, i, separator, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this._sink._contents += "{}";
        return true;
      }
      t2 = t1.get$length(map) * 2;
      keyValueList = new Array(t2);
      keyValueList.fixed$length = Array;
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new P._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      t1 = _this._sink;
      t1._contents += "{";
      for (separator = '"'; i < t2; i += 2, separator = ',"') {
        t1._contents += separator;
        _this.writeStringContent$1(keyValueList[i]);
        t1._contents += '":';
        _this.writeObject$1(keyValueList[i + 1]);
      }
      t1._contents += "}";
      return true;
    }
  };
  P._JsonStringifier_writeMap_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2, t3, i;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      t3 = t2.i;
      i = t2.i = t3 + 1;
      t1[t3] = key;
      t2.i = i + 1;
      t1[i] = value;
    },
    $signature: 7
  };
  P._JsonStringStringifier.prototype = {
    get$_partialResult: function() {
      var t1 = this._sink._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P.Utf8Codec.prototype = {
    get$name: function(_) {
      return "utf-8";
    },
    decode$1: function(_, codeUnits) {
      return new P.Utf8Decoder(false).convert$1(codeUnits);
    },
    get$encoder: function() {
      return C.C_Utf8Encoder;
    }
  };
  P.Utf8Encoder.prototype = {
    convert$1: function(string) {
      var t1, encoder,
        end = P.RangeError_checkValidRange(0, null, string.length),
        $length = end - 0;
      if ($length === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array($length * 3);
      encoder = new P._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end)
        encoder._writeSurrogate$2(J.codeUnitAt$1$s(string, end - 1), 0);
      return new Uint8Array(t1.subarray(0, H._checkValidRange(0, encoder._bufferIndex, t1.length)));
    }
  };
  P._Utf8Encoder.prototype = {
    _writeSurrogate$2: function(leadingSurrogate, nextCodeUnit) {
      var rune, _this = this,
        t1 = _this._convert$_buffer,
        t2 = _this._bufferIndex,
        t3 = t2 + 1;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        _this._bufferIndex = t3;
        t1[t2] = 240 | rune >>> 18;
        t2 = _this._bufferIndex = t3 + 1;
        t1[t3] = 128 | rune >>> 12 & 63;
        t3 = _this._bufferIndex = t2 + 1;
        t1[t2] = 128 | rune >>> 6 & 63;
        _this._bufferIndex = t3 + 1;
        t1[t3] = 128 | rune & 63;
        return true;
      } else {
        _this._bufferIndex = t3;
        t1[t2] = 224 | leadingSurrogate >>> 12;
        t2 = _this._bufferIndex = t3 + 1;
        t1[t3] = 128 | leadingSurrogate >>> 6 & 63;
        _this._bufferIndex = t2 + 1;
        t1[t2] = 128 | leadingSurrogate & 63;
        return false;
      }
    },
    _fillBuffer$3: function(str, start, end) {
      var t1, t2, stringIndex, codeUnit, t3, stringIndex0, t4, _this = this;
      if (start !== end && (C.JSString_methods.codeUnitAt$1(str, end - 1) & 64512) === 55296)
        --end;
      for (t1 = _this._convert$_buffer, t2 = t1.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        codeUnit = C.JSString_methods._codeUnitAt$1(str, stringIndex);
        if (codeUnit <= 127) {
          t3 = _this._bufferIndex;
          if (t3 >= t2)
            break;
          _this._bufferIndex = t3 + 1;
          t1[t3] = codeUnit;
        } else if ((codeUnit & 64512) === 55296) {
          if (_this._bufferIndex + 3 >= t2)
            break;
          stringIndex0 = stringIndex + 1;
          if (_this._writeSurrogate$2(codeUnit, C.JSString_methods._codeUnitAt$1(str, stringIndex0)))
            stringIndex = stringIndex0;
        } else if (codeUnit <= 2047) {
          t3 = _this._bufferIndex;
          t4 = t3 + 1;
          if (t4 >= t2)
            break;
          _this._bufferIndex = t4;
          t1[t3] = 192 | codeUnit >>> 6;
          _this._bufferIndex = t4 + 1;
          t1[t4] = 128 | codeUnit & 63;
        } else {
          t3 = _this._bufferIndex;
          if (t3 + 2 >= t2)
            break;
          t4 = _this._bufferIndex = t3 + 1;
          t1[t3] = 224 | codeUnit >>> 12;
          t3 = _this._bufferIndex = t4 + 1;
          t1[t4] = 128 | codeUnit >>> 6 & 63;
          _this._bufferIndex = t3 + 1;
          t1[t3] = 128 | codeUnit & 63;
        }
      }
      return stringIndex;
    }
  };
  P.Utf8Decoder.prototype = {
    convert$1: function(codeUnits) {
      var end, oneBytes, firstPart, buffer, start, isFirstCharacter, decoder, t1,
        result = P.Utf8Decoder__convertIntercepted(false, codeUnits, 0, null);
      if (result != null)
        return result;
      end = P.RangeError_checkValidRange(0, null, J.get$length$asx(codeUnits));
      oneBytes = P._scanOneByteCharacters(codeUnits, 0, end);
      if (oneBytes > 0) {
        firstPart = P.String_String$fromCharCodes(codeUnits, 0, oneBytes);
        if (oneBytes === end)
          return firstPart;
        buffer = new P.StringBuffer(firstPart);
        start = oneBytes;
        isFirstCharacter = false;
      } else {
        start = 0;
        buffer = null;
        isFirstCharacter = true;
      }
      if (buffer == null)
        buffer = new P.StringBuffer("");
      decoder = new P._Utf8Decoder(false, buffer);
      decoder._isFirstCharacter = isFirstCharacter;
      decoder.convert$3(codeUnits, start, end);
      if (decoder._expectedUnits > 0) {
        H.throwExpression(P.FormatException$("Unfinished UTF-8 octet sequence", codeUnits, end));
        buffer._contents += H.Primitives_stringFromCharCode(65533);
        decoder._extraUnits = decoder._expectedUnits = decoder._convert$_value = 0;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P._Utf8Decoder.prototype = {
    convert$3: function(codeUnits, startIndex, endIndex) {
      var t1, t2, i, unit, t3, oneBytes, i0, i1, t4, _this = this,
        _s21_ = "Bad UTF-8 encoding 0x",
        value = _this._convert$_value,
        expectedUnits = _this._expectedUnits,
        extraUnits = _this._extraUnits;
      _this._extraUnits = _this._expectedUnits = _this._convert$_value = 0;
      $label0$0:
        for (t1 = J.getInterceptor$asx(codeUnits), t2 = _this._stringSink, i = startIndex; true; i = i1) {
          $label1$1:
            if (expectedUnits > 0) {
              do {
                if (i === endIndex)
                  break $label0$0;
                unit = t1.$index(codeUnits, i);
                if ((unit & 192) !== 128) {
                  t3 = P.FormatException$(_s21_ + C.JSInt_methods.toRadixString$1(unit, 16), codeUnits, i);
                  throw H.wrapException(t3);
                } else {
                  value = (value << 6 | unit & 63) >>> 0;
                  --expectedUnits;
                  ++i;
                }
              } while (expectedUnits > 0);
              if (value <= C.List_127_2047_65535_1114111[extraUnits - 1]) {
                t3 = P.FormatException$("Overlong encoding of 0x" + C.JSInt_methods.toRadixString$1(value, 16), codeUnits, i - extraUnits - 1);
                throw H.wrapException(t3);
              }
              if (value > 1114111) {
                t3 = P.FormatException$("Character outside valid Unicode range: 0x" + C.JSInt_methods.toRadixString$1(value, 16), codeUnits, i - extraUnits - 1);
                throw H.wrapException(t3);
              }
              if (!_this._isFirstCharacter || value !== 65279)
                t2._contents += H.Primitives_stringFromCharCode(value);
              _this._isFirstCharacter = false;
            }
          for (t3 = i < endIndex; t3;) {
            oneBytes = P._scanOneByteCharacters(codeUnits, i, endIndex);
            if (oneBytes > 0) {
              _this._isFirstCharacter = false;
              i0 = i + oneBytes;
              t2._contents += P.String_String$fromCharCodes(codeUnits, i, i0);
              if (i0 === endIndex)
                break;
            } else
              i0 = i;
            i1 = i0 + 1;
            unit = t1.$index(codeUnits, i0);
            if (unit < 0) {
              t4 = P.FormatException$("Negative UTF-8 code unit: -0x" + C.JSInt_methods.toRadixString$1(-unit, 16), codeUnits, i1 - 1);
              throw H.wrapException(t4);
            } else {
              if ((unit & 224) === 192) {
                value = unit & 31;
                expectedUnits = 1;
                extraUnits = 1;
                continue $label0$0;
              }
              if ((unit & 240) === 224) {
                value = unit & 15;
                expectedUnits = 2;
                extraUnits = 2;
                continue $label0$0;
              }
              if ((unit & 248) === 240 && unit < 245) {
                value = unit & 7;
                expectedUnits = 3;
                extraUnits = 3;
                continue $label0$0;
              }
              t4 = P.FormatException$(_s21_ + C.JSInt_methods.toRadixString$1(unit, 16), codeUnits, i1 - 1);
              throw H.wrapException(t4);
            }
          }
          break $label0$0;
        }
      if (expectedUnits > 0) {
        _this._convert$_value = value;
        _this._expectedUnits = expectedUnits;
        _this._extraUnits = extraUnits;
      }
    }
  };
  P.NoSuchMethodError_toString_closure.prototype = {
    call$2: function(key, value) {
      var t3,
        t1 = this.sb,
        t2 = this._box_0;
      t1._contents += t2.comma;
      t3 = t1._contents += H.S(key.__internal$_name);
      t1._contents = t3 + ": ";
      t1._contents += P.Error_safeToString(value);
      t2.comma = ", ";
    },
    $signature: 138
  };
  P.bool.prototype = {};
  P.Comparable.prototype = {};
  P.DateTime.prototype = {
    add$1: function(_, duration) {
      return P.DateTime$_withValue(this._value + C.JSInt_methods._tdivFast$1(duration._duration, 1000), this.isUtc);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.DateTime && this._value === other._value && this.isUtc === other.isUtc;
    },
    compareTo$1: function(_, other) {
      return C.JSInt_methods.compareTo$1(this._value, other._value);
    },
    DateTime$_withValue$2$isUtc: function(_value, isUtc) {
      var t2,
        t1 = this._value;
      if (Math.abs(t1) <= 864e13)
        t2 = false;
      else
        t2 = true;
      if (t2)
        throw H.wrapException(P.ArgumentError$("DateTime is outside valid range: " + t1));
      P.ArgumentError_checkNotNull(this.isUtc, "isUtc");
    },
    get$hashCode: function(_) {
      var t1 = this._value;
      return (t1 ^ C.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toString$0: function(_) {
      var _this = this,
        y = P.DateTime__fourDigits(H.Primitives_getYear(_this)),
        m = P.DateTime__twoDigits(H.Primitives_getMonth(_this)),
        d = P.DateTime__twoDigits(H.Primitives_getDay(_this)),
        h = P.DateTime__twoDigits(H.Primitives_getHours(_this)),
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(_this)),
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(_this)),
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(_this));
      if (_this.isUtc)
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
    },
    $isComparable: 1
  };
  P.double.prototype = {};
  P.Duration.prototype = {
    $add: function(_, other) {
      return new P.Duration(this._duration + other._duration);
    },
    $sub: function(_, other) {
      return new P.Duration(this._duration - other._duration);
    },
    $mul: function(_, factor) {
      return new P.Duration(C.JSNumber_methods.round$0(this._duration * factor));
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Duration && this._duration === other._duration;
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this._duration);
    },
    compareTo$1: function(_, other) {
      return C.JSInt_methods.compareTo$1(this._duration, other._duration);
    },
    toString$0: function(_) {
      var twoDigitMinutes, twoDigitSeconds, sixDigitUs,
        t1 = new P.Duration_toString_twoDigits(),
        t2 = this._duration;
      if (t2 < 0)
        return "-" + new P.Duration(0 - t2).toString$0(0);
      twoDigitMinutes = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 60000000) % 60);
      twoDigitSeconds = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 1000000) % 60);
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(t2 % 1000000);
      return "" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
    },
    $isComparable: 1
  };
  P.Duration_toString_sixDigits.prototype = {
    call$1: function(n) {
      if (n >= 100000)
        return "" + n;
      if (n >= 10000)
        return "0" + n;
      if (n >= 1000)
        return "00" + n;
      if (n >= 100)
        return "000" + n;
      if (n >= 10)
        return "0000" + n;
      return "00000" + n;
    }
  };
  P.Duration_toString_twoDigits.prototype = {
    call$1: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    }
  };
  P.Error.prototype = {
    get$stackTrace: function() {
      return H.getTraceFromException(this.$thrownJsError);
    }
  };
  P.AssertionError.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + P.Error_safeToString(t1);
      return "Assertion failed";
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  P.NullThrownError.prototype = {
    toString$0: function(_) {
      return "Throw of null.";
    }
  };
  P.ArgumentError.prototype = {
    get$_errorName: function() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation: function() {
      return "";
    },
    toString$0: function(_) {
      var message, prefix, explanation, errorValue, _this = this,
        t1 = _this.name,
        nameString = t1 != null ? " (" + t1 + ")" : "";
      t1 = _this.message;
      message = t1 == null ? "" : ": " + H.S(t1);
      prefix = _this.get$_errorName() + nameString + message;
      if (!_this._hasValue)
        return prefix;
      explanation = _this.get$_errorExplanation();
      errorValue = P.Error_safeToString(_this.invalidValue);
      return prefix + explanation + ": " + errorValue;
    },
    get$name: function(receiver) {
      return this.name;
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  P.RangeError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var explanation, t2,
        t1 = this.start;
      if (t1 == null) {
        t1 = this.end;
        explanation = t1 != null ? ": Not less than or equal to " + H.S(t1) : "";
      } else {
        t2 = this.end;
        if (t2 == null)
          explanation = ": Not greater than or equal to " + H.S(t1);
        else if (t2 > t1)
          explanation = ": Not in range " + H.S(t1) + ".." + H.S(t2) + ", inclusive";
        else
          explanation = t2 < t1 ? ": Valid value range is empty" : ": Only valid value is " + H.S(t1);
      }
      return explanation;
    }
  };
  P.IndexError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      if (this.invalidValue < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + H.S(t1);
    },
    get$length: function(receiver) {
      return this.length;
    }
  };
  P.NoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t1, t2, _i, t3, t4, argument, receiverText, actualParameters, _this = this, _box_0 = {},
        sb = new P.StringBuffer("");
      _box_0.comma = "";
      for (t1 = _this._core$_arguments, t2 = t1.length, _i = 0, t3 = "", t4 = ""; _i < t2; ++_i, t4 = ", ") {
        argument = t1[_i];
        sb._contents = t3 + t4;
        t3 = sb._contents += P.Error_safeToString(argument);
        _box_0.comma = ", ";
      }
      _this._namedArguments.forEach$1(0, new P.NoSuchMethodError_toString_closure(_box_0, sb));
      receiverText = P.Error_safeToString(_this._core$_receiver);
      actualParameters = sb.toString$0(0);
      t1 = "NoSuchMethodError: method not found: '" + H.S(_this._memberName.__internal$_name) + "'\nReceiver: " + receiverText + "\nArguments: [" + actualParameters + "]";
      return t1;
    }
  };
  P.UnsupportedError.prototype = {
    toString$0: function(_) {
      return "Unsupported operation: " + this.message;
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  P.UnimplementedError.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      return t1 != null ? "UnimplementedError: " + t1 : "UnimplementedError";
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  P.StateError.prototype = {
    toString$0: function(_) {
      return "Bad state: " + this.message;
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  P.ConcurrentModificationError.prototype = {
    toString$0: function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + P.Error_safeToString(t1) + ".";
    }
  };
  P.OutOfMemoryError.prototype = {
    toString$0: function(_) {
      return "Out of Memory";
    },
    get$stackTrace: function() {
      return null;
    },
    $isError: 1
  };
  P.StackOverflowError.prototype = {
    toString$0: function(_) {
      return "Stack Overflow";
    },
    get$stackTrace: function() {
      return null;
    },
    $isError: 1
  };
  P.CyclicInitializationError.prototype = {
    toString$0: function(_) {
      var t1 = this.variableName;
      return t1 == null ? "Reading static variable during its initialization" : "Reading static variable '" + t1 + "' during its initialization";
    }
  };
  P._Exception.prototype = {
    toString$0: function(_) {
      return "Exception: " + this.message;
    },
    $isException: 1,
    get$message: function(receiver) {
      return this.message;
    }
  };
  P.FormatException.prototype = {
    toString$0: function(_) {
      var source, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix, slice,
        t1 = this.message,
        report = t1 != null && "" !== t1 ? "FormatException: " + H.S(t1) : "FormatException",
        offset = this.offset,
        objectSource = this.source;
      if (typeof objectSource == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > objectSource.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          source = objectSource.length > 78 ? C.JSString_methods.substring$2(objectSource, 0, 75) + "..." : objectSource;
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = C.JSString_methods._codeUnitAt$1(objectSource, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = objectSource.length;
        for (i = offset; i < lineEnd; ++i) {
          char = C.JSString_methods.codeUnitAt$1(objectSource, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        slice = C.JSString_methods.substring$2(objectSource, start, end);
        return report + prefix + slice + postfix + "\n" + C.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + H.S(offset) + ")") : report;
    },
    $isException: 1,
    get$message: function(receiver) {
      return this.message;
    }
  };
  P.Function.prototype = {};
  P.int.prototype = {};
  P.Iterable.prototype = {
    cast$1$0: function(_, $R) {
      return H.CastIterable_CastIterable(this, H._instanceType(this)._eval$1("Iterable.E"), $R);
    },
    map$1$1: function(_, f, $T) {
      return H.MappedIterable_MappedIterable(this, f, H._instanceType(this)._eval$1("Iterable.E"), $T);
    },
    where$1: function(_, test) {
      return new H.WhereIterable(this, test, H._instanceType(this)._eval$1("WhereIterable<Iterable.E>"));
    },
    contains$1: function(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (J.$eq$(t1.get$current(t1), element))
          return true;
      return false;
    },
    forEach$1: function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current(t1));
    },
    reduce$1: function(_, combine) {
      var value,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      value = iterator.get$current(iterator);
      for (; iterator.moveNext$0();)
        value = combine.call$2(value, iterator.get$current(iterator));
      return value;
    },
    fold$1$2: function(_, initialValue, combine) {
      var t1, value;
      for (t1 = this.get$iterator(this), value = initialValue; t1.moveNext$0();)
        value = combine.call$2(value, t1.get$current(t1));
      return value;
    },
    fold$2: function($receiver, initialValue, combine) {
      return this.fold$1$2($receiver, initialValue, combine, type$.dynamic);
    },
    every$1: function(_, test) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (!test.call$1(t1.get$current(t1)))
          return false;
      return true;
    },
    join$1: function(_, separator) {
      var t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      if (separator === "") {
        t1 = "";
        do
          t1 += H.S(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        t1 = H.S(iterator.get$current(iterator));
        for (; iterator.moveNext$0();)
          t1 = t1 + separator + H.S(iterator.get$current(iterator));
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toList$1$growable: function(_, growable) {
      return P.List_List$from(this, growable, H._instanceType(this)._eval$1("Iterable.E"));
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$length: function(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty: function(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty: function(_) {
      return !this.get$isEmpty(this);
    },
    skip$1: function(_, count) {
      return H.SkipIterable_SkipIterable(this, count, H._instanceType(this)._eval$1("Iterable.E"));
    },
    skipWhile$1: function(_, test) {
      return new H.SkipWhileIterable(this, test, H._instanceType(this)._eval$1("SkipWhileIterable<Iterable.E>"));
    },
    get$first: function(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      return it.get$current(it);
    },
    get$single: function(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      result = it.get$current(it);
      if (it.moveNext$0())
        throw H.wrapException(H.IterableElementError_tooMany());
      return result;
    },
    firstWhere$2$orElse: function(_, test, orElse) {
      var t1, element;
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (test.call$1(element))
          return element;
      }
      return orElse.call$0();
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      P.ArgumentError_checkNotNull(index, _s5_);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  P.Iterator.prototype = {};
  P.List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1};
  P.Map.prototype = {};
  P.MapEntry.prototype = {
    toString$0: function(_) {
      return "MapEntry(" + H.S(this.key) + ": " + H.S(this.value) + ")";
    }
  };
  P.Null.prototype = {
    get$hashCode: function(_) {
      return P.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0: function(_) {
      return "null";
    }
  };
  P.num.prototype = {$isComparable: 1};
  P.Object.prototype = {constructor: P.Object, $isObject: 1,
    $eq: function(_, other) {
      return this === other;
    },
    get$hashCode: function(_) {
      return H.Primitives_objectHashCode(this);
    },
    toString$0: function(_) {
      return "Instance of '" + H.S(H.Primitives_objectTypeName(this)) + "'";
    },
    noSuchMethod$1: function(_, invocation) {
      throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    },
    get$runtimeType: function(_) {
      return H.getRuntimeType(this);
    },
    toString: function() {
      return this.toString$0(this);
    }
  };
  P.Match.prototype = {};
  P.Set.prototype = {};
  P.StackTrace.prototype = {};
  P._StringStackTrace.prototype = {
    toString$0: function(_) {
      return "";
    },
    $isStackTrace: 1
  };
  P.Stopwatch.prototype = {
    get$elapsedMicroseconds: function() {
      var ticks,
        t1 = this._stop;
      if (t1 == null)
        t1 = $.Primitives_timerTicks.call$0();
      ticks = t1 - this._core$_start;
      if ($.Stopwatch__frequency === 1000000)
        return ticks;
      return ticks * 1000;
    },
    start$0: function(_) {
      var _this = this;
      if (_this._stop != null) {
        _this._core$_start = _this._core$_start + ($.Primitives_timerTicks.call$0() - _this._stop);
        _this._stop = null;
      }
    },
    stop$0: function(_) {
      if (this._stop == null)
        this._stop = $.Primitives_timerTicks.call$0();
    }
  };
  P.String.prototype = {$isComparable: 1};
  P.StringBuffer.prototype = {
    get$length: function(_) {
      return this._contents.length;
    },
    toString$0: function(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P.Symbol0.prototype = {};
  P.Type.prototype = {};
  P.Uri__parseIPv4Address_error.prototype = {
    call$2: function(msg, position) {
      throw H.wrapException(P.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    }
  };
  P.Uri_parseIPv6Address_error.prototype = {
    call$2: function(msg, position) {
      throw H.wrapException(P.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    call$1: function(msg) {
      return this.call$2(msg, null);
    }
  };
  P.Uri_parseIPv6Address_parseHex.prototype = {
    call$2: function(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = P.int_parse(C.JSString_methods.substring$2(this.host, start, end), null, 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 137
  };
  P._Uri.prototype = {
    get$userInfo: function() {
      return this._userInfo;
    },
    get$host: function(_) {
      var t1 = this._host;
      if (t1 == null)
        return "";
      if (C.JSString_methods.startsWith$1(t1, "["))
        return C.JSString_methods.substring$2(t1, 1, t1.length - 1);
      return t1;
    },
    get$port: function(_) {
      var t1 = this._port;
      if (t1 == null)
        return P._Uri__defaultPort(this.scheme);
      return t1;
    },
    get$query: function(_) {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment: function() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    get$pathSegments: function() {
      var pathToSplit,
        result = this._pathSegments;
      if (result != null)
        return result;
      pathToSplit = this.path;
      if (pathToSplit.length !== 0 && C.JSString_methods._codeUnitAt$1(pathToSplit, 0) === 47)
        pathToSplit = C.JSString_methods.substring$1(pathToSplit, 1);
      return this._pathSegments = pathToSplit === "" ? C.List_empty : P.List_List$unmodifiable(new H.MappedListIterable(H.setRuntimeTypeInfo(pathToSplit.split("/"), type$.JSArray_String), P.core_Uri_decodeComponent$closure(), type$.MappedListIterable_String_dynamic), type$.String);
    },
    get$hasScheme: function() {
      return this.scheme.length !== 0;
    },
    get$hasAuthority: function() {
      return this._host != null;
    },
    get$hasQuery: function() {
      return this._query != null;
    },
    get$hasFragment: function() {
      return this._fragment != null;
    },
    toString$0: function(_) {
      var t2, t3, t4, _this = this,
        t1 = _this._text;
      if (t1 == null) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + H.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        t1 = _this._text = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return t1;
    },
    $eq: function(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (type$.Uri._is(other))
        if (_this.scheme == other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo == other.get$userInfo())
              if (_this.get$host(_this) == other.get$host(other))
                if (_this.get$port(_this) == other.get$port(other))
                  if (_this.path === other.get$path(other)) {
                    t1 = _this._query;
                    t2 = t1 == null;
                    if (!t2 === other.get$hasQuery()) {
                      if (t2)
                        t1 = "";
                      if (t1 === other.get$query(other)) {
                        t1 = _this._fragment;
                        t2 = t1 == null;
                        if (!t2 === other.get$hasFragment()) {
                          if (t2)
                            t1 = "";
                          t1 = t1 === other.get$fragment();
                        } else
                          t1 = false;
                      } else
                        t1 = false;
                    } else
                      t1 = false;
                  } else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = C.JSString_methods.get$hashCode(this.toString$0(0)) : t1;
    },
    $isUri: 1,
    get$scheme: function() {
      return this.scheme;
    },
    get$path: function(receiver) {
      return this.path;
    }
  };
  P._Uri__Uri$notSimple_closure.prototype = {
    call$1: function(_) {
      throw H.wrapException(P.FormatException$("Invalid port", this.uri, this.portStart + 1));
    }
  };
  P._Uri__makePath_closure.prototype = {
    call$1: function(s) {
      return P._Uri__uriEncode(C.List_qg40, s, C.C_Utf8Codec, false);
    }
  };
  P.UriData.prototype = {
    get$uri: function() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 != null)
        return t1;
      t1 = _this._text;
      t2 = _this._separatorIndices[0] + 1;
      queryIndex = C.JSString_methods.indexOf$2(t1, "?", t2);
      end = t1.length;
      if (queryIndex >= 0) {
        query = P._Uri__normalizeOrSubstring(t1, queryIndex + 1, end, C.List_CVk, false);
        end = queryIndex;
      } else
        query = _null;
      return _this._uriCache = new P._DataUri("data", _null, _null, _null, P._Uri__normalizeOrSubstring(t1, t2, end, C.List_qg4, false), query, _null);
    },
    toString$0: function(_) {
      var t1 = this._text;
      return this._separatorIndices[0] === -1 ? "data:" + t1 : t1;
    }
  };
  P._createTables_closure.prototype = {
    call$1: function(_) {
      return new Uint8Array(96);
    }
  };
  P._createTables_build.prototype = {
    call$2: function(state, defaultTransition) {
      var t1 = this.tables[state];
      J.fillRange$3$x(t1, 0, 96, defaultTransition);
      return t1;
    },
    $signature: 131
  };
  P._createTables_setChars.prototype = {
    call$3: function(target, chars, transition) {
      var t1, i;
      for (t1 = chars.length, i = 0; i < t1; ++i)
        target[C.JSString_methods._codeUnitAt$1(chars, i) ^ 96] = transition;
    }
  };
  P._createTables_setRange.prototype = {
    call$3: function(target, range, transition) {
      var i, n;
      for (i = C.JSString_methods._codeUnitAt$1(range, 0), n = C.JSString_methods._codeUnitAt$1(range, 1); i <= n; ++i)
        target[(i ^ 96) >>> 0] = transition;
    }
  };
  P._SimpleUri.prototype = {
    get$hasScheme: function() {
      return this._schemeEnd > 0;
    },
    get$hasAuthority: function() {
      return this._hostStart > 0;
    },
    get$hasPort: function() {
      return this._hostStart > 0 && this._portStart + 1 < this._pathStart;
    },
    get$hasQuery: function() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment: function() {
      return this._fragmentStart < this._uri.length;
    },
    get$_isFile: function() {
      return this._schemeEnd === 4 && C.JSString_methods.startsWith$1(this._uri, "file");
    },
    get$_isHttp: function() {
      return this._schemeEnd === 4 && C.JSString_methods.startsWith$1(this._uri, "http");
    },
    get$_isHttps: function() {
      return this._schemeEnd === 5 && C.JSString_methods.startsWith$1(this._uri, "https");
    },
    get$scheme: function() {
      var t2, _this = this,
        _s7_ = "package",
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = _this._schemeCache;
      if (t2 != null)
        return t2;
      if (_this.get$_isHttp())
        t1 = _this._schemeCache = "http";
      else if (_this.get$_isHttps()) {
        _this._schemeCache = "https";
        t1 = "https";
      } else if (_this.get$_isFile()) {
        _this._schemeCache = "file";
        t1 = "file";
      } else if (t1 === 7 && C.JSString_methods.startsWith$1(_this._uri, _s7_)) {
        _this._schemeCache = _s7_;
        t1 = _s7_;
      } else {
        t1 = C.JSString_methods.substring$2(_this._uri, 0, t1);
        _this._schemeCache = t1;
      }
      return t1;
    },
    get$userInfo: function() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? C.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host: function(_) {
      var t1 = this._hostStart;
      return t1 > 0 ? C.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port: function(_) {
      var _this = this;
      if (_this.get$hasPort())
        return P.int_parse(C.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null, null);
      if (_this.get$_isHttp())
        return 80;
      if (_this.get$_isHttps())
        return 443;
      return 0;
    },
    get$path: function(_) {
      return C.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query: function(_) {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? C.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment: function() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? C.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments: function() {
      var parts, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (C.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start == end)
        return C.List_empty;
      parts = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (i = start; i < end; ++i)
        if (C.JSString_methods.codeUnitAt$1(t1, i) === 47) {
          parts.push(C.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      parts.push(C.JSString_methods.substring$2(t1, start, end));
      return P.List_List$unmodifiable(parts, type$.String);
    },
    get$hashCode: function(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = C.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    toString$0: function(_) {
      return this._uri;
    },
    $isUri: 1
  };
  P._DataUri.prototype = {};
  P.ServiceExtensionResponse.prototype = {};
  P.TimelineTask.prototype = {
    start$2$arguments: function(_, $name, $arguments) {
      var t1;
      P.ArgumentError_checkNotNull($name, "name");
      this._stack.push(new P._AsyncBlock($name, this._taskId));
      t1 = type$.dynamic;
      P._argumentsAsJson(P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    start$1: function($receiver, $name) {
      return this.start$2$arguments($receiver, $name, null);
    },
    finish$0: function(_) {
      var t1 = this._stack;
      if (t1.length === 0)
        throw H.wrapException(P.StateError$("Uneven calls to start and finish"));
      t1.pop();
      P._argumentsAsJson(null);
    }
  };
  P._AsyncBlock.prototype = {
    get$name: function(receiver) {
      return this.name;
    }
  };
  P._SyncBlock.prototype = {};
  W.HtmlElement.prototype = {};
  W.AccessibleNodeList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.AnchorElement.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.ApplicationCacheErrorEvent.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    }
  };
  W.AreaElement.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.Blob.prototype = {$isBlob: 1};
  W.BodyElement.prototype = {$isBodyElement: 1};
  W.BroadcastChannel.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.ButtonElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.CanvasElement.prototype = {$isCanvasElement: 1};
  W.CanvasRenderingContext2D.prototype = {
    fillText$3: function(receiver, text, x, y) {
      receiver.fillText(text, x, y);
    }
  };
  W.CharacterData.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Credential.prototype = {};
  W.CredentialUserData.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.CssKeyframesRule.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.CssPerspective.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssRule.prototype = {$isCssRule: 1};
  W.CssStyleDeclaration.prototype = {
    _browserPropertyName$1: function(receiver, propertyName) {
      var t1 = $.$get$CssStyleDeclaration__propertyCache(),
        $name = t1[propertyName];
      if (typeof $name == "string")
        return $name;
      $name = this._supportedBrowserPropertyName$1(receiver, propertyName);
      t1[propertyName] = $name;
      return $name;
    },
    _supportedBrowserPropertyName$1: function(receiver, propertyName) {
      var prefixed;
      if (propertyName.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, function(_, letter) {
        return letter.toUpperCase();
      }) in receiver)
        return propertyName;
      prefixed = P.Device_cssPrefix() + propertyName;
      if (prefixed in receiver)
        return prefixed;
      return propertyName;
    },
    _setPropertyHelper$3: function(receiver, propertyName, value, priority) {
      if (value == null)
        value = "";
      if (priority == null)
        priority = "";
      receiver.setProperty(propertyName, value, priority);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    set$left: function(receiver, value) {
      receiver.left = value;
    },
    set$overflow: function(receiver, value) {
      receiver.overflow = value;
    },
    set$position: function(receiver, value) {
      receiver.position = value;
    },
    set$top: function(receiver, value) {
      receiver.top = value;
    },
    set$visibility: function(receiver, value) {
      receiver.visibility = value;
    },
    set$width: function(receiver, value) {
      receiver.width = value == null ? "" : value;
    }
  };
  W.CssStyleDeclarationBase.prototype = {};
  W.CssStyleValue.prototype = {};
  W.CssTransformComponent.prototype = {};
  W.CssTransformValue.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssUnparsedValue.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.DataTransferItemList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      return receiver[index];
    }
  };
  W.DeprecationReport.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    }
  };
  W.DivElement.prototype = {};
  W.Document.prototype = {$isDocument: 1};
  W.DomError.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    },
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.DomException.prototype = {
    get$name: function(receiver) {
      var errorName = receiver.name;
      if (P.Device_isWebKit() && errorName === "SECURITY_ERR")
        return "SecurityError";
      if (P.Device_isWebKit() && errorName === "SYNTAX_ERR")
        return "SyntaxError";
      return errorName;
    },
    get$message: function(receiver) {
      return receiver.message;
    },
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.DomRectList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.DomRectReadOnly.prototype = {
    toString$0: function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(this.get$width(receiver)) + " x " + H.S(this.get$height(receiver));
    },
    $eq: function(receiver, other) {
      var t1;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other)) {
        t1 = J.getInterceptor$x(other);
        t1 = receiver.left == t1.get$left(other) && receiver.top == t1.get$top(other) && this.get$width(receiver) == t1.get$width(other) && this.get$height(receiver) == t1.get$height(other);
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(receiver) {
      return W._JenkinsSmiHash_hash4(J.get$hashCode$(receiver.left), J.get$hashCode$(receiver.top), J.get$hashCode$(this.get$width(receiver)), J.get$hashCode$(this.get$height(receiver)));
    },
    get$bottom: function(receiver) {
      return receiver.bottom;
    },
    get$height: function(receiver) {
      return receiver.height;
    },
    get$left: function(receiver) {
      return receiver.left;
    },
    get$right: function(receiver) {
      return receiver.right;
    },
    get$top: function(receiver) {
      return receiver.top;
    },
    get$width: function(receiver) {
      return receiver.width;
    },
    $isRectangle: 1
  };
  W.DomStringList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.DomTokenList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W._FrozenElementList.prototype = {
    get$length: function(_) {
      return this._nodeList.length;
    },
    $index: function(_, index) {
      return this._nodeList[index];
    },
    $indexSet: function(_, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    }
  };
  W.Element0.prototype = {
    get$attributes: function(receiver) {
      return new W._ElementAttributeMap(receiver);
    },
    toString$0: function(receiver) {
      return receiver.localName;
    },
    insertAdjacentHtml$4$treeSanitizer$validator: function(receiver, where, html, treeSanitizer, validator) {
      var t1,
        node = this.createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator);
      switch (where.toLowerCase()) {
        case "beforebegin":
          receiver.parentNode.insertBefore(node, receiver);
          break;
        case "afterbegin":
          t1 = receiver.childNodes;
          receiver.insertBefore(node, t1.length > 0 ? t1[0] : null);
          break;
        case "beforeend":
          receiver.appendChild(node);
          break;
        case "afterend":
          receiver.parentNode.insertBefore(node, receiver.nextSibling);
          break;
        default:
          H.throwExpression(P.ArgumentError$("Invalid position " + where));
      }
    },
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, t2, base, contextElement, fragment;
      if (treeSanitizer == null) {
        if (validator == null) {
          t1 = $.Element__defaultValidator;
          if (t1 == null) {
            t1 = H.setRuntimeTypeInfo([], type$.JSArray_NodeValidator);
            t2 = new W.NodeValidatorBuilder(t1);
            t1.push(W._Html5NodeValidator$(null));
            t1.push(W._TemplatingNodeValidator$());
            $.Element__defaultValidator = t2;
            validator = t2;
          } else
            validator = t1;
        }
        t1 = $.Element__defaultSanitizer;
        if (t1 == null) {
          t1 = new W._ValidatingTreeSanitizer(validator);
          $.Element__defaultSanitizer = t1;
          treeSanitizer = t1;
        } else {
          t1.validator = validator;
          treeSanitizer = t1;
        }
      } else if (validator != null)
        throw H.wrapException(P.ArgumentError$("validator can only be passed if treeSanitizer is null"));
      if ($.Element__parseDocument == null) {
        t1 = document;
        t2 = t1.implementation.createHTMLDocument("");
        $.Element__parseDocument = t2;
        $.Element__parseRange = t2.createRange();
        base = $.Element__parseDocument.createElement("base");
        base.href = t1.baseURI;
        $.Element__parseDocument.head.appendChild(base);
      }
      t1 = $.Element__parseDocument;
      if (t1.body == null) {
        t2 = t1.createElement("body");
        t1.body = t2;
      }
      t1 = $.Element__parseDocument;
      if (type$.BodyElement._is(receiver))
        contextElement = t1.body;
      else {
        contextElement = t1.createElement(receiver.tagName);
        $.Element__parseDocument.body.appendChild(contextElement);
      }
      if ("createContextualFragment" in window.Range.prototype && !C.JSArray_methods.contains$1(C.List_ego, receiver.tagName)) {
        $.Element__parseRange.selectNodeContents(contextElement);
        fragment = $.Element__parseRange.createContextualFragment(html);
      } else {
        contextElement.innerHTML = html;
        fragment = $.Element__parseDocument.createDocumentFragment();
        for (; t1 = contextElement.firstChild, t1 != null;)
          fragment.appendChild(t1);
      }
      t1 = $.Element__parseDocument.body;
      if (contextElement == null ? t1 != null : contextElement !== t1)
        J.remove$0$ax(contextElement);
      treeSanitizer.sanitizeTree$1(fragment);
      document.adoptNode(fragment);
      return fragment;
    },
    createFragment$2$treeSanitizer: function($receiver, html, treeSanitizer) {
      return this.createFragment$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
    },
    setInnerHtml$1: function(receiver, html) {
      receiver.textContent = null;
      receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, html, null, null));
    },
    focus$0: function(receiver) {
      return receiver.focus();
    },
    get$tagName: function(receiver) {
      return receiver.tagName;
    },
    $isElement0: 1
  };
  W.Element_Element$html_closure.prototype = {
    call$1: function(e) {
      return type$.Element._is(e);
    }
  };
  W.EmbedElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.Entry.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.ErrorEvent.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    }
  };
  W.Event.prototype = {
    get$target: function(receiver) {
      return W._convertNativeToDart_EventTarget(receiver.target);
    },
    $isEvent: 1
  };
  W.EventTarget.prototype = {
    addEventListener$3: function(receiver, type, listener, useCapture) {
      if (listener != null)
        this._addEventListener$3(receiver, type, listener, useCapture);
    },
    addEventListener$2: function($receiver, type, listener) {
      return this.addEventListener$3($receiver, type, listener, null);
    },
    removeEventListener$3: function(receiver, type, listener, useCapture) {
      if (listener != null)
        this._removeEventListener$3(receiver, type, listener, useCapture);
    },
    removeEventListener$2: function($receiver, type, listener) {
      return this.removeEventListener$3($receiver, type, listener, null);
    },
    _addEventListener$3: function(receiver, type, listener, options) {
      return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), options);
    },
    _removeEventListener$3: function(receiver, type, listener, options) {
      return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), options);
    }
  };
  W.FederatedCredential.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.FieldSetElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.File.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    },
    $isFile: 1
  };
  W.FileList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1,
    $isFileList: 1
  };
  W.FileSystem.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.FileWriter.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.FontFace.prototype = {$isFontFace: 1};
  W.FormElement.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.Gamepad.prototype = {$isGamepad: 1};
  W.History.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.HtmlCollection.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.HttpRequest.prototype = {
    open$3$async: function(receiver, method, url, async) {
      return receiver.open(method, url, true);
    },
    $isHttpRequest: 1
  };
  W.HttpRequest_request_closure.prototype = {
    call$1: function(e) {
      var t3,
        t1 = this.xhr,
        t2 = t1.status,
        accepted = t2 >= 200 && t2 < 300,
        unknownRedirect = t2 > 307 && t2 < 400;
      t2 = accepted || t2 === 0 || t2 === 304 || unknownRedirect;
      t3 = this.completer;
      if (t2)
        t3.complete$1(0, t1);
      else
        t3.completeError$1(e);
    }
  };
  W.HttpRequestEventTarget.prototype = {};
  W.IFrameElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.ImageData.prototype = {$isImageData: 1};
  W.InputElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    },
    $isInputElement: 1
  };
  W.InterventionReport.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    }
  };
  W.KeyboardEvent.prototype = {$isKeyboardEvent: 1};
  W.LabelElement.prototype = {};
  W.Location.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.MapElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.MediaError.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    }
  };
  W.MediaKeyMessageEvent.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    }
  };
  W.MediaList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.MediaQueryList.prototype = {
    addListener$1: function(receiver, listener) {
      return receiver.addListener(H.convertDartClosureToJS(listener, 1));
    },
    removeListener$1: function(receiver, listener) {
      return receiver.removeListener(H.convertDartClosureToJS(listener, 1));
    }
  };
  W.MessagePort.prototype = {
    addEventListener$3: function(receiver, type, listener, useCapture) {
      if (type === "message")
        receiver.start();
      this.super$EventTarget$addEventListener(receiver, type, listener, false);
    },
    $isMessagePort: 1
  };
  W.MetaElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    },
    $isMetaElement: 1
  };
  W.MidiInputMap.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1: function(receiver, f) {
      var entry,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.MidiInputMap_keys_closure(keys));
      return keys;
    },
    get$values: function(receiver) {
      var values = H.setRuntimeTypeInfo([], type$.JSArray_Map_dynamic_dynamic);
      this.forEach$1(receiver, new W.MidiInputMap_values_closure(values));
      return values;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.size !== 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    remove$1: function(receiver, key) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  W.MidiInputMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return this.keys.push(k);
    }
  };
  W.MidiInputMap_values_closure.prototype = {
    call$2: function(k, v) {
      return this.values.push(v);
    }
  };
  W.MidiOutputMap.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1: function(receiver, f) {
      var entry,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.MidiOutputMap_keys_closure(keys));
      return keys;
    },
    get$values: function(receiver) {
      var values = H.setRuntimeTypeInfo([], type$.JSArray_Map_dynamic_dynamic);
      this.forEach$1(receiver, new W.MidiOutputMap_values_closure(values));
      return values;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.size !== 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    remove$1: function(receiver, key) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  W.MidiOutputMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return this.keys.push(k);
    }
  };
  W.MidiOutputMap_values_closure.prototype = {
    call$2: function(k, v) {
      return this.values.push(v);
    }
  };
  W.MidiPort.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.MimeType.prototype = {$isMimeType: 1};
  W.MimeTypeArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.MouseEvent.prototype = {
    get$offset: function(receiver) {
      var t1, target, t2, t3, t4, point;
      if (!!receiver.offsetX)
        return new P.Point(receiver.offsetX, receiver.offsetY, type$.Point_num);
      else {
        t1 = receiver.target;
        if (!type$.Element._is(W._convertNativeToDart_EventTarget(t1)))
          throw H.wrapException(P.UnsupportedError$("offsetX is only supported on elements"));
        target = W._convertNativeToDart_EventTarget(t1);
        t1 = receiver.clientX;
        t2 = receiver.clientY;
        t3 = type$.Point_num;
        t4 = target.getBoundingClientRect();
        point = new P.Point(t1, t2, t3).$sub(0, new P.Point(t4.left, t4.top, t3));
        return new P.Point(J.toInt$0$n(point.x), J.toInt$0$n(point.y), t3);
      }
    },
    $isMouseEvent: 1
  };
  W.NavigatorUserMediaError.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    },
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W._ChildNodeListLazy.prototype = {
    get$single: function(_) {
      var t1 = this._this,
        l = t1.childNodes.length;
      if (l === 0)
        throw H.wrapException(P.StateError$("No elements"));
      if (l > 1)
        throw H.wrapException(P.StateError$("More than one element"));
      return t1.firstChild;
    },
    add$1: function(_, value) {
      this._this.appendChild(value);
    },
    addAll$1: function(_, iterable) {
      var t1, t2, len, i;
      if (iterable instanceof W._ChildNodeListLazy) {
        t1 = iterable._this;
        t2 = this._this;
        if (t1 !== t2)
          for (len = t1.childNodes.length, i = 0; i < len; ++i)
            t2.appendChild(t1.firstChild);
        return;
      }
      for (t1 = J.get$iterator$ax(iterable), t2 = this._this; t1.moveNext$0();)
        t2.appendChild(t1.get$current(t1));
    },
    remove$1: function(_, object) {
      return false;
    },
    clear$0: function(_) {
      J._clearChildren$0$x(this._this);
    },
    $indexSet: function(_, index, value) {
      var t1 = this._this;
      t1.replaceChild(value, t1.childNodes[index]);
    },
    get$iterator: function(_) {
      var t1 = this._this.childNodes;
      return new W.FixedSizeListIterator(t1, t1.length);
    },
    get$length: function(_) {
      return this._this.childNodes.length;
    },
    set$length: function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index: function(_, index) {
      return this._this.childNodes[index];
    }
  };
  W.Node.prototype = {
    remove$0: function(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver);
    },
    _clearChildren$0: function(receiver) {
      var t1;
      for (; t1 = receiver.firstChild, t1 != null;)
        receiver.removeChild(t1);
    },
    toString$0: function(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    $isNode: 1
  };
  W.NodeList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.ObjectElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.OutputElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.OverconstrainedError.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    },
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.ParagraphElement.prototype = {};
  W.ParamElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.PasswordCredential.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.PerformanceEntry.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.PerformanceServerTiming.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.Plugin.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    get$name: function(receiver) {
      return receiver.name;
    },
    $isPlugin: 1
  };
  W.PluginArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.PointerEvent.prototype = {$isPointerEvent: 1};
  W.PositionError.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    }
  };
  W.PresentationConnectionCloseEvent.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    }
  };
  W.ProgressEvent.prototype = {$isProgressEvent: 1};
  W.ReportBody.prototype = {};
  W.RtcStatsReport.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1: function(receiver, f) {
      var entry,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.RtcStatsReport_keys_closure(keys));
      return keys;
    },
    get$values: function(receiver) {
      var values = H.setRuntimeTypeInfo([], type$.JSArray_Map_dynamic_dynamic);
      this.forEach$1(receiver, new W.RtcStatsReport_values_closure(values));
      return values;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.size !== 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    remove$1: function(receiver, key) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  W.RtcStatsReport_keys_closure.prototype = {
    call$2: function(k, v) {
      return this.keys.push(k);
    }
  };
  W.RtcStatsReport_values_closure.prototype = {
    call$2: function(k, v) {
      return this.values.push(v);
    }
  };
  W.SelectElement.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.SharedWorkerGlobalScope.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.SlotElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.SourceBuffer.prototype = {$isSourceBuffer: 1};
  W.SourceBufferList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.SpeechGrammar.prototype = {$isSpeechGrammar: 1};
  W.SpeechGrammarList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.SpeechRecognitionError.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    }
  };
  W.SpeechRecognitionResult.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $isSpeechRecognitionResult: 1
  };
  W.SpeechSynthesisEvent.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.SpeechSynthesisVoice.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.Storage.prototype = {
    containsKey$1: function(receiver, key) {
      return receiver.getItem(key) != null;
    },
    $index: function(receiver, key) {
      return receiver.getItem(key);
    },
    $indexSet: function(receiver, key, value) {
      receiver.setItem(key, value);
    },
    remove$1: function(receiver, key) {
      var value = receiver.getItem(key);
      receiver.removeItem(key);
      return value;
    },
    forEach$1: function(receiver, f) {
      var i, key;
      for (i = 0; true; ++i) {
        key = receiver.key(i);
        if (key == null)
          return;
        f.call$2(key, receiver.getItem(key));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.Storage_keys_closure(keys));
      return keys;
    },
    get$values: function(receiver) {
      var values = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.Storage_values_closure(values));
      return values;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    get$isEmpty: function(receiver) {
      return receiver.key(0) == null;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.key(0) != null;
    },
    $isMap: 1
  };
  W.Storage_keys_closure.prototype = {
    call$2: function(k, v) {
      return this.keys.push(k);
    }
  };
  W.Storage_values_closure.prototype = {
    call$2: function(k, v) {
      return this.values.push(v);
    }
  };
  W.StyleElement.prototype = {};
  W.StyleSheet.prototype = {$isStyleSheet: 1};
  W.TableElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var table, fragment;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      table = W.Element_Element$html("<table>" + html + "</table>", treeSanitizer, validator);
      fragment = document.createDocumentFragment();
      fragment.toString;
      table.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(table));
      return fragment;
    }
  };
  W.TableRowElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, fragment, section, row;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      fragment = t1.createDocumentFragment();
      t1 = C.TableElement_methods.createFragment$3$treeSanitizer$validator(t1.createElement("table"), html, treeSanitizer, validator);
      t1.toString;
      t1 = new W._ChildNodeListLazy(t1);
      section = t1.get$single(t1);
      section.toString;
      t1 = new W._ChildNodeListLazy(section);
      row = t1.get$single(t1);
      fragment.toString;
      row.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(row));
      return fragment;
    }
  };
  W.TableSectionElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, fragment, section;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      fragment = t1.createDocumentFragment();
      t1 = C.TableElement_methods.createFragment$3$treeSanitizer$validator(t1.createElement("table"), html, treeSanitizer, validator);
      t1.toString;
      t1 = new W._ChildNodeListLazy(t1);
      section = t1.get$single(t1);
      fragment.toString;
      section.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(section));
      return fragment;
    }
  };
  W.TemplateElement.prototype = {$isTemplateElement: 1};
  W.TextAreaElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    },
    select$0: function(receiver) {
      return receiver.select();
    },
    $isTextAreaElement: 1
  };
  W.TextTrack.prototype = {$isTextTrack: 1};
  W.TextTrackCue.prototype = {$isTextTrackCue: 1};
  W.TextTrackCueList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.TextTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.TimeRanges.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Touch.prototype = {$isTouch: 1};
  W.TouchEvent.prototype = {$isTouchEvent: 1};
  W.TouchList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.TrackDefaultList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.UIEvent.prototype = {};
  W.Url.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.VideoTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.WheelEvent.prototype = {
    get$deltaY: function(receiver) {
      if (receiver.deltaY !== undefined)
        return receiver.deltaY;
      throw H.wrapException(P.UnsupportedError$("deltaY is not supported"));
    },
    get$deltaX: function(receiver) {
      if (receiver.deltaX !== undefined)
        return receiver.deltaX;
      throw H.wrapException(P.UnsupportedError$("deltaX is not supported"));
    },
    get$deltaMode: function(receiver) {
      if (!!receiver.deltaMode)
        return receiver.deltaMode;
      return 0;
    }
  };
  W.Window.prototype = {
    _requestAnimationFrame$1: function(receiver, callback) {
      return receiver.requestAnimationFrame(H.convertDartClosureToJS(callback, 1));
    },
    _ensureRequestAnimationFrame$0: function(receiver) {
      if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
        return;
      (function($this) {
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
          $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
          $this.cancelAnimationFrame = $this[vendors[i] + 'CancelAnimationFrame'] || $this[vendors[i] + 'CancelRequestAnimationFrame'];
        }
        if ($this.requestAnimationFrame && $this.cancelAnimationFrame)
          return;
        $this.requestAnimationFrame = function(callback) {
          return window.setTimeout(function() {
            callback(Date.now());
          }, 16);
        };
        $this.cancelAnimationFrame = function(id) {
          clearTimeout(id);
        };
      })(receiver);
    },
    get$name: function(receiver) {
      return receiver.name;
    },
    $isWindow: 1
  };
  W.WorkerGlobalScope.prototype = {$isWorkerGlobalScope: 1};
  W._Attr.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W._Clipboard.prototype = {
    readText$0: function(receiver) {
      return P.promiseToFuture(receiver.readText(), type$.String);
    },
    writeText$1: function(receiver, data) {
      return P.promiseToFuture(receiver.writeText(data), type$.dynamic);
    }
  };
  W._CssRuleList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._DomRect.prototype = {
    toString$0: function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
    },
    $eq: function(receiver, other) {
      var t1;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other)) {
        t1 = J.getInterceptor$x(other);
        t1 = receiver.left == t1.get$left(other) && receiver.top == t1.get$top(other) && receiver.width == t1.get$width(other) && receiver.height == t1.get$height(other);
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(receiver) {
      return W._JenkinsSmiHash_hash4(J.get$hashCode$(receiver.left), J.get$hashCode$(receiver.top), J.get$hashCode$(receiver.width), J.get$hashCode$(receiver.height));
    },
    get$height: function(receiver) {
      return receiver.height;
    },
    get$width: function(receiver) {
      return receiver.width;
    }
  };
  W._GamepadList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._NamedNodeMap.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._SpeechRecognitionResultList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._StyleSheetList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._AttributeMap.prototype = {
    cast$2$0: function(_, $K, $V) {
      var t1 = type$.String;
      return P.Map_castFrom(this, t1, t1, $K, $V);
    },
    forEach$1: function(_, f) {
      var t1, t2, t3, _i, key;
      for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._html$_element, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        f.call$2(key, t3.getAttribute(key));
      }
    },
    get$keys: function(_) {
      var len, i, attr,
        attributes = this._html$_element.attributes,
        keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (len = attributes.length, i = 0; i < len; ++i) {
        attr = attributes[i];
        if (attr.namespaceURI == null)
          keys.push(attr.name);
      }
      return keys;
    },
    get$values: function(_) {
      var len, i, attr,
        attributes = this._html$_element.attributes,
        values = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (len = attributes.length, i = 0; i < len; ++i) {
        attr = attributes[i];
        if (attr.namespaceURI == null)
          values.push(attr.value);
      }
      return values;
    },
    get$isEmpty: function(_) {
      return this.get$keys(this).length === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$keys(this).length !== 0;
    }
  };
  W._ElementAttributeMap.prototype = {
    containsKey$1: function(_, key) {
      return this._html$_element.hasAttribute(key);
    },
    $index: function(_, key) {
      return this._html$_element.getAttribute(key);
    },
    $indexSet: function(_, key, value) {
      this._html$_element.setAttribute(key, value);
    },
    remove$1: function(_, key) {
      var t1, value;
      if (typeof key == "string") {
        t1 = this._html$_element;
        value = t1.getAttribute(key);
        t1.removeAttribute(key);
        t1 = value;
      } else
        t1 = null;
      return t1;
    },
    get$length: function(_) {
      return this.get$keys(this).length;
    }
  };
  W.EventStreamProvider.prototype = {};
  W._EventStream.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      return W._EventStreamSubscription$(this._html$_target, this._eventType, onData, false, H._instanceType(this)._precomputed1);
    }
  };
  W._ElementEventStreamImpl.prototype = {};
  W._EventStreamSubscription.prototype = {
    cancel$0: function(_) {
      var _this = this;
      if (_this._html$_target == null)
        return null;
      _this._unlisten$0();
      return _this._onData = _this._html$_target = null;
    },
    pause$0: function(_) {
      if (this._html$_target == null)
        return;
      ++this._pauseCount;
      this._unlisten$0();
    },
    resume$0: function(_) {
      var _this = this;
      if (_this._html$_target == null || _this._pauseCount <= 0)
        return;
      --_this._pauseCount;
      _this._tryResume$0();
    },
    _tryResume$0: function() {
      var _this = this,
        t1 = _this._onData;
      if (t1 != null && _this._pauseCount <= 0)
        J.addEventListener$3$x(_this._html$_target, _this._eventType, t1, false);
    },
    _unlisten$0: function() {
      var t1 = this._onData;
      if (t1 != null)
        J.removeEventListener$3$x(this._html$_target, this._eventType, t1, false);
    }
  };
  W._EventStreamSubscription_closure.prototype = {
    call$1: function(e) {
      return this.onData.call$1(e);
    },
    $signature: 18
  };
  W._Html5NodeValidator.prototype = {
    _Html5NodeValidator$1$uriPolicy: function(uriPolicy) {
      var _i;
      if ($._Html5NodeValidator__attributeValidators.get$isEmpty($._Html5NodeValidator__attributeValidators)) {
        for (_i = 0; _i < 262; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, C.List_2Zi[_i], W.html__Html5NodeValidator__standardAttributeValidator$closure());
        for (_i = 0; _i < 12; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, C.List_yrN[_i], W.html__Html5NodeValidator__uriAttributeValidator$closure());
      }
    },
    allowsElement$1: function(element) {
      return $.$get$_Html5NodeValidator__allowedElements().contains$1(0, W.Element__safeTagName(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      var validator = $._Html5NodeValidator__attributeValidators.$index(0, H.S(W.Element__safeTagName(element)) + "::" + attributeName);
      if (validator == null)
        validator = $._Html5NodeValidator__attributeValidators.$index(0, "*::" + attributeName);
      if (validator == null)
        return false;
      return validator.call$4(element, attributeName, value, this);
    },
    $isNodeValidator: 1
  };
  W.ImmutableListMixin.prototype = {
    get$iterator: function(receiver) {
      return new W.FixedSizeListIterator(receiver, this.get$length(receiver));
    },
    add$1: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    },
    remove$1: function(receiver, object) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
    }
  };
  W.NodeValidatorBuilder.prototype = {
    allowsElement$1: function(element) {
      return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsElement_closure(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
    },
    $isNodeValidator: 1
  };
  W.NodeValidatorBuilder_allowsElement_closure.prototype = {
    call$1: function(v) {
      return v.allowsElement$1(this.element);
    }
  };
  W.NodeValidatorBuilder_allowsAttribute_closure.prototype = {
    call$1: function(v) {
      return v.allowsAttribute$3(this.element, this.attributeName, this.value);
    }
  };
  W._SimpleNodeValidator.prototype = {
    _SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes: function(uriPolicy, allowedAttributes, allowedElements, allowedUriAttributes) {
      var legalAttributes, extraUriAttributes,
        t1 = allowedElements == null ? C.List_empty : allowedElements;
      this.allowedElements.addAll$1(0, t1);
      t1 = J.getInterceptor$ax(allowedAttributes);
      legalAttributes = t1.where$1(allowedAttributes, new W._SimpleNodeValidator_closure());
      extraUriAttributes = t1.where$1(allowedAttributes, new W._SimpleNodeValidator_closure0());
      this.allowedAttributes.addAll$1(0, legalAttributes);
      t1 = this.allowedUriAttributes;
      t1.addAll$1(0, C.List_empty);
      t1.addAll$1(0, extraUriAttributes);
    },
    allowsElement$1: function(element) {
      return this.allowedElements.contains$1(0, W.Element__safeTagName(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      var _this = this,
        tagName = W.Element__safeTagName(element),
        t1 = _this.allowedUriAttributes;
      if (t1.contains$1(0, H.S(tagName) + "::" + attributeName))
        return _this.uriPolicy.allowsUri$1(value);
      else if (t1.contains$1(0, "*::" + attributeName))
        return _this.uriPolicy.allowsUri$1(value);
      else {
        t1 = _this.allowedAttributes;
        if (t1.contains$1(0, H.S(tagName) + "::" + attributeName))
          return true;
        else if (t1.contains$1(0, "*::" + attributeName))
          return true;
        else if (t1.contains$1(0, H.S(tagName) + "::*"))
          return true;
        else if (t1.contains$1(0, "*::*"))
          return true;
      }
      return false;
    },
    $isNodeValidator: 1
  };
  W._SimpleNodeValidator_closure.prototype = {
    call$1: function(x) {
      return !C.JSArray_methods.contains$1(C.List_yrN, x);
    }
  };
  W._SimpleNodeValidator_closure0.prototype = {
    call$1: function(x) {
      return C.JSArray_methods.contains$1(C.List_yrN, x);
    }
  };
  W._TemplatingNodeValidator.prototype = {
    allowsAttribute$3: function(element, attributeName, value) {
      if (this.super$_SimpleNodeValidator$allowsAttribute(element, attributeName, value))
        return true;
      if (attributeName === "template" && value === "")
        return true;
      if (element.getAttribute("template") === "")
        return this._templateAttrs.contains$1(0, attributeName);
      return false;
    }
  };
  W._TemplatingNodeValidator_closure.prototype = {
    call$1: function(attr) {
      return "TEMPLATE::" + H.S(attr);
    }
  };
  W._SvgNodeValidator.prototype = {
    allowsElement$1: function(element) {
      var t1;
      if (type$.ScriptElement._is(element))
        return false;
      t1 = type$.SvgElement._is(element);
      if (t1 && W.Element__safeTagName(element) === "foreignObject")
        return false;
      if (t1)
        return true;
      return false;
    },
    allowsAttribute$3: function(element, attributeName, value) {
      if (attributeName === "is" || C.JSString_methods.startsWith$1(attributeName, "on"))
        return false;
      return this.allowsElement$1(element);
    },
    $isNodeValidator: 1
  };
  W.FixedSizeListIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._html$_length;
      if (nextPosition < t1) {
        _this._html$_current = J.$index$asx(_this._array, nextPosition);
        _this._position = nextPosition;
        return true;
      }
      _this._html$_current = null;
      _this._position = t1;
      return false;
    },
    get$current: function(_) {
      return this._html$_current;
    }
  };
  W._DOMWindowCrossFrame.prototype = {};
  W.NodeValidator.prototype = {};
  W._SameOriginUriPolicy.prototype = {};
  W._ValidatingTreeSanitizer.prototype = {
    sanitizeTree$1: function(node) {
      var _this = this,
        walk = new W._ValidatingTreeSanitizer_sanitizeTree_walk(_this);
      _this.modifiedTree = false;
      walk.call$2(node, null);
      for (; _this.modifiedTree;) {
        _this.modifiedTree = false;
        walk.call$2(node, null);
      }
    },
    _removeNode$2: function(node, $parent) {
      var t1 = this.modifiedTree = true;
      if ($parent != null ? $parent !== node.parentNode : t1)
        J.remove$0$ax(node);
      else
        $parent.removeChild(node);
    },
    _sanitizeUntrustedElement$2: function(element, $parent) {
      var corruptedTest1, elementText, elementTagName, exception, t1,
        corrupted = true,
        attrs = null, isAttr = null;
      try {
        attrs = J.get$attributes$x(element);
        isAttr = attrs._html$_element.getAttribute("is");
        corruptedTest1 = function(element) {
          if (!(element.attributes instanceof NamedNodeMap))
            return true;
          if (element.id == 'lastChild' || element.name == 'lastChild' || element.id == 'previousSibling' || element.name == 'previousSibling' || element.id == 'children' || element.name == 'children')
            return true;
          var childNodes = element.childNodes;
          if (element.lastChild && element.lastChild !== childNodes[childNodes.length - 1])
            return true;
          if (element.children)
            if (!(element.children instanceof HTMLCollection || element.children instanceof NodeList))
              return true;
          var length = 0;
          if (element.children)
            length = element.children.length;
          for (var i = 0; i < length; i++) {
            var child = element.children[i];
            if (child.id == 'attributes' || child.name == 'attributes' || child.id == 'lastChild' || child.name == 'lastChild' || child.id == 'previousSibling' || child.name == 'previousSibling' || child.id == 'children' || child.name == 'children')
              return true;
          }
          return false;
        }(element);
        corrupted = corruptedTest1 ? true : !(element.attributes instanceof NamedNodeMap);
      } catch (exception) {
        H.unwrapException(exception);
      }
      elementText = "element unprintable";
      try {
        elementText = J.toString$0$(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      try {
        elementTagName = W.Element__safeTagName(element);
        this._sanitizeElement$7(element, $parent, corrupted, elementText, elementTagName, attrs, isAttr);
      } catch (exception) {
        if (H.unwrapException(exception) instanceof P.ArgumentError)
          throw exception;
        else {
          this._removeNode$2(element, $parent);
          window;
          t1 = "Removing corrupted element " + H.S(elementText);
          if (typeof console != "undefined")
            window.console.warn(t1);
        }
      }
    },
    _sanitizeElement$7: function(element, $parent, corrupted, text, tag, attrs, isAttr) {
      var t1, keys, i, $name, t2, _this = this;
      if (corrupted) {
        _this._removeNode$2(element, $parent);
        window;
        t1 = "Removing element due to corrupted attributes on <" + text + ">";
        if (typeof console != "undefined")
          window.console.warn(t1);
        return;
      }
      if (!_this.validator.allowsElement$1(element)) {
        _this._removeNode$2(element, $parent);
        window;
        t1 = "Removing disallowed element <" + H.S(tag) + "> from " + H.S($parent);
        if (typeof console != "undefined")
          window.console.warn(t1);
        return;
      }
      if (isAttr != null)
        if (!_this.validator.allowsAttribute$3(element, "is", isAttr)) {
          _this._removeNode$2(element, $parent);
          window;
          t1 = "Removing disallowed type extension <" + H.S(tag) + ' is="' + isAttr + '">';
          if (typeof console != "undefined")
            window.console.warn(t1);
          return;
        }
      t1 = attrs.get$keys(attrs);
      keys = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1)._eval$1("JSArray<1>"));
      for (i = attrs.get$keys(attrs).length - 1, t1 = attrs._html$_element; i >= 0; --i) {
        $name = keys[i];
        if (!_this.validator.allowsAttribute$3(element, J.toLowerCase$0$s($name), t1.getAttribute($name))) {
          window;
          t2 = "Removing disallowed attribute <" + H.S(tag) + " " + $name + '="' + H.S(t1.getAttribute($name)) + '">';
          if (typeof console != "undefined")
            window.console.warn(t2);
          t1.removeAttribute($name);
        }
      }
      if (type$.TemplateElement._is(element))
        _this.sanitizeTree$1(element.content);
    }
  };
  W._ValidatingTreeSanitizer_sanitizeTree_walk.prototype = {
    call$2: function(node, $parent) {
      var child, nextChild, t2, t3, exception,
        t1 = this.$this;
      switch (node.nodeType) {
        case 1:
          t1._sanitizeUntrustedElement$2(node, $parent);
          break;
        case 8:
        case 11:
        case 3:
        case 4:
          break;
        default:
          t1._removeNode$2(node, $parent);
      }
      child = node.lastChild;
      for (; null != child;) {
        nextChild = null;
        try {
          nextChild = child.previousSibling;
          if (nextChild != null) {
            t2 = nextChild.nextSibling;
            t3 = child;
            t3 = t2 == null ? t3 != null : t2 !== t3;
            t2 = t3;
          } else
            t2 = false;
          if (t2) {
            t2 = P.StateError$("Corrupt HTML");
            throw H.wrapException(t2);
          }
        } catch (exception) {
          H.unwrapException(exception);
          t2 = child;
          t1.modifiedTree = true;
          t3 = t2.parentNode;
          t3 = node == null ? t3 != null : node !== t3;
          if (t3) {
            t3 = t2.parentNode;
            if (t3 != null)
              t3.removeChild(t2);
          } else
            node.removeChild(t2);
          child = null;
          nextChild = node.lastChild;
        }
        if (child != null)
          this.call$2(child, node);
        child = nextChild;
      }
    }
  };
  W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase.prototype = {};
  W._DomRectList_Interceptor_ListMixin.prototype = {};
  W._DomRectList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._DomStringList_Interceptor_ListMixin.prototype = {};
  W._DomStringList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._FileList_Interceptor_ListMixin.prototype = {};
  W._FileList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._HtmlCollection_Interceptor_ListMixin.prototype = {};
  W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._MidiInputMap_Interceptor_MapMixin.prototype = {};
  W._MidiOutputMap_Interceptor_MapMixin.prototype = {};
  W._MimeTypeArray_Interceptor_ListMixin.prototype = {};
  W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._NodeList_Interceptor_ListMixin.prototype = {};
  W._NodeList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._PluginArray_Interceptor_ListMixin.prototype = {};
  W._PluginArray_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._RtcStatsReport_Interceptor_MapMixin.prototype = {};
  W._SourceBufferList_EventTarget_ListMixin.prototype = {};
  W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  W._SpeechGrammarList_Interceptor_ListMixin.prototype = {};
  W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._Storage_Interceptor_MapMixin.prototype = {};
  W._TextTrackCueList_Interceptor_ListMixin.prototype = {};
  W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._TextTrackList_EventTarget_ListMixin.prototype = {};
  W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  W._TouchList_Interceptor_ListMixin.prototype = {};
  W._TouchList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__CssRuleList_Interceptor_ListMixin.prototype = {};
  W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__GamepadList_Interceptor_ListMixin.prototype = {};
  W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__NamedNodeMap_Interceptor_ListMixin.prototype = {};
  W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__SpeechRecognitionResultList_Interceptor_ListMixin.prototype = {};
  W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__StyleSheetList_Interceptor_ListMixin.prototype = {};
  W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._StructuredClone.prototype = {
    findSlot$1: function(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      t1.push(value);
      this.copies.push(null);
      return $length;
    },
    walk$1: function(e) {
      var slot, t2, copy, _this = this, t1 = {};
      if (e == null)
        return e;
      if (H._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof P.DateTime)
        return new Date(e._value);
      if (type$.RegExp._is(e))
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (type$.File._is(e))
        return e;
      if (type$.Blob._is(e))
        return e;
      if (type$.FileList._is(e))
        return e;
      if (type$.ImageData._is(e))
        return e;
      if (type$.NativeByteBuffer._is(e) || type$.NativeTypedData._is(e) || type$.MessagePort._is(e))
        return e;
      if (type$.Map_dynamic_dynamic._is(e)) {
        slot = _this.findSlot$1(e);
        t2 = _this.copies;
        copy = t1.copy = t2[slot];
        if (copy != null)
          return copy;
        copy = {};
        t1.copy = copy;
        t2[slot] = copy;
        J.forEach$1$ax(e, new P._StructuredClone_walk_closure(t1, _this));
        return t1.copy;
      }
      if (type$.List_dynamic._is(e)) {
        slot = _this.findSlot$1(e);
        copy = _this.copies[slot];
        if (copy != null)
          return copy;
        return _this.copyList$2(e, slot);
      }
      if (type$.JSObject._is(e)) {
        slot = _this.findSlot$1(e);
        t2 = _this.copies;
        copy = t1.copy = t2[slot];
        if (copy != null)
          return copy;
        copy = {};
        t1.copy = copy;
        t2[slot] = copy;
        _this.forEachObjectKey$2(e, new P._StructuredClone_walk_closure0(t1, _this));
        return t1.copy;
      }
      throw H.wrapException(P.UnimplementedError$("structured clone of other type"));
    },
    copyList$2: function(e, slot) {
      var i,
        t1 = J.getInterceptor$asx(e),
        $length = t1.get$length(e),
        copy = new Array($length);
      this.copies[slot] = copy;
      for (i = 0; i < $length; ++i)
        copy[i] = this.walk$1(t1.$index(e, i));
      return copy;
    }
  };
  P._StructuredClone_walk_closure.prototype = {
    call$2: function(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 7
  };
  P._StructuredClone_walk_closure0.prototype = {
    call$2: function(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 7
  };
  P._AcceptStructuredClone.prototype = {
    findSlot$1: function(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      t1.push(value);
      this.copies.push(null);
      return $length;
    },
    walk$1: function(e) {
      var millisSinceEpoch, t1, proto, slot, copy, t2, l, $length, i, _this = this, _box_0 = {};
      if (e == null)
        return e;
      if (H._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof Date) {
        millisSinceEpoch = e.getTime();
        t1 = new P.DateTime(millisSinceEpoch, true);
        t1.DateTime$_withValue$2$isUtc(millisSinceEpoch, true);
        return t1;
      }
      if (e instanceof RegExp)
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (typeof Promise != "undefined" && e instanceof Promise)
        return P.promiseToFuture(e, type$.dynamic);
      proto = Object.getPrototypeOf(e);
      if (proto === Object.prototype || proto === null) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        copy = _box_0.copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = type$.dynamic;
        copy = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        _box_0.copy = copy;
        t1[slot] = copy;
        _this.forEachJsField$2(e, new P._AcceptStructuredClone_walk_closure(_box_0, _this));
        return _box_0.copy;
      }
      if (e instanceof Array) {
        l = e;
        slot = _this.findSlot$1(l);
        t1 = _this.copies;
        copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = J.getInterceptor$asx(l);
        $length = t2.get$length(l);
        copy = _this.mustCopy ? new Array($length) : l;
        t1[slot] = copy;
        for (t1 = J.getInterceptor$ax(copy), i = 0; i < $length; ++i)
          t1.$indexSet(copy, i, _this.walk$1(t2.$index(l, i)));
        return copy;
      }
      return e;
    },
    convertNativeToDart_AcceptStructuredClone$2$mustCopy: function(object, mustCopy) {
      this.mustCopy = mustCopy;
      return this.walk$1(object);
    }
  };
  P._AcceptStructuredClone_walk_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this._box_0.copy,
        t2 = this.$this.walk$1(value);
      J.$indexSet$ax(t1, key, t2);
      return t2;
    },
    $signature: 120
  };
  P.convertDartToNative_Dictionary_closure.prototype = {
    call$2: function(key, value) {
      this.object[key] = value;
    },
    $signature: 7
  };
  P._StructuredCloneDart2Js.prototype = {
    forEachObjectKey$2: function(object, action) {
      var t1, t2, _i, key;
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  P._AcceptStructuredCloneDart2Js.prototype = {
    forEachJsField$2: function(object, action) {
      var t1, t2, _i, key;
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  P.Database.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  P.Index.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  P.KeyRange.prototype = {$isKeyRange: 1};
  P.ObjectStore.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  P.VersionChangeEvent.prototype = {
    get$target: function(receiver) {
      return receiver.target;
    }
  };
  P.JsObject__convertDataTree__convert.prototype = {
    call$1: function(o) {
      var convertedMap, t2, key, convertedList,
        t1 = this._convertedObjects;
      if (t1.containsKey$1(0, o))
        return t1.$index(0, o);
      if (type$.Map_dynamic_dynamic._is(o)) {
        convertedMap = {};
        t1.$indexSet(0, o, convertedMap);
        for (t1 = J.getInterceptor$x(o), t2 = J.get$iterator$ax(t1.get$keys(o)); t2.moveNext$0();) {
          key = t2.get$current(t2);
          convertedMap[key] = this.call$1(t1.$index(o, key));
        }
        return convertedMap;
      } else if (type$.Iterable_dynamic._is(o)) {
        convertedList = [];
        t1.$indexSet(0, o, convertedList);
        C.JSArray_methods.addAll$1(convertedList, J.map$1$1$ax(o, this, type$.dynamic));
        return convertedList;
      } else
        return P._convertToJS(o);
    },
    $signature: 8
  };
  P._convertToJS_closure.prototype = {
    call$1: function(o) {
      var jsFunction = function(_call, f, captureThis) {
        return function() {
          return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunction, o, false);
      P._defineProperty(jsFunction, $.$get$DART_CLOSURE_PROPERTY_NAME(), o);
      return jsFunction;
    },
    $signature: 8
  };
  P._convertToJS_closure0.prototype = {
    call$1: function(o) {
      return new this.ctor(o);
    },
    $signature: 8
  };
  P._wrapToDart_closure.prototype = {
    call$1: function(o) {
      return new P.JsFunction(o);
    },
    $signature: 114
  };
  P._wrapToDart_closure0.prototype = {
    call$1: function(o) {
      return new P.JsArray(o, type$.JsArray_dynamic);
    },
    $signature: 106
  };
  P._wrapToDart_closure1.prototype = {
    call$1: function(o) {
      return new P.JsObject(o);
    },
    $signature: 96
  };
  P.JsObject.prototype = {
    $index: function(_, property) {
      if (typeof property != "string" && typeof property != "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      return P._convertToDart(this._js$_jsObject[property]);
    },
    $indexSet: function(_, property, value) {
      if (typeof property != "string" && typeof property != "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      this._js$_jsObject[property] = P._convertToJS(value);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.JsObject && this._js$_jsObject === other._js$_jsObject;
    },
    toString$0: function(_) {
      var t1, exception;
      try {
        t1 = String(this._js$_jsObject);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
        t1 = this.super$Object$toString(0);
        return t1;
      }
    },
    callMethod$2: function(method, args) {
      var t1 = this._js$_jsObject,
        t2 = args == null ? null : P.List_List$from(new H.MappedListIterable(args, P.js___convertToJS$closure(), H._arrayInstanceType(args)._eval$1("MappedListIterable<1,@>")), true, type$.dynamic);
      return P._convertToDart(t1[method].apply(t1, t2));
    },
    callMethod$1: function(method) {
      return this.callMethod$2(method, null);
    },
    get$hashCode: function(_) {
      return 0;
    }
  };
  P.JsFunction.prototype = {};
  P.JsArray.prototype = {
    _checkIndex$1: function(index) {
      var _this = this,
        t1 = index < 0 || index >= _this.get$length(_this);
      if (t1)
        throw H.wrapException(P.RangeError$range(index, 0, _this.get$length(_this), null, null));
    },
    $index: function(_, index) {
      if (typeof index == "number" && index === C.JSInt_methods.toInt$0(index))
        this._checkIndex$1(index);
      return this.super$JsObject$$index(0, index);
    },
    $indexSet: function(_, index, value) {
      if (typeof index == "number" && index === C.JSNumber_methods.toInt$0(index))
        this._checkIndex$1(index);
      this.super$JsObject$$indexSet(0, index, value);
    },
    get$length: function(_) {
      var len = this._js$_jsObject.length;
      if (typeof len === "number" && len >>> 0 === len)
        return len;
      throw H.wrapException(P.StateError$("Bad JsArray length"));
    },
    set$length: function(_, $length) {
      this.super$JsObject$$indexSet(0, "length", $length);
    },
    add$1: function(_, value) {
      this.callMethod$2("push", [value]);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._JsArray_JsObject_ListMixin.prototype = {};
  P.promiseToFuture_closure.prototype = {
    call$1: function(r) {
      return this.completer.complete$1(0, r);
    },
    $signature: 15
  };
  P.promiseToFuture_closure0.prototype = {
    call$1: function(e) {
      return this.completer.completeError$1(e);
    },
    $signature: 15
  };
  P._Random.prototype = {
    _Random$1: function(seed) {
      var low, high, tmplow, low0, t1, t2, t3, _this = this, _4294967296 = 4294967296;
      do {
        low = (seed & 4294967295) >>> 0;
        seed = C.JSInt_methods._tdivFast$1(seed - low, _4294967296);
        high = (seed & 4294967295) >>> 0;
        seed = C.JSInt_methods._tdivFast$1(seed - high, _4294967296);
        tmplow = ((~low & 4294967295) >>> 0) + (low << 21 >>> 0);
        low0 = (tmplow & 4294967295) >>> 0;
        high = (~high >>> 0) + ((high << 21 | low >>> 11) >>> 0) + C.JSInt_methods._tdivFast$1(tmplow - low0, _4294967296) & 4294967295;
        tmplow = ((low0 ^ (low0 >>> 24 | high << 8)) >>> 0) * 265;
        low = (tmplow & 4294967295) >>> 0;
        high = ((high ^ high >>> 24) >>> 0) * 265 + C.JSInt_methods._tdivFast$1(tmplow - low, _4294967296) & 4294967295;
        tmplow = ((low ^ (low >>> 14 | high << 18)) >>> 0) * 21;
        low = (tmplow & 4294967295) >>> 0;
        high = ((high ^ high >>> 14) >>> 0) * 21 + C.JSInt_methods._tdivFast$1(tmplow - low, _4294967296) & 4294967295;
        low = (low ^ (low >>> 28 | high << 4)) >>> 0;
        high = (high ^ high >>> 28) >>> 0;
        tmplow = (low << 31 >>> 0) + low;
        low0 = (tmplow & 4294967295) >>> 0;
        t1 = C.JSInt_methods._tdivFast$1(tmplow - low0, _4294967296);
        tmplow = _this._lo * 1037;
        t2 = _this._lo = (tmplow & 4294967295) >>> 0;
        t3 = (_this._hi * 1037 + C.JSInt_methods._tdivFast$1(tmplow - t2, _4294967296) & 4294967295) >>> 0;
        _this._hi = t3;
        t2 = (t2 ^ low0) >>> 0;
        _this._lo = t2;
        t1 = (t3 ^ high + ((high << 31 | low >>> 1) >>> 0) + t1 & 4294967295) >>> 0;
        _this._hi = t1;
      } while (seed !== 0);
      if (t1 === 0 && t2 === 0)
        _this._lo = 23063;
      _this._nextState$0();
      _this._nextState$0();
      _this._nextState$0();
      _this._nextState$0();
    },
    _nextState$0: function() {
      var _this = this,
        t1 = _this._lo,
        tmpHi = 4294901760 * t1,
        tmpHiLo = (tmpHi & 4294967295) >>> 0,
        tmpLo = 55905 * t1,
        tmpLoLo = (tmpLo & 4294967295) >>> 0,
        newLo = tmpLoLo + tmpHiLo + _this._hi;
      t1 = (newLo & 4294967295) >>> 0;
      _this._lo = t1;
      _this._hi = (C.JSInt_methods._tdivFast$1(tmpLo - tmpLoLo + (tmpHi - tmpHiLo) + (newLo - t1), 4294967296) & 4294967295) >>> 0;
    },
    nextInt$1: function(max) {
      var t1, rnd32, result, _this = this;
      if (max <= 0 || max > 4294967296)
        throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + max));
      t1 = max - 1;
      if ((max & t1) >>> 0 === 0) {
        _this._nextState$0();
        return (_this._lo & t1) >>> 0;
      }
      do {
        _this._nextState$0();
        rnd32 = _this._lo;
        result = rnd32 % max;
      } while (rnd32 - result + max >= 4294967296);
      return result;
    }
  };
  P.Point.prototype = {
    toString$0: function(_) {
      return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Point && this.x == other.x && this.y == other.y;
    },
    get$hashCode: function(_) {
      var t1 = J.get$hashCode$(this.x),
        t2 = J.get$hashCode$(this.y);
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2));
    },
    $add: function(_, other) {
      return new P.Point(this.x + other.x, this.y + other.y, this.$ti);
    },
    $sub: function(_, other) {
      return new P.Point(this.x - other.x, this.y - other.y, this.$ti);
    },
    $mul: function(_, factor) {
      return new P.Point(this.x * factor, this.y * factor, this.$ti);
    }
  };
  P._RectangleBase.prototype = {};
  P.Rectangle.prototype = {};
  P.Length.prototype = {$isLength: 1};
  P.LengthList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    clear$0: function(receiver) {
      return receiver.clear();
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P.Number.prototype = {$isNumber: 1};
  P.NumberList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    clear$0: function(receiver) {
      return receiver.clear();
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P.PointList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.ScriptElement0.prototype = {$isScriptElement0: 1};
  P.StringList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    clear$0: function(receiver) {
      return receiver.clear();
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P.SvgElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, svg, treeSanitizer, validator) {
      var t1, html, t2, fragment, svgFragment, root;
      if (validator == null) {
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_NodeValidator);
        validator = new W.NodeValidatorBuilder(t1);
        t1.push(W._Html5NodeValidator$(null));
        t1.push(W._TemplatingNodeValidator$());
        t1.push(new W._SvgNodeValidator());
      }
      treeSanitizer = new W._ValidatingTreeSanitizer(validator);
      html = '<svg version="1.1">' + svg + "</svg>";
      t1 = document;
      t2 = t1.body;
      fragment = (t2 && C.BodyElement_methods).createFragment$2$treeSanitizer(t2, html, treeSanitizer);
      svgFragment = t1.createDocumentFragment();
      fragment.toString;
      t1 = new W._ChildNodeListLazy(fragment);
      root = t1.get$single(t1);
      for (; t1 = root.firstChild, t1 != null;)
        svgFragment.appendChild(t1);
      return svgFragment;
    },
    $isSvgElement: 1
  };
  P.Transform0.prototype = {$isTransform0: 1};
  P.TransformList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    clear$0: function(receiver) {
      return receiver.clear();
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._LengthList_Interceptor_ListMixin.prototype = {};
  P._LengthList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._NumberList_Interceptor_ListMixin.prototype = {};
  P._NumberList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._StringList_Interceptor_ListMixin.prototype = {};
  P._StringList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._TransformList_Interceptor_ListMixin.prototype = {};
  P._TransformList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P.ByteBuffer.prototype = {};
  P.Endian.prototype = {};
  P.ByteData.prototype = {$isTypedData: 1};
  P.Int8List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.Uint8List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.Uint8ClampedList.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.Int16List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.Uint16List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.Int32List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.Uint32List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.Float32List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.Float64List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1, $isTypedData: 1};
  P.ClipOp.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.Canvas.prototype = {
    save$0: function(_) {
      var t1 = this._ui$_canvas;
      t1._paintBounds.saveTransformsAndClip$0();
      t1._commands.push(C.C_PaintSave);
      ++t1._saveCount;
    },
    saveLayer$2: function(bounds, paint) {
      var t1 = this._ui$_canvas;
      t1._hasArbitraryPaint = true;
      t1._commands.push(C.C_PaintSave);
      t1._paintBounds.saveTransformsAndClip$0();
      ++t1._saveCount;
    },
    restore$0: function(_) {
      var clipRect,
        t1 = this._ui$_canvas,
        t2 = t1._paintBounds;
      t2._currentMatrix = t2.__engine$_transforms.pop();
      clipRect = t2._clipStack.pop();
      if (clipRect != null) {
        t2._currentClipLeft = clipRect.left;
        t2._currentClipTop = clipRect.top;
        t2._currentClipRight = clipRect.right;
        t2._currentClipBottom = clipRect.bottom;
        t2._clipRectInitialized = true;
      } else if (t2._clipRectInitialized)
        t2._clipRectInitialized = false;
      t2 = t1._commands;
      if (t2.length !== 0 && C.JSArray_methods.get$last(t2) instanceof H.PaintSave)
        t2.pop();
      else
        t2.push(C.C_PaintRestore);
      --t1._saveCount;
    },
    translate$2: function(_, dx, dy) {
      var t1 = this._ui$_canvas,
        t2 = t1._paintBounds;
      if (dx !== 0 || dy !== 0)
        t2._currentMatrixIsIdentity = false;
      t2._currentMatrix.translate$2(0, dx, dy);
      t1._commands.push(new H.PaintTranslate(dx, dy));
    },
    scale$2: function(_, sx, sy) {
      var t1 = this._ui$_canvas,
        t2 = t1._paintBounds;
      if (sx !== 1 || sy !== 1)
        t2._currentMatrixIsIdentity = false;
      t2._currentMatrix.scale$2(0, sx, sy);
      t1._commands.push(new H.PaintScale(sx, sy));
      return null;
    },
    rotate$1: function(_, radians) {
      var cosAngle, sinAngle, t3, t4, t5, t6, t7, t8, t9, t10, t11,
        t1 = this._ui$_canvas,
        t2 = t1._paintBounds;
      if (radians !== 0)
        t2._currentMatrixIsIdentity = false;
      t2 = t2._currentMatrix;
      t2.toString;
      cosAngle = Math.cos(H.checkNum(radians));
      sinAngle = Math.sin(H.checkNum(radians));
      t2 = t2.__engine$_m4storage;
      t3 = t2[0];
      t4 = t2[4];
      t5 = t2[1];
      t6 = t2[5];
      t7 = t2[2];
      t8 = t2[6];
      t9 = t2[3];
      t10 = t2[7];
      t11 = -sinAngle;
      t2[0] = t3 * cosAngle + t4 * sinAngle;
      t2[1] = t5 * cosAngle + t6 * sinAngle;
      t2[2] = t7 * cosAngle + t8 * sinAngle;
      t2[3] = t9 * cosAngle + t10 * sinAngle;
      t2[4] = t3 * t11 + t4 * cosAngle;
      t2[5] = t5 * t11 + t6 * cosAngle;
      t2[6] = t7 * t11 + t8 * cosAngle;
      t2[7] = t9 * t11 + t10 * cosAngle;
      t1._commands.push(new H.PaintRotate(radians));
    },
    transform$1: function(_, matrix4) {
      var t1 = H.toMatrix32(matrix4),
        t2 = this._ui$_canvas,
        t3 = t2._paintBounds;
      t3._currentMatrix.multiply$1(0, new H.Matrix40(t1));
      t3._currentMatrixIsIdentity = t3._currentMatrix.isIdentity$0(0);
      t2._commands.push(new H.PaintTransform(t1));
    },
    clipRect$3$clipOp$doAntiAlias: function(rect, clipOp, doAntiAlias) {
      var t1 = this._ui$_canvas,
        command = new H.PaintClipRect(rect, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t1._paintBounds.clipRect$2(rect, command);
      t1._hasArbitraryPaint = true;
      t1._commands.push(command);
    },
    clipRect$2$doAntiAlias: function(rect, doAntiAlias) {
      return this.clipRect$3$clipOp$doAntiAlias(rect, C.ClipOp_1, doAntiAlias);
    },
    clipRect$1: function(rect) {
      return this.clipRect$3$clipOp$doAntiAlias(rect, C.ClipOp_1, true);
    },
    clipRRect$2$doAntiAlias: function(rrect, doAntiAlias) {
      var t1 = this._ui$_canvas,
        command = new H.PaintClipRRect(rrect, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t1._paintBounds.clipRect$2(new P.Rect(rrect.left, rrect.top, rrect.right, rrect.bottom), command);
      t1._hasArbitraryPaint = true;
      t1._commands.push(command);
    },
    clipRRect$1: function(rrect) {
      return this.clipRRect$2$doAntiAlias(rrect, true);
    },
    clipPath$2$doAntiAlias: function(_, path, doAntiAlias) {
      var t1 = this._ui$_canvas,
        command = new H.PaintClipPath(path, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t1._paintBounds.clipRect$2(path.getBounds$0(0), command);
      t1._hasArbitraryPaint = true;
      t1._commands.push(command);
    },
    clipPath$1: function($receiver, path) {
      return this.clipPath$2$doAntiAlias($receiver, path, true);
    },
    drawLine$3: function(p1, p2, paint) {
      var paintSpread, command, t2, t3, t4, t5,
        t1 = this._ui$_canvas;
      t1.toString;
      paintSpread = Math.max(H._getPaintSpread(paint), 1);
      paint._frozen = true;
      command = new H.PaintDrawLine(p1, p2, paint._paintData, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t2 = p1._dx;
      t3 = p2._dx;
      t4 = p1._dy;
      t5 = p2._dy;
      t1._paintBounds.growLTRB$5(Math.min(H.checkNum(t2), H.checkNum(t3)) - paintSpread, Math.min(H.checkNum(t4), H.checkNum(t5)) - paintSpread, Math.max(H.checkNum(t2), H.checkNum(t3)) + paintSpread, Math.max(H.checkNum(t4), H.checkNum(t5)) + paintSpread, command);
      t1._didDraw = t1._hasArbitraryPaint = true;
      t1._commands.push(command);
    },
    drawRect$2: function(rect, paint) {
      this._ui$_canvas.drawRect$2(rect, paint);
    },
    drawRRect$2: function(rrect, paint) {
      this._ui$_canvas.drawRRect$2(rrect, paint);
    },
    drawDRRect$3: function(outer, inner, paint) {
      this._ui$_canvas.drawDRRect$3(outer, inner, paint);
    },
    drawCircle$3: function(c, radius, paint) {
      var paintSpread, command, distance, t2, t3, t4,
        t1 = this._ui$_canvas;
      t1._didDraw = t1._hasArbitraryPaint = true;
      paintSpread = H._getPaintSpread(paint);
      paint._frozen = true;
      command = new H.PaintDrawCircle(c, radius, paint._paintData, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      distance = radius + paintSpread;
      t2 = t1._paintBounds;
      t3 = c._dx;
      t4 = c._dy;
      t2.growLTRB$5(t3 - distance, t4 - distance, t3 + distance, t4 + distance, command);
      t1._commands.push(command);
    },
    drawPath$2: function(path, paint) {
      this._ui$_canvas.drawPath$2(path, paint);
    },
    drawParagraph$2: function(paragraph, offset) {
      this._ui$_canvas.drawParagraph$2(paragraph, offset);
    },
    drawShadow$4: function(path, color, elevation, transparentOccluder) {
      var shadowRect, command,
        t1 = this._ui$_canvas;
      t1._didDraw = t1._hasArbitraryPaint = true;
      shadowRect = H.computePenumbraBounds(path.getBounds$0(0), elevation);
      command = new H.PaintDrawShadow(path, color, elevation, transparentOccluder, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t1._paintBounds.grow$2(shadowRect, command);
      t1._commands.push(command);
    }
  };
  P.PathFillType.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.RawRecordingCanvas.prototype = {};
  P._StoredMessage.prototype = {
    get$callback: function() {
      return this._ui$_callback;
    },
    callback$1: function(arg0) {
      return this.get$callback().call$1(arg0);
    }
  };
  P._RingBuffer.prototype = {
    get$length: function(_) {
      var t1 = this._ui$_queue;
      return t1.get$length(t1);
    },
    push$1: function(val) {
      var overflowCount,
        t1 = this._capacity;
      if (t1 <= 0)
        return true;
      else {
        overflowCount = this._dropOverflowItems$1(t1 - 1);
        this._ui$_queue._add$1(0, val);
        return overflowCount > 0;
      }
    },
    _dropOverflowItems$1: function(lengthLimit) {
      var t1, result, item, t2;
      for (t1 = this._ui$_queue, result = 0; (t1._tail - t1._head & t1._table.length - 1) >>> 0 > lengthLimit;) {
        item = t1.removeFirst$0();
        t2 = this._dropItemCallback;
        if (t2 != null)
          t2.call$1(item);
        ++result;
      }
      return result;
    }
  };
  P.ChannelBuffers.prototype = {
    _onDropItem$1: function(message) {
      message.callback$1(null);
    },
    drain$2: function(channel, callback) {
      return this.drain$body$ChannelBuffers(channel, callback);
    },
    drain$body$ChannelBuffers: function(channel, callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, queue, t2, result, t1;
      var $async$drain$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._messages;
            case 2:
              // while condition
              queue = t1.$index(0, channel);
              if (queue == null)
                t2 = true;
              else {
                t2 = queue._ui$_queue;
                t2 = t2._head === t2._tail;
              }
              if (!!t2) {
                // goto after while
                $async$goto = 3;
                break;
              }
              queue = t1.$index(0, channel);
              if (queue == null)
                result = null;
              else {
                t2 = queue._ui$_queue;
                result = t2._head === t2._tail ? null : t2.removeFirst$0();
              }
              $async$goto = 4;
              return P._asyncAwait(callback.call$2(result._data, result._ui$_callback), $async$drain$2);
            case 4:
              // returning from await.
              // goto while condition
              $async$goto = 2;
              break;
            case 3:
              // after while
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$drain$2, $async$completer);
    }
  };
  P.OffsetBase.prototype = {
    $lt: function(_, other) {
      return this._dx < other._dx && this._dy < other._dy;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!(other instanceof P.OffsetBase))
        return false;
      return this._dx == other._dx && this._dy == other._dy;
    },
    get$hashCode: function(_) {
      return P.hashValues(this._dx, this._dy, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = H.getRuntimeType(this).toString$0(0) + "(",
        t2 = this._dx;
      t1 = t1 + H.S(t2 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t2, 1)) + ", ";
      t2 = this._dy;
      return t1 + H.S(t2 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t2, 1)) + ")";
    }
  };
  P.Offset.prototype = {
    get$distance: function() {
      var t1 = this._dx,
        t2 = this._dy;
      return Math.sqrt(t1 * t1 + t2 * t2);
    },
    get$distanceSquared: function() {
      var t1 = this._dx,
        t2 = this._dy;
      return t1 * t1 + t2 * t2;
    },
    $sub: function(_, other) {
      return new P.Offset(this._dx - other._dx, this._dy - other._dy);
    },
    $add: function(_, other) {
      return new P.Offset(this._dx + other._dx, this._dy + other._dy);
    },
    $mul: function(_, operand) {
      return new P.Offset(this._dx * operand, this._dy * operand);
    },
    $div: function(_, operand) {
      return new P.Offset(this._dx / operand, this._dy / operand);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!(other instanceof P.Offset))
        return false;
      return this._dx == other._dx && this._dy == other._dy;
    },
    get$hashCode: function(_) {
      return P.hashValues(this._dx, this._dy, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t2,
        t1 = this._dx;
      t1 = "Offset(" + H.S(t1 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t1, 1)) + ", ";
      t2 = this._dy;
      return t1 + H.S(t2 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t2, 1)) + ")";
    }
  };
  P.Size.prototype = {
    get$isEmpty: function(_) {
      return this._dx <= 0 || this._dy <= 0;
    },
    $sub: function(_, other) {
      var _this = this;
      if (other instanceof P.Size)
        return new P.Offset(_this._dx - other._dx, _this._dy - other._dy);
      if (other instanceof P.Offset)
        return new P.Size(_this._dx - other._dx, _this._dy - other._dy);
      throw H.wrapException(P.ArgumentError$(other));
    },
    $add: function(_, other) {
      return new P.Size(this._dx + other._dx, this._dy + other._dy);
    },
    $mul: function(_, operand) {
      return new P.Size(this._dx * operand, this._dy * operand);
    },
    $div: function(_, operand) {
      return new P.Size(this._dx / operand, this._dy / operand);
    },
    center$1: function(origin) {
      return new P.Offset(origin._dx + this._dx / 2, origin._dy + this._dy / 2);
    },
    contains$1: function(_, offset) {
      var t1 = offset._dx;
      if (t1 >= 0)
        if (t1 < this._dx) {
          t1 = offset._dy;
          t1 = t1 >= 0 && t1 < this._dy;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!(other instanceof P.Size))
        return false;
      return this._dx == other._dx && this._dy == other._dy;
    },
    get$hashCode: function(_) {
      return P.hashValues(this._dx, this._dy, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t2,
        t1 = this._dx;
      t1 = "Size(" + H.S(t1 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t1, 1)) + ", ";
      t2 = this._dy;
      return t1 + H.S(t2 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t2, 1)) + ")";
    }
  };
  P.Rect.prototype = {
    get$isEmpty: function(_) {
      var _this = this;
      return _this.left >= _this.right || _this.top >= _this.bottom;
    },
    shift$1: function(offset) {
      var _this = this,
        t1 = offset._dx,
        t2 = offset._dy;
      return new P.Rect(_this.left + t1, _this.top + t2, _this.right + t1, _this.bottom + t2);
    },
    translate$2: function(_, translateX, translateY) {
      var _this = this;
      return new P.Rect(_this.left + translateX, _this.top + translateY, _this.right + translateX, _this.bottom + translateY);
    },
    inflate$1: function(delta) {
      var _this = this;
      return new P.Rect(_this.left - delta, _this.top - delta, _this.right + delta, _this.bottom + delta);
    },
    intersect$1: function(other) {
      var t2, t3, t4, _this = this,
        t1 = other.left;
      t1 = Math.max(H.checkNum(_this.left), H.checkNum(t1));
      t2 = other.top;
      t2 = Math.max(H.checkNum(_this.top), H.checkNum(t2));
      t3 = other.right;
      t3 = Math.min(H.checkNum(_this.right), H.checkNum(t3));
      t4 = other.bottom;
      return new P.Rect(t1, t2, t3, Math.min(H.checkNum(_this.bottom), H.checkNum(t4)));
    },
    expandToInclude$1: function(other) {
      var t2, t3, t4, _this = this,
        t1 = other.left;
      t1 = Math.min(H.checkNum(_this.left), H.checkNum(t1));
      t2 = other.top;
      t2 = Math.min(H.checkNum(_this.top), H.checkNum(t2));
      t3 = other.right;
      t3 = Math.max(H.checkNum(_this.right), H.checkNum(t3));
      t4 = other.bottom;
      return new P.Rect(t1, t2, t3, Math.max(H.checkNum(_this.bottom), H.checkNum(t4)));
    },
    get$shortestSide: function() {
      var _this = this;
      return Math.min(Math.abs(_this.right - _this.left), Math.abs(_this.bottom - _this.top));
    },
    get$center: function() {
      var _this = this,
        t1 = _this.left,
        t2 = _this.top;
      return new P.Offset(t1 + (_this.right - t1) / 2, t2 + (_this.bottom - t2) / 2);
    },
    contains$1: function(_, offset) {
      var _this = this,
        t1 = offset._dx;
      if (t1 >= _this.left)
        if (t1 < _this.right) {
          t1 = offset._dy;
          t1 = t1 >= _this.top && t1 < _this.bottom;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!H.getRuntimeType(_this).$eq(0, J.get$runtimeType$(other)))
        return false;
      return _this.left == other.left && _this.top == other.top && _this.right == other.right && _this.bottom == other.bottom;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.left, _this.top, _this.right, _this.bottom, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this;
      return "Rect.fromLTRB(" + J.toStringAsFixed$1$n(_this.left, 1) + ", " + J.toStringAsFixed$1$n(_this.top, 1) + ", " + J.toStringAsFixed$1$n(_this.right, 1) + ", " + J.toStringAsFixed$1$n(_this.bottom, 1) + ")";
    }
  };
  P.Radius.prototype = {
    $sub: function(_, other) {
      return new P.Radius(this.x - other.x, this.y - other.y);
    },
    $add: function(_, other) {
      return new P.Radius(this.x + other.x, this.y + other.y);
    },
    $mul: function(_, operand) {
      return new P.Radius(this.x * operand, this.y * operand);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!H.getRuntimeType(_this).$eq(0, J.get$runtimeType$(other)))
        return false;
      return other.x == _this.x && other.y == _this.y;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.x, this.y, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = this.x,
        t2 = this.y,
        t3 = J.getInterceptor$n(t1);
      return t1 == t2 ? "Radius.circular(" + t3.toStringAsFixed$1(t1, 1) + ")" : "Radius.elliptical(" + t3.toStringAsFixed$1(t1, 1) + ", " + J.toStringAsFixed$1$n(t2, 1) + ")";
    }
  };
  P.RRect.prototype = {
    shift$1: function(offset) {
      var _this = this,
        t1 = offset._dx,
        t2 = offset._dy;
      return P.RRect$_raw(_this.blRadiusX, _this.blRadiusY, _this.bottom + t2, _this.brRadiusX, _this.brRadiusY, _this.left + t1, _this.right + t1, _this.tlRadiusX, _this.tlRadiusY, _this.top + t2, _this.trRadiusX, _this.trRadiusY, false);
    },
    inflate$1: function(delta) {
      var _this = this;
      return P.RRect$_raw(_this.blRadiusX + delta, _this.blRadiusY + delta, _this.bottom + delta, _this.brRadiusX + delta, _this.brRadiusY + delta, _this.left - delta, _this.right + delta, _this.tlRadiusX + delta, _this.tlRadiusY + delta, _this.top - delta, _this.trRadiusX + delta, _this.trRadiusY + delta, false);
    },
    _getMin$4: function(min, radius1, radius2, limit) {
      var sum = radius1 + radius2;
      if (sum > limit && sum !== 0)
        return Math.min(min, limit / sum);
      return min;
    },
    scaleRadii$0: function() {
      var _this = this,
        t1 = _this.blRadiusY,
        t2 = _this.tlRadiusY,
        t3 = _this.bottom,
        t4 = _this.top,
        t5 = t3 - t4,
        t6 = _this.tlRadiusX,
        t7 = _this.trRadiusX,
        t8 = _this.right,
        t9 = _this.left,
        t10 = t8 - t9,
        t11 = _this.trRadiusY,
        t12 = _this.brRadiusY,
        t13 = _this.brRadiusX,
        t14 = _this.blRadiusX,
        scale = _this._getMin$4(_this._getMin$4(_this._getMin$4(_this._getMin$4(1, t1, t2, t5), t6, t7, t10), t11, t12, t5), t13, t14, t10);
      if (scale < 1)
        return P.RRect$_raw(t14 * scale, t1 * scale, t3, t13 * scale, t12 * scale, t9, t8, t6 * scale, t2 * scale, t4, t7 * scale, t11 * scale, false);
      return P.RRect$_raw(t14, t1, t3, t13, t12, t9, t8, t6, t2, t4, t7, t11, false);
    },
    contains$1: function(_, point) {
      var t3, scaled, radiusX, x, radiusY, y, _this = this,
        t1 = point._dx,
        t2 = _this.left;
      if (!(t1 < t2))
        if (!(t1 >= _this.right)) {
          t3 = point._dy;
          t3 = t3 < _this.top || t3 >= _this.bottom;
        } else
          t3 = true;
      else
        t3 = true;
      if (t3)
        return false;
      scaled = _this.scaleRadii$0();
      radiusX = scaled.tlRadiusX;
      if (t1 < t2 + radiusX && point._dy < _this.top + scaled.tlRadiusY) {
        x = t1 - t2 - radiusX;
        radiusY = scaled.tlRadiusY;
        y = point._dy - _this.top - radiusY;
      } else {
        t3 = _this.right;
        radiusX = scaled.trRadiusX;
        if (t1 > t3 - radiusX && point._dy < _this.top + scaled.trRadiusY) {
          x = t1 - t3 + radiusX;
          radiusY = scaled.trRadiusY;
          y = point._dy - _this.top - radiusY;
        } else {
          radiusX = scaled.brRadiusX;
          if (t1 > t3 - radiusX && point._dy > _this.bottom - scaled.brRadiusY) {
            x = t1 - t3 + radiusX;
            radiusY = scaled.brRadiusY;
            y = point._dy - _this.bottom + radiusY;
          } else {
            radiusX = scaled.blRadiusX;
            if (t1 < t2 + radiusX && point._dy > _this.bottom - scaled.blRadiusY) {
              x = t1 - t2 - radiusX;
              radiusY = scaled.blRadiusY;
              y = point._dy - _this.bottom + radiusY;
            } else
              return true;
          }
        }
      }
      x /= radiusX;
      y /= radiusY;
      if (x * x + y * y > 1)
        return false;
      return true;
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!H.getRuntimeType(_this).$eq(0, J.get$runtimeType$(other)))
        return false;
      return _this.left == other.left && _this.top == other.top && _this.right == other.right && _this.bottom == other.bottom && _this.tlRadiusX == other.tlRadiusX && _this.tlRadiusY == other.tlRadiusY && _this.trRadiusX == other.trRadiusX && _this.trRadiusY == other.trRadiusY && _this.blRadiusX == other.blRadiusX && _this.blRadiusY == other.blRadiusY && _this.brRadiusX == other.brRadiusX && _this.brRadiusY == other.brRadiusY;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.left, _this.top, _this.right, _this.bottom, _this.tlRadiusX, _this.tlRadiusY, _this.trRadiusX, _this.trRadiusY, _this.blRadiusX, _this.blRadiusY, _this.brRadiusX, _this.brRadiusY, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t5, t6, _this = this,
        rect = J.toStringAsFixed$1$n(_this.left, 1) + ", " + J.toStringAsFixed$1$n(_this.top, 1) + ", " + J.toStringAsFixed$1$n(_this.right, 1) + ", " + J.toStringAsFixed$1$n(_this.bottom, 1),
        t1 = _this.tlRadiusX,
        t2 = _this.tlRadiusY,
        t3 = _this.trRadiusX,
        t4 = _this.trRadiusY;
      if (new P.Radius(t1, t2).$eq(0, new P.Radius(t3, t4))) {
        t5 = _this.brRadiusX;
        t6 = _this.brRadiusY;
        t5 = new P.Radius(t3, t4).$eq(0, new P.Radius(t5, t6)) && new P.Radius(t5, t6).$eq(0, new P.Radius(_this.blRadiusX, _this.blRadiusY));
      } else
        t5 = false;
      if (t5) {
        if (t1 == t2)
          return "RRect.fromLTRBR(" + rect + ", " + J.toStringAsFixed$1$n(t1, 1) + ")";
        return "RRect.fromLTRBXY(" + rect + ", " + J.toStringAsFixed$1$n(t1, 1) + ", " + J.toStringAsFixed$1$n(t2, 1) + ")";
      }
      return "RRect.fromLTRBAndCorners(" + rect + ", topLeft: " + new P.Radius(t1, t2).toString$0(0) + ", topRight: " + new P.Radius(t3, t4).toString$0(0) + ", bottomRight: " + new P.Radius(_this.brRadiusX, _this.brRadiusY).toString$0(0) + ", bottomLeft: " + new P.Radius(_this.blRadiusX, _this.blRadiusY).toString$0(0) + ")";
    }
  };
  P._HashEnd.prototype = {};
  P.Color.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return _this.get$value(_this) === other.get$value(other);
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this.get$value(this));
    },
    toString$0: function(_) {
      return "Color(0x" + C.JSString_methods.padLeft$2(C.JSInt_methods.toRadixString$1(this.get$value(this), 16), 8, "0") + ")";
    },
    get$value: function(receiver) {
      return this.value;
    }
  };
  P.StrokeCap.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.StrokeJoin.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.PaintingStyle.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.BlendMode.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.Clip.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.Paint.prototype = {};
  P.Image.prototype = {};
  P.BlurStyle.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.MaskFilter.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!(other instanceof P.MaskFilter))
        return false;
      return this._ui$_style === other._ui$_style && this._sigma === other._sigma;
    },
    get$hashCode: function(_) {
      return P.hashValues(this._ui$_style, this._sigma, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "MaskFilter.blur(" + this._ui$_style.toString$0(0) + ", " + C.JSNumber_methods.toStringAsFixed$1(this._sigma, 1) + ")";
    }
  };
  P.Shadow.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof P.Shadow))
        return false;
      return J.$eq$(_this.color, other.color) && J.$eq$(_this.offset, other.offset) && _this.blurRadius == other.blurRadius;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.color, this.offset, this.blurRadius, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "TextShadow(" + H.S(this.color) + ", " + H.S(this.offset) + ", " + H.S(this.blurRadius) + ")";
    }
  };
  P.Path.prototype = {};
  P.PointerChange.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.PointerDeviceKind.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.PointerSignalKind.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.PointerData.prototype = {
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + "(x: " + H.S(this.physicalX) + ", y: " + H.S(this.physicalY) + ")";
    }
  };
  P.PointerDataPacket.prototype = {};
  P.SemanticsAction.prototype = {
    toString$0: function(_) {
      switch (this.index) {
        case 1:
          return "SemanticsAction.tap";
        case 2:
          return "SemanticsAction.longPress";
        case 4:
          return "SemanticsAction.scrollLeft";
        case 8:
          return "SemanticsAction.scrollRight";
        case 16:
          return "SemanticsAction.scrollUp";
        case 32:
          return "SemanticsAction.scrollDown";
        case 64:
          return "SemanticsAction.increase";
        case 128:
          return "SemanticsAction.decrease";
        case 256:
          return "SemanticsAction.showOnScreen";
        case 512:
          return "SemanticsAction.moveCursorForwardByCharacter";
        case 1024:
          return "SemanticsAction.moveCursorBackwardByCharacter";
        case 2048:
          return "SemanticsAction.setSelection";
        case 4096:
          return "SemanticsAction.copy";
        case 8192:
          return "SemanticsAction.cut";
        case 16384:
          return "SemanticsAction.paste";
        case 32768:
          return "SemanticsAction.didGainAccessibilityFocus";
        case 65536:
          return "SemanticsAction.didLoseAccessibilityFocus";
        case 131072:
          return "SemanticsAction.customAction";
        case 262144:
          return "SemanticsAction.dismiss";
        case 524288:
          return "SemanticsAction.moveCursorForwardByWord";
        case 1048576:
          return "SemanticsAction.moveCursorBackwardByWord";
      }
      return null;
    }
  };
  P.SemanticsFlag.prototype = {
    toString$0: function(_) {
      switch (this.index) {
        case 1:
          return "SemanticsFlag.hasCheckedState";
        case 2:
          return "SemanticsFlag.isChecked";
        case 4:
          return "SemanticsFlag.isSelected";
        case 8:
          return "SemanticsFlag.isButton";
        case 4194304:
          return "SemanticsFlag.isLink";
        case 16:
          return "SemanticsFlag.isTextField";
        case 2097152:
          return "SemanticsFlag.isFocusable";
        case 32:
          return "SemanticsFlag.isFocused";
        case 64:
          return "SemanticsFlag.hasEnabledState";
        case 128:
          return "SemanticsFlag.isEnabled";
        case 256:
          return "SemanticsFlag.isInMutuallyExclusiveGroup";
        case 512:
          return "SemanticsFlag.isHeader";
        case 1024:
          return "SemanticsFlag.isObscured";
        case 2048:
          return "SemanticsFlag.scopesRoute";
        case 4096:
          return "SemanticsFlag.namesRoute";
        case 8192:
          return "SemanticsFlag.isHidden";
        case 16384:
          return "SemanticsFlag.isImage";
        case 32768:
          return "SemanticsFlag.isLiveRegion";
        case 65536:
          return "SemanticsFlag.hasToggledState";
        case 131072:
          return "SemanticsFlag.isToggled";
        case 262144:
          return "SemanticsFlag.hasImplicitScrolling";
        case 524288:
          return "SemanticsFlag.isMultiline";
        case 1048576:
          return "SemanticsFlag.isReadOnly";
      }
      return null;
    }
  };
  P.SemanticsUpdateBuilder.prototype = {};
  P.PlaceholderAlignment.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.FontWeight.prototype = {
    toString$0: function(_) {
      return C.Map_yXAeS.$index(0, this.index);
    }
  };
  P.TextAlign.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.TextBaseline.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.TextDecoration.prototype = {
    contains$1: function(_, other) {
      var t1 = this._mask;
      return (t1 | other._mask) === t1;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!(other instanceof P.TextDecoration))
        return false;
      return this._mask === other._mask;
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this._mask);
    },
    toString$0: function(_) {
      var values,
        t1 = this._mask;
      if (t1 === 0)
        return "TextDecoration.none";
      values = H.setRuntimeTypeInfo([], type$.JSArray_String);
      if ((t1 & 1) !== 0)
        values.push("underline");
      if ((t1 & 2) !== 0)
        values.push("overline");
      if ((t1 & 4) !== 0)
        values.push("lineThrough");
      if (values.length === 1)
        return "TextDecoration." + values[0];
      return "TextDecoration.combine([" + C.JSArray_methods.join$1(values, ", ") + "])";
    }
  };
  P.TextDecorationStyle.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.TextDirection.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.TextBox.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other.left == _this.left && other.top == _this.top && other.right == _this.right && other.bottom == _this.bottom && other.direction == _this.direction;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.left, _this.top, _this.right, _this.bottom, _this.direction, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this;
      return "TextBox.fromLTRBD(" + J.toStringAsFixed$1$n(_this.left, 1) + ", " + J.toStringAsFixed$1$n(_this.top, 1) + ", " + J.toStringAsFixed$1$n(_this.right, 1) + ", " + J.toStringAsFixed$1$n(_this.bottom, 1) + ", " + H.S(_this.direction) + ")";
    }
  };
  P.TextAffinity.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.TextPosition.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other.offset == this.offset && other.affinity === this.affinity;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.offset, this.affinity, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + "(offset: " + H.S(this.offset) + ", affinity: " + this.affinity.toString$0(0) + ")";
    }
  };
  P.TextRange.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof P.TextRange))
        return false;
      return other.start == this.start && other.end == this.end;
    },
    get$hashCode: function(_) {
      return P.hashValues(J.get$hashCode$(this.start), J.get$hashCode$(this.end), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "TextRange(start: " + H.S(this.start) + ", end: " + H.S(this.end) + ")";
    }
  };
  P.ParagraphConstraints.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other.width == this.width;
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.width);
    },
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + "(width: " + H.S(this.width) + ")";
    }
  };
  P.BoxHeightStyle.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.BoxWidthStyle.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.Paragraph.prototype = {};
  P.TileMode.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.AppLifecycleState.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.WindowPadding.prototype = {
    toString$0: function(_) {
      return "WindowPadding(left: 0, top: 0, right: 0, bottom: 0)";
    }
  };
  P.Locale.prototype = {
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof P.Locale))
        return false;
      if (P.Locale__replaceDeprecatedLanguageSubtag("en") === P.Locale__replaceDeprecatedLanguageSubtag("en"))
        t1 = P.Locale__replaceDeprecatedRegionSubtag("US") === P.Locale__replaceDeprecatedRegionSubtag("US");
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return P.hashValues(P.Locale__replaceDeprecatedLanguageSubtag("en"), null, P.Locale__replaceDeprecatedRegionSubtag("US"), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = P.Locale__replaceDeprecatedLanguageSubtag("en");
      t1 += "_" + P.Locale__replaceDeprecatedRegionSubtag("US");
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P.Window0.prototype = {
    scheduleFrame$0: function() {
      var t1 = $.webOnlyScheduleFrameCallback;
      if (t1 == null)
        throw H.wrapException(P.Exception_Exception("webOnlyScheduleFrameCallback must be initialized first."));
      t1.call$0();
    }
  };
  P.AccessibilityFeatures.prototype = {
    toString$0: function(_) {
      var features = H.setRuntimeTypeInfo([], type$.JSArray_String),
        t1 = this._ui$_index;
      if ((1 & t1) !== 0)
        features.push("accessibleNavigation");
      if ((2 & t1) !== 0)
        features.push("invertColors");
      if ((4 & t1) !== 0)
        features.push("disableAnimations");
      if ((8 & t1) !== 0)
        features.push("boldText");
      if ((16 & t1) !== 0)
        features.push("reduceMotion");
      if ((32 & t1) !== 0)
        features.push("highContrast");
      return "AccessibilityFeatures" + H.S(features);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return this._ui$_index === other._ui$_index;
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this._ui$_index);
    }
  };
  P.Brightness.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.FramePhase.prototype = {
    toString$0: function(_) {
      return "FramePhase.buildStart";
    }
  };
  P.FrameTiming.prototype = {};
  P.AudioBuffer.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.AudioParamMap.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1: function(receiver, f) {
      var entry,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new P.AudioParamMap_keys_closure(keys));
      return keys;
    },
    get$values: function(receiver) {
      var values = H.setRuntimeTypeInfo([], type$.JSArray_Map_dynamic_dynamic);
      this.forEach$1(receiver, new P.AudioParamMap_values_closure(values));
      return values;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.size !== 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    remove$1: function(receiver, key) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  P.AudioParamMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return this.keys.push(k);
    }
  };
  P.AudioParamMap_values_closure.prototype = {
    call$2: function(k, v) {
      return this.values.push(v);
    }
  };
  P.AudioTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.BaseAudioContext.prototype = {};
  P.OfflineAudioContext.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P._AudioParamMap_Interceptor_MapMixin.prototype = {};
  P.ActiveInfo.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  P.SqlError.prototype = {
    get$message: function(receiver) {
      return receiver.message;
    }
  };
  P.SqlResultSetRowList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return P.convertNativeToDart_Dictionary(receiver.item(index));
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._SqlResultSetRowList_Interceptor_ListMixin.prototype = {};
  P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  Y.HeapPriorityQueue.prototype = {
    get$length: function(_) {
      return this._priority_queue$_length;
    },
    toString$0: function(_) {
      var t1 = this._priority_queue$_queue;
      return P.IterableBase_iterableToShortString(H.SubListIterable$(t1, 0, this._priority_queue$_length, H._arrayInstanceType(t1)._precomputed1), "(", ")");
    },
    _priority_queue$_add$1: function(_, element) {
      var newCapacity, newQueue, _this = this,
        t1 = _this._priority_queue$_length,
        t2 = _this._priority_queue$_queue.length;
      if (t1 === t2) {
        newCapacity = t2 * 2 + 1;
        if (newCapacity < 7)
          newCapacity = 7;
        t1 = new Array(newCapacity);
        t1.fixed$length = Array;
        newQueue = H.setRuntimeTypeInfo(t1, _this.$ti._eval$1("JSArray<1>"));
        C.JSArray_methods.setRange$3(newQueue, 0, _this._priority_queue$_length, _this._priority_queue$_queue);
        _this._priority_queue$_queue = newQueue;
      }
      _this._bubbleUp$2(element, _this._priority_queue$_length++);
    },
    _bubbleUp$2: function(element, index) {
      var t1, parentIndex, $parent, _this = this;
      for (t1 = _this.comparison; index > 0; index = parentIndex) {
        parentIndex = C.JSInt_methods._tdivFast$1(index - 1, 2);
        $parent = _this._priority_queue$_queue[parentIndex];
        if (t1.call$2(element, $parent) > 0)
          break;
        C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, $parent);
      }
      C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, element);
    },
    _bubbleDown$2: function(element, index) {
      var t1, t2, leftChildIndex, leftChild, rightChild, minChild, minChildIndex, child, _this = this,
        rightChildIndex = index * 2 + 2;
      for (t1 = _this.comparison; t2 = _this._priority_queue$_length, rightChildIndex < t2; index = minChildIndex) {
        leftChildIndex = rightChildIndex - 1;
        t2 = _this._priority_queue$_queue;
        leftChild = t2[leftChildIndex];
        rightChild = t2[rightChildIndex];
        if (t1.call$2(leftChild, rightChild) < 0) {
          minChild = leftChild;
          minChildIndex = leftChildIndex;
        } else {
          minChild = rightChild;
          minChildIndex = rightChildIndex;
        }
        if (t1.call$2(element, minChild) <= 0) {
          C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, element);
          return;
        }
        C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, minChild);
        rightChildIndex = minChildIndex * 2 + 2;
      }
      leftChildIndex = rightChildIndex - 1;
      if (leftChildIndex < t2) {
        child = _this._priority_queue$_queue[leftChildIndex];
        if (t1.call$2(element, child) > 0) {
          C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, child);
          index = leftChildIndex;
        }
      }
      C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, element);
    }
  };
  X.AnimationStatus.prototype = {
    toString$0: function(_) {
      return this._animation$_name;
    }
  };
  X.Animation0.prototype = {
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(" + H.S(this.toStringDetails$0()) + ")";
    },
    toStringDetails$0: function() {
      switch (this.get$status(this)) {
        case C.AnimationStatus_1:
          var icon = "\u25b6";
          break;
        case C.AnimationStatus_2:
          icon = "\u25c0";
          break;
        case C.AnimationStatus_3:
          icon = "\u23ed";
          break;
        case C.AnimationStatus_0:
          icon = "\u23ee";
          break;
        default:
          icon = null;
      }
      return icon;
    }
  };
  G._AnimationDirection.prototype = {
    toString$0: function(_) {
      return this._animation_controller$_name;
    }
  };
  G.AnimationBehavior.prototype = {
    toString$0: function(_) {
      return this._animation_controller$_name;
    }
  };
  G.AnimationController.prototype = {
    resync$1: function(vsync) {
      var oldTicker = this._ticker,
        t1 = this._ticker = vsync.createTicker$1(this.get$_animation_controller$_tick()),
        t2 = oldTicker._ticker$_future;
      if (t2 != null) {
        t1._ticker$_future = t2;
        t1._startTime = oldTicker._startTime;
        if (!t1._muted)
          t2 = t1._animationId == null;
        else
          t2 = false;
        if (t2)
          t1._animationId = $.SchedulerBinding__instance.scheduleFrameCallback$2$rescheduling(t1.get$_ticker$_tick(), false);
        oldTicker._ticker$_future = null;
        oldTicker.unscheduleTick$0();
      }
      oldTicker.dispose$0();
    },
    get$value: function(_) {
      return this._animation_controller$_value;
    },
    set$value: function(_, newValue) {
      var _this = this;
      _this.stop$0(0);
      _this._internalSetValue$1(newValue);
      _this.notifyListeners$0();
      _this._checkStatusChanged$0();
    },
    get$velocity: function() {
      var t1 = this._ticker;
      if (!(t1 != null && t1._ticker$_future != null))
        return 0;
      return this._simulation.dx$1(0, this._lastElapsedDuration._duration / 1000000);
    },
    _internalSetValue$1: function(newValue) {
      var _this = this,
        t1 = _this.lowerBound,
        t2 = _this.upperBound,
        t3 = _this._animation_controller$_value = J.clamp$2$n(newValue, t1, t2);
      if (t3 === t1)
        _this._animation_controller$_status = C.AnimationStatus_0;
      else if (t3 === t2)
        _this._animation_controller$_status = C.AnimationStatus_3;
      else
        _this._animation_controller$_status = _this._direction === C._AnimationDirection_0 ? C.AnimationStatus_1 : C.AnimationStatus_2;
    },
    get$status: function(_) {
      return this._animation_controller$_status;
    },
    forward$1$from: function(_, from) {
      var _this = this;
      _this._direction = C._AnimationDirection_0;
      if (from != null)
        _this.set$value(0, from);
      return _this._animateToInternal$1(_this.upperBound);
    },
    forward$0: function($receiver) {
      return this.forward$1$from($receiver, null);
    },
    reverse$1$from: function(_, from) {
      this._direction = C._AnimationDirection_1;
      return this._animateToInternal$1(this.lowerBound);
    },
    reverse$0: function($receiver) {
      return this.reverse$1$from($receiver, null);
    },
    _animateToInternal$3$curve$duration: function(target, curve, duration) {
      var scale, range, remainingFraction, simulationDuration, t1, _this = this;
      if ((4 & $.SemanticsBinding__instance.SemanticsBinding__accessibilityFeatures._ui$_index) !== 0)
        switch (_this.animationBehavior) {
          case C.AnimationBehavior_0:
            scale = 0.05;
            break;
          case C.AnimationBehavior_1:
            scale = 1;
            break;
          default:
            scale = 1;
        }
      else
        scale = 1;
      if (duration == null) {
        range = _this.upperBound - _this.lowerBound;
        remainingFraction = isFinite(range) ? Math.abs(target - _this._animation_controller$_value) / range : 1;
        simulationDuration = new P.Duration(C.JSNumber_methods.round$0((_this._direction === C._AnimationDirection_1 && _this.reverseDuration != null ? _this.reverseDuration : _this.duration)._duration * remainingFraction));
      } else
        simulationDuration = target == _this._animation_controller$_value ? C.Duration_0 : duration;
      _this.stop$0(0);
      t1 = simulationDuration._duration;
      if (t1 === 0) {
        if (_this._animation_controller$_value != target) {
          _this._animation_controller$_value = J.clamp$2$n(target, _this.lowerBound, _this.upperBound);
          _this.notifyListeners$0();
        }
        _this._animation_controller$_status = _this._direction === C._AnimationDirection_0 ? C.AnimationStatus_3 : C.AnimationStatus_0;
        _this._checkStatusChanged$0();
        t1 = new M.TickerFuture(new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
        t1._ticker$_complete$0();
        return t1;
      }
      return _this._startSimulation$1(new G._InterpolationSimulation(t1 * scale / 1000000, _this._animation_controller$_value, target, curve, C.Tolerance_Gdw));
    },
    _animateToInternal$1: function(target) {
      return this._animateToInternal$3$curve$duration(target, C.C__Linear, null);
    },
    _startSimulation$1: function(simulation) {
      var result, _this = this;
      _this._simulation = simulation;
      _this._lastElapsedDuration = C.Duration_0;
      _this._animation_controller$_value = J.clamp$2$n(simulation.x$1(0, 0), _this.lowerBound, _this.upperBound);
      result = _this._ticker.start$0(0);
      _this._animation_controller$_status = _this._direction === C._AnimationDirection_0 ? C.AnimationStatus_1 : C.AnimationStatus_2;
      _this._checkStatusChanged$0();
      return result;
    },
    stop$1$canceled: function(_, canceled) {
      this._lastElapsedDuration = this._simulation = null;
      this._ticker.stop$1$canceled(0, canceled);
    },
    stop$0: function($receiver) {
      return this.stop$1$canceled($receiver, true);
    },
    dispose$0: function() {
      this._ticker.dispose$0();
      this._ticker = null;
      this.super$AnimationEagerListenerMixin$dispose();
    },
    _checkStatusChanged$0: function() {
      var _this = this,
        newStatus = _this._animation_controller$_status;
      if (_this._lastReportedStatus != newStatus) {
        _this._lastReportedStatus = newStatus;
        _this.notifyStatusListeners$1(newStatus);
      }
    },
    _animation_controller$_tick$1: function(elapsed) {
      var elapsedInSeconds, _this = this;
      _this._lastElapsedDuration = elapsed;
      elapsedInSeconds = elapsed._duration / 1000000;
      _this._animation_controller$_value = J.clamp$2$n(_this._simulation.x$1(0, elapsedInSeconds), _this.lowerBound, _this.upperBound);
      if (_this._simulation.isDone$1(elapsedInSeconds)) {
        _this._animation_controller$_status = _this._direction === C._AnimationDirection_0 ? C.AnimationStatus_3 : C.AnimationStatus_0;
        _this.stop$1$canceled(0, false);
      }
      _this.notifyListeners$0();
      _this._checkStatusChanged$0();
    },
    toStringDetails$0: function() {
      var ticker, label, _this = this,
        t1 = _this._ticker,
        t2 = t1 == null,
        paused = !t2 && t1._ticker$_future != null ? "" : "; paused";
      if (t2)
        ticker = "; DISPOSED";
      else
        ticker = t1._muted ? "; silenced" : "";
      t1 = _this.debugLabel;
      label = t1 == null ? "" : "; for " + t1;
      return H.S(_this.super$Animation$toStringDetails()) + " " + J.toStringAsFixed$1$n(_this._animation_controller$_value, 3) + paused + ticker + label;
    }
  };
  G._InterpolationSimulation.prototype = {
    x$1: function(_, timeInSeconds) {
      var t1, t2, _this = this,
        t = C.JSDouble_methods.clamp$2(timeInSeconds / _this._durationInSeconds, 0, 1);
      if (t === 0)
        return _this._begin;
      else {
        t1 = _this._animation_controller$_end;
        if (t === 1)
          return t1;
        else {
          t2 = _this._begin;
          return t2 + (t1 - t2) * _this._curve.transform$1(0, t);
        }
      }
    },
    dx$1: function(_, timeInSeconds) {
      this.tolerance.toString;
      return (this.x$1(0, timeInSeconds + 0.001) - this.x$1(0, timeInSeconds - 0.001)) / 0.002;
    },
    isDone$1: function(timeInSeconds) {
      return timeInSeconds > this._durationInSeconds;
    }
  };
  G._AnimationController_Animation_AnimationEagerListenerMixin.prototype = {};
  G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin.prototype = {};
  G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  S._AlwaysCompleteAnimation.prototype = {
    addListener$1: function(_, listener) {
    },
    removeListener$1: function(_, listener) {
    },
    addStatusListener$1: function(listener) {
    },
    removeStatusListener$1: function(listener) {
    },
    get$status: function(_) {
      return C.AnimationStatus_3;
    },
    get$value: function(_) {
      return 1;
    },
    toString$0: function(_) {
      return "kAlwaysCompleteAnimation";
    }
  };
  S._AlwaysDismissedAnimation.prototype = {
    addListener$1: function(_, listener) {
    },
    removeListener$1: function(_, listener) {
    },
    addStatusListener$1: function(listener) {
    },
    removeStatusListener$1: function(listener) {
    },
    get$status: function(_) {
      return C.AnimationStatus_0;
    },
    get$value: function(_) {
      return 0;
    },
    toString$0: function(_) {
      return "kAlwaysDismissedAnimation";
    }
  };
  S.AnimationWithParentMixin.prototype = {
    addListener$1: function(_, listener) {
      return this.get$parent(this).addListener$1(0, listener);
    },
    removeListener$1: function(_, listener) {
      return this.get$parent(this).removeListener$1(0, listener);
    },
    addStatusListener$1: function(listener) {
      return this.get$parent(this).addStatusListener$1(listener);
    },
    removeStatusListener$1: function(listener) {
      return this.get$parent(this).removeStatusListener$1(listener);
    },
    get$status: function(_) {
      var t1 = this.get$parent(this);
      return t1.get$status(t1);
    }
  };
  S.ProxyAnimation.prototype = {
    set$parent: function(_, value) {
      var t2, _this = this,
        t1 = _this._animations$_parent;
      if (value == t1)
        return;
      if (t1 != null) {
        _this._status = t1.get$status(t1);
        t1 = _this._animations$_parent;
        _this._animations$_value = t1.get$value(t1);
        if (_this.AnimationLazyListenerMixin__listenerCounter > 0)
          _this.didStopListening$0();
      }
      _this._animations$_parent = value;
      if (value != null) {
        if (_this.AnimationLazyListenerMixin__listenerCounter > 0)
          _this.didStartListening$0();
        t1 = _this._animations$_value;
        t2 = _this._animations$_parent;
        t2 = t2.get$value(t2);
        if (t1 == null ? t2 != null : t1 !== t2)
          _this.notifyListeners$0();
        t1 = _this._status;
        t2 = _this._animations$_parent;
        if (t1 != t2.get$status(t2)) {
          t1 = _this._animations$_parent;
          _this.notifyStatusListeners$1(t1.get$status(t1));
        }
        _this._animations$_value = _this._status = null;
      }
    },
    didStartListening$0: function() {
      var _this = this,
        t1 = _this._animations$_parent;
      if (t1 != null) {
        t1.addListener$1(0, _this.get$notifyListeners());
        _this._animations$_parent.addStatusListener$1(_this.get$notifyStatusListeners());
      }
    },
    didStopListening$0: function() {
      var _this = this,
        t1 = _this._animations$_parent;
      if (t1 != null) {
        t1.removeListener$1(0, _this.get$notifyListeners());
        _this._animations$_parent.removeStatusListener$1(_this.get$notifyStatusListeners());
      }
    },
    get$status: function(_) {
      var t1 = this._animations$_parent;
      return t1 != null ? t1.get$status(t1) : this._status;
    },
    get$value: function(_) {
      var t1 = this._animations$_parent;
      return t1 != null ? t1.get$value(t1) : this._animations$_value;
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this._animations$_parent;
      if (t1 == null)
        return "ProxyAnimation(null; " + H.S(_this.super$Animation$toStringDetails()) + " " + J.toStringAsFixed$1$n(_this.get$value(_this), 3) + ")";
      return t1.toString$0(0) + "\u27a9ProxyAnimation";
    }
  };
  S.ReverseAnimation.prototype = {
    addListener$1: function(_, listener) {
      var t1;
      this.didRegisterListener$0();
      t1 = this.parent;
      t1.get$parent(t1).addListener$1(0, listener);
    },
    removeListener$1: function(_, listener) {
      this.parent.removeListener$1(0, listener);
      this.didUnregisterListener$0();
    },
    didStartListening$0: function() {
      var t1 = this.parent;
      t1.get$parent(t1).addStatusListener$1(this.get$_statusChangeHandler());
    },
    didStopListening$0: function() {
      this.parent.removeStatusListener$1(this.get$_statusChangeHandler());
    },
    _statusChangeHandler$1: function($status) {
      this.notifyStatusListeners$1(this._reverseStatus$1($status));
    },
    get$status: function(_) {
      var t1 = this.parent;
      t1 = t1.get$parent(t1);
      return this._reverseStatus$1(t1.get$status(t1));
    },
    get$value: function(_) {
      var t1 = this.parent;
      return 1 - t1.get$value(t1);
    },
    _reverseStatus$1: function($status) {
      switch ($status) {
        case C.AnimationStatus_1:
          return C.AnimationStatus_2;
        case C.AnimationStatus_2:
          return C.AnimationStatus_1;
        case C.AnimationStatus_3:
          return C.AnimationStatus_0;
        case C.AnimationStatus_0:
          return C.AnimationStatus_3;
      }
      return null;
    },
    toString$0: function(_) {
      return this.parent.toString$0(0) + "\u27aaReverseAnimation";
    }
  };
  S.CurvedAnimation.prototype = {
    _updateCurveDirection$1: function($status) {
      var _this = this;
      switch ($status) {
        case C.AnimationStatus_0:
        case C.AnimationStatus_3:
          _this._curveDirection = null;
          break;
        case C.AnimationStatus_1:
          if (_this._curveDirection == null)
            _this._curveDirection = C.AnimationStatus_1;
          break;
        case C.AnimationStatus_2:
          if (_this._curveDirection == null)
            _this._curveDirection = C.AnimationStatus_2;
          break;
      }
    },
    get$_useForwardCurve: function() {
      if (this.reverseCurve != null) {
        var t1 = this._curveDirection;
        if (t1 == null) {
          t1 = this.parent;
          t1 = t1.get$status(t1);
        }
        t1 = t1 !== C.AnimationStatus_2;
      } else
        t1 = true;
      return t1;
    },
    get$value: function(_) {
      var _this = this,
        activeCurve = _this.get$_useForwardCurve() ? _this.curve : _this.reverseCurve,
        t1 = _this.parent,
        t = t1.get$value(t1);
      if (activeCurve == null)
        return t;
      if (t === 0 || t === 1)
        return t;
      return activeCurve.transform$1(0, t);
    },
    toString$0: function(_) {
      var _this = this;
      if (_this.reverseCurve == null)
        return H.S(_this.parent) + "\u27a9" + _this.curve.toString$0(0);
      if (_this.get$_useForwardCurve())
        return H.S(_this.parent) + "\u27a9" + _this.curve.toString$0(0) + "\u2092\u2099/" + H.S(_this.reverseCurve);
      return H.S(_this.parent) + "\u27a9" + _this.curve.toString$0(0) + "/" + H.S(_this.reverseCurve) + "\u2092\u2099";
    },
    get$parent: function(receiver) {
      return this.parent;
    }
  };
  S._TrainHoppingMode.prototype = {
    toString$0: function(_) {
      return this._animations$_name;
    }
  };
  S.TrainHoppingAnimation.prototype = {
    _statusChangeHandler$1: function($status) {
      if ($status != this._lastStatus) {
        this.notifyListeners$0();
        this._lastStatus = $status;
      }
    },
    get$status: function(_) {
      var t1 = this._currentTrain;
      return t1.get$status(t1);
    },
    _valueChangeHandler$0: function() {
      var t2, hop, _this = this,
        t1 = _this._nextTrain;
      if (t1 != null) {
        switch (_this._mode) {
          case C._TrainHoppingMode_0:
            t1 = t1.get$value(t1);
            t2 = _this._currentTrain;
            hop = t1 <= t2.get$value(t2);
            break;
          case C._TrainHoppingMode_1:
            t1 = t1.get$value(t1);
            t2 = _this._currentTrain;
            hop = t1 >= t2.get$value(t2);
            break;
          default:
            hop = false;
        }
        if (hop) {
          t1 = _this._currentTrain;
          t2 = _this.get$_statusChangeHandler();
          t1.removeStatusListener$1(t2);
          t1.removeListener$1(0, _this.get$_valueChangeHandler());
          t1 = _this._nextTrain;
          _this._currentTrain = t1;
          _this._nextTrain = null;
          t1.addStatusListener$1(t2);
          t2 = _this._currentTrain;
          _this._statusChangeHandler$1(t2.get$status(t2));
        }
      } else
        hop = false;
      t1 = _this._currentTrain;
      t1 = t1.get$value(t1);
      if (t1 != _this._lastValue) {
        _this.notifyListeners$0();
        _this._lastValue = t1;
      }
      if (hop && _this.onSwitchedTrain != null)
        _this.onSwitchedTrain.call$0();
    },
    get$value: function(_) {
      var t1 = this._currentTrain;
      return t1.get$value(t1);
    },
    dispose$0: function() {
      var t1, t2, _this = this;
      _this._currentTrain.removeStatusListener$1(_this.get$_statusChangeHandler());
      t1 = _this.get$_valueChangeHandler();
      _this._currentTrain.removeListener$1(0, t1);
      _this._currentTrain = null;
      t2 = _this._nextTrain;
      if (t2 != null)
        t2.removeListener$1(0, t1);
      _this._nextTrain = null;
      _this.super$AnimationEagerListenerMixin$dispose();
    },
    toString$0: function(_) {
      var _this = this;
      if (_this._nextTrain != null)
        return H.S(_this._currentTrain) + "\u27a9TrainHoppingAnimation(next: " + H.S(_this._nextTrain) + ")";
      return H.S(_this._currentTrain) + "\u27a9TrainHoppingAnimation(no next)";
    }
  };
  S.CompoundAnimation.prototype = {
    didStartListening$0: function() {
      var t3, _this = this,
        t1 = _this.first,
        t2 = _this.get$_maybeNotifyListeners();
      t1.addListener$1(0, t2);
      t3 = _this.get$_maybeNotifyStatusListeners();
      t1.addStatusListener$1(t3);
      t1 = _this.next;
      t1.addListener$1(0, t2);
      t1.addStatusListener$1(t3);
    },
    didStopListening$0: function() {
      var t3, _this = this,
        t1 = _this.first,
        t2 = _this.get$_maybeNotifyListeners();
      t1.removeListener$1(0, t2);
      t3 = _this.get$_maybeNotifyStatusListeners();
      t1.removeStatusListener$1(t3);
      t1 = _this.next;
      t1.removeListener$1(0, t2);
      t1.removeStatusListener$1(t3);
    },
    get$status: function(_) {
      var t1 = this.next;
      if (t1.get$status(t1) === C.AnimationStatus_1 || t1.get$status(t1) === C.AnimationStatus_2)
        return t1.get$status(t1);
      t1 = this.first;
      return t1.get$status(t1);
    },
    toString$0: function(_) {
      return "CompoundAnimation(" + this.first.toString$0(0) + ", " + this.next.toString$0(0) + ")";
    },
    _maybeNotifyStatusListeners$1: function(_) {
      var _this = this;
      if (_this.get$status(_this) != _this._lastStatus) {
        _this._lastStatus = _this.get$status(_this);
        _this.notifyStatusListeners$1(_this.get$status(_this));
      }
    },
    _maybeNotifyListeners$0: function() {
      var _this = this;
      if (!J.$eq$(_this.get$value(_this), _this._lastValue)) {
        _this._lastValue = _this.get$value(_this);
        _this.notifyListeners$0();
      }
    }
  };
  S.AnimationMin.prototype = {
    get$value: function(_) {
      var t2,
        t1 = this.first;
      t1 = t1.get$value(t1);
      t2 = this.next;
      t2 = t2.get$value(t2);
      return Math.min(H.checkNum(t1), H.checkNum(t2));
    }
  };
  S._CompoundAnimation_Animation_AnimationLazyListenerMixin.prototype = {};
  S._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin.prototype = {};
  S._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  S._CurvedAnimation_Animation_AnimationWithParentMixin.prototype = {};
  S._ProxyAnimation_Animation_AnimationLazyListenerMixin.prototype = {};
  S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin.prototype = {};
  S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  S._ReverseAnimation_Animation_AnimationLazyListenerMixin.prototype = {};
  S._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin.prototype = {};
  S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin.prototype = {};
  S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin.prototype = {};
  S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  Z.ParametricCurve.prototype = {
    transform$1: function(_, t) {
      return this.transformInternal$1(t);
    },
    transformInternal$1: function(t) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    toString$0: function(_) {
      return "ParametricCurve";
    }
  };
  Z.Curve.prototype = {
    transform$1: function(_, t) {
      if (t === 0 || t === 1)
        return t;
      return this.super$ParametricCurve$transform(0, t);
    }
  };
  Z._Linear.prototype = {
    transformInternal$1: function(t) {
      return t;
    }
  };
  Z.Interval.prototype = {
    transformInternal$1: function(t) {
      var t1 = this.begin;
      t = C.JSDouble_methods.clamp$2((t - t1) / (this.end - t1), 0, 1);
      if (t === 0 || t === 1)
        return t;
      return this.curve.transform$1(0, t);
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this.curve;
      if (!(t1 instanceof Z._Linear))
        return "Interval(" + H.S(_this.begin) + "\u22ef" + H.S(_this.end) + ")\u27a9" + t1.toString$0(0);
      return "Interval(" + H.S(_this.begin) + "\u22ef" + H.S(_this.end) + ")";
    }
  };
  Z.Threshold.prototype = {
    transformInternal$1: function(t) {
      return t < 0.5 ? 0 : 1;
    }
  };
  Z.Cubic.prototype = {
    _evaluateCubic$3: function(a, b, m) {
      var t1 = 1 - m;
      return 3 * a * t1 * t1 * m + 3 * b * t1 * m * m + m * m * m;
    },
    transformInternal$1: function(t) {
      var t1, t2, start, end, midpoint, estimate, _this = this;
      for (t1 = _this.a, t2 = _this.c, start = 0, end = 1; true;) {
        midpoint = (start + end) / 2;
        estimate = _this._evaluateCubic$3(t1, t2, midpoint);
        if (Math.abs(t - estimate) < 0.001)
          return _this._evaluateCubic$3(_this.b, _this.d, midpoint);
        if (estimate < t)
          start = midpoint;
        else
          end = midpoint;
      }
    },
    toString$0: function(_) {
      var _this = this;
      return "Cubic(" + C.JSNumber_methods.toStringAsFixed$1(_this.a, 2) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.b, 2) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.c, 2) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.d, 2) + ")";
    }
  };
  Z.FlippedCurve.prototype = {
    transformInternal$1: function(t) {
      return 1 - this.curve.transform$1(0, 1 - t);
    },
    toString$0: function(_) {
      return "FlippedCurve(" + this.curve.toString$0(0) + ")";
    }
  };
  Z._DecelerateCurve.prototype = {
    transformInternal$1: function(t) {
      t = 1 - t;
      return 1 - t * t;
    }
  };
  S.AnimationLazyListenerMixin.prototype = {
    didRegisterListener$0: function() {
      if (this.AnimationLazyListenerMixin__listenerCounter === 0)
        this.didStartListening$0();
      ++this.AnimationLazyListenerMixin__listenerCounter;
    },
    didUnregisterListener$0: function() {
      if (--this.AnimationLazyListenerMixin__listenerCounter === 0)
        this.didStopListening$0();
    }
  };
  S.AnimationEagerListenerMixin.prototype = {
    didRegisterListener$0: function() {
    },
    didUnregisterListener$0: function() {
    },
    dispose$0: function() {
    }
  };
  S.AnimationLocalListenersMixin.prototype = {
    addListener$1: function(_, listener) {
      var t1;
      this.didRegisterListener$0();
      t1 = this.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._list.push(listener);
    },
    removeListener$1: function(_, listener) {
      if (this.AnimationLocalListenersMixin__listeners.remove$1(0, listener))
        this.didUnregisterListener$0();
    },
    notifyListeners$0: function() {
      var listener, exception, stack, t2, _i, exception0, t3, _null = null,
        t1 = this.AnimationLocalListenersMixin__listeners,
        localListeners = P.List_List$from(t1, true, type$.void_Function);
      for (t2 = localListeners.length, _i = 0; _i < localListeners.length; localListeners.length === t2 || (0, H.throwConcurrentModificationError)(localListeners), ++_i) {
        listener = localListeners[_i];
        try {
          if (t1.contains$1(0, listener))
            listener.call$0();
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          t3 = "while notifying listeners for " + H.getRuntimeType(this).toString$0(0);
          $.$get$FlutterError_onError().call$1(new U.FlutterErrorDetails(exception, stack, "animation library", new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t3], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), _null, false));
        }
      }
    }
  };
  S.AnimationLocalStatusListenersMixin.prototype = {
    addStatusListener$1: function(listener) {
      var t1;
      this.didRegisterListener$0();
      t1 = this.AnimationLocalStatusListenersMixin__statusListeners;
      t1._isDirty = true;
      t1._list.push(listener);
    },
    removeStatusListener$1: function(listener) {
      if (this.AnimationLocalStatusListenersMixin__statusListeners.remove$1(0, listener))
        this.didUnregisterListener$0();
    },
    notifyStatusListeners$1: function($status) {
      var listener, exception, stack, t2, _i, exception0, t3, _null = null,
        t1 = this.AnimationLocalStatusListenersMixin__statusListeners,
        localListeners = P.List_List$from(t1, true, type$.void_Function_AnimationStatus);
      for (t2 = localListeners.length, _i = 0; _i < localListeners.length; localListeners.length === t2 || (0, H.throwConcurrentModificationError)(localListeners), ++_i) {
        listener = localListeners[_i];
        try {
          if (t1.contains$1(0, listener))
            listener.call$1($status);
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          t3 = "while notifying status listeners for " + H.getRuntimeType(this).toString$0(0);
          $.$get$FlutterError_onError().call$1(new U.FlutterErrorDetails(exception, stack, "animation library", new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t3], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), _null, false));
        }
      }
    }
  };
  R.Animatable.prototype = {
    chain$1: function($parent) {
      return new R._ChainedEvaluation($parent, this, H._instanceType(this)._eval$1("_ChainedEvaluation<Animatable.T>"));
    }
  };
  R._AnimatedEvaluation.prototype = {
    get$value: function(_) {
      var t1 = this.parent;
      return this._evaluatable.transform$1(0, t1.get$value(t1));
    },
    toString$0: function(_) {
      var t1 = this.parent,
        t2 = this._evaluatable;
      return t1.toString$0(0) + "\u27a9" + t2.toString$0(0) + "\u27a9" + H.S(t2.transform$1(0, t1.get$value(t1)));
    },
    toStringDetails$0: function() {
      return H.S(this.super$Animation$toStringDetails()) + " " + this._evaluatable.toString$0(0);
    },
    get$parent: function(receiver) {
      return this.parent;
    }
  };
  R._ChainedEvaluation.prototype = {
    transform$1: function(_, t) {
      return this._evaluatable.transform$1(0, this._tween$_parent.transform$1(0, t));
    },
    toString$0: function(_) {
      return H.S(this._tween$_parent) + "\u27a9" + this._evaluatable.toString$0(0);
    }
  };
  R.Tween.prototype = {
    lerp$1: function(t) {
      var t1 = this.begin;
      return H._instanceType(this)._eval$1("Tween.T")._as(J.$add$ansx(t1, J.$mul$ns(J.$sub$n(this.end, t1), t)));
    },
    transform$1: function(_, t) {
      if (t === 0)
        return this.begin;
      if (t === 1)
        return this.end;
      return this.lerp$1(t);
    },
    toString$0: function(_) {
      return "Animatable(" + H.S(this.begin) + " \u2192 " + H.S(this.end) + ")";
    },
    set$begin: function(val) {
      return this.begin = val;
    },
    set$end: function(receiver, val) {
      return this.end = val;
    }
  };
  R.ReverseTween.prototype = {
    lerp$1: function(t) {
      return this.parent.lerp$1(1 - t);
    }
  };
  R.ColorTween.prototype = {
    lerp$1: function(t) {
      return P.Color_lerp(this.begin, this.end, t);
    }
  };
  R.RectTween.prototype = {
    lerp$1: function(t) {
      return P.Rect_lerp(this.begin, this.end, t);
    }
  };
  R.IntTween.prototype = {
    lerp$1: function(t) {
      var t1 = this.begin;
      return C.JSNumber_methods.round$0(t1 + (this.end - t1) * t);
    }
  };
  R.CurveTween.prototype = {
    transform$1: function(_, t) {
      if (t === 0 || t === 1)
        return t;
      return this.curve.transform$1(0, t);
    },
    toString$0: function(_) {
      return "CurveTween(curve: " + this.curve.toString$0(0) + ")";
    }
  };
  R.__AnimatedEvaluation_Animation_AnimationWithParentMixin.prototype = {};
  E.CupertinoDynamicColor.prototype = {
    get$value: function(_) {
      return this._effectiveColor.value;
    },
    get$_isPlatformBrightnessDependent: function() {
      var _this = this;
      return !_this.color.$eq(0, _this.darkColor) || !_this.elevatedColor.$eq(0, _this.darkElevatedColor) || !_this.highContrastColor.$eq(0, _this.darkHighContrastColor) || !_this.highContrastElevatedColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    get$_isHighContrastDependent: function() {
      var _this = this;
      return !_this.color.$eq(0, _this.highContrastColor) || !_this.darkColor.$eq(0, _this.darkHighContrastColor) || !_this.elevatedColor.$eq(0, _this.highContrastElevatedColor) || !_this.darkElevatedColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    get$_isInterfaceElevationDependent: function() {
      var _this = this;
      return !_this.color.$eq(0, _this.elevatedColor) || !_this.darkColor.$eq(0, _this.darkElevatedColor) || !_this.highContrastColor.$eq(0, _this.highContrastElevatedColor) || !_this.darkHighContrastColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof E.CupertinoDynamicColor && other._effectiveColor.value === _this._effectiveColor.value && other.color.$eq(0, _this.color) && other.darkColor.$eq(0, _this.darkColor) && other.highContrastColor.$eq(0, _this.highContrastColor) && other.darkHighContrastColor.$eq(0, _this.darkHighContrastColor) && other.elevatedColor.$eq(0, _this.elevatedColor) && other.darkElevatedColor.$eq(0, _this.darkElevatedColor) && other.highContrastElevatedColor.$eq(0, _this.highContrastElevatedColor) && other.darkHighContrastElevatedColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this._effectiveColor.value, _this.color, _this.darkColor, _this.highContrastColor, _this.elevatedColor, _this.darkElevatedColor, _this.darkHighContrastColor, _this.darkHighContrastElevatedColor, _this.highContrastElevatedColor, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this,
        t1 = new E.CupertinoDynamicColor_toString_toString(_this),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_String);
      t2.push(t1.call$2("color", _this.color));
      if (_this.get$_isPlatformBrightnessDependent())
        t2.push(t1.call$2("darkColor", _this.darkColor));
      if (_this.get$_isHighContrastDependent())
        t2.push(t1.call$2("highContrastColor", _this.highContrastColor));
      if (_this.get$_isPlatformBrightnessDependent() && _this.get$_isHighContrastDependent())
        t2.push(t1.call$2("darkHighContrastColor", _this.darkHighContrastColor));
      if (_this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("elevatedColor", _this.elevatedColor));
      if (_this.get$_isPlatformBrightnessDependent() && _this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("darkElevatedColor", _this.darkElevatedColor));
      if (_this.get$_isHighContrastDependent() && _this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("highContrastElevatedColor", _this.highContrastElevatedColor));
      if (_this.get$_isPlatformBrightnessDependent() && _this.get$_isHighContrastDependent() && _this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("darkHighContrastElevatedColor", _this.darkHighContrastElevatedColor));
      t1 = _this._colors$_debugLabel;
      t1 = (t1 == null ? "CupertinoDynamicColor" : t1) + "(" + C.JSArray_methods.join$1(t2, ", ");
      return t1 + ", resolved by: UNRESOLVED)";
    }
  };
  E.CupertinoDynamicColor_toString_toString.prototype = {
    call$2: function($name, color) {
      var marker = color.$eq(0, this.$this._effectiveColor) ? "*" : "";
      return marker + $name + " = " + color.toString$0(0) + marker;
    }
  };
  E._CupertinoDynamicColor_Color_Diagnosticable.prototype = {};
  T.CupertinoIconThemeData.prototype = {
    resolve$1: function(context) {
      var t1 = this.color,
        resolvedColor = E.CupertinoDynamicColor_resolve(t1, context);
      return J.$eq$(resolvedColor, t1) ? this : this.copyWith$1$color(resolvedColor);
    },
    copyWith$3$color$opacity$size: function(color, opacity, size) {
      var _this = this,
        t1 = color == null ? _this.color : color,
        t2 = opacity == null ? _this.get$opacity(_this) : opacity;
      return new T.CupertinoIconThemeData(t1, t2, size == null ? _this.size : size);
    },
    copyWith$1$color: function(color) {
      return this.copyWith$3$color$opacity$size(color, null, null);
    }
  };
  T._CupertinoIconThemeData_IconThemeData_Diagnosticable.prototype = {};
  K.CupertinoUserInterfaceLevelData.prototype = {
    toString$0: function(_) {
      return this._interface_level$_name;
    }
  };
  K.CupertinoUserInterfaceLevel.prototype = {};
  L.CupertinoLocalizations.prototype = {};
  L._CupertinoLocalizationsDelegate.prototype = {
    isSupported$1: function(locale) {
      locale.toString;
      return P.Locale__replaceDeprecatedLanguageSubtag("en") === "en";
    },
    load$1: function(_, locale) {
      return new O.SynchronousFuture(C.C_DefaultCupertinoLocalizations, type$.SynchronousFuture_CupertinoLocalizations);
    },
    shouldReload$1: function(old) {
      return false;
    },
    toString$0: function(_) {
      return "DefaultCupertinoLocalizations.delegate(en_US)";
    }
  };
  L.DefaultCupertinoLocalizations.prototype = {$isCupertinoLocalizations: 1};
  D.CupertinoPageRoute_buildPageTransitions_closure.prototype = {
    call$0: function() {
      return D.CupertinoPageRoute__isPopGestureEnabled(this.route);
    },
    $signature: 26
  };
  D.CupertinoPageRoute_buildPageTransitions_closure0.prototype = {
    call$0: function() {
      var t1 = this.route,
        t2 = t1._navigator$_navigator;
      t1 = t1._controller;
      t2.didStartUserGesture$0();
      return new D._CupertinoBackGestureController(t1, t2);
    },
    $signature: function() {
      return this.T._eval$1("_CupertinoBackGestureController<0>()");
    }
  };
  D.CupertinoPageTransition.prototype = {
    build$1: function(context) {
      var _this = this,
        textDirection = T.Directionality_of(context),
        t1 = _this._primaryShadowAnimation;
      return K.SlideTransition$(K.SlideTransition$(new K.DecoratedBoxTransition(t1, _this.child, t1, null), _this._primaryPositionAnimation, textDirection, true), _this._secondaryPositionAnimation, textDirection, false);
    }
  };
  D._CupertinoBackGestureDetector.prototype = {
    createState$0: function() {
      return new D._CupertinoBackGestureDetectorState(C._StateLifecycle_0, this.$ti._eval$1("_CupertinoBackGestureDetectorState<1>"));
    },
    enabledCallback$0: function() {
      return this.enabledCallback.call$0();
    },
    onStartPopGesture$0: function() {
      return this.onStartPopGesture.call$0();
    }
  };
  D._CupertinoBackGestureDetectorState.prototype = {
    initState$0: function() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = type$.int;
      t1 = new O.HorizontalDragGestureRecognizer(C.DragStartBehavior_1, C._DragState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), _this, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
      t1.onStart = _this.get$_handleDragStart();
      t1.onUpdate = _this.get$_handleDragUpdate();
      t1.onEnd = _this.get$_handleDragEnd();
      t1.onCancel = _this.get$_handleDragCancel();
      _this._recognizer = t1;
    },
    dispose$0: function() {
      var t1 = this._recognizer;
      t1._velocityTrackers.clear$0(0);
      t1.super$OneSequenceGestureRecognizer$dispose();
      this.super$State$dispose();
    },
    _handleDragStart$1: function(details) {
      this._backGestureController = this._widget.onStartPopGesture$0();
    },
    _handleDragUpdate$1: function(details) {
      var t1 = this._backGestureController,
        t2 = details.primaryDelta,
        t3 = this._framework$_element;
      t3 = this._convertToLogical$1(t2 / t3.get$size(t3)._dx);
      t1 = t1.controller;
      t1.set$value(0, t1._animation_controller$_value - t3);
    },
    _handleDragEnd$1: function(details) {
      var _this = this,
        t1 = _this._backGestureController,
        t2 = details.velocity,
        t3 = _this._framework$_element;
      t1.dragEnd$1(_this._convertToLogical$1(t2.pixelsPerSecond._dx / t3.get$size(t3)._dx));
      _this._backGestureController = null;
    },
    _handleDragCancel$0: function() {
      var t1 = this._backGestureController;
      if (t1 != null)
        t1.dragEnd$1(0);
      this._backGestureController = null;
    },
    _route$_handlePointerDown$1: function($event) {
      if (this._widget.enabledCallback$0())
        this._recognizer.addPointer$1($event);
    },
    _convertToLogical$1: function(value) {
      switch (T.Directionality_of(this._framework$_element)) {
        case C.TextDirection_0:
          return -value;
        case C.TextDirection_1:
          return value;
      }
      return null;
    },
    build$1: function(context) {
      var _null = null,
        dragAreaWidth = Math.max(H.checkNum(T.Directionality_of(context) === C.TextDirection_1 ? F.MediaQuery_of(context, false).padding.left : F.MediaQuery_of(context, false).padding.right), 20);
      return T.Stack$(C.AlignmentDirectional_m1_m1, H.setRuntimeTypeInfo([this._widget.child, new T.PositionedDirectional(0, 0, 0, dragAreaWidth, T.Listener$(C.HitTestBehavior_2, _null, _null, this.get$_route$_handlePointerDown(), _null, _null), _null)], type$.JSArray_Widget), C.StackFit_2);
    }
  };
  D._CupertinoBackGestureController.prototype = {
    dragEnd$1: function(velocity) {
      var t2, t3, animationStatusCallback, _this = this, t1 = {};
      if (Math.abs(velocity) >= 1 ? velocity <= 0 : _this.controller._animation_controller$_value > 0.5) {
        t2 = _this.controller;
        t3 = P.Duration$(0, Math.min(J.floor$0$n(P.lerpDouble(800, 0, t2._animation_controller$_value)), 300));
        t2._direction = C._AnimationDirection_0;
        t2._animateToInternal$3$curve$duration(1, C.Cubic_2Vk, t3);
      } else {
        _this.navigator.pop$0();
        t2 = _this.controller;
        t3 = t2._ticker;
        if (t3 != null && t3._ticker$_future != null) {
          t3 = P.Duration$(0, J.floor$0$n(P.lerpDouble(0, 800, t2._animation_controller$_value)));
          t2._direction = C._AnimationDirection_1;
          t2._animateToInternal$3$curve$duration(0, C.Cubic_2Vk, t3);
        }
      }
      t3 = t2._ticker;
      if (t3 != null && t3._ticker$_future != null) {
        t1.animationStatusCallback = null;
        animationStatusCallback = new D._CupertinoBackGestureController_dragEnd_closure(t1, _this);
        t1.animationStatusCallback = animationStatusCallback;
        t2.addStatusListener$1(animationStatusCallback);
      } else
        _this.navigator.didStopUserGesture$0();
    }
  };
  D._CupertinoBackGestureController_dragEnd_closure.prototype = {
    call$1: function($status) {
      var t1 = this.$this;
      t1.navigator.didStopUserGesture$0();
      t1.controller.removeStatusListener$1(this._box_0.animationStatusCallback);
    },
    $signature: 45
  };
  D._CupertinoEdgeShadowDecoration.prototype = {
    lerpFrom$2: function(a, t) {
      if (a instanceof D._CupertinoEdgeShadowDecoration)
        return D._CupertinoEdgeShadowDecoration_lerp(a, this, t);
      return D._CupertinoEdgeShadowDecoration_lerp(null, this, t);
    },
    lerpTo$2: function(b, t) {
      if (b instanceof D._CupertinoEdgeShadowDecoration)
        return D._CupertinoEdgeShadowDecoration_lerp(this, b, t);
      return D._CupertinoEdgeShadowDecoration_lerp(this, null, t);
    },
    createBoxPainter$1: function(onChanged) {
      return new D._CupertinoEdgeShadowPainter(this, onChanged);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof D._CupertinoEdgeShadowDecoration && J.$eq$(other.edgeGradient, this.edgeGradient);
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.edgeGradient);
    }
  };
  D._CupertinoEdgeShadowPainter.prototype = {
    paint$3: function(canvas, offset, configuration) {
      var textDirection, deltaX, t1, t2, t3, rect, paint, t4, t5,
        gradient = this._route$_decoration.edgeGradient;
      if (gradient == null)
        return;
      textDirection = configuration.textDirection;
      switch (textDirection) {
        case C.TextDirection_0:
          deltaX = configuration.size._dx;
          break;
        case C.TextDirection_1:
          deltaX = -configuration.size._dx;
          break;
        default:
          deltaX = null;
      }
      t1 = configuration.size;
      t2 = offset._dx;
      t3 = offset._dy;
      rect = new P.Rect(t2, t3, t2 + t1._dx, t3 + t1._dy).translate$2(0, deltaX, 0);
      paint = new H.SurfacePaint(new H.SurfacePaintData());
      t1 = gradient.begin.resolve$1(textDirection).withinRect$1(rect);
      t2 = gradient.end.resolve$1(textDirection).withinRect$1(rect);
      t3 = gradient.colors;
      t4 = gradient._impliedStops$0();
      t5 = gradient.tileMode;
      paint.set$shader(H.GradientLinear$(t1, t2, t3, t4, t5));
      canvas.drawRect$2(rect, paint);
    }
  };
  E.CupertinoScrollbar.prototype = {
    createState$0: function() {
      return new E._CupertinoScrollbarState(new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), null, C._StateLifecycle_0);
    }
  };
  E._CupertinoScrollbarState.prototype = {
    get$_thickness: function() {
      return 3 + this._thicknessAnimationController._animation_controller$_value * 5;
    },
    initState$0: function() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      t1 = G.AnimationController$(_null, C.Duration_250000, 0, _null, 1, _null, _this);
      _this._fadeoutAnimationController = t1;
      _this._fadeoutOpacityAnimation = S.CurvedAnimation$(C.Cubic_ifx, t1, _null);
      t1 = _this._thicknessAnimationController = G.AnimationController$(_null, C.Duration_100000, 0, _null, 1, _null, _this);
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._list.push(new E._CupertinoScrollbarState_initState_closure(_this));
    },
    didChangeDependencies$0: function() {
      var t1, t2, t3, t4, t5, t6, _this = this;
      _this.super$__CupertinoScrollbarState_State_TickerProviderStateMixin$didChangeDependencies();
      t1 = _this._scrollbar0$_painter;
      t2 = _this._framework$_element;
      if (t1 == null) {
        t1 = E.CupertinoDynamicColor_resolve(C.CupertinoDynamicColor_zPV, t2);
        t3 = T.Directionality_of(t2);
        t4 = _this.get$_thickness();
        t5 = _this._fadeoutOpacityAnimation;
        t6 = P.Radius_lerp(C.Radius_ydE, C.Radius_4_4, _this._thicknessAnimationController._animation_controller$_value);
        _this._scrollbar0$_painter = E.ScrollbarPainter$(t1, 3, t5, 3, 36, 8, F.MediaQuery_of(t2, false).padding, t6, t3, t4);
      } else {
        t1.set$textDirection(T.Directionality_of(t2));
        t1.set$color(0, E.CupertinoDynamicColor_resolve(C.CupertinoDynamicColor_zPV, _this._framework$_element));
        t1.set$padding(0, F.MediaQuery_of(_this._framework$_element, false).padding);
      }
      $.WidgetsBinding__instance.SchedulerBinding__postFrameCallbacks.push(new E._CupertinoScrollbarState_didChangeDependencies_closure(_this));
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._widget.toString;
      oldWidget.toString;
    },
    _dragScrollbar$1: function(primaryDelta) {
      var t2, _this = this, _null = null,
        scrollOffsetLocal = _this._scrollbar0$_painter.getTrackToScroll$1(primaryDelta),
        scrollOffsetGlobal = scrollOffsetLocal + C.JSArray_methods.get$single(_this._currentController._positions)._pixels,
        t1 = _this._scrollbar0$_drag;
      if (t1 == null)
        _this._scrollbar0$_drag = C.JSArray_methods.get$single(_this._currentController._positions).drag$2(O.DragStartDetails$(new P.Offset(0, scrollOffsetGlobal), _null, _null), new E._CupertinoScrollbarState__dragScrollbar_closure());
      else {
        t2 = -scrollOffsetLocal;
        t1.update$1(0, O.DragUpdateDetails$(new P.Offset(0, t2), new P.Offset(0, scrollOffsetGlobal), _null, t2, _null));
      }
    },
    _startFadeoutTimer$0: function() {
      var t1, _this = this;
      _this._widget.toString;
      t1 = _this._fadeoutTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._fadeoutTimer = P.Timer_Timer(C.Duration_1200000, new E._CupertinoScrollbarState__startFadeoutTimer_closure(_this));
    },
    _checkVertical$0: function() {
      var t1, exception;
      try {
        t1 = G.axisDirectionToAxis(C.JSArray_methods.get$single(this._currentController._positions).get$axisDirection());
        return t1 === C.Axis_1;
      } catch (exception) {
        H.unwrapException(exception);
        return false;
      }
    },
    _handleLongPressStart$1: function(details) {
      var t1, t2, _this = this;
      _this._widget.toString;
      t1 = E.PrimaryScrollController_of(_this._framework$_element);
      _this._currentController = t1;
      if (!_this._checkVertical$0())
        return;
      t1 = _this._pressStartY = details.localPosition._dy;
      t2 = _this._fadeoutTimer;
      if (t2 != null)
        t2.cancel$0(0);
      _this._fadeoutAnimationController.forward$0(0);
      _this._dragScrollbar$1(t1);
      _this._dragScrollbarPositionY = t1;
    },
    _scrollbar0$_handleLongPress$0: function() {
      if (!this._checkVertical$0())
        return;
      var t1 = this._fadeoutTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._thicknessAnimationController.forward$0(0).then$1$1(new E._CupertinoScrollbarState__handleLongPress_closure(), type$.void);
    },
    _handleLongPressMoveUpdate$1: function(details) {
      var t1, _this = this;
      if (!_this._checkVertical$0())
        return;
      t1 = details.localPosition._dy;
      _this._dragScrollbar$1(t1 - _this._dragScrollbarPositionY);
      _this._dragScrollbarPositionY = t1;
    },
    _handleLongPressEnd$1: function(details) {
      var t1, scrollVelocityY, t2, t3, _this = this;
      if (!_this._checkVertical$0())
        return;
      t1 = details.velocity.pixelsPerSecond._dy;
      _this._startFadeoutTimer$0();
      _this._thicknessAnimationController.reverse$0(0);
      _this._dragScrollbarPositionY = null;
      scrollVelocityY = _this._scrollbar0$_painter.getTrackToScroll$1(t1);
      t2 = _this._scrollbar0$_drag;
      if (t2 != null) {
        t3 = -scrollVelocityY;
        t2.end$1(0, new O.DragEndDetails(new R.Velocity(new P.Offset(0, t3)), t3));
      }
      _this._scrollbar0$_drag = null;
      if (Math.abs(t1) < 10 && Math.abs(details.localPosition._dy - _this._pressStartY) > 0)
        X.HapticFeedback_mediumImpact();
      _this._currentController = null;
    },
    _scrollbar0$_handleScrollNotification$1: function(notification) {
      var t1, _this = this,
        metrics = notification.metrics;
      if (metrics.maxScrollExtent <= metrics.minScrollExtent)
        return false;
      if (notification instanceof G.ScrollUpdateNotification || notification instanceof G.OverscrollNotification) {
        t1 = _this._fadeoutAnimationController;
        if (t1._animation_controller$_status !== C.AnimationStatus_1)
          t1.forward$0(0);
        t1 = _this._fadeoutTimer;
        if (t1 != null)
          t1.cancel$0(0);
        t1 = _this._scrollbar0$_painter;
        t1._lastMetrics = metrics;
        t1._lastAxisDirection = metrics.axisDirection;
        t1.notifyListeners$0();
      } else if (notification instanceof G.ScrollEndNotification)
        if (_this._dragScrollbarPositionY == null)
          _this._startFadeoutTimer$0();
      return false;
    },
    get$_gestures: function() {
      var gestures = P.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.GestureRecognizerFactory_GestureRecognizer);
      gestures.$indexSet(0, C.Type__ThumbPressGestureRecognizer_SP2, new D.GestureRecognizerFactoryWithHandlers(new E._CupertinoScrollbarState__gestures_closure(this), new E._CupertinoScrollbarState__gestures_closure0(this), type$.GestureRecognizerFactoryWithHandlers__ThumbPressGestureRecognizer));
      return gestures;
    },
    dispose$0: function() {
      var t1, t2, t3, _this = this;
      _this._fadeoutAnimationController.dispose$0();
      _this._thicknessAnimationController.dispose$0();
      t1 = _this._fadeoutTimer;
      if (t1 != null)
        t1.cancel$0(0);
      t1 = _this._scrollbar0$_painter;
      t2 = t1.fadeoutOpacityAnimation;
      t3 = t1.get$notifyListeners();
      t2.parent.removeListener$1(0, t3);
      t1.super$ChangeNotifier$dispose();
      _this.super$__CupertinoScrollbarState_State_TickerProviderStateMixin$dispose();
    },
    build$1: function(context) {
      var _this = this, _null = null,
        t1 = _this.get$_gestures(),
        t2 = _this._scrollbar0$_painter;
      return U.NotificationListener$(new T.RepaintBoundary(D.RawGestureDetector$(_null, T.CustomPaint$(new T.RepaintBoundary(_this._widget.child, _null), t2, _this._customPaintKey, _null), false, t1, _null, _null), _null), _this.get$_scrollbar0$_handleScrollNotification(), type$.ScrollNotification);
    }
  };
  E._CupertinoScrollbarState_initState_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._scrollbar0$_painter,
        t3 = t1.get$_thickness();
      t1 = P.Radius_lerp(C.Radius_ydE, C.Radius_4_4, t1._thicknessAnimationController._animation_controller$_value);
      t2.thickness = t3;
      t2.radius = t1;
      t2.notifyListeners$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  E._CupertinoScrollbarState_didChangeDependencies_closure.prototype = {
    call$1: function(duration) {
      this.$this._widget.toString;
    },
    $signature: 6
  };
  E._CupertinoScrollbarState__dragScrollbar_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  E._CupertinoScrollbarState__startFadeoutTimer_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._fadeoutAnimationController.reverse$0(0);
      t1._fadeoutTimer = null;
    },
    $signature: 0
  };
  E._CupertinoScrollbarState__handleLongPress_closure.prototype = {
    call$1: function(_) {
      return X.HapticFeedback_mediumImpact();
    },
    $signature: 73
  };
  E._CupertinoScrollbarState__gestures_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = type$.int;
      return new E._ThumbPressGestureRecognizer(t1._customPaintKey, C.Duration_100000, null, C.GestureRecognizerState_0, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.GestureArenaEntry), P.HashSet_HashSet(t2), t1, null, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 74
  };
  E._CupertinoScrollbarState__gestures_closure0.prototype = {
    call$1: function(instance) {
      var t1 = this.$this;
      instance.onLongPressStart = t1.get$_handleLongPressStart();
      instance.onLongPress = t1.get$_scrollbar0$_handleLongPress();
      instance.onLongPressMoveUpdate = t1.get$_handleLongPressMoveUpdate();
      instance.onLongPressEnd = t1.get$_handleLongPressEnd();
    }
  };
  E._ThumbPressGestureRecognizer.prototype = {
    isPointerAllowed$1: function($event) {
      if (!E._hitTestInteractive(this._customPaintKey, $event.position))
        return false;
      return this.super$LongPressGestureRecognizer$isPointerAllowed($event);
    }
  };
  E.__CupertinoScrollbarState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var muted = !U.TickerMode_of(this._framework$_element),
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
          t1._collection$_current.set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  K.CupertinoTheme.prototype = {
    build$1: function(context) {
      var _null = null;
      return new K._InheritedCupertinoTheme(this, new Y.IconTheme(new T.CupertinoIconThemeData(this.data.get$primaryColor(), _null, _null), this.child, _null), _null);
    }
  };
  K._InheritedCupertinoTheme.prototype = {
    updateShouldNotify$1: function(old) {
      return this.theme.data !== old.theme.data;
    }
  };
  K.CupertinoThemeData.prototype = {};
  K._NoDefaultCupertinoThemeData.prototype = {};
  K._CupertinoThemeDefaults.prototype = {};
  K._CupertinoTextThemeDefaults.prototype = {};
  K._CupertinoThemeData_Object_Diagnosticable.prototype = {};
  U.StackFilter.prototype = {};
  U._ErrorDiagnostic.prototype = {
    valueToString$1$parentConfiguration: function(parentConfiguration) {
      this._maybeCacheValue$0();
      return J.join$1$ax(this._diagnostics$_value, "");
    }
  };
  U.ErrorDescription.prototype = {};
  U.ErrorSummary.prototype = {};
  U.ErrorHint.prototype = {};
  U.ErrorSpacer.prototype = {};
  U.FlutterErrorDetails.prototype = {
    exceptionAsString$0: function() {
      var message, fullMessage, t1, t2, position, body, splitPoint,
        longMessage = this.exception;
      if (type$.AssertionError._is(longMessage)) {
        message = longMessage.get$message(longMessage);
        fullMessage = longMessage.toString$0(0);
        if (typeof message == "string" && message !== fullMessage) {
          t1 = fullMessage.length;
          t2 = J.getInterceptor$asx(message);
          if (t1 > t2.get$length(message)) {
            position = C.JSString_methods.lastIndexOf$1(fullMessage, message);
            if (position === t1 - t2.get$length(message) && position > 2 && C.JSString_methods.substring$2(fullMessage, position - 2, position) === ": ") {
              body = C.JSString_methods.substring$2(fullMessage, 0, position - 2);
              splitPoint = C.JSString_methods.indexOf$1(body, " Failed assertion:");
              if (splitPoint >= 0)
                body = C.JSString_methods.substring$2(body, 0, splitPoint) + "\n" + C.JSString_methods.substring$1(body, splitPoint + 1);
              longMessage = t2.trimRight$0(message) + "\n" + body;
            } else
              longMessage = null;
          } else
            longMessage = null;
        } else
          longMessage = null;
        if (longMessage == null)
          longMessage = fullMessage;
      } else if (!(typeof longMessage == "string")) {
        t1 = type$.Error._is(longMessage) || type$.Exception._is(longMessage);
        t2 = J.getInterceptor$(longMessage);
        longMessage = t1 ? t2.toString$0(longMessage) : "  " + H.S(t2.toString$0(longMessage));
      }
      longMessage = J.trimRight$0$s(longMessage);
      return longMessage.length === 0 ? "  <no message available>" : longMessage;
    },
    _exceptionToDiagnosticable$0: function() {
      var t1 = this.exception;
      if (t1 instanceof U.FlutterError)
        return t1;
      if (type$.AssertionError._is(t1) && t1.get$message(t1) instanceof U.FlutterError)
        return type$.FlutterError._as(J.get$message$x(t1));
      return null;
    },
    get$summary: function() {
      var t1, summary, _null = null;
      if (this._exceptionToDiagnosticable$0() != null) {
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
        this.debugFillProperties$1(new Y.DiagnosticPropertiesBuilder(t1, C.DiagnosticsTreeStyle_1));
        summary = C.JSArray_methods.firstWhere$2$orElse(t1, new U.FlutterErrorDetails_summary_closure(), new U.FlutterErrorDetails_summary_closure0());
      } else
        summary = _null;
      if (summary == null) {
        t1 = new U.FlutterErrorDetails_summary_formatException(this).call$0();
        t1 = new U.ErrorSummary(_null, false, true, _null, _null, _null, false, [t1], _null, C.DiagnosticLevel_6, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
      } else
        t1 = summary;
      return t1;
    },
    debugFillProperties$1: function(properties) {
      var t1, verb, diagnosticable, errorName, t2, t3, prefix, message, stackFrames, _this = this, _null = null;
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = _this.context;
      if (t1 != null) {
        t1 = " " + t1.toString$0(0);
        t1 = new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t1], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
      } else
        t1 = "";
      t1 = "thrown" + H.S(t1);
      verb = new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t1], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
      diagnosticable = _this._exceptionToDiagnosticable$0();
      t1 = _this.exception;
      if (t1 instanceof P.NullThrownError)
        verb.toString$0(0);
      else if (typeof t1 == "number") {
        H.S(t1);
        verb.toString$0(0);
      } else {
        if (type$.AssertionError._is(t1))
          errorName = new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["assertion"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
        else if (typeof t1 == "string")
          errorName = new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["message"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
        else {
          t2 = type$.Error._is(t1) || type$.Exception._is(t1);
          t3 = J.getInterceptor$(t1);
          if (t2) {
            t2 = t3.get$runtimeType(t1).toString$0(0);
            errorName = new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t2], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
          } else {
            t2 = t3.get$runtimeType(t1).toString$0(0) + " object";
            errorName = new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t2], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
          }
        }
        errorName.toString$0(0);
        verb.toString$0(0);
        if (diagnosticable != null)
          C.JSArray_methods.forEach$1(diagnosticable.diagnostics, properties.get$add(properties));
        else {
          prefix = J.get$runtimeType$(t1).toString$0(0) + ": ";
          message = _this.exceptionAsString$0();
          if (C.JSString_methods.startsWith$1(message, prefix))
            C.JSString_methods.substring$1(message, prefix.length);
        }
      }
      t2 = _this.stack;
      if (t2 != null) {
        if (type$.AssertionError._is(t1) && diagnosticable == null) {
          t1 = R.StackFrame_fromStackString(t2.toString$0(0));
          t3 = H._arrayInstanceType(t1)._eval$1("SkipWhileIterable<1>");
          stackFrames = P.List_List$from(new H.SkipWhileIterable(t1, new U.FlutterErrorDetails_debugFillProperties_closure(), t3), true, t3._eval$1("Iterable.E"));
          stackFrames.length >= 2 && stackFrames[0].$package === "flutter" && stackFrames[1].$package === "flutter";
        }
        U.DiagnosticsStackTrace$("When the exception was thrown, this was the stack", t2, _null);
      }
      t1 = _this.informationCollector;
      if (t1 != null)
        J.forEach$1$ax(t1.call$0(), properties.get$add(properties));
    },
    toStringShort$0: function() {
      var t1 = "Exception caught by " + this.library;
      return t1;
    },
    toString$0: function(_) {
      return "";
    }
  };
  U.FlutterErrorDetails_summary_formatException.prototype = {
    call$0: function() {
      return J.trimLeft$0$s(this.$this.exceptionAsString$0().split("\n")[0]);
    },
    $signature: 37
  };
  U.FlutterErrorDetails_summary_closure.prototype = {
    call$1: function(node) {
      return node.get$level(node) === C.DiagnosticLevel_6;
    }
  };
  U.FlutterErrorDetails_summary_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  U.FlutterErrorDetails_debugFillProperties_closure.prototype = {
    call$1: function(frame) {
      return frame.packageScheme === "dart";
    }
  };
  U.FlutterError.prototype = {
    get$message: function(_) {
      return this.toString$0(0);
    },
    toStringShort$0: function() {
      return "FlutterError";
    },
    toString$0: function(_) {
      var t1 = this.diagnostics;
      return new H.MappedListIterable(t1, new U.FlutterError_toString_closure(new Y.TextTreeRenderer(4000000000, 65, C.DiagnosticLevel_2, -1)), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$1(0, "\n");
    },
    $isAssertionError: 1,
    $isDiagnosticableTree: 1
  };
  U.FlutterError_FlutterError_closure.prototype = {
    call$1: function(line) {
      var _null = null;
      return new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [line], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
    }
  };
  U.FlutterError_closure.prototype = {
    call$1: function(details) {
      return $.FlutterError_presentError.call$1(details);
    }
  };
  U.FlutterError_toString_closure.prototype = {
    call$1: function(node) {
      return C.JSString_methods.trimRight$0(this.renderer.render$1(node));
    }
  };
  U.DiagnosticsStackTrace.prototype = {};
  U._FlutterErrorDetailsNode.prototype = {
    get$builder: function() {
      Y.DiagnosticableNode.prototype.get$builder.call(this);
      return null;
    }
  };
  U._FlutterError_Error_DiagnosticableTreeMixin.prototype = {};
  U._FlutterErrorDetails_Object_Diagnosticable.prototype = {};
  N.BindingBase.prototype = {
    BindingBase$0: function() {
      P.Timeline_startSync("Framework initialization", null, null);
      this.initInstances$0();
      this.initServiceExtensions$0();
      var t1 = type$.String;
      P.postEvent("Flutter.FrameworkInitialization", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
      P.Timeline_finishSync();
    },
    initInstances$0: function() {
    },
    initServiceExtensions$0: function() {
    },
    lockEvents$1: function(callback) {
      var future;
      P.Timeline_startSync("Lock events", null, null);
      ++this._lockCount;
      future = callback.call$0();
      future.whenComplete$1(new N.BindingBase_lockEvents_closure(this));
      return future;
    },
    unlocked$0: function() {
    },
    registerSignalServiceExtension$2$callback$name: function(callback, $name) {
      this.registerServiceExtension$2$callback$name(new N.BindingBase_registerSignalServiceExtension_closure(callback), $name);
    },
    registerBoolServiceExtension$3$getter$name$setter: function(getter, $name, setter) {
      this.registerServiceExtension$2$callback$name(new N.BindingBase_registerBoolServiceExtension_closure(this, setter, $name, getter), $name);
    },
    registerNumericServiceExtension$3$getter$name$setter: function(getter, $name, setter) {
      this.registerServiceExtension$2$callback$name(new N.BindingBase_registerNumericServiceExtension_closure(this, $name, setter, getter), $name);
    },
    _postExtensionStateChangedEvent$2: function($name, value) {
      P.postEvent("Flutter.ServiceExtensionStateChanged", P.LinkedHashMap_LinkedHashMap$_literal(["extension", "ext.flutter." + $name, "value", value], type$.String, type$.dynamic));
    },
    registerServiceExtension$2$callback$name: function(callback, $name) {
      var methodName = "ext.flutter." + $name;
      P.registerExtension(methodName, new N.BindingBase_registerServiceExtension_closure(methodName, callback));
    },
    toString$0: function(_) {
      return "<BindingBase>";
    }
  };
  N.BindingBase_lockEvents_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (--t1._lockCount <= 0) {
        P.Timeline_finishSync();
        t1.unlocked$0();
      }
    },
    $signature: 0
  };
  N.BindingBase_registerSignalServiceExtension_closure.prototype = {
    call$1: function(parameters) {
      return this.$call$body$BindingBase_registerSignalServiceExtension_closure(parameters);
    },
    $call$body$BindingBase_registerSignalServiceExtension_closure: function(parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.callback.call$0(), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  N.BindingBase_registerBoolServiceExtension_closure.prototype = {
    call$1: function(parameters) {
      return this.$call$body$BindingBase_registerBoolServiceExtension_closure(parameters);
    },
    $call$body$BindingBase_registerBoolServiceExtension_closure: function(parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$x(parameters);
              $async$goto = t1.containsKey$1(parameters, "enabled") ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return P._asyncAwait($async$self.setter.call$1(J.$eq$(t1.$index(parameters, "enabled"), "true")), $async$call$1);
            case 5:
              // returning from await.
              $async$goto = 6;
              return P._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 6:
              // returning from await.
              t1 = $async$result ? "true" : "false";
              $async$self.$this._postExtensionStateChangedEvent$2($async$self.name, t1);
            case 4:
              // join
              $async$temp1 = P;
              $async$goto = 7;
              return P._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$temp1.LinkedHashMap_LinkedHashMap$_literal(["enabled", $async$result ? "true" : "false"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  N.BindingBase_registerNumericServiceExtension_closure.prototype = {
    call$1: function(parameters) {
      return this.$call$body$BindingBase_registerNumericServiceExtension_closure(parameters);
    },
    $call$body$BindingBase_registerNumericServiceExtension_closure: function(parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this, t1, t2, $async$temp1, $async$temp2, $async$temp3;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.name;
              t2 = J.getInterceptor$x(parameters);
              $async$goto = t2.containsKey$1(parameters, t1) ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return P._asyncAwait($async$self.setter.call$1(P.double_parse(t2.$index(parameters, t1))), $async$call$1);
            case 5:
              // returning from await.
              $async$temp1 = $async$self.$this;
              $async$temp2 = t1;
              $async$temp3 = J;
              $async$goto = 6;
              return P._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 6:
              // returning from await.
              $async$temp1._postExtensionStateChangedEvent$2($async$temp2, $async$temp3.toString$0$($async$result));
            case 4:
              // join
              $async$temp1 = P;
              $async$temp2 = t1;
              $async$temp3 = J;
              $async$goto = 7;
              return P._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$temp1.LinkedHashMap_LinkedHashMap$_literal([$async$temp2, $async$temp3.toString$0$($async$result)], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  N.BindingBase_registerServiceExtension_closure.prototype = {
    call$2: function(method, parameters) {
      return this.$call$body$BindingBase_registerServiceExtension_closure(method, parameters);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $call$body$BindingBase_registerServiceExtension_closure: function(method, parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.ServiceExtensionResponse),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, caughtException, caughtStack, result, exception, stack, exception0, t1, t2, t3, $async$exception0;
      var $async$call$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(E.debugInstrumentAction("Wait for outer event loop", new N.BindingBase_registerServiceExtension__closure()), $async$call$2);
            case 3:
              // returning from await.
              caughtException = null;
              caughtStack = null;
              result = null;
              $async$handler = 5;
              $async$goto = 8;
              return P._asyncAwait($async$self.callback.call$1(parameters), $async$call$2);
            case 8:
              // returning from await.
              result = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 7;
              break;
            case 5:
              // catch
              $async$handler = 4;
              $async$exception0 = $async$currentError;
              exception = H.unwrapException($async$exception0);
              stack = H.getTraceFromException($async$exception0);
              caughtException = exception;
              caughtStack = stack;
              // goto after finally
              $async$goto = 7;
              break;
            case 4:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 7:
              // after finally
              if (caughtException == null) {
                J.$indexSet$ax(result, "type", "_extensionType");
                J.$indexSet$ax(result, "method", method);
                P.ArgumentError_checkNotNull(C.C_JsonCodec.encode$1(result), "result");
                $async$returnValue = new P.ServiceExtensionResponse();
                // goto return
                $async$goto = 1;
                break;
              } else {
                t1 = caughtException;
                t2 = caughtStack;
                t3 = 'during a service extension callback for "' + H.S(method) + '"';
                t1 = U.FlutterErrorDetails$(new U.ErrorDescription(null, false, true, null, null, null, false, [t3], null, C.DiagnosticLevel_3, null, false, false, null, C.DiagnosticsTreeStyle_7), t1, null, "Flutter framework", false, t2);
                $.$get$FlutterError_onError().call$1(t1);
                t1 = type$.String;
                t1 = C.C_JsonCodec.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["exception", J.toString$0$(caughtException), "stack", J.toString$0$(caughtStack), "method", method], t1, t1));
                P.ServiceExtensionResponse__validateErrorCode(-32000);
                P.ArgumentError_checkNotNull(t1, "errorDetail");
                $async$returnValue = new P.ServiceExtensionResponse();
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$2, $async$completer);
    },
    $signature: 43
  };
  N.BindingBase_registerServiceExtension__closure.prototype = {
    call$0: function() {
      return P.Future_Future$delayed(C.Duration_0, type$.void);
    },
    $signature: 5
  };
  B.Listenable.prototype = {};
  B.ChangeNotifier.prototype = {
    addListener$1: function(_, listener) {
      var t1 = this.ChangeNotifier__listeners;
      t1._isDirty = true;
      t1._list.push(listener);
    },
    removeListener$1: function(_, listener) {
      this.ChangeNotifier__listeners.remove$1(0, listener);
    },
    dispose$0: function() {
      this.ChangeNotifier__listeners = null;
    },
    notifyListeners$0: function() {
      var listener, exception, stack, localListeners, _i, exception0, t2, _this = this, _null = null,
        t1 = _this.ChangeNotifier__listeners;
      if (t1 != null) {
        localListeners = P.List_List$from(t1, true, type$.void_Function);
        for (t1 = localListeners.length, _i = 0; _i < localListeners.length; localListeners.length === t1 || (0, H.throwConcurrentModificationError)(localListeners), ++_i) {
          listener = localListeners[_i];
          try {
            if (_this.ChangeNotifier__listeners.contains$1(0, listener))
              listener.call$0();
          } catch (exception0) {
            exception = H.unwrapException(exception0);
            stack = H.getTraceFromException(exception0);
            t2 = "while dispatching notifications for " + H.getRuntimeType(_this).toString$0(0);
            $.$get$FlutterError_onError().call$1(new U.FlutterErrorDetails(exception, stack, "foundation library", new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t2], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), new B.ChangeNotifier_notifyListeners_closure(_this), false));
          }
        }
      }
    },
    $isListenable: 1
  };
  B.ChangeNotifier_notifyListeners_closure.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.$this;
                $async$goto = 2;
                return Y.DiagnosticsProperty$("The " + H.getRuntimeType(t1).toString$0(0) + " sending notification was", t1, true, C.C__NoDefaultValue, null, false, null, null, C.DiagnosticLevel_3, null, false, true, true, C.DiagnosticsTreeStyle_9, null, type$.ChangeNotifier);
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 11
  };
  B._MergingListenable.prototype = {
    addListener$1: function(_, listener) {
      var t1, t2, _i, child;
      for (t1 = this._change_notifier$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        if (child != null)
          child.addListener$1(0, listener);
      }
    },
    removeListener$1: function(_, listener) {
      var t1, t2, _i, child;
      for (t1 = this._change_notifier$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        if (child != null)
          child.removeListener$1(0, listener);
      }
    },
    toString$0: function(_) {
      return "Listenable.merge([" + C.JSArray_methods.join$1(this._change_notifier$_children, ", ") + "])";
    }
  };
  B.ValueNotifier.prototype = {
    set$value: function(_, newValue) {
      if (this._change_notifier$_value === newValue)
        return;
      this._change_notifier$_value = newValue;
      this.notifyListeners$0();
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(" + this._change_notifier$_value + ")";
    }
  };
  Y.DiagnosticLevel.prototype = {
    toString$0: function(_) {
      return this._diagnostics$_name;
    }
  };
  Y.DiagnosticsTreeStyle.prototype = {
    toString$0: function(_) {
      return this._diagnostics$_name;
    }
  };
  Y.TextTreeConfiguration.prototype = {};
  Y._WordWrapParseMode.prototype = {
    toString$0: function(_) {
      return this._diagnostics$_name;
    }
  };
  Y._PrefixedStringBuilder.prototype = {
    get$prefixOtherLines: function() {
      var t1 = this._nextPrefixOtherLines;
      return t1 == null ? this._prefixOtherLines : t1;
    },
    incrementPrefixOtherLines$2$updateCurrentLine: function(suffix, updateCurrentLine) {
      var _this = this;
      if (_this._currentLine._contents.length === 0 || updateCurrentLine) {
        _this._prefixOtherLines = J.$add$ansx(_this.get$prefixOtherLines(), suffix);
        _this._nextPrefixOtherLines = null;
      } else
        _this._nextPrefixOtherLines = J.$add$ansx(_this.get$prefixOtherLines(), suffix);
    },
    get$requiresMultipleLines: function() {
      var t2, _this = this,
        t1 = _this._numLines;
      if (t1 <= 1)
        if (!(t1 === 1 && _this._currentLine._contents.length !== 0)) {
          t1 = _this._currentLine._contents;
          if (_this._buffer._contents.length === 0)
            t2 = _this.prefixLineOne;
          else
            t2 = _this._prefixOtherLines;
          t2 = t1.length + t2.length > _this.wrapWidth;
          t1 = t2;
        } else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _finalizeLine$1: function(addTrailingLineBreak) {
      var t3, lines, $length, i, t4, _this = this,
        firstLine = _this._buffer._contents.length === 0,
        t1 = _this._currentLine,
        t2 = t1._contents,
        text = t2.charCodeAt(0) == 0 ? t2 : t2;
      t1._contents = "";
      t1 = _this._wrappableRanges;
      if (t1.length === 0) {
        _this._writeLine$3$firstLine$includeLineBreak(text, firstLine, addTrailingLineBreak);
        return;
      }
      t2 = firstLine ? _this.prefixLineOne.length : _this._prefixOtherLines.length;
      t3 = _this._prefixOtherLines;
      t3 = firstLine ? t3.length : t3.length;
      lines = Y._PrefixedStringBuilder__wordWrapLine(text, t1, _this.wrapWidth, t3, t2);
      $length = lines.get$length(lines);
      for (t2 = new P._SyncStarIterator(lines._outerHelper()), t3 = !addTrailingLineBreak, i = 0; t2.moveNext$0();) {
        t4 = t2.get$current(t2);
        ++i;
        _this._writeLine$3$firstLine$includeLineBreak(t4, firstLine, !t3 || i < $length);
      }
      C.JSArray_methods.set$length(t1, 0);
    },
    write$2$allowWrap: function(_, s, allowWrap) {
      var lines, t1, t2, i, t3, line, wrapStart, wrapEnd, _this = this;
      if (s.length === 0)
        return;
      lines = s.split("\n");
      for (t1 = _this._currentLine, t2 = _this._wrappableRanges, i = 0; i < lines.length; ++i) {
        if (i > 0) {
          _this._finalizeLine$1(true);
          t3 = _this._nextPrefixOtherLines;
          if (t3 != null) {
            _this._prefixOtherLines = t3;
            _this._nextPrefixOtherLines = null;
          }
        }
        line = lines[i];
        t3 = line.length;
        if (t3 !== 0) {
          if (allowWrap && true) {
            wrapStart = t1._contents.length;
            wrapEnd = wrapStart + t3;
            if (t2.length !== 0 && C.JSArray_methods.get$last(t2) === wrapStart)
              C.JSArray_methods.set$last(t2, wrapEnd);
            else {
              t2.push(wrapStart);
              t2.push(wrapEnd);
            }
          }
          t1._contents += line;
        }
      }
    },
    write$1: function($receiver, s) {
      return this.write$2$allowWrap($receiver, s, false);
    },
    _updatePrefix$0: function() {
      var t1 = this._nextPrefixOtherLines;
      if (t1 != null) {
        this._prefixOtherLines = t1;
        this._nextPrefixOtherLines = null;
      }
    },
    _writeLine$3$firstLine$includeLineBreak: function(line, firstLine, includeLineBreak) {
      var t2, _this = this,
        t1 = _this._buffer;
      if (t1._contents.length === 0)
        t2 = _this.prefixLineOne;
      else
        t2 = _this._prefixOtherLines;
      t2 = t1._contents += C.JSString_methods.trimRight$0(H.S(t2) + H.S(line));
      if (includeLineBreak)
        t1._contents = t2 + "\n";
      ++_this._numLines;
    },
    writeRawLines$1: function(lines) {
      var t1, t2, _this = this;
      if (lines.length === 0)
        return;
      if (_this._currentLine._contents.length !== 0)
        _this._finalizeLine$1(true);
      t1 = _this._buffer;
      t2 = t1._contents += lines;
      if (!C.JSString_methods.endsWith$1(lines, "\n"))
        t1._contents = t2 + "\n";
      ++_this._numLines;
      _this._updatePrefix$0();
    },
    writeStretched$2: function(text, targetLineLength) {
      var t1, t2, t3, targetLength, _this = this;
      _this.write$1(0, text);
      t1 = _this._currentLine;
      t2 = t1._contents;
      if (_this._buffer._contents.length === 0)
        t3 = _this.prefixLineOne;
      else
        t3 = _this._prefixOtherLines;
      targetLength = targetLineLength - (t2.length + t3.length);
      if (targetLength > 0)
        t1._contents += C.JSString_methods.$mul(text[text.length - 1], targetLength);
      C.JSArray_methods.set$length(_this._wrappableRanges, 0);
    }
  };
  Y._PrefixedStringBuilder__wordWrapLine_noWrap.prototype = {
    call$1: function(index) {
      var t1, t2, t3;
      for (t1 = this._box_0, t2 = this.wrapRanges; true;) {
        t3 = t1.currentChunk;
        if (t3 >= t2.length)
          return true;
        if (index < t2[t3 + 1])
          break;
        t1.currentChunk = t3 + 2;
      }
      return index < t2[t1.currentChunk];
    }
  };
  Y._NoDefaultValue.prototype = {};
  Y.TextTreeRenderer.prototype = {
    render$4$parentConfiguration$prefixLineOne$prefixOtherLines: function(node, parentConfiguration, prefixLineOne, prefixOtherLines) {
      var t1 = this._debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines(node, parentConfiguration, prefixLineOne, prefixOtherLines);
      return t1;
    },
    render$1: function(node) {
      return this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(node, null, "", null);
    },
    _debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines: function(node, parentConfiguration, prefixLineOne, prefixOtherLines) {
      var isSingleLine, t1, config, descendants, t2, t3, t4, builder, children, description, wrapName, wrapDescription, uppercaseTitle, $name, includeName, propertiesIterable, properties, i, t5, property, propertyStyle, propertyRender, propertyLines, t6, prefixChildrenRaw, child, childStyle, childConfig, lastChildPrefixLineOne, childPrefixOtherLines, nextChildStyle, childPrefixLineOne, _this = this, _null = null, _s1_ = "\n", _box_0 = {};
      _box_0.prefixOtherLines = prefixOtherLines;
      if (node.get$style(node) === C.DiagnosticsTreeStyle_8)
        isSingleLine = (parentConfiguration == null ? _null : parentConfiguration.lineBreakProperties) !== true;
      else
        isSingleLine = false;
      if (prefixOtherLines == null) {
        _box_0.prefixOtherLines = prefixLineOne;
        t1 = prefixLineOne;
      } else
        t1 = prefixOtherLines;
      config = node.get$textTreeConfiguration();
      if (t1.length === 0)
        t1 = _box_0.prefixOtherLines = t1 + config.prefixOtherLinesRootNode;
      if (node.get$style(node) === C.DiagnosticsTreeStyle_11) {
        descendants = H.setRuntimeTypeInfo([], type$.JSArray_String);
        _box_0.lines = _box_0.depth = 0;
        new Y.TextTreeRenderer__debugRender_visitor(_box_0, descendants).call$1(node);
        if (_box_0.lines > 1)
          t1 = prefixLineOne + ("This " + H.S(node.name) + " had the following descendants (showing up to depth 5):\n");
        else {
          t1 = descendants.length;
          t2 = node.name;
          t1 = t1 === 1 ? prefixLineOne + ("This " + H.S(t2) + " had the following child:\n") : prefixLineOne + ("This " + H.S(t2) + " has no descendants.\n");
        }
        t1 = P.StringBuffer__writeAll(t1, descendants, _s1_);
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      t2 = _this._wrapWidthProperties;
      t3 = Math.max(_this._wrapWidth, t1.length + t2);
      t4 = new P.StringBuffer("");
      builder = new Y._PrefixedStringBuilder(prefixLineOne, t1, t3, new P.StringBuffer(""), t4, H.setRuntimeTypeInfo([], type$.JSArray_int));
      children = node.getChildren$0();
      description = node.toDescription$1$parentConfiguration(parentConfiguration);
      t1 = config.beforeName;
      if (t1.length !== 0)
        builder.write$1(0, t1);
      t1 = !isSingleLine;
      wrapName = t1 && node.get$allowNameWrap();
      wrapDescription = t1 && node.get$allowWrap();
      uppercaseTitle = node.get$style(node) === C.DiagnosticsTreeStyle_5;
      $name = node.name;
      if (uppercaseTitle)
        $name = $name == null ? _null : $name.toUpperCase();
      if (description == null || description.length === 0) {
        if (node.get$showName() && $name != null)
          builder.write$2$allowWrap(0, $name, wrapName);
      } else {
        if ($name != null && $name.length !== 0 && node.get$showName()) {
          builder.write$2$allowWrap(0, $name, wrapName);
          if (node.showSeparator)
            builder.write$2$allowWrap(0, config.afterName, wrapName);
          builder.write$2$allowWrap(0, config.isNameOnOwnLine || J.contains$1$asx(description, _s1_) ? _s1_ : " ", wrapName);
          includeName = true;
        } else
          includeName = false;
        if (t1 && builder.get$requiresMultipleLines() && t4._contents.length !== 0)
          builder.write$1(0, _s1_);
        if (includeName)
          builder.incrementPrefixOtherLines$2$updateCurrentLine(children.length === 0 ? config.propertyPrefixNoChildren : config.propertyPrefixIfChildren, true);
        if (uppercaseTitle)
          description = description.toUpperCase();
        builder.write$2$allowWrap(0, J.trimRight$0$s(description), wrapDescription);
        if (!includeName)
          builder.incrementPrefixOtherLines$2$updateCurrentLine(children.length === 0 ? config.propertyPrefixNoChildren : config.propertyPrefixIfChildren, false);
      }
      t1 = config.suffixLineOne;
      if (t1.length !== 0)
        builder.writeStretched$2(t1, t3);
      t1 = node.getProperties$0(0);
      t3 = H._arrayInstanceType(t1)._eval$1("WhereIterable<1>");
      propertiesIterable = new H.WhereIterable(t1, new Y.TextTreeRenderer__debugRender_closure(_this), t3);
      t1 = _this._maxDescendentsTruncatableNode;
      if (t1 >= 0 && node.get$allowTruncate()) {
        t3 = t3._eval$1("Iterable.E");
        if (propertiesIterable.get$length(propertiesIterable) < t1) {
          t3 = H.TakeIterable_TakeIterable(propertiesIterable, t1, t3);
          properties = P.List_List$from(t3, true, H._instanceType(t3)._eval$1("Iterable.E"));
          C.JSArray_methods.add$1(properties, Y.DiagnosticsNode_DiagnosticsNode$message("...", true, C.DiagnosticsTreeStyle_8));
        } else
          properties = P.List_List$from(propertiesIterable, true, t3);
        if (t1 < children.length) {
          children = H.SubListIterable$(children, 0, t1, H._arrayInstanceType(children)._precomputed1).toList$0(0);
          C.JSArray_methods.add$1(children, Y.DiagnosticsNode_DiagnosticsNode$message("...", true, C.DiagnosticsTreeStyle_8));
        }
      } else
        properties = P.List_List$from(propertiesIterable, true, t3._eval$1("Iterable.E"));
      if (properties.length !== 0 || children.length !== 0 || node.get$emptyBodyDescription() != null)
        if (!node.showSeparator)
          t1 = (description == null ? _null : description.length !== 0) === true;
        else
          t1 = true;
      else
        t1 = false;
      if (t1)
        builder.write$1(0, config.afterDescriptionIfBody);
      t1 = config.lineBreakProperties;
      if (t1)
        builder.write$1(0, config.lineBreak);
      if (properties.length !== 0)
        builder.write$1(0, config.beforeProperties);
      t3 = config.bodyIndent;
      builder.incrementPrefixOtherLines$2$updateCurrentLine(t3, false);
      if (node.get$emptyBodyDescription() != null && properties.length === 0 && children.length === 0 && prefixLineOne.length !== 0) {
        builder.write$1(0, node.get$emptyBodyDescription());
        if (t1)
          builder.write$1(0, config.lineBreak);
      }
      for (t4 = config.propertySeparator, t1 = !t1, i = 0; t5 = properties.length, i < t5; ++i) {
        property = properties[i];
        if (i > 0)
          builder.write$1(0, t4);
        propertyStyle = property.get$textTreeConfiguration();
        if (property.get$style(property) === C.DiagnosticsTreeStyle_8) {
          propertyRender = _this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(property, config, propertyStyle.prefixLineOne, propertyStyle.childLinkSpace + propertyStyle.prefixOtherLines);
          propertyLines = propertyRender.split(_s1_);
          if (propertyLines.length === 1 && t1)
            builder.write$1(0, C.JSArray_methods.get$first(propertyLines));
          else {
            builder.write$2$allowWrap(0, propertyRender, false);
            if (!C.JSString_methods.endsWith$1(propertyRender, _s1_))
              builder.write$1(0, _s1_);
          }
        } else {
          t5 = builder._nextPrefixOtherLines;
          t5 = H.S(t5 == null ? builder._prefixOtherLines : t5) + propertyStyle.prefixLineOne;
          t6 = builder._nextPrefixOtherLines;
          builder.writeRawLines$1(_this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(property, config, t5, H.S(t6 == null ? builder._prefixOtherLines : t6) + propertyStyle.childLinkSpace + propertyStyle.prefixOtherLines));
        }
      }
      if (t5 !== 0)
        builder.write$1(0, config.afterProperties);
      builder.write$1(0, "");
      if (t1)
        builder.write$1(0, config.lineBreak);
      prefixChildrenRaw = H.S(_box_0.prefixOtherLines) + t3;
      if (children.length === 0 && config.addBlankLineIfNoChildren && builder.get$requiresMultipleLines() && J.trimRight$0$s(builder.get$prefixOtherLines()).length !== 0)
        builder.write$1(0, config.lineBreak);
      if (children.length !== 0 && config.showChildren) {
        if (config.isBlankLineBetweenPropertiesAndChildren && properties.length !== 0 && C.JSArray_methods.get$first(children).get$textTreeConfiguration().isBlankLineBetweenPropertiesAndChildren)
          builder.write$1(0, config.lineBreak);
        builder._prefixOtherLines = _box_0.prefixOtherLines;
        builder._nextPrefixOtherLines = null;
        for (t1 = config.lineBreak, t3 = builder.wrapWidth, i = 0; i < children.length; ++i) {
          child = children[i];
          childStyle = child == null ? _null : child.get$style(child);
          childConfig = childStyle === C.DiagnosticsTreeStyle_8 || childStyle === C.DiagnosticsTreeStyle_9 ? config : child.get$textTreeConfiguration();
          if (i === children.length - 1) {
            lastChildPrefixLineOne = prefixChildrenRaw + childConfig.prefixLastChildLineOne;
            t4 = childConfig.childLinkSpace;
            childPrefixOtherLines = prefixChildrenRaw + t4 + childConfig.prefixOtherLines;
            builder.writeRawLines$1(_this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(child, config, lastChildPrefixLineOne, childPrefixOtherLines));
            t5 = childConfig.footer;
            if (t5.length !== 0) {
              builder._prefixOtherLines = prefixChildrenRaw;
              builder._nextPrefixOtherLines = null;
              builder.write$1(0, t4 + t5);
              t4 = childConfig.mandatoryFooter;
              if (t4.length !== 0)
                builder.writeStretched$2(t4, Math.max(t3, t2 + childPrefixOtherLines.length));
              builder.write$1(0, t1);
            }
          } else {
            t4 = children[i + 1];
            childStyle = t4 == null ? _null : t4.get$style(t4);
            nextChildStyle = childStyle === C.DiagnosticsTreeStyle_8 || childStyle === C.DiagnosticsTreeStyle_9 ? config : t4.get$textTreeConfiguration();
            childPrefixLineOne = prefixChildrenRaw + childConfig.prefixLineOne;
            childPrefixOtherLines = prefixChildrenRaw + nextChildStyle.linkCharacter + childConfig.prefixOtherLines;
            builder.writeRawLines$1(_this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(child, config, childPrefixLineOne, childPrefixOtherLines));
            t4 = childConfig.footer;
            if (t4.length !== 0) {
              builder._prefixOtherLines = prefixChildrenRaw;
              builder._nextPrefixOtherLines = null;
              builder.write$1(0, childConfig.linkCharacter + t4);
              t4 = childConfig.mandatoryFooter;
              if (t4.length !== 0)
                builder.writeStretched$2(t4, Math.max(t3, t2 + childPrefixOtherLines.length));
              builder.write$1(0, t1);
            }
          }
        }
      }
      if (parentConfiguration == null && config.mandatoryFooter.length !== 0) {
        builder.writeStretched$2(config.mandatoryFooter, builder.wrapWidth);
        builder.write$1(0, config.lineBreak);
      }
      if (builder._currentLine._contents.length !== 0)
        builder._finalizeLine$1(false);
      t1 = builder._buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  Y.TextTreeRenderer__debugRender_visitor.prototype = {
    call$1: function(node) {
      var t1, t2, t3, t4, _i, child, t5;
      for (t1 = node.getChildren$0(), t2 = t1.length, t3 = this._box_0, t4 = this.descendants, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        t5 = t3.lines;
        if (t5 < 25) {
          ++t3.depth;
          t4.push(H.S(t3.prefixOtherLines) + C.JSString_methods.$mul("  ", t3.depth) + H.S(child));
          if (t3.depth < 5)
            this.call$1(child);
          --t3.depth;
        } else if (t5 === 25)
          t4.push(H.S(t3.prefixOtherLines) + "  ...(descendants list truncated after " + t3.lines + " lines)");
        ++t3.lines;
      }
    }
  };
  Y.TextTreeRenderer__debugRender_closure.prototype = {
    call$1: function(n) {
      var t1 = n.get$level(n);
      return t1.index >= this.$this._minLevel.index;
    }
  };
  Y.DiagnosticsNode.prototype = {
    get$level: function(_) {
      return C.DiagnosticLevel_3;
    },
    get$emptyBodyDescription: function() {
      return null;
    },
    get$allowWrap: function() {
      return false;
    },
    get$allowNameWrap: function() {
      return false;
    },
    get$allowTruncate: function() {
      return false;
    },
    toString$1$minLevel: function(_, minLevel) {
      return this.super$Object$toString(0);
    },
    toString$0: function($receiver) {
      return this.toString$1$minLevel($receiver, C.DiagnosticLevel_3);
    },
    get$textTreeConfiguration: function() {
      switch (this.get$style(this)) {
        case C.DiagnosticsTreeStyle_0:
          return null;
        case C.DiagnosticsTreeStyle_3:
          return $.$get$denseTextConfiguration();
        case C.DiagnosticsTreeStyle_1:
          return $.$get$sparseTextConfiguration();
        case C.DiagnosticsTreeStyle_2:
          return $.$get$dashedTextConfiguration();
        case C.DiagnosticsTreeStyle_6:
          return $.$get$whitespaceTextConfiguration();
        case C.DiagnosticsTreeStyle_4:
          return $.$get$transitionTextConfiguration();
        case C.DiagnosticsTreeStyle_8:
          return $.$get$singleLineTextConfiguration();
        case C.DiagnosticsTreeStyle_9:
          return $.$get$errorPropertyTextConfiguration();
        case C.DiagnosticsTreeStyle_10:
          return $.$get$shallowTextConfiguration();
        case C.DiagnosticsTreeStyle_5:
          return $.$get$errorTextConfiguration();
        case C.DiagnosticsTreeStyle_11:
          return $.$get$whitespaceTextConfiguration();
        case C.DiagnosticsTreeStyle_7:
          return $.$get$flatTextConfiguration();
      }
      return null;
    },
    get$name: function(receiver) {
      return this.name;
    },
    get$showName: function() {
      return this.showName;
    },
    get$style: function(receiver) {
      return this.style;
    }
  };
  Y.DiagnosticsProperty.prototype = {
    valueToString$1$parentConfiguration: function(parentConfiguration) {
      var v, t1;
      this._maybeCacheValue$0();
      v = this._diagnostics$_value;
      t1 = type$.DiagnosticableTree._is(v) ? v.toStringShort$0() : J.toString$0$(v);
      return t1 == null ? "" : t1;
    },
    toDescription$1$parentConfiguration: function(parentConfiguration) {
      var t2, result, _this = this,
        t1 = _this._description;
      if (t1 != null)
        return _this._addTooltip$1(t1);
      _this._maybeCacheValue$0();
      if (_this._diagnostics$_exception != null) {
        _this._maybeCacheValue$0();
        return "EXCEPTION (" + J.get$runtimeType$(_this._diagnostics$_exception).toString$0(0) + ")";
      }
      t1 = _this.ifNull;
      if (t1 != null) {
        _this._maybeCacheValue$0();
        t2 = _this._diagnostics$_value == null;
      } else
        t2 = false;
      if (t2)
        return _this._addTooltip$1(t1);
      result = _this.valueToString$1$parentConfiguration(parentConfiguration);
      return _this._addTooltip$1(result.length === 0 && _this.ifEmpty != null ? _this.ifEmpty : result);
    },
    _addTooltip$1: function(text) {
      var t1 = this.tooltip;
      return t1 == null ? text : H.S(text) + " (" + t1 + ")";
    },
    get$value: function(_) {
      this._maybeCacheValue$0();
      return this._diagnostics$_value;
    },
    _maybeCacheValue$0: function() {
      return;
    },
    get$level: function(_) {
      var t2, _this = this,
        t1 = _this._defaultLevel;
      if (t1 === C.DiagnosticLevel_0)
        return t1;
      _this._maybeCacheValue$0();
      if (_this._diagnostics$_exception != null)
        return C.DiagnosticLevel_7;
      _this._maybeCacheValue$0();
      if (_this._diagnostics$_value == null && _this.missingIfNull)
        return C.DiagnosticLevel_4;
      t2 = _this.defaultValue;
      if (!J.$eq$(t2, C.C__NoDefaultValue)) {
        _this._maybeCacheValue$0();
        t2 = J.$eq$(_this._diagnostics$_value, t2);
      } else
        t2 = false;
      if (t2)
        return C.DiagnosticLevel_1;
      return t1;
    },
    getProperties$0: function(_) {
      return C.List_empty2;
    },
    getChildren$0: function() {
      return C.List_empty2;
    },
    get$allowWrap: function() {
      return this.allowWrap;
    },
    get$allowNameWrap: function() {
      return true;
    }
  };
  Y.DiagnosticableNode.prototype = {
    get$builder: function() {
      var t1 = this._cachedBuilder;
      return t1;
    },
    get$style: function(_) {
      var t1 = this.style;
      if (t1 == null)
        t1 = this.get$builder().defaultDiagnosticsTreeStyle;
      return t1;
    },
    get$emptyBodyDescription: function() {
      return "";
    },
    getProperties$0: function(_) {
      return C.List_empty2;
    },
    getChildren$0: function() {
      return C.List_empty2;
    },
    toDescription$1$parentConfiguration: function(parentConfiguration) {
      return "";
    }
  };
  Y.DiagnosticableTreeNode.prototype = {
    getChildren$0: function() {
      var t1 = this.value.debugDescribeChildren$0();
      return t1;
    }
  };
  Y.DiagnosticPropertiesBuilder.prototype = {
    add$1: function(_, property) {
    }
  };
  Y.Diagnosticable.prototype = {
    toStringShort$0: function() {
      return "<optimized out>#" + Y.shortHash(this);
    },
    toString$0: function(_) {
      var t1 = this.toStringShort$0();
      return t1;
    },
    debugFillProperties$1: function(properties) {
    }
  };
  Y.DiagnosticableTree.prototype = {
    toStringShort$0: function() {
      return "<optimized out>#" + Y.shortHash(this);
    },
    debugDescribeChildren$0: function() {
      return C.List_empty2;
    }
  };
  Y.DiagnosticableTreeMixin.prototype = {
    toString$0: function(_) {
      return this.toDiagnosticsNode$1$style(C.DiagnosticsTreeStyle_8).super$Object$toString(0);
    },
    toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines: function(minLevel, prefixLineOne, prefixOtherLines) {
      this.toDiagnosticsNode$0();
      return "";
    },
    toStringShort$0: function() {
      return "<optimized out>#" + Y.shortHash(this);
    },
    toDiagnosticsNode$2$name$style: function($name, style) {
      return new Y.DiagnosticableTreeNode(this, $name, true, true, null, style);
    },
    toDiagnosticsNode$1$style: function(style) {
      return this.toDiagnosticsNode$2$name$style(null, style);
    },
    toDiagnosticsNode$0: function() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    },
    debugDescribeChildren$0: function() {
      return C.List_empty2;
    }
  };
  Y.DiagnosticsBlock.prototype = {
    getChildren$0: function() {
      return this._diagnostics$_children;
    },
    getProperties$0: function(_) {
      return this._properties;
    },
    toDescription$1$parentConfiguration: function(parentConfiguration) {
      return null;
    },
    get$level: function() {
      return C.DiagnosticLevel_3;
    },
    get$allowTruncate: function() {
      return this.allowTruncate;
    }
  };
  Y._DiagnosticableTree_Object_Diagnosticable.prototype = {};
  D.Key.prototype = {};
  D.LocalKey.prototype = {};
  D.ValueKey.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return H._instanceType(this)._eval$1("ValueKey<ValueKey.T>")._is(other) && J.$eq$(other.value, this.value);
    },
    get$hashCode: function(_) {
      return P.hashValues(H.getRuntimeType(this), this.value, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = H._instanceType(this),
        t2 = t1._eval$1("ValueKey.T"),
        t3 = this.value,
        valueString = H.createRuntimeType(t2) === C.Type_String_k8F ? "<'" + H.S(t3) + "'>" : "<" + H.S(t3) + ">";
      if (H.getRuntimeType(this).$eq(0, H.createRuntimeType(t1._eval$1("ValueKey<ValueKey.T>"))))
        return "[" + valueString + "]";
      return "[" + H.createRuntimeType(t2).toString$0(0) + " " + valueString + "]";
    }
  };
  D._TypeLiteral.prototype = {};
  F.LicenseEntry.prototype = {};
  F.LicenseEntryWithLineBreaks.prototype = {};
  B.AbstractNode.prototype = {
    redepthChild$1: function(child) {
      var t1 = child._node$_depth,
        t2 = this._node$_depth;
      if (t1 <= t2) {
        child._node$_depth = t2 + 1;
        child.redepthChildren$0();
      }
    },
    redepthChildren$0: function() {
    },
    get$owner: function() {
      return this._node$_owner;
    },
    attach$1: function(owner) {
      this._node$_owner = owner;
    },
    detach$0: function(_) {
      this._node$_owner = null;
    },
    get$parent: function(_) {
      return this._node$_parent;
    },
    adoptChild$1: function(child) {
      var t1;
      child._node$_parent = this;
      t1 = this._node$_owner;
      if (t1 != null)
        child.attach$1(t1);
      this.redepthChild$1(child);
    },
    dropChild$1: function(child) {
      child._node$_parent = null;
      if (this._node$_owner != null)
        child.detach$0(0);
    }
  };
  R.ObserverList.prototype = {
    remove$1: function(_, item) {
      var t1;
      this._isDirty = true;
      t1 = this._observer_list$_set;
      if (t1 != null)
        t1.clear$0(0);
      return C.JSArray_methods.remove$1(this._list, item);
    },
    contains$1: function(_, element) {
      var t2, _this = this,
        t1 = _this._list;
      if (t1.length < 3)
        return C.JSArray_methods.contains$1(t1, element);
      if (_this._isDirty) {
        t2 = _this._observer_list$_set;
        if (t2 == null)
          _this._observer_list$_set = P.HashSet_HashSet$from(t1, _this.$ti._precomputed1);
        else
          t2.addAll$1(0, t1);
        _this._isDirty = false;
      }
      return _this._observer_list$_set.contains$1(0, element);
    },
    get$iterator: function(_) {
      var t1 = this._list;
      return new J.ArrayIterator(t1, t1.length);
    },
    get$isEmpty: function(_) {
      return this._list.length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._list.length !== 0;
    }
  };
  R.HashedObserverList.prototype = {
    add$1: function(_, item) {
      var t1 = this._observer_list$_map,
        t2 = t1.$index(0, item);
      t1.$indexSet(0, item, (t2 == null ? 0 : t2) + 1);
    },
    remove$1: function(_, item) {
      var t1 = this._observer_list$_map,
        value = t1.$index(0, item);
      if (value == null)
        return false;
      if (value === 1)
        t1.remove$1(0, item);
      else
        t1.$indexSet(0, item, value - 1);
      return true;
    },
    contains$1: function(_, element) {
      return this._observer_list$_map.containsKey$1(0, element);
    },
    get$iterator: function(_) {
      var t1 = this._observer_list$_map;
      t1 = t1.get$keys(t1);
      return t1.get$iterator(t1);
    },
    get$isEmpty: function(_) {
      var t1 = this._observer_list$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty: function(_) {
      var t1 = this._observer_list$_map;
      return t1.get$isNotEmpty(t1);
    }
  };
  T.TargetPlatform.prototype = {
    toString$0: function(_) {
      return this._platform$_name;
    }
  };
  G.WriteBuffer0.prototype = {
    _serialization$_alignTo$1: function(alignment) {
      var t1, i,
        mod = C.JSInt_methods.$mod(this._serialization$_buffer._typed_buffers$_length, alignment);
      if (mod !== 0)
        for (t1 = alignment - mod, i = 0; i < t1; ++i)
          this._serialization$_buffer._typed_buffers$_add$1(0, 0);
    }
  };
  G.ReadBuffer0.prototype = {
    getUint8$0: function(_) {
      return this.data.getUint8(this._serialization$_position++);
    },
    getInt64$0: function(_) {
      var t1 = this._serialization$_position,
        t2 = $.$get$Endian_host();
      C.NativeByteData_methods.getInt64$2(this.data, t1, t2);
    },
    getUint8List$1: function($length) {
      var _this = this,
        t1 = _this.data,
        list = H.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + _this._serialization$_position, $length);
      _this._serialization$_position = _this._serialization$_position + $length;
      return list;
    },
    getInt64List$1: function($length) {
      var t1;
      this._serialization$_alignTo$1(8);
      t1 = this.data;
      C.NativeByteBuffer_methods.asInt64List$2(t1.buffer, t1.byteOffset + this._serialization$_position, $length);
    },
    _serialization$_alignTo$1: function(alignment) {
      var t1 = this._serialization$_position,
        mod = C.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this._serialization$_position = t1 + (alignment - mod);
    }
  };
  R.StackFrame.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.number, _this.$package, _this.line, _this.column, _this.className, _this.method, _this.source, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof R.StackFrame && other.number == _this.number && other.$package == _this.$package && other.line == _this.line && other.column == _this.column && other.className == _this.className && other.method == _this.method && other.source === _this.source;
    },
    toString$0: function(_) {
      var _this = this;
      return "StackFrame(#" + H.S(_this.number) + ", " + H.S(_this.packageScheme) + ":" + H.S(_this.$package) + "/" + _this.packagePath + ":" + H.S(_this.line) + ":" + H.S(_this.column) + ", className: " + H.S(_this.className) + ", method: " + H.S(_this.method) + ")";
    }
  };
  R.StackFrame_fromStackString_closure.prototype = {
    call$1: function(frame) {
      return frame == null;
    }
  };
  O.SynchronousFuture.prototype = {
    then$1$2$onError: function(f, onError, $E) {
      var result = f.call$1(this._synchronous_future$_value);
      if ($E._eval$1("Future<0>")._is(result))
        return result;
      return new O.SynchronousFuture($E._as(result), $E._eval$1("SynchronousFuture<0>"));
    },
    then$1$1: function(f, $E) {
      return this.then$1$2$onError(f, null, $E);
    },
    whenComplete$1: function(action) {
      var result, e, stack, t1, exception, _this = this;
      try {
        result = action.call$0();
        if (type$.Future_dynamic._is(result)) {
          t1 = result.then$1$1(new O.SynchronousFuture_whenComplete_closure(_this), _this.$ti._precomputed1);
          return t1;
        }
        return _this;
      } catch (exception) {
        e = H.unwrapException(exception);
        stack = H.getTraceFromException(exception);
        t1 = P.Future_Future$error(e, stack, _this.$ti._precomputed1);
        return t1;
      }
    },
    $isFuture: 1
  };
  O.SynchronousFuture_whenComplete_closure.prototype = {
    call$1: function(value) {
      return this.$this._synchronous_future$_value;
    },
    $signature: function() {
      return this.$this.$ti._eval$1("1(@)");
    }
  };
  D.GestureDisposition.prototype = {
    toString$0: function(_) {
      return this._arena$_name;
    }
  };
  D.GestureArenaMember.prototype = {};
  D.GestureArenaEntry.prototype = {};
  D._GestureArena.prototype = {
    toString$0: function(_) {
      var _this = this,
        t1 = _this.members;
      t1 = t1.length === 0 ? "<empty>" : new H.MappedListIterable(t1, new D._GestureArena_toString_closure(_this), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$1(0, ", ");
      if (_this.isOpen)
        t1 += " [open]";
      if (_this.isHeld)
        t1 += " [held]";
      if (_this.hasPendingSweep)
        t1 += " [hasPendingSweep]";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  D._GestureArena_toString_closure.prototype = {
    call$1: function(member) {
      if (member == this.$this.eagerWinner)
        return H.S(member) + " (eager winner)";
      return H.S(member);
    }
  };
  D.GestureArenaManager.prototype = {
    add$2: function(_, pointer, member) {
      this._arenas.putIfAbsent$2(0, pointer, new D.GestureArenaManager_add_closure(this, pointer)).members.push(member);
      return new D.GestureArenaEntry(this, pointer, member);
    },
    close$1: function(_, pointer) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      state.isOpen = false;
      this._tryToResolveArena$2(pointer, state);
    },
    sweep$1: function(pointer) {
      var i,
        t1 = this._arenas,
        state = t1.$index(0, pointer);
      if (state == null)
        return;
      if (state.isHeld) {
        state.hasPendingSweep = true;
        return;
      }
      t1.remove$1(0, pointer);
      t1 = state.members;
      if (t1.length !== 0) {
        C.JSArray_methods.get$first(t1).acceptGesture$1(pointer);
        for (i = 1; i < t1.length; ++i)
          t1[i].rejectGesture$1(pointer);
      }
    },
    hold$1: function(pointer) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      state.isHeld = true;
    },
    release$1: function(_, pointer) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      state.isHeld = false;
      if (state.hasPendingSweep)
        this.sweep$1(pointer);
    },
    _resolve$3: function(pointer, member, disposition) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      if (disposition === C.GestureDisposition_1) {
        C.JSArray_methods.remove$1(state.members, member);
        member.rejectGesture$1(pointer);
        if (!state.isOpen)
          this._tryToResolveArena$2(pointer, state);
      } else if (state.isOpen) {
        if (state.eagerWinner == null)
          state.eagerWinner = member;
      } else
        this._resolveInFavorOf$3(pointer, state, member);
    },
    _tryToResolveArena$2: function(pointer, state) {
      var t1 = state.members.length;
      if (t1 === 1)
        P.scheduleMicrotask(new D.GestureArenaManager__tryToResolveArena_closure(this, pointer, state));
      else if (t1 === 0)
        this._arenas.remove$1(0, pointer);
      else {
        t1 = state.eagerWinner;
        if (t1 != null)
          this._resolveInFavorOf$3(pointer, state, t1);
      }
    },
    _resolveByDefault$2: function(pointer, state) {
      var t1 = this._arenas;
      if (!t1.containsKey$1(0, pointer))
        return;
      t1.remove$1(0, pointer);
      C.JSArray_methods.get$first(state.members).acceptGesture$1(pointer);
    },
    _resolveInFavorOf$3: function(pointer, state, member) {
      var t1, t2, _i, rejectedMember;
      this._arenas.remove$1(0, pointer);
      for (t1 = state.members, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        rejectedMember = t1[_i];
        if (rejectedMember != member)
          rejectedMember.rejectGesture$1(pointer);
      }
      member.acceptGesture$1(pointer);
    }
  };
  D.GestureArenaManager_add_closure.prototype = {
    call$0: function() {
      return new D._GestureArena(H.setRuntimeTypeInfo([], type$.JSArray_GestureArenaMember));
    },
    $signature: 80
  };
  D.GestureArenaManager__tryToResolveArena_closure.prototype = {
    call$0: function() {
      return this.$this._resolveByDefault$2(this.pointer, this.state);
    },
    $signature: 1
  };
  N.GestureBinding.prototype = {
    _handlePointerDataPacket$1: function(packet) {
      var t1 = packet.data,
        t2 = $.$get$window()._debugDevicePixelRatio;
      this.GestureBinding__pendingPointerEvents.addAll$1(0, G.PointerEventConverter_expand(t1, t2 != null ? t2 : H.EngineWindow_browserDevicePixelRatio()));
      if (this._lockCount <= 0)
        this._flushPointerEventQueue$0();
    },
    cancelPointer$1: function(pointer) {
      var t1 = this.GestureBinding__pendingPointerEvents;
      if (t1._head === t1._tail && this._lockCount <= 0)
        P.scheduleMicrotask(this.get$_flushPointerEventQueue());
      t1.addFirst$1(F.PointerCancelEvent$(0, 0, 0, 0, C.PointerDeviceKind_0, null, false, 0, null, pointer, C.Offset_0_0, 1, 1, 0, 0, 0, 0, 0, 0, C.Duration_0, null));
    },
    _flushPointerEventQueue$0: function() {
      var t1, t2, t3, t4, t5, t6, hitTestResult, _this = this;
      for (t1 = _this.GestureBinding__pendingPointerEvents, t2 = _this.GestureBinding__hitTests, t3 = type$.JSArray_HitTestEntry, t4 = type$.Matrix4; !t1.get$isEmpty(t1);) {
        t5 = t1.removeFirst$0();
        t6 = t5 instanceof F.PointerDownEvent;
        if (t6 || t5 instanceof F.PointerSignalEvent) {
          hitTestResult = new O.HitTestResult(H.setRuntimeTypeInfo([], t3), P.ListQueue$(null, t4));
          _this.hitTest$2(hitTestResult, t5.position);
          if (t6)
            t2.$indexSet(0, t5.pointer, hitTestResult);
        } else if (t5 instanceof F.PointerUpEvent || t5 instanceof F.PointerCancelEvent)
          hitTestResult = t2.remove$1(0, t5.pointer);
        else
          hitTestResult = t5.down ? t2.$index(0, t5.pointer) : null;
        if (hitTestResult != null || t5 instanceof F.PointerHoverEvent || t5 instanceof F.PointerAddedEvent || t5 instanceof F.PointerRemovedEvent)
          _this.dispatchEvent$2(0, t5, hitTestResult);
      }
    },
    hitTest$2: function(result, position) {
      result.add$1(0, new O.HitTestEntry(this));
    },
    dispatchEvent$2: function(_, $event, hitTestResult) {
      var exception, stack, entry, exception0, stack0, t1, t2, _i, _null = null,
        _s15_ = "gesture library";
      if (hitTestResult == null) {
        try {
          this.GestureBinding_pointerRouter.route$1($event);
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          t1 = N.FlutterErrorDetailsForPointerEventDispatcher$(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["while dispatching a non-hit-tested pointer event"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), $event, exception, _null, new N.GestureBinding_dispatchEvent_closure($event), _s15_, stack);
          $.$get$FlutterError_onError().call$1(t1);
        }
        return;
      }
      for (t1 = hitTestResult._path, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        try {
          J.get$target$x(entry).handleEvent$2($event.transformed$1(entry._transform), entry);
        } catch (exception) {
          exception0 = H.unwrapException(exception);
          stack0 = H.getTraceFromException(exception);
          $.$get$FlutterError_onError().call$1(new N.FlutterErrorDetailsForPointerEventDispatcher(exception0, stack0, _s15_, new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["while dispatching a pointer event"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), new N.GestureBinding_dispatchEvent_closure0($event, entry), false));
        }
      }
    },
    handleEvent$2: function($event, entry) {
      var _this = this;
      _this.GestureBinding_pointerRouter.route$1($event);
      if ($event instanceof F.PointerDownEvent)
        _this.GestureBinding_gestureArena.close$1(0, $event.pointer);
      else if ($event instanceof F.PointerUpEvent)
        _this.GestureBinding_gestureArena.sweep$1($event.pointer);
      else if ($event instanceof F.PointerSignalEvent)
        _this.GestureBinding_pointerSignalResolver.resolve$1($event);
    }
  };
  N.GestureBinding_dispatchEvent_closure.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return Y.DiagnosticsProperty$("Event", $async$self.event, true, C.C__NoDefaultValue, null, false, null, null, C.DiagnosticLevel_3, null, false, true, true, C.DiagnosticsTreeStyle_9, null, type$.PointerEvent);
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 11
  };
  N.GestureBinding_dispatchEvent_closure0.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return Y.DiagnosticsProperty$("Event", $async$self.event, true, C.C__NoDefaultValue, null, false, null, null, C.DiagnosticLevel_3, null, false, true, true, C.DiagnosticsTreeStyle_9, null, type$.PointerEvent);
              case 2:
                // after yield
                t1 = $async$self.entry;
                $async$goto = 3;
                return Y.DiagnosticsProperty$("Target", t1.get$target(t1), true, C.C__NoDefaultValue, null, false, null, null, C.DiagnosticLevel_3, null, false, true, true, C.DiagnosticsTreeStyle_9, null, type$.HitTestTarget);
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 11
  };
  N.FlutterErrorDetailsForPointerEventDispatcher.prototype = {};
  O.DragDownDetails.prototype = {
    toString$0: function(_) {
      return "DragDownDetails(" + H.S(this.globalPosition) + ")";
    }
  };
  O.DragStartDetails.prototype = {
    toString$0: function(_) {
      return "DragStartDetails(" + H.S(this.globalPosition) + ")";
    }
  };
  O.DragUpdateDetails.prototype = {
    toString$0: function(_) {
      return "DragUpdateDetails(" + H.S(this.delta) + ")";
    }
  };
  O.DragEndDetails.prototype = {
    toString$0: function(_) {
      return "DragEndDetails(" + this.velocity.toString$0(0) + ")";
    }
  };
  F.PointerEvent0.prototype = {};
  F.PointerAddedEvent.prototype = {
    transformed$1: function(transform) {
      var t1, t2, t3, _this = this;
      if (transform == null || transform.$eq(0, _this.transform))
        return _this;
      t1 = _this.position;
      t2 = F.PointerEvent_transformPosition(transform, t1);
      t3 = type$.PointerAddedEvent._as(_this.original);
      if (t3 == null)
        t3 = _this;
      return F.PointerAddedEvent$(_this.device, _this.distance, _this.distanceMax, _this.kind, t2, _this.obscured, _this.orientation, t3, t1, _this.pressureMax, _this.pressureMin, _this.radiusMax, _this.radiusMin, _this.tilt, _this.timeStamp, transform);
    }
  };
  F.PointerRemovedEvent.prototype = {
    transformed$1: function(transform) {
      var t1, t2, t3, _this = this;
      if (transform == null || transform.$eq(0, _this.transform))
        return _this;
      t1 = _this.position;
      t2 = F.PointerEvent_transformPosition(transform, t1);
      t3 = type$.PointerRemovedEvent._as(_this.original);
      if (t3 == null)
        t3 = _this;
      return F.PointerRemovedEvent$(_this.device, _this.distanceMax, _this.kind, t2, _this.obscured, t3, t1, _this.pressureMax, _this.pressureMin, _this.radiusMax, _this.radiusMin, _this.timeStamp, transform);
    }
  };
  F.PointerHoverEvent.prototype = {
    transformed$1: function(transform) {
      var t1, transformedPosition, t2, t3, t4, _this = this;
      if (transform == null || transform.$eq(0, _this.transform))
        return _this;
      t1 = _this.position;
      transformedPosition = F.PointerEvent_transformPosition(transform, t1);
      t2 = _this.delta;
      t3 = F.PointerEvent_transformDeltaViaPositions(transform, transformedPosition, t2, t1);
      t4 = type$.PointerHoverEvent._as(_this.original);
      if (t4 == null)
        t4 = _this;
      return F.PointerHoverEvent$(_this.buttons, t2, _this.device, _this.distance, _this.distanceMax, _this.kind, t3, transformedPosition, _this.obscured, _this.orientation, t4, t1, _this.pressureMax, _this.pressureMin, _this.radiusMajor, _this.radiusMax, _this.radiusMin, _this.radiusMinor, _this.size, _this.synthesized, _this.tilt, _this.timeStamp, transform);
    }
  };
  F.PointerEnterEvent.prototype = {
    transformed$1: function(transform) {
      var t1, transformedPosition, t2, t3, t4, _this = this;
      if (transform == null || transform.$eq(0, _this.transform))
        return _this;
      t1 = _this.position;
      transformedPosition = F.PointerEvent_transformPosition(transform, t1);
      t2 = _this.delta;
      t3 = F.PointerEvent_transformDeltaViaPositions(transform, transformedPosition, t2, t1);
      t4 = type$.PointerEnterEvent._as(_this.original);
      if (t4 == null)
        t4 = _this;
      return F.PointerEnterEvent$(_this.buttons, t2, _this.device, _this.distance, _this.distanceMax, _this.down, _this.kind, t3, transformedPosition, _this.obscured, _this.orientation, t4, t1, _this.pressureMax, _this.pressureMin, _this.radiusMajor, _this.radiusMax, _this.radiusMin, _this.radiusMinor, _this.size, _this.synthesized, _this.tilt, _this.timeStamp, transform);
    }
  };
  F.PointerExitEvent.prototype = {
    transformed$1: function(transform) {
      var t1, transformedPosition, t2, t3, t4, _this = this;
      if (transform == null || transform.$eq(0, _this.transform))
        return _this;
      t1 = _this.position;
      transformedPosition = F.PointerEvent_transformPosition(transform, t1);
      t2 = _this.delta;
      t3 = F.PointerEvent_transformDeltaViaPositions(transform, transformedPosition, t2, t1);
      t4 = type$.PointerExitEvent._as(_this.original);
      if (t4 == null)
        t4 = _this;
      return F.PointerExitEvent$(_this.buttons, t2, _this.device, _this.distance, _this.distanceMax, _this.down, _this.kind, t3, transformedPosition, _this.obscured, _this.orientation, t4, t1, _this.pressureMax, _this.pressureMin, _this.radiusMajor, _this.radiusMax, _this.radiusMin, _this.radiusMinor, _this.size, _this.synthesized, _this.tilt, _this.timeStamp, transform);
    }
  };
  F.PointerDownEvent.prototype = {
    transformed$1: function(transform) {
      var t1, t2, t3, _this = this;
      if (transform == null || transform.$eq(0, _this.transform))
        return _this;
      t1 = _this.position;
      t2 = F.PointerEvent_transformPosition(transform, t1);
      t3 = type$.PointerDownEvent._as(_this.original);
      if (t3 == null)
        t3 = _this;
      return F.PointerDownEvent$(_this.buttons, _this.device, _this.distanceMax, _this.kind, t2, _this.obscured, _this.orientation, t3, _this.pointer, t1, _this.pressure, _this.pressureMax, _this.pressureMin, _this.radiusMajor, _this.radiusMax, _this.radiusMin, _this.radiusMinor, _this.size, _this.tilt, _this.timeStamp, transform);
    }
  };
  F.PointerMoveEvent.prototype = {
    transformed$1: function(transform) {
      var t1, transformedPosition, t2, t3, t4, _this = this;
      if (transform == null || transform.$eq(0, _this.transform))
        return _this;
      t1 = _this.position;
      transformedPosition = F.PointerEvent_transformPosition(transform, t1);
      t2 = _this.delta;
      t3 = F.PointerEvent_transformDeltaViaPositions(transform, transformedPosition, t2, t1);
      t4 = type$.PointerMoveEvent._as(_this.original);
      if (t4 == null)
        t4 = _this;
      return F.PointerMoveEvent$(_this.buttons, t2, _this.device, _this.distanceMax, _this.kind, t3, transformedPosition, _this.obscured, _this.orientation, t4, _this.platformData, _this.pointer, t1, _this.pressure, _this.pressureMax, _this.pressureMin, _this.radiusMajor, _this.radiusMax, _this.radiusMin, _this.radiusMinor, _this.size, _this.synthesized, _this.tilt, _this.timeStamp, transform);
    }
  };
  F.PointerUpEvent.prototype = {
    transformed$1: function(transform) {
      var t1, t2, t3, _this = this;
      if (transform == null || transform.$eq(0, _this.transform))
        return _this;
      t1 = _this.position;
      t2 = F.PointerEvent_transformPosition(transform, t1);
      t3 = type$.PointerUpEvent._as(_this.original);
      if (t3 == null)
        t3 = _this;
      return F.PointerUpEvent$(_this.buttons, _this.device, _this.distance, _this.distanceMax, _this.kind, t2, _this.obscured, _this.orientation, t3, _this.pointer, t1, _this.pressure, _this.pressureMax, _this.pressureMin, _this.radiusMajor, _this.radiusMax, _this.radiusMin, _this.radiusMinor, _this.size, _this.tilt, _this.timeStamp, transform);
    }
  };
  F.PointerSignalEvent.prototype = {};
  F.PointerScrollEvent.prototype = {
    transformed$1: function(transform) {
      var t1, t2, t3, _this = this;
      if (transform == null || transform.$eq(0, _this.transform))
        return _this;
      t1 = _this.position;
      t2 = F.PointerEvent_transformPosition(transform, t1);
      t3 = type$.PointerScrollEvent._as(_this.original);
      if (t3 == null)
        t3 = _this;
      return F.PointerScrollEvent$(_this.device, _this.kind, t2, t3, t1, _this.scrollDelta, _this.timeStamp, transform);
    }
  };
  F.PointerCancelEvent.prototype = {
    transformed$1: function(transform) {
      var t1, t2, t3, _this = this;
      if (transform == null || transform.$eq(0, _this.transform))
        return _this;
      t1 = _this.position;
      t2 = F.PointerEvent_transformPosition(transform, t1);
      t3 = type$.PointerCancelEvent._as(_this.original);
      if (t3 == null)
        t3 = _this;
      return F.PointerCancelEvent$(_this.buttons, _this.device, _this.distance, _this.distanceMax, _this.kind, t2, _this.obscured, _this.orientation, t3, _this.pointer, t1, _this.pressureMax, _this.pressureMin, _this.radiusMajor, _this.radiusMax, _this.radiusMin, _this.radiusMinor, _this.size, _this.tilt, _this.timeStamp, transform);
    }
  };
  F._PointerEvent_Object_Diagnosticable.prototype = {};
  O.HitTestTarget.prototype = {};
  O.HitTestEntry.prototype = {
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(" + this.get$target(this).toString$0(0) + ")";
    },
    get$target: function(receiver) {
      return this.target;
    }
  };
  O.HitTestResult.prototype = {
    add$1: function(_, entry) {
      var t1 = this._transforms;
      entry._transform = t1._head === t1._tail ? null : t1.get$last(t1);
      this._path.push(entry);
    },
    pushTransform$1: function(transform) {
      var t1 = this._transforms;
      t1._add$1(0, t1._head === t1._tail ? transform : type$.Matrix4._as(transform.$mul(0, t1.get$last(t1))));
    },
    toString$0: function(_) {
      var t1 = this._path;
      return "HitTestResult(" + (t1.length === 0 ? "<empty path>" : C.JSArray_methods.join$1(t1, ", ")) + ")";
    }
  };
  T.LongPressStartDetails.prototype = {};
  T.LongPressMoveUpdateDetails.prototype = {};
  T.LongPressEndDetails.prototype = {};
  T.LongPressGestureRecognizer.prototype = {
    isPointerAllowed$1: function($event) {
      var _this = this;
      switch ($event.buttons) {
        case 1:
          if (_this.onLongPressStart == null && _this.onLongPress == null && _this.onLongPressMoveUpdate == null && _this.onLongPressEnd == null && true)
            return false;
          break;
        default:
          return false;
      }
      return _this.super$GestureRecognizer$isPointerAllowed($event);
    },
    didExceedDeadline$0: function() {
      var _this = this;
      _this.resolve$1(C.GestureDisposition_0);
      _this._longPressAccepted = true;
      _this.super$PrimaryPointerGestureRecognizer$acceptGesture(_this.primaryPointer);
      _this._checkLongPressStart$0();
    },
    handlePrimaryPointer$1: function($event) {
      var t1, _this = this;
      if (!$event.synthesized) {
        if ($event instanceof F.PointerDownEvent) {
          t1 = new Array(20);
          t1.fixed$length = Array;
          t1 = new R.VelocityTracker(H.setRuntimeTypeInfo(t1, type$.JSArray__PointAtTime));
          _this._velocityTracker = t1;
          t1.addPosition$2($event.timeStamp, $event.localPosition);
        }
        if ($event instanceof F.PointerMoveEvent)
          _this._velocityTracker.addPosition$2($event.timeStamp, $event.localPosition);
      }
      if ($event instanceof F.PointerUpEvent) {
        if (_this._longPressAccepted)
          _this._checkLongPressEnd$1($event);
        else
          _this.resolve$1(C.GestureDisposition_1);
        _this._long_press$_reset$0();
      } else if ($event instanceof F.PointerCancelEvent)
        _this._long_press$_reset$0();
      else if ($event instanceof F.PointerDownEvent) {
        _this._longPressOrigin = new S.OffsetPair($event.localPosition, $event.position);
        _this._long_press$_initialButtons = $event.buttons;
      } else if ($event instanceof F.PointerMoveEvent)
        if ($event.buttons != _this._long_press$_initialButtons) {
          _this.resolve$1(C.GestureDisposition_1);
          _this.stopTrackingPointer$1(_this.primaryPointer);
        } else if (_this._longPressAccepted)
          _this._checkLongPressMoveUpdate$1($event);
    },
    _checkLongPressStart$0: function() {
      var t1, t2, _this = this;
      if (_this.onLongPressStart != null) {
        t1 = _this._longPressOrigin;
        t2 = t1.global;
        t1 = t1.local;
        _this.invokeCallback$2("onLongPressStart", new T.LongPressGestureRecognizer__checkLongPressStart_closure(_this, new T.LongPressStartDetails(t1 == null ? t2 : t1)));
      }
      t1 = _this.onLongPress;
      if (t1 != null)
        _this.invokeCallback$2("onLongPress", t1);
    },
    _checkLongPressMoveUpdate$1: function($event) {
      var _this = this,
        t1 = $event.localPosition;
      $event.position.$sub(0, _this._longPressOrigin.global);
      t1.$sub(0, _this._longPressOrigin.local);
      if (_this.onLongPressMoveUpdate != null)
        _this.invokeCallback$2("onLongPressMoveUpdate", new T.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure(_this, new T.LongPressMoveUpdateDetails(t1)));
    },
    _checkLongPressEnd$1: function($event) {
      var _this = this,
        estimate = _this._velocityTracker.getVelocityEstimate$0(),
        velocity = estimate == null ? C.Velocity_Offset_0_0 : new R.Velocity(estimate.pixelsPerSecond),
        t1 = $event.position,
        t2 = $event.localPosition;
      t1 = t2 == null ? t1 : t2;
      _this._velocityTracker = null;
      if (_this.onLongPressEnd != null)
        _this.invokeCallback$2("onLongPressEnd", new T.LongPressGestureRecognizer__checkLongPressEnd_closure(_this, new T.LongPressEndDetails(t1, velocity)));
    },
    _long_press$_reset$0: function() {
      var _this = this;
      _this._longPressAccepted = false;
      _this._velocityTracker = _this._long_press$_initialButtons = _this._longPressOrigin = null;
    },
    resolve$1: function(disposition) {
      if (this._longPressAccepted && disposition === C.GestureDisposition_1)
        this._long_press$_reset$0();
      this.super$OneSequenceGestureRecognizer$resolve(disposition);
    },
    acceptGesture$1: function(pointer) {
    }
  };
  T.LongPressGestureRecognizer__checkLongPressStart_closure.prototype = {
    call$0: function() {
      return this.$this.onLongPressStart.call$1(this.details);
    },
    $signature: 1
  };
  T.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure.prototype = {
    call$0: function() {
      return this.$this.onLongPressMoveUpdate.call$1(this.details);
    },
    $signature: 1
  };
  T.LongPressGestureRecognizer__checkLongPressEnd_closure.prototype = {
    call$0: function() {
      return this.$this.onLongPressEnd.call$1(this.details);
    },
    $signature: 1
  };
  B._Vector.prototype = {
    $index: function(_, i) {
      return this._lsq_solver$_elements[i + this._lsq_solver$_offset];
    },
    $mul: function(_, a) {
      var t1, t2, t3, result, i;
      for (t1 = this._lsq_solver$_length, t2 = this._lsq_solver$_elements, t3 = this._lsq_solver$_offset, result = 0, i = 0; i < t1; ++i)
        result += t2[i + t3] * a._lsq_solver$_elements[i + a._lsq_solver$_offset];
      return result;
    }
  };
  B._Matrix.prototype = {};
  B.PolynomialFit.prototype = {};
  B.LeastSquaresSolver.prototype = {
    solve$1: function(degree) {
      var t2, result, m, t3, t4, t5, t6, h, i, j, t7, t8, dot, t9, norm, inverseNorm, wy, i0, yMean, sumSquaredError, sumSquaredTotal, err, term, v,
        t1 = this.x;
      if (degree > t1.length)
        return null;
      t2 = degree + 1;
      result = new B.PolynomialFit(new Float64Array(t2));
      m = t1.length;
      t3 = t2 * m;
      t4 = new Float64Array(t3);
      for (t5 = this.w, t6 = 0 * m, h = 0; h < m; ++h) {
        t4[t6 + h] = t5[h];
        for (i = 1; i < t2; ++i)
          t4[i * m + h] = t4[(i - 1) * m + h] * t1[h];
      }
      t3 = new Float64Array(t3);
      t6 = new Float64Array(t2 * t2);
      for (j = 0; j < t2; ++j) {
        for (t7 = j * m, h = 0; h < m; ++h) {
          t8 = t7 + h;
          t3[t8] = t4[t8];
        }
        for (i = 0; i < j; ++i) {
          t8 = i * m;
          dot = new B._Vector(t7, m, t3).$mul(0, new B._Vector(t8, m, t3));
          for (h = 0; h < m; ++h) {
            t9 = t7 + h;
            t3[t9] = t3[t9] - dot * t3[t8 + h];
          }
        }
        t8 = new B._Vector(t7, m, t3);
        norm = Math.sqrt(t8.$mul(0, t8));
        if (norm < 1e-10)
          return null;
        inverseNorm = 1 / norm;
        for (h = 0; h < m; ++h) {
          t8 = t7 + h;
          t3[t8] = t3[t8] * inverseNorm;
        }
        for (t8 = j * t2, i = 0; i < t2; ++i) {
          t9 = i < j ? 0 : new B._Vector(t7, m, t3).$mul(0, new B._Vector(i * m, m, t4));
          t6[t8 + i] = t9;
        }
      }
      t4 = new Float64Array(m);
      wy = new B._Vector(0, m, t4);
      for (t7 = this.y, h = 0; h < m; ++h)
        t4[h] = t7[h] * t5[h];
      for (i = t2 - 1, t4 = result.coefficients, i0 = i; i0 >= 0; --i0) {
        t4[i0] = new B._Vector(i0 * m, m, t3).$mul(0, wy);
        for (t8 = i0 * t2, j = i; j > i0; --j)
          t4[i0] = t4[i0] - t6[t8 + j] * t4[j];
        t4[i0] = t4[i0] / t6[t8 + i0];
      }
      for (yMean = 0, h = 0; h < m; ++h)
        yMean += t7[h];
      yMean /= m;
      for (sumSquaredError = 0, sumSquaredTotal = 0, h = 0; h < m; ++h) {
        t3 = t7[h];
        err = t3 - t4[0];
        for (term = 1, i = 1; i < t2; ++i) {
          term *= t1[h];
          err -= term * t4[i];
        }
        t6 = t5[h];
        t6 *= t6;
        sumSquaredError += t6 * err * err;
        v = t3 - yMean;
        sumSquaredTotal += t6 * v * v;
      }
      result.confidence = sumSquaredTotal <= 1e-10 ? 1 : 1 - sumSquaredError / sumSquaredTotal;
      return result;
    }
  };
  O._DragState.prototype = {
    toString$0: function(_) {
      return this._monodrag$_name;
    }
  };
  O.DragGestureRecognizer.prototype = {
    isPointerAllowed$1: function($event) {
      var _this = this,
        t1 = _this._initialButtons;
      if (t1 == null)
        switch ($event.buttons) {
          case 1:
            if (_this.onDown == null && _this.onStart == null && _this.onUpdate == null && _this.onEnd == null && _this.onCancel == null)
              return false;
            break;
          default:
            return false;
        }
      else if ($event.buttons !== t1)
        return false;
      return _this.super$GestureRecognizer$isPointerAllowed($event);
    },
    addAllowedPointer$1: function($event) {
      var t3, _this = this,
        t1 = $event.pointer,
        t2 = $event.transform;
      _this.startTrackingPointer$2(t1, t2);
      t3 = new Array(20);
      t3.fixed$length = Array;
      _this._velocityTrackers.$indexSet(0, t1, new R.VelocityTracker(H.setRuntimeTypeInfo(t3, type$.JSArray__PointAtTime)));
      t1 = _this._monodrag$_state;
      if (t1 === C._DragState_0) {
        _this._monodrag$_state = C._DragState_1;
        _this._initialPosition = new S.OffsetPair($event.localPosition, $event.position);
        _this._initialButtons = $event.buttons;
        _this._pendingDragOffset = C.OffsetPair_G6F;
        _this._globalDistanceMoved = 0;
        _this._lastPendingEventTimestamp = $event.timeStamp;
        _this._lastTransform = t2;
        _this._checkDown$0();
      } else if (t1 === C._DragState_2)
        _this.resolve$1(C.GestureDisposition_0);
    },
    handleEvent$1: function($event) {
      var t1, t2, t3, movedLocally, localToGlobalTransform, _this = this;
      if (!$event.synthesized)
        t1 = $event instanceof F.PointerDownEvent || $event instanceof F.PointerMoveEvent;
      else
        t1 = false;
      if (t1)
        _this._velocityTrackers.$index(0, $event.pointer).addPosition$2($event.timeStamp, $event.localPosition);
      if ($event instanceof F.PointerMoveEvent) {
        if ($event.buttons != _this._initialButtons) {
          _this._giveUpPointer$1($event.pointer);
          return;
        }
        t1 = _this._monodrag$_state;
        t2 = $event.timeStamp;
        t3 = $event.localDelta;
        if (t1 === C._DragState_2) {
          t1 = _this._getDeltaForDetails$1(t3);
          t3 = _this._getPrimaryValueFromOffset$1(t3);
          _this._checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp(t1, $event.position, $event.localPosition, t3, t2);
        } else {
          _this._pendingDragOffset = _this._pendingDragOffset.$add(0, new S.OffsetPair(t3, $event.delta));
          _this._lastPendingEventTimestamp = t2;
          t1 = _this._lastTransform = $event.transform;
          movedLocally = _this._getDeltaForDetails$1(t3);
          localToGlobalTransform = t1 == null ? null : E.Matrix4_tryInvert(t1);
          t1 = _this._globalDistanceMoved;
          t2 = F.PointerEvent_transformDeltaViaPositions(localToGlobalTransform, null, movedLocally, $event.localPosition).get$distance();
          t3 = _this._getPrimaryValueFromOffset$1(movedLocally);
          _this._globalDistanceMoved = t1 + t2 * J.get$sign$in(t3 == null ? 1 : t3);
          if (_this.get$_hasSufficientGlobalDistanceToAccept())
            _this.resolve$1(C.GestureDisposition_0);
        }
      }
      if ($event instanceof F.PointerUpEvent || $event instanceof F.PointerCancelEvent) {
        t1 = $event.pointer;
        _this._giveUpPointer$2$reject(t1, $event instanceof F.PointerCancelEvent || _this._monodrag$_state === C._DragState_1);
      }
    },
    acceptGesture$1: function(pointer) {
      var delta, timestamp, transform, localUpdateDelta, localToGlobal, globalUpdateDelta, correctedPosition, _this = this;
      if (_this._monodrag$_state !== C._DragState_2) {
        _this._monodrag$_state = C._DragState_2;
        delta = _this._pendingDragOffset;
        timestamp = _this._lastPendingEventTimestamp;
        transform = _this._lastTransform;
        switch (_this.dragStartBehavior) {
          case C.DragStartBehavior_1:
            _this._initialPosition = _this._initialPosition.$add(0, delta);
            localUpdateDelta = C.Offset_0_0;
            break;
          case C.DragStartBehavior_0:
            localUpdateDelta = _this._getDeltaForDetails$1(delta.local);
            break;
          default:
            localUpdateDelta = null;
        }
        _this._pendingDragOffset = C.OffsetPair_G6F;
        _this._lastTransform = _this._lastPendingEventTimestamp = null;
        _this._checkStart$1(timestamp);
        if (!J.$eq$(localUpdateDelta, C.Offset_0_0) && _this.onUpdate != null) {
          localToGlobal = transform != null ? E.Matrix4_tryInvert(transform) : null;
          globalUpdateDelta = F.PointerEvent_transformDeltaViaPositions(localToGlobal, null, localUpdateDelta, _this._initialPosition.local.$add(0, localUpdateDelta));
          correctedPosition = _this._initialPosition.$add(0, new S.OffsetPair(localUpdateDelta, globalUpdateDelta));
          _this._checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp(localUpdateDelta, correctedPosition.global, correctedPosition.local, _this._getPrimaryValueFromOffset$1(localUpdateDelta), timestamp);
        }
      }
    },
    rejectGesture$1: function(pointer) {
      this._giveUpPointer$1(pointer);
    },
    didStopTrackingLastPointer$1: function(pointer) {
      var t1, _this = this;
      switch (_this._monodrag$_state) {
        case C._DragState_0:
          break;
        case C._DragState_1:
          _this.resolve$1(C.GestureDisposition_1);
          t1 = _this.onCancel;
          if (t1 != null)
            _this.invokeCallback$2("onCancel", t1);
          break;
        case C._DragState_2:
          _this._checkEnd$1(pointer);
          break;
      }
      _this._velocityTrackers.clear$0(0);
      _this._initialButtons = null;
      _this._monodrag$_state = C._DragState_0;
    },
    _giveUpPointer$2$reject: function(pointer, reject) {
      var t1, entry;
      this.stopTrackingPointer$1(pointer);
      if (reject) {
        t1 = this._velocityTrackers;
        if (t1.containsKey$1(0, pointer)) {
          t1.remove$1(0, pointer);
          t1 = this._recognizer$_entries;
          entry = t1.$index(0, pointer);
          if (entry != null) {
            entry._arena._resolve$3(entry._arena$_pointer, entry._member, C.GestureDisposition_1);
            t1.remove$1(0, pointer);
          }
        }
      }
    },
    _giveUpPointer$1: function(pointer) {
      return this._giveUpPointer$2$reject(pointer, true);
    },
    _checkDown$0: function() {
      var _this = this,
        t1 = _this._initialPosition,
        details = O.DragDownDetails$(t1.global, t1.local);
      if (_this.onDown != null)
        _this.invokeCallback$2("onDown", new O.DragGestureRecognizer__checkDown_closure(_this, details));
    },
    _checkStart$1: function(timestamp) {
      var _this = this,
        t1 = _this._initialPosition,
        details = O.DragStartDetails$(t1.global, t1.local, timestamp);
      if (_this.onStart != null)
        _this.invokeCallback$2("onStart", new O.DragGestureRecognizer__checkStart_closure(_this, details));
    },
    _checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp: function(delta, globalPosition, localPosition, primaryDelta, sourceTimeStamp) {
      var details = O.DragUpdateDetails$(delta, globalPosition, localPosition, primaryDelta, sourceTimeStamp);
      if (this.onUpdate != null)
        this.invokeCallback$2("onUpdate", new O.DragGestureRecognizer__checkUpdate_closure(this, details));
    },
    _checkEnd$1: function(pointer) {
      var tracker, estimate, t2, t3, t4, velocity, debugReport, _this = this, t1 = {};
      if (_this.onEnd == null)
        return;
      tracker = _this._velocityTrackers.$index(0, pointer);
      t1.details = null;
      estimate = tracker.getVelocityEstimate$0();
      if (estimate != null && _this.isFlingGesture$1(estimate)) {
        t2 = estimate.pixelsPerSecond;
        t3 = _this.minFlingVelocity;
        if (t3 == null)
          t3 = 50;
        t4 = _this.maxFlingVelocity;
        if (t4 == null)
          t4 = 8000;
        velocity = new R.Velocity(t2).clampMagnitude$2(t3, t4);
        t1.details = new O.DragEndDetails(velocity, _this._getPrimaryValueFromOffset$1(velocity.pixelsPerSecond));
        debugReport = new O.DragGestureRecognizer__checkEnd_closure(estimate, velocity);
      } else {
        t1.details = new O.DragEndDetails(C.Velocity_Offset_0_0, 0);
        debugReport = new O.DragGestureRecognizer__checkEnd_closure0(estimate);
      }
      _this.invokeCallback$3$debugReport("onEnd", new O.DragGestureRecognizer__checkEnd_closure1(t1, _this), debugReport);
    },
    dispose$0: function() {
      this._velocityTrackers.clear$0(0);
      this.super$OneSequenceGestureRecognizer$dispose();
    }
  };
  O.DragGestureRecognizer__checkDown_closure.prototype = {
    call$0: function() {
      return this.$this.onDown.call$1(this.details);
    },
    $signature: 1
  };
  O.DragGestureRecognizer__checkStart_closure.prototype = {
    call$0: function() {
      return this.$this.onStart.call$1(this.details);
    },
    $signature: 1
  };
  O.DragGestureRecognizer__checkUpdate_closure.prototype = {
    call$0: function() {
      return this.$this.onUpdate.call$1(this.details);
    },
    $signature: 1
  };
  O.DragGestureRecognizer__checkEnd_closure.prototype = {
    call$0: function() {
      return this.estimate.toString$0(0) + "; fling at " + this.velocity.toString$0(0) + ".";
    },
    $signature: 37
  };
  O.DragGestureRecognizer__checkEnd_closure0.prototype = {
    call$0: function() {
      var t1 = this.estimate;
      if (t1 == null)
        return "Could not estimate velocity.";
      return t1.toString$0(0) + "; judged to not be a fling.";
    },
    $signature: 37
  };
  O.DragGestureRecognizer__checkEnd_closure1.prototype = {
    call$0: function() {
      var t1 = this._box_0.details;
      return this.$this.onEnd.call$1(t1);
    },
    $signature: 1
  };
  O.VerticalDragGestureRecognizer.prototype = {
    isFlingGesture$1: function(estimate) {
      var minDistance,
        minVelocity = this.minFlingVelocity;
      if (minVelocity == null)
        minVelocity = 50;
      minDistance = this.minFlingDistance;
      if (minDistance == null)
        minDistance = 18;
      return Math.abs(estimate.pixelsPerSecond._dy) > minVelocity && Math.abs(estimate.offset._dy) > minDistance;
    },
    get$_hasSufficientGlobalDistanceToAccept: function() {
      return Math.abs(this._globalDistanceMoved) > 18;
    },
    _getDeltaForDetails$1: function(delta) {
      return new P.Offset(0, delta._dy);
    },
    _getPrimaryValueFromOffset$1: function(value) {
      return value._dy;
    }
  };
  O.HorizontalDragGestureRecognizer.prototype = {
    isFlingGesture$1: function(estimate) {
      var minDistance,
        minVelocity = this.minFlingVelocity;
      if (minVelocity == null)
        minVelocity = 50;
      minDistance = this.minFlingDistance;
      if (minDistance == null)
        minDistance = 18;
      return Math.abs(estimate.pixelsPerSecond._dx) > minVelocity && Math.abs(estimate.offset._dx) > minDistance;
    },
    get$_hasSufficientGlobalDistanceToAccept: function() {
      return Math.abs(this._globalDistanceMoved) > 18;
    },
    _getDeltaForDetails$1: function(delta) {
      return new P.Offset(delta._dx, 0);
    },
    _getPrimaryValueFromOffset$1: function(value) {
      return value._dx;
    }
  };
  O.PanGestureRecognizer.prototype = {
    isFlingGesture$1: function(estimate) {
      var minDistance,
        minVelocity = this.minFlingVelocity;
      if (minVelocity == null)
        minVelocity = 50;
      minDistance = this.minFlingDistance;
      if (minDistance == null)
        minDistance = 18;
      return estimate.pixelsPerSecond.get$distanceSquared() > minVelocity * minVelocity && estimate.offset.get$distanceSquared() > minDistance * minDistance;
    },
    get$_hasSufficientGlobalDistanceToAccept: function() {
      return Math.abs(this._globalDistanceMoved) > 36;
    },
    _getDeltaForDetails$1: function(delta) {
      return delta;
    },
    _getPrimaryValueFromOffset$1: function(value) {
      return null;
    }
  };
  F._CountdownZoned.prototype = {
    _onTimeout$0: function() {
      this._timeout = true;
    }
  };
  F._TapTracker.prototype = {
    stopTrackingPointer$1: function(route) {
      if (this._isTrackingPointer) {
        this._isTrackingPointer = false;
        $.GestureBinding__instance.GestureBinding_pointerRouter.removeRoute$2(this.pointer, route);
      }
    },
    isWithinGlobalTolerance$2: function($event, tolerance) {
      return $event.position.$sub(0, this._initialGlobalPosition).get$distance() <= tolerance;
    }
  };
  F.DoubleTapGestureRecognizer.prototype = {
    isPointerAllowed$1: function($event) {
      if (this._firstTap == null)
        switch ($event.buttons) {
          case 1:
            if (this.onDoubleTap == null)
              return false;
            break;
          default:
            return false;
        }
      return this.super$GestureRecognizer$isPointerAllowed($event);
    },
    addAllowedPointer$1: function($event) {
      var _this = this,
        t1 = _this._firstTap;
      if (t1 != null)
        if (!t1.isWithinGlobalTolerance$2($event, 100))
          return;
        else {
          t1 = _this._firstTap;
          if (!t1._doubleTapMinTimeCountdown._timeout || $event.buttons != t1.initialButtons) {
            _this._multitap$_reset$0();
            return _this._trackFirstTap$1($event);
          }
        }
      _this._trackFirstTap$1($event);
    },
    _trackFirstTap$1: function($event) {
      var t1, t2, t3, tracker, _this = this;
      _this._stopDoubleTapTimer$0();
      t1 = $event.pointer;
      t2 = $.GestureBinding__instance.GestureBinding_gestureArena.add$2(0, t1, _this);
      t3 = new F._CountdownZoned();
      P.Timer_Timer(C.Duration_40000, t3.get$_onTimeout());
      tracker = new F._TapTracker(t1, t2, $event.position, $event.buttons, t3);
      _this._trackers.$indexSet(0, t1, tracker);
      if (!tracker._isTrackingPointer) {
        tracker._isTrackingPointer = true;
        $.GestureBinding__instance.GestureBinding_pointerRouter.addRoute$3(t1, _this.get$_handleEvent(), $event.transform);
      }
    },
    _handleEvent$1: function($event) {
      var t2, t3, _this = this,
        t1 = _this._trackers,
        tracker = t1.$index(0, $event.pointer);
      if ($event instanceof F.PointerUpEvent) {
        t2 = _this._firstTap;
        if (t2 == null) {
          if (_this._doubleTapTimer == null)
            _this._doubleTapTimer = P.Timer_Timer(C.Duration_300000, _this.get$_multitap$_reset());
          t2 = $.GestureBinding__instance.GestureBinding_gestureArena;
          t3 = tracker.pointer;
          t2.hold$1(t3);
          tracker.stopTrackingPointer$1(_this.get$_handleEvent());
          t1.remove$1(0, t3);
          _this._clearTrackers$0();
          _this._firstTap = tracker;
        } else {
          t2 = t2.entry;
          t2._arena._resolve$3(t2._arena$_pointer, t2._member, C.GestureDisposition_0);
          t2 = tracker.entry;
          t2._arena._resolve$3(t2._arena$_pointer, t2._member, C.GestureDisposition_0);
          tracker.stopTrackingPointer$1(_this.get$_handleEvent());
          t1.remove$1(0, tracker.pointer);
          t1 = _this.onDoubleTap;
          if (t1 != null)
            _this.invokeCallback$2("onDoubleTap", t1);
          _this._multitap$_reset$0();
        }
      } else if ($event instanceof F.PointerMoveEvent) {
        if (!tracker.isWithinGlobalTolerance$2($event, 18))
          _this._reject$1(tracker);
      } else if ($event instanceof F.PointerCancelEvent)
        _this._reject$1(tracker);
    },
    acceptGesture$1: function(pointer) {
    },
    rejectGesture$1: function(pointer) {
      var t1, _this = this,
        tracker = _this._trackers.$index(0, pointer);
      if (tracker == null) {
        t1 = _this._firstTap;
        t1 = t1 != null && t1.pointer == pointer;
      } else
        t1 = false;
      if (t1)
        tracker = _this._firstTap;
      if (tracker != null)
        _this._reject$1(tracker);
    },
    _reject$1: function(tracker) {
      var t2, _this = this,
        t1 = _this._trackers;
      t1.remove$1(0, tracker.pointer);
      t2 = tracker.entry;
      t2._arena._resolve$3(t2._arena$_pointer, t2._member, C.GestureDisposition_1);
      tracker.stopTrackingPointer$1(_this.get$_handleEvent());
      if (_this._firstTap != null)
        t1 = t1.get$isEmpty(t1) || tracker == _this._firstTap;
      else
        t1 = false;
      if (t1)
        _this._multitap$_reset$0();
    },
    dispose$0: function() {
      this._multitap$_reset$0();
      this.super$GestureRecognizer$dispose();
    },
    _multitap$_reset$0: function() {
      var t1, _this = this;
      _this._stopDoubleTapTimer$0();
      t1 = _this._firstTap;
      if (t1 != null) {
        _this._firstTap = null;
        _this._reject$1(t1);
        $.GestureBinding__instance.GestureBinding_gestureArena.release$1(0, t1.pointer);
      }
      _this._clearTrackers$0();
    },
    _clearTrackers$0: function() {
      var t1 = this._trackers;
      t1 = t1.get$values(t1);
      C.JSArray_methods.forEach$1(P.List_List$from(t1, true, H._instanceType(t1)._eval$1("Iterable.E")), this.get$_reject());
    },
    _stopDoubleTapTimer$0: function() {
      var t1 = this._doubleTapTimer;
      if (t1 != null) {
        t1.cancel$0(0);
        this._doubleTapTimer = null;
      }
    }
  };
  O.PointerRouter.prototype = {
    addRoute$3: function(pointer, route, transform) {
      J.$indexSet$ax(this._routeMap.putIfAbsent$2(0, pointer, new O.PointerRouter_addRoute_closure()), route, transform);
    },
    removeRoute$2: function(pointer, route) {
      var t1 = this._routeMap,
        routes = t1.$index(0, pointer),
        t2 = J.getInterceptor$ax(routes);
      t2.remove$1(routes, route);
      if (t2.get$isEmpty(routes))
        t1.remove$1(0, pointer);
    },
    _dispatch$3: function($event, route, transform) {
      var exception, stack, exception0, _null = null;
      try {
        route.call$1($event.transformed$1(transform));
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        stack = H.getTraceFromException(exception0);
        $.$get$FlutterError_onError().call$1(new O.FlutterErrorDetailsForPointerRouter(exception, stack, "gesture library", new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["while routing a pointer event"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), _null, false));
      }
    },
    route$1: function($event) {
      var _this = this,
        routes = _this._routeMap.$index(0, $event.pointer),
        t1 = _this._globalRoutes,
        t2 = type$.void_Function_PointerEvent,
        t3 = type$.Matrix4,
        copiedGlobalRoutes = P.LinkedHashMap_LinkedHashMap$from(t1, t2, t3);
      if (routes != null)
        _this._dispatchEventToRoutes$3($event, routes, P.LinkedHashMap_LinkedHashMap$from(routes, t2, t3));
      _this._dispatchEventToRoutes$3($event, t1, copiedGlobalRoutes);
    },
    _dispatchEventToRoutes$3: function($event, referenceRoutes, copiedRoutes) {
      copiedRoutes.forEach$1(0, new O.PointerRouter__dispatchEventToRoutes_closure(this, referenceRoutes, $event));
    }
  };
  O.PointerRouter_addRoute_closure.prototype = {
    call$0: function() {
      return P.LinkedHashMap_LinkedHashMap$_empty(type$.void_Function_PointerEvent, type$.Matrix4);
    },
    $signature: 85
  };
  O.PointerRouter__dispatchEventToRoutes_closure.prototype = {
    call$2: function(route, transform) {
      if (J.containsKey$1$x(this.referenceRoutes, route))
        this.$this._dispatch$3(this.event, route, transform);
    },
    $signature: 86
  };
  O.FlutterErrorDetailsForPointerRouter.prototype = {};
  G.PointerSignalResolver.prototype = {
    register$2: function(_, $event, callback) {
      if (this._firstRegisteredCallback != null)
        return;
      this._currentEvent = $event;
      this._firstRegisteredCallback = callback;
    },
    resolve$1: function($event) {
      var exception, stack, exception0, _this = this, _null = null,
        t1 = _this._firstRegisteredCallback;
      if (t1 == null)
        return;
      try {
        t1.call$1(_this._currentEvent);
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        stack = H.getTraceFromException(exception0);
        t1 = U.FlutterErrorDetails$(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["while resolving a PointerSignalEvent"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), exception, _null, "gesture library", false, stack);
        $.$get$FlutterError_onError().call$1(t1);
      }
      _this._currentEvent = _this._firstRegisteredCallback = null;
    }
  };
  S.DragStartBehavior.prototype = {
    toString$0: function(_) {
      return this._recognizer$_name;
    }
  };
  S.GestureRecognizer.prototype = {
    addPointer$1: function($event) {
      var _this = this;
      _this._pointerToKind.$indexSet(0, $event.pointer, $event.kind);
      if (_this.isPointerAllowed$1($event))
        _this.addAllowedPointer$1($event);
      else
        _this.handleNonAllowedPointer$1($event);
    },
    addAllowedPointer$1: function($event) {
    },
    handleNonAllowedPointer$1: function($event) {
    },
    isPointerAllowed$1: function($event) {
      return true;
    },
    dispose$0: function() {
    },
    invokeCallback$1$3$debugReport: function($name, callback, debugReport) {
      var exception, stack, exception0, t1, _null = null, result = null;
      try {
        result = callback.call$0();
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        stack = H.getTraceFromException(exception0);
        t1 = U.FlutterErrorDetails$(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["while handling a gesture"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), exception, _null, "gesture", false, stack);
        $.$get$FlutterError_onError().call$1(t1);
      }
      return result;
    },
    invokeCallback$2: function($name, callback) {
      return this.invokeCallback$1$3$debugReport($name, callback, null, type$.dynamic);
    },
    invokeCallback$3$debugReport: function($name, callback, debugReport) {
      return this.invokeCallback$1$3$debugReport($name, callback, debugReport, type$.dynamic);
    },
    $isDiagnosticableTree: 1
  };
  S.OneSequenceGestureRecognizer.prototype = {
    handleNonAllowedPointer$1: function($event) {
      this.resolve$1(C.GestureDisposition_1);
    },
    acceptGesture$1: function(pointer) {
    },
    rejectGesture$1: function(pointer) {
    },
    resolve$1: function(disposition) {
      var _i, entry,
        t1 = this._recognizer$_entries,
        localEntries = P.List_List$from(t1.get$values(t1), true, type$.GestureArenaEntry);
      t1.clear$0(0);
      for (t1 = localEntries.length, _i = 0; _i < localEntries.length; localEntries.length === t1 || (0, H.throwConcurrentModificationError)(localEntries), ++_i) {
        entry = localEntries[_i];
        entry._arena._resolve$3(entry._arena$_pointer, entry._member, disposition);
      }
    },
    dispose$0: function() {
      var t1, t2, t3, t4, t5, routes, t6, _this = this;
      _this.resolve$1(C.GestureDisposition_1);
      for (t1 = _this._trackedPointers, t2 = new P._HashSetIterator(t1, t1._computeElements$0()); t2.moveNext$0();) {
        t3 = t2._collection$_current;
        t4 = $.GestureBinding__instance.GestureBinding_pointerRouter;
        t5 = _this.get$handleEvent();
        t4 = t4._routeMap;
        routes = t4.$index(0, t3);
        t6 = J.getInterceptor$ax(routes);
        t6.remove$1(routes, t5);
        if (t6.get$isEmpty(routes))
          t4.remove$1(0, t3);
      }
      t1.clear$0(0);
      _this.super$GestureRecognizer$dispose();
    },
    _addPointerToArena$1: function(pointer) {
      return $.GestureBinding__instance.GestureBinding_gestureArena.add$2(0, pointer, this);
    },
    startTrackingPointer$2: function(pointer, transform) {
      var _this = this;
      $.GestureBinding__instance.GestureBinding_pointerRouter.addRoute$3(pointer, _this.get$handleEvent(), transform);
      _this._trackedPointers.add$1(0, pointer);
      _this._recognizer$_entries.$indexSet(0, pointer, _this._addPointerToArena$1(pointer));
    },
    stopTrackingPointer$1: function(pointer) {
      var t1 = this._trackedPointers;
      if (t1.contains$1(0, pointer)) {
        $.GestureBinding__instance.GestureBinding_pointerRouter.removeRoute$2(pointer, this.get$handleEvent());
        t1.remove$1(0, pointer);
        if (t1._collection$_length === 0)
          this.didStopTrackingLastPointer$1(pointer);
      }
    },
    stopTrackingIfPointerNoLongerDown$1: function($event) {
      if ($event instanceof F.PointerUpEvent || $event instanceof F.PointerCancelEvent)
        this.stopTrackingPointer$1($event.pointer);
    }
  };
  S.GestureRecognizerState.prototype = {
    toString$0: function(_) {
      return this._recognizer$_name;
    }
  };
  S.PrimaryPointerGestureRecognizer.prototype = {
    addAllowedPointer$1: function($event) {
      var _this = this,
        t1 = $event.pointer;
      _this.startTrackingPointer$2(t1, $event.transform);
      if (_this.state === C.GestureRecognizerState_0) {
        _this.state = C.GestureRecognizerState_1;
        _this.primaryPointer = t1;
        _this.initialPosition = new S.OffsetPair($event.localPosition, $event.position);
        _this._recognizer$_timer = P.Timer_Timer(_this.deadline, new S.PrimaryPointerGestureRecognizer_addAllowedPointer_closure(_this, $event));
      }
    },
    handleEvent$1: function($event) {
      var isPreAcceptSlopPastTolerance, t1, isPostAcceptSlopPastTolerance, _this = this;
      if (_this.state === C.GestureRecognizerState_1 && $event.pointer == _this.primaryPointer) {
        if (!_this._gestureAccepted)
          isPreAcceptSlopPastTolerance = _this._getGlobalDistance$1($event) > 18;
        else
          isPreAcceptSlopPastTolerance = false;
        if (_this._gestureAccepted) {
          t1 = _this.postAcceptSlopTolerance;
          isPostAcceptSlopPastTolerance = t1 != null && _this._getGlobalDistance$1($event) > t1;
        } else
          isPostAcceptSlopPastTolerance = false;
        if ($event instanceof F.PointerMoveEvent)
          t1 = isPreAcceptSlopPastTolerance || isPostAcceptSlopPastTolerance;
        else
          t1 = false;
        if (t1) {
          _this.resolve$1(C.GestureDisposition_1);
          _this.stopTrackingPointer$1(_this.primaryPointer);
        } else
          _this.handlePrimaryPointer$1($event);
      }
      _this.stopTrackingIfPointerNoLongerDown$1($event);
    },
    didExceedDeadline$0: function() {
    },
    acceptGesture$1: function(pointer) {
      if (pointer == this.primaryPointer) {
        this._stopTimer$0();
        this._gestureAccepted = true;
      }
    },
    rejectGesture$1: function(pointer) {
      var _this = this;
      if (pointer == _this.primaryPointer && _this.state === C.GestureRecognizerState_1) {
        _this._stopTimer$0();
        _this.state = C.GestureRecognizerState_2;
      }
    },
    didStopTrackingLastPointer$1: function(pointer) {
      this._stopTimer$0();
      this.state = C.GestureRecognizerState_0;
    },
    dispose$0: function() {
      this._stopTimer$0();
      this.super$OneSequenceGestureRecognizer$dispose();
    },
    _stopTimer$0: function() {
      var t1 = this._recognizer$_timer;
      if (t1 != null) {
        t1.cancel$0(0);
        this._recognizer$_timer = null;
      }
    },
    _getGlobalDistance$1: function($event) {
      return $event.position.$sub(0, this.initialPosition.global).get$distance();
    }
  };
  S.PrimaryPointerGestureRecognizer_addAllowedPointer_closure.prototype = {
    call$0: function() {
      this.$this.didExceedDeadline$0();
      return null;
    },
    $signature: 1
  };
  S.OffsetPair.prototype = {
    $add: function(_, other) {
      return new S.OffsetPair(this.local.$add(0, other.local), this.global.$add(0, other.global));
    },
    $sub: function(_, other) {
      return new S.OffsetPair(this.local.$sub(0, other.local), this.global.$sub(0, other.global));
    },
    toString$0: function(_) {
      return "OffsetPair(local: " + H.S(this.local) + ", global: " + H.S(this.global) + ")";
    }
  };
  S._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin.prototype = {};
  N.TapDownDetails.prototype = {};
  N.TapUpDetails.prototype = {};
  N.BaseTapGestureRecognizer.prototype = {
    addAllowedPointer$1: function($event) {
      var _this = this;
      if (_this.state === C.GestureRecognizerState_0)
        _this._down = $event;
      if (_this._down != null)
        _this.super$PrimaryPointerGestureRecognizer$addAllowedPointer($event);
    },
    startTrackingPointer$2: function(pointer, transform) {
      this.super$OneSequenceGestureRecognizer$startTrackingPointer(pointer, transform);
    },
    handlePrimaryPointer$1: function($event) {
      var _this = this;
      if ($event instanceof F.PointerUpEvent) {
        _this._up = $event;
        _this._checkUp$0();
      } else if ($event instanceof F.PointerCancelEvent) {
        _this.resolve$1(C.GestureDisposition_1);
        if (_this._sentTapDown)
          _this.handleTapCancel$3$cancel$down$reason($event, _this._down, "");
        _this._reset$0();
      } else if ($event.buttons != _this._down.buttons) {
        _this.resolve$1(C.GestureDisposition_1);
        _this.stopTrackingPointer$1(_this.primaryPointer);
      }
    },
    resolve$1: function(disposition) {
      var _this = this;
      if (_this._wonArenaForPrimaryPointer && disposition === C.GestureDisposition_1) {
        _this.handleTapCancel$3$cancel$down$reason(null, _this._down, "spontaneous");
        _this._reset$0();
      }
      _this.super$OneSequenceGestureRecognizer$resolve(disposition);
    },
    didExceedDeadline$0: function() {
      this._tap$_checkDown$0();
    },
    acceptGesture$1: function(pointer) {
      var _this = this;
      _this.super$PrimaryPointerGestureRecognizer$acceptGesture(pointer);
      if (pointer == _this.primaryPointer) {
        _this._tap$_checkDown$0();
        _this._wonArenaForPrimaryPointer = true;
        _this._checkUp$0();
      }
    },
    rejectGesture$1: function(pointer) {
      var _this = this;
      _this.super$PrimaryPointerGestureRecognizer$rejectGesture(pointer);
      if (pointer == _this.primaryPointer) {
        if (_this._sentTapDown)
          _this.handleTapCancel$3$cancel$down$reason(null, _this._down, "forced");
        _this._reset$0();
      }
    },
    _tap$_checkDown$0: function() {
      var _this = this;
      if (_this._sentTapDown)
        return;
      _this.handleTapDown$1$down(_this._down);
      _this._sentTapDown = true;
    },
    _checkUp$0: function() {
      var _this = this;
      if (!_this._wonArenaForPrimaryPointer || _this._up == null)
        return;
      _this.handleTapUp$2$down$up(_this._down, _this._up);
      _this._reset$0();
    },
    _reset$0: function() {
      var _this = this;
      _this._wonArenaForPrimaryPointer = _this._sentTapDown = false;
      _this._down = _this._up = null;
    }
  };
  N.TapGestureRecognizer.prototype = {
    isPointerAllowed$1: function($event) {
      var _this = this;
      switch ($event.buttons) {
        case 1:
          if (_this.onTapDown == null && _this.onTap == null && _this.onTapUp == null && _this.onTapCancel == null)
            return false;
          break;
        case 2:
          return false;
        default:
          return false;
      }
      return _this.super$GestureRecognizer$isPointerAllowed($event);
    },
    handleTapDown$1$down: function(down) {
      var _this = this,
        t1 = down.position,
        t2 = down.localPosition,
        details = N.TapDownDetails$(t1, _this._pointerToKind.$index(0, down.pointer), t2);
      switch (down.buttons) {
        case 1:
          if (_this.onTapDown != null)
            _this.invokeCallback$2("onTapDown", new N.TapGestureRecognizer_handleTapDown_closure(_this, details));
          break;
        case 2:
          break;
      }
    },
    handleTapUp$2$down$up: function(down, up) {
      var t1, _this = this,
        details = N.TapUpDetails$(up.position, up.localPosition);
      switch (down.buttons) {
        case 1:
          if (_this.onTapUp != null)
            _this.invokeCallback$2("onTapUp", new N.TapGestureRecognizer_handleTapUp_closure(_this, details));
          t1 = _this.onTap;
          if (t1 != null)
            _this.invokeCallback$2("onTap", t1);
          break;
        case 2:
          break;
      }
    },
    handleTapCancel$3$cancel$down$reason: function(cancel, down, reason) {
      var t1,
        note = reason === "" ? reason : reason + " ";
      switch (down.buttons) {
        case 1:
          t1 = this.onTapCancel;
          if (t1 != null)
            this.invokeCallback$2(note + "onTapCancel", t1);
          break;
        case 2:
          break;
      }
    }
  };
  N.TapGestureRecognizer_handleTapDown_closure.prototype = {
    call$0: function() {
      return this.$this.onTapDown.call$1(this.details);
    },
    $signature: 1
  };
  N.TapGestureRecognizer_handleTapUp_closure.prototype = {
    call$0: function() {
      return this.$this.onTapUp.call$1(this.details);
    },
    $signature: 1
  };
  R.Velocity.prototype = {
    $sub: function(_, other) {
      return new R.Velocity(this.pixelsPerSecond.$sub(0, other.pixelsPerSecond));
    },
    $add: function(_, other) {
      return new R.Velocity(this.pixelsPerSecond.$add(0, other.pixelsPerSecond));
    },
    clampMagnitude$2: function(minValue, maxValue) {
      var t1 = this.pixelsPerSecond,
        valueSquared = t1.get$distanceSquared();
      if (valueSquared > maxValue * maxValue)
        return new R.Velocity(t1.$div(0, t1.get$distance()).$mul(0, maxValue));
      if (valueSquared < minValue * minValue)
        return new R.Velocity(t1.$div(0, t1.get$distance()).$mul(0, minValue));
      return this;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof R.Velocity && other.pixelsPerSecond.$eq(0, this.pixelsPerSecond);
    },
    get$hashCode: function(_) {
      var t1 = this.pixelsPerSecond;
      return P.hashValues(t1._dx, t1._dy, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = this.pixelsPerSecond;
      return "Velocity(" + J.toStringAsFixed$1$n(t1._dx, 1) + ", " + J.toStringAsFixed$1$n(t1._dy, 1) + ")";
    }
  };
  R.VelocityEstimate.prototype = {
    toString$0: function(_) {
      var _this = this,
        t1 = _this.pixelsPerSecond;
      return "VelocityEstimate(" + J.toStringAsFixed$1$n(t1._dx, 1) + ", " + J.toStringAsFixed$1$n(t1._dy, 1) + "; offset: " + _this.offset.toString$0(0) + ", duration: " + _this.duration.toString$0(0) + ", confidence: " + C.JSNumber_methods.toStringAsFixed$1(_this.confidence, 1) + ")";
    }
  };
  R._PointAtTime.prototype = {
    toString$0: function(_) {
      return "_PointAtTime(" + H.S(this.point) + " at " + H.S(this.time) + ")";
    }
  };
  R.VelocityTracker.prototype = {
    addPosition$2: function(time, position) {
      var t1 = ++this._velocity_tracker$_index;
      if (t1 === 20)
        t1 = this._velocity_tracker$_index = 0;
      this._samples[t1] = new R._PointAtTime(time, position);
    },
    getVelocityEstimate$0: function() {
      var newestSample, t2, oldestSample, previousSample, sampleCount, sample, t3, t4, age, position, xFit, yFit,
        t1 = type$.JSArray_double,
        x = H.setRuntimeTypeInfo([], t1),
        y = H.setRuntimeTypeInfo([], t1),
        w = H.setRuntimeTypeInfo([], t1),
        time = H.setRuntimeTypeInfo([], t1),
        index = this._velocity_tracker$_index;
      t1 = this._samples;
      newestSample = t1[index];
      if (newestSample == null)
        return null;
      t2 = newestSample.time;
      oldestSample = newestSample;
      previousSample = oldestSample;
      sampleCount = 0;
      do {
        sample = t1[index];
        if (sample == null)
          break;
        t3 = sample.time;
        t4 = t2._duration;
        t3 = t3._duration;
        age = C.JSInt_methods._tdivFast$1(t4 - t3, 1000);
        t3 = C.JSInt_methods._tdivFast$1(t3 - previousSample.time._duration, 1000);
        if (age > 100 || Math.abs(t3) > 40)
          break;
        position = sample.point;
        x.push(position._dx);
        y.push(position._dy);
        w.push(1);
        time.push(-age);
        index = (index === 0 ? 20 : index) - 1;
        ++sampleCount;
        if (sampleCount < 20) {
          oldestSample = sample;
          previousSample = oldestSample;
          continue;
        } else {
          oldestSample = sample;
          break;
        }
      } while (true);
      if (sampleCount >= 3) {
        xFit = new B.LeastSquaresSolver(time, x, w).solve$1(2);
        if (xFit != null) {
          yFit = new B.LeastSquaresSolver(time, y, w).solve$1(2);
          if (yFit != null)
            return new R.VelocityEstimate(new P.Offset(xFit.coefficients[1] * 1000, yFit.coefficients[1] * 1000), xFit.confidence * yFit.confidence, new P.Duration(t2._duration - oldestSample.time._duration), newestSample.point.$sub(0, oldestSample.point));
        }
      }
      return new R.VelocityEstimate(C.Offset_0_0, 1, new P.Duration(t2._duration - oldestSample.time._duration), newestSample.point.$sub(0, oldestSample.point));
    }
  };
  S.ThemeMode.prototype = {
    toString$0: function(_) {
      return this._app0$_name;
    }
  };
  S.MaterialApp.prototype = {
    createState$0: function() {
      return new S._MaterialAppState(C._StateLifecycle_0);
    }
  };
  S._MaterialScrollBehavior.prototype = {
    getPlatform$1: function(context) {
      return K.Theme_of(context).platform;
    },
    buildViewportChrome$3: function(context, child, axisDirection) {
      switch (K.Theme_of(context).platform) {
        case C.TargetPlatform_2:
        case C.TargetPlatform_3:
        case C.TargetPlatform_4:
        case C.TargetPlatform_5:
          return child;
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
          return L.GlowingOverscrollIndicator$(axisDirection, child, K.Theme_of(context).accentColor);
      }
      return null;
    }
  };
  S._MaterialAppState.prototype = {
    initState$0: function() {
      var _this = this;
      _this.super$State$initState();
      _this._heroController = new T.HeroController(_this.get$_createRectTween(), P.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$._HeroFlight));
      _this._app0$_updateNavigator$0();
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._widget.toString;
      oldWidget.toString;
      this._app0$_updateNavigator$0();
    },
    _app0$_updateNavigator$0: function() {
      this._widget.toString;
      var t1 = P.List_List$from(C.List_empty4, true, type$.NavigatorObserver);
      C.JSArray_methods.add$1(t1, this._heroController);
      this._navigatorObservers = t1;
    },
    _createRectTween$2: function(begin, end) {
      return new D.MaterialRectArcTween(begin, end);
    },
    get$_localizationsDelegates: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$get$_localizationsDelegates($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$self._widget.toString;
                $async$goto = 2;
                return C.C__MaterialLocalizationsDelegate;
              case 2:
                // after yield
                $async$goto = 3;
                return C.C__CupertinoLocalizationsDelegate;
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.LocalizationsDelegate_dynamic);
    },
    build$1: function(context) {
      var t4, _this = this, _null = null,
        t1 = _this._widget,
        t2 = _this._navigatorObservers,
        t3 = t1.home;
      t1 = t1.title;
      t4 = _this.get$_localizationsDelegates();
      _this._widget.toString;
      return new K.ScrollConfiguration(new S._MaterialScrollBehavior(), new S.WidgetsApp(_null, _null, _null, new S._MaterialAppState_build_closure(), t3, C.Map_empty0, _null, _null, t2, new S._MaterialAppState_build_closure0(_this), t1, _null, C.TextStyle_aoz, C.MaterialColor_Map_JNwaj_4280391411, _null, t4, _null, _null, C.List_Locale, false, false, false, false, new S._MaterialAppState_build_closure1(), true, _null, _null, new N.GlobalObjectKey(_this, type$.GlobalObjectKey_State_StatefulWidget)), _null);
    }
  };
  S._MaterialAppState_build_closure.prototype = {
    call$1$2: function(settings, builder, $T) {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_of_Future_bool_Function),
        t2 = $.Zone__current,
        t3 = $T._eval$1("_Future<0>"),
        t4 = $T._eval$1("_AsyncCompleter<0>"),
        t5 = S.ProxyAnimation$(C.C__AlwaysDismissedAnimation),
        t6 = H.setRuntimeTypeInfo([], type$.JSArray_OverlayEntry),
        t7 = $.Zone__current,
        t8 = settings == null ? C.RouteSettings_null_null : settings;
      return new V.MaterialPageRoute(builder, false, t1, new N.LabeledGlobalKey(null, $T._eval$1("LabeledGlobalKey<_ModalScopeState<0>>")), new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), new S.PageStorageBucket(), null, new P._AsyncCompleter(new P._Future(t2, t3), t4), t5, t6, t8, new P._AsyncCompleter(new P._Future(t7, t3), t4), $T._eval$1("MaterialPageRoute<0>"));
    },
    call$2: function(settings, builder) {
      return this.call$1$2(settings, builder, type$.dynamic);
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  S._MaterialAppState_build_closure0.prototype = {
    call$2: function(context, child) {
      var theme,
        t1 = this.$this;
      t1._widget.toString;
      theme = X.ThemeData_ThemeData(C.Brightness_1);
      t1._widget.toString;
      return new K.AnimatedTheme(theme, true, child, C.C__Linear, C.Duration_200000, null, null);
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  S._MaterialAppState_build_closure1.prototype = {
    call$2: function(context, onPressed) {
      return new E.FloatingActionButton(C.Icon_IconData_59574_false_null, onPressed, C.BoxConstraints_40_40_40_40, null);
    }
  };
  E._ToolbarContainerLayout.prototype = {
    getConstraintsForChild$1: function(constraints) {
      return constraints.tighten$1$height(56);
    },
    getSize$1: function(constraints) {
      return new P.Size(constraints.maxWidth, 56);
    },
    getPositionForChild$2: function(size, childSize) {
      return new P.Offset(0, size._dy - childSize._dy);
    },
    shouldRelayout$1: function(oldDelegate) {
      return false;
    }
  };
  E.AppBar.prototype = {
    _getEffectiveCenterTitle$1: function(theme) {
      switch (theme.platform) {
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_3:
        case C.TargetPlatform_5:
          return false;
        case C.TargetPlatform_2:
        case C.TargetPlatform_4:
          return true;
      }
      return null;
    },
    createState$0: function() {
      return new E._AppBarState(C._StateLifecycle_0);
    }
  };
  E._AppBarState.prototype = {
    _handleDrawerButton$0: function() {
      var t1 = M.Scaffold_of(this._framework$_element, false),
        t2 = t1._endDrawerKey;
      if (t2.get$currentState() != null && t1._endDrawerOpened)
        t2.get$currentState().close$0(0);
      t1 = t1._drawerKey.get$currentState();
      if (t1 != null)
        t1.open$0(0);
    },
    _handleDrawerButtonEnd$0: function() {
      var t1 = M.Scaffold_of(this._framework$_element, false),
        t2 = t1._drawerKey;
      if (t2.get$currentState() != null && t1._drawerOpened)
        t2.get$currentState().close$0(0);
      t1 = t1._endDrawerKey.get$currentState();
      if (t1 != null)
        t1.open$0(0);
    },
    build$1: function(context) {
      var t2, t3, overallIconTheme, actionsIconTheme, t4, t5, centerStyle, sideStyle, leading, title, namesRoute, actions, appBar, overlayStyle, _this = this, _null = null,
        _s20_ = "Open navigation menu",
        theme = K.Theme_of(context),
        appBarTheme = K.Theme_of(context).appBarTheme,
        scaffold = M.Scaffold_of(context, true),
        parentRoute = T.ModalRoute_of(context, type$.Object),
        t1 = scaffold == null;
      if (t1)
        t2 = _null;
      else {
        scaffold._widget.toString;
        t2 = false;
      }
      if (t1)
        t1 = _null;
      else {
        scaffold._widget.toString;
        t1 = false;
      }
      if (parentRoute == null)
        t3 = _null;
      else
        t3 = !parentRoute.get$isFirst() || parentRoute.get$willHandlePopInternally();
      _this._widget.toString;
      overallIconTheme = appBarTheme.iconTheme;
      if (overallIconTheme == null)
        overallIconTheme = theme.primaryIconTheme;
      actionsIconTheme = appBarTheme.actionsIconTheme;
      if (actionsIconTheme == null)
        actionsIconTheme = overallIconTheme;
      t4 = appBarTheme.textTheme;
      t5 = t4 == null ? _null : t4.headline6;
      centerStyle = t5;
      if (centerStyle == null)
        centerStyle = theme.primaryTextTheme.headline6;
      t4 = t4 == null ? _null : t4.bodyText2;
      sideStyle = t4;
      if (sideStyle == null)
        sideStyle = theme.primaryTextTheme.bodyText2;
      if (t2 === true) {
        L.Localizations_of(context, C.Type_MaterialLocalizations_flR, type$.MaterialLocalizations).toString;
        leading = B.IconButton$(_null, C.Icon_IconData_58834_false_null, _this.get$_handleDrawerButton(), _s20_);
      } else if (t3 === true)
        leading = C.BackButton_null;
      else
        leading = _null;
      if (leading != null)
        leading = new T.ConstrainedBox(C.BoxConstraints_EcO, leading, _null);
      title = _this._widget.title;
      switch (theme.platform) {
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_3:
        case C.TargetPlatform_5:
          namesRoute = true;
          break;
        case C.TargetPlatform_2:
        case C.TargetPlatform_4:
          namesRoute = _null;
          break;
        default:
          namesRoute = _null;
      }
      title = T.Semantics$(_null, new E._AppBarTitleBox(title, _null), false, _null, false, _null, _null, true, _null, namesRoute, _null, _null, _null, _null);
      title = L.DefaultTextStyle$(title, _null, C.TextOverflow_2, false, centerStyle, _null, _null, C.TextWidthBasis_0);
      if (t1 === true) {
        L.Localizations_of(context, C.Type_MaterialLocalizations_flR, type$.MaterialLocalizations).toString;
        actions = B.IconButton$(_null, C.Icon_IconData_58834_false_null, _this.get$_handleDrawerButtonEnd(), _s20_);
      } else
        actions = _null;
      if (actions != null)
        actions = Y.IconTheme_merge(actions, actionsIconTheme);
      t1 = _this._widget._getEffectiveCenterTitle$1(theme);
      _this._widget.toString;
      t1 = Y.IconTheme_merge(L.DefaultTextStyle$(new E.NavigationToolbar(leading, title, actions, t1, 16, _null), _null, C.TextOverflow_0, true, sideStyle, _null, _null, C.TextWidthBasis_0), overallIconTheme);
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_Widget);
      t2.push(new T.Flexible(1, C.FlexFit_1, new T.ConstrainedBox(C.BoxConstraints_CWG, new T.ClipRect(new T.CustomSingleChildLayout(C.C__ToolbarContainerLayout, t1, _null), _null), _null), _null));
      t2.push(_this._widget.bottom);
      appBar = T.Column$(t2, C.CrossAxisAlignment_2, C.MainAxisAlignment_3);
      t1 = _this._widget;
      t1.toString;
      appBar = Q.SafeArea$(false, appBar, true);
      overlayStyle = theme.primaryColorBrightness === C.Brightness_0 ? C.SystemUiOverlayStyle_4EL : C.SystemUiOverlayStyle_yjH;
      t2 = appBarTheme.color;
      if (t2 == null)
        t2 = theme.primaryColor;
      t1 = t1.elevation;
      return T.Semantics$(_null, new X.AnnotatedRegion(overlayStyle, M.Material$(C.Duration_200000, true, T.Semantics$(_null, new T.Align(C.Alignment_0_m1, _null, _null, appBar, _null), false, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null), C.Clip_0, t2, t1, _null, C.Color_4278190080, _null, _null, C.MaterialType_0), _null, type$.AnnotatedRegion_SystemUiOverlayStyle), true, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  E._AppBarTitleBox.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E._RenderAppBarTitleBox(C.Alignment_0_0, T.Directionality_of(context), null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$textDirection(T.Directionality_of(context));
    }
  };
  E._RenderAppBarTitleBox.prototype = {
    performLayout$0: function() {
      var _this = this,
        constraints = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)),
        innerConstraints = constraints.copyWith$1$maxHeight(1 / 0);
      _this.RenderObjectWithChildMixin__child.layout$2$parentUsesSize(innerConstraints, true);
      _this._size = constraints.constrain$1(_this.RenderObjectWithChildMixin__child._size);
      _this.alignChild$0();
    }
  };
  V.AppBarTheme.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.brightness, _this.color, _this.elevation, _this.iconTheme, _this.actionsIconTheme, _this.textTheme, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof V.AppBarTheme)
        t1 = J.$eq$(other.color, _this.color) && other.elevation == _this.elevation && J.$eq$(other.iconTheme, _this.iconTheme) && J.$eq$(other.actionsIconTheme, _this.actionsIconTheme) && J.$eq$(other.textTheme, _this.textTheme);
      else
        t1 = false;
      return t1;
    }
  };
  V._AppBarTheme_Object_Diagnosticable.prototype = {};
  D.MaterialPointArcTween.prototype = {
    _initialize$0: function() {
      var t4, t5, _this = this,
        delta = J.$sub$n(_this.end, _this.begin),
        deltaX = Math.abs(delta._dx),
        deltaY = Math.abs(delta._dy),
        distanceFromAtoB = delta.get$distance(),
        t1 = _this.end,
        t2 = t1._dx,
        t3 = _this.begin,
        c = new P.Offset(t2, t3._dy);
      t2 = new D.MaterialPointArcTween__initialize_sweepAngle(_this, distanceFromAtoB);
      if (deltaX > 2 && deltaY > 2) {
        t4 = distanceFromAtoB * distanceFromAtoB;
        if (deltaX < deltaY) {
          t1 = t4 / c.$sub(0, t3).get$distance() / 2;
          _this._radius = t1;
          t3 = _this.end._dx;
          t4 = J.get$sign$in(_this.begin._dx - t3);
          t5 = _this.end;
          _this._center = new P.Offset(t3 + t1 * t4, t5._dy);
          if (_this.begin._dx < t5._dx) {
            _this._beginAngle = t2.call$0() * J.get$sign$in(_this.begin._dy - _this.end._dy);
            _this._endAngle = 0;
          } else {
            _this._beginAngle = 3.141592653589793 + t2.call$0() * J.get$sign$in(_this.end._dy - _this.begin._dy);
            _this._endAngle = 3.141592653589793;
          }
        } else {
          _this._radius = t4 / c.$sub(0, t1).get$distance() / 2;
          t1 = _this.begin;
          t3 = t1._dx;
          t1 = t1._dy;
          _this._center = new P.Offset(t3, t1 + J.get$sign$in(_this.end._dy - t1) * _this._radius);
          if (_this.begin._dy < _this.end._dy) {
            _this._beginAngle = -1.5707963267948966;
            _this._endAngle = -1.5707963267948966 + t2.call$0() * J.get$sign$in(_this.end._dx - _this.begin._dx);
          } else {
            _this._beginAngle = 1.5707963267948966;
            _this._endAngle = 1.5707963267948966 + t2.call$0() * J.get$sign$in(_this.begin._dx - _this.end._dx);
          }
        }
      } else
        _this._endAngle = _this._beginAngle = null;
      _this._arc$_dirty = false;
    },
    get$center: function() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._center;
    },
    get$radius: function() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._radius;
    },
    get$beginAngle: function() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._beginAngle;
    },
    get$endAngle: function() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._beginAngle;
    },
    set$begin: function(value) {
      if (!J.$eq$(value, this.begin)) {
        this.begin = value;
        this._arc$_dirty = true;
      }
    },
    set$end: function(_, value) {
      if (!J.$eq$(value, this.end)) {
        this.end = value;
        this._arc$_dirty = true;
      }
    },
    lerp$1: function(t) {
      var t1, angle, t2, t3, t4, _this = this;
      if (_this._arc$_dirty)
        _this._initialize$0();
      if (t === 0)
        return _this.begin;
      if (t === 1)
        return _this.end;
      t1 = _this._beginAngle;
      if (t1 == null || _this._endAngle == null)
        return P.Offset_lerp(_this.begin, _this.end, t);
      angle = P.lerpDouble(t1, _this._endAngle, t);
      t1 = Math.cos(H.checkNum(angle));
      t2 = _this._radius;
      t3 = Math.sin(H.checkNum(angle));
      t4 = _this._radius;
      return _this._center.$add(0, new P.Offset(t1 * t2, t3 * t4));
    },
    toString$0: function(_) {
      var _this = this;
      return "MaterialPointArcTween(" + H.S(_this.begin) + " \u2192 " + H.S(_this.end) + "; center=" + H.S(_this.get$center()) + ", radius=" + H.S(_this.get$radius()) + ", beginAngle=" + H.S(_this.get$beginAngle()) + ", endAngle=" + H.S(_this.get$endAngle()) + ")";
    }
  };
  D.MaterialPointArcTween__initialize_sweepAngle.prototype = {
    call$0: function() {
      return 2 * Math.asin(this.distanceFromAtoB / (2 * this.$this._radius));
    },
    $signature: 68
  };
  D._CornerId.prototype = {
    toString$0: function(_) {
      return this._arc$_name;
    }
  };
  D._Diagonal.prototype = {};
  D.MaterialRectArcTween.prototype = {
    _initialize$0: function() {
      var _this = this,
        diagonal = D._maxBy(C.List_yvP, new D.MaterialRectArcTween__initialize_closure(_this, _this.end.get$center().$sub(0, _this.begin.get$center()))),
        t1 = _this.begin,
        t2 = diagonal.beginId;
      _this._beginArc = new D.MaterialPointArcTween(_this._cornerFor$2(t1, t2), _this._cornerFor$2(_this.end, t2));
      t2 = _this.begin;
      t1 = diagonal.endId;
      _this._endArc = new D.MaterialPointArcTween(_this._cornerFor$2(t2, t1), _this._cornerFor$2(_this.end, t1));
      _this._arc$_dirty = false;
    },
    _cornerFor$2: function(rect, id) {
      switch (id) {
        case C._CornerId_0:
          return new P.Offset(rect.left, rect.top);
        case C._CornerId_1:
          return new P.Offset(rect.right, rect.top);
        case C._CornerId_2:
          return new P.Offset(rect.left, rect.bottom);
        case C._CornerId_3:
          return new P.Offset(rect.right, rect.bottom);
      }
      return C.Offset_0_0;
    },
    get$beginArc: function() {
      var _this = this;
      if (_this.begin == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._beginArc;
    },
    get$endArc: function() {
      var _this = this;
      if (_this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._endArc;
    },
    set$begin: function(value) {
      if (!J.$eq$(value, this.begin)) {
        this.begin = value;
        this._arc$_dirty = true;
      }
    },
    set$end: function(_, value) {
      if (!J.$eq$(value, this.end)) {
        this.end = value;
        this._arc$_dirty = true;
      }
    },
    lerp$1: function(t) {
      var _this = this;
      if (_this._arc$_dirty)
        _this._initialize$0();
      if (t === 0)
        return _this.begin;
      if (t === 1)
        return _this.end;
      return P.Rect$fromPoints(_this._beginArc.lerp$1(t), _this._endArc.lerp$1(t));
    },
    toString$0: function(_) {
      var _this = this;
      return "MaterialRectArcTween(" + H.S(_this.begin) + " \u2192 " + H.S(_this.end) + "; beginArc=" + H.S(_this.get$beginArc()) + ", endArc=" + H.S(_this.get$endArc()) + ")";
    }
  };
  D.MaterialRectArcTween__initialize_closure.prototype = {
    call$1: function(d) {
      var t1 = this.$this,
        t2 = this.centersVector,
        delta = t1._cornerFor$2(t1.begin, d.endId).$sub(0, t1._cornerFor$2(t1.begin, d.beginId)),
        $length = delta.get$distance();
      return t2._dx * delta._dx / $length + t2._dy * delta._dy / $length;
    }
  };
  R.BackButtonIcon.prototype = {
    build$1: function(context) {
      return new L.Icon(R.BackButtonIcon__getIconData(K.Theme_of(context).platform), null);
    }
  };
  R.BackButton.prototype = {
    build$1: function(context) {
      L.Localizations_of(context, C.Type_MaterialLocalizations_flR, type$.MaterialLocalizations).toString;
      return B.IconButton$(null, C.BackButtonIcon_null, new R.BackButton_build_closure(this, context), "Back");
    }
  };
  R.BackButton_build_closure.prototype = {
    call$0: function() {
      K.Navigator_maybePop(this.context);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  Q.MaterialBannerThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.contentTextStyle, _this.padding, _this.leadingPadding, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof Q.MaterialBannerThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.contentTextStyle, _this.contentTextStyle) && J.$eq$(other.padding, _this.padding) && J.$eq$(other.leadingPadding, _this.leadingPadding);
    }
  };
  Q._MaterialBannerThemeData_Object_Diagnosticable.prototype = {};
  D.BottomAppBarTheme.prototype = {
    get$hashCode: function(_) {
      return P.hashValues(this.color, this.elevation, this.shape, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof D.BottomAppBarTheme && J.$eq$(other.color, _this.color) && other.elevation == _this.elevation && true;
    }
  };
  D._BottomAppBarTheme_Object_Diagnosticable.prototype = {};
  M.BottomNavigationBarThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.elevation, _this.selectedIconTheme, _this.unselectedIconTheme, _this.selectedItemColor, _this.unselectedItemColor, _this.selectedLabelStyle, _this.unselectedLabelStyle, _this.showSelectedLabels, _this.showUnselectedLabels, _this.type, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof M.BottomNavigationBarThemeData)
        if (J.$eq$(other.backgroundColor, _this.backgroundColor))
          if (other.elevation == _this.elevation)
            if (J.$eq$(other.selectedIconTheme, _this.selectedIconTheme))
              if (J.$eq$(other.unselectedIconTheme, _this.unselectedIconTheme))
                if (J.$eq$(other.selectedItemColor, _this.selectedItemColor))
                  if (J.$eq$(other.unselectedItemColor, _this.unselectedItemColor))
                    if (J.$eq$(other.selectedLabelStyle, _this.selectedLabelStyle))
                      if (J.$eq$(other.unselectedLabelStyle, _this.unselectedLabelStyle))
                        t1 = true;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  M._BottomNavigationBarThemeData_Object_Diagnosticable.prototype = {};
  X.BottomSheetThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.elevation, _this.modalBackgroundColor, _this.modalElevation, _this.shape, _this.clipBehavior, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof X.BottomSheetThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && other.elevation == _this.elevation && J.$eq$(other.modalBackgroundColor, _this.modalBackgroundColor) && other.modalElevation == _this.modalElevation && J.$eq$(other.shape, _this.shape) && true;
    }
  };
  X._BottomSheetThemeData_Object_Diagnosticable.prototype = {};
  Z.RawMaterialButton.prototype = {
    get$enabled: function(_) {
      return true;
    },
    createState$0: function() {
      return new Z._RawMaterialButtonState(P.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState), C._StateLifecycle_0);
    }
  };
  Z._RawMaterialButtonState.prototype = {
    _handleHighlightChanged$1: function(value) {
      if (this._states.contains$1(0, C.MaterialState_2) !== value)
        this.setState$1(new Z._RawMaterialButtonState__handleHighlightChanged_closure(this, value));
    },
    _handleHoveredChanged$1: function(value) {
      if (this._states.contains$1(0, C.MaterialState_0) !== value)
        this.setState$1(new Z._RawMaterialButtonState__handleHoveredChanged_closure(this, value));
    },
    _handleFocusedChanged$1: function(value) {
      if (this._states.contains$1(0, C.MaterialState_1) !== value)
        this.setState$1(new Z._RawMaterialButtonState__handleFocusedChanged_closure(this, value));
    },
    initState$0: function() {
      var t1, t2;
      this.super$State$initState();
      t1 = this._widget;
      t2 = this._states;
      if (!t1.get$enabled(t1))
        t2.add$1(0, C.MaterialState_5);
      else
        t2.remove$1(0, C.MaterialState_5);
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      t2 = _this._states;
      if (!t1.get$enabled(t1))
        t2.add$1(0, C.MaterialState_5);
      else
        t2.remove$1(0, C.MaterialState_5);
      if (t2.contains$1(0, C.MaterialState_5) && t2.contains$1(0, C.MaterialState_2))
        _this._handleHighlightChanged$1(false);
    },
    get$_effectiveElevation: function() {
      var _this = this,
        t1 = _this._states;
      if (t1.contains$1(0, C.MaterialState_5))
        return _this._widget.disabledElevation;
      if (t1.contains$1(0, C.MaterialState_2))
        return _this._widget.highlightElevation;
      if (t1.contains$1(0, C.MaterialState_0))
        return _this._widget.hoverElevation;
      if (t1.contains$1(0, C.MaterialState_1))
        return _this._widget.focusElevation;
      return _this._widget.elevation;
    },
    build$1: function(context) {
      var densityAdjustment, effectiveConstraints, padding, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, minSize, _this = this, _null = null,
        t1 = _this._widget.textStyle,
        t2 = _this._states,
        effectiveTextColor = V.MaterialStateProperty_resolveAs(t1.color, t2, type$.Color),
        effectiveShape = V.MaterialStateProperty_resolveAs(_this._widget.shape, t2, type$.ShapeBorder);
      _this._widget.toString;
      densityAdjustment = new P.Offset(0, 0).$mul(0, 4);
      effectiveConstraints = C.VisualDensity_0_0.effectiveConstraints$1(_this._widget.constraints);
      _this._widget.toString;
      t2 = densityAdjustment._dx;
      t1 = densityAdjustment._dy;
      padding = C.EdgeInsets_0_0_0_0.add$1(0, new V.EdgeInsets(t2, t1, t2, t1)).clamp$2(0, C.EdgeInsets_0_0_0_0, C._MixedEdgeInsets_QWq);
      t3 = _this.get$_effectiveElevation();
      t4 = _this._widget.textStyle.copyWith$1$color(effectiveTextColor);
      t5 = _this._widget;
      t6 = t5.fillColor;
      t7 = t6 == null ? C.MaterialType_4 : C.MaterialType_3;
      t8 = t5.clipBehavior;
      t9 = t5.focusNode;
      t5 = t5.get$enabled(t5);
      t10 = _this._widget;
      t11 = t10.splashColor;
      t12 = t10.focusColor;
      t13 = t10.hoverColor;
      t14 = t10.onPressed;
      t7 = M.Material$(C.Duration_200000, true, R.InkWell$(false, t5, Y.IconTheme_merge(M.Container$(_null, new T.Center(C.Alignment_0_0, 1, 1, t10.child, _null), _null, _null, _null, _null, _null, padding, _null), new T.IconThemeData(effectiveTextColor, _null, _null)), effectiveShape, true, t12, t9, _null, t13, _this.get$_handleFocusedChanged(), _this.get$_handleHighlightChanged(), _this.get$_handleHoveredChanged(), _null, t14, t11), t8, t6, t3, _null, C.Color_4278190080, effectiveShape, t4, t7);
      switch (t10.materialTapTargetSize) {
        case C.MaterialTapTargetSize_0:
          minSize = new P.Size(48 + t2, 48 + t1);
          break;
        case C.MaterialTapTargetSize_1:
          minSize = C.Size_0_0;
          break;
        default:
          minSize = _null;
      }
      return T.Semantics$(true, new Z._InputPadding(minSize, new T.ConstrainedBox(effectiveConstraints, t7, _null), _null), true, t10.get$enabled(t10), false, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  Z._RawMaterialButtonState__handleHighlightChanged_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._states;
      if (this.value)
        t2.add$1(0, C.MaterialState_2);
      else
        t2.remove$1(0, C.MaterialState_2);
      t1._widget.toString;
    },
    $signature: 0
  };
  Z._RawMaterialButtonState__handleHoveredChanged_closure.prototype = {
    call$0: function() {
      var t1 = this.$this._states;
      if (this.value)
        t1.add$1(0, C.MaterialState_0);
      else
        t1.remove$1(0, C.MaterialState_0);
    },
    $signature: 0
  };
  Z._RawMaterialButtonState__handleFocusedChanged_closure.prototype = {
    call$0: function() {
      var t1 = this.$this._states;
      if (this.value)
        t1.add$1(0, C.MaterialState_1);
      else
        t1.remove$1(0, C.MaterialState_1);
    },
    $signature: 0
  };
  Z._InputPadding.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new Z._RenderInputPadding(this.minSize, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$minSize(this.minSize);
    }
  };
  Z._RenderInputPadding.prototype = {
    set$minSize: function(value) {
      if (J.$eq$(this._minSize, value))
        return;
      this._minSize = value;
      this.markNeedsLayout$0();
    },
    performLayout$0: function() {
      var t2, t3, t4, height, _this = this,
        constraints = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(constraints, true);
        t1 = _this.RenderObjectWithChildMixin__child._size;
        t2 = t1._dx;
        t3 = _this._minSize;
        t4 = t3._dx;
        height = Math.max(H.checkNum(t2), H.checkNum(t4));
        t1 = t1._dy;
        t3 = t3._dy;
        t3 = constraints.constrain$1(new P.Size(height, Math.max(H.checkNum(t1), H.checkNum(t3))));
        _this._size = t3;
        t1 = _this.RenderObjectWithChildMixin__child;
        type$.BoxParentData._as(t1.parentData).offset = C.Alignment_0_0.alongOffset$1(type$.Offset._as(t3.$sub(0, t1._size)));
      } else
        _this._size = C.Size_0_0;
    },
    hitTest$2$position: function(result, position) {
      var center, t1, t2;
      if (this.super$RenderBox$hitTest(result, position))
        return true;
      center = this.RenderObjectWithChildMixin__child._size.center$1(C.Offset_0_0);
      t1 = new E.Matrix4(new Float64Array(16));
      t1.setIdentity$0();
      t2 = new E.Vector4(new Float64Array(4));
      t2.setValues$4(0, 0, 0, center._dx);
      t1.setRow$2(0, t2);
      t2 = new E.Vector4(new Float64Array(4));
      t2.setValues$4(0, 0, 0, center._dy);
      t1.setRow$2(1, t2);
      return result.addWithRawTransform$3$hitTest$position$transform(new Z._RenderInputPadding_hitTest_closure(this, center), center, t1);
    }
  };
  Z._RenderInputPadding_hitTest_closure.prototype = {
    call$2: function(result, position) {
      return this.$this.RenderObjectWithChildMixin__child.hitTest$2$position(result, this.center);
    }
  };
  M.ButtonBarThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.alignment, _this.mainAxisSize, _this.buttonTextTheme, _this.buttonMinWidth, _this.buttonHeight, _this.buttonPadding, _this.buttonAlignedDropdown, _this.layoutBehavior, _this.overflowDirection, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof M.ButtonBarThemeData)
        if (other.buttonMinWidth == _this.buttonMinWidth)
          if (other.buttonHeight == _this.buttonHeight)
            if (J.$eq$(other.buttonPadding, _this.buttonPadding))
              t1 = true;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  M._ButtonBarThemeData_Object_Diagnosticable.prototype = {};
  M.ButtonTextTheme.prototype = {
    toString$0: function(_) {
      return this._button_theme$_name;
    }
  };
  M.ButtonBarLayoutBehavior.prototype = {
    toString$0: function(_) {
      return this._button_theme$_name;
    }
  };
  M.ButtonThemeData.prototype = {
    get$padding: function(_) {
      var t1 = this._padding;
      if (t1 != null)
        return t1;
      switch (this.textTheme) {
        case C.ButtonTextTheme_0:
        case C.ButtonTextTheme_1:
          return C.EdgeInsets_16_0_16_0;
        case C.ButtonTextTheme_2:
          return C.EdgeInsets_24_0_24_0;
      }
      return C.EdgeInsets_0_0_0_0;
    },
    get$shape: function(_) {
      var t1 = this._shape;
      if (t1 != null)
        return t1;
      switch (this.textTheme) {
        case C.ButtonTextTheme_0:
        case C.ButtonTextTheme_1:
          return C.RoundedRectangleBorder_yx3;
        case C.ButtonTextTheme_2:
          return C.RoundedRectangleBorder_yx30;
      }
      return C.RoundedRectangleBorder_yx31;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof M.ButtonThemeData)
        if (other.textTheme === _this.textTheme)
          if (other.minWidth === _this.minWidth)
            if (other.height === _this.height)
              if (J.$eq$(other.get$padding(other), _this.get$padding(_this)))
                if (J.$eq$(other.get$shape(other), _this.get$shape(_this)))
                  if (J.$eq$(other._buttonColor, _this._buttonColor))
                    if (J.$eq$(other._focusColor, _this._focusColor))
                      if (J.$eq$(other._hoverColor, _this._hoverColor))
                        t1 = J.$eq$(other.colorScheme, _this.colorScheme) && other._materialTapTargetSize == _this._materialTapTargetSize;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.textTheme, _this.minWidth, _this.height, _this.get$padding(_this), _this.get$shape(_this), false, _this._buttonColor, _this._disabledColor, _this._focusColor, _this._hoverColor, _this._highlightColor, _this._splashColor, _this.colorScheme, _this._materialTapTargetSize, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  M._ButtonThemeData_Object_Diagnosticable.prototype = {};
  V.Card.prototype = {
    build$1: function(context) {
      var t2, t3, t4, t5, _null = null,
        cardTheme = K.Theme_of(context).cardTheme,
        t1 = cardTheme.margin;
      if (t1 == null)
        t1 = C.EdgeInsets_4_4_4_4;
      t2 = cardTheme.shadowColor;
      if (t2 == null)
        t2 = C.Color_4278190080;
      t3 = cardTheme.color;
      if (t3 == null)
        t3 = K.Theme_of(context).cardColor;
      t4 = this.elevation;
      t5 = cardTheme.shape;
      if (t5 == null)
        t5 = C.RoundedRectangleBorder_yx30;
      return T.Semantics$(_null, M.Container$(_null, M.Material$(C.Duration_200000, true, T.Semantics$(_null, this.child, false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null), C.Clip_0, t3, t4, _null, t2, t5, _null, C.MaterialType_1), _null, _null, _null, _null, t1, _null, _null), true, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A.CardTheme.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.clipBehavior, _this.color, _this.shadowColor, _this.elevation, _this.margin, _this.shape, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof A.CardTheme)
        t1 = J.$eq$(other.color, _this.color) && J.$eq$(other.shadowColor, _this.shadowColor) && other.elevation == _this.elevation && J.$eq$(other.margin, _this.margin) && J.$eq$(other.shape, _this.shape);
      else
        t1 = false;
      return t1;
    }
  };
  A._CardTheme_Object_Diagnosticable.prototype = {};
  K.Checkbox.prototype = {
    createState$0: function() {
      return new K._CheckboxState(null, C._StateLifecycle_0);
    },
    onChanged$1: function(arg0) {
      return this.onChanged.call$1(arg0);
    }
  };
  K._CheckboxState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this._checkbox$_actionMap = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_ActivateIntent_OT9, new U.CallbackAction(this.get$_actionHandler(), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent), type$.CallbackAction_ActivateIntent)], type$.Type, type$.Action_Intent);
    },
    _actionHandler$1: function(intent) {
      var t1 = this._widget;
      switch (t1.value) {
        case false:
          t1.onChanged$1(true);
          break;
        case true:
          t1.onChanged$1(null);
          break;
        default:
          t1.onChanged$1(false);
          break;
      }
      this._framework$_element.get$renderObject().sendSemanticsEvent$1(C.TapSemanticEvent_tap);
    },
    _handleFocusHighlightChanged$1: function(focused) {
      if (focused !== this._checkbox$_focused)
        this.setState$1(new K._CheckboxState__handleFocusHighlightChanged_closure(this, focused));
    },
    _handleHoverChanged$1: function(hovering) {
      if (hovering !== this._checkbox$_hovering)
        this.setState$1(new K._CheckboxState__handleHoverChanged_closure(this, hovering));
    },
    build$1: function(context) {
      var size, t1, additionalConstraints, _this = this, _null = null,
        themeData = K.Theme_of(context);
      _this._widget.toString;
      switch (themeData.materialTapTargetSize) {
        case C.MaterialTapTargetSize_0:
          size = C.Size_48_48;
          break;
        case C.MaterialTapTargetSize_1:
          size = C.Size_40_40;
          break;
        default:
          size = _null;
      }
      t1 = themeData.visualDensity;
      additionalConstraints = S.BoxConstraints$tight(size.$add(0, new P.Offset(t1.horizontal, t1.vertical).$mul(0, 4)));
      t1 = _this._checkbox$_actionMap;
      _this._widget.toString;
      return new U.FocusableActionDetector(true, _null, false, t1, _this.get$_handleFocusHighlightChanged(), _this.get$_handleHoverChanged(), new T.Builder(new K._CheckboxState_build_closure(_this, themeData, additionalConstraints), _null), _null);
    }
  };
  K._CheckboxState__handleFocusHighlightChanged_closure.prototype = {
    call$0: function() {
      this.$this._checkbox$_focused = this.focused;
    },
    $signature: 0
  };
  K._CheckboxState__handleHoverChanged_closure.prototype = {
    call$0: function() {
      this.$this._checkbox$_hovering = this.hovering;
    },
    $signature: 0
  };
  K._CheckboxState_build_closure.prototype = {
    call$1: function(context) {
      var t1 = this.$this,
        t2 = t1._widget,
        t3 = t2.value,
        t4 = this.themeData,
        t5 = t4.toggleableActiveColor,
        t6 = t4.unselectedWidgetColor,
        t7 = t4.focusColor;
      t4 = t4.hoverColor;
      t2 = t2.onChanged;
      return new K._CheckboxRenderObjectWidget(t3, true, t1._checkbox$_focused, t1._checkbox$_hovering, t5, C.Color_4294967295, t6, t7, t4, t2, t1, this.additionalConstraints, null);
    }
  };
  K._CheckboxRenderObjectWidget.prototype = {
    createRenderObject$1: function(context) {
      var t11, t12, _this = this,
        t1 = _this.value,
        t2 = _this.activeColor,
        t3 = _this.inactiveColor,
        t4 = _this.focusColor,
        t5 = _this.hoverColor,
        t6 = _this.onChanged,
        t7 = _this.vsync,
        t8 = _this.additionalConstraints,
        t9 = _this.hasFocus,
        t10 = _this.hovering;
      if (t5 == null) {
        t11 = t2.value;
        t11 = P.Color$fromARGB(31, (16711680 & t11) >>> 16, (65280 & t11) >>> 8, (255 & t11) >>> 0);
      } else
        t11 = t5;
      if (t4 == null) {
        t12 = t2.value;
        t12 = P.Color$fromARGB(31, (16711680 & t12) >>> 16, (65280 & t12) >>> 8, (255 & t12) >>> 0);
      } else
        t12 = t4;
      t12 = new K._RenderCheckbox(t1, _this.checkColor, t9, t10, t7, t1, true, t2, t3, t11, t12, t6, t8, null);
      t12.get$isRepaintBoundary();
      t12.get$alwaysNeedsCompositing();
      t12._needsCompositing = false;
      t12.set$child(null);
      t12.RenderToggleable$11$activeColor$additionalConstraints$focusColor$hasFocus$hoverColor$hovering$inactiveColor$onChanged$tristate$value$vsync(t2, t8, t4, t9, t5, t10, t3, t6, true, t1, t7);
      return t12;
    },
    updateRenderObject$2: function(context, renderObject) {
      var _this = this;
      renderObject.set$value(0, _this.value);
      renderObject.set$tristate(true);
      renderObject.set$activeColor(_this.activeColor);
      renderObject.checkColor = _this.checkColor;
      renderObject.set$inactiveColor(_this.inactiveColor);
      renderObject.set$focusColor(_this.focusColor);
      renderObject.set$hoverColor(_this.hoverColor);
      renderObject.set$onChanged(_this.onChanged);
      renderObject.set$additionalConstraints(_this.additionalConstraints);
      renderObject.set$vsync(_this.vsync);
      renderObject.set$hasFocus(_this.hasFocus);
      renderObject.set$hovering(_this.hovering);
    }
  };
  K._RenderCheckbox.prototype = {
    set$value: function(_, newValue) {
      var t1 = this._toggleable$_value;
      if (newValue == t1)
        return;
      this._oldValue = t1;
      this.super$RenderToggleable$value(0, newValue);
    },
    describeSemanticsConfiguration$1: function(config) {
      var t1;
      this.super$RenderToggleable$describeSemanticsConfiguration(config);
      t1 = this._toggleable$_value;
      config._setFlag$2(C.SemanticsFlag_1, true);
      config._setFlag$2(C.SemanticsFlag_2, t1 === true);
    },
    _outerRectAt$2: function(origin, t) {
      var inset = 1 - Math.abs(t - 0.5) * 2,
        size = 18 - inset * 2,
        t1 = origin._dx + inset,
        t2 = origin._dy + inset;
      return P.RRect$fromRectAndRadius(new P.Rect(t1, t2, t1 + size, t2 + size), C.Radius_1_1);
    },
    _colorAt$1: function(t) {
      var t1 = this._activeColor;
      t1 = t >= 0.25 ? t1 : P.Color_lerp(this._inactiveColor, t1, t * 4);
      return t1;
    },
    _drawCheck$4: function(canvas, origin, t, paint) {
      var drawMid, drawEnd,
        path = P.Path_Path(),
        t1 = origin._dx,
        t2 = origin._dy;
      if (t < 0.5) {
        drawMid = P.Offset_lerp(C.Offset_W7v, C.Offset_gPO, t * 2);
        path.moveTo$2(0, t1 + 2.6999999999999997, t2 + 8.1);
        path.lineTo$2(0, t1 + drawMid._dx, t2 + drawMid._dy);
      } else {
        drawEnd = P.Offset_lerp(C.Offset_gPO, C.Offset_oIk, (t - 0.5) * 2);
        path.moveTo$2(0, t1 + 2.6999999999999997, t2 + 8.1);
        path.lineTo$2(0, t1 + 7.2, t2 + 12.6);
        path.lineTo$2(0, t1 + drawEnd._dx, t2 + drawEnd._dy);
      }
      canvas.drawPath$2(path, paint);
    },
    _drawDash$4: function(canvas, origin, t, paint) {
      var drawStart = P.Offset_lerp(C.Offset_aNU, C.Offset_9_9, 1 - t),
        drawEnd = P.Offset_lerp(C.Offset_9_9, C.Offset_Gl7, t);
      canvas.drawLine$3(origin.$add(0, drawStart), origin.$add(0, drawEnd), paint);
    },
    paint$2: function(context, offset) {
      var reactionPaint, t3, t4, center, reactionRadius, strokePaint, origin, $status, tNormalized, t, outer, paint, size, tShrink, tExpand, _this = this,
        canvas = context.get$canvas(context),
        t1 = _this._size.center$1(C.Offset_0_0),
        t2 = _this._reaction;
      if (t2.get$status(t2) === C.AnimationStatus_0) {
        t2 = _this._reactionFocusFade;
        if (t2.get$status(t2) === C.AnimationStatus_0) {
          t2 = _this._reactionHoverFade;
          t2 = t2.get$status(t2) !== C.AnimationStatus_0;
        } else
          t2 = true;
      } else
        t2 = true;
      if (t2) {
        reactionPaint = new H.SurfacePaint(new H.SurfacePaintData());
        t2 = _this._activeColor.value;
        t2 = P.Color$fromARGB(31, (16711680 & t2) >>> 16, (65280 & t2) >>> 8, (255 & t2) >>> 0);
        t3 = _this._toggleable$_hoverColor;
        t4 = _this._reactionHoverFade;
        t4 = P.Color_lerp(t2, t3, t4.get$value(t4));
        t3 = _this._toggleable$_focusColor;
        t2 = _this._reactionFocusFade;
        reactionPaint.set$color(0, P.Color_lerp(t4, t3, t2.get$value(t2)));
        t2 = _this._downPosition;
        if (t2 == null)
          t2 = t1;
        t3 = _this._reaction;
        center = P.Offset_lerp(t2, t1, t3.get$value(t3));
        if (_this._toggleable$_hasFocus || _this._toggleable$_hovering)
          reactionRadius = 20;
        else {
          t1 = $.$get$_kRadialReactionRadiusTween();
          t2 = _this._reaction;
          t1.toString;
          reactionRadius = t1.transform$1(0, t2.get$value(t2));
        }
        if (reactionRadius > 0)
          canvas.drawCircle$3(center.$add(0, offset), reactionRadius, reactionPaint);
      }
      strokePaint = new H.SurfacePaint(new H.SurfacePaintData());
      strokePaint.set$color(0, _this.checkColor);
      strokePaint.set$style(0, C.PaintingStyle_1);
      strokePaint.set$strokeWidth(2);
      origin = offset.$add(0, type$.Offset._as(_this._size.$div(0, 2).$sub(0, C.Size_18_18.$div(0, 2))));
      t1 = _this._toggleable$_position.parent;
      $status = t1.get$status(t1);
      t1 = $status === C.AnimationStatus_1 || $status === C.AnimationStatus_3;
      t2 = _this._toggleable$_position;
      tNormalized = t1 ? t2.get$value(t2) : 1 - t2.get$value(t2);
      if (_this._oldValue === false || _this._toggleable$_value === false) {
        t = _this._toggleable$_value === false ? 1 - tNormalized : tNormalized;
        outer = _this._outerRectAt$2(origin, t);
        paint = new H.SurfacePaint(new H.SurfacePaintData());
        paint.set$color(0, _this._colorAt$1(t));
        if (t <= 0.5) {
          size = outer.right - outer.left;
          canvas.drawDRRect$3(outer, outer.inflate$1(-Math.min(size / 2, 2 + size * t)), paint);
        } else {
          canvas.drawRRect$2(outer, paint);
          tShrink = (t - 0.5) * 2;
          if (_this._oldValue == null || _this._toggleable$_value == null)
            _this._drawDash$4(canvas, origin, tShrink, strokePaint);
          else
            _this._drawCheck$4(canvas, origin, tShrink, strokePaint);
        }
      } else {
        outer = _this._outerRectAt$2(origin, 1);
        paint = new H.SurfacePaint(new H.SurfacePaintData());
        paint.set$color(0, _this._colorAt$1(1));
        canvas.drawRRect$2(outer, paint);
        if (tNormalized <= 0.5) {
          tShrink = 1 - tNormalized * 2;
          if (_this._oldValue === true)
            _this._drawCheck$4(canvas, origin, tShrink, strokePaint);
          else
            _this._drawDash$4(canvas, origin, tShrink, strokePaint);
        } else {
          tExpand = (tNormalized - 0.5) * 2;
          if (_this._toggleable$_value === true)
            _this._drawCheck$4(canvas, origin, tExpand, strokePaint);
          else
            _this._drawDash$4(canvas, origin, tExpand, strokePaint);
        }
      }
    }
  };
  K.__CheckboxState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var muted = !U.TickerMode_of(this._framework$_element),
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
          t1._collection$_current.set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  K.ChipThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.deleteIconColor, _this.disabledColor, _this.selectedColor, _this.secondarySelectedColor, _this.shadowColor, _this.selectedShadowColor, _this.checkmarkColor, _this.labelPadding, _this.padding, _this.shape, _this.labelStyle, _this.secondaryLabelStyle, _this.brightness, _this.elevation, _this.pressElevation, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof K.ChipThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.deleteIconColor, _this.deleteIconColor) && J.$eq$(other.disabledColor, _this.disabledColor) && J.$eq$(other.selectedColor, _this.selectedColor) && J.$eq$(other.secondarySelectedColor, _this.secondarySelectedColor) && J.$eq$(other.shadowColor, _this.shadowColor) && J.$eq$(other.selectedShadowColor, _this.selectedShadowColor) && J.$eq$(other.checkmarkColor, _this.checkmarkColor) && J.$eq$(other.labelPadding, _this.labelPadding) && J.$eq$(other.padding, _this.padding) && J.$eq$(other.shape, _this.shape) && J.$eq$(other.labelStyle, _this.labelStyle) && J.$eq$(other.secondaryLabelStyle, _this.secondaryLabelStyle) && other.brightness === _this.brightness && other.elevation == _this.elevation && other.pressElevation == _this.pressElevation;
    }
  };
  K._ChipThemeData_Object_Diagnosticable.prototype = {};
  A.ColorScheme.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof A.ColorScheme && J.$eq$(other.primary, _this.primary) && J.$eq$(other.primaryVariant, _this.primaryVariant) && J.$eq$(other.secondary, _this.secondary) && J.$eq$(other.secondaryVariant, _this.secondaryVariant) && J.$eq$(other.surface, _this.surface) && J.$eq$(other.background, _this.background) && J.$eq$(other.error, _this.error) && J.$eq$(other.onPrimary, _this.onPrimary) && J.$eq$(other.onSecondary, _this.onSecondary) && J.$eq$(other.onSurface, _this.onSurface) && J.$eq$(other.onBackground, _this.onBackground) && J.$eq$(other.onError, _this.onError) && other.brightness === _this.brightness;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.primary, _this.primaryVariant, _this.secondary, _this.secondaryVariant, _this.surface, _this.background, _this.error, _this.onPrimary, _this.onSecondary, _this.onSurface, _this.onBackground, _this.onError, _this.brightness, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  A._ColorScheme_Object_Diagnosticable.prototype = {};
  E.MaterialColor.prototype = {};
  E.MaterialAccentColor.prototype = {};
  Y.DialogTheme.prototype = {
    get$hashCode: function(_) {
      return J.get$hashCode$(this.shape);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof Y.DialogTheme && J.$eq$(other.backgroundColor, _this.backgroundColor) && other.elevation == _this.elevation && J.$eq$(other.shape, _this.shape) && J.$eq$(other.titleTextStyle, _this.titleTextStyle) && J.$eq$(other.contentTextStyle, _this.contentTextStyle);
    }
  };
  Y._DialogTheme_Object_Diagnosticable.prototype = {};
  G.DividerThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.color, _this.space, _this.thickness, _this.indent, _this.endIndent, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof G.DividerThemeData && J.$eq$(other.color, _this.color) && other.space == _this.space && other.thickness == _this.thickness && other.indent == _this.indent && other.endIndent == _this.endIndent;
    }
  };
  G._DividerThemeData_Object_Diagnosticable.prototype = {};
  Z.DrawerController.prototype = {};
  Z.DrawerControllerState.prototype = {};
  Z._DrawerControllerState_State_SingleTickerProviderStateMixin.prototype = {};
  Z.FlexibleSpaceBarSettings.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      var _this = this;
      return _this.toolbarOpacity !== oldWidget.toolbarOpacity || _this.minExtent != oldWidget.minExtent || _this.maxExtent != oldWidget.maxExtent || _this.currentExtent != oldWidget.currentExtent;
    }
  };
  E._DefaultHeroTag.prototype = {
    toString$0: function(_) {
      return "<default FloatingActionButton tag>";
    }
  };
  E.FloatingActionButton.prototype = {
    build$1: function(context) {
      var defaultAccentIconThemeColor, foregroundColor, backgroundColor, focusColor, hoverColor, splashColor, elevation, focusElevation, hoverElevation, disabledElevation, highlightElevation, materialTapTargetSize, textStyle, shape, _null = null,
        theme = K.Theme_of(context),
        floatingActionButtonTheme = theme.floatingActionButtonTheme;
      if (floatingActionButtonTheme.foregroundColor == null) {
        defaultAccentIconThemeColor = theme.accentColorBrightness === C.Brightness_0 ? C.Color_4294967295 : C.Color_4278190080;
        if (!J.$eq$(theme.accentIconTheme.color, defaultAccentIconThemeColor))
          D.print__debugPrintThrottled$closure().call$1("Warning: The support for configuring the foreground color of FloatingActionButtons using ThemeData.accentIconTheme has been deprecated. Please use ThemeData.floatingActionButtonTheme instead. See https://flutter.dev/go/remove-fab-accent-theme-dependency. This feature was deprecated after v1.13.2.");
      }
      foregroundColor = floatingActionButtonTheme.foregroundColor;
      if (foregroundColor == null)
        foregroundColor = theme.colorScheme.onSecondary;
      backgroundColor = floatingActionButtonTheme.backgroundColor;
      if (backgroundColor == null)
        backgroundColor = theme.colorScheme.secondary;
      focusColor = floatingActionButtonTheme.focusColor;
      if (focusColor == null)
        focusColor = theme.focusColor;
      hoverColor = floatingActionButtonTheme.hoverColor;
      if (hoverColor == null)
        hoverColor = theme.hoverColor;
      splashColor = floatingActionButtonTheme.splashColor;
      if (splashColor == null)
        splashColor = theme.splashColor;
      elevation = floatingActionButtonTheme.elevation;
      if (elevation == null)
        elevation = 6;
      focusElevation = floatingActionButtonTheme.focusElevation;
      if (focusElevation == null)
        focusElevation = 8;
      hoverElevation = floatingActionButtonTheme.hoverElevation;
      if (hoverElevation == null)
        hoverElevation = 10;
      disabledElevation = floatingActionButtonTheme.disabledElevation;
      if (disabledElevation == null)
        disabledElevation = elevation;
      highlightElevation = floatingActionButtonTheme.highlightElevation;
      if (highlightElevation == null)
        highlightElevation = 12;
      materialTapTargetSize = theme.materialTapTargetSize;
      textStyle = theme.textTheme.button.copyWith$2$color$letterSpacing(foregroundColor, 1.2);
      shape = floatingActionButtonTheme.shape;
      if (shape == null)
        shape = C.CircleBorder_61T;
      return new T.MergeSemantics(new T.Hero(C.C__DefaultHeroTag, new Z.RawMaterialButton(this.onPressed, textStyle, backgroundColor, focusColor, hoverColor, splashColor, elevation, hoverElevation, focusElevation, highlightElevation, disabledElevation, this._sizeConstraints, shape, this.child, materialTapTargetSize, _null, false, C.Clip_0, _null), _null), _null);
    }
  };
  A.FloatingActionButtonLocation.prototype = {
    toString$0: function(_) {
      return "FloatingActionButtonLocation";
    }
  };
  A.StandardFabLocation.prototype = {
    getOffset$1: function(scaffoldGeometry) {
      var t1 = this.getOffsetX$2(scaffoldGeometry, 0),
        contentBottom = scaffoldGeometry.contentBottom,
        bottomSheetHeight = scaffoldGeometry.bottomSheetSize._dy,
        fabHeight = scaffoldGeometry.floatingActionButtonSize._dy,
        snackBarHeight = scaffoldGeometry.snackBarSize._dy,
        fabY = contentBottom - fabHeight - 16;
      if (snackBarHeight > 0)
        fabY = Math.min(fabY, contentBottom - snackBarHeight - fabHeight - 16);
      return new P.Offset(t1, (bottomSheetHeight > 0 ? Math.min(fabY, contentBottom - bottomSheetHeight - fabHeight / 2) : fabY) + 0);
    }
  };
  A.FabFloatOffsetY.prototype = {};
  A.FabEndOffsetX.prototype = {
    getOffsetX$2: function(scaffoldGeometry, adjustment) {
      switch (scaffoldGeometry.textDirection) {
        case C.TextDirection_0:
          return 16 + scaffoldGeometry.minInsets.left - adjustment;
        case C.TextDirection_1:
          return scaffoldGeometry.scaffoldSize._dx - 16 - scaffoldGeometry.minInsets.right - scaffoldGeometry.floatingActionButtonSize._dx + adjustment;
      }
      return null;
    }
  };
  A._EndFloatFabLocation.prototype = {
    toString$0: function(_) {
      return "FloatingActionButtonLocation.endFloat";
    }
  };
  A.FloatingActionButtonAnimator.prototype = {
    toString$0: function(_) {
      return "FloatingActionButtonAnimator";
    }
  };
  A._ScalingFabMotionAnimator.prototype = {
    getOffset$3$begin$end$progress: function(begin, end, progress) {
      if (progress < 0.5)
        return begin;
      else
        return end;
    }
  };
  A._AnimationSwap.prototype = {
    get$value: function(_) {
      var t1, _this = this;
      if (_this.parent._animation_controller$_value < _this.swapThreshold) {
        t1 = _this.first;
        t1 = t1.get$value(t1);
      } else {
        t1 = _this.next;
        t1 = t1.get$value(t1);
      }
      return t1;
    }
  };
  A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX.prototype = {};
  A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY.prototype = {};
  S.FloatingActionButtonThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.foregroundColor, _this.backgroundColor, _this.focusColor, _this.hoverColor, _this.splashColor, _this.elevation, _this.focusElevation, _this.hoverElevation, _this.disabledElevation, _this.highlightElevation, _this.shape, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof S.FloatingActionButtonThemeData && J.$eq$(other.foregroundColor, _this.foregroundColor) && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.focusColor, _this.focusColor) && J.$eq$(other.hoverColor, _this.hoverColor) && J.$eq$(other.splashColor, _this.splashColor) && other.elevation == _this.elevation && other.focusElevation == _this.focusElevation && other.hoverElevation == _this.hoverElevation && other.disabledElevation == _this.disabledElevation && other.highlightElevation == _this.highlightElevation && J.$eq$(other.shape, _this.shape);
    }
  };
  S._FloatingActionButtonThemeData_Object_Diagnosticable.prototype = {};
  B.IconButton.prototype = {
    build$1: function(context) {
      var t2, t3, t4, _this = this, _null = null,
        theme = K.Theme_of(context),
        effectiveVisualDensity = theme.visualDensity,
        result = S.Tooltip$(new T.ConstrainedBox(effectiveVisualDensity.effectiveConstraints$1(C.BoxConstraints_mlX), new T.Padding(C.EdgeInsets_8_8_8_8, new T.SizedBox(24, 24, new T.Align(C.Alignment_0_0, _null, _null, Y.IconTheme_merge(_this.icon, new T.IconThemeData(_this.color, _null, 24)), _null), _null), _null), _null), _this.tooltip),
        t1 = K.Theme_of(context);
      t1 = t1.focusColor;
      t2 = K.Theme_of(context);
      t2 = t2.hoverColor;
      t3 = K.Theme_of(context);
      t3 = t3.highlightColor;
      t4 = K.Theme_of(context);
      t4 = t4.splashColor;
      return T.Semantics$(true, R.InkResponse$(false, _null, true, result, false, _null, true, false, t1, _null, t3, C.BoxShape_1, t2, _null, _null, _null, _null, _null, _null, _this.onPressed, _null, _null, Math.max(35, (24 + Math.min(C.EdgeInsets_8_8_8_8.get$horizontal(), C.EdgeInsets_8_8_8_8.get$_top(C.EdgeInsets_8_8_8_8) + C.EdgeInsets_8_8_8_8.get$_bottom(C.EdgeInsets_8_8_8_8))) * 0.7), t4, _null), false, true, false, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  Y.InkHighlight.prototype = {
    _handleAlphaStatusChanged$1: function($status) {
      if ($status === C.AnimationStatus_0 && !this._ink_highlight$_active) {
        this._alphaController.dispose$0();
        this.super$InkFeature$dispose();
      }
    },
    dispose$0: function() {
      this._alphaController.dispose$0();
      this.super$InkFeature$dispose();
    },
    _paintHighlight$3: function(canvas, rect, paint) {
      var t1, _this = this;
      canvas.save$0(0);
      t1 = _this._ink_highlight$_customBorder;
      if (t1 != null)
        canvas.clipPath$1(0, t1.getOuterPath$2$textDirection(rect, _this._ink_highlight$_textDirection));
      switch (_this._ink_highlight$_shape) {
        case C.BoxShape_1:
          canvas.drawCircle$3(rect.get$center(), 35, paint);
          break;
        case C.BoxShape_0:
          t1 = _this._ink_highlight$_borderRadius;
          if (!t1.$eq(0, C.BorderRadius_tLn))
            canvas.drawRRect$2(P.RRect$fromRectAndCorners(rect, t1.bottomLeft, t1.bottomRight, t1.topLeft, t1.topRight), paint);
          else
            canvas.drawRect$2(rect, paint);
          break;
      }
      canvas.restore$0(0);
    },
    paintFeature$2: function(canvas, transform) {
      var originOffset, rect, _this = this,
        paint = new H.SurfacePaint(new H.SurfacePaintData()),
        t1 = _this._ink_well$_color,
        t2 = _this._ink_highlight$_alpha,
        t3 = t2._evaluatable;
      t2 = t2.parent;
      t2 = t3.transform$1(0, t2.get$value(t2));
      t1 = t1.value;
      paint.set$color(0, P.Color$fromARGB(t2, (16711680 & t1) >>> 16, (65280 & t1) >>> 8, (255 & t1) >>> 0));
      originOffset = T.MatrixUtils_getAsTranslation(transform);
      t1 = _this.referenceBox._size;
      rect = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      if (originOffset == null) {
        canvas.save$0(0);
        canvas.transform$1(0, transform._m4storage);
        _this._paintHighlight$3(canvas, rect, paint);
        canvas.restore$0(0);
      } else
        _this._paintHighlight$3(canvas, rect.shift$1(originOffset), paint);
    }
  };
  U._getClipCallback_closure.prototype = {
    call$0: function() {
      var t1 = this.referenceBox._size;
      return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    $signature: 91
  };
  U._InkSplashFactory.prototype = {};
  U.InkSplash.prototype = {
    confirm$0: function(_) {
      var duration = C.JSDouble_methods.floor$0(this._targetRadius / 1),
        t1 = this._radiusController;
      t1.duration = P.Duration$(0, duration);
      t1.forward$0(0);
      this._ink_splash$_alphaController.forward$0(0);
    },
    _ink_splash$_handleAlphaStatusChanged$1: function($status) {
      if ($status === C.AnimationStatus_3)
        this.dispose$0();
    },
    dispose$0: function() {
      var _this = this;
      _this._radiusController.dispose$0();
      _this._ink_splash$_alphaController.dispose$0();
      _this._ink_splash$_alphaController = null;
      _this.super$InkFeature$dispose();
    },
    paintFeature$2: function(canvas, transform) {
      var center, t4, originOffset, rect, _this = this,
        paint = new H.SurfacePaint(new H.SurfacePaintData()),
        t1 = _this._ink_well$_color,
        t2 = _this._ink_splash$_alpha,
        t3 = t2._evaluatable;
      t2 = t2.parent;
      t2 = t3.transform$1(0, t2.get$value(t2));
      t1 = t1.value;
      paint.set$color(0, P.Color$fromARGB(t2, (16711680 & t1) >>> 16, (65280 & t1) >>> 8, (255 & t1) >>> 0));
      center = _this._ink_splash$_position;
      if (_this._repositionToReferenceBox)
        center = P.Offset_lerp(center, _this.referenceBox._size.center$1(C.Offset_0_0), _this._radiusController._animation_controller$_value);
      t1 = _this._ink_splash$_radius;
      t2 = t1.parent;
      t2 = t1._evaluatable.transform$1(0, t2.get$value(t2));
      t1 = _this._customBorder;
      t3 = _this._ink_splash$_borderRadius;
      t4 = _this._clipCallback;
      originOffset = T.MatrixUtils_getAsTranslation(transform);
      canvas.save$0(0);
      if (originOffset == null)
        canvas.transform$1(0, transform._m4storage);
      else
        canvas.translate$2(0, originOffset._dx, originOffset._dy);
      if (t4 != null) {
        rect = t4.call$0();
        if (t1 != null)
          canvas.clipPath$1(0, t1.getOuterPath$2$textDirection(rect, _this._ink_splash$_textDirection));
        else if (!t3.$eq(0, C.BorderRadius_tLn))
          canvas.clipRRect$1(P.RRect$fromRectAndCorners(rect, t3.bottomLeft, t3.bottomRight, t3.topLeft, t3.topRight));
        else
          canvas.clipRect$1(rect);
      }
      canvas.drawCircle$3(center, t2, paint);
      canvas.restore$0(0);
    }
  };
  R.InteractiveInkFeature.prototype = {
    set$color: function(_, value) {
      if (J.$eq$(value, this._ink_well$_color))
        return;
      this._ink_well$_color = value;
      this._material$_controller.markNeedsPaint$0();
    }
  };
  R.InteractiveInkFeatureFactory.prototype = {};
  R.InkResponse.prototype = {
    createState$0: function() {
      return new R._InkResponseState(P.LinkedHashMap_LinkedHashMap$_empty(type$._HighlightType, type$.InkHighlight), null, C._StateLifecycle_0, type$._InkResponseState_InkResponse);
    },
    onTap$0: function() {
      return this.onTap.call$0();
    },
    onHighlightChanged$1: function(arg0) {
      return this.onHighlightChanged.call$1(arg0);
    },
    onHover$1: function(arg0) {
      return this.onHover.call$1(arg0);
    },
    onFocusChange$1: function(arg0) {
      return this.onFocusChange.call$1(arg0);
    }
  };
  R._HighlightType.prototype = {
    toString$0: function(_) {
      return this._ink_well$_name;
    }
  };
  R._InkResponseState.prototype = {
    get$highlightsExist: function() {
      var t1 = this._highlights;
      t1 = t1.get$values(t1);
      t1 = new H.WhereIterable(t1, new R._InkResponseState_highlightsExist_closure(), H._instanceType(t1)._eval$1("WhereIterable<Iterable.E>"));
      return !t1.get$isEmpty(t1);
    },
    _handleAction$1: function(intent) {
      var _this = this;
      _this._startSplash$1$context(_this._framework$_element);
      _this._handleTap$1(_this._framework$_element);
    },
    initState$0: function() {
      var _this = this;
      _this.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$initState();
      _this._actionMap = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_ActivateIntent_OT9, new U.CallbackAction(_this.get$_handleAction(), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent), type$.CallbackAction_ActivateIntent)], type$.Type, type$.Action_Intent);
      $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._focus_manager$_listeners.add$1(0, _this.get$_handleFocusHighlightModeChange());
    },
    didUpdateWidget$1: function(oldWidget) {
      var _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this._isWidgetEnabled$1(_this._widget) !== _this._isWidgetEnabled$1(oldWidget)) {
        _this._handleHoverChange$1(_this._hovering);
        _this._updateFocusHighlights$0();
      }
    },
    dispose$0: function() {
      $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager.removeHighlightModeListener$1(this.get$_handleFocusHighlightModeChange());
      this.super$State$dispose();
    },
    get$wantKeepAlive: function() {
      if (!this.get$highlightsExist()) {
        var t1 = this._splashes;
        t1 = t1 != null && t1._collection$_length !== 0;
      } else
        t1 = true;
      return t1;
    },
    getHighlightColorForType$1: function(type) {
      var t1, _this = this;
      switch (type) {
        case C._HighlightType_0:
          t1 = _this._widget.highlightColor;
          return t1 == null ? K.Theme_of(_this._framework$_element).highlightColor : t1;
        case C._HighlightType_2:
          t1 = _this._widget.focusColor;
          return t1 == null ? K.Theme_of(_this._framework$_element).focusColor : t1;
        case C._HighlightType_1:
          t1 = _this._widget.hoverColor;
          return t1 == null ? K.Theme_of(_this._framework$_element).hoverColor : t1;
      }
      return null;
    },
    getFadeDurationForType$1: function(type) {
      switch (type) {
        case C._HighlightType_0:
          return C.Duration_200000;
        case C._HighlightType_1:
        case C._HighlightType_2:
          return C.Duration_50000;
      }
      return null;
    },
    updateHighlight$2$value: function(type, value) {
      var referenceBox, result, t3, t4, t5, t6, _this = this, _null = null,
        t1 = _this._highlights,
        highlight = t1.$index(0, type),
        t2 = highlight == null;
      if (value === (!t2 && highlight._ink_highlight$_active))
        return;
      if (value)
        if (t2) {
          referenceBox = type$.RenderBox._as(_this._framework$_element.get$renderObject());
          result = _this._framework$_element.findAncestorRenderObjectOfType$1$0(type$._RenderInkFeatures);
          t2 = _this.getHighlightColorForType$1(type);
          t3 = _this._widget;
          t4 = t3.highlightShape;
          t3 = t3.customBorder;
          t5 = T.Directionality_of(_this._framework$_element);
          t6 = _this.getFadeDurationForType$1(type);
          t3 = new Y.InkHighlight(t4, C.BorderRadius_tLn, t3, _null, t5, t2, result, referenceBox, new R._InkResponseState_updateHighlight_handleInkRemoval(_this, type));
          t6 = G.AnimationController$(_null, t6, 0, _null, 1, _null, result.vsync);
          t4 = result.get$markNeedsPaint();
          t6.didRegisterListener$0();
          t5 = t6.AnimationLocalListenersMixin__listeners;
          t5._isDirty = true;
          t5._list.push(t4);
          t6.addStatusListener$1(t3.get$_handleAlphaStatusChanged());
          t6.forward$0(0);
          t3._alphaController = t6;
          t2 = t2.value;
          t3._ink_highlight$_alpha = new R._AnimatedEvaluation(type$.Animation_double._as(t6), new R.IntTween(0, (4278190080 & t2) >>> 24), type$.IntTween._eval$1("_AnimatedEvaluation<Animatable.T>"));
          result.addInkFeature$1(t3);
          t1.$indexSet(0, type, t3);
          _this.updateKeepAlive$0();
        } else {
          highlight._ink_highlight$_active = true;
          highlight._alphaController.forward$0(0);
        }
      else {
        highlight._ink_highlight$_active = false;
        highlight._alphaController.reverse$0(0);
      }
      switch (type) {
        case C._HighlightType_0:
          t1 = _this._widget;
          if (t1.onHighlightChanged != null)
            t1.onHighlightChanged$1(value);
          break;
        case C._HighlightType_1:
          t1 = _this._widget;
          if (t1.onHover != null)
            t1.onHover$1(value);
          break;
        case C._HighlightType_2:
          break;
      }
    },
    _createInkFeature$1: function(globalPosition) {
      var t2, customBorder, t3, t4, splash, t5, t6, t7, _this = this, _null = null, t1 = {},
        result = _this._framework$_element.findAncestorRenderObjectOfType$1$0(type$._RenderInkFeatures),
        referenceBox = type$.RenderBox._as(_this._framework$_element.get$renderObject()),
        position = referenceBox.globalToLocal$1(globalPosition),
        color = _this._widget.splashColor;
      if (color == null)
        color = K.Theme_of(_this._framework$_element).splashColor;
      t2 = _this._widget;
      customBorder = t2.customBorder;
      t1.splash = null;
      t2 = K.Theme_of(_this._framework$_element);
      t2.toString;
      t2 = _this._widget;
      t3 = t2.containedInkWell;
      t2 = t2.radius;
      t4 = T.Directionality_of(_this._framework$_element);
      if (t2 == null)
        t2 = U._getTargetRadius(referenceBox, t3, _null, position);
      splash = new U.InkSplash(position, C.BorderRadius_tLn, customBorder, t2, U._getClipCallback(referenceBox, t3, _null), !t3, t4, color, result, referenceBox, new R._InkResponseState__createInkFeature_onRemoved(t1, _this));
      t4 = result.vsync;
      t3 = G.AnimationController$(_null, C.Duration_1000000, 0, _null, 1, _null, t4);
      t5 = result.get$markNeedsPaint();
      t3.didRegisterListener$0();
      t6 = t3.AnimationLocalListenersMixin__listeners;
      t6._isDirty = true;
      t6._list.push(t5);
      t3.forward$0(0);
      splash._radiusController = t3;
      t6 = type$.Tween_double;
      t7 = type$.Animation_double;
      splash._ink_splash$_radius = new R._AnimatedEvaluation(t7._as(t3), new R.Tween(0, t2, t6), t6._eval$1("_AnimatedEvaluation<Animatable.T>"));
      t4 = G.AnimationController$(_null, C.Duration_200000, 0, _null, 1, _null, t4);
      t4.didRegisterListener$0();
      t6 = t4.AnimationLocalListenersMixin__listeners;
      t6._isDirty = true;
      t6._list.push(t5);
      t4.addStatusListener$1(splash.get$_ink_splash$_handleAlphaStatusChanged());
      splash._ink_splash$_alphaController = t4;
      t5 = color.value;
      splash._ink_splash$_alpha = new R._AnimatedEvaluation(t7._as(t4), new R.IntTween((4278190080 & t5) >>> 24, 0), type$.IntTween._eval$1("_AnimatedEvaluation<Animatable.T>"));
      result.addInkFeature$1(splash);
      return t1.splash = splash;
    },
    _handleFocusHighlightModeChange$1: function(mode) {
      if (this._framework$_element == null)
        return;
      this.setState$1(new R._InkResponseState__handleFocusHighlightModeChange_closure(this));
    },
    _updateFocusHighlights$0: function() {
      var showFocus, _this = this,
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightMode;
      switch (t1 == null ? O.FocusManager__defaultModeForPlatform() : t1) {
        case C.FocusHighlightMode_0:
          showFocus = false;
          break;
        case C.FocusHighlightMode_1:
          showFocus = _this._isWidgetEnabled$1(_this._widget) && _this._hasFocus;
          break;
        default:
          showFocus = null;
      }
      _this.updateHighlight$2$value(C._HighlightType_2, showFocus);
    },
    _handleFocusUpdate$1: function(hasFocus) {
      var t1;
      this._hasFocus = hasFocus;
      this._updateFocusHighlights$0();
      t1 = this._widget;
      if (t1.onFocusChange != null)
        t1.onFocusChange$1(hasFocus);
    },
    _handleTapDown$1: function(details) {
      this._startSplash$1$details(details);
      this._widget.toString;
    },
    _startSplash$2$context$details: function(context, details) {
      var referenceBox, t1, globalPosition, splash, _this = this;
      if (context != null) {
        referenceBox = type$.RenderBox._as(context.get$renderObject());
        t1 = referenceBox._size;
        t1 = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy).get$center();
        globalPosition = T.MatrixUtils_transformPoint(referenceBox.getTransformTo$1(0, null), t1);
      } else
        globalPosition = details.globalPosition;
      splash = _this._createInkFeature$1(globalPosition);
      t1 = _this._splashes;
      (t1 == null ? _this._splashes = P.HashSet_HashSet(type$.InteractiveInkFeature) : t1).add$1(0, splash);
      _this._currentSplash = splash;
      _this.updateKeepAlive$0();
      _this.updateHighlight$2$value(C._HighlightType_0, true);
    },
    _startSplash$1$details: function(details) {
      return this._startSplash$2$context$details(null, details);
    },
    _startSplash$1$context: function(context) {
      return this._startSplash$2$context$details(context, null);
    },
    _handleTap$1: function(context) {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null)
        t1.confirm$0(0);
      _this._currentSplash = null;
      _this.updateHighlight$2$value(C._HighlightType_0, false);
      _this._widget.toString;
      M.Feedback_forTap(context);
      _this._widget.onTap$0();
    },
    _handleTapCancel$0: function() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null) {
        t1 = t1._ink_splash$_alphaController;
        if (t1 != null)
          t1.forward$0(0);
      }
      _this._currentSplash = null;
      _this._widget.toString;
      _this.updateHighlight$2$value(C._HighlightType_0, false);
    },
    deactivate$0: function() {
      var t2, t3, t4, t5, _this = this,
        t1 = _this._splashes;
      if (t1 != null) {
        _this._splashes = null;
        for (t1 = new P._HashSetIterator(t1, t1._computeElements$0()); t1.moveNext$0();)
          t1._collection$_current.dispose$0();
        _this._currentSplash = null;
      }
      for (t1 = _this._highlights, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = t1.$index(0, t3);
        if (t4 != null) {
          t5 = t4._alphaController;
          t5._ticker.dispose$0();
          t5._ticker = null;
          t5.super$AnimationEagerListenerMixin$dispose();
          t4.super$InkFeature$dispose();
        }
        t1.$indexSet(0, t3, null);
      }
      _this.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$deactivate();
    },
    _isWidgetEnabled$1: function(widget) {
      widget.toString;
      return true;
    },
    _handleMouseEnter$1: function($event) {
      return this._handleHoverChange$1(true);
    },
    _handleMouseExit$1: function($event) {
      return this._handleHoverChange$1(false);
    },
    _handleHoverChange$1: function(hovering) {
      var _this = this;
      if (_this._hovering !== hovering) {
        _this._hovering = hovering;
        _this.updateHighlight$2$value(C._HighlightType_1, _this._isWidgetEnabled$1(_this._widget) && _this._hovering);
      }
    },
    build$1: function(context) {
      var t1, t2, t3, t4, canRequestFocus, t5, t6, t7, t8, _this = this, _null = null;
      _this.super$AutomaticKeepAliveClientMixin$build(context);
      for (t1 = _this._highlights, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = t1.$index(0, t3);
        if (t4 != null)
          t4.set$color(0, _this.getHighlightColorForType$1(t3));
      }
      t1 = _this._currentSplash;
      if (t1 != null) {
        t2 = _this._widget.splashColor;
        t1.set$color(0, t2 == null ? K.Theme_of(context).splashColor : t2);
      }
      canRequestFocus = _this._isWidgetEnabled$1(_this._widget) && _this._widget.canRequestFocus;
      t1 = _this._actionMap;
      t2 = _this._widget;
      t3 = t2.focusNode;
      t2 = _this._isWidgetEnabled$1(t2) ? _this.get$_handleMouseEnter() : _null;
      t4 = _this._isWidgetEnabled$1(_this._widget) ? _this.get$_handleMouseExit() : _null;
      t5 = _this._isWidgetEnabled$1(_this._widget) ? _this.get$_handleTapDown() : _null;
      t6 = _this._isWidgetEnabled$1(_this._widget) ? new R._InkResponseState_build_closure(_this, context) : _null;
      t7 = _this._isWidgetEnabled$1(_this._widget) ? _this.get$_handleTapCancel() : _null;
      t8 = _this._widget;
      return U.Actions$(t1, L.Focus$(false, canRequestFocus, T.MouseRegion$(D.GestureDetector$(C.HitTestBehavior_1, t8.child, C.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t6, t7, t5, _null, _null, _null), t2, t4, _null, true), _null, t3, true, _null, _this.get$_handleFocusUpdate(), _null, _null));
    }
  };
  R._InkResponseState_highlightsExist_closure.prototype = {
    call$1: function(highlight) {
      return highlight != null;
    }
  };
  R._InkResponseState_updateHighlight_handleInkRemoval.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._highlights.$indexSet(0, this.type, null);
      t1.updateKeepAlive$0();
    },
    $signature: 1
  };
  R._InkResponseState__createInkFeature_onRemoved.prototype = {
    call$0: function() {
      var t3,
        t1 = this.$this,
        t2 = t1._splashes;
      if (t2 != null) {
        t3 = this._box_0;
        t2.remove$1(0, t3.splash);
        if (t1._currentSplash == t3.splash)
          t1._currentSplash = null;
        t1.updateKeepAlive$0();
      }
    },
    $signature: 1
  };
  R._InkResponseState__handleFocusHighlightModeChange_closure.prototype = {
    call$0: function() {
      this.$this._updateFocusHighlights$0();
    },
    $signature: 0
  };
  R._InkResponseState_build_closure.prototype = {
    call$0: function() {
      return this.$this._handleTap$1(this.context);
    },
    $signature: 1
  };
  R.InkWell.prototype = {};
  R.__InkResponseState_State_AutomaticKeepAliveClientMixin.prototype = {
    initState$0: function() {
      this.super$State$initState();
      if (this.get$wantKeepAlive())
        this._ensureKeepAlive$0();
    },
    deactivate$0: function() {
      var t1 = this.AutomaticKeepAliveClientMixin__keepAliveHandle;
      if (t1 != null) {
        t1.notifyListeners$0();
        this.AutomaticKeepAliveClientMixin__keepAliveHandle = null;
      }
      this.super$State$deactivate();
    }
  };
  L.FloatingLabelBehavior.prototype = {
    toString$0: function(_) {
      return "FloatingLabelBehavior.auto";
    }
  };
  L.InputDecorationTheme.prototype = {
    get$hashCode: function(_) {
      return P.hashList([null, null, null, null, null, null, true, C.FloatingLabelBehavior_1, false, null, false, null, null, null, false, null, null, null, null, null, null, null, null, null, false]);
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      if (other instanceof L.InputDecorationTheme)
        t1 = true;
      else
        t1 = false;
      return t1;
    }
  };
  L._InputDecorationTheme_Object_Diagnosticable.prototype = {};
  M.MaterialType.prototype = {
    toString$0: function(_) {
      return this._material$_name;
    }
  };
  M.Material.prototype = {
    createState$0: function() {
      return new M._MaterialState(new N.LabeledGlobalKey("ink renderer", type$.LabeledGlobalKey_State_StatefulWidget), null, C._StateLifecycle_0);
    }
  };
  M._MaterialState.prototype = {
    build$1: function(context) {
      var contents, t2, shape, _this = this, _null = null,
        theme = K.Theme_of(context),
        t1 = _this._widget,
        color = t1.color;
      if (color == null)
        switch (t1.type) {
          case C.MaterialType_0:
            color = theme.canvasColor;
            break;
          case C.MaterialType_1:
            color = theme.cardColor;
            break;
          default:
            break;
        }
      contents = t1.child;
      t1 = t1.textStyle;
      if (t1 == null)
        t1 = K.Theme_of(context).textTheme.bodyText2;
      t2 = _this._widget;
      contents = new G.AnimatedDefaultTextStyle(contents, t1, C.C__Linear, t2.animationDuration, _null, _null);
      t1 = t2;
      contents = U.NotificationListener$(new M._InkFeatures(color, _this, contents, _this._inkFeatureRenderer), new M._MaterialState_build_closure(_this), type$.LayoutChangedNotification);
      if (t1.type === C.MaterialType_0 && t1.shape == null && true) {
        t2 = t1.elevation;
        return new G.AnimatedPhysicalModel(contents, C.BoxShape_0, t1.clipBehavior, C.BorderRadius_tLn, t2, R.ElevationOverlay_applyOverlay(context, color, t2), false, _this._widget.shadowColor, C.Cubic_ifx, t1.animationDuration, _null, _null);
      }
      shape = _this._getShape$0();
      t1 = _this._widget;
      if (t1.type === C.MaterialType_4)
        return M._MaterialState__transparentInterior(t1.clipBehavior, contents, context, shape);
      t2 = t1.animationDuration;
      return new M._MaterialInterior(contents, shape, true, t1.clipBehavior, t1.elevation, color, t1.shadowColor, C.Cubic_ifx, t2, _null, _null);
    },
    _getShape$0: function() {
      var t1 = this._widget,
        t2 = t1.shape;
      if (t2 != null)
        return t2;
      t1 = t1.type;
      switch (t1) {
        case C.MaterialType_0:
        case C.MaterialType_4:
          return C.RoundedRectangleBorder_yx31;
        case C.MaterialType_1:
        case C.MaterialType_3:
          t1 = $.$get$kMaterialEdges().$index(0, t1);
          return new X.RoundedRectangleBorder(C.BorderSide_m7u, t1);
        case C.MaterialType_2:
          return C.CircleBorder_61T;
      }
      return C.RoundedRectangleBorder_yx31;
    }
  };
  M._MaterialState_build_closure.prototype = {
    call$1: function(notification) {
      var renderer = type$._RenderInkFeatures._as($.GlobalKey__registry.$index(0, this.$this._inkFeatureRenderer).get$renderObject()),
        t1 = renderer._inkFeatures;
      if (t1 != null && J.get$isNotEmpty$asx(t1))
        renderer.markNeedsPaint$0();
      return false;
    }
  };
  M._RenderInkFeatures.prototype = {
    addInkFeature$1: function(feature) {
      var t1 = this._inkFeatures;
      J.add$1$ax(t1 == null ? this._inkFeatures = H.setRuntimeTypeInfo([], type$.JSArray_InkFeature) : t1, feature);
      this.markNeedsPaint$0();
    },
    hitTestSelf$1: function(position) {
      return true;
    },
    paint$2: function(context, offset) {
      var canvas, _this = this,
        t1 = _this._inkFeatures;
      if (t1 != null && J.get$isNotEmpty$asx(t1)) {
        canvas = context.get$canvas(context);
        canvas.save$0(0);
        canvas.translate$2(0, offset._dx, offset._dy);
        t1 = _this._size;
        canvas.clipRect$1(new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy));
        for (t1 = J.get$iterator$ax(_this._inkFeatures); t1.moveNext$0();)
          t1.get$current(t1)._material$_paint$1(canvas);
        canvas.restore$0(0);
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
    }
  };
  M._InkFeatures.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new M._RenderInkFeatures(this.vsync, this.color, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.color = this.color;
    }
  };
  M.InkFeature.prototype = {
    dispose$0: function() {
      var t1 = this._material$_controller;
      J.remove$1$ax(t1._inkFeatures, this);
      t1.markNeedsPaint$0();
      this.onRemoved.call$0();
    },
    _material$_paint$1: function(canvas) {
      var t1, t2, transform, index, index0,
        node = this.referenceBox,
        descendants = H.setRuntimeTypeInfo([node], type$.JSArray_RenderObject);
      for (t1 = this._material$_controller, t2 = type$.RenderObject; node != t1;) {
        node = t2._as(node._node$_parent);
        descendants.push(node);
      }
      transform = new E.Matrix4(new Float64Array(16));
      transform.setIdentity$0();
      for (index = descendants.length - 1; index > 0; index = index0) {
        index0 = index - 1;
        descendants[index].applyPaintTransform$2(descendants[index0], transform);
      }
      this.paintFeature$2(canvas, transform);
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this);
    }
  };
  M.ShapeBorderTween.prototype = {
    lerp$1: function(t) {
      return Y.ShapeBorder_lerp(this.begin, this.end, t);
    }
  };
  M._MaterialInterior.prototype = {
    createState$0: function() {
      return new M._MaterialInteriorState(null, C._StateLifecycle_0);
    }
  };
  M._MaterialInteriorState.prototype = {
    forEachTween$1: function(visitor) {
      var _this = this;
      _this._elevation = type$.Tween_double._as(visitor.call$3(_this._elevation, _this._widget.elevation, new M._MaterialInteriorState_forEachTween_closure()));
      _this._shadowColor = type$.ColorTween._as(visitor.call$3(_this._shadowColor, _this._widget.shadowColor, new M._MaterialInteriorState_forEachTween_closure0()));
      _this._border = type$.ShapeBorderTween._as(visitor.call$3(_this._border, _this._widget.shape, new M._MaterialInteriorState_forEachTween_closure1()));
    },
    build$1: function(context) {
      var shape, elevation, t3, t4, t5, t6, _this = this,
        t1 = _this._border,
        t2 = _this._implicit_animations$_animation;
      t1.toString;
      shape = t1.transform$1(0, t2.get$value(t2));
      t2 = _this._elevation;
      t1 = _this._implicit_animations$_animation;
      t2.toString;
      elevation = t2.transform$1(0, t1.get$value(t1));
      t1 = _this._widget.child;
      t2 = T.Directionality_of(context);
      t3 = _this._widget;
      t4 = t3.clipBehavior;
      t3 = R.ElevationOverlay_applyOverlay(context, t3.color, elevation);
      t5 = _this._shadowColor;
      t6 = _this._implicit_animations$_animation;
      t5.toString;
      return new T.PhysicalShape(new E.ShapeBorderClipper(shape, t2), t4, elevation, t3, t5.transform$1(0, t6.get$value(t6)), new M._ShapeBorderPaint(t1, shape, true, null), null);
    }
  };
  M._MaterialInteriorState_forEachTween_closure.prototype = {
    call$1: function(value) {
      return new R.Tween(H._asDoubleS(value), null, type$.Tween_double);
    },
    $signature: 57
  };
  M._MaterialInteriorState_forEachTween_closure0.prototype = {
    call$1: function(value) {
      return new R.ColorTween(type$.Color._as(value), null);
    },
    $signature: 30
  };
  M._MaterialInteriorState_forEachTween_closure1.prototype = {
    call$1: function(value) {
      return new M.ShapeBorderTween(type$.ShapeBorder._as(value), null);
    },
    $signature: 98
  };
  M._ShapeBorderPaint.prototype = {
    build$1: function(context) {
      var t1 = T.Directionality_of(context);
      return T.CustomPaint$(this.child, new M._ShapeBorderPainter(this.shape, t1, null), null, null);
    }
  };
  M._ShapeBorderPainter.prototype = {
    paint$2: function(canvas, size) {
      this.border.paint$3$textDirection(canvas, new P.Rect(0, 0, 0 + size._dx, 0 + size._dy), this.textDirection);
    },
    shouldRepaint$1: function(oldDelegate) {
      return !J.$eq$(oldDelegate.border, this.border);
    }
  };
  M.__MaterialState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var muted = !U.TickerMode_of(this._framework$_element),
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
          t1._collection$_current.set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  U.MaterialLocalizations.prototype = {};
  U._MaterialLocalizationsDelegate.prototype = {
    isSupported$1: function(locale) {
      locale.toString;
      return P.Locale__replaceDeprecatedLanguageSubtag("en") === "en";
    },
    load$1: function(_, locale) {
      return new O.SynchronousFuture(C.C_DefaultMaterialLocalizations, type$.SynchronousFuture_MaterialLocalizations);
    },
    shouldReload$1: function(old) {
      return false;
    },
    toString$0: function(_) {
      return "DefaultMaterialLocalizations.delegate(en_US)";
    }
  };
  U.DefaultMaterialLocalizations.prototype = {$isMaterialLocalizations: 1};
  V.MaterialState.prototype = {
    toString$0: function(_) {
      return this._material_state$_name;
    }
  };
  E.NavigationRailThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.elevation, _this.unselectedLabelTextStyle, _this.selectedLabelTextStyle, _this.unselectedIconTheme, _this.selectedIconTheme, _this.groupAlignment, _this.labelType, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof E.NavigationRailThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && other.elevation == _this.elevation && J.$eq$(other.unselectedLabelTextStyle, _this.unselectedLabelTextStyle) && J.$eq$(other.selectedLabelTextStyle, _this.selectedLabelTextStyle) && J.$eq$(other.unselectedIconTheme, _this.unselectedIconTheme) && J.$eq$(other.selectedIconTheme, _this.selectedIconTheme) && other.groupAlignment == _this.groupAlignment && true;
    }
  };
  E._NavigationRailThemeData_Object_Diagnosticable.prototype = {};
  V.MaterialPageRoute.prototype = {};
  K._FadeUpwardsPageTransition.prototype = {
    build$1: function(context) {
      return K.SlideTransition$(K.FadeTransition$(this.child, this._opacityAnimation), this._positionAnimation, null, true);
    }
  };
  K.PageTransitionsBuilder.prototype = {};
  K.FadeUpwardsPageTransitionsBuilder.prototype = {
    buildTransitions$1$5: function(route, context, animation, secondaryAnimation, child) {
      var t3, t4,
        t1 = $.$get$_FadeUpwardsPageTransition__bottomUpTween(),
        t2 = $.$get$_FadeUpwardsPageTransition__fastOutSlowInTween();
      t1.toString;
      t3 = t1.$ti._eval$1("_ChainedEvaluation<Animatable.T>");
      animation.toString;
      type$.Animation_double._as(animation);
      t4 = $.$get$_FadeUpwardsPageTransition__easeInTween();
      t4.toString;
      return new K._FadeUpwardsPageTransition(new R._AnimatedEvaluation(animation, new R._ChainedEvaluation(t2, t1, t3), t3._eval$1("_AnimatedEvaluation<Animatable.T>")), new R._AnimatedEvaluation(animation, t4, H._instanceType(t4)._eval$1("_AnimatedEvaluation<Animatable.T>")), child, null);
    }
  };
  K.CupertinoPageTransitionsBuilder.prototype = {
    buildTransitions$1$5: function(route, context, animation, secondaryAnimation, child, $T) {
      return D.CupertinoPageRoute_buildPageTransitions(route, context, animation, secondaryAnimation, child, $T);
    }
  };
  K.PageTransitionsTheme.prototype = {
    get$builders: function() {
      return C.Map_23gMT;
    },
    _all$1: function(builders) {
      return new H.MappedListIterable(C.List_uDp, new K.PageTransitionsTheme__all_closure(builders), type$.MappedListIterable_TargetPlatform_PageTransitionsBuilder).toList$0(0);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      t1 = other instanceof K.PageTransitionsTheme;
      if (t1 && _this.get$builders() === other.get$builders())
        return true;
      return t1 && S.listEquals(_this._all$1(other.get$builders()), _this._all$1(_this.get$builders()));
    },
    get$hashCode: function(_) {
      return P.hashList(this._all$1(this.get$builders()));
    }
  };
  K.PageTransitionsTheme__all_closure.prototype = {
    call$1: function(platform) {
      return this.builders.$index(0, platform);
    }
  };
  K._PageTransitionsTheme_Object_Diagnosticable.prototype = {};
  R.PopupMenuThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.color, _this.shape, _this.elevation, _this.textStyle, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof R.PopupMenuThemeData && other.elevation == _this.elevation && J.$eq$(other.color, _this.color) && J.$eq$(other.shape, _this.shape) && J.$eq$(other.textStyle, _this.textStyle);
    }
  };
  R._PopupMenuThemeData_Object_Diagnosticable.prototype = {};
  M._ScaffoldSlot.prototype = {
    toString$0: function(_) {
      return this._scaffold$_name;
    }
  };
  M.ScaffoldPrelayoutGeometry.prototype = {};
  M.ScaffoldGeometry.prototype = {};
  M._ScaffoldGeometryNotifier.prototype = {
    _updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale: function(bottomNavigationBarTop, floatingActionButtonArea, floatingActionButtonScale) {
      var t1, t2, _this = this;
      _this.floatingActionButtonScale = floatingActionButtonScale == null ? _this.floatingActionButtonScale : floatingActionButtonScale;
      t1 = _this.geometry;
      t2 = bottomNavigationBarTop == null ? t1.bottomNavigationBarTop : bottomNavigationBarTop;
      _this.geometry = new M.ScaffoldGeometry(t2, floatingActionButtonArea == null ? t1.floatingActionButtonArea : floatingActionButtonArea);
      _this.notifyListeners$0();
    },
    _updateWith$1$floatingActionButtonScale: function(floatingActionButtonScale) {
      return this._updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(null, null, floatingActionButtonScale);
    },
    _updateWith$2$bottomNavigationBarTop$floatingActionButtonArea: function(bottomNavigationBarTop, floatingActionButtonArea) {
      return this._updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(bottomNavigationBarTop, floatingActionButtonArea, null);
    }
  };
  M._BodyBoxConstraints.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!this.super$BoxConstraints$$eq(0, other))
        return false;
      return other instanceof M._BodyBoxConstraints && other.bottomWidgetsHeight === this.bottomWidgetsHeight && other.appBarHeight == this.appBarHeight;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(S.BoxConstraints.prototype.get$hashCode.call(_this, _this), _this.bottomWidgetsHeight, _this.appBarHeight, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  M._BodyBuilder.prototype = {
    build$1: function(context) {
      return this.body;
    }
  };
  M._ScaffoldLayout.prototype = {
    performLayout$1: function(size) {
      var appBarHeight, contentTop, bottomWidgetsHeight, bottomNavigationBarTop, t3, contentBottom, bodyMaxHeight, t4, snackBarSize, bottomSheetSize, fabSize, currentGeometry, currentFabOffset, fabOffset, floatingActionButtonRect, snackBarYOffsetBase, _this = this,
        t1 = size._dx,
        t2 = size._dy,
        looseConstraints = new S.BoxConstraints(0, t1, 0, t2),
        fullWidthConstraints = looseConstraints.tighten$1$width(t1);
      if (_this._idToChild.$index(0, C._ScaffoldSlot_1) != null) {
        appBarHeight = _this.layoutChild$2(C._ScaffoldSlot_1, fullWidthConstraints)._dy;
        _this.positionChild$2(C._ScaffoldSlot_1, C.Offset_0_0);
        contentTop = appBarHeight;
      } else {
        contentTop = 0;
        appBarHeight = 0;
      }
      if (_this._idToChild.$index(0, C._ScaffoldSlot_6) != null) {
        bottomWidgetsHeight = 0 + _this.layoutChild$2(C._ScaffoldSlot_6, fullWidthConstraints)._dy;
        bottomNavigationBarTop = Math.max(0, t2 - bottomWidgetsHeight);
        _this.positionChild$2(C._ScaffoldSlot_6, new P.Offset(0, bottomNavigationBarTop));
      } else {
        bottomWidgetsHeight = 0;
        bottomNavigationBarTop = null;
      }
      if (_this._idToChild.$index(0, C._ScaffoldSlot_5) != null) {
        bottomWidgetsHeight += _this.layoutChild$2(C._ScaffoldSlot_5, new S.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, Math.max(0, t2 - bottomWidgetsHeight - contentTop)))._dy;
        _this.positionChild$2(C._ScaffoldSlot_5, new P.Offset(0, Math.max(0, t2 - bottomWidgetsHeight)));
      }
      t3 = _this.minInsets;
      contentBottom = Math.max(0, t2 - Math.max(H.checkNum(t3.bottom), bottomWidgetsHeight));
      if (_this._idToChild.$index(0, C._ScaffoldSlot_0) != null) {
        bodyMaxHeight = Math.max(0, contentBottom - contentTop);
        t4 = _this.extendBody;
        if (t4)
          bodyMaxHeight = C.JSNumber_methods.clamp$2(bodyMaxHeight + bottomWidgetsHeight, 0, t2 - contentTop);
        t2 = t4 ? bottomWidgetsHeight : 0;
        _this.layoutChild$2(C._ScaffoldSlot_0, new M._BodyBoxConstraints(t2, appBarHeight, 0, fullWidthConstraints.maxWidth, 0, bodyMaxHeight));
        _this.positionChild$2(C._ScaffoldSlot_0, new P.Offset(0, contentTop));
      }
      if (_this._idToChild.$index(0, C._ScaffoldSlot_2) != null) {
        _this.layoutChild$2(C._ScaffoldSlot_2, new S.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, contentBottom));
        _this.positionChild$2(C._ScaffoldSlot_2, C.Offset_0_0);
      }
      snackBarSize = _this._idToChild.$index(0, C._ScaffoldSlot_4) != null && !_this.isSnackBarFloating ? _this.layoutChild$2(C._ScaffoldSlot_4, fullWidthConstraints) : C.Size_0_0;
      if (_this._idToChild.$index(0, C._ScaffoldSlot_3) != null) {
        bottomSheetSize = _this.layoutChild$2(C._ScaffoldSlot_3, new S.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, Math.max(0, contentBottom - contentTop)));
        _this.positionChild$2(C._ScaffoldSlot_3, new P.Offset((t1 - bottomSheetSize._dx) / 2, contentBottom - bottomSheetSize._dy));
      } else
        bottomSheetSize = C.Size_0_0;
      if (_this._idToChild.$index(0, C._ScaffoldSlot_7) != null) {
        fabSize = _this.layoutChild$2(C._ScaffoldSlot_7, looseConstraints);
        currentGeometry = new M.ScaffoldPrelayoutGeometry(fabSize, bottomSheetSize, contentBottom, t3, size, snackBarSize, _this.textDirection);
        currentFabOffset = _this.currentFloatingActionButtonLocation.getOffset$1(currentGeometry);
        fabOffset = _this.floatingActionButtonMotionAnimator.getOffset$3$begin$end$progress(_this.previousFloatingActionButtonLocation.getOffset$1(currentGeometry), currentFabOffset, _this.floatingActionButtonMoveAnimationProgress);
        _this.positionChild$2(C._ScaffoldSlot_7, fabOffset);
        t1 = fabOffset._dx;
        t2 = fabOffset._dy;
        floatingActionButtonRect = new P.Rect(t1, t2, t1 + fabSize._dx, t2 + fabSize._dy);
      } else
        floatingActionButtonRect = null;
      if (_this._idToChild.$index(0, C._ScaffoldSlot_4) != null) {
        if (J.$eq$(snackBarSize, C.Size_0_0))
          snackBarSize = _this.layoutChild$2(C._ScaffoldSlot_4, fullWidthConstraints);
        t1 = floatingActionButtonRect.right;
        t2 = floatingActionButtonRect.left;
        t4 = floatingActionButtonRect.bottom;
        snackBarYOffsetBase = floatingActionButtonRect.top;
        snackBarYOffsetBase = !new P.Size(t1 - t2, t4 - snackBarYOffsetBase).$eq(0, C.Size_0_0) && _this.isSnackBarFloating ? snackBarYOffsetBase : contentBottom;
        _this.positionChild$2(C._ScaffoldSlot_4, new P.Offset(0, snackBarYOffsetBase - snackBarSize._dy));
      }
      if (_this._idToChild.$index(0, C._ScaffoldSlot_10) != null) {
        _this.layoutChild$2(C._ScaffoldSlot_10, fullWidthConstraints.tighten$1$height(t3.top));
        _this.positionChild$2(C._ScaffoldSlot_10, C.Offset_0_0);
      }
      if (_this._idToChild.$index(0, C._ScaffoldSlot_8) != null) {
        _this.layoutChild$2(C._ScaffoldSlot_8, S.BoxConstraints$tight(size));
        _this.positionChild$2(C._ScaffoldSlot_8, C.Offset_0_0);
      }
      if (_this._idToChild.$index(0, C._ScaffoldSlot_9) != null) {
        _this.layoutChild$2(C._ScaffoldSlot_9, S.BoxConstraints$tight(size));
        _this.positionChild$2(C._ScaffoldSlot_9, C.Offset_0_0);
      }
      _this.geometryNotifier._updateWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonRect);
    },
    shouldRelayout$1: function(oldDelegate) {
      var _this = this;
      return !oldDelegate.minInsets.$eq(0, _this.minInsets) || oldDelegate.textDirection != _this.textDirection || oldDelegate.floatingActionButtonMoveAnimationProgress != _this.floatingActionButtonMoveAnimationProgress || oldDelegate.previousFloatingActionButtonLocation != _this.previousFloatingActionButtonLocation || oldDelegate.currentFloatingActionButtonLocation != _this.currentFloatingActionButtonLocation || oldDelegate.extendBody !== _this.extendBody || false;
    }
  };
  M._FloatingActionButtonTransition.prototype = {
    createState$0: function() {
      return new M._FloatingActionButtonTransitionState(null, C._StateLifecycle_0);
    }
  };
  M._FloatingActionButtonTransitionState.prototype = {
    initState$0: function() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = G.AnimationController$(null, C.Duration_200000, 0, null, 1, null, _this);
      t1.addStatusListener$1(_this.get$_handlePreviousAnimationStatusChanged());
      _this._previousController = t1;
      _this._updateAnimations$0();
      _this._widget.geometryNotifier._updateWith$1$floatingActionButtonScale(0);
    },
    dispose$0: function() {
      this._previousController.dispose$0();
      this.super$__FloatingActionButtonTransitionState_State_TickerProviderStateMixin$dispose();
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      oldWidget.toString;
      this._widget.toString;
      return;
    },
    _updateAnimations$0: function() {
      var t6, t7, t8, t9, t10, t11, t12, moveScaleAnimation, t13, t14, moveRotationAnimation, _this = this, _null = null,
        previousExitScaleAnimation = S.CurvedAnimation$(C.Cubic_JUR0, _this._previousController, _null),
        t1 = type$.Tween_double,
        t2 = S.CurvedAnimation$(C.Cubic_JUR0, _this._previousController, _null),
        currentEntranceScaleAnimation = S.CurvedAnimation$(C.Cubic_JUR0, _this._widget.currentController, _null),
        t3 = _this._widget,
        t4 = t3.currentController,
        t5 = $.$get$_FloatingActionButtonTransitionState__entranceTurnTween();
      t4.toString;
      t6 = type$.Animation_double;
      t6._as(t4);
      t5.toString;
      t7 = t3.fabMotionAnimator;
      t3 = t3.fabMoveAnimation;
      t7.toString;
      t3.toString;
      t6._as(t3);
      t7 = type$.CurveTween._eval$1("_AnimatedEvaluation<Animatable.T>");
      t8 = type$.JSArray_of_void_Function_AnimationStatus;
      t9 = type$.ObserverList_of_void_Function_AnimationStatus;
      t10 = type$.JSArray_of_void_Function;
      t11 = type$.ObserverList_of_void_Function;
      t12 = type$._AnimationSwap_double;
      moveScaleAnimation = new A._AnimationSwap(t3, 0.5, new S.ReverseAnimation(new R._AnimatedEvaluation(t3, new R.CurveTween(new Z.FlippedCurve(C.Interval_E4y)), t7), new R.ObserverList(H.setRuntimeTypeInfo([], t8), t9), 0), new R._AnimatedEvaluation(t3, new R.CurveTween(C.Interval_E4y), t7), new R.ObserverList(H.setRuntimeTypeInfo([], t8), t9), new R.ObserverList(H.setRuntimeTypeInfo([], t10), t11), 0, t12);
      t3 = _this._widget;
      t13 = t3.fabMotionAnimator;
      t3 = t3.fabMoveAnimation;
      t13.toString;
      t13 = $.$get$_ScalingFabMotionAnimator__rotationTween();
      t3.toString;
      t6._as(t3);
      t13.toString;
      t14 = $.$get$_ScalingFabMotionAnimator__thresholdCenterTween();
      t14.toString;
      moveRotationAnimation = new A._AnimationSwap(t3, 0.5, new R._AnimatedEvaluation(t3, t13, t13.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), new S.ReverseAnimation(new R._AnimatedEvaluation(t3, t14, H._instanceType(t14)._eval$1("_AnimatedEvaluation<Animatable.T>")), new R.ObserverList(H.setRuntimeTypeInfo([], t8), t9), 0), new R.ObserverList(H.setRuntimeTypeInfo([], t8), t9), new R.ObserverList(H.setRuntimeTypeInfo([], t10), t11), 0, t12);
      t12 = type$.AnimationMin_double;
      _this._previousScaleAnimation = new S.AnimationMin(moveScaleAnimation, previousExitScaleAnimation, new R.ObserverList(H.setRuntimeTypeInfo([], t8), t9), new R.ObserverList(H.setRuntimeTypeInfo([], t10), t11), 0, t12);
      t12 = new S.AnimationMin(moveScaleAnimation, currentEntranceScaleAnimation, new R.ObserverList(H.setRuntimeTypeInfo([], t8), t9), new R.ObserverList(H.setRuntimeTypeInfo([], t10), t11), 0, t12);
      _this._currentScaleAnimation = t12;
      _this._extendedCurrentScaleAnimation = new R._AnimatedEvaluation(t6._as(t12), new R.CurveTween(C.Interval_75R), t7);
      _this._previousRotationAnimation = S.TrainHoppingAnimation$(new R._AnimatedEvaluation(t2, new R.Tween(1, 1, t1), t1._eval$1("_AnimatedEvaluation<Animatable.T>")), moveRotationAnimation, _null);
      _this._currentRotationAnimation = S.TrainHoppingAnimation$(new R._AnimatedEvaluation(t4, t5, t5.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), moveRotationAnimation, _null);
      t5 = _this._currentScaleAnimation;
      t4 = _this.get$_onProgressChanged();
      t5.didRegisterListener$0();
      t5 = t5.AnimationLocalListenersMixin__listeners;
      t5._isDirty = true;
      t5._list.push(t4);
      t5 = _this._previousScaleAnimation;
      t5.didRegisterListener$0();
      t5 = t5.AnimationLocalListenersMixin__listeners;
      t5._isDirty = true;
      t5._list.push(t4);
    },
    _handlePreviousAnimationStatusChanged$1: function($status) {
      this.setState$1(new M._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure(this, $status));
    },
    build$1: function(context) {
      var t2, t3, _this = this,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_Widget);
      if (_this._previousController._animation_controller$_status !== C.AnimationStatus_0) {
        t2 = _this._previousScaleAnimation;
        t1.push(K.ScaleTransition$(K.RotationTransition$(_this._previousChild, _this._previousRotationAnimation), t2));
      }
      t2 = _this._widget;
      t3 = _this._currentScaleAnimation;
      t1.push(K.ScaleTransition$(K.RotationTransition$(t2.child, _this._currentRotationAnimation), t3));
      return T.Stack$(C.Alignment_1_0, t1, C.StackFit_0);
    },
    _onProgressChanged$0: function() {
      var t3,
        t1 = this._previousScaleAnimation,
        t2 = t1.first;
      t2 = t2.get$value(t2);
      t1 = t1.next;
      t1 = t1.get$value(t1);
      t1 = Math.min(H.checkNum(t2), H.checkNum(t1));
      t2 = this._currentScaleAnimation;
      t3 = t2.first;
      t3 = t3.get$value(t3);
      t2 = t2.next;
      t2 = t2.get$value(t2);
      t2 = Math.max(t1, Math.min(H.checkNum(t3), H.checkNum(t2)));
      this._widget.geometryNotifier._updateWith$1$floatingActionButtonScale(t2);
    }
  };
  M._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure.prototype = {
    call$0: function() {
      if (this.status === C.AnimationStatus_0)
        this.$this._widget.toString;
    },
    $signature: 0
  };
  M.Scaffold.prototype = {
    createState$0: function() {
      var _null = null,
        t1 = type$.LabeledGlobalKey_DrawerControllerState;
      return new M.ScaffoldState(new N.LabeledGlobalKey(_null, t1), new N.LabeledGlobalKey(_null, t1), P.ListQueue$(_null, type$.ScaffoldFeatureController_SnackBar_SnackBarClosedReason), H.setRuntimeTypeInfo([], type$.JSArray__StandardBottomSheet), new F.ScrollController(0, H.setRuntimeTypeInfo([], type$.JSArray_ScrollPosition), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function)), C.Color_4278190080, _null, C._StateLifecycle_0);
    }
  };
  M.ScaffoldState.prototype = {
    hideCurrentSnackBar$1$reason: function(reason) {
      var t2, mediaQuery, completer, _this = this,
        t1 = _this._snackBars;
      if (t1._head !== t1._tail) {
        C.JSNull_methods.get$status(null);
        t2 = false;
      } else
        t2 = true;
      if (t2)
        return;
      mediaQuery = F.MediaQuery_of(_this._framework$_element, false);
      completer = t1.get$first(t1)._scaffold$_completer;
      if (mediaQuery.accessibleNavigation) {
        C.JSNull_methods.set$value(null, 0);
        completer.complete$1(0, reason);
      } else
        C.JSNull_methods.reverse$0(null).then$1$1(new M.ScaffoldState_hideCurrentSnackBar_closure(_this, completer, reason), type$.void);
      t1 = _this._snackBarTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._snackBarTimer = null;
    },
    _maybeBuildPersistentBottomSheet$0: function() {
      this._widget.toString;
    },
    _handleStatusBarTap$0: function() {
      var t1 = this._primaryScrollController;
      if (t1._positions.length !== 0)
        t1.animateTo$3$curve$duration(0, C.C__Linear, C.Duration_300000);
    },
    get$_resizeToAvoidBottomInset: function() {
      this._widget.toString;
      return true;
    },
    initState$0: function() {
      var _this = this, _null = null;
      _this.super$State$initState();
      _this._geometryNotifier = new M._ScaffoldGeometryNotifier(C.ScaffoldGeometry_null_null, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      _this._widget.toString;
      _this._floatingActionButtonLocation = C.C__EndFloatFabLocation;
      _this._floatingActionButtonAnimator = C.C__ScalingFabMotionAnimator;
      _this._previousFloatingActionButtonLocation = C.C__EndFloatFabLocation;
      _this._floatingActionButtonMoveController = G.AnimationController$(_null, new P.Duration(400000), 0, _null, 1, 1, _this);
      _this._floatingActionButtonVisibilityController = G.AnimationController$(_null, C.Duration_200000, 0, _null, 1, _null, _this);
    },
    didUpdateWidget$1: function(oldWidget) {
      this._widget.toString;
      oldWidget.toString;
      this.super$State$didUpdateWidget(oldWidget);
    },
    didChangeDependencies$0: function() {
      var t1, _this = this,
        mediaQuery = F.MediaQuery_of(_this._framework$_element, false);
      if (_this._accessibleNavigation === true)
        if (!mediaQuery.accessibleNavigation) {
          t1 = _this._snackBarTimer;
          t1 = t1 != null && t1._handle == null;
        } else
          t1 = false;
      else
        t1 = false;
      if (t1)
        _this.hideCurrentSnackBar$1$reason(C.SnackBarClosedReason_5);
      _this._accessibleNavigation = mediaQuery.accessibleNavigation;
      _this._maybeBuildPersistentBottomSheet$0();
      _this.super$_ScaffoldState_State_TickerProviderStateMixin$didChangeDependencies();
    },
    dispose$0: function() {
      var t2, _i, t3, _this = this,
        t1 = _this._snackBarTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._snackBarTimer = null;
      _this._geometryNotifier.ChangeNotifier__listeners = null;
      for (t1 = _this._dismissedBottomSheets, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        t3 = t1[_i].animationController;
        t3._ticker.dispose$0();
        t3._ticker = null;
        t3.super$AnimationEagerListenerMixin$dispose();
      }
      t1 = _this._currentBottomSheet;
      if (t1 != null)
        t1._scaffold$_widget.animationController.dispose$0();
      _this._floatingActionButtonMoveController.dispose$0();
      _this._floatingActionButtonVisibilityController.dispose$0();
      _this.super$_ScaffoldState_State_TickerProviderStateMixin$dispose();
    },
    _addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding: function(children, child, childId, maintainBottomViewPadding, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      var data = F.MediaQuery_of(this._framework$_element, false).removePadding$4$removeBottom$removeLeft$removeRight$removeTop(removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
      if (removeBottomInset)
        data = data.removeViewInsets$1$removeBottom(true);
      if (maintainBottomViewPadding && data.viewInsets.bottom !== 0)
        data = data.copyWith$1$padding(data.padding.copyWith$1$bottom(data.viewPadding.bottom));
      if (child != null)
        children.push(T.LayoutId$(new F.MediaQuery(data, child, null), childId));
    },
    _addIfNonNull$8$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding: function(children, child, childId, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, false, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding: function(children, child, childId, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, false, false, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding: function(children, child, childId, maintainBottomViewPadding, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, maintainBottomViewPadding, false, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _buildEndDrawer$2: function(children, textDirection) {
      this._widget.toString;
    },
    _buildDrawer$2: function(children, textDirection) {
      this._widget.toString;
    },
    build$1: function(context) {
      var t1, route, t2, children, t3, _i, stack, minInsets, _this = this, _null = null, _box_0 = {},
        mediaQuery = F.MediaQuery_of(context, false),
        themeData = K.Theme_of(context),
        textDirection = T.Directionality_of(context);
      _this._accessibleNavigation = mediaQuery.accessibleNavigation;
      t1 = _this._snackBars;
      if (!t1.get$isEmpty(t1)) {
        route = T.ModalRoute_of(context, type$.Object);
        if (route == null || route.get$isCurrent())
          _null.get$isCompleted();
        else {
          t2 = _this._snackBarTimer;
          if (t2 != null)
            t2.cancel$0(0);
          _this._snackBarTimer = null;
        }
      }
      children = H.setRuntimeTypeInfo([], type$.JSArray_LayoutId);
      t2 = _this._widget.body;
      _this.get$_resizeToAvoidBottomInset();
      _this._addIfNonNull$8$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new M._BodyBuilder(t2, false, false, _null), C._ScaffoldSlot_0, true, false, false, false, true);
      if (_this._showBodyScrim)
        _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, X.ModalBarrier$(true, _this._bodyScrimColor, false, _null), C._ScaffoldSlot_2, true, true, true, true);
      t2 = _this._widget;
      t2.toString;
      t3 = mediaQuery.padding;
      t2 = t2.appBar;
      t3 = _this._appBarMaxHeight = t2.preferredSize._dy + t3.top;
      _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new T.ConstrainedBox(new S.BoxConstraints(0, 1 / 0, 0, t3), new Z.FlexibleSpaceBarSettings(1, t3, t3, t3, t2, _null), _null), C._ScaffoldSlot_1, true, false, false, false);
      _box_0.isSnackBarFloating = false;
      if (!t1.get$isEmpty(t1)) {
        t1.get$first(t1)._scaffold$_widget.get$behavior();
        _box_0.isSnackBarFloating = false;
        t1 = t1.get$first(t1)._scaffold$_widget;
        _this._widget.toString;
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, t1, C._ScaffoldSlot_4, false, false, false, false, true);
      }
      _this._widget.toString;
      if (_this._currentBottomSheet != null || _this._dismissedBottomSheets.length !== 0) {
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_Widget);
        for (t2 = _this._dismissedBottomSheets, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
          t1.push(t2[_i]);
        t2 = _this._currentBottomSheet;
        if (t2 != null)
          t1.push(t2._scaffold$_widget);
        stack = T.Stack$(C.Alignment_0_1, t1, C.StackFit_0);
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, stack, C._ScaffoldSlot_3, true, false, false, true);
      }
      _this._widget.toString;
      _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new M._FloatingActionButtonTransition(_null, _this._floatingActionButtonMoveController, _this._floatingActionButtonAnimator, _this._geometryNotifier, _this._floatingActionButtonVisibilityController, _null), C._ScaffoldSlot_7, true, true, true, true);
      switch (themeData.platform) {
        case C.TargetPlatform_2:
        case C.TargetPlatform_4:
          _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, D.GestureDetector$(C.HitTestBehavior_1, _null, C.DragStartBehavior_1, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _this.get$_handleStatusBarTap(), _null, _null, _null, _null, _null), C._ScaffoldSlot_10, true, false, false, true);
          break;
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_3:
        case C.TargetPlatform_5:
          break;
      }
      if (_this._endDrawerOpened) {
        _this._buildDrawer$2(children, textDirection);
        _this._buildEndDrawer$2(children, textDirection);
      } else {
        _this._buildEndDrawer$2(children, textDirection);
        _this._buildDrawer$2(children, textDirection);
      }
      t1 = mediaQuery.padding;
      _this.get$_resizeToAvoidBottomInset();
      t2 = mediaQuery.viewInsets;
      minInsets = t1.copyWith$1$bottom(t2.bottom);
      if (minInsets.bottom <= 0)
        _this._widget.toString;
      _this._widget.toString;
      t1 = themeData.scaffoldBackgroundColor;
      return new M._ScaffoldScope(false, new E.PrimaryScrollController(_this._primaryScrollController, M.Material$(C.Duration_200000, true, K.AnimatedBuilder$(_this._floatingActionButtonMoveController, new M.ScaffoldState_build_closure(_box_0, _this, children, false, minInsets, textDirection), _null), C.Clip_0, t1, 0, _null, C.Color_4278190080, _null, _null, C.MaterialType_0), _null), _null);
    }
  };
  M.ScaffoldState_hideCurrentSnackBar_closure.prototype = {
    call$1: function(value) {
      var t1 = this.completer;
      if (t1.future._state === 0)
        t1.complete$1(0, this.reason);
    },
    $signature: 13
  };
  M.ScaffoldState_build_closure.prototype = {
    call$2: function(context, child) {
      var t2, t3, t4, _this = this,
        t1 = _this.$this;
      t1._widget.toString;
      t2 = t1._floatingActionButtonLocation;
      t3 = t1._floatingActionButtonMoveController._animation_controller$_value;
      t4 = t1._floatingActionButtonAnimator;
      return new T.CustomMultiChildLayout(new M._ScaffoldLayout(_this._extendBody, false, _this.minInsets, _this.textDirection, t1._geometryNotifier, t1._previousFloatingActionButtonLocation, t2, t3, t4, _this._box_0.isSnackBarFloating), _this.children, null);
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  M.ScaffoldFeatureController.prototype = {};
  M._StandardBottomSheet.prototype = {};
  M._ScaffoldScope.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return this.hasDrawer !== oldWidget.hasDrawer;
    }
  };
  M._ScaffoldState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var muted = !U.TickerMode_of(this._framework$_element),
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
          t1._collection$_current.set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  M.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var muted = !U.TickerMode_of(this._framework$_element),
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
          t1._collection$_current.set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  E.Scrollbar.prototype = {
    createState$0: function() {
      return new E._ScrollbarState(null, C._StateLifecycle_0);
    }
  };
  E._ScrollbarState.prototype = {
    initState$0: function() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      t1 = G.AnimationController$(_null, C.Duration_300000, 0, _null, 1, _null, _this);
      _this._scrollbar$_fadeoutAnimationController = t1;
      _this._scrollbar$_fadeoutOpacityAnimation = S.CurvedAnimation$(C.Cubic_ifx, t1, _null);
    },
    didChangeDependencies$0: function() {
      var theme, t1, _this = this;
      _this.super$__ScrollbarState_State_TickerProviderStateMixin$didChangeDependencies();
      theme = K.Theme_of(_this._framework$_element);
      switch (theme.platform) {
        case C.TargetPlatform_2:
        case C.TargetPlatform_4:
          t1 = _this._scrollbar$_fadeoutTimer;
          if (t1 != null)
            t1.cancel$0(0);
          _this._scrollbar$_fadeoutTimer = null;
          t1 = _this._scrollbar$_fadeoutAnimationController;
          t1.set$value(0, t1.lowerBound);
          _this._useCupertinoScrollbar = true;
          break;
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_3:
        case C.TargetPlatform_5:
          t1 = theme.highlightColor.value;
          _this._themeColor = P.Color$fromARGB(255, (16711680 & t1) >>> 16, (65280 & t1) >>> 8, (255 & t1) >>> 0);
          t1 = T.Directionality_of(_this._framework$_element);
          _this._scrollbar$_textDirection = t1;
          _this._materialPainter = E.ScrollbarPainter$(_this._themeColor, 0, _this._scrollbar$_fadeoutOpacityAnimation, 0, 18, null, F.MediaQuery_of(_this._framework$_element, false).padding, null, t1, 6);
          _this._useCupertinoScrollbar = false;
          $.WidgetsBinding__instance.SchedulerBinding__postFrameCallbacks.push(new E._ScrollbarState_didChangeDependencies_closure(_this));
          break;
      }
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._widget.toString;
      oldWidget.toString;
    },
    _scrollbar$_handleScrollNotification$1: function(notification) {
      var t1, _this = this,
        metrics = notification.metrics;
      if (metrics.maxScrollExtent <= metrics.minScrollExtent)
        return false;
      if (!_this._useCupertinoScrollbar)
        t1 = notification instanceof G.ScrollUpdateNotification || notification instanceof G.OverscrollNotification;
      else
        t1 = false;
      if (t1) {
        t1 = _this._scrollbar$_fadeoutAnimationController;
        if (t1._animation_controller$_status !== C.AnimationStatus_1)
          t1.forward$0(0);
        t1 = _this._materialPainter;
        t1._lastMetrics = metrics;
        t1._lastAxisDirection = metrics.axisDirection;
        t1.notifyListeners$0();
        _this._widget.toString;
        t1 = _this._scrollbar$_fadeoutTimer;
        if (t1 != null)
          t1.cancel$0(0);
        _this._scrollbar$_fadeoutTimer = P.Timer_Timer(C.Duration_600000, new E._ScrollbarState__handleScrollNotification_closure(_this));
      }
      return false;
    },
    dispose$0: function() {
      var t1, t2, t3, _this = this;
      _this._scrollbar$_fadeoutAnimationController.dispose$0();
      t1 = _this._scrollbar$_fadeoutTimer;
      if (t1 != null)
        t1.cancel$0(0);
      t1 = _this._materialPainter;
      if (t1 != null) {
        t2 = t1.fadeoutOpacityAnimation;
        t3 = t1.get$notifyListeners();
        t2.parent.removeListener$1(0, t3);
        t1.super$ChangeNotifier$dispose();
      }
      _this.super$__ScrollbarState_State_TickerProviderStateMixin$dispose();
    },
    build$1: function(context) {
      var t1, _this = this, _null = null;
      if (_this._useCupertinoScrollbar)
        return new E.CupertinoScrollbar(_this._widget.child, _null, false, _null);
      t1 = _this._materialPainter;
      return U.NotificationListener$(new T.RepaintBoundary(T.CustomPaint$(new T.RepaintBoundary(_this._widget.child, _null), t1, _null, _null), _null), _this.get$_scrollbar$_handleScrollNotification(), type$.ScrollNotification);
    }
  };
  E._ScrollbarState_didChangeDependencies_closure.prototype = {
    call$1: function(duration) {
      this.$this._widget.toString;
    },
    $signature: 6
  };
  E._ScrollbarState__handleScrollNotification_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._scrollbar$_fadeoutAnimationController.reverse$0(0);
      t1._scrollbar$_fadeoutTimer = null;
    },
    $signature: 0
  };
  E.__ScrollbarState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var muted = !U.TickerMode_of(this._framework$_element),
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
          t1._collection$_current.set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  Q.SliderThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashList([_this.trackHeight, _this.activeTrackColor, _this.inactiveTrackColor, _this.disabledActiveTrackColor, _this.disabledInactiveTrackColor, _this.activeTickMarkColor, _this.inactiveTickMarkColor, _this.disabledActiveTickMarkColor, _this.disabledInactiveTickMarkColor, _this.thumbColor, _this.overlappingShapeStrokeColor, _this.disabledThumbColor, _this.overlayColor, _this.valueIndicatorColor, _this.overlayShape, _this.tickMarkShape, _this.thumbShape, _this.trackShape, _this.valueIndicatorShape, _this.rangeTickMarkShape, _this.rangeThumbShape, _this.rangeTrackShape, _this.rangeValueIndicatorShape, _this.showValueIndicator, _this.valueIndicatorTextStyle, _this.minThumbSeparation, _this.thumbSelector]);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof Q.SliderThemeData)
        if (other.trackHeight == _this.trackHeight)
          if (J.$eq$(other.activeTrackColor, _this.activeTrackColor))
            if (J.$eq$(other.inactiveTrackColor, _this.inactiveTrackColor))
              if (J.$eq$(other.disabledActiveTrackColor, _this.disabledActiveTrackColor))
                if (J.$eq$(other.disabledInactiveTrackColor, _this.disabledInactiveTrackColor))
                  if (J.$eq$(other.activeTickMarkColor, _this.activeTickMarkColor))
                    if (J.$eq$(other.inactiveTickMarkColor, _this.inactiveTickMarkColor))
                      if (J.$eq$(other.disabledActiveTickMarkColor, _this.disabledActiveTickMarkColor))
                        if (J.$eq$(other.disabledInactiveTickMarkColor, _this.disabledInactiveTickMarkColor))
                          if (J.$eq$(other.thumbColor, _this.thumbColor))
                            if (J.$eq$(other.overlappingShapeStrokeColor, _this.overlappingShapeStrokeColor))
                              if (J.$eq$(other.disabledThumbColor, _this.disabledThumbColor))
                                if (J.$eq$(other.overlayColor, _this.overlayColor))
                                  if (J.$eq$(other.valueIndicatorColor, _this.valueIndicatorColor))
                                    t1 = J.$eq$(other.valueIndicatorTextStyle, _this.valueIndicatorTextStyle) && other.minThumbSeparation == _this.minThumbSeparation && true;
                                  else
                                    t1 = false;
                                else
                                  t1 = false;
                              else
                                t1 = false;
                            else
                              t1 = false;
                          else
                            t1 = false;
                        else
                          t1 = false;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  Q._SliderThemeData_Object_Diagnosticable.prototype = {};
  N.SnackBarClosedReason.prototype = {
    toString$0: function(_) {
      return this._snack_bar$_name;
    }
  };
  N.SnackBar.prototype = {};
  K.SnackBarThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.actionTextColor, _this.disabledActionTextColor, _this.contentTextStyle, _this.elevation, _this.shape, _this.behavior, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof K.SnackBarThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.actionTextColor, _this.actionTextColor) && J.$eq$(other.disabledActionTextColor, _this.disabledActionTextColor) && J.$eq$(other.contentTextStyle, _this.contentTextStyle) && other.elevation == _this.elevation && J.$eq$(other.shape, _this.shape) && true;
    }
  };
  K._SnackBarThemeData_Object_Diagnosticable.prototype = {};
  U.TabBarTheme.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.indicator, _this.indicatorSize, _this.labelColor, _this.labelPadding, _this.labelStyle, _this.unselectedLabelColor, _this.unselectedLabelStyle, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof U.TabBarTheme)
        if (J.$eq$(other.indicator, _this.indicator))
          t1 = J.$eq$(other.labelColor, _this.labelColor) && J.$eq$(other.labelPadding, _this.labelPadding) && J.$eq$(other.labelStyle, _this.labelStyle) && J.$eq$(other.unselectedLabelColor, _this.unselectedLabelColor) && J.$eq$(other.unselectedLabelStyle, _this.unselectedLabelStyle);
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  U._TabBarTheme_Object_Diagnosticable.prototype = {};
  U.TabController.prototype = {
    get$animation: function(_) {
      var t1 = this._animationController;
      return t1 == null ? null : t1;
    },
    _changeIndex$3$curve$duration: function(value, curve, duration) {
      var t2, _this = this,
        t1 = _this._tab_controller$_index;
      if (value === t1 || _this.length < 2)
        return;
      _this._previousIndex = t1;
      _this._tab_controller$_index = value;
      t1 = _this._indexIsChangingCount + 1;
      if (duration != null) {
        _this._indexIsChangingCount = t1;
        _this.notifyListeners$0();
        t1 = _this._animationController;
        t2 = _this._tab_controller$_index;
        t1._direction = C._AnimationDirection_0;
        t1._animateToInternal$3$curve$duration(t2, curve, duration).whenCompleteOrCancel$1(new U.TabController__changeIndex_closure(_this));
      } else {
        _this._indexIsChangingCount = t1;
        _this._animationController.set$value(0, value);
        --_this._indexIsChangingCount;
        _this.notifyListeners$0();
      }
    },
    _changeIndex$1: function(value) {
      return this._changeIndex$3$curve$duration(value, null, null);
    },
    set$offset: function(_, value) {
      var t1 = this._animationController,
        t2 = t1._animation_controller$_value,
        t3 = this._tab_controller$_index;
      if (value === t2 - t3)
        return;
      t1.set$value(0, value + t3);
    },
    get$length: function(receiver) {
      return this.length;
    }
  };
  U.TabController__changeIndex_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      --t1._indexIsChangingCount;
      t1.notifyListeners$0();
    },
    $signature: 0
  };
  U._TabControllerScope.prototype = {
    updateShouldNotify$1: function(old) {
      return this.enabled !== old.enabled || this.controller != old.controller;
    }
  };
  U.DefaultTabController.prototype = {
    createState$0: function() {
      return new U._DefaultTabControllerState(null, C._StateLifecycle_0);
    },
    get$length: function(receiver) {
      return this.length;
    }
  };
  U._DefaultTabControllerState.prototype = {
    initState$0: function() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this._widget.length;
      _this._tab_controller$_controller = new U.TabController(G.AnimationController$unbounded(null, 0, _this), t1, 0, 0, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
    },
    dispose$0: function() {
      var t1 = this._tab_controller$_controller,
        t2 = t1._animationController;
      if (t2 != null)
        t2.dispose$0();
      t1._animationController = null;
      t1.super$ChangeNotifier$dispose();
      this.super$__DefaultTabControllerState_State_SingleTickerProviderStateMixin$dispose();
    },
    build$1: function(context) {
      return new U._TabControllerScope(this._tab_controller$_controller, U.TickerMode_of(context), this._widget.child, null);
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, t2, previousIndex, previousIndex0, newIndex, t3, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.length;
      t2 = _this._widget.length;
      if (t1 !== t2) {
        t1 = _this._tab_controller$_controller;
        previousIndex = t1._previousIndex;
        previousIndex0 = t1._tab_controller$_index;
        if (previousIndex0 >= t2) {
          newIndex = Math.max(0, t2 - 1);
          previousIndex = previousIndex0;
        } else
          newIndex = null;
        t3 = newIndex == null ? previousIndex0 : newIndex;
        t1 = t1._animationController;
        _this._tab_controller$_controller = new U.TabController(t1, t2, t3, previousIndex, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      }
    }
  };
  U.__DefaultTabControllerState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var t1 = this.SingleTickerProviderStateMixin__ticker;
      if (t1 != null)
        t1.set$muted(0, !U.TickerMode_of(this._framework$_element));
      this.super$State$didChangeDependencies();
    }
  };
  T.UnderlineTabIndicator.prototype = {
    lerpFrom$2: function(a, t) {
      if (a instanceof T.UnderlineTabIndicator)
        return new T.UnderlineTabIndicator(Y.BorderSide_lerp(a.borderSide, this.borderSide, t), V.EdgeInsetsGeometry_lerp(a.insets, this.insets, t));
      return this.super$Decoration$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      if (b instanceof T.UnderlineTabIndicator)
        return new T.UnderlineTabIndicator(Y.BorderSide_lerp(this.borderSide, b.borderSide, t), V.EdgeInsetsGeometry_lerp(this.insets, b.insets, t));
      return this.super$Decoration$lerpTo(b, t);
    },
    createBoxPainter$1: function(onChanged) {
      return new T._UnderlinePainter(this, onChanged);
    }
  };
  T._UnderlinePainter.prototype = {
    paint$3: function(canvas, offset, configuration) {
      var t5, indicator, paint,
        t1 = configuration.size,
        t2 = offset._dx,
        t3 = offset._dy,
        t4 = t1._dx;
      t1 = t1._dy;
      t5 = this.decoration;
      indicator = t5.insets.resolve$1(configuration.textDirection).deflateRect$1(new P.Rect(t2, t3, t2 + t4, t3 + t1));
      t1 = indicator.left;
      t5 = t5.borderSide;
      t3 = t5.width;
      t4 = indicator.bottom - t3;
      indicator = new P.Rect(t1, t4, t1 + (indicator.right - t1), t4 + t3).inflate$1(-(t3 / 2));
      paint = t5.toPaint$0();
      paint.set$strokeCap(C.StrokeCap_2);
      t5 = indicator.bottom;
      canvas.drawLine$3(new P.Offset(indicator.left, t5), new P.Offset(indicator.right, t5), paint);
    }
  };
  E.Tab.prototype = {
    _buildLabelText$0: function() {
      var t1 = L.Text$(this.text, C.TextOverflow_1, false, null, null);
      return t1;
    },
    build$1: function(context) {
      var _null = null,
        label = this._buildLabelText$0();
      return new T.SizedBox(_null, 46, new T.Center(C.Alignment_0_0, 1, _null, label, _null), _null);
    }
  };
  E._TabStyle.prototype = {
    build$1: function(context) {
      var defaultUnselectedStyle, textStyle, selectedColor, unselectedColor, color, _this = this, _null = null,
        themeData = K.Theme_of(context),
        tabBarTheme = K.Theme_of(context).tabBarTheme,
        animation = type$.Animation_double._as(_this.listenable),
        t1 = _this.labelStyle,
        t2 = tabBarTheme.labelStyle,
        defaultStyle = (t2 == null ? themeData.primaryTextTheme.bodyText1 : t2).copyWith$1$inherit(true);
      t2 = tabBarTheme.unselectedLabelStyle;
      t1 = t2 == null ? t1 : t2;
      defaultUnselectedStyle = (t1 == null ? themeData.primaryTextTheme.bodyText1 : t1).copyWith$1$inherit(true);
      t1 = _this.selected;
      textStyle = t1 ? A.TextStyle_lerp(defaultStyle, defaultUnselectedStyle, animation.get$value(animation)) : A.TextStyle_lerp(defaultUnselectedStyle, defaultStyle, animation.get$value(animation));
      selectedColor = tabBarTheme.labelColor;
      if (selectedColor == null)
        selectedColor = themeData.primaryTextTheme.bodyText1.color;
      unselectedColor = tabBarTheme.unselectedLabelColor;
      if (unselectedColor == null)
        unselectedColor = P.Color$fromARGB(178, (16711680 & selectedColor.get$value(selectedColor)) >>> 16, (65280 & selectedColor.get$value(selectedColor)) >>> 8, (255 & selectedColor.get$value(selectedColor)) >>> 0);
      color = t1 ? P.Color_lerp(selectedColor, unselectedColor, animation.get$value(animation)) : P.Color_lerp(unselectedColor, selectedColor, animation.get$value(animation));
      t1 = textStyle.copyWith$1$color(color);
      return L.DefaultTextStyle$(Y.IconTheme_merge(_this.child, new T.IconThemeData(color, _null, 24)), _null, C.TextOverflow_0, true, t1, _null, _null, C.TextWidthBasis_0);
    }
  };
  E._TabLabelBarRenderer.prototype = {
    performLayout$0: function() {
      var child, xOffsets, t1, childParentData, t2, _this = this;
      _this.super$RenderFlex$performLayout();
      child = _this.ContainerRenderObjectMixin__firstChild;
      xOffsets = H.setRuntimeTypeInfo([], type$.JSArray_double);
      for (t1 = type$.FlexParentData; child != null;) {
        childParentData = t1._as(child.parentData);
        xOffsets.push(childParentData.offset._dx);
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      switch (_this._flex$_textDirection) {
        case C.TextDirection_0:
          C.JSArray_methods.insert$2(xOffsets, 0, _this._size._dx);
          break;
        case C.TextDirection_1:
          xOffsets.push(_this._size._dx);
          break;
      }
      t1 = _this._flex$_textDirection;
      t2 = _this._size._dx;
      _this.onPerformLayout.call$3(xOffsets, t1, t2);
    }
  };
  E._TabLabelBar.prototype = {
    createRenderObject$1: function(context) {
      var _this = this, _null = null,
        t1 = new E._TabLabelBarRenderer(_this.onPerformLayout, _this.direction, _this.mainAxisAlignment, _this.mainAxisSize, _this.crossAxisAlignment, _this.getEffectiveTextDirection$1(context), _this.verticalDirection, _null, P.List_List$filled(4, U.TextPainter$(_null, _null, _null, _null, _null, C.TextAlign_4, C.TextDirection_1, _null, 1, C.TextWidthBasis_0), type$.TextPainter), true, 0, _null, _null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.addAll$1(0, _null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      this.super$Flex$updateRenderObject(context, renderObject);
      renderObject.onPerformLayout = this.onPerformLayout;
    }
  };
  E._IndicatorPainter.prototype = {
    markNeedsPaint$0: function() {
      this._tabs$_needsPaint = true;
    },
    indicatorRect$2: function(tabBarSize, tabIndex) {
      var t1, tabLeft, tabRight;
      switch (this._currentTextDirection) {
        case C.TextDirection_0:
          t1 = this._currentTabOffsets;
          tabLeft = t1[tabIndex + 1];
          tabRight = t1[tabIndex];
          break;
        case C.TextDirection_1:
          t1 = this._currentTabOffsets;
          tabLeft = t1[tabIndex];
          tabRight = t1[tabIndex + 1];
          break;
        default:
          tabLeft = null;
          tabRight = null;
      }
      return new P.Rect(tabLeft, 0, tabLeft + (tabRight - tabLeft), 0 + tabBarSize._dy);
    },
    paint$2: function(canvas, size) {
      var t1, t2, t3, targetRect, previous, middle, next, index, value, t4, t5, _this = this, _null = null;
      _this._tabs$_needsPaint = false;
      if (_this._tabs$_painter == null)
        _this._tabs$_painter = _this.indicator.createBoxPainter$1(_this.get$markNeedsPaint());
      t1 = _this.controller;
      t2 = t1._indexIsChangingCount;
      t3 = t1._tab_controller$_index;
      if (t2 !== 0) {
        targetRect = _this.indicatorRect$2(size, t3);
        t2 = _this._currentRect;
        if (t2 == null)
          t2 = targetRect;
        t1 = _this._currentRect = P.Rect_lerp(targetRect, t2, E._indexChangeProgress(t1));
      } else {
        previous = t3 > 0 ? _this.indicatorRect$2(size, t3 - 1) : _null;
        middle = _this.indicatorRect$2(size, t3);
        next = t3 < _this._currentTabOffsets.length - 2 ? _this.indicatorRect$2(size, t3 + 1) : _null;
        index = t1._tab_controller$_index;
        value = t1.get$animation(t1)._animation_controller$_value;
        if (value === index - 1) {
          t1 = previous == null ? middle : previous;
          _this._currentRect = t1;
        } else if (value === index + 1) {
          t1 = next == null ? middle : next;
          _this._currentRect = t1;
        } else if (value === index) {
          _this._currentRect = middle;
          t1 = middle;
        } else if (value < index) {
          t1 = previous == null ? middle : P.Rect_lerp(middle, previous, index - value);
          _this._currentRect = t1;
        } else {
          t1 = next == null ? middle : P.Rect_lerp(middle, next, value - index);
          _this._currentRect = t1;
        }
      }
      t2 = t1.right;
      t3 = t1.left;
      t4 = t1.bottom;
      t1 = t1.top;
      t5 = _this._currentTextDirection;
      _this._tabs$_painter.paint$3(canvas, new P.Offset(t3, t1), new M.ImageConfiguration(_null, _null, _null, t5, new P.Size(t2 - t3, t4 - t1), _null));
    },
    shouldRepaint$1: function(old) {
      var _this = this;
      return _this._tabs$_needsPaint || _this.controller != old.controller || !J.$eq$(_this.indicator, old.indicator) || _this.tabKeys.length !== old.tabKeys.length || !E._IndicatorPainter__tabOffsetsEqual(_this._currentTabOffsets, old._currentTabOffsets) || _this._currentTextDirection != old._currentTextDirection;
    }
  };
  E._ChangeAnimation.prototype = {
    get$parent: function(_) {
      var t1 = this.controller;
      return t1.get$animation(t1);
    },
    removeStatusListener$1: function(listener) {
      var t1 = this.controller;
      if (t1.get$animation(t1) != null)
        this.super$AnimationWithParentMixin$removeStatusListener(listener);
    },
    removeListener$1: function(_, listener) {
      var t1 = this.controller;
      if (t1.get$animation(t1) != null)
        this.super$AnimationWithParentMixin$removeListener(0, listener);
    },
    get$value: function(_) {
      return E._indexChangeProgress(this.controller);
    }
  };
  E._DragAnimation.prototype = {
    get$parent: function(_) {
      var t1 = this.controller;
      return t1.get$animation(t1);
    },
    removeStatusListener$1: function(listener) {
      var t1 = this.controller;
      if (t1.get$animation(t1) != null)
        this.super$AnimationWithParentMixin$removeStatusListener(listener);
    },
    removeListener$1: function(_, listener) {
      var t1 = this.controller;
      if (t1.get$animation(t1) != null)
        this.super$AnimationWithParentMixin$removeListener(0, listener);
    },
    get$value: function(_) {
      var t2,
        t1 = this.controller;
      t1 = t1.get$animation(t1)._animation_controller$_value;
      t2 = this.index;
      t2.toString;
      return C.JSNumber_methods.clamp$2(Math.abs(t1 - t2), 0, 1);
    }
  };
  E._TabBarScrollPosition.prototype = {
    applyContentDimensions$2: function(minScrollExtent, maxScrollExtent) {
      var t1, t2, result, _this = this;
      if (_this._initialViewportDimensionWasZero !== true) {
        t1 = _this._viewportDimension;
        _this._initialViewportDimensionWasZero = t1 !== 0;
        t2 = _this.tabBar;
        _this._pixels = t2._tabScrollOffset$4(t2._currentIndex, t1, minScrollExtent, maxScrollExtent);
        result = false;
      } else
        result = true;
      _this.super$ScrollPosition$applyContentDimensions(minScrollExtent, maxScrollExtent);
      return result;
    }
  };
  E._TabBarScrollController.prototype = {
    createScrollPosition$3: function(physics, context, oldPosition) {
      var _null = null,
        t1 = type$.JSArray_of_void_Function,
        t2 = type$.ObserverList_of_void_Function;
      t2 = new E._TabBarScrollPosition(this.tabBar, C.ScrollDirection_0, physics, context, true, _null, new B.ValueNotifier(false, new R.ObserverList(H.setRuntimeTypeInfo([], t1), t2)), new R.ObserverList(H.setRuntimeTypeInfo([], t1), t2));
      t2.ScrollPosition$5$context$debugLabel$keepScrollOffset$oldPosition$physics(context, _null, true, oldPosition, physics);
      t2.ScrollPositionWithSingleContext$6$context$debugLabel$initialPixels$keepScrollOffset$oldPosition$physics(context, _null, _null, true, oldPosition, physics);
      return t2;
    }
  };
  E.TabBar.prototype = {
    get$preferredSize: function() {
      var t1, t2, _i;
      for (t1 = this.tabs, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i] instanceof E.Tab;
      return new P.Size(1 / 0, 48);
    },
    createState$0: function() {
      return new E._TabBarState(C._StateLifecycle_0);
    }
  };
  E._TabBarState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      var t1 = this._widget.tabs;
      this._tabKeys = new H.MappedListIterable(t1, new E._TabBarState_initState_closure(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,GlobalKey<State<StatefulWidget>>>")).toList$0(0);
    },
    get$_indicator: function() {
      var t1, color, t2, _this = this;
      _this._widget.toString;
      t1 = K.Theme_of(_this._framework$_element).tabBarTheme.indicator;
      if (t1 != null)
        return t1;
      _this._widget.toString;
      t1 = K.Theme_of(_this._framework$_element);
      color = t1.indicatorColor;
      t1 = color.value;
      t2 = _this._framework$_element.findAncestorRenderObjectOfType$1$0(type$._RenderInkFeatures).color;
      if (t1 === (t2 == null ? null : t2.get$value(t2)))
        color = C.Color_4294967295;
      _this._widget.toString;
      return new T.UnderlineTabIndicator(new Y.BorderSide(color, 2, C.BorderStyle_1), C.EdgeInsets_0_0_0_0);
    },
    get$_controllerIsValid: function() {
      var t1 = this._tabs$_controller;
      return (t1 == null ? null : t1.get$animation(t1)) != null;
    },
    _updateTabController$0: function() {
      var newController, t1, _this = this;
      _this._widget.toString;
      newController = U.DefaultTabController_of(_this._framework$_element);
      if (newController == _this._tabs$_controller)
        return;
      if (_this.get$_controllerIsValid()) {
        t1 = _this._tabs$_controller;
        t1.get$animation(t1).removeListener$1(0, _this.get$_handleTabControllerAnimationTick());
        _this._tabs$_controller.ChangeNotifier__listeners.remove$1(0, _this.get$_handleTabControllerTick());
      }
      _this._tabs$_controller = newController;
      if (newController != null) {
        t1 = newController.get$animation(newController);
        t1.didRegisterListener$0();
        t1 = t1.AnimationLocalListenersMixin__listeners;
        t1._isDirty = true;
        t1._list.push(_this.get$_handleTabControllerAnimationTick());
        t1 = _this._tabs$_controller.ChangeNotifier__listeners;
        t1._isDirty = true;
        t1._list.push(_this.get$_handleTabControllerTick());
        _this._currentIndex = _this._tabs$_controller._tab_controller$_index;
      }
    },
    _initIndicatorPainter$0: function() {
      var t1, t2, t3, t4, t5, _this = this;
      if (!_this.get$_controllerIsValid())
        t1 = null;
      else {
        t1 = _this._tabs$_controller;
        t2 = _this.get$_indicator();
        _this._widget.toString;
        t3 = K.Theme_of(_this._framework$_element);
        t3 = t3.tabBarTheme.indicatorSize;
        t4 = _this._tabKeys;
        t5 = _this._indicatorPainter;
        t1 = new E._IndicatorPainter(t1, t2, t3, t4, t1.get$animation(t1));
        if (t5 != null) {
          t2 = t5._currentTabOffsets;
          t5 = t5._currentTextDirection;
          t1._currentTabOffsets = t2;
          t1._currentTextDirection = t5;
        }
      }
      _this._indicatorPainter = t1;
    },
    didChangeDependencies$0: function() {
      this.super$State$didChangeDependencies();
      this._updateTabController$0();
      this._initIndicatorPainter$0();
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, t2, t3, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      t1.toString;
      t1 = t1.tabs.length;
      t2 = oldWidget.tabs.length;
      if (t1 > t2) {
        t3 = _this._tabKeys;
        (t3 && C.JSArray_methods).addAll$1(t3, P.List_List$generate(t1 - t2, new E._TabBarState_didUpdateWidget_closure(), true, type$.GlobalKey_State_StatefulWidget));
      } else if (t1 < t2) {
        t3 = _this._tabKeys;
        (t3 && C.JSArray_methods).removeRange$2(t3, t1, t2);
      }
    },
    dispose$0: function() {
      var _this = this,
        t1 = _this._indicatorPainter._tabs$_painter;
      if (t1 != null)
        t1.dispose$0();
      if (_this.get$_controllerIsValid()) {
        t1 = _this._tabs$_controller;
        t1.get$animation(t1).removeListener$1(0, _this.get$_handleTabControllerAnimationTick());
        _this._tabs$_controller.ChangeNotifier__listeners.remove$1(0, _this.get$_handleTabControllerTick());
      }
      _this._tabs$_controller = null;
      _this.super$State$dispose();
    },
    _tabScrollOffset$4: function(index, viewportWidth, minExtent, maxExtent) {
      var t1, tabCenter, _this = this;
      _this._widget.toString;
      t1 = _this._indicatorPainter._currentTabOffsets;
      tabCenter = (t1[index] + t1[index + 1]) / 2;
      switch (T.Directionality_of(_this._framework$_element)) {
        case C.TextDirection_0:
          tabCenter = _this._tabStripWidth - tabCenter;
          break;
        case C.TextDirection_1:
          break;
      }
      return C.JSNumber_methods.clamp$2(tabCenter - viewportWidth / 2, minExtent, maxExtent);
    },
    _tabCenteredScrollOffset$1: function(index) {
      var position = C.JSArray_methods.get$single(this._scrollController._positions);
      return this._tabScrollOffset$4(index, position._viewportDimension, position._minScrollExtent, position._maxScrollExtent);
    },
    _handleTabControllerAnimationTick$0: function() {
      var t2, leadingPosition, middlePosition, trailingPosition, index, value, offset, _this = this,
        t1 = _this._tabs$_controller;
      if (t1._indexIsChangingCount === 0) {
        _this._widget.toString;
        t2 = true;
      } else
        t2 = false;
      if (t2) {
        t1 = _this._currentIndex = t1._tab_controller$_index;
        leadingPosition = t1 > 0 ? _this._tabCenteredScrollOffset$1(t1 - 1) : null;
        middlePosition = _this._tabCenteredScrollOffset$1(_this._currentIndex);
        t1 = _this._currentIndex;
        trailingPosition = t1 < _this._indicatorPainter._currentTabOffsets.length - 2 ? _this._tabCenteredScrollOffset$1(t1 + 1) : null;
        t1 = _this._tabs$_controller;
        index = t1._tab_controller$_index;
        value = t1.get$animation(t1)._animation_controller$_value;
        if (value === index - 1)
          offset = leadingPosition == null ? middlePosition : leadingPosition;
        else if (value === index + 1)
          offset = trailingPosition == null ? middlePosition : trailingPosition;
        else if (value === index)
          offset = middlePosition;
        else if (value < index)
          offset = leadingPosition == null ? middlePosition : P.lerpDouble(middlePosition, leadingPosition, index - value);
        else
          offset = trailingPosition == null ? middlePosition : P.lerpDouble(middlePosition, trailingPosition, value - index);
        _this._scrollController.jumpTo$1(offset);
      }
    },
    _handleTabControllerTick$0: function() {
      var offset, _this = this,
        t1 = _this._tabs$_controller._tab_controller$_index;
      if (t1 !== _this._currentIndex) {
        _this._currentIndex = t1;
        _this._widget.toString;
        offset = _this._tabCenteredScrollOffset$1(t1);
        _this._scrollController.animateTo$3$curve$duration(offset, C.Cubic_JUR, C.Duration_300000);
      }
      _this.setState$1(new E._TabBarState__handleTabControllerTick_closure());
    },
    _saveTabOffsets$3: function(tabOffsets, textDirection, width) {
      var t1;
      this._tabStripWidth = width;
      t1 = this._indicatorPainter;
      if (t1 != null) {
        t1._currentTabOffsets = tabOffsets;
        t1._currentTextDirection = textDirection;
      }
    },
    _buildStyledTab$3: function(child, selected, animation) {
      var _null = null;
      this._widget.toString;
      return E._TabStyle$(animation, child, _null, _null, selected, _null, _null);
    },
    build$1: function(context) {
      var tabBarTheme, t2, t3, wrappedTabs, t4, t5, t6, t7, i, t8, t9, previousIndex, animation, tabIndex, tabCount, index, index0, tabBar, _this = this, _null = null,
        t1 = L.Localizations_of(context, C.Type_MaterialLocalizations_flR, type$.MaterialLocalizations);
      if (_this._tabs$_controller.length === 0) {
        _this._widget.toString;
        return M.Container$(_null, _null, _null, _null, _null, 48, _null, _null, _null);
      }
      tabBarTheme = K.Theme_of(context).tabBarTheme;
      t2 = new Array(_this._widget.tabs.length);
      t2.fixed$length = Array;
      t3 = type$.JSArray_Widget;
      wrappedTabs = H.setRuntimeTypeInfo(t2, t3);
      for (t2 = _this._widget.tabs, t4 = t2.length, t5 = _this._tabKeys, t6 = tabBarTheme.labelPadding, t7 = t6 == null, i = 0; i < t4; ++i) {
        t8 = t7 ? C.EdgeInsets_16_0_16_0 : t6;
        t9 = t5[i];
        wrappedTabs[i] = new T.Center(C.Alignment_0_0, _null, 1, new T.Padding(t8, new T.KeyedSubtree(t2[i], t9), _null), _null);
      }
      t2 = _this._tabs$_controller;
      if (t2 != null) {
        previousIndex = t2._previousIndex;
        t4 = t2._indexIsChangingCount;
        t5 = _this._currentIndex;
        if (t4 !== 0) {
          animation = new E._ChangeAnimation(t2);
          wrappedTabs[t5] = _this._buildStyledTab$3(wrappedTabs[t5], true, animation);
          wrappedTabs[previousIndex] = _this._buildStyledTab$3(wrappedTabs[previousIndex], false, animation);
        } else {
          wrappedTabs[t5] = _this._buildStyledTab$3(wrappedTabs[t5], true, new E._DragAnimation(t2, t5));
          t2 = _this._currentIndex;
          if (t2 > 0) {
            tabIndex = t2 - 1;
            t2 = _this._tabs$_controller;
            t4 = H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_AnimationStatus);
            wrappedTabs[tabIndex] = _this._buildStyledTab$3(wrappedTabs[tabIndex], false, new S.ReverseAnimation(new E._DragAnimation(t2, tabIndex), new R.ObserverList(t4, type$.ObserverList_of_void_Function_AnimationStatus), 0));
          }
          t2 = _this._currentIndex;
          if (t2 < _this._widget.tabs.length - 1) {
            tabIndex = t2 + 1;
            t2 = _this._tabs$_controller;
            t4 = H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_AnimationStatus);
            wrappedTabs[tabIndex] = _this._buildStyledTab$3(wrappedTabs[tabIndex], false, new S.ReverseAnimation(new E._DragAnimation(t2, tabIndex), new R.ObserverList(t4, type$.ObserverList_of_void_Function_AnimationStatus), 0));
          }
        }
      }
      t2 = _this._widget;
      tabCount = t2.tabs.length;
      for (index = 0; index < tabCount; index = index0) {
        t2 = wrappedTabs[index];
        t4 = _this._currentIndex;
        index0 = index + 1;
        t1.toString;
        wrappedTabs[index] = R.InkWell$(false, true, new T.Padding(new V.EdgeInsets(0, 0, 0, 2), new T.Stack(C.AlignmentDirectional_m1_m1, C.StackFit_0, H.setRuntimeTypeInfo([t2, T.Semantics$(_null, _null, false, _null, false, _null, _null, _null, "Tab " + index0 + " of " + tabCount, _null, _null, _null, index === t4, _null)], t3), _null), _null), _null, true, _null, _null, _null, _null, _null, _null, _null, _null, new E._TabBarState_build_closure(_this, index), _null);
        t2 = _this._widget;
        t2.toString;
      }
      t1 = _this._indicatorPainter;
      tabBar = T.CustomPaint$(E._TabStyle$(C.C__AlwaysDismissedAnimation, new E._TabLabelBar(_this.get$_saveTabOffsets(), C.Axis_0, C.MainAxisAlignment_0, C.MainAxisSize_1, C.CrossAxisAlignment_2, _null, C.VerticalDirection_1, _null, wrappedTabs, _null), _null, _null, false, _null, _null), _null, _null, t1);
      t1 = _this._scrollController;
      if (t1 == null)
        t1 = _this._scrollController = new E._TabBarScrollController(_this, 0, H.setRuntimeTypeInfo([], type$.JSArray_ScrollPosition), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      _this._widget.toString;
      tabBar = new E.SingleChildScrollView(C.Axis_0, t1, false, tabBar, C.DragStartBehavior_1, _null);
      return tabBar;
    }
  };
  E._TabBarState_initState_closure.prototype = {
    call$1: function(tab) {
      return new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget);
    }
  };
  E._TabBarState_didUpdateWidget_closure.prototype = {
    call$1: function(n) {
      return new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget);
    }
  };
  E._TabBarState__handleTabControllerTick_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  E._TabBarState_build_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._tabs$_controller._changeIndex$3$curve$duration(this.index, C.Cubic_JUR, C.Duration_300000);
      t1._widget.toString;
    },
    $signature: 0
  };
  E.TabBarView.prototype = {
    createState$0: function() {
      return new E._TabBarViewState(C._StateLifecycle_0);
    }
  };
  E._TabBarViewState.prototype = {
    get$_controllerIsValid: function() {
      var t1 = this._tabs$_controller;
      return (t1 == null ? null : t1.get$animation(t1)) != null;
    },
    _updateTabController$0: function() {
      var newController, t1, _this = this;
      _this._widget.toString;
      newController = U.DefaultTabController_of(_this._framework$_element);
      if (newController == _this._tabs$_controller)
        return;
      if (_this.get$_controllerIsValid()) {
        t1 = _this._tabs$_controller;
        t1.get$animation(t1).removeListener$1(0, _this.get$_handleTabControllerAnimationTick());
      }
      _this._tabs$_controller = newController;
      if (newController != null) {
        t1 = newController.get$animation(newController);
        t1.didRegisterListener$0();
        t1 = t1.AnimationLocalListenersMixin__listeners;
        t1._isDirty = true;
        t1._list.push(_this.get$_handleTabControllerAnimationTick());
      }
    },
    initState$0: function() {
      this.super$State$initState();
      this._updateChildren$0();
    },
    didChangeDependencies$0: function() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      _this._updateTabController$0();
      t1 = _this._tabs$_controller;
      t1 = t1 == null ? null : t1._tab_controller$_index;
      _this._currentIndex = t1;
      if (t1 == null)
        t1 = 0;
      _this._pageController = new D.PageController(t1, 0, H.setRuntimeTypeInfo([], type$.JSArray_ScrollPosition), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      t1.toString;
      if (t1.children !== oldWidget.children && _this._warpUnderwayCount === 0)
        _this._updateChildren$0();
    },
    dispose$0: function() {
      var t1, _this = this;
      if (_this.get$_controllerIsValid()) {
        t1 = _this._tabs$_controller;
        t1.get$animation(t1).removeListener$1(0, _this.get$_handleTabControllerAnimationTick());
      }
      _this._tabs$_controller = null;
      _this.super$State$dispose();
    },
    _updateChildren$0: function() {
      var t1 = this._widget.children;
      this._tabs$_children = t1;
      this._childrenWithKey = T.KeyedSubtree_ensureUniqueKeysForList(t1);
    },
    _handleTabControllerAnimationTick$0: function() {
      var t1, _this = this;
      if (_this._warpUnderwayCount > 0 || _this._tabs$_controller._indexIsChangingCount === 0)
        return;
      t1 = _this._tabs$_controller._tab_controller$_index;
      if (t1 !== _this._currentIndex) {
        _this._currentIndex = t1;
        _this._warpToCurrentIndex$0();
      }
    },
    _warpToCurrentIndex$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, position, t2, t3, previousIndex, initialPage, originalChildren;
      var $async$_warpToCurrentIndex$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._framework$_element == null) {
                t1 = new P._Future($.Zone__current, type$._Future_void);
                t1._asyncComplete$1(null);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = type$._PagePosition;
              position = t1._as(C.JSArray_methods.get$single($async$self._pageController._positions));
              t2 = position.get$page(position);
              t3 = $async$self._currentIndex;
              t3.toString;
              if (t2 === t3) {
                t1 = new P._Future($.Zone__current, type$._Future_void);
                t1._asyncComplete$1(null);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              previousIndex = $async$self._tabs$_controller._previousIndex;
              if (Math.abs(t3 - previousIndex) === 1) {
                $async$returnValue = $async$self._pageController.animateToPage$3$curve$duration(t3, C.Cubic_JUR, C.Duration_300000);
                // goto return
                $async$goto = 1;
                break;
              }
              initialPage = t3 > previousIndex ? t3 - 1 : t3 + 1;
              originalChildren = $async$self._childrenWithKey;
              $async$self.setState$1(new E._TabBarViewState__warpToCurrentIndex_closure($async$self, initialPage, previousIndex));
              position = t1._as(C.JSArray_methods.get$single($async$self._pageController._positions));
              position.jumpTo$1(position.getPixelsFromPage$1(initialPage));
              $async$goto = 3;
              return P._asyncAwait($async$self._pageController.animateToPage$3$curve$duration($async$self._currentIndex, C.Cubic_JUR, C.Duration_300000), $async$_warpToCurrentIndex$0);
            case 3:
              // returning from await.
              if ($async$self._framework$_element == null) {
                t1 = new P._Future($.Zone__current, type$._Future_void);
                t1._asyncComplete$1(null);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.setState$1(new E._TabBarViewState__warpToCurrentIndex_closure0($async$self, originalChildren));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_warpToCurrentIndex$0, $async$completer);
    },
    _handleScrollNotification$1: function(notification) {
      var position, t2, t3, _this = this,
        t1 = _this._warpUnderwayCount;
      if (t1 > 0)
        return false;
      if (notification.ViewportNotificationMixin__depth !== 0)
        return false;
      _this._warpUnderwayCount = t1 + 1;
      if (notification instanceof G.ScrollUpdateNotification && _this._tabs$_controller._indexIsChangingCount === 0) {
        t1 = type$._PagePosition;
        position = t1._as(C.JSArray_methods.get$single(_this._pageController._positions));
        t2 = position.get$page(position);
        t3 = _this._tabs$_controller;
        if (Math.abs(t2 - t3._tab_controller$_index) > 1) {
          position = t1._as(C.JSArray_methods.get$single(_this._pageController._positions));
          t3._changeIndex$1(J.floor$0$n(position.get$page(position)));
          t2 = _this._tabs$_controller;
          _this._currentIndex = t2._tab_controller$_index;
        } else
          t2 = t3;
        position = t1._as(C.JSArray_methods.get$single(_this._pageController._positions));
        t2.set$offset(0, C.JSNumber_methods.clamp$2(position.get$page(position) - _this._tabs$_controller._tab_controller$_index, -1, 1));
      } else if (notification instanceof G.ScrollEndNotification) {
        t1 = _this._tabs$_controller;
        position = type$._PagePosition._as(C.JSArray_methods.get$single(_this._pageController._positions));
        t1._changeIndex$1(J.round$0$n(position.get$page(position)));
        _this._currentIndex = _this._tabs$_controller._tab_controller$_index;
      }
      --_this._warpUnderwayCount;
      return false;
    },
    build$1: function(context) {
      var t1, t2, t3, _this = this;
      _this._widget.toString;
      t1 = _this._pageController;
      t2 = $.$get$_kTabBarViewPhysics();
      t3 = _this._childrenWithKey;
      if (t1 == null)
        t1 = $.$get$_defaultPageController();
      return U.NotificationListener$(new D.PageView(t1, t2, G.SliverChildListDelegate$(t3, true, true, true), C.DragStartBehavior_1, null), _this.get$_handleScrollNotification(), type$.ScrollNotification);
    }
  };
  E._TabBarViewState__warpToCurrentIndex_closure.prototype = {
    call$0: function() {
      var t2, temp, t3,
        t1 = this.$this;
      ++t1._warpUnderwayCount;
      t1 = t1._childrenWithKey = P.List_List$from(t1._childrenWithKey, false, type$.Widget);
      t2 = this.initialPage;
      temp = t1[t2];
      t3 = this.previousIndex;
      t1[t2] = t1[t3];
      t1[t3] = temp;
    },
    $signature: 0
  };
  E._TabBarViewState__warpToCurrentIndex_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this;
      --t1._warpUnderwayCount;
      if (t1._widget.children !== t1._tabs$_children)
        t1._updateChildren$0();
      else
        t1._childrenWithKey = this.originalChildren;
    },
    $signature: 0
  };
  E.__ChangeAnimation_Animation_AnimationWithParentMixin.prototype = {};
  E.__DragAnimation_Animation_AnimationWithParentMixin.prototype = {};
  R.TextTheme.prototype = {
    merge$1: function(other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, _this = this, _null = null;
      if (other == null)
        return _this;
      t1 = _this.headline1;
      t2 = t1 == null ? _null : t1.merge$1(other.headline1);
      if (t2 == null)
        t2 = other.headline1;
      t3 = _this.headline2;
      t4 = t3 == null ? _null : t3.merge$1(other.headline2);
      if (t4 == null)
        t4 = other.headline2;
      t5 = _this.headline3;
      t6 = t5 == null ? _null : t5.merge$1(other.headline3);
      if (t6 == null)
        t6 = other.headline3;
      t7 = _this.headline4;
      t8 = t7 == null ? _null : t7.merge$1(other.headline4);
      if (t8 == null)
        t8 = other.headline4;
      t9 = _this.headline5;
      t10 = t9 == null ? _null : t9.merge$1(other.headline5);
      if (t10 == null)
        t10 = other.headline5;
      t11 = _this.headline6;
      t12 = t11 == null ? _null : t11.merge$1(other.headline6);
      if (t12 == null)
        t12 = other.headline6;
      t13 = _this.subtitle1;
      t14 = t13 == null ? _null : t13.merge$1(other.subtitle1);
      if (t14 == null)
        t14 = other.subtitle1;
      t15 = _this.subtitle2;
      t16 = t15 == null ? _null : t15.merge$1(other.subtitle2);
      if (t16 == null)
        t16 = other.subtitle2;
      t17 = _this.bodyText1;
      t18 = t17 == null ? _null : t17.merge$1(other.bodyText1);
      if (t18 == null)
        t18 = other.bodyText1;
      t19 = _this.bodyText2;
      t20 = t19 == null ? _null : t19.merge$1(other.bodyText2);
      if (t20 == null)
        t20 = other.bodyText2;
      t21 = _this.caption;
      t22 = t21 == null ? _null : t21.merge$1(other.caption);
      if (t22 == null)
        t22 = other.caption;
      t23 = _this.button;
      t24 = t23 == null ? _null : t23.merge$1(other.button);
      if (t24 == null)
        t24 = other.button;
      t25 = _this.overline;
      t26 = t25 == null ? _null : t25.merge$1(other.overline);
      if (t26 == null)
        t26 = other.overline;
      if (t2 == null)
        t2 = _null;
      t1 = t2 == null ? t1 : t2;
      t2 = t4 == null ? _null : t4;
      if (t2 == null)
        t2 = t3;
      t3 = t6 == null ? _null : t6;
      if (t3 == null)
        t3 = t5;
      t4 = t8 == null ? _null : t8;
      if (t4 == null)
        t4 = t7;
      t5 = t10 == null ? _null : t10;
      if (t5 == null)
        t5 = t9;
      t6 = t12 == null ? _null : t12;
      if (t6 == null)
        t6 = t11;
      t7 = t14 == null ? _null : t14;
      if (t7 == null)
        t7 = t13;
      t8 = t16 == null ? _null : t16;
      if (t8 == null)
        t8 = t15;
      t9 = t18 == null ? _null : t18;
      if (t9 == null)
        t9 = t17;
      t10 = t20 == null ? _null : t20;
      if (t10 == null)
        t10 = t19;
      t11 = t22 == null ? t21 : t22;
      t12 = t24 == null ? t23 : t24;
      return R.TextTheme$(t9, t10, t12, t11, t1, t2, t3, t4, t5, t6, t26 == null ? t25 : t26, t7, t8);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof R.TextTheme && J.$eq$(_this.headline1, other.headline1) && J.$eq$(_this.headline2, other.headline2) && J.$eq$(_this.headline3, other.headline3) && J.$eq$(_this.headline4, other.headline4) && J.$eq$(_this.headline5, other.headline5) && J.$eq$(_this.headline6, other.headline6) && J.$eq$(_this.subtitle1, other.subtitle1) && J.$eq$(_this.subtitle2, other.subtitle2) && J.$eq$(_this.bodyText1, other.bodyText1) && J.$eq$(_this.bodyText2, other.bodyText2) && J.$eq$(_this.caption, other.caption) && J.$eq$(_this.button, other.button) && J.$eq$(_this.overline, other.overline);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.headline1, _this.headline2, _this.headline3, _this.headline4, _this.headline5, _this.headline6, _this.subtitle1, _this.subtitle2, _this.bodyText1, _this.bodyText2, _this.caption, _this.button, _this.overline, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  R._TextTheme_Object_Diagnosticable.prototype = {};
  K.Theme.prototype = {
    build$1: function(context) {
      var _null = null,
        t1 = this.data;
      return new K._InheritedTheme(this, new K.CupertinoTheme(new X.MaterialBasedCupertinoThemeData(t1, new K._NoDefaultCupertinoThemeData(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), C.C__CupertinoThemeDefaults, _null, _null, _null, _null, _null, _null), new Y.IconTheme(t1.iconTheme, this.child, _null), _null), _null);
    }
  };
  K._InheritedTheme.prototype = {
    updateShouldNotify$1: function(old) {
      return !J.$eq$(this.theme.data, old.theme.data);
    }
  };
  K.ThemeDataTween.prototype = {
    lerp$1: function(t) {
      var t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93, t94, t95, t96, t97, t98, t99, t100, t101, t102, t103, t104, t105, t106, t107, t108, t109, t110, t111, t112, t113, t114, t115, t116, t117, t118, t119, t120, t121, t122, t123, t124, t125, t126, t127, t128, t129, t130, t131, t132, t133, t134, t135, t136, t137, t138, t139, t140, t141, t142,
        t1 = this.begin,
        t2 = this.end,
        t3 = t < 0.5,
        t4 = t3 ? t1.brightness : t2.brightness,
        t5 = t1.visualDensity.horizontal,
        t6 = t2.visualDensity.horizontal,
        t7 = P.lerpDouble(t5, t6, t);
      t6 = P.lerpDouble(t5, t6, t);
      t5 = P.Color_lerp(t1.primaryColor, t2.primaryColor, t);
      t8 = t3 ? t1.primaryColorBrightness : t2.primaryColorBrightness;
      t9 = P.Color_lerp(t1.primaryColorLight, t2.primaryColorLight, t);
      t10 = P.Color_lerp(t1.primaryColorDark, t2.primaryColorDark, t);
      t11 = P.Color_lerp(t1.canvasColor, t2.canvasColor, t);
      t12 = P.Color_lerp(t1.accentColor, t2.accentColor, t);
      t13 = t3 ? t1.accentColorBrightness : t2.accentColorBrightness;
      t14 = P.Color_lerp(t1.scaffoldBackgroundColor, t2.scaffoldBackgroundColor, t);
      t15 = P.Color_lerp(t1.bottomAppBarColor, t2.bottomAppBarColor, t);
      t16 = P.Color_lerp(t1.cardColor, t2.cardColor, t);
      t17 = P.Color_lerp(t1.dividerColor, t2.dividerColor, t);
      t18 = P.Color_lerp(t1.focusColor, t2.focusColor, t);
      t19 = P.Color_lerp(t1.hoverColor, t2.hoverColor, t);
      t20 = P.Color_lerp(t1.highlightColor, t2.highlightColor, t);
      t21 = P.Color_lerp(t1.splashColor, t2.splashColor, t);
      t22 = t3 ? t1.splashFactory : t2.splashFactory;
      t23 = P.Color_lerp(t1.selectedRowColor, t2.selectedRowColor, t);
      t24 = P.Color_lerp(t1.unselectedWidgetColor, t2.unselectedWidgetColor, t);
      t25 = P.Color_lerp(t1.disabledColor, t2.disabledColor, t);
      t26 = t3 ? t1.buttonTheme : t2.buttonTheme;
      t27 = S.ToggleButtonsThemeData_lerp(t1.toggleButtonsTheme, t2.toggleButtonsTheme, t);
      t28 = P.Color_lerp(t1.buttonColor, t2.buttonColor, t);
      t29 = P.Color_lerp(t1.secondaryHeaderColor, t2.secondaryHeaderColor, t);
      t30 = P.Color_lerp(t1.textSelectionColor, t2.textSelectionColor, t);
      t31 = P.Color_lerp(t1.cursorColor, t2.cursorColor, t);
      t32 = P.Color_lerp(t1.textSelectionHandleColor, t2.textSelectionHandleColor, t);
      t33 = P.Color_lerp(t1.backgroundColor, t2.backgroundColor, t);
      t34 = P.Color_lerp(t1.dialogBackgroundColor, t2.dialogBackgroundColor, t);
      t35 = P.Color_lerp(t1.indicatorColor, t2.indicatorColor, t);
      t36 = P.Color_lerp(t1.hintColor, t2.hintColor, t);
      t37 = P.Color_lerp(t1.errorColor, t2.errorColor, t);
      t38 = P.Color_lerp(t1.toggleableActiveColor, t2.toggleableActiveColor, t);
      t39 = R.TextTheme_lerp(t1.textTheme, t2.textTheme, t);
      t40 = R.TextTheme_lerp(t1.primaryTextTheme, t2.primaryTextTheme, t);
      t41 = R.TextTheme_lerp(t1.accentTextTheme, t2.accentTextTheme, t);
      t42 = t3 ? t1.inputDecorationTheme : t2.inputDecorationTheme;
      t43 = T.IconThemeData_lerp(t1.iconTheme, t2.iconTheme, t);
      t44 = T.IconThemeData_lerp(t1.primaryIconTheme, t2.primaryIconTheme, t);
      t45 = T.IconThemeData_lerp(t1.accentIconTheme, t2.accentIconTheme, t);
      t46 = t1.sliderTheme;
      t47 = t2.sliderTheme;
      t48 = P.lerpDouble(t46.trackHeight, t47.trackHeight, t);
      t49 = P.Color_lerp(t46.activeTrackColor, t47.activeTrackColor, t);
      t50 = P.Color_lerp(t46.inactiveTrackColor, t47.inactiveTrackColor, t);
      t51 = P.Color_lerp(t46.disabledActiveTrackColor, t47.disabledActiveTrackColor, t);
      t52 = P.Color_lerp(t46.disabledInactiveTrackColor, t47.disabledInactiveTrackColor, t);
      t53 = P.Color_lerp(t46.activeTickMarkColor, t47.activeTickMarkColor, t);
      t54 = P.Color_lerp(t46.inactiveTickMarkColor, t47.inactiveTickMarkColor, t);
      t55 = P.Color_lerp(t46.disabledActiveTickMarkColor, t47.disabledActiveTickMarkColor, t);
      t56 = P.Color_lerp(t46.disabledInactiveTickMarkColor, t47.disabledInactiveTickMarkColor, t);
      t57 = P.Color_lerp(t46.thumbColor, t47.thumbColor, t);
      t58 = P.Color_lerp(t46.overlappingShapeStrokeColor, t47.overlappingShapeStrokeColor, t);
      t59 = P.Color_lerp(t46.disabledThumbColor, t47.disabledThumbColor, t);
      t60 = P.Color_lerp(t46.overlayColor, t47.overlayColor, t);
      t61 = P.Color_lerp(t46.valueIndicatorColor, t47.valueIndicatorColor, t);
      t62 = t3 ? t46.overlayShape : t47.overlayShape;
      t63 = t3 ? t46.tickMarkShape : t47.tickMarkShape;
      t64 = t3 ? t46.thumbShape : t47.thumbShape;
      t65 = t3 ? t46.trackShape : t47.trackShape;
      t66 = t3 ? t46.valueIndicatorShape : t47.valueIndicatorShape;
      t67 = t3 ? t46.rangeTickMarkShape : t47.rangeTickMarkShape;
      t68 = t3 ? t46.rangeThumbShape : t47.rangeThumbShape;
      t69 = t3 ? t46.rangeTrackShape : t47.rangeTrackShape;
      t70 = t3 ? t46.rangeValueIndicatorShape : t47.rangeValueIndicatorShape;
      t71 = t3 ? t46.showValueIndicator : t47.showValueIndicator;
      t72 = A.TextStyle_lerp(t46.valueIndicatorTextStyle, t47.valueIndicatorTextStyle, t);
      t73 = P.lerpDouble(t46.minThumbSeparation, t47.minThumbSeparation, t);
      t46 = t3 ? t46.thumbSelector : t47.thumbSelector;
      t47 = t1.tabBarTheme;
      t74 = t2.tabBarTheme;
      t75 = Z.Decoration_lerp(t47.indicator, t74.indicator, t);
      t76 = t3 ? t47.indicatorSize : t74.indicatorSize;
      t77 = P.Color_lerp(t47.labelColor, t74.labelColor, t);
      t78 = V.EdgeInsetsGeometry_lerp(t47.labelPadding, t74.labelPadding, t);
      t79 = A.TextStyle_lerp(t47.labelStyle, t74.labelStyle, t);
      t80 = P.Color_lerp(t47.unselectedLabelColor, t74.unselectedLabelColor, t);
      t74 = A.TextStyle_lerp(t47.unselectedLabelStyle, t74.unselectedLabelStyle, t);
      t47 = T.TooltipThemeData_lerp(t1.tooltipTheme, t2.tooltipTheme, t);
      t81 = t1.cardTheme;
      t82 = t2.cardTheme;
      if (t3)
        t83 = t81.clipBehavior;
      else
        t83 = t82.clipBehavior;
      t84 = P.Color_lerp(t81.color, t82.color, t);
      t85 = P.Color_lerp(t81.shadowColor, t82.shadowColor, t);
      t86 = P.lerpDouble(t81.elevation, t82.elevation, t);
      t87 = V.EdgeInsetsGeometry_lerp(t81.margin, t82.margin, t);
      t81 = Y.ShapeBorder_lerp(t81.shape, t82.shape, t);
      t82 = K.ChipThemeData_lerp(t1.chipTheme, t2.chipTheme, t);
      t88 = t3 ? t1.platform : t2.platform;
      t89 = t3 ? t1.materialTapTargetSize : t2.materialTapTargetSize;
      t90 = t3 ? t1.pageTransitionsTheme : t2.pageTransitionsTheme;
      t91 = t1.appBarTheme;
      t92 = t2.appBarTheme;
      if (t3)
        t93 = t91.brightness;
      else
        t93 = t92.brightness;
      t94 = P.Color_lerp(t91.color, t92.color, t);
      t95 = P.lerpDouble(t91.elevation, t92.elevation, t);
      t96 = T.IconThemeData_lerp(t91.iconTheme, t92.iconTheme, t);
      t97 = T.IconThemeData_lerp(t91.actionsIconTheme, t92.actionsIconTheme, t);
      t91 = R.TextTheme_lerp(t91.textTheme, t92.textTheme, t);
      t92 = t1.bottomAppBarTheme;
      t98 = t2.bottomAppBarTheme;
      t99 = P.Color_lerp(t92.color, t98.color, t);
      t100 = P.lerpDouble(t92.elevation, t98.elevation, t);
      if (t3)
        t92 = t92.shape;
      else
        t92 = t98.shape;
      t98 = t1.colorScheme;
      t101 = t2.colorScheme;
      t102 = P.Color_lerp(t98.primary, t101.primary, t);
      t103 = P.Color_lerp(t98.primaryVariant, t101.primaryVariant, t);
      t104 = P.Color_lerp(t98.secondary, t101.secondary, t);
      t105 = P.Color_lerp(t98.secondaryVariant, t101.secondaryVariant, t);
      t106 = P.Color_lerp(t98.surface, t101.surface, t);
      t107 = P.Color_lerp(t98.background, t101.background, t);
      t108 = P.Color_lerp(t98.error, t101.error, t);
      t109 = P.Color_lerp(t98.onPrimary, t101.onPrimary, t);
      t110 = P.Color_lerp(t98.onSecondary, t101.onSecondary, t);
      t111 = P.Color_lerp(t98.onSurface, t101.onSurface, t);
      t112 = P.Color_lerp(t98.onBackground, t101.onBackground, t);
      t113 = P.Color_lerp(t98.onError, t101.onError, t);
      t98 = A.ColorScheme$(t107, t3 ? t98.brightness : t101.brightness, t108, t112, t113, t109, t110, t111, t102, t103, t104, t105, t106);
      t101 = t1.dialogTheme;
      t102 = t2.dialogTheme;
      t103 = P.Color_lerp(t101.backgroundColor, t102.backgroundColor, t);
      t104 = P.lerpDouble(t101.elevation, t102.elevation, t);
      t105 = Y.ShapeBorder_lerp(t101.shape, t102.shape, t);
      t106 = A.TextStyle_lerp(t101.titleTextStyle, t102.titleTextStyle, t);
      t101 = A.TextStyle_lerp(t101.contentTextStyle, t102.contentTextStyle, t);
      t102 = S.FloatingActionButtonThemeData_lerp(t1.floatingActionButtonTheme, t2.floatingActionButtonTheme, t);
      t107 = E.NavigationRailThemeData_lerp(t1.navigationRailTheme, t2.navigationRailTheme, t);
      t108 = t1.typography;
      t109 = t2.typography;
      t110 = R.TextTheme_lerp(t108.black, t109.black, t);
      t111 = R.TextTheme_lerp(t108.white, t109.white, t);
      t112 = R.TextTheme_lerp(t108.englishLike, t109.englishLike, t);
      t113 = R.TextTheme_lerp(t108.dense, t109.dense, t);
      t109 = R.TextTheme_lerp(t108.tall, t109.tall, t);
      t108 = t3 ? t1.cupertinoOverrideTheme : t2.cupertinoOverrideTheme;
      t114 = t1.snackBarTheme;
      t115 = t2.snackBarTheme;
      t116 = P.Color_lerp(t114.backgroundColor, t115.backgroundColor, t);
      t117 = P.Color_lerp(t114.actionTextColor, t115.actionTextColor, t);
      t118 = P.Color_lerp(t114.disabledActionTextColor, t115.disabledActionTextColor, t);
      t119 = A.TextStyle_lerp(t114.contentTextStyle, t115.contentTextStyle, t);
      t120 = P.lerpDouble(t114.elevation, t115.elevation, t);
      t121 = Y.ShapeBorder_lerp(t114.shape, t115.shape, t);
      t114 = t3 ? t114.behavior : t115.behavior;
      t115 = X.BottomSheetThemeData_lerp(t1.bottomSheetTheme, t2.bottomSheetTheme, t);
      t122 = R.PopupMenuThemeData_lerp(t1.popupMenuTheme, t2.popupMenuTheme, t);
      t123 = t1.bannerTheme;
      t124 = t2.bannerTheme;
      t125 = P.Color_lerp(t123.backgroundColor, t124.backgroundColor, t);
      t126 = A.TextStyle_lerp(t123.contentTextStyle, t124.contentTextStyle, t);
      t127 = V.EdgeInsetsGeometry_lerp(t123.padding, t124.padding, t);
      t123 = V.EdgeInsetsGeometry_lerp(t123.leadingPadding, t124.leadingPadding, t);
      t124 = t1.dividerTheme;
      t128 = t2.dividerTheme;
      t129 = P.Color_lerp(t124.color, t128.color, t);
      t130 = P.lerpDouble(t124.space, t128.space, t);
      t131 = P.lerpDouble(t124.thickness, t128.thickness, t);
      t132 = P.lerpDouble(t124.indent, t128.indent, t);
      t124 = P.lerpDouble(t124.endIndent, t128.endIndent, t);
      t128 = M.ButtonBarThemeData_lerp(t1.buttonBarTheme, t2.buttonBarTheme, t);
      t1 = t1.bottomNavigationBarTheme;
      t2 = t2.bottomNavigationBarTheme;
      t133 = P.Color_lerp(t1.backgroundColor, t2.backgroundColor, t);
      t134 = P.lerpDouble(t1.elevation, t2.elevation, t);
      t135 = T.IconThemeData_lerp(t1.selectedIconTheme, t2.selectedIconTheme, t);
      t136 = T.IconThemeData_lerp(t1.unselectedIconTheme, t2.unselectedIconTheme, t);
      t137 = P.Color_lerp(t1.selectedItemColor, t2.selectedItemColor, t);
      t138 = P.Color_lerp(t1.unselectedItemColor, t2.unselectedItemColor, t);
      t139 = A.TextStyle_lerp(t1.selectedLabelStyle, t2.selectedLabelStyle, t);
      t140 = A.TextStyle_lerp(t1.unselectedLabelStyle, t2.unselectedLabelStyle, t);
      if (t3)
        t141 = t1.showSelectedLabels;
      else
        t141 = t2.showSelectedLabels;
      if (t3)
        t142 = t1.showUnselectedLabels;
      else
        t142 = t2.showUnselectedLabels;
      if (t3)
        t1 = t1.type;
      else
        t1 = t2.type;
      return X.ThemeData$raw(t12, t13, t45, t41, new V.AppBarTheme(t93, t94, t95, t96, t97, t91), false, t33, new Q.MaterialBannerThemeData(t125, t126, t127, t123), t15, new D.BottomAppBarTheme(t99, t100, t92), new M.BottomNavigationBarThemeData(t133, t134, t135, t136, t137, t138, t139, t140, t141, t142, t1), t115, t4, t128, t28, t26, t11, t16, new A.CardTheme(t83, t84, t85, t86, t87, t81), t82, t98, t108, t31, t34, new Y.DialogTheme(t103, t104, t105, t106, t101), t25, t17, new G.DividerThemeData(t129, t130, t131, t132, t124), t37, false, t102, t18, t20, t36, t19, t43, t35, t42, t89, t107, t90, t88, t122, t5, t8, t10, t9, t44, t40, t14, t29, t23, new Q.SliderThemeData(t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t46), new K.SnackBarThemeData(t116, t117, t118, t119, t120, t121, t114), t21, t22, new U.TabBarTheme(t75, t76, t77, t78, t79, t80, t74), t30, t32, t39, t27, t38, t47, new U.Typography(t110, t111, t112, t113, t109), t24, new X.VisualDensity(t7, t6));
    }
  };
  K.AnimatedTheme.prototype = {
    createState$0: function() {
      return new K._AnimatedThemeState(null, C._StateLifecycle_0);
    }
  };
  K._AnimatedThemeState.prototype = {
    forEachTween$1: function(visitor) {
      this._theme$_data = type$.ThemeDataTween._as(visitor.call$3(this._theme$_data, this._widget.data, new K._AnimatedThemeState_forEachTween_closure()));
    },
    build$1: function(context) {
      var t1 = this._widget.child,
        t2 = this._theme$_data,
        t3 = this._implicit_animations$_animation;
      t2.toString;
      return new K.Theme(t2.transform$1(0, t3.get$value(t3)), true, t1, null);
    }
  };
  K._AnimatedThemeState_forEachTween_closure.prototype = {
    call$1: function(value) {
      return new K.ThemeDataTween(type$.ThemeData._as(value), null);
    },
    $signature: 100
  };
  X.MaterialTapTargetSize.prototype = {
    toString$0: function(_) {
      return this._theme_data$_name;
    }
  };
  X.ThemeData.prototype = {
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof X.ThemeData)
        if (other.brightness === _this.brightness)
          if (other.visualDensity.$eq(0, _this.visualDensity))
            if (J.$eq$(other.primaryColor, _this.primaryColor))
              if (other.primaryColorBrightness === _this.primaryColorBrightness)
                if (J.$eq$(other.primaryColorLight, _this.primaryColorLight))
                  if (J.$eq$(other.primaryColorDark, _this.primaryColorDark))
                    if (J.$eq$(other.accentColor, _this.accentColor))
                      if (other.accentColorBrightness === _this.accentColorBrightness)
                        if (J.$eq$(other.canvasColor, _this.canvasColor))
                          if (J.$eq$(other.scaffoldBackgroundColor, _this.scaffoldBackgroundColor))
                            if (J.$eq$(other.bottomAppBarColor, _this.bottomAppBarColor))
                              if (J.$eq$(other.cardColor, _this.cardColor))
                                if (J.$eq$(other.dividerColor, _this.dividerColor))
                                  if (J.$eq$(other.highlightColor, _this.highlightColor))
                                    if (J.$eq$(other.splashColor, _this.splashColor))
                                      if (other.splashFactory === _this.splashFactory)
                                        if (J.$eq$(other.selectedRowColor, _this.selectedRowColor))
                                          if (J.$eq$(other.unselectedWidgetColor, _this.unselectedWidgetColor))
                                            if (J.$eq$(other.disabledColor, _this.disabledColor))
                                              if (other.buttonTheme.$eq(0, _this.buttonTheme))
                                                if (J.$eq$(other.buttonColor, _this.buttonColor))
                                                  if (J.$eq$(other.toggleButtonsTheme, _this.toggleButtonsTheme))
                                                    if (J.$eq$(other.secondaryHeaderColor, _this.secondaryHeaderColor))
                                                      if (J.$eq$(other.textSelectionColor, _this.textSelectionColor))
                                                        if (J.$eq$(other.cursorColor, _this.cursorColor))
                                                          if (J.$eq$(other.textSelectionHandleColor, _this.textSelectionHandleColor))
                                                            if (J.$eq$(other.backgroundColor, _this.backgroundColor))
                                                              if (J.$eq$(other.dialogBackgroundColor, _this.dialogBackgroundColor))
                                                                if (J.$eq$(other.indicatorColor, _this.indicatorColor))
                                                                  if (J.$eq$(other.hintColor, _this.hintColor))
                                                                    if (J.$eq$(other.errorColor, _this.errorColor))
                                                                      if (J.$eq$(other.toggleableActiveColor, _this.toggleableActiveColor))
                                                                        if (other.textTheme.$eq(0, _this.textTheme))
                                                                          if (other.primaryTextTheme.$eq(0, _this.primaryTextTheme))
                                                                            if (other.accentTextTheme.$eq(0, _this.accentTextTheme))
                                                                              if (other.inputDecorationTheme.$eq(0, _this.inputDecorationTheme))
                                                                                if (other.iconTheme.$eq(0, _this.iconTheme))
                                                                                  if (other.primaryIconTheme.$eq(0, _this.primaryIconTheme))
                                                                                    if (other.accentIconTheme.$eq(0, _this.accentIconTheme))
                                                                                      if (other.sliderTheme.$eq(0, _this.sliderTheme))
                                                                                        if (other.tabBarTheme.$eq(0, _this.tabBarTheme))
                                                                                          if (J.$eq$(other.tooltipTheme, _this.tooltipTheme))
                                                                                            if (other.cardTheme.$eq(0, _this.cardTheme))
                                                                                              if (J.$eq$(other.chipTheme, _this.chipTheme))
                                                                                                if (other.platform == _this.platform)
                                                                                                  if (other.materialTapTargetSize === _this.materialTapTargetSize)
                                                                                                    if (other.pageTransitionsTheme.$eq(0, _this.pageTransitionsTheme))
                                                                                                      if (other.appBarTheme.$eq(0, _this.appBarTheme))
                                                                                                        if (other.bottomAppBarTheme.$eq(0, _this.bottomAppBarTheme))
                                                                                                          if (other.colorScheme.$eq(0, _this.colorScheme))
                                                                                                            if (other.dialogTheme.$eq(0, _this.dialogTheme))
                                                                                                              if (J.$eq$(other.floatingActionButtonTheme, _this.floatingActionButtonTheme))
                                                                                                                if (J.$eq$(other.navigationRailTheme, _this.navigationRailTheme))
                                                                                                                  if (other.typography.$eq(0, _this.typography))
                                                                                                                    t1 = other.snackBarTheme.$eq(0, _this.snackBarTheme) && J.$eq$(other.bottomSheetTheme, _this.bottomSheetTheme) && J.$eq$(other.popupMenuTheme, _this.popupMenuTheme) && other.bannerTheme.$eq(0, _this.bannerTheme) && other.dividerTheme.$eq(0, _this.dividerTheme) && J.$eq$(other.buttonBarTheme, _this.buttonBarTheme) && other.bottomNavigationBarTheme.$eq(0, _this.bottomNavigationBarTheme) && true;
                                                                                                                  else
                                                                                                                    t1 = false;
                                                                                                                else
                                                                                                                  t1 = false;
                                                                                                              else
                                                                                                                t1 = false;
                                                                                                            else
                                                                                                              t1 = false;
                                                                                                          else
                                                                                                            t1 = false;
                                                                                                        else
                                                                                                          t1 = false;
                                                                                                      else
                                                                                                        t1 = false;
                                                                                                    else
                                                                                                      t1 = false;
                                                                                                  else
                                                                                                    t1 = false;
                                                                                                else
                                                                                                  t1 = false;
                                                                                              else
                                                                                                t1 = false;
                                                                                            else
                                                                                              t1 = false;
                                                                                          else
                                                                                            t1 = false;
                                                                                        else
                                                                                          t1 = false;
                                                                                      else
                                                                                        t1 = false;
                                                                                    else
                                                                                      t1 = false;
                                                                                  else
                                                                                    t1 = false;
                                                                                else
                                                                                  t1 = false;
                                                                              else
                                                                                t1 = false;
                                                                            else
                                                                              t1 = false;
                                                                          else
                                                                            t1 = false;
                                                                        else
                                                                          t1 = false;
                                                                      else
                                                                        t1 = false;
                                                                    else
                                                                      t1 = false;
                                                                  else
                                                                    t1 = false;
                                                                else
                                                                  t1 = false;
                                                              else
                                                                t1 = false;
                                                            else
                                                              t1 = false;
                                                          else
                                                            t1 = false;
                                                        else
                                                          t1 = false;
                                                      else
                                                        t1 = false;
                                                    else
                                                      t1 = false;
                                                  else
                                                    t1 = false;
                                                else
                                                  t1 = false;
                                              else
                                                t1 = false;
                                            else
                                              t1 = false;
                                          else
                                            t1 = false;
                                        else
                                          t1 = false;
                                      else
                                        t1 = false;
                                    else
                                      t1 = false;
                                  else
                                    t1 = false;
                                else
                                  t1 = false;
                              else
                                t1 = false;
                            else
                              t1 = false;
                          else
                            t1 = false;
                        else
                          t1 = false;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashList([_this.brightness, _this.visualDensity, _this.primaryColor, _this.primaryColorBrightness, _this.primaryColorLight, _this.primaryColorDark, _this.accentColor, _this.accentColorBrightness, _this.canvasColor, _this.scaffoldBackgroundColor, _this.bottomAppBarColor, _this.cardColor, _this.dividerColor, _this.focusColor, _this.hoverColor, _this.highlightColor, _this.splashColor, _this.splashFactory, _this.selectedRowColor, _this.unselectedWidgetColor, _this.disabledColor, _this.buttonTheme, _this.buttonColor, _this.toggleButtonsTheme, _this.toggleableActiveColor, _this.secondaryHeaderColor, _this.textSelectionColor, _this.cursorColor, _this.textSelectionHandleColor, _this.backgroundColor, _this.dialogBackgroundColor, _this.indicatorColor, _this.hintColor, _this.errorColor, _this.textTheme, _this.primaryTextTheme, _this.accentTextTheme, _this.inputDecorationTheme, _this.iconTheme, _this.primaryIconTheme, _this.accentIconTheme, _this.sliderTheme, _this.tabBarTheme, _this.tooltipTheme, _this.cardTheme, _this.chipTheme, _this.platform, _this.materialTapTargetSize, false, _this.pageTransitionsTheme, _this.appBarTheme, _this.bottomAppBarTheme, _this.colorScheme, _this.dialogTheme, _this.floatingActionButtonTheme, _this.navigationRailTheme, _this.typography, _this.cupertinoOverrideTheme, _this.snackBarTheme, _this.bottomSheetTheme, _this.popupMenuTheme, _this.bannerTheme, _this.dividerTheme, _this.buttonBarTheme, _this.bottomNavigationBarTheme, false]);
    }
  };
  X.ThemeData_localize_closure.prototype = {
    call$0: function() {
      var t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64,
        t1 = this.baseTheme,
        t2 = this.localTextGeometry,
        t3 = t2.merge$1(t1.primaryTextTheme),
        t4 = t2.merge$1(t1.accentTextTheme);
      t2 = t2.merge$1(t1.textTheme);
      t5 = t1.brightness;
      t6 = t1.visualDensity;
      t7 = t1.primaryColor;
      t8 = t1.primaryColorBrightness;
      t9 = t1.primaryColorLight;
      t10 = t1.primaryColorDark;
      t11 = t1.accentColor;
      t12 = t1.accentColorBrightness;
      t13 = t1.canvasColor;
      t14 = t1.scaffoldBackgroundColor;
      t15 = t1.bottomAppBarColor;
      t16 = t1.cardColor;
      t17 = t1.dividerColor;
      t18 = t1.focusColor;
      t19 = t1.hoverColor;
      t20 = t1.highlightColor;
      t21 = t1.splashColor;
      t22 = t1.splashFactory;
      t23 = t1.selectedRowColor;
      t24 = t1.unselectedWidgetColor;
      t25 = t1.disabledColor;
      t26 = t1.buttonColor;
      t27 = t1.buttonTheme;
      t28 = t1.toggleButtonsTheme;
      t29 = t1.secondaryHeaderColor;
      t30 = t1.textSelectionColor;
      t31 = t1.cursorColor;
      t32 = t1.textSelectionHandleColor;
      t33 = t1.backgroundColor;
      t34 = t1.dialogBackgroundColor;
      t35 = t1.indicatorColor;
      t36 = t1.hintColor;
      t37 = t1.errorColor;
      t38 = t1.toggleableActiveColor;
      t39 = t1.inputDecorationTheme;
      t40 = t1.iconTheme;
      t41 = t1.primaryIconTheme;
      t42 = t1.accentIconTheme;
      t43 = t1.sliderTheme;
      t44 = t1.tabBarTheme;
      t45 = t1.tooltipTheme;
      t46 = t1.cardTheme;
      t47 = t1.chipTheme;
      t48 = t1.platform;
      t49 = t1.materialTapTargetSize;
      t50 = t1.pageTransitionsTheme;
      t51 = t1.appBarTheme;
      t52 = t1.bottomAppBarTheme;
      t53 = t1.colorScheme;
      t54 = t1.dialogTheme;
      t55 = t1.floatingActionButtonTheme;
      t56 = t1.navigationRailTheme;
      t57 = t1.typography;
      t58 = t1.cupertinoOverrideTheme;
      t59 = t1.snackBarTheme;
      t60 = t1.bottomSheetTheme;
      t61 = t1.popupMenuTheme;
      t62 = t1.bannerTheme;
      t63 = t1.dividerTheme;
      t64 = t1.buttonBarTheme;
      t1 = t1.bottomNavigationBarTheme;
      return X.ThemeData$raw(t11, t12, t42, t4, t51, false, t33, t62, t15, t52, t1, t60, t5, t64, t26, t27, t13, t16, t46, t47, t53, t58, t31, t34, t54, t25, t17, t63, t37, false, t55, t18, t20, t36, t19, t40, t35, t39, t49, t56, t50, t48, t61, t7, t8, t10, t9, t41, t3, t14, t29, t23, t43, t59, t21, t22, t44, t30, t32, t2, t28, t38, t45, t57, t24, t6);
    },
    $signature: 101
  };
  X.MaterialBasedCupertinoThemeData.prototype = {
    get$brightness: function() {
      var t1 = this._cupertinoOverrideTheme.brightness;
      return t1 == null ? this._materialTheme.brightness : t1;
    },
    get$primaryColor: function() {
      return this._materialTheme.colorScheme.primary;
    }
  };
  X._IdentityThemeDataCacheKey.prototype = {
    get$hashCode: function(_) {
      return (H.objectHashCode(this.baseTheme) ^ H.objectHashCode(this.localTextGeometry)) >>> 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof X._IdentityThemeDataCacheKey && other.baseTheme == this.baseTheme && other.localTextGeometry == this.localTextGeometry;
    }
  };
  X._FifoCache.prototype = {
    putIfAbsent$2: function(_, key, loader) {
      var t2,
        t1 = this._cache,
        result = t1.$index(0, key);
      if (result != null)
        return result;
      if (t1.get$length(t1) === this._maximumSize) {
        t2 = t1.get$keys(t1);
        t1.remove$1(0, t2.get$first(t2));
      }
      t2 = loader.call$0();
      t1.$indexSet(0, key, t2);
      return t2;
    }
  };
  X.VisualDensity.prototype = {
    effectiveConstraints$1: function(constraints) {
      var t1 = this.horizontal,
        t2 = this.vertical,
        t3 = C.JSNumber_methods.clamp$2(constraints.minWidth + new P.Offset(t1, t2).$mul(0, 4)._dx, 0, 1 / 0);
      return constraints.copyWith$2$minHeight$minWidth(C.JSNumber_methods.clamp$2(constraints.minHeight + new P.Offset(t1, t2).$mul(0, 4)._dy, 0, 1 / 0), t3);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof X.VisualDensity && other.horizontal == this.horizontal && other.vertical == this.vertical;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.horizontal, this.vertical, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toStringShort$0: function() {
      return this.super$Diagnosticable$toStringShort() + "(h: " + E.debugFormatDouble(this.horizontal) + ", v: " + E.debugFormatDouble(this.vertical) + ")";
    }
  };
  X._ThemeData_Object_Diagnosticable.prototype = {};
  X._VisualDensity_Object_Diagnosticable.prototype = {};
  S.ToggleButtonsThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.textStyle, _this.constraints, _this.color, _this.selectedColor, _this.disabledColor, _this.fillColor, _this.focusColor, _this.highlightColor, _this.hoverColor, _this.splashColor, _this.borderColor, _this.selectedBorderColor, _this.disabledBorderColor, _this.borderRadius, _this.borderWidth, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof S.ToggleButtonsThemeData && J.$eq$(other.textStyle, _this.textStyle) && J.$eq$(other.constraints, _this.constraints) && J.$eq$(other.color, _this.color) && J.$eq$(other.selectedColor, _this.selectedColor) && J.$eq$(other.disabledColor, _this.disabledColor) && J.$eq$(other.fillColor, _this.fillColor) && J.$eq$(other.focusColor, _this.focusColor) && J.$eq$(other.highlightColor, _this.highlightColor) && J.$eq$(other.hoverColor, _this.hoverColor) && J.$eq$(other.splashColor, _this.splashColor) && J.$eq$(other.borderColor, _this.borderColor) && J.$eq$(other.selectedBorderColor, _this.selectedBorderColor) && J.$eq$(other.disabledBorderColor, _this.disabledBorderColor) && J.$eq$(other.borderRadius, _this.borderRadius) && other.borderWidth == _this.borderWidth;
    }
  };
  S._ToggleButtonsThemeData_Object_Diagnosticable.prototype = {};
  F.RenderToggleable.prototype = {
    RenderToggleable$11$activeColor$additionalConstraints$focusColor$hasFocus$hoverColor$hovering$inactiveColor$onChanged$tristate$value$vsync: function(activeColor, additionalConstraints, focusColor, hasFocus, hoverColor, hovering, inactiveColor, onChanged, tristate, value, vsync) {
      var t2, t3, _this = this, _null = null,
        t1 = type$.int;
      t1 = new N.TapGestureRecognizer(C.Duration_100000, 18, C.GestureRecognizerState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), _null, _null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
      t1.onTapDown = _this.get$_toggleable$_handleTapDown();
      t1.onTap = _this.get$_toggleable$_handleTap();
      t1.onTapUp = _this.get$_handleTapUp();
      t1.onTapCancel = _this.get$_toggleable$_handleTapCancel();
      _this._tap = t1;
      t1 = G.AnimationController$(_null, C.Duration_200000, 0, _null, 1, value === false ? 0 : 1, vsync);
      _this._positionController = t1;
      t1 = S.CurvedAnimation$(C.C__Linear, t1, _null);
      t2 = _this.get$markNeedsPaint();
      t1.parent.addListener$1(0, t2);
      _this._toggleable$_position = t1;
      t1 = G.AnimationController$(_null, C.Duration_100000, 0, _null, 1, _null, vsync);
      _this._reactionController = t1;
      t1 = S.CurvedAnimation$(C.Cubic_ifx, t1, _null);
      t1.parent.addListener$1(0, t2);
      _this._reaction = t1;
      t1 = !hovering;
      t3 = G.AnimationController$(_null, C.Duration_50000, 0, _null, 1, !t1 || hasFocus ? 1 : 0, vsync);
      _this._reactionHoverFadeController = t3;
      t3 = S.CurvedAnimation$(C.Cubic_ifx, t3, _null);
      t3.parent.addListener$1(0, t2);
      _this._reactionHoverFade = t3;
      t1 = G.AnimationController$(_null, C.Duration_50000, 0, _null, 1, !t1 || hasFocus ? 1 : 0, vsync);
      _this._reactionFocusFadeController = t1;
      t1 = S.CurvedAnimation$(C.Cubic_ifx, t1, _null);
      t1.parent.addListener$1(0, t2);
      _this._reactionFocusFade = t1;
    },
    set$hasFocus: function(value) {
      var t1, _this = this;
      if (value === _this._toggleable$_hasFocus)
        return;
      _this._toggleable$_hasFocus = value;
      t1 = _this._reactionFocusFadeController;
      if (value)
        t1.forward$0(0);
      else
        t1.reverse$0(0);
      _this.markNeedsPaint$0();
    },
    set$hovering: function(value) {
      var t1, _this = this;
      if (value === _this._toggleable$_hovering)
        return;
      _this._toggleable$_hovering = value;
      t1 = _this._reactionHoverFadeController;
      if (value)
        t1.forward$0(0);
      else
        t1.reverse$0(0);
      _this.markNeedsPaint$0();
    },
    set$vsync: function(value) {
      var _this = this;
      if (value === _this._vsync)
        return;
      _this._vsync = value;
      _this._positionController.resync$1(value);
      _this._reactionController.resync$1(_this._vsync);
    },
    set$value: function(_, value) {
      var t1, _this = this;
      if (value == _this._toggleable$_value)
        return;
      _this._toggleable$_value = value;
      _this.markNeedsSemanticsUpdate$0();
      t1 = _this._toggleable$_position;
      t1.curve = C.Cubic_JUR0;
      t1.reverseCurve = C.Cubic_xDo0;
      t1 = _this._positionController;
      switch (t1._animation_controller$_status) {
        case C.AnimationStatus_1:
        case C.AnimationStatus_3:
          t1.reverse$0(0);
          break;
        default:
          t1.forward$0(0);
      }
    },
    set$tristate: function(value) {
      return;
    },
    set$activeColor: function(value) {
      if (J.$eq$(value, this._activeColor))
        return;
      this._activeColor = value;
      this.markNeedsPaint$0();
    },
    set$inactiveColor: function(value) {
      if (J.$eq$(value, this._inactiveColor))
        return;
      this._inactiveColor = value;
      this.markNeedsPaint$0();
    },
    set$hoverColor: function(value) {
      if (J.$eq$(value, this._toggleable$_hoverColor))
        return;
      this._toggleable$_hoverColor = value;
      this.markNeedsPaint$0();
    },
    set$focusColor: function(value) {
      if (J.$eq$(value, this._toggleable$_focusColor))
        return;
      this._toggleable$_focusColor = value;
      this.markNeedsPaint$0();
    },
    get$onChanged: function() {
      return this._onChanged;
    },
    set$onChanged: function(value) {
      if (J.$eq$(value, this._onChanged))
        return;
      this._onChanged = value;
    },
    attach$1: function(owner) {
      var t1, t2, _this = this;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      t1 = _this._toggleable$_value;
      t2 = _this._positionController;
      if (t1 === false)
        t2.reverse$0(0);
      else
        t2.forward$0(0);
      t1 = _this._reactionController;
      switch (t1._animation_controller$_status) {
        case C.AnimationStatus_1:
          t1.forward$0(0);
          break;
        case C.AnimationStatus_2:
          t1.reverse$0(0);
          break;
        case C.AnimationStatus_0:
        case C.AnimationStatus_3:
          break;
      }
    },
    detach$0: function(_) {
      this._positionController.stop$0(0);
      this._reactionController.stop$0(0);
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    _toggleable$_handleTapDown$1: function(details) {
      this._downPosition = this.globalToLocal$1(details.globalPosition);
      this._reactionController.forward$0(0);
    },
    _toggleable$_handleTap$0: function() {
      var _this = this;
      switch (_this._toggleable$_value) {
        case false:
          _this.onChanged$1(true);
          break;
        case true:
          _this.onChanged$1(null);
          break;
        default:
          _this.onChanged$1(false);
          break;
      }
      _this.sendSemanticsEvent$1(C.TapSemanticEvent_tap);
    },
    _handleTapUp$1: function(details) {
      this._downPosition = null;
      this._reactionController.reverse$0(0);
    },
    _toggleable$_handleTapCancel$0: function() {
      this._downPosition = null;
      this._reactionController.reverse$0(0);
    },
    hitTestSelf$1: function(position) {
      return true;
    },
    handleEvent$2: function($event, entry) {
      if ($event instanceof F.PointerDownEvent && true)
        this._tap.addPointer$1($event);
    },
    describeSemanticsConfiguration$1: function(config) {
      var t1;
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config._setFlag$2(C.SemanticsFlag_64, true);
      config._setFlag$2(C.SemanticsFlag_128, true);
      t1 = this.get$_toggleable$_handleTap();
      config._addArgumentlessAction$2(C.SemanticsAction_1, t1);
      config._semantics$_onTap = t1;
    },
    onChanged$1: function(arg0) {
      return this.get$onChanged().call$1(arg0);
    }
  };
  S.Tooltip.prototype = {
    createState$0: function() {
      return new S._TooltipState(null, C._StateLifecycle_0);
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  S._TooltipState.prototype = {
    initState$0: function() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = $.RendererBinding__instance.RendererBinding__mouseTracker._mouseStates;
      _this._mouseIsConnected = t1.get$isNotEmpty(t1);
      t1 = G.AnimationController$(null, C.Duration_150000, 0, C.Duration_75000, 1, null, _this);
      t1.addStatusListener$1(_this.get$_tooltip$_handleStatusChanged());
      _this._tooltip$_controller = t1;
      t1 = $.RendererBinding__instance.RendererBinding__mouseTracker.ChangeNotifier__listeners;
      t1._isDirty = true;
      t1._list.push(_this.get$_handleMouseTrackerChange());
      $.GestureBinding__instance.GestureBinding_pointerRouter._globalRoutes.$indexSet(0, _this.get$_handlePointerEvent(), null);
    },
    _handleMouseTrackerChange$0: function() {
      var t1, mouseIsConnected, _this = this;
      if (_this._framework$_element == null)
        return;
      t1 = $.RendererBinding__instance.RendererBinding__mouseTracker._mouseStates;
      mouseIsConnected = t1.get$isNotEmpty(t1);
      if (mouseIsConnected !== _this._mouseIsConnected)
        _this.setState$1(new S._TooltipState__handleMouseTrackerChange_closure(_this, mouseIsConnected));
    },
    _tooltip$_handleStatusChanged$1: function($status) {
      if ($status === C.AnimationStatus_0)
        this._hideTooltip$1$immediately(true);
    },
    _hideTooltip$1$immediately: function(immediately) {
      var t2, _this = this,
        t1 = _this._showTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._showTimer = null;
      if (immediately) {
        _this._removeEntry$0();
        return;
      }
      if (_this._longPressActivated) {
        if (_this._hideTimer == null) {
          t1 = _this.showDuration;
          t2 = _this._tooltip$_controller;
          _this._hideTimer = P.Timer_Timer(t1, t2.get$reverse(t2));
        }
      } else
        _this._tooltip$_controller.reverse$0(0);
      _this._longPressActivated = false;
    },
    _hideTooltip$0: function() {
      return this._hideTooltip$1$immediately(false);
    },
    _showTooltip$0: function() {
      var _this = this,
        t1 = _this._hideTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._hideTimer = null;
      if (_this._showTimer == null)
        _this._showTimer = P.Timer_Timer(_this.waitDuration, _this.get$ensureTooltipVisible());
    },
    ensureTooltipVisible$0: function() {
      var _this = this,
        t1 = _this._showTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._showTimer = null;
      if (_this._entry != null) {
        t1 = _this._hideTimer;
        if (t1 != null)
          t1.cancel$0(0);
        _this._hideTimer = null;
        _this._tooltip$_controller.forward$0(0);
        return false;
      }
      _this._createNewEntry$0();
      _this._tooltip$_controller.forward$0(0);
      return true;
    },
    _createNewEntry$0: function() {
      var result, _this = this, _null = null,
        box = type$.RenderBox._as(_this._framework$_element.get$renderObject()),
        t1 = box._size.center$1(C.Offset_0_0),
        target = T.MatrixUtils_transformPoint(box.getTransformTo$1(0, _null), t1);
      _this._entry = X.OverlayEntry$(new S._TooltipState__createNewEntry_closure(new T.Directionality(T.Directionality_of(_this._framework$_element), new S._TooltipOverlay(_this._widget.message, _this.height, _this.padding, _this.margin, _this.decoration, _this.textStyle, S.CurvedAnimation$(C.Cubic_ifx, _this._tooltip$_controller, _null), target, _this.verticalOffset, _this.preferBelow, _null), _null)), false);
      result = _this._framework$_element.findAncestorStateOfType$1$0(type$.OverlayState);
      result.insert$1(0, _this._entry);
      S.SemanticsService_tooltip(_this._widget.message);
    },
    _removeEntry$0: function() {
      var _this = this,
        t1 = _this._hideTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._hideTimer = null;
      t1 = _this._showTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._showTimer = null;
      t1 = _this._entry;
      if (t1 != null)
        t1.remove$0(0);
      _this._entry = null;
    },
    _handlePointerEvent$1: function($event) {
      if (this._entry == null)
        return;
      if ($event instanceof F.PointerUpEvent || $event instanceof F.PointerCancelEvent)
        this._hideTooltip$0();
      else if ($event instanceof F.PointerDownEvent)
        this._hideTooltip$1$immediately(true);
    },
    deactivate$0: function() {
      if (this._entry != null)
        this._hideTooltip$1$immediately(true);
      this.super$State$deactivate();
    },
    dispose$0: function() {
      var _this = this;
      $.GestureBinding__instance.GestureBinding_pointerRouter._globalRoutes.remove$1(0, _this.get$_handlePointerEvent());
      $.RendererBinding__instance.RendererBinding__mouseTracker.ChangeNotifier__listeners.remove$1(0, _this.get$_handleMouseTrackerChange());
      if (_this._entry != null)
        _this._removeEntry$0();
      _this._tooltip$_controller.dispose$0();
      _this.super$__TooltipState_State_SingleTickerProviderStateMixin$dispose();
    },
    _handleLongPress$0: function() {
      this._longPressActivated = true;
      if (this.ensureTooltipVisible$0())
        M.Feedback_forLongPress(this._framework$_element);
    },
    build$1: function(context) {
      var t1, tooltipTheme, t2, defaultTextStyle, defaultDecoration, result, _this = this, _null = null,
        theme = K.Theme_of(context);
      context.dependOnInheritedWidgetOfExactType$1$0(type$.TooltipTheme);
      t1 = K.Theme_of(context);
      tooltipTheme = t1.tooltipTheme;
      t1 = theme.brightness;
      t2 = theme.textTheme.bodyText2;
      if (t1 === C.Brightness_0) {
        defaultTextStyle = t2.copyWith$1$color(C.Color_4278190080);
        defaultDecoration = S.BoxDecoration$(_null, C.BorderRadius_tLn0, _null, P.Color$fromARGB(C.JSDouble_methods.round$0(229.5), 255, 255, 255), _null, _null, C.BoxShape_0);
      } else {
        defaultTextStyle = t2.copyWith$1$color(C.Color_4294967295);
        t1 = C.Map_HFpTk.$index(0, 700);
        t1.toString;
        t1 = t1.value;
        defaultDecoration = S.BoxDecoration$(_null, C.BorderRadius_tLn0, _null, P.Color$fromARGB(C.JSDouble_methods.round$0(229.5), (16711680 & t1) >>> 16, (65280 & t1) >>> 8, (255 & t1) >>> 0), _null, _null, C.BoxShape_0);
      }
      t1 = _this._widget;
      t1.toString;
      t2 = tooltipTheme.height;
      _this.height = t2 == null ? 32 : t2;
      t2 = tooltipTheme.padding;
      _this.padding = t2 == null ? C.EdgeInsets_16_0_16_0 : t2;
      t2 = tooltipTheme.margin;
      _this.margin = t2 == null ? C.EdgeInsets_0_0_0_0 : t2;
      t2 = tooltipTheme.verticalOffset;
      _this.verticalOffset = t2 == null ? 24 : t2;
      tooltipTheme.toString;
      _this.preferBelow = true;
      tooltipTheme.toString;
      _this.excludeFromSemantics = false;
      t2 = tooltipTheme.decoration;
      _this.decoration = t2 == null ? defaultDecoration : t2;
      t2 = tooltipTheme.textStyle;
      _this.textStyle = t2 == null ? defaultTextStyle : t2;
      tooltipTheme.toString;
      _this.waitDuration = C.Duration_0;
      tooltipTheme.toString;
      _this.showDuration = C.Duration_1500000;
      result = D.GestureDetector$(C.HitTestBehavior_1, T.Semantics$(_null, t1.child, false, _null, false, _null, _null, _null, t1.message, _null, _null, _null, _null, _null), C.DragStartBehavior_1, true, _null, _null, _null, _null, _null, _null, _this.get$_handleLongPress(), _null, _null, _null, _null, _null, _null, _null, _null, _null);
      return _this._mouseIsConnected ? T.MouseRegion$(result, new S._TooltipState_build_closure(_this), new S._TooltipState_build_closure0(_this), _null, true) : result;
    }
  };
  S._TooltipState__handleMouseTrackerChange_closure.prototype = {
    call$0: function() {
      this.$this._mouseIsConnected = this.mouseIsConnected;
    },
    $signature: 0
  };
  S._TooltipState__createNewEntry_closure.prototype = {
    call$1: function(context) {
      return this.overlay;
    }
  };
  S._TooltipState_build_closure.prototype = {
    call$1: function($event) {
      return this.$this._showTooltip$0();
    }
  };
  S._TooltipState_build_closure0.prototype = {
    call$1: function($event) {
      return this.$this._hideTooltip$0();
    }
  };
  S._TooltipPositionDelegate.prototype = {
    getConstraintsForChild$1: function(constraints) {
      return constraints.loosen$0();
    },
    getPositionForChild$2: function(size, childSize) {
      return N.positionDependentBox(childSize, this.preferBelow, size, this.target, this.verticalOffset);
    },
    shouldRelayout$1: function(oldDelegate) {
      return !this.target.$eq(0, oldDelegate.target) || this.verticalOffset != oldDelegate.verticalOffset || this.preferBelow != oldDelegate.preferBelow;
    }
  };
  S._TooltipOverlay.prototype = {
    build$1: function(context) {
      var _this = this, _null = null,
        t1 = K.Theme_of(context).textTheme;
      return new T.Positioned(0, 0, 0, 0, _null, _null, new T.IgnorePointer(true, _null, new T.CustomSingleChildLayout(new S._TooltipPositionDelegate(_this.target, _this.verticalOffset, _this.preferBelow), K.FadeTransition$(new T.ConstrainedBox(new S.BoxConstraints(0, 1 / 0, _this.height, 1 / 0), L.DefaultTextStyle$(M.Container$(_null, new T.Center(C.Alignment_0_0, 1, 1, L.Text$(_this.message, _null, _null, _this.textStyle, _null), _null), _null, _null, _this.decoration, _null, _this.margin, _this.padding, _null), _null, C.TextOverflow_0, true, t1.bodyText2, _null, _null, C.TextWidthBasis_0), _null), _this.animation), _null), _null), _null);
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  S.__TooltipState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var t1 = this.SingleTickerProviderStateMixin__ticker;
      if (t1 != null)
        t1.set$muted(0, !U.TickerMode_of(this._framework$_element));
      this.super$State$didChangeDependencies();
    }
  };
  T.TooltipThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.height, _this.padding, _this.margin, _this.verticalOffset, _this.preferBelow, _this.excludeFromSemantics, _this.decoration, _this.textStyle, null, null, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof T.TooltipThemeData)
        if (other.height == _this.height)
          if (J.$eq$(other.padding, _this.padding))
            if (J.$eq$(other.margin, _this.margin))
              if (other.verticalOffset == _this.verticalOffset)
                if (J.$eq$(other.decoration, _this.decoration))
                  if (J.$eq$(other.textStyle, _this.textStyle))
                    t1 = true;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  T.TooltipTheme.prototype = {};
  T._TooltipThemeData_Object_Diagnosticable.prototype = {};
  U.ScriptCategory.prototype = {
    toString$0: function(_) {
      return this._typography$_name;
    }
  };
  U.Typography.prototype = {
    geometryThemeFor$1: function(category) {
      switch (category) {
        case C.ScriptCategory_0:
          return this.englishLike;
        case C.ScriptCategory_1:
          return this.dense;
        case C.ScriptCategory_2:
          return this.tall;
      }
      return null;
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof U.Typography && J.$eq$(other.black, _this.black) && J.$eq$(other.white, _this.white) && other.englishLike.$eq(0, _this.englishLike) && other.dense.$eq(0, _this.dense) && other.tall.$eq(0, _this.tall);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.black, _this.white, _this.englishLike, _this.dense, _this.tall, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  U._Typography_Object_Diagnosticable.prototype = {};
  K.AlignmentGeometry.prototype = {
    toString$0: function(_) {
      var _this = this;
      if (_this.get$_alignment$_start(_this) === 0)
        return K.Alignment__stringify(_this.get$_x(), _this.get$_y());
      if (_this.get$_x() === 0)
        return K.AlignmentDirectional__stringify(_this.get$_alignment$_start(_this), _this.get$_y());
      return K.Alignment__stringify(_this.get$_x(), _this.get$_y()) + " + " + K.AlignmentDirectional__stringify(_this.get$_alignment$_start(_this), 0);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof K.AlignmentGeometry && other.get$_x() == _this.get$_x() && other.get$_alignment$_start(other) == _this.get$_alignment$_start(_this) && other.get$_y() == _this.get$_y();
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.get$_x(), _this.get$_alignment$_start(_this), _this.get$_y(), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  K.Alignment.prototype = {
    get$_x: function() {
      return this.x;
    },
    get$_alignment$_start: function(_) {
      return 0;
    },
    get$_y: function() {
      return this.y;
    },
    $sub: function(_, other) {
      return new K.Alignment(this.x - other.x, this.y - other.y);
    },
    $add: function(_, other) {
      return new K.Alignment(this.x + other.x, this.y + other.y);
    },
    $mul: function(_, other) {
      return new K.Alignment(this.x * other, this.y * other);
    },
    alongOffset$1: function(other) {
      var centerX = other._dx / 2,
        centerY = other._dy / 2;
      return new P.Offset(centerX + this.x * centerX, centerY + this.y * centerY);
    },
    withinRect$1: function(rect) {
      var t1 = rect.left,
        halfWidth = (rect.right - t1) / 2,
        t2 = rect.top,
        halfHeight = (rect.bottom - t2) / 2;
      return new P.Offset(t1 + halfWidth + this.x * halfWidth, t2 + halfHeight + this.y * halfHeight);
    },
    resolve$1: function(direction) {
      return this;
    },
    toString$0: function(_) {
      return K.Alignment__stringify(this.x, this.y);
    }
  };
  K.AlignmentDirectional.prototype = {
    get$_x: function() {
      return 0;
    },
    get$_alignment$_start: function(_) {
      return this.start;
    },
    get$_y: function() {
      return this.y;
    },
    $sub: function(_, other) {
      return new K.AlignmentDirectional(this.start - other.start, this.y - other.y);
    },
    $add: function(_, other) {
      return new K.AlignmentDirectional(this.start + other.start, this.y + other.y);
    },
    $mul: function(_, other) {
      return new K.AlignmentDirectional(this.start * other, this.y * other);
    },
    resolve$1: function(direction) {
      var _this = this;
      switch (direction) {
        case C.TextDirection_0:
          return new K.Alignment(-_this.start, _this.y);
        case C.TextDirection_1:
          return new K.Alignment(_this.start, _this.y);
      }
      return null;
    },
    toString$0: function(_) {
      return K.AlignmentDirectional__stringify(this.start, this.y);
    }
  };
  K._MixedAlignment.prototype = {
    $mul: function(_, other) {
      return new K._MixedAlignment(this._x * other, this._alignment$_start * other, this._y * other);
    },
    resolve$1: function(direction) {
      var _this = this;
      switch (direction) {
        case C.TextDirection_0:
          return new K.Alignment(_this._x - _this._alignment$_start, _this._y);
        case C.TextDirection_1:
          return new K.Alignment(_this._x + _this._alignment$_start, _this._y);
      }
      return null;
    },
    get$_x: function() {
      return this._x;
    },
    get$_alignment$_start: function(receiver) {
      return this._alignment$_start;
    },
    get$_y: function() {
      return this._y;
    }
  };
  G.RenderComparison.prototype = {
    toString$0: function(_) {
      return this._basic_types$_name;
    }
  };
  G.Axis.prototype = {
    toString$0: function(_) {
      return this._basic_types$_name;
    }
  };
  G.VerticalDirection.prototype = {
    toString$0: function(_) {
      return this._basic_types$_name;
    }
  };
  G.AxisDirection.prototype = {
    toString$0: function(_) {
      return this._basic_types$_name;
    }
  };
  N.PaintingBinding.prototype = {};
  N._SystemFontsNotifier.prototype = {
    notifyListeners$0: function() {
      for (var t1 = this._systemFontsCallbacks, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
        t1._collection$_current.call$0();
    },
    addListener$1: function(_, listener) {
      this._systemFontsCallbacks.add$1(0, listener);
    },
    removeListener$1: function(_, listener) {
      this._systemFontsCallbacks.remove$1(0, listener);
    }
  };
  K.BorderRadiusGeometry.prototype = {
    subtract$1: function(other) {
      var _this = this;
      return new K._MixedBorderRadius(_this.get$_topLeft().$sub(0, other.get$_topLeft()), _this.get$_topRight().$sub(0, other.get$_topRight()), _this.get$_bottomLeft().$sub(0, other.get$_bottomLeft()), _this.get$_bottomRight().$sub(0, other.get$_bottomRight()), _this.get$_topStart().$sub(0, other.get$_topStart()), _this.get$_topEnd().$sub(0, other.get$_topEnd()), _this.get$_bottomStart().$sub(0, other.get$_bottomStart()), _this.get$_bottomEnd().$sub(0, other.get$_bottomEnd()));
    },
    add$1: function(_, other) {
      var _this = this;
      return new K._MixedBorderRadius(_this.get$_topLeft().$add(0, other.get$_topLeft()), _this.get$_topRight().$add(0, other.get$_topRight()), _this.get$_bottomLeft().$add(0, other.get$_bottomLeft()), _this.get$_bottomRight().$add(0, other.get$_bottomRight()), _this.get$_topStart().$add(0, other.get$_topStart()), _this.get$_topEnd().$add(0, other.get$_topEnd()), _this.get$_bottomStart().$add(0, other.get$_bottomStart()), _this.get$_bottomEnd().$add(0, other.get$_bottomEnd()));
    },
    toString$0: function(_) {
      var visual, t1, comma, logical, _this = this,
        _s18_ = "BorderRadius.only(",
        _s29_ = "BorderRadiusDirectional.only(";
      if (J.$eq$(_this.get$_topLeft(), _this.get$_topRight()) && J.$eq$(_this.get$_topRight(), _this.get$_bottomLeft()) && J.$eq$(_this.get$_bottomLeft(), _this.get$_bottomRight()))
        if (!J.$eq$(_this.get$_topLeft(), C.Radius_0_0))
          visual = _this.get$_topLeft().x == _this.get$_topLeft().y ? "BorderRadius.circular(" + J.toStringAsFixed$1$n(_this.get$_topLeft().x, 1) + ")" : "BorderRadius.all(" + H.S(_this.get$_topLeft()) + ")";
        else
          visual = null;
      else {
        if (!J.$eq$(_this.get$_topLeft(), C.Radius_0_0)) {
          t1 = _s18_ + ("topLeft: " + H.S(_this.get$_topLeft()));
          comma = true;
        } else {
          t1 = _s18_;
          comma = false;
        }
        if (!J.$eq$(_this.get$_topRight(), C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "topRight: " + H.S(_this.get$_topRight());
          comma = true;
        }
        if (!J.$eq$(_this.get$_bottomLeft(), C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomLeft: " + H.S(_this.get$_bottomLeft());
          comma = true;
        }
        if (!J.$eq$(_this.get$_bottomRight(), C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomRight: " + H.S(_this.get$_bottomRight());
        }
        t1 += ")";
        visual = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      if (_this.get$_topStart().$eq(0, _this.get$_topEnd()) && _this.get$_topEnd().$eq(0, _this.get$_bottomEnd()) && _this.get$_bottomEnd().$eq(0, _this.get$_bottomStart()))
        if (!_this.get$_topStart().$eq(0, C.Radius_0_0))
          logical = _this.get$_topStart().x == _this.get$_topStart().y ? "BorderRadiusDirectional.circular(" + J.toStringAsFixed$1$n(_this.get$_topStart().x, 1) + ")" : "BorderRadiusDirectional.all(" + _this.get$_topStart().toString$0(0) + ")";
        else
          logical = null;
      else {
        if (!_this.get$_topStart().$eq(0, C.Radius_0_0)) {
          t1 = _s29_ + ("topStart: " + _this.get$_topStart().toString$0(0));
          comma = true;
        } else {
          t1 = _s29_;
          comma = false;
        }
        if (!_this.get$_topEnd().$eq(0, C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "topEnd: " + _this.get$_topEnd().toString$0(0);
          comma = true;
        }
        if (!_this.get$_bottomStart().$eq(0, C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomStart: " + _this.get$_bottomStart().toString$0(0);
          comma = true;
        }
        if (!_this.get$_bottomEnd().$eq(0, C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomEnd: " + _this.get$_bottomEnd().toString$0(0);
        }
        t1 += ")";
        logical = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      t1 = visual != null;
      if (t1 && logical != null)
        return H.S(visual) + " + " + logical;
      if (t1)
        return visual;
      if (logical != null)
        return logical;
      return "BorderRadius.zero";
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof K.BorderRadiusGeometry && J.$eq$(other.get$_topLeft(), _this.get$_topLeft()) && J.$eq$(other.get$_topRight(), _this.get$_topRight()) && J.$eq$(other.get$_bottomLeft(), _this.get$_bottomLeft()) && J.$eq$(other.get$_bottomRight(), _this.get$_bottomRight()) && other.get$_topStart().$eq(0, _this.get$_topStart()) && other.get$_topEnd().$eq(0, _this.get$_topEnd()) && other.get$_bottomStart().$eq(0, _this.get$_bottomStart()) && other.get$_bottomEnd().$eq(0, _this.get$_bottomEnd());
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.get$_topLeft(), _this.get$_topRight(), _this.get$_bottomLeft(), _this.get$_bottomRight(), _this.get$_topStart(), _this.get$_topEnd(), _this.get$_bottomStart(), _this.get$_bottomEnd(), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  K.BorderRadius.prototype = {
    get$_topLeft: function() {
      return this.topLeft;
    },
    get$_topRight: function() {
      return this.topRight;
    },
    get$_bottomLeft: function() {
      return this.bottomLeft;
    },
    get$_bottomRight: function() {
      return this.bottomRight;
    },
    get$_topStart: function() {
      return C.Radius_0_0;
    },
    get$_topEnd: function() {
      return C.Radius_0_0;
    },
    get$_bottomStart: function() {
      return C.Radius_0_0;
    },
    get$_bottomEnd: function() {
      return C.Radius_0_0;
    },
    toRRect$1: function(rect) {
      var _this = this;
      return P.RRect$fromRectAndCorners(rect, _this.bottomLeft, _this.bottomRight, _this.topLeft, _this.topRight);
    },
    subtract$1: function(other) {
      if (other instanceof K.BorderRadius)
        return this.$sub(0, other);
      return this.super$BorderRadiusGeometry$subtract(other);
    },
    add$1: function(_, other) {
      if (other instanceof K.BorderRadius)
        return this.$add(0, other);
      return this.super$BorderRadiusGeometry$add(0, other);
    },
    $sub: function(_, other) {
      var _this = this;
      return new K.BorderRadius(_this.topLeft.$sub(0, other.topLeft), _this.topRight.$sub(0, other.topRight), _this.bottomLeft.$sub(0, other.bottomLeft), _this.bottomRight.$sub(0, other.bottomRight));
    },
    $add: function(_, other) {
      var _this = this;
      return new K.BorderRadius(_this.topLeft.$add(0, other.topLeft), _this.topRight.$add(0, other.topRight), _this.bottomLeft.$add(0, other.bottomLeft), _this.bottomRight.$add(0, other.bottomRight));
    },
    $mul: function(_, other) {
      var _this = this;
      return new K.BorderRadius(_this.topLeft.$mul(0, other), _this.topRight.$mul(0, other), _this.bottomLeft.$mul(0, other), _this.bottomRight.$mul(0, other));
    },
    resolve$1: function(direction) {
      return this;
    }
  };
  K._MixedBorderRadius.prototype = {
    $mul: function(_, other) {
      var _this = this;
      return new K._MixedBorderRadius(_this._topLeft.$mul(0, other), _this._topRight.$mul(0, other), _this._bottomLeft.$mul(0, other), _this._bottomRight.$mul(0, other), _this._topStart.$mul(0, other), _this._topEnd.$mul(0, other), _this._bottomStart.$mul(0, other), _this._bottomEnd.$mul(0, other));
    },
    resolve$1: function(direction) {
      var _this = this;
      switch (direction) {
        case C.TextDirection_0:
          return new K.BorderRadius(_this._topLeft.$add(0, _this._topEnd), _this._topRight.$add(0, _this._topStart), _this._bottomLeft.$add(0, _this._bottomEnd), _this._bottomRight.$add(0, _this._bottomStart));
        case C.TextDirection_1:
          return new K.BorderRadius(_this._topLeft.$add(0, _this._topStart), _this._topRight.$add(0, _this._topEnd), _this._bottomLeft.$add(0, _this._bottomStart), _this._bottomRight.$add(0, _this._bottomEnd));
      }
      return null;
    },
    get$_topLeft: function() {
      return this._topLeft;
    },
    get$_topRight: function() {
      return this._topRight;
    },
    get$_bottomLeft: function() {
      return this._bottomLeft;
    },
    get$_bottomRight: function() {
      return this._bottomRight;
    },
    get$_topStart: function() {
      return this._topStart;
    },
    get$_topEnd: function() {
      return this._topEnd;
    },
    get$_bottomStart: function() {
      return this._bottomStart;
    },
    get$_bottomEnd: function() {
      return this._bottomEnd;
    }
  };
  Y.BorderStyle.prototype = {
    toString$0: function(_) {
      return this._borders$_name;
    }
  };
  Y.BorderSide.prototype = {
    scale$1: function(_, t) {
      var t1 = Math.max(0, this.width * t),
        t2 = t <= 0 ? C.BorderStyle_0 : this.style;
      return new Y.BorderSide(this.color, t1, t2);
    },
    toPaint$0: function() {
      switch (this.style) {
        case C.BorderStyle_1:
          var t1 = new H.SurfacePaint(new H.SurfacePaintData());
          t1.set$color(0, this.color);
          t1.set$strokeWidth(this.width);
          t1.set$style(0, C.PaintingStyle_1);
          return t1;
        case C.BorderStyle_0:
          t1 = new H.SurfacePaint(new H.SurfacePaintData());
          t1.set$color(0, C.Color_0);
          t1.set$strokeWidth(0);
          t1.set$style(0, C.PaintingStyle_1);
          return t1;
      }
      return null;
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof Y.BorderSide && J.$eq$(other.color, _this.color) && other.width === _this.width && other.style === _this.style;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.color, this.width, this.style, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "BorderSide(" + H.S(this.color) + ", " + C.JSNumber_methods.toStringAsFixed$1(this.width, 1) + ", " + this.style.toString$0(0) + ")";
    }
  };
  Y.ShapeBorder.prototype = {
    add$2$reversed: function(_, other, reversed) {
      return null;
    },
    add$1: function($receiver, other) {
      return this.add$2$reversed($receiver, other, false);
    },
    $add: function(_, other) {
      var t1 = this.add$1(0, other);
      if (t1 == null)
        t1 = other.add$2$reversed(0, this, true);
      return t1 == null ? new Y._CompoundBorder(H.setRuntimeTypeInfo([other, this], type$.JSArray_ShapeBorder)) : t1;
    },
    lerpFrom$2: function(a, t) {
      if (a == null)
        return this.scale$1(0, t);
      return null;
    },
    lerpTo$2: function(b, t) {
      if (b == null)
        return this.scale$1(0, 1 - t);
      return null;
    },
    toString$0: function(_) {
      return "ShapeBorder()";
    }
  };
  Y._CompoundBorder.prototype = {
    get$dimensions: function() {
      return C.JSArray_methods.fold$2(this.borders, C.EdgeInsets_0_0_0_0, new Y._CompoundBorder_dimensions_closure());
    },
    add$2$reversed: function(_, other, reversed) {
      var t2, ours, merged, t3, _i, t4,
        t1 = other instanceof Y._CompoundBorder;
      if (!t1) {
        t2 = this.borders;
        ours = reversed ? C.JSArray_methods.get$last(t2) : C.JSArray_methods.get$first(t2);
        merged = ours.add$2$reversed(0, other, reversed);
        if (merged == null)
          merged = other.add$2$reversed(0, ours, !reversed);
        if (merged != null) {
          t1 = H.setRuntimeTypeInfo([], type$.JSArray_ShapeBorder);
          for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
            t1.push(t2[_i]);
          t1[reversed ? t1.length - 1 : 0] = merged;
          return new Y._CompoundBorder(t1);
        }
      }
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_ShapeBorder);
      if (reversed) {
        for (t3 = this.borders, t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)
          t2.push(t3[_i]);
        reversed = true;
      }
      if (t1)
        for (t1 = other.borders, t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t2.push(t1[_i]);
      else
        t2.push(other);
      if (!reversed)
        for (t1 = this.borders, t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t2.push(t1[_i]);
      return new Y._CompoundBorder(t2);
    },
    add$1: function($receiver, other) {
      return this.add$2$reversed($receiver, other, false);
    },
    scale$1: function(_, t) {
      var t1 = this.borders;
      return new Y._CompoundBorder(new H.MappedListIterable(t1, new Y._CompoundBorder_scale_closure(t), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ShapeBorder>")).toList$0(0));
    },
    lerpFrom$2: function(a, t) {
      return Y._CompoundBorder_lerp(a, this, t);
    },
    lerpTo$2: function(b, t) {
      return Y._CompoundBorder_lerp(this, b, t);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      return C.JSArray_methods.get$first(this.borders).getOuterPath$2$textDirection(rect, textDirection);
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var t1, t2, _i, border;
      for (t1 = this.borders, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        border = t1[_i];
        border.paint$3$textDirection(canvas, rect, textDirection);
        rect = border.get$dimensions().resolve$1(textDirection).deflateRect$1(rect);
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof Y._CompoundBorder && S.listEquals(other.borders, this.borders);
    },
    get$hashCode: function(_) {
      return P.hashList(this.borders);
    },
    toString$0: function(_) {
      var t1 = this.borders,
        t2 = H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>");
      return new H.MappedListIterable(new H.ReversedListIterable(t1, t2), new Y._CompoundBorder_toString_closure(), t2._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, " + ");
    }
  };
  Y._CompoundBorder_dimensions_closure.prototype = {
    call$2: function(previousValue, border) {
      return previousValue.add$1(0, border.get$dimensions());
    }
  };
  Y._CompoundBorder_scale_closure.prototype = {
    call$1: function(border) {
      return border.scale$1(0, this.t);
    }
  };
  Y._CompoundBorder_toString_closure.prototype = {
    call$1: function(border) {
      return J.toString$0$(border);
    }
  };
  F.BoxShape.prototype = {
    toString$0: function(_) {
      return this._box_border$_name;
    }
  };
  F.BoxBorder.prototype = {
    add$2$reversed: function(_, other, reversed) {
      return null;
    },
    add$1: function($receiver, other) {
      return this.add$2$reversed($receiver, other, false);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      var t1 = P.Path_Path();
      t1.addRect$1(rect);
      return t1;
    }
  };
  F.Border.prototype = {
    get$dimensions: function() {
      var _this = this;
      return new V.EdgeInsets(_this.left.width, _this.top.width, _this.right.width, _this.bottom.width);
    },
    get$isUniform: function() {
      var topWidth, topStyle, _this = this,
        t1 = _this.top,
        topColor = t1.color,
        t2 = _this.right;
      if (!J.$eq$(t2.color, topColor) || !J.$eq$(_this.bottom.color, topColor) || !J.$eq$(_this.left.color, topColor))
        return false;
      topWidth = t1.width;
      if (t2.width !== topWidth || _this.bottom.width !== topWidth || _this.left.width !== topWidth)
        return false;
      topStyle = t1.style;
      if (t2.style !== topStyle || _this.bottom.style !== topStyle || _this.left.style !== topStyle)
        return false;
      return true;
    },
    add$2$reversed: function(_, other, reversed) {
      var _this = this;
      if (other instanceof F.Border && Y.BorderSide_canMerge(_this.top, other.top) && Y.BorderSide_canMerge(_this.right, other.right) && Y.BorderSide_canMerge(_this.bottom, other.bottom) && Y.BorderSide_canMerge(_this.left, other.left))
        return new F.Border(Y.BorderSide_merge(_this.top, other.top), Y.BorderSide_merge(_this.right, other.right), Y.BorderSide_merge(_this.bottom, other.bottom), Y.BorderSide_merge(_this.left, other.left));
      return null;
    },
    add$1: function($receiver, other) {
      return this.add$2$reversed($receiver, other, false);
    },
    scale$1: function(_, t) {
      var _this = this;
      return new F.Border(_this.top.scale$1(0, t), _this.right.scale$1(0, t), _this.bottom.scale$1(0, t), _this.left.scale$1(0, t));
    },
    lerpFrom$2: function(a, t) {
      if (a instanceof F.Border)
        return F.Border_lerp(a, this, t);
      return this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      if (b instanceof F.Border)
        return F.Border_lerp(this, b, t);
      return this.super$ShapeBorder$lerpTo(b, t);
    },
    paint$5$borderRadius$shape$textDirection: function(canvas, rect, borderRadius, shape, textDirection) {
      var t1, _this = this;
      if (_this.get$isUniform()) {
        t1 = _this.top;
        switch (t1.style) {
          case C.BorderStyle_0:
            return;
          case C.BorderStyle_1:
            switch (shape) {
              case C.BoxShape_1:
                F.BoxBorder__paintUniformBorderWithCircle(canvas, rect, t1);
                break;
              case C.BoxShape_0:
                if (borderRadius != null) {
                  F.BoxBorder__paintUniformBorderWithRadius(canvas, rect, t1, borderRadius);
                  return;
                }
                F.BoxBorder__paintUniformBorderWithRectangle(canvas, rect, t1);
                break;
            }
            return;
        }
      }
      Y.paintBorder(canvas, rect, _this.bottom, _this.left, _this.right, _this.top);
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      return this.paint$5$borderRadius$shape$textDirection(canvas, rect, null, C.BoxShape_0, textDirection);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof F.Border && other.top.$eq(0, _this.top) && other.right.$eq(0, _this.right) && other.bottom.$eq(0, _this.bottom) && other.left.$eq(0, _this.left);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.top, _this.right, _this.bottom, _this.left, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1, t2, _this = this;
      if (_this.get$isUniform())
        return "Border.all(" + _this.top.toString$0(0) + ")";
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_String);
      t2 = _this.top;
      if (!t2.$eq(0, C.BorderSide_m7u))
        t1.push("top: " + t2.toString$0(0));
      t2 = _this.right;
      if (!t2.$eq(0, C.BorderSide_m7u))
        t1.push("right: " + t2.toString$0(0));
      t2 = _this.bottom;
      if (!t2.$eq(0, C.BorderSide_m7u))
        t1.push("bottom: " + t2.toString$0(0));
      t2 = _this.left;
      if (!t2.$eq(0, C.BorderSide_m7u))
        t1.push("left: " + t2.toString$0(0));
      return "Border(" + C.JSArray_methods.join$1(t1, ", ") + ")";
    }
  };
  F.BorderDirectional.prototype = {
    get$dimensions: function() {
      var _this = this;
      return new V.EdgeInsetsDirectional(_this.start.width, _this.top.width, _this.end.width, _this.bottom.width);
    },
    get$isUniform: function() {
      var topWidth, topStyle, _this = this,
        t1 = _this.top,
        topColor = t1.color,
        t2 = _this.start;
      if (!J.$eq$(t2.color, topColor) || !J.$eq$(_this.end.color, topColor) || !J.$eq$(_this.bottom.color, topColor))
        return false;
      topWidth = t1.width;
      if (t2.width !== topWidth || _this.end.width !== topWidth || _this.bottom.width !== topWidth)
        return false;
      topStyle = t1.style;
      if (t2.style !== topStyle || _this.end.style !== topStyle || _this.bottom.style !== topStyle)
        return false;
      return true;
    },
    add$2$reversed: function(_, other, reversed) {
      var t1, t2, t3, _this = this, _null = null;
      if (other instanceof F.BorderDirectional) {
        t1 = _this.top;
        t2 = other.top;
        if (Y.BorderSide_canMerge(t1, t2) && Y.BorderSide_canMerge(_this.start, other.start) && Y.BorderSide_canMerge(_this.end, other.end) && Y.BorderSide_canMerge(_this.bottom, other.bottom))
          return new F.BorderDirectional(Y.BorderSide_merge(t1, t2), Y.BorderSide_merge(_this.start, other.start), Y.BorderSide_merge(_this.end, other.end), Y.BorderSide_merge(_this.bottom, other.bottom));
        return _null;
      }
      if (other instanceof F.Border) {
        t1 = other.top;
        t2 = _this.top;
        if (!Y.BorderSide_canMerge(t1, t2) || !Y.BorderSide_canMerge(other.bottom, _this.bottom))
          return _null;
        t3 = _this.start;
        if (!t3.$eq(0, C.BorderSide_m7u) || !_this.end.$eq(0, C.BorderSide_m7u)) {
          if (!other.left.$eq(0, C.BorderSide_m7u) || !other.right.$eq(0, C.BorderSide_m7u))
            return _null;
          return new F.BorderDirectional(Y.BorderSide_merge(t1, t2), t3, _this.end, Y.BorderSide_merge(other.bottom, _this.bottom));
        }
        return new F.Border(Y.BorderSide_merge(t1, t2), other.right, Y.BorderSide_merge(other.bottom, _this.bottom), other.left);
      }
      return _null;
    },
    add$1: function($receiver, other) {
      return this.add$2$reversed($receiver, other, false);
    },
    scale$1: function(_, t) {
      var _this = this;
      return new F.BorderDirectional(_this.top.scale$1(0, t), _this.start.scale$1(0, t), _this.end.scale$1(0, t), _this.bottom.scale$1(0, t));
    },
    lerpFrom$2: function(a, t) {
      if (a instanceof F.BorderDirectional)
        return F.BorderDirectional_lerp(a, this, t);
      return this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      if (b instanceof F.BorderDirectional)
        return F.BorderDirectional_lerp(this, b, t);
      return this.super$ShapeBorder$lerpTo(b, t);
    },
    paint$5$borderRadius$shape$textDirection: function(canvas, rect, borderRadius, shape, textDirection) {
      var t1, left, right, _this = this;
      if (_this.get$isUniform()) {
        t1 = _this.top;
        switch (t1.style) {
          case C.BorderStyle_0:
            return;
          case C.BorderStyle_1:
            switch (shape) {
              case C.BoxShape_1:
                F.BoxBorder__paintUniformBorderWithCircle(canvas, rect, t1);
                break;
              case C.BoxShape_0:
                if (borderRadius != null) {
                  F.BoxBorder__paintUniformBorderWithRadius(canvas, rect, t1, borderRadius);
                  return;
                }
                F.BoxBorder__paintUniformBorderWithRectangle(canvas, rect, t1);
                break;
            }
            return;
        }
      }
      switch (textDirection) {
        case C.TextDirection_0:
          left = _this.end;
          right = _this.start;
          break;
        case C.TextDirection_1:
          left = _this.start;
          right = _this.end;
          break;
        default:
          left = null;
          right = null;
      }
      Y.paintBorder(canvas, rect, _this.bottom, left, right, _this.top);
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      return this.paint$5$borderRadius$shape$textDirection(canvas, rect, null, C.BoxShape_0, textDirection);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof F.BorderDirectional && other.top.$eq(0, _this.top) && other.start.$eq(0, _this.start) && other.end.$eq(0, _this.end) && other.bottom.$eq(0, _this.bottom);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.top, _this.start, _this.end, _this.bottom, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_String),
        t2 = _this.top;
      if (!t2.$eq(0, C.BorderSide_m7u))
        t1.push("top: " + t2.toString$0(0));
      t2 = _this.start;
      if (!t2.$eq(0, C.BorderSide_m7u))
        t1.push("start: " + t2.toString$0(0));
      t2 = _this.end;
      if (!t2.$eq(0, C.BorderSide_m7u))
        t1.push("end: " + t2.toString$0(0));
      t2 = _this.bottom;
      if (!t2.$eq(0, C.BorderSide_m7u))
        t1.push("bottom: " + t2.toString$0(0));
      return "BorderDirectional(" + C.JSArray_methods.join$1(t1, ", ") + ")";
    }
  };
  S.BoxDecoration.prototype = {
    get$padding: function(_) {
      var t1 = this.border;
      return t1 == null ? null : t1.get$dimensions();
    },
    scale$1: function(_, factor) {
      var _this = this, _null = null,
        t1 = P.Color_lerp(_null, _this.color, factor),
        t2 = F.BoxBorder_lerp(_null, _this.border, factor),
        t3 = K.BorderRadiusGeometry_lerp(_null, _this.borderRadius, factor),
        t4 = O.BoxShadow_lerpList(_null, _this.boxShadow, factor);
      return S.BoxDecoration$(t2, t3, t4, t1, _null, _this.image, _this.shape);
    },
    get$isComplex: function() {
      return this.boxShadow != null;
    },
    lerpFrom$2: function(a, t) {
      if (a == null)
        return this.scale$1(0, t);
      if (a instanceof S.BoxDecoration)
        return S.BoxDecoration_lerp(a, this, t);
      return this.super$Decoration$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      if (b == null)
        return this.scale$1(0, 1 - t);
      if (b instanceof S.BoxDecoration)
        return S.BoxDecoration_lerp(this, b, t);
      return this.super$Decoration$lerpTo(b, t);
    },
    $eq: function(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof S.BoxDecoration)
        if (J.$eq$(other.color, _this.color))
          if (J.$eq$(other.border, _this.border))
            if (J.$eq$(other.borderRadius, _this.borderRadius)) {
              t1 = other.boxShadow;
              t2 = _this.boxShadow;
              if (t1 == null ? t2 == null : t1 === t2)
                t1 = other.shape === _this.shape;
              else
                t1 = false;
            } else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.color, _this.image, _this.border, _this.borderRadius, _this.boxShadow, _this.gradient, _this.shape, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    hitTest$3$textDirection: function(size, position, textDirection) {
      var t1, distance, t2;
      switch (this.shape) {
        case C.BoxShape_0:
          t1 = this.borderRadius;
          if (t1 != null)
            return t1.resolve$1(textDirection).toRRect$1(new P.Rect(0, 0, 0 + size._dx, 0 + size._dy)).contains$1(0, position);
          return true;
        case C.BoxShape_1:
          distance = position.$sub(0, size.center$1(C.Offset_0_0)).get$distance();
          t1 = size._dx;
          t2 = size._dy;
          return distance <= Math.min(H.checkNum(t1), H.checkNum(t2)) / 2;
      }
      return null;
    },
    createBoxPainter$1: function(onChanged) {
      return new S._BoxDecorationPainter(this, onChanged);
    }
  };
  S._BoxDecorationPainter.prototype = {
    _paintBox$4: function(canvas, rect, paint, textDirection) {
      var t1 = this._box_decoration$_decoration;
      switch (t1.shape) {
        case C.BoxShape_1:
          canvas.drawCircle$3(rect.get$center(), rect.get$shortestSide() / 2, paint);
          break;
        case C.BoxShape_0:
          t1 = t1.borderRadius;
          if (t1 == null)
            canvas.drawRect$2(rect, paint);
          else
            canvas.drawRRect$2(t1.resolve$1(textDirection).toRRect$1(rect), paint);
          break;
      }
    },
    _paintShadows$3: function(canvas, rect, textDirection) {
      var t2, _i, boxShadow, result, t3, t4,
        t1 = this._box_decoration$_decoration.boxShadow;
      if (t1 == null)
        return;
      for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        boxShadow = t1[_i];
        result = new H.SurfacePaint(new H.SurfacePaintData());
        result.set$color(0, boxShadow.color);
        result.set$maskFilter(new P.MaskFilter(C.BlurStyle_0, boxShadow.blurRadius * 0.57735 + 0.5));
        t3 = rect.shift$1(boxShadow.offset);
        t4 = boxShadow.spreadRadius;
        this._paintBox$4(canvas, new P.Rect(t3.left - t4, t3.top - t4, t3.right + t4, t3.bottom + t4), result, textDirection);
      }
    },
    _paintBackgroundImage$3: function(canvas, rect, configuration) {
      return;
    },
    dispose$0: function() {
      this.super$BoxPainter$dispose();
    },
    paint$3: function(canvas, offset, configuration) {
      var t4, t5, paint, _this = this,
        t1 = configuration.size,
        t2 = offset._dx,
        t3 = offset._dy,
        rect = new P.Rect(t2, t3, t2 + t1._dx, t3 + t1._dy),
        textDirection = configuration.textDirection;
      _this._paintShadows$3(canvas, rect, textDirection);
      t1 = _this._box_decoration$_decoration;
      t2 = t1.color;
      t3 = t2 == null;
      if (!t3 || false) {
        t4 = _this._cachedBackgroundPaint;
        if (t4 != null)
          t5 = false;
        else
          t5 = true;
        if (t5) {
          paint = new H.SurfacePaint(new H.SurfacePaintData());
          if (!t3)
            paint.set$color(0, t2);
          _this._cachedBackgroundPaint = paint;
          t2 = paint;
        } else
          t2 = t4;
        _this._paintBox$4(canvas, rect, t2, textDirection);
      }
      _this._paintBackgroundImage$3(canvas, rect, configuration);
      t2 = t1.border;
      if (t2 != null)
        t2.paint$5$borderRadius$shape$textDirection(canvas, rect, type$.BorderRadius._as(t1.borderRadius), t1.shape, textDirection);
    },
    toString$0: function(_) {
      return "BoxPainter for " + this._box_decoration$_decoration.toString$0(0);
    }
  };
  O.BoxShadow.prototype = {
    scale$1: function(_, factor) {
      var _this = this;
      return new O.BoxShadow(_this.spreadRadius * factor, _this.color, _this.offset.$mul(0, factor), _this.blurRadius * factor);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof O.BoxShadow && J.$eq$(other.color, _this.color) && J.$eq$(other.offset, _this.offset) && other.blurRadius == _this.blurRadius && other.spreadRadius == _this.spreadRadius;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.color, _this.offset, _this.blurRadius, _this.spreadRadius, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this;
      return "BoxShadow(" + H.S(_this.color) + ", " + H.S(_this.offset) + ", " + E.debugFormatDouble(_this.blurRadius) + ", " + E.debugFormatDouble(_this.spreadRadius) + ")";
    }
  };
  X.CircleBorder.prototype = {
    get$dimensions: function() {
      var t1 = this.side.width;
      return new V.EdgeInsets(t1, t1, t1, t1);
    },
    scale$1: function(_, t) {
      return new X.CircleBorder(this.side.scale$1(0, t));
    },
    lerpFrom$2: function(a, t) {
      if (a instanceof X.CircleBorder)
        return new X.CircleBorder(Y.BorderSide_lerp(a.side, this.side, t));
      return this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      if (b instanceof X.CircleBorder)
        return new X.CircleBorder(Y.BorderSide_lerp(this.side, b.side, t));
      return this.super$ShapeBorder$lerpTo(b, t);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      var t1 = P.Path_Path();
      t1.addOval$1(P.Rect$fromCircle(rect.get$center(), rect.get$shortestSide() / 2));
      return t1;
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          canvas.drawCircle$3(rect.get$center(), (rect.get$shortestSide() - t1.width) / 2, t1.toPaint$0());
          break;
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof X.CircleBorder && other.side.$eq(0, this.side);
    },
    get$hashCode: function(_) {
      var t1 = this.side;
      return P.hashValues(t1.color, t1.width, t1.style, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "CircleBorder(" + this.side.toString$0(0) + ")";
    }
  };
  Z.ClipContext.prototype = {
    _clipAndPaint$4: function(canvasClipCall, clipBehavior, bounds, painter) {
      var t1, _this = this;
      _this.get$canvas(_this).save$0(0);
      switch (clipBehavior) {
        case C.Clip_0:
          break;
        case C.Clip_1:
          canvasClipCall.call$1(false);
          break;
        case C.Clip_2:
          canvasClipCall.call$1(true);
          break;
        case C.Clip_3:
          canvasClipCall.call$1(true);
          t1 = _this.get$canvas(_this);
          t1.saveLayer$2(bounds, new H.SurfacePaint(new H.SurfacePaintData()));
          break;
      }
      painter.call$0();
      if (clipBehavior === C.Clip_3)
        _this.get$canvas(_this).restore$0(0);
      _this.get$canvas(_this).restore$0(0);
    },
    clipPathAndPaint$4: function(path, clipBehavior, bounds, painter) {
      this._clipAndPaint$4(new Z.ClipContext_clipPathAndPaint_closure(this, path), clipBehavior, bounds, painter);
    },
    clipRectAndPaint$4: function(rect, clipBehavior, bounds, painter) {
      this._clipAndPaint$4(new Z.ClipContext_clipRectAndPaint_closure(this, rect), clipBehavior, bounds, painter);
    }
  };
  Z.ClipContext_clipPathAndPaint_closure.prototype = {
    call$1: function(doAntiAias) {
      var t1 = this.$this;
      return t1.get$canvas(t1).clipPath$2$doAntiAlias(0, this.path, doAntiAias);
    }
  };
  Z.ClipContext_clipRectAndPaint_closure.prototype = {
    call$1: function(doAntiAias) {
      var t1 = this.$this;
      return t1.get$canvas(t1).clipRect$2$doAntiAlias(this.rect, doAntiAias);
    }
  };
  E.ColorSwatch.prototype = {
    $index: function(_, index) {
      return this._swatch.$index(0, index);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return _this.super$Color$$eq(0, other) && H._instanceType(_this)._eval$1("ColorSwatch<ColorSwatch.T>")._is(other) && other._swatch === _this._swatch;
    },
    get$hashCode: function(_) {
      return P.hashValues(H.getRuntimeType(this), this.value, this._swatch, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "ColorSwatch(primary value: " + this.super$Color$toString(0) + ")";
    }
  };
  Z.Decoration.prototype = {
    toStringShort$0: function() {
      return "Decoration";
    },
    get$padding: function(_) {
      return C.EdgeInsets_0_0_0_0;
    },
    get$isComplex: function() {
      return false;
    },
    lerpFrom$2: function(a, t) {
      return null;
    },
    lerpTo$2: function(b, t) {
      return null;
    },
    hitTest$3$textDirection: function(size, position, textDirection) {
      return true;
    }
  };
  Z.BoxPainter.prototype = {
    dispose$0: function() {
    }
  };
  Z._Decoration_Object_Diagnosticable.prototype = {};
  V.EdgeInsetsGeometry.prototype = {
    get$horizontal: function() {
      var _this = this;
      return _this.get$_left(_this) + _this.get$_right(_this) + _this.get$_edge_insets$_start(_this) + _this.get$_edge_insets$_end();
    },
    along$1: function(axis) {
      var _this = this;
      switch (axis) {
        case C.Axis_0:
          return _this.get$horizontal();
        case C.Axis_1:
          return _this.get$_top(_this) + _this.get$_bottom(_this);
      }
      return null;
    },
    add$1: function(_, other) {
      var _this = this;
      return new V._MixedEdgeInsets(_this.get$_left(_this) + other.get$_left(other), _this.get$_right(_this) + other.get$_right(other), _this.get$_edge_insets$_start(_this) + other.get$_edge_insets$_start(other), _this.get$_edge_insets$_end() + other.get$_edge_insets$_end(), _this.get$_top(_this) + other.get$_top(other), _this.get$_bottom(_this) + other.get$_bottom(other));
    },
    clamp$2: function(_, min, max) {
      var _this = this;
      return new V._MixedEdgeInsets(J.clamp$2$n(_this.get$_left(_this), min.left, max._left), J.clamp$2$n(_this.get$_right(_this), min.right, max._right), J.clamp$2$n(_this.get$_edge_insets$_start(_this), 0, max._edge_insets$_start), J.clamp$2$n(_this.get$_edge_insets$_end(), 0, max._edge_insets$_end), J.clamp$2$n(_this.get$_top(_this), min.top, max._top), J.clamp$2$n(_this.get$_bottom(_this), min.bottom, max._bottom));
    },
    toString$0: function(_) {
      var _this = this;
      if (_this.get$_edge_insets$_start(_this) === 0 && _this.get$_edge_insets$_end() === 0) {
        if (_this.get$_left(_this) === 0 && _this.get$_right(_this) === 0 && _this.get$_top(_this) === 0 && _this.get$_bottom(_this) === 0)
          return "EdgeInsets.zero";
        if (_this.get$_left(_this) == _this.get$_right(_this) && _this.get$_right(_this) == _this.get$_top(_this) && _this.get$_top(_this) == _this.get$_bottom(_this))
          return "EdgeInsets.all(" + J.toStringAsFixed$1$n(_this.get$_left(_this), 1) + ")";
        return "EdgeInsets(" + J.toStringAsFixed$1$n(_this.get$_left(_this), 1) + ", " + J.toStringAsFixed$1$n(_this.get$_top(_this), 1) + ", " + J.toStringAsFixed$1$n(_this.get$_right(_this), 1) + ", " + J.toStringAsFixed$1$n(_this.get$_bottom(_this), 1) + ")";
      }
      if (_this.get$_left(_this) === 0 && _this.get$_right(_this) === 0)
        return "EdgeInsetsDirectional(" + J.toStringAsFixed$1$n(_this.get$_edge_insets$_start(_this), 1) + ", " + J.toStringAsFixed$1$n(_this.get$_top(_this), 1) + ", " + J.toStringAsFixed$1$n(_this.get$_edge_insets$_end(), 1) + ", " + J.toStringAsFixed$1$n(_this.get$_bottom(_this), 1) + ")";
      return "EdgeInsets(" + J.toStringAsFixed$1$n(_this.get$_left(_this), 1) + ", " + J.toStringAsFixed$1$n(_this.get$_top(_this), 1) + ", " + J.toStringAsFixed$1$n(_this.get$_right(_this), 1) + ", " + J.toStringAsFixed$1$n(_this.get$_bottom(_this), 1) + ") + EdgeInsetsDirectional(" + J.toStringAsFixed$1$n(_this.get$_edge_insets$_start(_this), 1) + ", 0.0, " + J.toStringAsFixed$1$n(_this.get$_edge_insets$_end(), 1) + ", 0.0)";
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof V.EdgeInsetsGeometry && other.get$_left(other) == _this.get$_left(_this) && other.get$_right(other) == _this.get$_right(_this) && other.get$_edge_insets$_start(other) == _this.get$_edge_insets$_start(_this) && other.get$_edge_insets$_end() == _this.get$_edge_insets$_end() && other.get$_top(other) == _this.get$_top(_this) && other.get$_bottom(other) == _this.get$_bottom(_this);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.get$_left(_this), _this.get$_right(_this), _this.get$_edge_insets$_start(_this), _this.get$_edge_insets$_end(), _this.get$_top(_this), _this.get$_bottom(_this), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  V.EdgeInsets.prototype = {
    get$_left: function(_) {
      return this.left;
    },
    get$_top: function(_) {
      return this.top;
    },
    get$_right: function(_) {
      return this.right;
    },
    get$_bottom: function(_) {
      return this.bottom;
    },
    get$_edge_insets$_start: function(_) {
      return 0;
    },
    get$_edge_insets$_end: function() {
      return 0;
    },
    deflateRect$1: function(rect) {
      var _this = this;
      return new P.Rect(rect.left + _this.left, rect.top + _this.top, rect.right - _this.right, rect.bottom - _this.bottom);
    },
    add$1: function(_, other) {
      if (other instanceof V.EdgeInsets)
        return this.$add(0, other);
      return this.super$EdgeInsetsGeometry$add(0, other);
    },
    clamp$2: function(_, min, max) {
      var _this = this;
      return new V.EdgeInsets(J.clamp$2$n(_this.left, min.left, max._left), J.clamp$2$n(_this.top, min.top, max._top), J.clamp$2$n(_this.right, min.right, max._right), J.clamp$2$n(_this.bottom, min.bottom, max._bottom));
    },
    $sub: function(_, other) {
      var _this = this;
      return new V.EdgeInsets(_this.left - other.left, _this.top - other.top, _this.right - other.right, _this.bottom - other.bottom);
    },
    $add: function(_, other) {
      var _this = this;
      return new V.EdgeInsets(_this.left + other.left, _this.top + other.top, _this.right + other.right, _this.bottom + other.bottom);
    },
    $mul: function(_, other) {
      var _this = this;
      return new V.EdgeInsets(_this.left * other, _this.top * other, _this.right * other, _this.bottom * other);
    },
    resolve$1: function(direction) {
      return this;
    },
    copyWith$4$bottom$left$right$top: function(bottom, left, right, $top) {
      var _this = this,
        t1 = left == null ? _this.left : left,
        t2 = $top == null ? _this.top : $top,
        t3 = right == null ? _this.right : right;
      return new V.EdgeInsets(t1, t2, t3, bottom == null ? _this.bottom : bottom);
    },
    copyWith$1$bottom: function(bottom) {
      return this.copyWith$4$bottom$left$right$top(bottom, null, null, null);
    },
    copyWith$2$bottom$top: function(bottom, $top) {
      return this.copyWith$4$bottom$left$right$top(bottom, null, null, $top);
    },
    copyWith$2$left$right: function(left, right) {
      return this.copyWith$4$bottom$left$right$top(null, left, right, null);
    }
  };
  V.EdgeInsetsDirectional.prototype = {
    get$_edge_insets$_start: function(_) {
      return this.start;
    },
    get$_top: function(_) {
      return this.top;
    },
    get$_edge_insets$_end: function() {
      return this.end;
    },
    get$_bottom: function(_) {
      return this.bottom;
    },
    get$_left: function(_) {
      return 0;
    },
    get$_right: function(_) {
      return 0;
    },
    add$1: function(_, other) {
      if (other instanceof V.EdgeInsetsDirectional)
        return this.$add(0, other);
      return this.super$EdgeInsetsGeometry$add(0, other);
    },
    $sub: function(_, other) {
      var _this = this;
      return new V.EdgeInsetsDirectional(_this.start - other.start, _this.top - other.top, _this.end - other.end, _this.bottom - other.bottom);
    },
    $add: function(_, other) {
      var _this = this;
      return new V.EdgeInsetsDirectional(_this.start + other.start, _this.top + other.top, _this.end + other.end, _this.bottom + other.bottom);
    },
    $mul: function(_, other) {
      var _this = this;
      return new V.EdgeInsetsDirectional(_this.start * other, _this.top * other, _this.end * other, _this.bottom * other);
    },
    resolve$1: function(direction) {
      var _this = this;
      switch (direction) {
        case C.TextDirection_0:
          return new V.EdgeInsets(_this.end, _this.top, _this.start, _this.bottom);
        case C.TextDirection_1:
          return new V.EdgeInsets(_this.start, _this.top, _this.end, _this.bottom);
      }
      return null;
    }
  };
  V._MixedEdgeInsets.prototype = {
    $mul: function(_, other) {
      var _this = this;
      return new V._MixedEdgeInsets(_this._left * other, _this._right * other, _this._edge_insets$_start * other, _this._edge_insets$_end * other, _this._top * other, _this._bottom * other);
    },
    resolve$1: function(direction) {
      var _this = this;
      switch (direction) {
        case C.TextDirection_0:
          return new V.EdgeInsets(_this._edge_insets$_end + _this._left, _this._top, _this._edge_insets$_start + _this._right, _this._bottom);
        case C.TextDirection_1:
          return new V.EdgeInsets(_this._edge_insets$_start + _this._left, _this._top, _this._edge_insets$_end + _this._right, _this._bottom);
      }
      return null;
    },
    get$_left: function(receiver) {
      return this._left;
    },
    get$_right: function(receiver) {
      return this._right;
    },
    get$_edge_insets$_start: function(receiver) {
      return this._edge_insets$_start;
    },
    get$_edge_insets$_end: function() {
      return this._edge_insets$_end;
    },
    get$_top: function(receiver) {
      return this._top;
    },
    get$_bottom: function(receiver) {
      return this._bottom;
    }
  };
  T._ColorsAndStops.prototype = {};
  T._sample_closure.prototype = {
    call$1: function(s) {
      return s <= this.t;
    }
  };
  T._interpolateColorsAndStops_closure.prototype = {
    call$1: function($stop) {
      var _this = this;
      return P.Color_lerp(T._sample(_this.aColors, _this.aStops, $stop), T._sample(_this.bColors, _this.bStops, $stop), _this.t);
    }
  };
  T.Gradient.prototype = {
    _impliedStops$0: function() {
      return this.stops;
    }
  };
  T.LinearGradient.prototype = {
    scale$1: function(_, factor) {
      var _this = this,
        t1 = _this.colors;
      return T.LinearGradient$(_this.begin, new H.MappedListIterable(t1, new T.LinearGradient_scale_closure(factor), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Color>")).toList$0(0), _this.end, _this.stops, _this.tileMode);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof T.LinearGradient && J.$eq$(other.begin, _this.begin) && J.$eq$(other.end, _this.end) && other.tileMode === _this.tileMode && S.listEquals(other.colors, _this.colors) && S.listEquals(other.stops, _this.stops);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.begin, _this.end, _this.tileMode, P.hashList(_this.colors), P.hashList(_this.stops), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this;
      return "LinearGradient(" + H.S(_this.begin) + ", " + H.S(_this.end) + ", " + H.S(_this.colors) + ", " + H.S(_this.stops) + ", " + _this.tileMode.toString$0(0) + ")";
    }
  };
  T.LinearGradient_scale_closure.prototype = {
    call$1: function(color) {
      return P.Color_lerp(null, color, this.factor);
    }
  };
  E.ImageCache.prototype = {
    clear$0: function(_) {
      var _this = this,
        t1 = _this._pendingImages,
        t2 = _this._image_cache$_cache,
        t3 = _this._liveImages;
      P.Timeline_instantSync("ImageCache.clear", P.LinkedHashMap_LinkedHashMap$_literal(["pendingImages", t1.get$length(t1), "keepAliveImages", t2.get$length(t2), "liveImages", t3.get$length(t3), "currentSizeInBytes", _this._currentSizeBytes], type$.String, type$.dynamic));
      t2.clear$0(0);
      t1.clear$0(0);
      _this._currentSizeBytes = 0;
    }
  };
  E._CachedImage.prototype = {};
  E._LiveImage.prototype = {};
  E._PendingImage.prototype = {};
  M.ImageConfiguration.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof M.ImageConfiguration && other.bundle == _this.bundle && other.devicePixelRatio == _this.devicePixelRatio && J.$eq$(other.locale, _this.locale) && other.textDirection == _this.textDirection && J.$eq$(other.size, _this.size) && other.platform == _this.platform;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.bundle, _this.devicePixelRatio, _this.locale, _this.size, _this.platform, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var hasArguments, t2, _this = this,
        _s19_ = "ImageConfiguration(",
        t1 = _this.bundle;
      if (t1 != null) {
        t1 = _s19_ + ("bundle: " + t1.toString$0(0));
        hasArguments = true;
      } else {
        t1 = _s19_;
        hasArguments = false;
      }
      t2 = _this.devicePixelRatio;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("devicePixelRatio: " + C.JSNumber_methods.toStringAsFixed$1(t2, 1));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.locale;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("locale: " + t2.toString$0(0));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.textDirection;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("textDirection: " + t2.toString$0(0));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.size;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("size: " + t2.toString$0(0));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.platform;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("platform: " + Y.describeEnum(t2));
        t1 = t2;
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  G.Accumulator.prototype = {};
  G.InlineSpanSemanticsInformation.prototype = {
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof G.InlineSpanSemanticsInformation)
        if (other.text == this.text)
          if (other.semanticsLabel == this.semanticsLabel)
            t1 = true;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.text, this.semanticsLabel, this.recognizer, false, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "InlineSpanSemanticsInformation{text: " + H.S(this.text) + ", semanticsLabel: " + H.S(this.semanticsLabel) + ", recognizer: " + H.S(this.recognizer) + "}";
    }
  };
  G.InlineSpan.prototype = {
    getSpanForPosition$1: function(position) {
      var t1 = {};
      t1.result = null;
      this.visitChildren$1(new G.InlineSpan_getSpanForPosition_closure(t1, position, new G.Accumulator()));
      return t1.result;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof G.InlineSpan && J.$eq$(other.style, this.style);
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this.style);
    }
  };
  G.InlineSpan_getSpanForPosition_closure.prototype = {
    call$1: function(span) {
      var result = span.getSpanForPositionVisitor$2(this.position, this.offset);
      this._box_0.result = result;
      return result == null;
    }
  };
  S.PlaceholderSpan.prototype = {};
  X.RoundedRectangleBorder.prototype = {
    get$dimensions: function() {
      var t1 = this.side.width;
      return new V.EdgeInsets(t1, t1, t1, t1);
    },
    scale$1: function(_, t) {
      return new X.RoundedRectangleBorder(this.side.scale$1(0, t), this.borderRadius.$mul(0, t));
    },
    lerpFrom$2: function(a, t) {
      var _this = this;
      if (a instanceof X.RoundedRectangleBorder)
        return new X.RoundedRectangleBorder(Y.BorderSide_lerp(a.side, _this.side, t), K.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t));
      if (a instanceof X.CircleBorder)
        return new X._RoundedRectangleToCircleBorder(Y.BorderSide_lerp(a.side, _this.side, t), _this.borderRadius, 1 - t);
      return _this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      var _this = this;
      if (b instanceof X.RoundedRectangleBorder)
        return new X.RoundedRectangleBorder(Y.BorderSide_lerp(_this.side, b.side, t), K.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t));
      if (b instanceof X.CircleBorder)
        return new X._RoundedRectangleToCircleBorder(Y.BorderSide_lerp(_this.side, b.side, t), _this.borderRadius, t);
      return _this.super$ShapeBorder$lerpTo(b, t);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      var t1 = P.Path_Path();
      t1.addRRect$1(this.borderRadius.resolve$1(textDirection).toRRect$1(rect));
      return t1;
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var width, t2, outer, inner, paint,
        t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          width = t1.width;
          t2 = this.borderRadius;
          if (width === 0)
            canvas.drawRRect$2(t2.resolve$1(textDirection).toRRect$1(rect), t1.toPaint$0());
          else {
            outer = t2.resolve$1(textDirection).toRRect$1(rect);
            inner = outer.inflate$1(-width);
            paint = new H.SurfacePaint(new H.SurfacePaintData());
            paint.set$color(0, t1.color);
            canvas.drawDRRect$3(outer, inner, paint);
          }
          break;
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof X.RoundedRectangleBorder && other.side.$eq(0, this.side) && J.$eq$(other.borderRadius, this.borderRadius);
    },
    get$hashCode: function(_) {
      return P.hashValues(this.side, this.borderRadius, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "RoundedRectangleBorder(" + this.side.toString$0(0) + ", " + H.S(this.borderRadius) + ")";
    }
  };
  X._RoundedRectangleToCircleBorder.prototype = {
    get$dimensions: function() {
      var t1 = this.side.width;
      return new V.EdgeInsets(t1, t1, t1, t1);
    },
    scale$1: function(_, t) {
      return new X._RoundedRectangleToCircleBorder(this.side.scale$1(0, t), this.borderRadius.$mul(0, t), t);
    },
    lerpFrom$2: function(a, t) {
      var t1, _this = this;
      if (a instanceof X.RoundedRectangleBorder)
        return new X._RoundedRectangleToCircleBorder(Y.BorderSide_lerp(a.side, _this.side, t), K.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t), _this.circleness * t);
      if (a instanceof X.CircleBorder) {
        t1 = _this.circleness;
        return new X._RoundedRectangleToCircleBorder(Y.BorderSide_lerp(a.side, _this.side, t), _this.borderRadius, t1 + (1 - t1) * (1 - t));
      }
      if (a instanceof X._RoundedRectangleToCircleBorder)
        return new X._RoundedRectangleToCircleBorder(Y.BorderSide_lerp(a.side, _this.side, t), K.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t), P.lerpDouble(a.circleness, _this.circleness, t));
      return _this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      var t1, _this = this;
      if (b instanceof X.RoundedRectangleBorder)
        return new X._RoundedRectangleToCircleBorder(Y.BorderSide_lerp(_this.side, b.side, t), K.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t), _this.circleness * (1 - t));
      if (b instanceof X.CircleBorder) {
        t1 = _this.circleness;
        return new X._RoundedRectangleToCircleBorder(Y.BorderSide_lerp(_this.side, b.side, t), _this.borderRadius, t1 + (1 - t1) * t);
      }
      if (b instanceof X._RoundedRectangleToCircleBorder)
        return new X._RoundedRectangleToCircleBorder(Y.BorderSide_lerp(_this.side, b.side, t), K.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t), P.lerpDouble(_this.circleness, b.circleness, t));
      return _this.super$ShapeBorder$lerpTo(b, t);
    },
    _rounded_rectangle_border$_adjustRect$1: function(rect) {
      var t2, t3, t4, t5, t6, t7, delta,
        t1 = this.circleness;
      if (t1 === 0 || rect.right - rect.left === rect.bottom - rect.top)
        return rect;
      t2 = rect.right;
      t3 = rect.left;
      t4 = t2 - t3;
      t5 = rect.bottom;
      t6 = rect.top;
      t7 = t5 - t6;
      if (t4 < t7) {
        delta = t1 * (t7 - t4) / 2;
        return new P.Rect(t3, t6 + delta, t2, t5 - delta);
      } else {
        delta = t1 * (t4 - t7) / 2;
        return new P.Rect(t3 + delta, t6, t2 - delta, t5);
      }
    },
    _rounded_rectangle_border$_adjustBorderRadius$2: function(rect, textDirection) {
      var t2,
        resolvedRadius = this.borderRadius.resolve$1(textDirection),
        t1 = this.circleness;
      if (t1 === 0)
        return resolvedRadius;
      t2 = rect.get$shortestSide() / 2;
      t2 = new P.Radius(t2, t2);
      return K.BorderRadius_lerp(resolvedRadius, new K.BorderRadius(t2, t2, t2, t2), t1);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      var t1 = P.Path_Path();
      t1.addRRect$1(this._rounded_rectangle_border$_adjustBorderRadius$2(rect, textDirection).toRRect$1(this._rounded_rectangle_border$_adjustRect$1(rect)));
      return t1;
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var width, outer, inner, paint, _this = this,
        t1 = _this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          width = t1.width;
          if (width === 0)
            canvas.drawRRect$2(_this._rounded_rectangle_border$_adjustBorderRadius$2(rect, textDirection).toRRect$1(_this._rounded_rectangle_border$_adjustRect$1(rect)), t1.toPaint$0());
          else {
            outer = _this._rounded_rectangle_border$_adjustBorderRadius$2(rect, textDirection).toRRect$1(_this._rounded_rectangle_border$_adjustRect$1(rect));
            inner = outer.inflate$1(-width);
            paint = new H.SurfacePaint(new H.SurfacePaintData());
            paint.set$color(0, t1.color);
            canvas.drawDRRect$3(outer, inner, paint);
          }
          break;
      }
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof X._RoundedRectangleToCircleBorder && other.side.$eq(0, _this.side) && J.$eq$(other.borderRadius, _this.borderRadius) && other.circleness == _this.circleness;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.side, this.borderRadius, this.circleness, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "RoundedRectangleBorder(" + this.side.toString$0(0) + ", " + H.S(this.borderRadius) + ", " + C.JSNumber_methods.toStringAsFixed$1(this.circleness * 100, 1) + "% of the way to being a CircleBorder)";
    }
  };
  D.ShaderWarmUp.prototype = {
    execute$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, picture, shaderWarmUpTask, recorder;
      var $async$execute$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              recorder = P.PictureRecorder_PictureRecorder();
              $async$goto = 2;
              return P._asyncAwait($async$self.warmUpOnCanvas$1(P.Canvas_Canvas(recorder, null)), $async$execute$0);
            case 2:
              // returning from await.
              picture = recorder.endRecording$0();
              shaderWarmUpTask = new P.TimelineTask(0, H.setRuntimeTypeInfo([], type$.JSArray__AsyncBlock));
              shaderWarmUpTask.start$1(0, "Warm-up shader");
              $async$goto = 3;
              return P._asyncAwait(picture.toImage$2(C.JSInt_methods.ceil$0(100), C.JSInt_methods.ceil$0(100)), $async$execute$0);
            case 3:
              // returning from await.
              shaderWarmUpTask.finish$0(0);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$execute$0, $async$completer);
    }
  };
  D.DefaultShaderWarmUp.prototype = {
    warmUpOnCanvas$1: function(canvas) {
      return this.warmUpOnCanvas$body$DefaultShaderWarmUp(canvas);
    },
    warmUpOnCanvas$body$DefaultShaderWarmUp: function(canvas) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        circlePath, path, convexPath, paths, t1, t2, t3, t4, paints, i, _i, paint, paragraphBuilder, paragraph, fraction, rrectPath;
      var $async$warmUpOnCanvas$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              rrectPath = P.Path_Path();
              rrectPath.addRRect$1(C.RRect_GZS);
              circlePath = P.Path_Path();
              circlePath.addOval$1(P.Rect$fromCircle(C.Offset_40_40, 20));
              path = P.Path_Path();
              path.moveTo$2(0, 20, 60);
              path.quadraticBezierTo$4(60, 20, 60, 60);
              path.close$0(0);
              path.moveTo$2(0, 60, 20);
              path.quadraticBezierTo$4(60, 60, 20, 60);
              convexPath = P.Path_Path();
              convexPath.moveTo$2(0, 20, 30);
              convexPath.lineTo$2(0, 40, 20);
              convexPath.lineTo$2(0, 60, 30);
              convexPath.lineTo$2(0, 60, 60);
              convexPath.lineTo$2(0, 20, 60);
              convexPath.close$0(0);
              paths = [rrectPath, circlePath, path, convexPath];
              t1 = new H.SurfacePaint(new H.SurfacePaintData());
              t1.set$isAntiAlias(true);
              t1.set$style(0, C.PaintingStyle_0);
              t2 = new H.SurfacePaint(new H.SurfacePaintData());
              t2.set$isAntiAlias(false);
              t2.set$style(0, C.PaintingStyle_0);
              t3 = new H.SurfacePaint(new H.SurfacePaintData());
              t3.set$isAntiAlias(true);
              t3.set$style(0, C.PaintingStyle_1);
              t3.set$strokeWidth(10);
              t4 = new H.SurfacePaint(new H.SurfacePaintData());
              t4.set$isAntiAlias(true);
              t4.set$style(0, C.PaintingStyle_1);
              t4.set$strokeWidth(0.1);
              paints = [t1, t2, t3, t4];
              for (i = 0; i < 4; ++i) {
                canvas.save$0(0);
                for (_i = 0; _i < 4; ++_i) {
                  paint = paints[_i];
                  canvas.drawPath$2(paths[i], paint);
                  canvas.translate$2(0, 0, 0);
                }
                canvas.restore$0(0);
                canvas.translate$2(0, 0, 0);
              }
              canvas.save$0(0);
              canvas.drawShadow$4(rrectPath, C.Color_4278190080, 10, true);
              canvas.translate$2(0, 0, 0);
              canvas.drawShadow$4(rrectPath, C.Color_4278190080, 10, false);
              canvas.restore$0(0);
              canvas.translate$2(0, 0, 0);
              paragraphBuilder = P.ParagraphBuilder_ParagraphBuilder(P.ParagraphStyle_ParagraphStyle(null, null, null, null, null, null, null, null, null, null, C.TextDirection_1, null));
              paragraphBuilder.pushStyle$1(P.TextStyle_TextStyle(null, C.Color_4278190080, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null));
              paragraphBuilder.addText$1("_");
              paragraph = paragraphBuilder.build$0();
              paragraph.layout$1(C.ParagraphConstraints_60);
              canvas.drawParagraph$2(paragraph, C.Offset_20_20);
              for (t1 = [0, 0.5], _i = 0; _i < 2; ++_i) {
                fraction = t1[_i];
                canvas.save$0(0);
                canvas.translate$2(0, fraction, fraction);
                canvas.clipRRect$1(new P.RRect(8, 8, 328, 248, 16, 16, 16, 16, 16, 16, 16, 16, true));
                canvas.drawRect$2(C.Rect_10_10_320_240, new H.SurfacePaint(new H.SurfacePaintData()));
                canvas.restore$0(0);
                canvas.translate$2(0, 0, 0);
              }
              canvas.translate$2(0, 0, 0);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$warmUpOnCanvas$1, $async$completer);
    }
  };
  S.StadiumBorder.prototype = {
    get$dimensions: function() {
      var t1 = this.side.width;
      return new V.EdgeInsets(t1, t1, t1, t1);
    },
    scale$1: function(_, t) {
      return new S.StadiumBorder(this.side.scale$1(0, t));
    },
    lerpFrom$2: function(a, t) {
      var _this = this;
      if (a instanceof S.StadiumBorder)
        return new S.StadiumBorder(Y.BorderSide_lerp(a.side, _this.side, t));
      if (a instanceof X.CircleBorder)
        return new S._StadiumToCircleBorder(Y.BorderSide_lerp(a.side, _this.side, t), 1 - t);
      if (a instanceof X.RoundedRectangleBorder)
        return new S._StadiumToRoundedRectangleBorder(Y.BorderSide_lerp(a.side, _this.side, t), type$.BorderRadius._as(a.borderRadius), 1 - t);
      return _this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      var _this = this;
      if (b instanceof S.StadiumBorder)
        return new S.StadiumBorder(Y.BorderSide_lerp(_this.side, b.side, t));
      if (b instanceof X.CircleBorder)
        return new S._StadiumToCircleBorder(Y.BorderSide_lerp(_this.side, b.side, t), t);
      if (b instanceof X.RoundedRectangleBorder)
        return new S._StadiumToRoundedRectangleBorder(Y.BorderSide_lerp(_this.side, b.side, t), type$.BorderRadius._as(b.borderRadius), t);
      return _this.super$ShapeBorder$lerpTo(b, t);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      var t1 = rect.get$shortestSide() / 2,
        t2 = P.Path_Path();
      t2.addRRect$1(P.RRect$fromRectAndRadius(rect, new P.Radius(t1, t1)));
      return t2;
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var t2,
        t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          t2 = rect.get$shortestSide() / 2;
          canvas.drawRRect$2(P.RRect$fromRectAndRadius(rect, new P.Radius(t2, t2)).inflate$1(-(t1.width / 2)), t1.toPaint$0());
          break;
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof S.StadiumBorder && other.side.$eq(0, this.side);
    },
    get$hashCode: function(_) {
      var t1 = this.side;
      return P.hashValues(t1.color, t1.width, t1.style, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "StadiumBorder(" + this.side.toString$0(0) + ")";
    }
  };
  S._StadiumToCircleBorder.prototype = {
    get$dimensions: function() {
      var t1 = this.side.width;
      return new V.EdgeInsets(t1, t1, t1, t1);
    },
    scale$1: function(_, t) {
      return new S._StadiumToCircleBorder(this.side.scale$1(0, t), t);
    },
    lerpFrom$2: function(a, t) {
      var t1, _this = this;
      if (a instanceof S.StadiumBorder)
        return new S._StadiumToCircleBorder(Y.BorderSide_lerp(a.side, _this.side, t), _this.circleness * t);
      if (a instanceof X.CircleBorder) {
        t1 = _this.circleness;
        return new S._StadiumToCircleBorder(Y.BorderSide_lerp(a.side, _this.side, t), t1 + (1 - t1) * (1 - t));
      }
      if (a instanceof S._StadiumToCircleBorder)
        return new S._StadiumToCircleBorder(Y.BorderSide_lerp(a.side, _this.side, t), P.lerpDouble(a.circleness, _this.circleness, t));
      return _this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      var t1, _this = this;
      if (b instanceof S.StadiumBorder)
        return new S._StadiumToCircleBorder(Y.BorderSide_lerp(_this.side, b.side, t), _this.circleness * (1 - t));
      if (b instanceof X.CircleBorder) {
        t1 = _this.circleness;
        return new S._StadiumToCircleBorder(Y.BorderSide_lerp(_this.side, b.side, t), t1 + (1 - t1) * t);
      }
      if (b instanceof S._StadiumToCircleBorder)
        return new S._StadiumToCircleBorder(Y.BorderSide_lerp(_this.side, b.side, t), P.lerpDouble(_this.circleness, b.circleness, t));
      return _this.super$ShapeBorder$lerpTo(b, t);
    },
    _adjustRect$1: function(rect) {
      var t2, t3, t4, t5, t6, t7, delta,
        t1 = this.circleness;
      if (t1 === 0 || rect.right - rect.left === rect.bottom - rect.top)
        return rect;
      t2 = rect.right;
      t3 = rect.left;
      t4 = t2 - t3;
      t5 = rect.bottom;
      t6 = rect.top;
      t7 = t5 - t6;
      if (t4 < t7) {
        delta = t1 * (t7 - t4) / 2;
        return new P.Rect(t3, t6 + delta, t2, t5 - delta);
      } else {
        delta = t1 * (t4 - t7) / 2;
        return new P.Rect(t3 + delta, t6, t2 - delta, t5);
      }
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      var t1 = P.Path_Path(),
        t2 = rect.get$shortestSide() / 2;
      t2 = new P.Radius(t2, t2);
      t1.addRRect$1(new K.BorderRadius(t2, t2, t2, t2).toRRect$1(this._adjustRect$1(rect)));
      return t1;
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var width, t2, outer, inner, paint,
        t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          width = t1.width;
          if (width === 0) {
            t2 = rect.get$shortestSide() / 2;
            t2 = new P.Radius(t2, t2);
            canvas.drawRRect$2(new K.BorderRadius(t2, t2, t2, t2).toRRect$1(this._adjustRect$1(rect)), t1.toPaint$0());
          } else {
            t2 = rect.get$shortestSide() / 2;
            t2 = new P.Radius(t2, t2);
            outer = new K.BorderRadius(t2, t2, t2, t2).toRRect$1(this._adjustRect$1(rect));
            inner = outer.inflate$1(-width);
            paint = new H.SurfacePaint(new H.SurfacePaintData());
            paint.set$color(0, t1.color);
            canvas.drawDRRect$3(outer, inner, paint);
          }
          break;
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof S._StadiumToCircleBorder && other.side.$eq(0, this.side) && other.circleness == this.circleness;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.side, this.circleness, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "StadiumBorder(" + this.side.toString$0(0) + ", " + C.JSNumber_methods.toStringAsFixed$1(this.circleness * 100, 1) + "% of the way to being a CircleBorder)";
    }
  };
  S._StadiumToRoundedRectangleBorder.prototype = {
    get$dimensions: function() {
      var t1 = this.side.width;
      return new V.EdgeInsets(t1, t1, t1, t1);
    },
    scale$1: function(_, t) {
      return new S._StadiumToRoundedRectangleBorder(this.side.scale$1(0, t), this.borderRadius.$mul(0, t), t);
    },
    lerpFrom$2: function(a, t) {
      var t1, _this = this;
      if (a instanceof S.StadiumBorder)
        return new S._StadiumToRoundedRectangleBorder(Y.BorderSide_lerp(a.side, _this.side, t), _this.borderRadius, _this.rectness * t);
      if (a instanceof X.RoundedRectangleBorder) {
        t1 = _this.rectness;
        return new S._StadiumToRoundedRectangleBorder(Y.BorderSide_lerp(a.side, _this.side, t), _this.borderRadius, t1 + (1 - t1) * (1 - t));
      }
      if (a instanceof S._StadiumToRoundedRectangleBorder)
        return new S._StadiumToRoundedRectangleBorder(Y.BorderSide_lerp(a.side, _this.side, t), K.BorderRadius_lerp(a.borderRadius, _this.borderRadius, t), P.lerpDouble(a.rectness, _this.rectness, t));
      return _this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      var t1, _this = this;
      if (b instanceof S.StadiumBorder)
        return new S._StadiumToRoundedRectangleBorder(Y.BorderSide_lerp(_this.side, b.side, t), _this.borderRadius, _this.rectness * (1 - t));
      if (b instanceof X.RoundedRectangleBorder) {
        t1 = _this.rectness;
        return new S._StadiumToRoundedRectangleBorder(Y.BorderSide_lerp(_this.side, b.side, t), _this.borderRadius, t1 + (1 - t1) * t);
      }
      if (b instanceof S._StadiumToRoundedRectangleBorder)
        return new S._StadiumToRoundedRectangleBorder(Y.BorderSide_lerp(_this.side, b.side, t), K.BorderRadius_lerp(_this.borderRadius, b.borderRadius, t), P.lerpDouble(_this.rectness, b.rectness, t));
      return _this.super$ShapeBorder$lerpTo(b, t);
    },
    _adjustBorderRadius$1: function(rect) {
      var t1 = rect.get$shortestSide() / 2;
      t1 = new P.Radius(t1, t1);
      return K.BorderRadius_lerp(this.borderRadius, new K.BorderRadius(t1, t1, t1, t1), 1 - this.rectness);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      var t1 = P.Path_Path();
      t1.addRRect$1(this._adjustBorderRadius$1(rect).toRRect$1(rect));
      return t1;
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var width, outer, inner, paint,
        t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          width = t1.width;
          if (width === 0)
            canvas.drawRRect$2(this._adjustBorderRadius$1(rect).toRRect$1(rect), t1.toPaint$0());
          else {
            outer = this._adjustBorderRadius$1(rect).toRRect$1(rect);
            inner = outer.inflate$1(-width);
            paint = new H.SurfacePaint(new H.SurfacePaintData());
            paint.set$color(0, t1.color);
            canvas.drawDRRect$3(outer, inner, paint);
          }
          break;
      }
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof S._StadiumToRoundedRectangleBorder && other.side.$eq(0, _this.side) && J.$eq$(other.borderRadius, _this.borderRadius) && other.rectness == _this.rectness;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.side, this.borderRadius, this.rectness, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "StadiumBorder(" + this.side.toString$0(0) + ", " + H.S(this.borderRadius) + ", " + C.JSNumber_methods.toStringAsFixed$1(this.rectness * 100, 1) + "% of the way to being a RoundedRectangleBorder)";
    }
  };
  U.PlaceholderDimensions.prototype = {
    toString$0: function(_) {
      return "PlaceholderDimensions(" + H.S(this.size) + ", " + H.S(this.baseline) + ")";
    }
  };
  U.TextWidthBasis.prototype = {
    toString$0: function(_) {
      return this._text_painter$_name;
    }
  };
  U.TextPainter.prototype = {
    markNeedsLayout$0: function() {
      this._text_painter$_paragraph = null;
      this._text_painter$_needsLayout = true;
    },
    set$text: function(_, value) {
      var t1, _this = this;
      if (J.$eq$(_this._text_painter$_text, value))
        return;
      t1 = _this._text_painter$_text;
      t1 = t1 == null ? null : t1.style;
      J.$eq$(t1, value.style);
      _this._text_painter$_text = value;
      _this.markNeedsLayout$0();
    },
    set$textAlign: function(_, value) {
      if (this._text_painter$_textAlign === value)
        return;
      this._text_painter$_textAlign = value;
      this.markNeedsLayout$0();
    },
    set$textDirection: function(value) {
      if (this._text_painter$_textDirection == value)
        return;
      this._text_painter$_textDirection = value;
      this.markNeedsLayout$0();
    },
    set$textScaleFactor: function(value) {
      if (this._textScaleFactor === value)
        return;
      this._textScaleFactor = value;
      this.markNeedsLayout$0();
    },
    set$ellipsis: function(value) {
      if (this._text_painter$_ellipsis == value)
        return;
      this._text_painter$_ellipsis = value;
      this.markNeedsLayout$0();
    },
    set$locale: function(_, value) {
      if (J.$eq$(this._text_painter$_locale, value))
        return;
      this._text_painter$_locale = value;
      this.markNeedsLayout$0();
    },
    set$maxLines: function(value) {
      if (this._text_painter$_maxLines == value)
        return;
      this._text_painter$_maxLines = value;
      this.markNeedsLayout$0();
    },
    set$textWidthBasis: function(value) {
      if (this._textWidthBasis === value)
        return;
      this._textWidthBasis = value;
      this.markNeedsLayout$0();
    },
    setPlaceholderDimensions$1: function(value) {
      if (value == null || value.length === 0 || S.listEquals(value, this._text_painter$_placeholderDimensions))
        return;
      this._text_painter$_placeholderDimensions = value;
      this.markNeedsLayout$0();
    },
    get$width: function(_) {
      var t1 = this._textWidthBasis,
        t2 = this._text_painter$_paragraph;
      t1 = t1 === C.TextWidthBasis_1 ? t2.get$longestLine() : t2.get$width(t2);
      t1.toString;
      return Math.ceil(t1);
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      var t1;
      switch (baseline) {
        case C.TextBaseline_0:
          t1 = this._text_painter$_paragraph;
          return t1.get$alphabeticBaseline(t1);
        case C.TextBaseline_1:
          t1 = this._text_painter$_paragraph;
          return t1.get$ideographicBaseline(t1);
      }
      return null;
    },
    layout$2$maxWidth$minWidth: function(maxWidth, minWidth) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, builder, newWidth, _this = this, _null = null;
      if (!_this._text_painter$_needsLayout && minWidth == _this._lastMinWidth && maxWidth == _this._lastMaxWidth)
        return;
      _this._text_painter$_needsLayout = false;
      t1 = _this._text_painter$_paragraph;
      if (t1 == null) {
        t1 = _this._text_painter$_text.style;
        if (t1 == null)
          t1 = _null;
        else {
          t2 = _this._text_painter$_textAlign;
          t3 = _this._text_painter$_textDirection;
          if (t3 == null)
            t3 = _null;
          t4 = _this._textScaleFactor;
          t5 = _this._text_painter$_maxLines;
          t6 = _this._text_painter$_textHeightBehavior;
          t7 = _this._text_painter$_ellipsis;
          t8 = _this._text_painter$_locale;
          t9 = t1.fontWeight;
          t10 = t1.fontStyle;
          t11 = t1.fontFamily;
          t12 = t1.fontSize;
          if (t12 == null)
            t12 = 14;
          t1 = t1.height;
          t1 = P.ParagraphStyle_ParagraphStyle(t7, t11, t12 * t4, t10, t9, t1, t8, t5, _null, t2, t3, t6);
        }
        if (t1 == null) {
          t1 = _this._text_painter$_textAlign;
          t2 = _this._text_painter$_textDirection;
          if (t2 == null)
            t2 = _null;
          t3 = _this._text_painter$_maxLines;
          t4 = _this._text_painter$_textHeightBehavior;
          t4 = P.ParagraphStyle_ParagraphStyle(_this._text_painter$_ellipsis, _null, _null, _null, _null, _null, _this._text_painter$_locale, t3, _null, t1, t2, t4);
          t1 = t4;
        }
        builder = P.ParagraphBuilder_ParagraphBuilder(t1);
        t1 = _this._text_painter$_text;
        t2 = _this._textScaleFactor;
        t1.build$3$dimensions$textScaleFactor(builder, _this._text_painter$_placeholderDimensions, t2);
        _this._inlinePlaceholderScales = builder.get$placeholderScales();
        t2 = _this._text_painter$_paragraph = builder.build$0();
        t1 = t2;
      }
      _this._lastMinWidth = minWidth;
      _this._lastMaxWidth = maxWidth;
      t1.layout$1(new P.ParagraphConstraints(maxWidth));
      if (minWidth != maxWidth) {
        t1 = _this._text_painter$_paragraph.get$maxIntrinsicWidth();
        t1.toString;
        newWidth = C.JSNumber_methods.clamp$2(Math.ceil(t1), minWidth, maxWidth);
        t1 = _this._text_painter$_paragraph;
        t1 = t1.get$width(t1);
        t1.toString;
        if (newWidth !== Math.ceil(t1))
          _this._text_painter$_paragraph.layout$1(new P.ParagraphConstraints(newWidth));
      }
      _this._inlinePlaceholderBoxes = _this._text_painter$_paragraph.getBoxesForPlaceholders$0();
    },
    layout$0: function() {
      return this.layout$2$maxWidth$minWidth(1 / 0, 0);
    }
  };
  Q.TextSpan.prototype = {
    build$3$dimensions$textScaleFactor: function(builder, dimensions, textScaleFactor) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, _i,
        t1 = this.style,
        hasStyle = t1 != null;
      if (hasStyle) {
        t2 = t1.color;
        t3 = t1.decoration;
        t4 = t1.decorationColor;
        t5 = t1.decorationStyle;
        t6 = t1.decorationThickness;
        t7 = t1.fontWeight;
        t8 = t1.fontStyle;
        t9 = t1.textBaseline;
        t10 = t1.fontFamily;
        t11 = t1.get$fontFamilyFallback();
        t12 = t1.fontSize;
        t12 = t12 == null ? null : t12 * textScaleFactor;
        t13 = t1.letterSpacing;
        t14 = t1.wordSpacing;
        t15 = t1.height;
        t16 = t1.locale;
        t17 = t1.foreground;
        t18 = t1.background;
        if (t18 == null) {
          t18 = t1.backgroundColor;
          if (t18 != null) {
            t19 = new H.SurfacePaint(new H.SurfacePaintData());
            t19.set$color(0, t18);
            t18 = t19;
          } else
            t18 = null;
        }
        t19 = t1.shadows;
        builder.pushStyle$1(P.TextStyle_TextStyle(t18, t2, t3, t4, t5, t6, t10, t11, t1.fontFeatures, t12, t8, t7, t17, t15, t13, t16, t19, t9, t14));
      }
      t1 = this.text;
      if (t1 != null)
        builder.addText$1(t1);
      t1 = this.children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].build$3$dimensions$textScaleFactor(builder, dimensions, textScaleFactor);
      if (hasStyle)
        builder.pop$0();
    },
    visitChildren$1: function(visitor) {
      var t1, t2, _i;
      if (this.text != null)
        if (!visitor.call$1(this))
          return false;
      t1 = this.children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          if (!t1[_i].visitChildren$1(visitor))
            return false;
      return true;
    },
    getSpanForPositionVisitor$2: function(position, offset) {
      var affinity, targetOffset, t2, endOffset,
        t1 = this.text;
      if (t1 == null)
        return null;
      affinity = position.affinity;
      targetOffset = position.offset;
      t2 = offset._inline_span$_value;
      endOffset = t2 + t1.length;
      if (!(t2 === targetOffset && affinity === C.TextAffinity_1))
        if (!(t2 < targetOffset && targetOffset < endOffset))
          t1 = endOffset === targetOffset && affinity === C.TextAffinity_0;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return this;
      offset._inline_span$_value = endOffset;
      return null;
    },
    computeSemanticsInformation$1: function(collector) {
      var t2, _i,
        t1 = this.text;
      if (t1 != null || false)
        collector.push(G.InlineSpanSemanticsInformation$(t1, null, null));
      t1 = this.children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].computeSemanticsInformation$1(collector);
    },
    compareTo$1: function(_, other) {
      var t1, t2, candidate, result, index, _this = this;
      if (_this === other)
        return C.RenderComparison_0;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return C.RenderComparison_3;
      if (other.text == _this.text) {
        t1 = _this.children;
        t1 = t1 == null ? null : t1.length;
        t2 = other.children;
        t1 = t1 != (t2 == null ? null : t2.length) || _this.style == null !== (other.style == null);
      } else
        t1 = true;
      if (t1)
        return C.RenderComparison_3;
      t1 = _this.style;
      if (t1 != null) {
        candidate = t1.compareTo$1(0, other.style);
        result = candidate.index > 0 ? candidate : C.RenderComparison_0;
        if (result === C.RenderComparison_3)
          return result;
      } else
        result = C.RenderComparison_0;
      t1 = _this.children;
      if (t1 != null)
        for (t2 = other.children, index = 0; index < t1.length; ++index) {
          candidate = J.compareTo$1$ns(t1[index], t2[index]);
          if (candidate.index > result.index)
            result = candidate;
          if (result === C.RenderComparison_3)
            return result;
        }
      return result;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (!_this.super$InlineSpan$$eq(0, other))
        return false;
      if (other instanceof Q.TextSpan)
        if (other.text == _this.text)
          t1 = S.listEquals(other.children, _this.children);
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(G.InlineSpan.prototype.get$hashCode.call(_this, _this), _this.text, null, null, P.hashList(_this.children), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toStringShort$0: function() {
      return "TextSpan";
    },
    debugDescribeChildren$0: function() {
      var t1 = this.children;
      if (t1 == null)
        return C.List_empty2;
      return new H.MappedListIterable(t1, new Q.TextSpan_debugDescribeChildren_closure(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,DiagnosticsNode>")).toList$0(0);
    }
  };
  Q.TextSpan_debugDescribeChildren_closure.prototype = {
    call$1: function(child) {
      if (child != null)
        return new Y.DiagnosticableTreeNode(child, null, true, true, null, null);
      else
        return Y.DiagnosticsNode_DiagnosticsNode$message("<null child>", true, C.DiagnosticsTreeStyle_8);
    }
  };
  A.TextStyle.prototype = {
    get$fontFamilyFallback: function() {
      return this._text_style$_fontFamilyFallback;
    },
    copyWith$22$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$inherit$letterSpacing$locale$shadows$textBaseline$wordSpacing: function(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, inherit, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, _this = this, _null = null,
        t1 = inherit == null ? _this.inherit : inherit,
        t2 = _this.foreground;
      if (t2 == null && foreground == null)
        t3 = color == null ? _this.color : color;
      else
        t3 = _null;
      t4 = _this.background;
      if (t4 == null && background == null)
        t5 = backgroundColor == null ? _this.backgroundColor : backgroundColor;
      else
        t5 = _null;
      t6 = fontFamily == null ? _this.fontFamily : fontFamily;
      t7 = fontFamilyFallback == null ? _this.get$fontFamilyFallback() : fontFamilyFallback;
      t8 = fontSize == null ? _this.fontSize : fontSize;
      t9 = fontWeight == null ? _this.fontWeight : fontWeight;
      t10 = letterSpacing == null ? _this.letterSpacing : letterSpacing;
      t11 = wordSpacing == null ? _this.wordSpacing : wordSpacing;
      t12 = textBaseline == null ? _this.textBaseline : textBaseline;
      t13 = height == null ? _this.height : height;
      t2 = foreground == null ? t2 : foreground;
      t4 = background == null ? t4 : background;
      t14 = decoration == null ? _this.decoration : decoration;
      t15 = decorationColor == null ? _this.decorationColor : decorationColor;
      t16 = decorationStyle == null ? _this.decorationStyle : decorationStyle;
      t17 = decorationThickness == null ? _this.decorationThickness : decorationThickness;
      return A.TextStyle$(t4, t5, t3, _null, t14, t15, t16, t17, t6, t7, _this.fontFeatures, t8, _this.fontStyle, t9, t2, t13, t1, t10, _this.locale, _null, _this.shadows, t12, t11);
    },
    copyWith$1$color: function(color) {
      return this.copyWith$22$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$inherit$letterSpacing$locale$shadows$textBaseline$wordSpacing(null, null, color, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    },
    copyWith$21$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$letterSpacing$locale$shadows$textBaseline$wordSpacing: function(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      return this.copyWith$22$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$inherit$letterSpacing$locale$shadows$textBaseline$wordSpacing(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, null, letterSpacing, locale, shadows, textBaseline, wordSpacing);
    },
    copyWith$2$color$letterSpacing: function(color, letterSpacing) {
      return this.copyWith$22$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$inherit$letterSpacing$locale$shadows$textBaseline$wordSpacing(null, null, color, null, null, null, null, null, null, null, null, null, null, null, null, null, null, letterSpacing, null, null, null, null);
    },
    copyWith$1$inherit: function(inherit) {
      return this.copyWith$22$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$inherit$letterSpacing$locale$shadows$textBaseline$wordSpacing(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, inherit, null, null, null, null, null);
    },
    merge$1: function(other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16;
      if (other == null)
        return this;
      if (!other.inherit)
        return other;
      t1 = other.color;
      t2 = other.backgroundColor;
      t3 = other.fontFamily;
      t4 = other.get$fontFamilyFallback();
      t5 = other.fontSize;
      t6 = other.fontWeight;
      t7 = other.fontStyle;
      t8 = other.letterSpacing;
      t9 = other.wordSpacing;
      t10 = other.textBaseline;
      t11 = other.height;
      t12 = other.locale;
      t13 = other.foreground;
      t14 = other.background;
      t15 = other.shadows;
      t16 = other.fontFeatures;
      return this.copyWith$21$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$letterSpacing$locale$shadows$textBaseline$wordSpacing(t14, t2, t1, null, other.decoration, other.decorationColor, other.decorationStyle, other.decorationThickness, t3, t4, t16, t5, t7, t6, t13, t11, t8, t12, t15, t10, t9);
    },
    compareTo$1: function(_, other) {
      var t1, _this = this;
      if (_this === other)
        return C.RenderComparison_0;
      if (_this.inherit === other.inherit)
        if (_this.fontFamily == other.fontFamily)
          if (_this.fontSize == other.fontSize)
            if (_this.fontWeight == other.fontWeight)
              if (_this.letterSpacing == other.letterSpacing)
                if (_this.wordSpacing == other.wordSpacing)
                  if (_this.textBaseline == other.textBaseline)
                    if (_this.height == other.height)
                      t1 = _this.foreground != other.foreground || _this.background != other.background || !S.listEquals(_this.shadows, other.shadows) || !S.listEquals(_this.fontFeatures, other.fontFeatures) || !S.listEquals(_this.get$fontFamilyFallback(), other.get$fontFamilyFallback());
                    else
                      t1 = true;
                  else
                    t1 = true;
                else
                  t1 = true;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return C.RenderComparison_3;
      if (!J.$eq$(_this.color, other.color) || !J.$eq$(_this.backgroundColor, other.backgroundColor) || !J.$eq$(_this.decoration, other.decoration) || !J.$eq$(_this.decorationColor, other.decorationColor) || _this.decorationStyle != other.decorationStyle || _this.decorationThickness != other.decorationThickness)
        return C.RenderComparison_2;
      return C.RenderComparison_0;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof A.TextStyle)
        if (other.inherit === _this.inherit)
          if (J.$eq$(other.color, _this.color))
            if (J.$eq$(other.backgroundColor, _this.backgroundColor))
              if (other.fontFamily == _this.fontFamily)
                if (other.fontSize == _this.fontSize)
                  if (other.fontWeight == _this.fontWeight)
                    if (other.letterSpacing == _this.letterSpacing)
                      if (other.wordSpacing == _this.wordSpacing)
                        if (other.textBaseline == _this.textBaseline)
                          if (other.height == _this.height)
                            t1 = other.foreground == _this.foreground && other.background == _this.background && J.$eq$(other.decoration, _this.decoration) && J.$eq$(other.decorationColor, _this.decorationColor) && other.decorationStyle == _this.decorationStyle && other.decorationThickness == _this.decorationThickness && S.listEquals(other.shadows, _this.shadows) && S.listEquals(other.fontFeatures, _this.fontFeatures) && S.listEquals(other.get$fontFamilyFallback(), _this.get$fontFamilyFallback());
                          else
                            t1 = false;
                        else
                          t1 = false;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.inherit, _this.color, _this.backgroundColor, _this.fontFamily, _this.fontSize, _this.fontWeight, _this.fontStyle, _this.letterSpacing, _this.wordSpacing, _this.textBaseline, _this.height, _this.locale, _this.foreground, _this.background, _this.decoration, _this.decorationColor, _this.decorationStyle, P.hashList(_this.shadows), P.hashList(_this.fontFeatures), P.hashList(_this.get$fontFamilyFallback()));
    },
    toStringShort$0: function() {
      return "TextStyle";
    }
  };
  A._TextStyle_Object_Diagnosticable.prototype = {};
  D.FrictionSimulation.prototype = {
    x$1: function(_, time) {
      var _this = this,
        t1 = _this._v,
        t2 = _this._dragLog;
      return _this._friction_simulation$_x + t1 * Math.pow(_this._drag, time) / t2 - t1 / t2;
    },
    dx$1: function(_, time) {
      H.checkNum(time);
      return this._v * Math.pow(this._drag, time);
    },
    get$finalX: function() {
      return this._friction_simulation$_x - this._v / this._dragLog;
    },
    timeAtX$1: function(x) {
      var t2, t3, _this = this,
        t1 = _this._friction_simulation$_x;
      if (x === t1)
        return 0;
      t2 = _this._v;
      if (t2 !== 0)
        if (t2 > 0)
          t3 = x < t1 || x > _this.get$finalX();
        else
          t3 = x > t1 || x < _this.get$finalX();
      else
        t3 = true;
      if (t3)
        return 1 / 0;
      t3 = _this._dragLog;
      return Math.log(t3 * (x - t1) / t2 + 1) / t3;
    },
    isDone$1: function(time) {
      return Math.abs(this._v * Math.pow(this._drag, time)) < this.tolerance.velocity;
    }
  };
  T.Simulation.prototype = {
    toString$0: function(_) {
      return "Simulation";
    }
  };
  M.SpringDescription.prototype = {
    toString$0: function(_) {
      return "SpringDescription(mass: " + C.JSNumber_methods.toStringAsFixed$1(this.mass, 1) + ", stiffness: " + C.JSInt_methods.toStringAsFixed$1(this.stiffness, 1) + ", damping: " + C.JSNumber_methods.toStringAsFixed$1(this.damping, 1) + ")";
    }
  };
  M.SpringType.prototype = {
    toString$0: function(_) {
      return this._spring_simulation$_name;
    }
  };
  M.SpringSimulation.prototype = {
    x$1: function(_, time) {
      return this._endPosition + this._solution.x$1(0, time);
    },
    dx$1: function(_, time) {
      return this._solution.dx$1(0, time);
    },
    isDone$1: function(time) {
      var t1 = this._solution;
      return B.nearEqual(t1.x$1(0, time), 0, this.tolerance.distance) && B.nearEqual(t1.dx$1(0, time), 0, this.tolerance.velocity);
    },
    toString$0: function(_) {
      var t1 = this._solution;
      return "SpringSimulation(end: " + H.S(this._endPosition) + ", " + t1.get$type(t1).toString$0(0) + ")";
    }
  };
  M.ScrollSpringSimulation.prototype = {
    x$1: function(_, time) {
      return this.isDone$1(time) ? this._endPosition : this.super$SpringSimulation$x(0, time);
    }
  };
  M._CriticalSolution.prototype = {
    x$1: function(_, time) {
      return (this._c1 + this._c2 * time) * Math.pow(2.718281828459045, this._r * time);
    },
    dx$1: function(_, time) {
      var t1 = this._r,
        power = Math.pow(2.718281828459045, t1 * time),
        t2 = this._c2;
      return t1 * (this._c1 + t2 * time) * power + t2 * power;
    },
    get$type: function(_) {
      return C.SpringType_0;
    }
  };
  M._OverdampedSolution.prototype = {
    x$1: function(_, time) {
      var _this = this;
      return _this._c1 * Math.pow(2.718281828459045, _this._r1 * time) + _this._c2 * Math.pow(2.718281828459045, _this._r2 * time);
    },
    dx$1: function(_, time) {
      var _this = this,
        t1 = _this._r1,
        t2 = _this._r2;
      return _this._c1 * t1 * Math.pow(2.718281828459045, t1 * time) + _this._c2 * t2 * Math.pow(2.718281828459045, t2 * time);
    },
    get$type: function(_) {
      return C.SpringType_2;
    }
  };
  M._UnderdampedSolution.prototype = {
    x$1: function(_, time) {
      var _this = this,
        t1 = _this._w * time;
      return Math.pow(2.718281828459045, _this._r * time) * (_this._c1 * Math.cos(t1) + _this._c2 * Math.sin(t1));
    },
    dx$1: function(_, time) {
      var t4, _this = this,
        t1 = _this._r,
        power = Math.pow(2.718281828459045, t1 * time),
        t2 = _this._w,
        t3 = t2 * time,
        cosine = Math.cos(t3),
        sine = Math.sin(t3);
      t3 = _this._c2;
      t4 = _this._c1;
      return power * (t3 * t2 * cosine - t4 * t2 * sine) + t1 * power * (t3 * sine + t4 * cosine);
    },
    get$type: function(_) {
      return C.SpringType_1;
    }
  };
  N.Tolerance.prototype = {
    toString$0: function(_) {
      return "Tolerance(distance: \xb1" + H.S(this.distance) + ", time: \xb10.001, velocity: \xb1" + H.S(this.velocity) + ")";
    }
  };
  N.RendererBinding.prototype = {
    initRenderView$0: function() {
      var t2,
        t1 = new A.RenderView(C.Size_0_0, this.createViewConfiguration$0(), $.$get$window(), null);
      t1.get$isRepaintBoundary();
      t1._needsCompositing = true;
      t1.set$child(null);
      this.RendererBinding__pipelineOwner.set$rootNode(t1);
      t1 = this.RendererBinding__pipelineOwner._rootNode;
      t1._relayoutBoundary = t1;
      t2 = type$.PipelineOwner;
      t2._as(B.AbstractNode.prototype.get$owner.call(t1))._nodesNeedingLayout.push(t1);
      t1._layer = t1._updateMatricesAndCreateNewRootLayer$0();
      t2._as(B.AbstractNode.prototype.get$owner.call(t1))._nodesNeedingPaint.push(t1);
    },
    handleMetricsChanged$0: function() {
      this.RendererBinding__pipelineOwner._rootNode.set$configuration(this.createViewConfiguration$0());
      this.scheduleForcedFrame$0();
    },
    handlePlatformBrightnessChanged$0: function() {
    },
    createViewConfiguration$0: function() {
      var t1 = $.$get$window(),
        devicePixelRatio = t1._debugDevicePixelRatio;
      devicePixelRatio = devicePixelRatio != null ? devicePixelRatio : H.EngineWindow_browserDevicePixelRatio();
      return new A.ViewConfiguration(t1.get$physicalSize().$div(0, devicePixelRatio), devicePixelRatio);
    },
    initMouseTracker$0: function() {
      var t2, _this = this,
        t1 = _this.RendererBinding__mouseTracker;
      if (t1 != null) {
        t1.super$ChangeNotifier$dispose();
        t1._router._globalRoutes.remove$1(0, t1.get$_mouse_tracking$_handleEvent());
      }
      t1 = _this.GestureBinding_pointerRouter;
      t2 = _this.RendererBinding__pipelineOwner;
      t2 = new Y.MouseTracker(t2._rootNode.get$hitTestMouseTrackers(), t1, P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._MouseState), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      t1._globalRoutes.$indexSet(0, t2.get$_mouse_tracking$_handleEvent(), null);
      t1 = t2;
      _this.RendererBinding__mouseTracker = t1;
    },
    _handleSemanticsEnabledChanged$0: function() {
      var t1, _this = this;
      $.$get$window().toString;
      if (H.EngineSemanticsOwner_instance()._semanticsEnabled) {
        if (_this.RendererBinding__semanticsHandle == null)
          _this.RendererBinding__semanticsHandle = _this.RendererBinding__pipelineOwner.ensureSemantics$0();
      } else {
        t1 = _this.RendererBinding__semanticsHandle;
        if (t1 != null)
          t1.dispose$0();
        _this.RendererBinding__semanticsHandle = null;
      }
    },
    setSemanticsEnabled$1: function(enabled) {
      var t1, _this = this;
      if (enabled) {
        if (_this.RendererBinding__semanticsHandle == null)
          _this.RendererBinding__semanticsHandle = _this.RendererBinding__pipelineOwner.ensureSemantics$0();
      } else {
        t1 = _this.RendererBinding__semanticsHandle;
        if (t1 != null)
          t1.dispose$0();
        _this.RendererBinding__semanticsHandle = null;
      }
    },
    _handleSemanticsAction$3: function(id, action, args) {
      var t1 = this.RendererBinding__pipelineOwner._semanticsOwner;
      if (t1 != null)
        t1.performAction$3(id, action, null);
    },
    _handleSemanticsOwnerCreated$0: function() {
      var t2,
        t1 = this.RendererBinding__pipelineOwner._rootNode;
      t1.toString;
      t2 = type$.PipelineOwner;
      t2._as(B.AbstractNode.prototype.get$owner.call(t1))._nodesNeedingSemantics.add$1(0, t1);
      t2._as(B.AbstractNode.prototype.get$owner.call(t1)).onNeedVisualUpdate.call$0();
    },
    _handleSemanticsOwnerDisposed$0: function() {
      this.RendererBinding__pipelineOwner._rootNode.clearSemantics$0();
    },
    _handlePersistentFrameCallback$1: function(timeStamp) {
      this.drawFrame$0();
      this.RendererBinding__mouseTracker.schedulePostFrameCheck$0();
    },
    drawFrame$0: function() {
      var _this = this;
      _this.RendererBinding__pipelineOwner.flushLayout$0();
      _this.RendererBinding__pipelineOwner.flushCompositingBits$0();
      _this.RendererBinding__pipelineOwner.flushPaint$0();
      if (_this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0) {
        _this.RendererBinding__pipelineOwner._rootNode.compositeFrame$0();
        _this.RendererBinding__pipelineOwner.flushSemantics$0();
        _this.RendererBinding__firstFrameSent = true;
      }
    }
  };
  S.BoxConstraints.prototype = {
    copyWith$4$maxHeight$maxWidth$minHeight$minWidth: function(maxHeight, maxWidth, minHeight, minWidth) {
      var _this = this,
        t1 = minWidth == null ? _this.minWidth : minWidth,
        t2 = maxWidth == null ? _this.maxWidth : maxWidth,
        t3 = minHeight == null ? _this.minHeight : minHeight;
      return new S.BoxConstraints(t1, t2, t3, maxHeight == null ? _this.maxHeight : maxHeight);
    },
    copyWith$2$minHeight$minWidth: function(minHeight, minWidth) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(null, null, minHeight, minWidth);
    },
    copyWith$1$maxHeight: function(maxHeight) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(maxHeight, null, null, null);
    },
    copyWith$1$maxWidth: function(maxWidth) {
      return this.copyWith$4$maxHeight$maxWidth$minHeight$minWidth(null, maxWidth, null, null);
    },
    loosen$0: function() {
      return new S.BoxConstraints(0, this.maxWidth, 0, this.maxHeight);
    },
    enforce$1: function(constraints) {
      var t4, _this = this,
        t1 = constraints.minWidth,
        t2 = constraints.maxWidth,
        t3 = J.clamp$2$n(_this.minWidth, t1, t2);
      t2 = J.clamp$2$n(_this.maxWidth, t1, t2);
      t1 = constraints.minHeight;
      t4 = constraints.maxHeight;
      return new S.BoxConstraints(t3, t2, J.clamp$2$n(_this.minHeight, t1, t4), J.clamp$2$n(_this.maxHeight, t1, t4));
    },
    tighten$2$height$width: function(height, width) {
      var t5, t6, _this = this,
        t1 = width == null,
        t2 = _this.minWidth,
        t3 = t1 ? t2 : C.JSNumber_methods.clamp$2(width, t2, _this.maxWidth),
        t4 = _this.maxWidth;
      t1 = t1 ? t4 : C.JSNumber_methods.clamp$2(width, t2, t4);
      t2 = height == null;
      t4 = _this.minHeight;
      t5 = t2 ? t4 : C.JSNumber_methods.clamp$2(height, t4, _this.maxHeight);
      t6 = _this.maxHeight;
      return new S.BoxConstraints(t3, t1, t5, t2 ? t6 : C.JSNumber_methods.clamp$2(height, t4, t6));
    },
    tighten$1$height: function(height) {
      return this.tighten$2$height$width(height, null);
    },
    tighten$1$width: function(width) {
      return this.tighten$2$height$width(null, width);
    },
    constrain$1: function(size) {
      var _this = this;
      return new P.Size(J.clamp$2$n(size._dx, _this.minWidth, _this.maxWidth), J.clamp$2$n(size._dy, _this.minHeight, _this.maxHeight));
    },
    get$isTight: function() {
      var _this = this;
      return _this.minWidth >= _this.maxWidth && _this.minHeight >= _this.maxHeight;
    },
    $mul: function(_, factor) {
      var _this = this;
      return new S.BoxConstraints(_this.minWidth * factor, _this.maxWidth * factor, _this.minHeight * factor, _this.maxHeight * factor);
    },
    get$isNormalized: function() {
      var _this = this,
        t1 = _this.minWidth;
      if (t1 >= 0)
        if (t1 <= _this.maxWidth) {
          t1 = _this.minHeight;
          t1 = t1 >= 0 && t1 <= _this.maxHeight;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof S.BoxConstraints && other.minWidth == _this.minWidth && other.maxWidth == _this.maxWidth && other.minHeight == _this.minHeight && other.maxHeight == _this.maxHeight;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.minWidth, _this.maxWidth, _this.minHeight, _this.maxHeight, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t2, width, height, _this = this,
        annotation = _this.get$isNormalized() ? "" : "; NOT NORMALIZED",
        t1 = _this.minWidth;
      if (t1 === 1 / 0 && _this.minHeight === 1 / 0)
        return "BoxConstraints(biggest" + annotation + ")";
      if (t1 === 0 && _this.maxWidth === 1 / 0 && _this.minHeight === 0 && _this.maxHeight === 1 / 0)
        return "BoxConstraints(unconstrained" + annotation + ")";
      t2 = new S.BoxConstraints_toString_describe();
      width = t2.call$3(t1, _this.maxWidth, "w");
      height = t2.call$3(_this.minHeight, _this.maxHeight, "h");
      return "BoxConstraints(" + H.S(width) + ", " + H.S(height) + annotation + ")";
    }
  };
  S.BoxConstraints_toString_describe.prototype = {
    call$3: function(min, max, dim) {
      if (min == max)
        return dim + "=" + J.toStringAsFixed$1$n(min, 1);
      return J.toStringAsFixed$1$n(min, 1) + "<=" + dim + "<=" + J.toStringAsFixed$1$n(max, 1);
    }
  };
  S.BoxHitTestResult.prototype = {
    addWithPaintTransform$3$hitTest$position$transform: function(hitTest, position, transform) {
      if (transform != null) {
        transform = E.Matrix4_tryInvert(F.PointerEvent_removePerspectiveTransform(transform));
        if (transform == null)
          return false;
      }
      return this.addWithRawTransform$3$hitTest$position$transform(hitTest, position, transform);
    },
    addWithPaintOffset$3$hitTest$offset$position: function(hitTest, offset, position) {
      return this.addWithRawTransform$3$hitTest$position$transform(hitTest, position, offset != null ? E.Matrix4_Matrix4$translationValues(-offset._dx, -offset._dy, 0) : null);
    },
    addWithRawTransform$3$hitTest$position$transform: function(hitTest, position, transform) {
      var isHit,
        transformedPosition = position == null || transform == null ? position : T.MatrixUtils_transformPoint(transform, position),
        t1 = transform != null;
      if (t1)
        this.pushTransform$1(transform);
      isHit = hitTest.call$2(this, transformedPosition);
      if (t1)
        this._transforms.removeLast$0(0);
      return isHit;
    }
  };
  S.BoxHitTestEntry.prototype = {
    get$target: function(_) {
      return type$.RenderBox._as(this.target);
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(type$.RenderBox._as(this.target)) + "@" + H.S(this.localPosition);
    }
  };
  S.BoxParentData.prototype = {
    toString$0: function(_) {
      return "offset=" + this.offset.toString$0(0);
    }
  };
  S.ContainerBoxParentData.prototype = {};
  S.RenderBox.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof S.BoxParentData))
        child.parentData = new S.BoxParentData(C.Offset_0_0);
    },
    get$semanticBounds: function() {
      var t1 = this._size;
      return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    getDistanceToBaseline$2$onlyReal: function(baseline, onlyReal) {
      var result = this.getDistanceToActualBaseline$1(baseline);
      if (result == null && !onlyReal)
        return this._size._dy;
      return result;
    },
    getDistanceToBaseline$1: function(baseline) {
      return this.getDistanceToBaseline$2$onlyReal(baseline, false);
    },
    getDistanceToActualBaseline$1: function(baseline) {
      var _this = this,
        t1 = _this._cachedBaselines;
      if (t1 == null)
        t1 = _this._cachedBaselines = P.LinkedHashMap_LinkedHashMap$_empty(type$.TextBaseline, type$.double);
      t1.putIfAbsent$2(0, baseline, new S.RenderBox_getDistanceToActualBaseline_closure(_this, baseline));
      return _this._cachedBaselines.$index(0, baseline);
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      return null;
    },
    get$constraints: function() {
      return type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(this));
    },
    markNeedsLayout$0: function() {
      var _this = this,
        t1 = _this._cachedBaselines;
      if (!(t1 != null && t1.get$isNotEmpty(t1))) {
        t1 = _this._cachedIntrinsicDimensions;
        t1 = t1 != null && t1.get$isNotEmpty(t1);
      } else
        t1 = true;
      if (t1) {
        t1 = _this._cachedBaselines;
        if (t1 != null)
          t1.clear$0(0);
        t1 = _this._cachedIntrinsicDimensions;
        if (t1 != null)
          t1.clear$0(0);
        if (_this._node$_parent instanceof K.RenderObject) {
          _this.markParentNeedsLayout$0();
          return;
        }
      }
      _this.super$RenderObject$markNeedsLayout();
    },
    performResize$0: function() {
      var t1 = this.get$constraints();
      this._size = new P.Size(C.JSInt_methods.clamp$2(0, t1.minWidth, t1.maxWidth), C.JSInt_methods.clamp$2(0, t1.minHeight, t1.maxHeight));
    },
    performLayout$0: function() {
    },
    hitTest$2$position: function(result, position) {
      var _this = this;
      if (_this._size.contains$1(0, position))
        if (_this.hitTestChildren$2$position(result, position) || _this.hitTestSelf$1(position)) {
          result.add$1(0, new S.BoxHitTestEntry(position, _this));
          return true;
        }
      return false;
    },
    hitTestSelf$1: function(position) {
      return false;
    },
    hitTestChildren$2$position: function(result, position) {
      return false;
    },
    applyPaintTransform$2: function(child, transform) {
      var offset = type$.BoxParentData._as(child.parentData).offset;
      transform.translate$2(0, offset._dx, offset._dy);
    },
    globalToLocal$1: function(point) {
      var n, t1, i, d, t2, t3, s,
        transform = this.getTransformTo$1(0, null);
      if (transform.copyInverse$1(transform) === 0)
        return C.Offset_0_0;
      n = new E.Vector3(new Float64Array(3));
      n.setValues$3(0, 0, 1);
      t1 = new E.Vector3(new Float64Array(3));
      t1.setValues$3(0, 0, 0);
      i = transform.perspectiveTransform$1(t1);
      t1 = new E.Vector3(new Float64Array(3));
      t1.setValues$3(0, 0, 1);
      d = transform.perspectiveTransform$1(t1).$sub(0, i);
      t1 = point._dx;
      t2 = point._dy;
      t3 = new E.Vector3(new Float64Array(3));
      t3.setValues$3(t1, t2, 0);
      s = transform.perspectiveTransform$1(t3);
      t3 = s.$sub(0, d.scaled$1(n.dot$1(s) / n.dot$1(d)))._v3storage;
      return new P.Offset(t3[0], t3[1]);
    },
    get$paintBounds: function() {
      var t1 = this._size;
      return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    handleEvent$2: function($event, entry) {
      this.super$RenderObject$handleEvent($event, entry);
    }
  };
  S.RenderBox_getDistanceToActualBaseline_closure.prototype = {
    call$0: function() {
      return this.$this.computeDistanceToActualBaseline$1(this.baseline);
    },
    $signature: 68
  };
  S.RenderBoxContainerDefaultsMixin.prototype = {
    defaultComputeDistanceToFirstActualBaseline$1: function(baseline) {
      var t1, childParentData, result,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"); child != null;) {
        childParentData = t1._as(child.parentData);
        result = child.getDistanceToActualBaseline$1(baseline);
        if (result != null)
          return result + childParentData.offset._dy;
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      return null;
    },
    defaultComputeDistanceToHighestActualBaseline$1: function(baseline) {
      var t1, result, childParentData, candidate,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"), result = null; child != null;) {
        childParentData = t1._as(child.parentData);
        candidate = child.getDistanceToActualBaseline$1(baseline);
        if (candidate != null) {
          candidate += childParentData.offset._dy;
          result = result != null ? Math.min(result, candidate) : candidate;
        }
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      return result;
    },
    defaultHitTestChildren$2$position: function(result, position) {
      var t2, childParentData, child, _box_0 = {},
        t1 = _box_0.child = this.ContainerRenderObjectMixin__lastChild;
      for (t2 = H._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"); t1 != null; t1 = child) {
        childParentData = t2._as(t1.parentData);
        if (result.addWithPaintOffset$3$hitTest$offset$position(new S.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure(_box_0, position, childParentData), childParentData.offset, position))
          return true;
        child = childParentData.ContainerParentDataMixin_previousSibling;
        _box_0.child = child;
      }
      return false;
    },
    defaultPaint$2: function(context, offset) {
      var t1, t2, t3, childParentData, t4,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"), t2 = offset._dx, t3 = offset._dy; child != null;) {
        childParentData = t1._as(child.parentData);
        t4 = childParentData.offset;
        context.paintChild$2(child, new P.Offset(t4._dx + t2, t4._dy + t3));
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
    }
  };
  S.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure.prototype = {
    call$2: function(result, transformed) {
      return this._box_0.child.hitTest$2$position(result, transformed);
    }
  };
  S._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin.prototype = {
    detach$0: function(_) {
      this.super$ParentData$detach(0);
    }
  };
  B.MultiChildLayoutParentData.prototype = {
    toString$0: function(_) {
      return this.super$BoxParentData$toString(0) + "; id=" + H.S(this.id);
    }
  };
  B.MultiChildLayoutDelegate.prototype = {
    layoutChild$2: function(childId, constraints) {
      var child = this._idToChild.$index(0, childId);
      child.layout$2$parentUsesSize(constraints, true);
      return child._size;
    },
    positionChild$2: function(childId, offset) {
      type$.MultiChildLayoutParentData._as(this._idToChild.$index(0, childId).parentData).offset = offset;
    },
    _callPerformLayout$2: function(size, firstChild) {
      var childParentData, t1, t2, child, _this = this,
        previousIdToChild = _this._idToChild;
      try {
        _this._idToChild = P.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.RenderBox);
        for (t1 = type$.MultiChildLayoutParentData, t2 = firstChild; t2 != null; t2 = child) {
          childParentData = t1._as(t2.parentData);
          _this._idToChild.$indexSet(0, childParentData.id, t2);
          child = childParentData.ContainerParentDataMixin_nextSibling;
        }
        _this.performLayout$1(size);
      } finally {
        _this._idToChild = previousIdToChild;
      }
    },
    toString$0: function(_) {
      return "MultiChildLayoutDelegate";
    }
  };
  B.RenderCustomMultiChildLayoutBox.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof B.MultiChildLayoutParentData))
        child.parentData = new B.MultiChildLayoutParentData(null, null, C.Offset_0_0);
    },
    set$delegate: function(newDelegate) {
      var _this = this,
        t1 = _this._custom_layout$_delegate;
      if (t1 === newDelegate)
        return;
      if (!H.getRuntimeType(newDelegate).$eq(0, H.getRuntimeType(t1)) || newDelegate.shouldRelayout$1(t1))
        _this.markNeedsLayout$0();
      _this._custom_layout$_delegate = newDelegate;
      _this._node$_owner != null;
    },
    attach$1: function(owner) {
      this.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$attach(owner);
    },
    detach$0: function(_) {
      this.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$detach(0);
    },
    performLayout$0: function() {
      var _this = this,
        t1 = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this));
      t1 = t1.constrain$1(new P.Size(C.JSInt_methods.clamp$2(1 / 0, t1.minWidth, t1.maxWidth), C.JSInt_methods.clamp$2(1 / 0, t1.minHeight, t1.maxHeight)));
      _this._size = t1;
      _this._custom_layout$_delegate._callPerformLayout$2(t1, _this.ContainerRenderObjectMixin__firstChild);
    },
    paint$2: function(context, offset) {
      this.defaultPaint$2(context, offset);
    },
    hitTestChildren$2$position: function(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    }
  };
  B._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1: function(owner) {
      var child, t1;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.MultiChildLayoutParentData; child != null;) {
        child.attach$1(owner);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0: function(_) {
      var child, t1;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.MultiChildLayoutParentData; child != null;) {
        child.detach$0(0);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  B._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  V.CustomPainter.prototype = {
    addListener$1: function(_, listener) {
      var t1 = this._repaint;
      return t1 == null ? null : t1.addListener$1(0, listener);
    },
    removeListener$1: function(_, listener) {
      var t1 = this._repaint;
      return t1 == null ? null : t1.removeListener$1(0, listener);
    },
    get$semanticsBuilder: function() {
      return null;
    },
    shouldRebuildSemantics$1: function(oldDelegate) {
      return this.shouldRepaint$1(oldDelegate);
    },
    hitTest$1: function(position) {
      return null;
    },
    toString$0: function(_) {
      var t1 = "<optimized out>#" + Y.shortHash(this) + "(",
        t2 = this._repaint;
      t2 = t2 == null ? null : t2.toString$0(0);
      return t1 + (t2 == null ? "" : t2) + ")";
    }
  };
  V.CustomPainterSemantics.prototype = {};
  V.RenderCustomPaint.prototype = {
    set$painter: function(value) {
      var t1 = this._custom_paint$_painter;
      if (t1 == value)
        return;
      this._custom_paint$_painter = value;
      this._didUpdatePainter$2(value, t1);
    },
    set$foregroundPainter: function(value) {
      var t1 = this._foregroundPainter;
      if (t1 == value)
        return;
      this._foregroundPainter = value;
      this._didUpdatePainter$2(value, t1);
    },
    _didUpdatePainter$2: function(newPainter, oldPainter) {
      var _this = this,
        t1 = newPainter == null;
      if (t1)
        _this.markNeedsPaint$0();
      else if (oldPainter == null || !H.getRuntimeType(newPainter).$eq(0, H.getRuntimeType(oldPainter)) || newPainter.shouldRepaint$1(oldPainter))
        _this.markNeedsPaint$0();
      if (_this._node$_owner != null) {
        if (oldPainter != null)
          oldPainter.removeListener$1(0, _this.get$markNeedsPaint());
        if (!t1)
          newPainter.addListener$1(0, _this.get$markNeedsPaint());
      }
      if (t1) {
        if (_this._node$_owner != null)
          _this.markNeedsSemanticsUpdate$0();
      } else if (oldPainter == null || !H.getRuntimeType(newPainter).$eq(0, H.getRuntimeType(oldPainter)) || newPainter.shouldRebuildSemantics$1(oldPainter))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$preferredSize: function(value) {
      if (this._preferredSize.$eq(0, value))
        return;
      this._preferredSize = value;
      this.markNeedsLayout$0();
    },
    attach$1: function(owner) {
      var t1, _this = this;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      t1 = _this._custom_paint$_painter;
      if (t1 != null)
        t1.addListener$1(0, _this.get$markNeedsPaint());
      t1 = _this._foregroundPainter;
      if (t1 != null)
        t1.addListener$1(0, _this.get$markNeedsPaint());
    },
    detach$0: function(_) {
      var _this = this,
        t1 = _this._custom_paint$_painter;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$markNeedsPaint());
      t1 = _this._foregroundPainter;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$markNeedsPaint());
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    hitTestChildren$2$position: function(result, position) {
      var t1 = this._foregroundPainter;
      if (t1 != null) {
        t1 = t1.hitTest$1(position);
        t1 = t1 === true;
      } else
        t1 = false;
      if (t1)
        return true;
      return this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    },
    hitTestSelf$1: function(position) {
      var t1;
      if (this._custom_paint$_painter != null)
        t1 = true;
      else
        t1 = false;
      return t1;
    },
    performResize$0: function() {
      var _this = this;
      _this._size = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)).constrain$1(_this._preferredSize);
      _this.markNeedsSemanticsUpdate$0();
    },
    _paintWithPainter$3: function(canvas, offset, painter) {
      canvas.save$0(0);
      if (!offset.$eq(0, C.Offset_0_0))
        canvas.translate$2(0, offset._dx, offset._dy);
      painter.paint$2(canvas, this._size);
      canvas.restore$0(0);
    },
    paint$2: function(context, offset) {
      var _this = this;
      if (_this._custom_paint$_painter != null) {
        _this._paintWithPainter$3(context.get$canvas(context), offset, _this._custom_paint$_painter);
        _this._setRasterCacheHints$1(context);
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
      if (_this._foregroundPainter != null) {
        _this._paintWithPainter$3(context.get$canvas(context), offset, _this._foregroundPainter);
        _this._setRasterCacheHints$1(context);
      }
    },
    _setRasterCacheHints$1: function(context) {
    },
    describeSemanticsConfiguration$1: function(config) {
      var t1, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      _this._backgroundSemanticsBuilder = null;
      t1 = _this._foregroundPainter;
      _this._foregroundSemanticsBuilder = t1 == null ? null : t1.get$semanticsBuilder();
      config._isSemanticBoundary = false;
    },
    assembleSemanticsNode$3: function(node, config, children) {
      var t1, t2, hasBackgroundSemantics, t3, t4, _i, _this = this;
      _this._backgroundSemanticsNodes = V.RenderCustomPaint__updateSemanticsChildren(_this._backgroundSemanticsNodes, C.List_empty7);
      t1 = V.RenderCustomPaint__updateSemanticsChildren(_this._foregroundSemanticsNodes, C.List_empty7);
      _this._foregroundSemanticsNodes = t1;
      t2 = _this._backgroundSemanticsNodes;
      hasBackgroundSemantics = t2 != null && t2.length !== 0;
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNode);
      if (hasBackgroundSemantics)
        for (t3 = _this._backgroundSemanticsNodes, t4 = t3.length, _i = 0; _i < t4; ++_i)
          t2.push(t3[_i]);
      for (t3 = children.length, _i = 0; _i < children.length; children.length === t3 || (0, H.throwConcurrentModificationError)(children), ++_i)
        t2.push(children[_i]);
      if (t1.length !== 0)
        for (t1 = _this._foregroundSemanticsNodes, t3 = t1.length, _i = 0; _i < t3; ++_i)
          t2.push(t1[_i]);
      _this.super$RenderObject$assembleSemanticsNode(node, config, t2);
    },
    clearSemantics$0: function() {
      this.super$RenderObject$clearSemantics();
      this._foregroundSemanticsNodes = this._backgroundSemanticsNodes = null;
    }
  };
  T.DebugOverflowIndicatorMixin.prototype = {};
  V.RenderErrorBox.prototype = {
    RenderErrorBox$1: function(message) {
      var builder, t1, exception;
      try {
        t1 = this.message;
        if (t1 !== "") {
          builder = P.ParagraphBuilder_ParagraphBuilder($.$get$RenderErrorBox_paragraphStyle());
          builder.pushStyle$1($.$get$RenderErrorBox_textStyle());
          builder.addText$1(t1);
          this._paragraph = builder.build$0();
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
    },
    get$sizedByParent: function() {
      return true;
    },
    hitTestSelf$1: function(position) {
      return true;
    },
    performResize$0: function() {
      this._size = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(this)).constrain$1(C.Size_100000_100000);
    },
    paint$2: function(context, offset) {
      var width, left, $top, t1, t2, t3, t4, t5, t6, exception, _this = this;
      try {
        t1 = context.get$canvas(context);
        t2 = _this._size;
        t3 = offset._dx;
        t4 = offset._dy;
        t5 = t2._dx;
        t2 = t2._dy;
        t6 = new H.SurfacePaint(new H.SurfacePaintData());
        t6.set$color(0, $.$get$RenderErrorBox_backgroundColor());
        t1.drawRect$2(new P.Rect(t3, t4, t3 + t5, t4 + t2), t6);
        t1 = _this._paragraph;
        if (t1 != null) {
          width = _this._size._dx;
          left = 0;
          $top = 0;
          if (width > 328) {
            width -= 128;
            left += 64;
          }
          t1.layout$1(new P.ParagraphConstraints(width));
          t1 = _this._size._dy;
          t2 = _this._paragraph;
          if (t1 > 96 + t2.get$height(t2) + 12)
            $top += 96;
          context.get$canvas(context).drawParagraph$2(_this._paragraph, offset.$add(0, new P.Offset(left, $top)));
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  F.FlexFit.prototype = {
    toString$0: function(_) {
      return this._flex$_name;
    }
  };
  F.FlexParentData.prototype = {
    toString$0: function(_) {
      return this.super$BoxParentData$toString(0) + "; flex=" + H.S(this.flex) + "; fit=" + H.S(this.fit);
    }
  };
  F.MainAxisSize.prototype = {
    toString$0: function(_) {
      return this._flex$_name;
    }
  };
  F.MainAxisAlignment.prototype = {
    toString$0: function(_) {
      return this._flex$_name;
    }
  };
  F.CrossAxisAlignment.prototype = {
    toString$0: function(_) {
      return this._flex$_name;
    }
  };
  F.RenderFlex.prototype = {
    set$direction: function(_, value) {
      if (this._flex$_direction !== value) {
        this._flex$_direction = value;
        this.markNeedsLayout$0();
      }
    },
    set$mainAxisAlignment: function(value) {
      if (this._mainAxisAlignment !== value) {
        this._mainAxisAlignment = value;
        this.markNeedsLayout$0();
      }
    },
    set$mainAxisSize: function(value) {
      if (this._mainAxisSize !== value) {
        this._mainAxisSize = value;
        this.markNeedsLayout$0();
      }
    },
    set$crossAxisAlignment: function(value) {
      if (this._crossAxisAlignment !== value) {
        this._crossAxisAlignment = value;
        this.markNeedsLayout$0();
      }
    },
    set$textDirection: function(value) {
      if (this._flex$_textDirection != value) {
        this._flex$_textDirection = value;
        this.markNeedsLayout$0();
      }
    },
    set$verticalDirection: function(value) {
      if (this._verticalDirection !== value) {
        this._verticalDirection = value;
        this.markNeedsLayout$0();
      }
    },
    set$textBaseline: function(_, value) {
    },
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof F.FlexParentData))
        child.parentData = new F.FlexParentData(null, null, C.Offset_0_0);
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      if (this._flex$_direction === C.Axis_0)
        return this.defaultComputeDistanceToHighestActualBaseline$1(baseline);
      return this.defaultComputeDistanceToFirstActualBaseline$1(baseline);
    },
    _getCrossSize$1: function(child) {
      switch (this._flex$_direction) {
        case C.Axis_0:
          return child._size._dy;
        case C.Axis_1:
          return child._size._dx;
      }
      return null;
    },
    _getMainSize$1: function(child) {
      switch (this._flex$_direction) {
        case C.Axis_0:
          return child._size._dx;
        case C.Axis_1:
          return child._size._dy;
      }
      return null;
    },
    performLayout$0: function() {
      var t1, lastFlexChild0, lastFlexChild, totalFlex, totalChildren, crossSize, allocatedSize, childParentData, flex, t2, innerConstraints, freeSpace, spacePerFlex, allocatedFlexSpace, maxBaselineDistance, maxSizeAboveBaseline, maxSizeBelowBaseline, maxChildExtent, t3, minChildExtent, distance, idealSize, actualSize, actualSizeDelta, remainingSpace, flipMainAxis, leadingSpace, betweenSpace, childMainPosition, childCrossPosition, _this = this, _null = null,
        constraints = _this.get$constraints(),
        maxMainSize = _this._flex$_direction === C.Axis_0 ? constraints.maxWidth : constraints.maxHeight,
        canFlex = maxMainSize < 1 / 0,
        child = _this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.FlexParentData, lastFlexChild0 = child, lastFlexChild = _null, totalFlex = 0, totalChildren = 0, crossSize = 0, allocatedSize = 0; lastFlexChild0 != null; lastFlexChild0 = child) {
        childParentData = t1._as(lastFlexChild0.parentData);
        ++totalChildren;
        flex = childParentData.flex;
        if ((flex == null ? 0 : flex) > 0) {
          totalFlex += flex;
          lastFlexChild = lastFlexChild0;
        } else {
          if (_this._crossAxisAlignment === C.CrossAxisAlignment_3)
            switch (_this._flex$_direction) {
              case C.Axis_0:
                t2 = constraints.maxHeight;
                innerConstraints = new S.BoxConstraints(0, 1 / 0, t2, t2);
                break;
              case C.Axis_1:
                t2 = constraints.maxWidth;
                innerConstraints = new S.BoxConstraints(t2, t2, 0, 1 / 0);
                break;
              default:
                innerConstraints = _null;
            }
          else
            switch (_this._flex$_direction) {
              case C.Axis_0:
                innerConstraints = new S.BoxConstraints(0, 1 / 0, 0, constraints.maxHeight);
                break;
              case C.Axis_1:
                innerConstraints = new S.BoxConstraints(0, constraints.maxWidth, 0, 1 / 0);
                break;
              default:
                innerConstraints = _null;
            }
          lastFlexChild0.layout$2$parentUsesSize(innerConstraints, true);
          allocatedSize += _this._getMainSize$1(lastFlexChild0);
          crossSize = Math.max(crossSize, H.checkNum(_this._getCrossSize$1(lastFlexChild0)));
        }
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      freeSpace = Math.max(0, (canFlex ? maxMainSize : 0) - allocatedSize);
      t2 = totalFlex > 0;
      if (t2 || _this._crossAxisAlignment === C.CrossAxisAlignment_4) {
        spacePerFlex = canFlex && t2 ? freeSpace / totalFlex : 0 / 0;
        child = _this.ContainerRenderObjectMixin__firstChild;
        for (t2 = child, allocatedFlexSpace = 0, maxBaselineDistance = 0, maxSizeAboveBaseline = 0, maxSizeBelowBaseline = 0; t2 != null; t2 = child) {
          childParentData = t1._as(t2.parentData);
          flex = childParentData.flex;
          if (flex == null)
            flex = 0;
          if (flex > 0) {
            if (canFlex)
              maxChildExtent = t2 === lastFlexChild ? freeSpace - allocatedFlexSpace : spacePerFlex * flex;
            else
              maxChildExtent = 1 / 0;
            t3 = childParentData.fit;
            switch (t3 == null ? C.FlexFit_0 : t3) {
              case C.FlexFit_0:
                minChildExtent = maxChildExtent;
                break;
              case C.FlexFit_1:
                minChildExtent = 0;
                break;
              default:
                minChildExtent = _null;
            }
            if (_this._crossAxisAlignment === C.CrossAxisAlignment_3)
              switch (_this._flex$_direction) {
                case C.Axis_0:
                  t3 = constraints.maxHeight;
                  innerConstraints = new S.BoxConstraints(minChildExtent, maxChildExtent, t3, t3);
                  break;
                case C.Axis_1:
                  t3 = constraints.maxWidth;
                  innerConstraints = new S.BoxConstraints(t3, t3, minChildExtent, maxChildExtent);
                  break;
                default:
                  innerConstraints = _null;
              }
            else
              switch (_this._flex$_direction) {
                case C.Axis_0:
                  innerConstraints = new S.BoxConstraints(minChildExtent, maxChildExtent, 0, constraints.maxHeight);
                  break;
                case C.Axis_1:
                  innerConstraints = new S.BoxConstraints(0, constraints.maxWidth, minChildExtent, maxChildExtent);
                  break;
                default:
                  innerConstraints = _null;
              }
            t2.layout$2$parentUsesSize(innerConstraints, true);
            allocatedSize += _this._getMainSize$1(t2);
            allocatedFlexSpace += maxChildExtent;
            crossSize = Math.max(crossSize, H.checkNum(_this._getCrossSize$1(t2)));
          }
          if (_this._crossAxisAlignment === C.CrossAxisAlignment_4) {
            distance = t2.getDistanceToBaseline$2$onlyReal(_this._flex$_textBaseline, true);
            if (distance != null) {
              maxBaselineDistance = Math.max(maxBaselineDistance, distance);
              maxSizeAboveBaseline = Math.max(distance, maxSizeAboveBaseline);
              maxSizeBelowBaseline = Math.max(t2._size._dy - distance, maxSizeBelowBaseline);
              crossSize = maxSizeAboveBaseline + maxSizeBelowBaseline;
            }
          }
          child = t1._as(t2.parentData).ContainerParentDataMixin_nextSibling;
        }
      } else
        maxBaselineDistance = 0;
      idealSize = canFlex && _this._mainAxisSize === C.MainAxisSize_1 ? maxMainSize : allocatedSize;
      switch (_this._flex$_direction) {
        case C.Axis_0:
          t2 = _this._size = constraints.constrain$1(new P.Size(idealSize, crossSize));
          actualSize = t2._dx;
          crossSize = t2._dy;
          break;
        case C.Axis_1:
          t2 = _this._size = constraints.constrain$1(new P.Size(crossSize, idealSize));
          actualSize = t2._dy;
          crossSize = t2._dx;
          break;
        default:
          actualSize = _null;
      }
      actualSizeDelta = actualSize - allocatedSize;
      _this._flex$_overflow = Math.max(0, -actualSizeDelta);
      remainingSpace = Math.max(0, actualSizeDelta);
      t2 = F._startIsTopLeft(_this._flex$_direction, _this._flex$_textDirection, _this._verticalDirection);
      flipMainAxis = t2 === false;
      switch (_this._mainAxisAlignment) {
        case C.MainAxisAlignment_0:
          leadingSpace = 0;
          betweenSpace = 0;
          break;
        case C.MainAxisAlignment_1:
          leadingSpace = remainingSpace;
          betweenSpace = 0;
          break;
        case C.MainAxisAlignment_2:
          leadingSpace = remainingSpace / 2;
          betweenSpace = 0;
          break;
        case C.MainAxisAlignment_3:
          betweenSpace = totalChildren > 1 ? remainingSpace / (totalChildren - 1) : 0;
          leadingSpace = 0;
          break;
        case C.MainAxisAlignment_4:
          betweenSpace = totalChildren > 0 ? remainingSpace / totalChildren : 0;
          leadingSpace = betweenSpace / 2;
          break;
        case C.MainAxisAlignment_5:
          betweenSpace = totalChildren > 0 ? remainingSpace / (totalChildren + 1) : 0;
          leadingSpace = betweenSpace;
          break;
        default:
          betweenSpace = _null;
          leadingSpace = betweenSpace;
      }
      childMainPosition = flipMainAxis ? actualSize - leadingSpace : leadingSpace;
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t2 = child; t2 != null; t2 = child) {
        childParentData = t1._as(t2.parentData);
        t3 = _this._crossAxisAlignment;
        switch (t3) {
          case C.CrossAxisAlignment_0:
          case C.CrossAxisAlignment_1:
            childCrossPosition = F._startIsTopLeft(G.flipAxis(_this._flex$_direction), _this._flex$_textDirection, _this._verticalDirection) === (t3 === C.CrossAxisAlignment_0) ? 0 : crossSize - _this._getCrossSize$1(t2);
            break;
          case C.CrossAxisAlignment_2:
            childCrossPosition = crossSize / 2 - _this._getCrossSize$1(t2) / 2;
            break;
          case C.CrossAxisAlignment_3:
            childCrossPosition = 0;
            break;
          case C.CrossAxisAlignment_4:
            if (_this._flex$_direction === C.Axis_0) {
              distance = t2.getDistanceToBaseline$2$onlyReal(_this._flex$_textBaseline, true);
              childCrossPosition = distance != null ? maxBaselineDistance - distance : 0;
            } else
              childCrossPosition = 0;
            break;
          default:
            childCrossPosition = _null;
        }
        if (flipMainAxis)
          childMainPosition -= _this._getMainSize$1(t2);
        switch (_this._flex$_direction) {
          case C.Axis_0:
            childParentData.offset = new P.Offset(childMainPosition, childCrossPosition);
            break;
          case C.Axis_1:
            childParentData.offset = new P.Offset(childCrossPosition, childMainPosition);
            break;
        }
        childMainPosition = flipMainAxis ? childMainPosition - betweenSpace : childMainPosition + (_this._getMainSize$1(t2) + betweenSpace);
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
    },
    hitTestChildren$2$position: function(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paint$2: function(context, offset) {
      var t1, t2, _this = this;
      if (!(_this._flex$_overflow > 1e-10)) {
        _this.defaultPaint$2(context, offset);
        return;
      }
      t1 = _this._size;
      if (t1.get$isEmpty(t1))
        return;
      t1 = _this._needsCompositing;
      t2 = _this._size;
      context.pushClipRect$4(t1, offset, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$defaultPaint());
    },
    describeApproximatePaintClip$1: function(child) {
      var t1;
      if (this._flex$_overflow > 1e-10) {
        t1 = this._size;
        t1 = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      } else
        t1 = null;
      return t1;
    },
    toStringShort$0: function() {
      var header = this.super$RenderObject$toStringShort(),
        t1 = this._flex$_overflow;
      return typeof t1 == "number" && t1 > 1e-10 ? header + " OVERFLOWING" : header;
    }
  };
  F._RenderFlex_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1: function(owner) {
      var child, t1;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.FlexParentData; child != null;) {
        child.attach$1(owner);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0: function(_) {
      var child, t1;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.FlexParentData; child != null;) {
        child.detach$0(0);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  F._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  F._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype = {};
  T.AnnotationEntry.prototype = {
    toString$0: function(_) {
      return "AnnotationEntry(annotation: " + H.S(this.annotation) + ", localPostion: " + this.localPosition.toString$0(0) + ")";
    }
  };
  T.AnnotationResult.prototype = {
    get$annotations: function() {
      return this.annotations$body$AnnotationResult(this.$ti._precomputed1);
    },
    annotations$body$AnnotationResult: function($async$type) {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, _i;
        return function $async$get$annotations($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._layer$_entries, t2 = t1.length, _i = 0;
              case 2:
                // for condition
                if (!(_i < t1.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return t1[_i].annotation;
              case 5:
                // after yield
              case 3:
                // for update
                t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, $async$type);
    }
  };
  T.Layer.prototype = {
    markNeedsAddToScene$0: function() {
      if (this._needsAddToScene)
        return;
      this._needsAddToScene = true;
    },
    set$engineLayer: function(value) {
      var t1, t2, _this = this;
      _this._engineLayer = value;
      t1 = type$.ContainerLayer;
      if (t1._as(B.AbstractNode.prototype.get$parent.call(_this, _this)) != null) {
        t1._as(B.AbstractNode.prototype.get$parent.call(_this, _this)).toString;
        t2 = true;
      } else
        t2 = false;
      if (t2)
        t1._as(B.AbstractNode.prototype.get$parent.call(_this, _this)).markNeedsAddToScene$0();
    },
    updateSubtreeNeedsAddToScene$0: function() {
      this._needsAddToScene = this._needsAddToScene || false;
    },
    dropChild$1: function(child) {
      this.markNeedsAddToScene$0();
      this.super$AbstractNode$dropChild(child);
    },
    remove$0: function(_) {
      var t2, t3, _this = this,
        t1 = type$.ContainerLayer._as(B.AbstractNode.prototype.get$parent.call(_this, _this));
      if (t1 != null) {
        t2 = _this._previousSibling;
        t3 = _this._nextSibling;
        if (t2 == null)
          t1._firstChild = t3;
        else
          t2._nextSibling = t3;
        t3 = _this._nextSibling;
        if (t3 == null)
          t1._lastChild = t2;
        else
          t3._previousSibling = t2;
        _this._nextSibling = _this._previousSibling = null;
        t1.dropChild$1(_this);
      }
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return false;
    },
    find$1$1: function(_, localPosition, $S) {
      var t1 = H.setRuntimeTypeInfo([], $S._eval$1("JSArray<AnnotationEntry<0>>"));
      this.findAnnotations$1$3$onlyFirst(new T.AnnotationResult(t1, $S._eval$1("AnnotationResult<0>")), localPosition, true, $S);
      return t1.length === 0 ? null : C.JSArray_methods.get$first(t1).annotation;
    },
    _addToSceneWithRetainedRendering$1: function(builder) {
      var _this = this;
      if (!_this._needsAddToScene && _this._engineLayer != null) {
        builder.addRetained$1(_this._engineLayer);
        return;
      }
      _this.addToScene$1(builder);
      _this._needsAddToScene = false;
    },
    toStringShort$0: function() {
      var t1 = this.super$DiagnosticableTreeMixin$toStringShort();
      return t1 + (this._node$_owner == null ? " DETACHED" : "");
    },
    $isDiagnosticableTree: 1
  };
  T.PictureLayer.prototype = {
    addToScene$2: function(builder, layerOffset) {
      builder.addPicture$4$isComplexHint$willChangeHint(layerOffset, this._picture, this._isComplexHint, this._willChangeHint);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return false;
    }
  };
  T.PerformanceOverlayLayer.prototype = {
    addToScene$2: function(builder, layerOffset) {
      var shiftedOverlayRect = this._overlayRect;
      shiftedOverlayRect = layerOffset.$eq(0, C.Offset_0_0) ? shiftedOverlayRect : shiftedOverlayRect.shift$1(layerOffset);
      builder.addPerformanceOverlay$2(this.optionsMask, shiftedOverlayRect);
      builder.setRasterizerTracingThreshold$1(this.rasterizerThreshold);
      builder.setCheckerboardRasterCacheImages$1(false);
      builder.setCheckerboardOffscreenLayers$1(false);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return false;
    }
  };
  T.ContainerLayer.prototype = {
    buildScene$1: function(builder) {
      this.updateSubtreeNeedsAddToScene$0();
      this.addToScene$1(builder);
      this._needsAddToScene = false;
      return builder.build$0();
    },
    updateSubtreeNeedsAddToScene$0: function() {
      var child, _this = this;
      _this.super$Layer$updateSubtreeNeedsAddToScene();
      child = _this._firstChild;
      for (; child != null;) {
        child.updateSubtreeNeedsAddToScene$0();
        _this._needsAddToScene = _this._needsAddToScene || child._needsAddToScene;
        child = child._nextSibling;
      }
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst, $S) {
      var child, t1;
      for (child = this._lastChild, t1 = result._layer$_entries; child != null; child = child._previousSibling) {
        if (child.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S))
          return true;
        if (onlyFirst && t1.length !== 0)
          return false;
      }
      return false;
    },
    attach$1: function(owner) {
      var child;
      this.super$AbstractNode$attach(owner);
      child = this._firstChild;
      for (; child != null;) {
        child.attach$1(owner);
        child = child._nextSibling;
      }
    },
    detach$0: function(_) {
      var child;
      this.super$AbstractNode$detach(0);
      child = this._firstChild;
      for (; child != null;) {
        child.detach$0(0);
        child = child._nextSibling;
      }
    },
    append$1: function(_, child) {
      var t1, _this = this;
      _this.markNeedsAddToScene$0();
      _this.super$AbstractNode$adoptChild(child);
      t1 = child._previousSibling = _this._lastChild;
      if (t1 != null)
        t1._nextSibling = child;
      _this._lastChild = child;
      if (_this._firstChild == null)
        _this._firstChild = child;
    },
    removeAllChildren$0: function() {
      var next, _this = this,
        child = _this._firstChild;
      for (; child != null; child = next) {
        next = child._nextSibling;
        child._nextSibling = child._previousSibling = null;
        _this.markNeedsAddToScene$0();
        _this.super$AbstractNode$dropChild(child);
      }
      _this._lastChild = _this._firstChild = null;
    },
    addToScene$2: function(builder, layerOffset) {
      this.addChildrenToScene$2(builder, layerOffset);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    },
    addChildrenToScene$2: function(builder, childOffset) {
      var child = this._firstChild;
      for (; child != null;) {
        if (childOffset.$eq(0, C.Offset_0_0))
          child._addToSceneWithRetainedRendering$1(builder);
        else
          child.addToScene$2(builder, childOffset);
        child = child._nextSibling;
      }
    },
    addChildrenToScene$1: function(builder) {
      return this.addChildrenToScene$2(builder, C.Offset_0_0);
    },
    debugDescribeChildren$0: function() {
      var count, t1,
        children = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode),
        child = this._firstChild;
      if (child == null)
        return children;
      for (count = 1; true;) {
        t1 = "child " + count;
        child.toString;
        children.push(new Y.DiagnosticableTreeNode(child, t1, true, true, null, null));
        if (child === this._lastChild)
          break;
        ++count;
        child = child._nextSibling;
      }
      return children;
    }
  };
  T.OffsetLayer.prototype = {
    set$offset: function(_, value) {
      if (!value.$eq(0, this._layer$_offset))
        this.markNeedsAddToScene$0();
      this._layer$_offset = value;
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst, $S) {
      return this.super$ContainerLayer$findAnnotations(result, localPosition.$sub(0, this._layer$_offset), onlyFirst, $S);
    },
    addToScene$2: function(builder, layerOffset) {
      var _this = this,
        t1 = _this._layer$_offset;
      _this.set$engineLayer(builder.pushOffset$3$oldLayer(layerOffset._dx + t1._dx, layerOffset._dy + t1._dy, type$.OffsetEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0();
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    }
  };
  T.ClipRectLayer.prototype = {
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst, $S) {
      if (!this._clipRect.contains$1(0, localPosition))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, onlyFirst, $S);
    },
    addToScene$2: function(builder, layerOffset) {
      var _this = this,
        t1 = layerOffset.$eq(0, C.Offset_0_0),
        shiftedClipRect = _this._clipRect;
      shiftedClipRect = t1 ? shiftedClipRect : shiftedClipRect.shift$1(layerOffset);
      _this.set$engineLayer(builder.pushClipRect$3$clipBehavior$oldLayer(shiftedClipRect, _this._layer$_clipBehavior, type$.ClipRectEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$2(builder, layerOffset);
      builder.pop$0();
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    }
  };
  T.ClipPathLayer.prototype = {
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst, $S) {
      if (!this._clipPath.contains$1(0, localPosition))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, onlyFirst, $S);
    },
    addToScene$2: function(builder, layerOffset) {
      var _this = this,
        t1 = layerOffset.$eq(0, C.Offset_0_0),
        shiftedPath = _this._clipPath;
      shiftedPath = t1 ? shiftedPath : shiftedPath.shift$1(layerOffset);
      _this.set$engineLayer(builder.pushClipPath$3$clipBehavior$oldLayer(shiftedPath, _this._layer$_clipBehavior, type$.ClipPathEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$2(builder, layerOffset);
      builder.pop$0();
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    }
  };
  T.TransformLayer.prototype = {
    set$transform: function(_, value) {
      var _this = this;
      if (value.$eq(0, _this._layer$_transform))
        return;
      _this._layer$_transform = value;
      _this._inverseDirty = true;
      _this.markNeedsAddToScene$0();
    },
    addToScene$2: function(builder, layerOffset) {
      var totalOffset, t1, _this = this;
      _this._lastEffectiveTransform = _this._layer$_transform;
      totalOffset = _this._layer$_offset.$add(0, layerOffset);
      if (!totalOffset.$eq(0, C.Offset_0_0)) {
        t1 = E.Matrix4_Matrix4$translationValues(totalOffset._dx, totalOffset._dy, 0);
        t1.multiply$1(0, _this._lastEffectiveTransform);
        _this._lastEffectiveTransform = t1;
      }
      _this.set$engineLayer(builder.pushTransform$2$oldLayer(_this._lastEffectiveTransform._m4storage, type$.TransformEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0();
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    },
    _transformOffset$1: function(localPosition) {
      var t1, _this = this;
      if (_this._inverseDirty) {
        _this._invertedTransform = E.Matrix4_tryInvert(F.PointerEvent_removePerspectiveTransform(_this._layer$_transform));
        _this._inverseDirty = false;
      }
      t1 = _this._invertedTransform;
      if (t1 == null)
        return null;
      return T.MatrixUtils_transformPoint(t1, localPosition);
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst, $S) {
      var transformedOffset = this._transformOffset$1(localPosition);
      if (transformedOffset == null)
        return false;
      return this.super$OffsetLayer$findAnnotations(result, transformedOffset, onlyFirst, $S);
    }
  };
  T.OpacityLayer.prototype = {
    addToScene$2: function(builder, layerOffset) {
      var _this = this,
        enabled = _this._firstChild != null;
      if (enabled)
        _this.set$engineLayer(builder.pushOpacity$3$offset$oldLayer(_this._layer$_alpha, _this._layer$_offset.$add(0, layerOffset), type$.OpacityEngineLayer._as(_this._engineLayer)));
      else
        _this.set$engineLayer(null);
      _this.addChildrenToScene$1(builder);
      if (enabled)
        builder.pop$0();
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    }
  };
  T.PhysicalModelLayer.prototype = {
    set$clipPath: function(_, value) {
      if (value !== this._clipPath) {
        this._clipPath = value;
        this.markNeedsAddToScene$0();
      }
    },
    set$clipBehavior: function(value) {
      if (value !== this._layer$_clipBehavior) {
        this._layer$_clipBehavior = value;
        this.markNeedsAddToScene$0();
      }
    },
    set$elevation: function(_, value) {
      if (value != this._layer$_elevation) {
        this._layer$_elevation = value;
        this.markNeedsAddToScene$0();
      }
    },
    set$color: function(_, value) {
      if (!J.$eq$(value, this._layer$_color)) {
        this._layer$_color = value;
        this.markNeedsAddToScene$0();
      }
    },
    set$shadowColor: function(_, value) {
      if (!J.$eq$(value, this._layer$_shadowColor)) {
        this._layer$_shadowColor = value;
        this.markNeedsAddToScene$0();
      }
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst, $S) {
      if (!this._clipPath.contains$1(0, localPosition))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, onlyFirst, $S);
    },
    addToScene$2: function(builder, layerOffset) {
      var t3, t4, _this = this,
        t1 = layerOffset.$eq(0, C.Offset_0_0),
        t2 = _this._clipPath;
      t1 = t1 ? t2 : t2.shift$1(layerOffset);
      t2 = _this._layer$_elevation;
      t3 = _this._layer$_color;
      t4 = _this._layer$_shadowColor;
      _this.set$engineLayer(builder.pushPhysicalShape$6$clipBehavior$color$elevation$oldLayer$path$shadowColor(_this._layer$_clipBehavior, t3, t2, type$.PhysicalShapeEngineLayer._as(_this._engineLayer), t1, t4));
      _this.addChildrenToScene$2(builder, layerOffset);
      builder.pop$0();
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    }
  };
  T.AnnotatedRegionLayer.prototype = {
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst, $S) {
      var t2, t3, t4, _this = this,
        isAbsorbed = _this.super$ContainerLayer$findAnnotations(result, localPosition, onlyFirst, $S),
        t1 = result._layer$_entries;
      if (t1.length !== 0 && onlyFirst)
        return isAbsorbed;
      t2 = _this.size;
      if (t2 != null) {
        t3 = _this.offset;
        t4 = t3._dx;
        t3 = t3._dy;
        t2 = !new P.Rect(t4, t3, t4 + t2._dx, t3 + t2._dy).contains$1(0, localPosition);
      } else
        t2 = false;
      if (t2)
        return isAbsorbed;
      if (H.createRuntimeType(_this.$ti._precomputed1) === H.createRuntimeType($S)) {
        isAbsorbed = isAbsorbed || _this.opaque;
        t1.push(new T.AnnotationEntry($S._as(_this.value), localPosition.$sub(0, _this.offset), $S._eval$1("AnnotationEntry<0>")));
      }
      return isAbsorbed;
    }
  };
  T._Layer_AbstractNode_DiagnosticableTreeMixin.prototype = {};
  Y.MouseTrackerAnnotation.prototype = {};
  Y._MouseState.prototype = {
    toString$0: function(_) {
      var describeLatestEvent = "latestEvent: " + H.S(new Y._MouseState_toString_describeEvent().call$1(this._latestEvent)),
        describeAnnotations = "annotations: [list of " + this._annotations._collection$_length + "]";
      return "<optimized out>#" + Y.shortHash(this) + "(" + describeLatestEvent + ", " + describeAnnotations + ")";
    }
  };
  Y._MouseState_toString_describeEvent.prototype = {
    call$1: function($event) {
      var t1 = "<optimized out>#" + Y.shortHash($event);
      return t1;
    },
    $signature: 105
  };
  Y.MouseTracker.prototype = {
    _mouse_tracking$_handleEvent$1: function($event) {
      var existingState;
      if ($event.kind !== C.PointerDeviceKind_1)
        return;
      if ($event instanceof F.PointerSignalEvent)
        return;
      existingState = this._mouseStates.$index(0, $event.device);
      if (!Y.MouseTracker__shouldMarkStateDirty(existingState, $event))
        return;
      this._updateDevices$2$handleUpdatedDevice$targetEvent(new Y.MouseTracker__handleEvent_closure($event, existingState == null ? null : existingState._latestEvent), $event);
    },
    _updateAllDevices$0: function() {
      this._updateDevices$1$handleUpdatedDevice(new Y.MouseTracker__updateAllDevices_closure());
    },
    _updateDevices$2$handleUpdatedDevice$targetEvent: function(handleUpdatedDevice, targetEvent) {
      var t3, targetState, t4, t5, t6, t7, nextAnnotations, previous,
        t1 = this._mouseStates,
        mouseWasConnected = t1.get$isNotEmpty(t1),
        t2 = targetEvent == null;
      if (!t2) {
        t3 = targetEvent.device;
        targetState = t1.$index(0, t3);
        if (targetState == null) {
          targetState = new Y._MouseState(P.LinkedHashSet_LinkedHashSet(type$.MouseTrackerAnnotation), targetEvent);
          t1.$indexSet(0, t3, targetState);
        } else {
          targetState._latestEvent = targetEvent;
          if (targetEvent instanceof F.PointerRemovedEvent)
            t1.remove$1(0, t3);
        }
      } else
        targetState = null;
      for (t2 = J.get$iterator$ax(t2 ? t1.get$values(t1) : H.setRuntimeTypeInfo([targetState], type$.JSArray__MouseState)), t3 = type$.MouseTrackerAnnotation, t4 = type$.LinkedHashSet_MouseTrackerAnnotation, t5 = this.annotationFinder; t2.moveNext$0();) {
        t6 = t2.get$current(t2);
        t7 = t6._latestEvent;
        nextAnnotations = t1.containsKey$1(0, t7.device) ? P.LinkedHashSet_LinkedHashSet$from(t5.call$1(t7.position), t3) : t4._as(P.LinkedHashSet_LinkedHashSet$_empty(t3));
        previous = t6._annotations;
        t6._annotations = nextAnnotations;
        handleUpdatedDevice.call$2(t6, previous);
      }
      if (mouseWasConnected !== t1.get$isNotEmpty(t1))
        this.notifyListeners$0();
    },
    _updateDevices$1$handleUpdatedDevice: function(handleUpdatedDevice) {
      return this._updateDevices$2$handleUpdatedDevice$targetEvent(handleUpdatedDevice, null);
    },
    schedulePostFrameCheck$0: function() {
      var _this = this,
        t1 = _this._mouseStates;
      if (!t1.get$isNotEmpty(t1))
        return;
      if (!_this._hasScheduledPostFrameCheck) {
        _this._hasScheduledPostFrameCheck = true;
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new Y.MouseTracker_schedulePostFrameCheck_closure(_this));
      }
    }
  };
  Y.MouseTracker__handleEvent_closure.prototype = {
    call$2: function(mouseState, previousAnnotations) {
      Y.MouseTracker__dispatchDeviceCallbacks(previousAnnotations, mouseState._annotations, this.previousEvent, this.event);
    },
    $signature: 56
  };
  Y.MouseTracker__updateAllDevices_closure.prototype = {
    call$2: function(mouseState, previousAnnotations) {
      Y.MouseTracker__dispatchDeviceCallbacks(previousAnnotations, mouseState._annotations, mouseState._latestEvent, null);
    },
    $signature: 56
  };
  Y.MouseTracker__dispatchDeviceCallbacks_closure.prototype = {
    call$1: function(value) {
      return !this.nextAnnotations.contains$1(0, value);
    }
  };
  Y.MouseTracker_schedulePostFrameCheck_closure.prototype = {
    call$1: function(duration) {
      var t1 = this.$this;
      t1._hasScheduledPostFrameCheck = false;
      t1._updateAllDevices$0();
    },
    $signature: 6
  };
  Y._MouseTrackerAnnotation_Object_Diagnosticable.prototype = {};
  K.ParentData.prototype = {
    detach$0: function(_) {
    },
    toString$0: function(_) {
      return "<none>";
    }
  };
  K.PaintingContext.prototype = {
    paintChild$2: function(child, offset) {
      if (child.get$isRepaintBoundary()) {
        this.stopRecordingIfNeeded$0();
        if (child._needsPaint)
          K.PaintingContext__repaintCompositedChild(child, null, true);
        type$.OffsetLayer._as(child._layer).set$offset(0, offset);
        this.appendLayer$1(child._layer);
      } else
        child._paintWithContext$2(this, offset);
    },
    appendLayer$1: function(layer) {
      layer.remove$0(0);
      this._containerLayer.append$1(0, layer);
    },
    get$canvas: function(_) {
      var t1, _this = this;
      if (_this._object$_canvas == null) {
        _this._currentLayer = new T.PictureLayer(_this.estimatedBounds);
        t1 = P.PictureRecorder_PictureRecorder();
        _this._object$_recorder = t1;
        _this._object$_canvas = P.Canvas_Canvas(t1, null);
        _this._containerLayer.append$1(0, _this._currentLayer);
      }
      return _this._object$_canvas;
    },
    stopRecordingIfNeeded$0: function() {
      var t1, t2, _this = this;
      if (_this._object$_canvas == null)
        return;
      t1 = _this._currentLayer;
      t2 = _this._object$_recorder.endRecording$0();
      t1.markNeedsAddToScene$0();
      t1._picture = t2;
      _this._object$_canvas = _this._object$_recorder = _this._currentLayer = null;
    },
    setIsComplexHint$0: function() {
      var t1 = this._currentLayer;
      if (t1 != null)
        if (!t1._isComplexHint) {
          t1._isComplexHint = true;
          t1.markNeedsAddToScene$0();
        }
    },
    pushLayer$4$childPaintBounds: function(childLayer, painter, offset, childPaintBounds) {
      var childContext, _this = this;
      if (childLayer._firstChild != null)
        childLayer.removeAllChildren$0();
      _this.stopRecordingIfNeeded$0();
      _this.appendLayer$1(childLayer);
      childContext = _this.createChildContext$2(childLayer, childPaintBounds == null ? _this.estimatedBounds : childPaintBounds);
      painter.call$2(childContext, offset);
      childContext.stopRecordingIfNeeded$0();
    },
    pushLayer$3: function(childLayer, painter, offset) {
      return this.pushLayer$4$childPaintBounds(childLayer, painter, offset, null);
    },
    createChildContext$2: function(childLayer, bounds) {
      return new K.PaintingContext(childLayer, bounds);
    },
    pushClipRect$6$clipBehavior$oldLayer: function(needsCompositing, offset, clipRect, painter, clipBehavior, oldLayer) {
      var layer,
        offsetClipRect = clipRect.shift$1(offset);
      if (needsCompositing) {
        layer = oldLayer == null ? new T.ClipRectLayer(C.Clip_1) : oldLayer;
        if (!offsetClipRect.$eq(0, layer._clipRect)) {
          layer._clipRect = offsetClipRect;
          layer.markNeedsAddToScene$0();
        }
        if (clipBehavior !== layer._layer$_clipBehavior) {
          layer._layer$_clipBehavior = clipBehavior;
          layer.markNeedsAddToScene$0();
        }
        this.pushLayer$4$childPaintBounds(layer, painter, offset, offsetClipRect);
        return layer;
      } else {
        this.clipRectAndPaint$4(offsetClipRect, clipBehavior, offsetClipRect, new K.PaintingContext_pushClipRect_closure(this, painter, offset));
        return null;
      }
    },
    pushClipRect$4: function(needsCompositing, offset, clipRect, painter) {
      return this.pushClipRect$6$clipBehavior$oldLayer(needsCompositing, offset, clipRect, painter, C.Clip_1, null);
    },
    pushClipPath$7$clipBehavior$oldLayer: function(needsCompositing, offset, bounds, clipPath, painter, clipBehavior, oldLayer) {
      var layer,
        offsetBounds = bounds.shift$1(offset),
        offsetClipPath = clipPath.shift$1(offset);
      if (needsCompositing) {
        layer = oldLayer == null ? new T.ClipPathLayer(C.Clip_2) : oldLayer;
        if (offsetClipPath !== layer._clipPath) {
          layer._clipPath = offsetClipPath;
          layer.markNeedsAddToScene$0();
        }
        if (clipBehavior !== layer._layer$_clipBehavior) {
          layer._layer$_clipBehavior = clipBehavior;
          layer.markNeedsAddToScene$0();
        }
        this.pushLayer$4$childPaintBounds(layer, painter, offset, offsetBounds);
        return layer;
      } else {
        this.clipPathAndPaint$4(offsetClipPath, clipBehavior, offsetBounds, new K.PaintingContext_pushClipPath_closure(this, painter, offset));
        return null;
      }
    },
    pushTransform$5$oldLayer: function(needsCompositing, offset, transform, painter, oldLayer) {
      var layer, _this = this,
        t1 = offset._dx,
        t2 = offset._dy,
        effectiveTransform = E.Matrix4_Matrix4$translationValues(t1, t2, 0);
      effectiveTransform.multiply$1(0, transform);
      effectiveTransform.translate$2(0, -t1, -t2);
      if (needsCompositing) {
        layer = oldLayer == null ? new T.TransformLayer(null, C.Offset_0_0) : oldLayer;
        layer.set$transform(0, effectiveTransform);
        _this.pushLayer$4$childPaintBounds(layer, painter, offset, T.MatrixUtils_inverseTransformRect(effectiveTransform, _this.estimatedBounds));
        return layer;
      } else {
        t1 = _this.get$canvas(_this);
        t1.save$0(0);
        t1.transform$1(0, effectiveTransform._m4storage);
        painter.call$2(_this, offset);
        _this.get$canvas(_this).restore$0(0);
        return null;
      }
    },
    pushTransform$4: function(needsCompositing, offset, transform, painter) {
      return this.pushTransform$5$oldLayer(needsCompositing, offset, transform, painter, null);
    },
    pushOpacity$4$oldLayer: function(offset, alpha, painter, oldLayer) {
      var layer = oldLayer == null ? new T.OpacityLayer(C.Offset_0_0) : oldLayer;
      if (alpha != layer._layer$_alpha) {
        layer._layer$_alpha = alpha;
        layer.markNeedsAddToScene$0();
      }
      if (!offset.$eq(0, layer._layer$_offset)) {
        layer._layer$_offset = offset;
        layer.markNeedsAddToScene$0();
      }
      this.pushLayer$3(layer, painter, C.Offset_0_0);
      return layer;
    },
    toString$0: function(_) {
      return "PaintingContext#" + H.Primitives_objectHashCode(this) + "(layer: " + H.S(this._containerLayer) + ", canvas bounds: " + H.S(this.estimatedBounds) + ")";
    }
  };
  K.PaintingContext_pushClipRect_closure.prototype = {
    call$0: function() {
      return this.painter.call$2(this.$this, this.offset);
    },
    $signature: 1
  };
  K.PaintingContext_pushClipPath_closure.prototype = {
    call$0: function() {
      return this.painter.call$2(this.$this, this.offset);
    },
    $signature: 1
  };
  K.Constraints.prototype = {};
  K.SemanticsHandle.prototype = {
    dispose$0: function() {
      var t2, _this = this,
        t1 = _this._object$_owner;
      if (t1 != null) {
        t2 = _this.listener;
        if (t2 != null)
          t1._semanticsOwner.ChangeNotifier__listeners.remove$1(0, t2);
        t1 = _this._object$_owner;
        if (--t1._outstandingSemanticsHandles === 0) {
          t2 = t1._semanticsOwner;
          t2._semantics$_dirtyNodes.clear$0(0);
          t2._nodes.clear$0(0);
          t2._detachedNodes.clear$0(0);
          t2.super$ChangeNotifier$dispose();
          t1._semanticsOwner = null;
          t1.onSemanticsOwnerDisposed.call$0();
        }
        _this._object$_owner = null;
      }
    }
  };
  K.PipelineOwner.prototype = {
    set$rootNode: function(value) {
      var t1 = this._rootNode;
      if (t1 === value)
        return;
      if (t1 != null)
        t1.detach$0(0);
      this._rootNode = value;
      value.attach$1(this);
    },
    flushLayout$0: function() {
      var dirtyNodes, node, t1, t2, t3, t4, t5, _i;
      P.Timeline_startSync("Layout", C.Map_9aZ6I, null);
      try {
        for (t1 = type$.PipelineOwner, t2 = type$.JSArray_RenderObject; t3 = this._nodesNeedingLayout, t3.length !== 0;) {
          dirtyNodes = t3;
          this._nodesNeedingLayout = H.setRuntimeTypeInfo([], t2);
          t3 = dirtyNodes;
          t4 = new K.PipelineOwner_flushLayout_closure();
          if (!!t3.immutable$list)
            H.throwExpression(P.UnsupportedError$("sort"));
          t5 = t3.length - 1;
          if (t5 - 0 <= 32)
            H.Sort__insertionSort(t3, 0, t5, t4);
          else
            H.Sort__dualPivotQuicksort(t3, 0, t5, t4);
          t4 = t3.length;
          _i = 0;
          for (; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i) {
            node = t3[_i];
            if (node._needsLayout) {
              t5 = node;
              t5 = t1._as(B.AbstractNode.prototype.get$owner.call(t5)) === this;
            } else
              t5 = false;
            if (t5)
              node._layoutWithoutResize$0();
          }
        }
      } finally {
        P.Timeline_finishSync();
      }
    },
    _enableMutationsToDirtySubtrees$1: function(callback) {
      try {
        callback.call$0();
      } finally {
      }
    },
    flushCompositingBits$0: function() {
      var t1, t2, t3, _i, node;
      P.Timeline_startSync("Compositing bits", null, null);
      t1 = this._nodesNeedingCompositingBitsUpdate;
      C.JSArray_methods.sort$1(t1, new K.PipelineOwner_flushCompositingBits_closure());
      for (t2 = t1.length, t3 = type$.PipelineOwner, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        if (node._needsCompositingBitsUpdate && t3._as(B.AbstractNode.prototype.get$owner.call(node)) === this)
          node._updateCompositingBits$0();
      }
      C.JSArray_methods.set$length(t1, 0);
      P.Timeline_finishSync();
    },
    flushPaint$0: function() {
      var dirtyNodes, node, t1, t2, t3, _i, t4;
      P.Timeline_startSync("Paint", C.Map_9aZ6I, null);
      try {
        dirtyNodes = this._nodesNeedingPaint;
        this._nodesNeedingPaint = H.setRuntimeTypeInfo([], type$.JSArray_RenderObject);
        for (t1 = dirtyNodes, J.sort$1$ax(t1, new K.PipelineOwner_flushPaint_closure()), t2 = t1.length, t3 = type$.PipelineOwner, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          if (node._needsPaint) {
            t4 = node;
            t4 = t3._as(B.AbstractNode.prototype.get$owner.call(t4)) === this;
          } else
            t4 = false;
          if (t4)
            if (node._layer._node$_owner != null)
              K.PaintingContext__repaintCompositedChild(node, null, false);
            else
              node._skippedPaintingOnLayer$0();
        }
      } finally {
        P.Timeline_finishSync();
      }
    },
    ensureSemantics$1$listener: function(listener) {
      var t1, _this = this;
      if (++_this._outstandingSemanticsHandles === 1) {
        t1 = type$.SemanticsNode;
        _this._semanticsOwner = new A.SemanticsOwner(P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashMap_LinkedHashMap$_empty(type$.int, t1), P.LinkedHashSet_LinkedHashSet$_empty(t1), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
        _this.onSemanticsOwnerCreated.call$0();
      }
      if (listener != null) {
        t1 = _this._semanticsOwner.ChangeNotifier__listeners;
        t1._isDirty = true;
        t1._list.push(listener);
      }
      return new K.SemanticsHandle(_this, listener);
    },
    ensureSemantics$0: function() {
      return this.ensureSemantics$1$listener(null);
    },
    flushSemantics$0: function() {
      var nodesToProcess, node, t1, nodesToProcess0, t2, t3, _i, t4, _this = this;
      if (_this._semanticsOwner == null)
        return;
      P.Timeline_startSync("Semantics", null, null);
      try {
        t1 = _this._nodesNeedingSemantics;
        nodesToProcess0 = t1.toList$0(0);
        C.JSArray_methods.sort$1(nodesToProcess0, new K.PipelineOwner_flushSemantics_closure());
        nodesToProcess = nodesToProcess0;
        t1.clear$0(0);
        for (t1 = nodesToProcess, t2 = t1.length, t3 = type$.PipelineOwner, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          if (node._needsSemanticsUpdate) {
            t4 = node;
            t4 = t3._as(B.AbstractNode.prototype.get$owner.call(t4)) === _this;
          } else
            t4 = false;
          if (t4)
            node._updateSemantics$0();
        }
        _this._semanticsOwner.sendSemanticsUpdate$0();
      } finally {
        P.Timeline_finishSync();
      }
    }
  };
  K.PipelineOwner_flushLayout_closure.prototype = {
    call$2: function(a, b) {
      return a._node$_depth - b._node$_depth;
    },
    $signature: 23
  };
  K.PipelineOwner_flushCompositingBits_closure.prototype = {
    call$2: function(a, b) {
      return a._node$_depth - b._node$_depth;
    },
    $signature: 23
  };
  K.PipelineOwner_flushPaint_closure.prototype = {
    call$2: function(a, b) {
      return b._node$_depth - a._node$_depth;
    },
    $signature: 23
  };
  K.PipelineOwner_flushSemantics_closure.prototype = {
    call$2: function(a, b) {
      return a._node$_depth - b._node$_depth;
    },
    $signature: 23
  };
  K.RenderObject.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof K.ParentData))
        child.parentData = new K.ParentData();
    },
    adoptChild$1: function(child) {
      var _this = this;
      _this.setupParentData$1(child);
      _this.markNeedsLayout$0();
      _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsSemanticsUpdate$0();
      _this.super$AbstractNode$adoptChild(child);
    },
    dropChild$1: function(child) {
      var _this = this;
      child._cleanRelayoutBoundary$0();
      child.parentData.detach$0(0);
      child.parentData = null;
      _this.super$AbstractNode$dropChild(child);
      _this.markNeedsLayout$0();
      _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    visitChildren$1: function(visitor) {
    },
    _debugReportException$3: function(method, exception, stack) {
      var _null = null,
        t1 = "during " + method + "()";
      t1 = K.FlutterErrorDetailsForRendering$(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t1], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), exception, new K.RenderObject__debugReportException_closure(this), "rendering library", this, stack);
      $.$get$FlutterError_onError().call$1(t1);
    },
    attach$1: function(owner) {
      var _this = this;
      _this.super$AbstractNode$attach(owner);
      if (_this._needsLayout && _this._relayoutBoundary != null) {
        _this._needsLayout = false;
        _this.markNeedsLayout$0();
      }
      if (_this._needsCompositingBitsUpdate) {
        _this._needsCompositingBitsUpdate = false;
        _this.markNeedsCompositingBitsUpdate$0();
      }
      if (_this._needsPaint && _this._layer != null) {
        _this._needsPaint = false;
        _this.markNeedsPaint$0();
      }
      if (_this._needsSemanticsUpdate && _this.get$_semanticsConfiguration()._isSemanticBoundary) {
        _this._needsSemanticsUpdate = false;
        _this.markNeedsSemanticsUpdate$0();
      }
    },
    get$constraints: function() {
      return this._constraints;
    },
    markNeedsLayout$0: function() {
      var t1, _this = this;
      if (_this._needsLayout)
        return;
      if (_this._relayoutBoundary !== _this)
        _this.markParentNeedsLayout$0();
      else {
        _this._needsLayout = true;
        t1 = type$.PipelineOwner;
        if (t1._as(B.AbstractNode.prototype.get$owner.call(_this)) != null) {
          t1._as(B.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingLayout.push(_this);
          t1._as(B.AbstractNode.prototype.get$owner.call(_this)).onNeedVisualUpdate.call$0();
        }
      }
    },
    markParentNeedsLayout$0: function() {
      this._needsLayout = true;
      var $parent = type$.RenderObject._as(this._node$_parent);
      if (!this._doingThisLayoutWithCallback)
        $parent.markNeedsLayout$0();
    },
    _cleanRelayoutBoundary$0: function() {
      var _this = this;
      if (_this._relayoutBoundary !== _this) {
        _this._relayoutBoundary = null;
        _this._needsLayout = true;
        _this.visitChildren$1(K.object_RenderObject__cleanChildRelayoutBoundary$closure());
      }
    },
    _layoutWithoutResize$0: function() {
      var e, stack, exception, _this = this;
      try {
        _this.performLayout$0();
        _this.markNeedsSemanticsUpdate$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        stack = H.getTraceFromException(exception);
        _this._debugReportException$3("performLayout", e, stack);
      }
      _this._needsLayout = false;
      _this.markNeedsPaint$0();
    },
    layout$2$parentUsesSize: function(constraints, parentUsesSize) {
      var e, stack, e0, stack0, t1, exception, _this = this,
        relayoutBoundary = !parentUsesSize || _this.get$sizedByParent() || constraints.get$isTight() || !(_this._node$_parent instanceof K.RenderObject) ? _this : type$.RenderObject._as(_this._node$_parent)._relayoutBoundary;
      if (!_this._needsLayout && J.$eq$(constraints, _this._constraints) && relayoutBoundary == _this._relayoutBoundary)
        return;
      _this._constraints = constraints;
      t1 = _this._relayoutBoundary;
      if (t1 != null && relayoutBoundary !== t1)
        _this.visitChildren$1(K.object_RenderObject__cleanChildRelayoutBoundary$closure());
      _this._relayoutBoundary = relayoutBoundary;
      if (_this.get$sizedByParent())
        try {
          _this.performResize$0();
        } catch (exception) {
          e = H.unwrapException(exception);
          stack = H.getTraceFromException(exception);
          _this._debugReportException$3("performResize", e, stack);
        }
      try {
        _this.performLayout$0();
        _this.markNeedsSemanticsUpdate$0();
      } catch (exception) {
        e0 = H.unwrapException(exception);
        stack0 = H.getTraceFromException(exception);
        _this._debugReportException$3("performLayout", e0, stack0);
      }
      _this._needsLayout = false;
      _this.markNeedsPaint$0();
    },
    layout$1: function(constraints) {
      return this.layout$2$parentUsesSize(constraints, false);
    },
    get$sizedByParent: function() {
      return false;
    },
    invokeLayoutCallback$1$1: function(callback, $T) {
      var _this = this;
      _this._doingThisLayoutWithCallback = true;
      try {
        type$.PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(_this))._enableMutationsToDirtySubtrees$1(new K.RenderObject_invokeLayoutCallback_closure(_this, callback, $T));
      } finally {
        _this._doingThisLayoutWithCallback = false;
      }
    },
    get$isRepaintBoundary: function() {
      return false;
    },
    get$alwaysNeedsCompositing: function() {
      return false;
    },
    get$layer: function(_) {
      return this._layer;
    },
    markNeedsCompositingBitsUpdate$0: function() {
      var t1, _this = this;
      if (_this._needsCompositingBitsUpdate)
        return;
      _this._needsCompositingBitsUpdate = true;
      t1 = _this._node$_parent;
      if (t1 instanceof K.RenderObject) {
        if (t1._needsCompositingBitsUpdate)
          return;
        if (!_this.get$isRepaintBoundary() && !t1.get$isRepaintBoundary()) {
          t1.markNeedsCompositingBitsUpdate$0();
          return;
        }
      }
      t1 = type$.PipelineOwner;
      if (t1._as(B.AbstractNode.prototype.get$owner.call(_this)) != null)
        t1._as(B.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingCompositingBitsUpdate.push(_this);
    },
    get$needsCompositing: function() {
      return this._needsCompositing;
    },
    _updateCompositingBits$0: function() {
      var oldNeedsCompositing, _this = this;
      if (!_this._needsCompositingBitsUpdate)
        return;
      oldNeedsCompositing = _this._needsCompositing;
      _this._needsCompositing = false;
      _this.visitChildren$1(new K.RenderObject__updateCompositingBits_closure(_this));
      if (_this.get$isRepaintBoundary() || _this.get$alwaysNeedsCompositing())
        _this._needsCompositing = true;
      if (oldNeedsCompositing != _this._needsCompositing)
        _this.markNeedsPaint$0();
      _this._needsCompositingBitsUpdate = false;
    },
    markNeedsPaint$0: function() {
      var t1, _this = this;
      if (_this._needsPaint)
        return;
      _this._needsPaint = true;
      if (_this.get$isRepaintBoundary()) {
        t1 = type$.PipelineOwner;
        if (t1._as(B.AbstractNode.prototype.get$owner.call(_this)) != null) {
          t1._as(B.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingPaint.push(_this);
          t1._as(B.AbstractNode.prototype.get$owner.call(_this)).onNeedVisualUpdate.call$0();
        }
      } else {
        t1 = _this._node$_parent;
        if (t1 instanceof K.RenderObject)
          t1.markNeedsPaint$0();
        else {
          t1 = type$.PipelineOwner;
          if (t1._as(B.AbstractNode.prototype.get$owner.call(_this)) != null)
            t1._as(B.AbstractNode.prototype.get$owner.call(_this)).onNeedVisualUpdate.call$0();
        }
      }
    },
    _skippedPaintingOnLayer$0: function() {
      var t1,
        ancestor = this._node$_parent;
      for (; ancestor instanceof K.RenderObject;) {
        if (ancestor.get$isRepaintBoundary()) {
          t1 = ancestor._layer;
          if (t1 == null)
            break;
          if (t1._node$_owner != null)
            break;
          ancestor._needsPaint = true;
        }
        ancestor = ancestor._node$_parent;
      }
    },
    _paintWithContext$2: function(context, offset) {
      var e, stack, exception, _this = this;
      if (_this._needsLayout)
        return;
      _this._needsPaint = false;
      try {
        _this.paint$2(context, offset);
      } catch (exception) {
        e = H.unwrapException(exception);
        stack = H.getTraceFromException(exception);
        _this._debugReportException$3("paint", e, stack);
      }
    },
    paint$2: function(context, offset) {
    },
    applyPaintTransform$2: function(child, transform) {
    },
    getTransformTo$1: function(_, ancestor) {
      var rootNode, renderers, t2, renderer, transform, index, index0,
        t1 = ancestor == null;
      if (t1) {
        rootNode = type$.PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(this))._rootNode;
        if (rootNode instanceof K.RenderObject)
          ancestor = rootNode;
      }
      renderers = H.setRuntimeTypeInfo([], type$.JSArray_RenderObject);
      for (t2 = type$.RenderObject, renderer = this; renderer != ancestor; renderer = t2._as(renderer._node$_parent))
        renderers.push(renderer);
      if (!t1)
        renderers.push(ancestor);
      transform = new E.Matrix4(new Float64Array(16));
      transform.setIdentity$0();
      for (index = renderers.length - 1; index > 0; index = index0) {
        index0 = index - 1;
        renderers[index].applyPaintTransform$2(renderers[index0], transform);
      }
      return transform;
    },
    describeApproximatePaintClip$1: function(child) {
      return null;
    },
    describeSemanticsClip$1: function(child) {
      return null;
    },
    describeSemanticsConfiguration$1: function(config) {
    },
    sendSemanticsEvent$1: function(semanticsEvent) {
      var t1;
      if (type$.PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(this))._semanticsOwner == null)
        return;
      t1 = this._semantics;
      if (t1 != null && !t1._isMergedIntoParent)
        t1.sendEvent$1(semanticsEvent);
      else {
        t1 = this._node$_parent;
        if (t1 != null)
          type$.RenderObject._as(t1).sendSemanticsEvent$1(semanticsEvent);
      }
    },
    get$_semanticsConfiguration: function() {
      var t1, _this = this;
      if (_this._cachedSemanticsConfiguration == null) {
        t1 = new A.SemanticsConfiguration(P.LinkedHashMap_LinkedHashMap$_empty(type$.SemanticsAction, type$.void_Function_dynamic), P.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.void_Function));
        _this._cachedSemanticsConfiguration = t1;
        _this.describeSemanticsConfiguration$1(t1);
      }
      return _this._cachedSemanticsConfiguration;
    },
    clearSemantics$0: function() {
      this._needsSemanticsUpdate = true;
      this._semantics = null;
      this.visitChildren$1(new K.RenderObject_clearSemantics_closure());
    },
    markNeedsSemanticsUpdate$0: function() {
      var t1, wasSemanticsBoundary, isEffectiveSemanticsBoundary, t2, t3, t4, t5, node, t6, _this = this;
      if (_this._node$_owner == null || type$.PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(_this))._semanticsOwner == null) {
        _this._cachedSemanticsConfiguration = null;
        return;
      }
      if (_this._semantics != null) {
        t1 = _this._cachedSemanticsConfiguration;
        wasSemanticsBoundary = (t1 == null ? null : t1._isSemanticBoundary) === true;
      } else
        wasSemanticsBoundary = false;
      _this._cachedSemanticsConfiguration = null;
      isEffectiveSemanticsBoundary = _this.get$_semanticsConfiguration()._isSemanticBoundary && wasSemanticsBoundary;
      t1 = type$.RenderObject;
      t2 = type$.SemanticsAction;
      t3 = type$.void_Function_dynamic;
      t4 = type$.CustomSemanticsAction;
      t5 = type$.void_Function;
      node = _this;
      while (true) {
        if (!(!isEffectiveSemanticsBoundary && node._node$_parent instanceof K.RenderObject))
          break;
        if (node !== _this && node._needsSemanticsUpdate)
          break;
        node._needsSemanticsUpdate = true;
        node = t1._as(node._node$_parent);
        if (node._cachedSemanticsConfiguration == null) {
          t6 = new A.SemanticsConfiguration(P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), P.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
          node._cachedSemanticsConfiguration = t6;
          node.describeSemanticsConfiguration$1(t6);
        }
        isEffectiveSemanticsBoundary = node._cachedSemanticsConfiguration._isSemanticBoundary;
        if (isEffectiveSemanticsBoundary && node._semantics == null)
          return;
      }
      if (node !== _this && _this._semantics != null && _this._needsSemanticsUpdate)
        type$.PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingSemantics.remove$1(0, _this);
      if (!node._needsSemanticsUpdate) {
        node._needsSemanticsUpdate = true;
        t1 = type$.PipelineOwner;
        if (t1._as(B.AbstractNode.prototype.get$owner.call(_this)) != null) {
          t1._as(B.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingSemantics.add$1(0, node);
          t1._as(B.AbstractNode.prototype.get$owner.call(_this)).onNeedVisualUpdate.call$0();
        }
      }
    },
    _updateSemantics$0: function() {
      var t1, interestingFragment, t2, t3, t4, _this = this, _null = null;
      if (_this._needsLayout)
        return;
      t1 = _this._semantics;
      t1 = t1 == null ? _null : type$.SemanticsNode._as(B.AbstractNode.prototype.get$parent.call(t1, t1));
      if (t1 == null)
        t1 = _null;
      else
        t1 = t1._mergeAllDescendantsIntoThisNode || t1._isMergedIntoParent;
      interestingFragment = type$._InterestingSemanticsFragment._as(_this._getSemanticsForParent$1$mergeIntoParent(t1 === true));
      t1 = _this._semantics;
      t2 = t1 == null;
      t3 = t2 ? _null : t1.parentSemanticsClipRect;
      t4 = t2 ? _null : t1.parentPaintClipRect;
      t1 = t2 ? _null : t1.elevationAdjustment;
      t1 = interestingFragment.compileChildren$3$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect(t1 == null ? 0 : t1, t4, t3);
      t1.get$single(t1);
    },
    _getSemanticsForParent$1$mergeIntoParent: function(mergeIntoParent) {
      var producesForkingFragment, t1, fragments, toBeMarkedExplicit, childrenMergeIntoParent, t2, result, _this = this, _box_0 = {},
        config = _this.get$_semanticsConfiguration();
      _box_0.dropSemanticsOfPreviousSiblings = config.isBlockingSemanticsOfPreviouslyPaintedNodes;
      producesForkingFragment = !config._hasBeenAnnotated && !config._isSemanticBoundary;
      t1 = type$.JSArray__InterestingSemanticsFragment;
      fragments = H.setRuntimeTypeInfo([], t1);
      toBeMarkedExplicit = P.LinkedHashSet_LinkedHashSet$_empty(type$._InterestingSemanticsFragment);
      childrenMergeIntoParent = mergeIntoParent || config._isMergingSemanticsOfDescendants;
      _box_0.abortWalk = false;
      _this.visitChildrenForSemantics$1(new K.RenderObject__getSemanticsForParent_closure(_box_0, _this, childrenMergeIntoParent, fragments, toBeMarkedExplicit, config, producesForkingFragment));
      if (_box_0.abortWalk)
        return new K._AbortingSemanticsFragment(H.setRuntimeTypeInfo([_this], type$.JSArray_RenderObject), false);
      for (t2 = P._LinkedHashSetIterator$(toBeMarkedExplicit, toBeMarkedExplicit._collection$_modifications); t2.moveNext$0();)
        t2._collection$_current.markAsExplicit$0();
      _this._needsSemanticsUpdate = false;
      if (!(_this._node$_parent instanceof K.RenderObject)) {
        t2 = _box_0.dropSemanticsOfPreviousSiblings;
        result = new K._RootSemanticsFragment(H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([_this], type$.JSArray_RenderObject), t2);
      } else {
        t2 = _box_0.dropSemanticsOfPreviousSiblings;
        if (producesForkingFragment)
          result = new K._ContainerSemanticsFragment(H.setRuntimeTypeInfo([], t1), t2);
        else {
          result = new K._SwitchableSemanticsFragment(mergeIntoParent, config, H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([_this], type$.JSArray_RenderObject), t2);
          if (config._isSemanticBoundary)
            result._isExplicit = true;
        }
      }
      result.addAll$1(0, fragments);
      return result;
    },
    visitChildrenForSemantics$1: function(visitor) {
      this.visitChildren$1(visitor);
    },
    assembleSemanticsNode$3: function(node, config, children) {
      node.updateWith$2$childrenInInversePaintOrder$config(0, type$.List_SemanticsNode._as(children), config);
    },
    handleEvent$2: function($event, entry) {
    },
    toStringShort$0: function() {
      var t2, target, count, _this = this,
        header = "<optimized out>#" + Y.shortHash(_this),
        t1 = _this._relayoutBoundary;
      if (t1 != null && t1 !== _this) {
        t2 = type$.RenderObject;
        target = t2._as(_this._node$_parent);
        count = 1;
        while (true) {
          if (!(target != null && target !== t1))
            break;
          target = t2._as(target._node$_parent);
          ++count;
        }
        header += " relayoutBoundary=up" + count;
      }
      if (_this._needsLayout)
        header += " NEEDS-LAYOUT";
      if (_this._needsPaint)
        header += " NEEDS-PAINT";
      if (_this._needsCompositingBitsUpdate)
        header += " NEEDS-COMPOSITING-BITS-UPDATE";
      return _this._node$_owner == null ? header + " DETACHED" : header;
    },
    toString$0: function(_) {
      return this.toStringShort$0();
    },
    debugDescribeChildren$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
    },
    showOnScreen$4$curve$descendant$duration$rect: function(curve, descendant, duration, rect) {
      var t1 = this._node$_parent;
      if (t1 instanceof K.RenderObject)
        t1.showOnScreen$4$curve$descendant$duration$rect(curve, descendant == null ? this : descendant, duration, rect);
    },
    showOnScreen$0: function() {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_JUR, null, C.Duration_0, null);
    },
    $isDiagnosticableTree: 1
  };
  K.RenderObject__debugReportException_closure.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.$this;
                $async$goto = 2;
                return new Y.DiagnosticableTreeNode(t1, "The following RenderObject was being processed when the exception was fired", true, true, null, C.DiagnosticsTreeStyle_10);
              case 2:
                // after yield
                $async$goto = 3;
                return new Y.DiagnosticableTreeNode(t1, "RenderObject", true, true, null, C.DiagnosticsTreeStyle_11);
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 11
  };
  K.RenderObject_invokeLayoutCallback_closure.prototype = {
    call$0: function() {
      this.callback.call$1(this.T._as(this.$this.get$constraints()));
    },
    $signature: 0
  };
  K.RenderObject__updateCompositingBits_closure.prototype = {
    call$1: function(child) {
      child._updateCompositingBits$0();
      if (child.get$needsCompositing())
        this.$this._needsCompositing = true;
    }
  };
  K.RenderObject_clearSemantics_closure.prototype = {
    call$1: function(child) {
      child.clearSemantics$0();
    }
  };
  K.RenderObject__getSemanticsForParent_closure.prototype = {
    call$1: function(renderChild) {
      var parentFragment, t2, t3, t4, t5, t6, t7, t8, t9, _i, siblingFragment, _this = this,
        t1 = _this._box_0;
      if (t1.abortWalk || _this.$this._needsLayout) {
        t1.abortWalk = true;
        return;
      }
      parentFragment = renderChild._getSemanticsForParent$1$mergeIntoParent(_this.childrenMergeIntoParent);
      if (parentFragment.get$abortsWalk()) {
        t1.abortWalk = true;
        return;
      }
      if (parentFragment.dropsSemanticsOfPreviousSiblings) {
        C.JSArray_methods.set$length(_this.fragments, 0);
        _this.toBeMarkedExplicit.clear$0(0);
        if (!_this.config._isSemanticBoundary)
          t1.dropSemanticsOfPreviousSiblings = true;
      }
      for (t1 = J.get$iterator$ax(parentFragment.get$interestingFragments()), t2 = _this.fragments, t3 = _this.toBeMarkedExplicit, t4 = _this.config, t5 = _this.$this, t6 = _this.producesForkingFragment; t1.moveNext$0();) {
        t7 = t1.get$current(t1);
        t2.push(t7);
        t7._ancestorChain.push(t5);
        t7.addTags$1(t4._tagsForChildren);
        if (t4.explicitChildNodes || !(t5._node$_parent instanceof K.RenderObject)) {
          t7.markAsExplicit$0();
          continue;
        }
        if (t7.get$config() == null || t6)
          continue;
        if (!t4.isCompatibleWith$1(t7.get$config()))
          t3.add$1(0, t7);
        for (t8 = C.JSArray_methods.sublist$2(t2, 0, t2.length - 1), t9 = t8.length, _i = 0; _i < t8.length; t8.length === t9 || (0, H.throwConcurrentModificationError)(t8), ++_i) {
          siblingFragment = t8[_i];
          if (!t7.get$config().isCompatibleWith$1(siblingFragment.get$config())) {
            t3.add$1(0, t7);
            t3.add$1(0, siblingFragment);
          }
        }
      }
    }
  };
  K.RenderObjectWithChildMixin.prototype = {
    set$child: function(value) {
      var _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        _this.dropChild$1(t1);
      _this.RenderObjectWithChildMixin__child = value;
      if (value != null)
        _this.adoptChild$1(value);
    },
    redepthChildren$0: function() {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        this.redepthChild$1(t1);
    },
    visitChildren$1: function(visitor) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    debugDescribeChildren$0: function() {
      var t1 = this.RenderObjectWithChildMixin__child,
        t2 = type$.JSArray_DiagnosticsNode;
      return t1 != null ? H.setRuntimeTypeInfo([new Y.DiagnosticableTreeNode(t1, "child", true, true, null, null)], t2) : H.setRuntimeTypeInfo([], t2);
    }
  };
  K.ContainerParentDataMixin.prototype = {};
  K.ContainerRenderObjectMixin.prototype = {
    get$childCount: function() {
      return this.ContainerRenderObjectMixin__childCount;
    },
    _insertIntoChildList$2$after: function(child, after) {
      var t2, afterParentData, _this = this,
        t1 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"),
        childParentData = t1._as(child.parentData);
      ++_this.ContainerRenderObjectMixin__childCount;
      if (after == null) {
        t2 = childParentData.ContainerParentDataMixin_nextSibling = _this.ContainerRenderObjectMixin__firstChild;
        if (t2 != null)
          t1._as(t2.parentData).ContainerParentDataMixin_previousSibling = child;
        _this.ContainerRenderObjectMixin__firstChild = child;
        if (_this.ContainerRenderObjectMixin__lastChild == null)
          _this.ContainerRenderObjectMixin__lastChild = child;
      } else {
        afterParentData = t1._as(after.parentData);
        t2 = afterParentData.ContainerParentDataMixin_nextSibling;
        if (t2 == null) {
          childParentData.ContainerParentDataMixin_previousSibling = after;
          _this.ContainerRenderObjectMixin__lastChild = afterParentData.ContainerParentDataMixin_nextSibling = child;
        } else {
          childParentData.ContainerParentDataMixin_nextSibling = t2;
          childParentData.ContainerParentDataMixin_previousSibling = after;
          childParentData.toString;
          t1._as(t2.parentData).ContainerParentDataMixin_previousSibling = afterParentData.ContainerParentDataMixin_nextSibling = child;
        }
      }
    },
    insert$2$after: function(_, child, after) {
      this.adoptChild$1(child);
      this._insertIntoChildList$2$after(child, after);
    },
    addAll$1: function(_, children) {
    },
    _removeFromChildList$1: function(child) {
      var _this = this,
        t1 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"),
        childParentData = t1._as(child.parentData),
        t2 = childParentData.ContainerParentDataMixin_previousSibling,
        t3 = childParentData.ContainerParentDataMixin_nextSibling;
      if (t2 == null)
        _this.ContainerRenderObjectMixin__firstChild = t3;
      else
        t1._as(t2.parentData).ContainerParentDataMixin_nextSibling = t3;
      t3 = childParentData.ContainerParentDataMixin_nextSibling;
      if (t3 == null)
        _this.ContainerRenderObjectMixin__lastChild = t2;
      else
        t1._as(t3.parentData).ContainerParentDataMixin_previousSibling = t2;
      childParentData.ContainerParentDataMixin_nextSibling = childParentData.ContainerParentDataMixin_previousSibling = null;
      --_this.ContainerRenderObjectMixin__childCount;
    },
    remove$1: function(_, child) {
      this._removeFromChildList$1(child);
      this.dropChild$1(child);
    },
    move$2$after: function(child, after) {
      var _this = this;
      if (J.$eq$(H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1")._as(child.parentData).ContainerParentDataMixin_previousSibling, after))
        return;
      _this._removeFromChildList$1(child);
      _this._insertIntoChildList$2$after(child, after);
      _this.markNeedsLayout$0();
    },
    redepthChildren$0: function() {
      var t1, t2, t3,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"); child != null;) {
        t2 = child._node$_depth;
        t3 = this._node$_depth;
        if (t2 <= t3) {
          child._node$_depth = t3 + 1;
          child.redepthChildren$0();
        }
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    visitChildren$1: function(visitor) {
      var t1,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"); child != null;) {
        visitor.call$1(child);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    get$firstChild: function(_) {
      return this.ContainerRenderObjectMixin__firstChild;
    },
    childBefore$1: function(child) {
      return H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1")._as(child.parentData).ContainerParentDataMixin_previousSibling;
    },
    childAfter$1: function(child) {
      return H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1")._as(child.parentData).ContainerParentDataMixin_nextSibling;
    },
    debugDescribeChildren$0: function() {
      var t1, count, t2,
        children = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode),
        child = this.ContainerRenderObjectMixin__firstChild;
      if (child != null)
        for (t1 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"), count = 1; true;) {
          t2 = "child " + count;
          child.toString;
          children.push(new Y.DiagnosticableTreeNode(child, t2, true, true, null, null));
          if (child.$eq(0, this.ContainerRenderObjectMixin__lastChild))
            break;
          ++count;
          child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
        }
      return children;
    }
  };
  K.RelayoutWhenSystemFontsChangeMixin.prototype = {
    systemFontsDidChange$0: function() {
      this.markNeedsLayout$0();
    }
  };
  K.FlutterErrorDetailsForRendering.prototype = {};
  K._SemanticsFragment.prototype = {
    get$abortsWalk: function() {
      return false;
    }
  };
  K._ContainerSemanticsFragment.prototype = {
    addAll$1: function(_, fragments) {
      C.JSArray_methods.addAll$1(this.interestingFragments, fragments);
    },
    get$interestingFragments: function() {
      return this.interestingFragments;
    }
  };
  K._InterestingSemanticsFragment.prototype = {
    get$interestingFragments: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$get$interestingFragments($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return $async$self;
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$._InterestingSemanticsFragment);
    },
    addTags$1: function(tags) {
      var t1;
      if (tags == null || tags._collection$_length === 0)
        return;
      t1 = this._object$_tagsForChildren;
      (t1 == null ? this._object$_tagsForChildren = P.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsTag) : t1).addAll$1(0, tags);
    }
  };
  K._RootSemanticsFragment.prototype = {
    compileChildren$3$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect: function(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect) {
      return this.compileChildren$body$_RootSemanticsFragment(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect);
    },
    compileChildren$body$_RootSemanticsFragment: function($async$elevationAdjustment, $async$parentPaintClipRect, $async$parentSemanticsClipRect) {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var elevationAdjustment = $async$elevationAdjustment,
          parentPaintClipRect = $async$parentPaintClipRect,
          parentSemanticsClipRect = $async$parentSemanticsClipRect;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t3, t4, t5, node, t1, t2;
        return function $async$compileChildren$3$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._ancestorChain;
                t2 = C.JSArray_methods.get$first(t1);
                if (t2._semantics == null) {
                  t3 = C.JSArray_methods.get$first(t1).get$showOnScreen();
                  t4 = C.JSArray_methods.get$first(t1);
                  t4.toString;
                  t4 = type$.PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(t4))._semanticsOwner;
                  t5 = $.$get$SemanticsNode__kEmptyConfig();
                  t5 = new A.SemanticsNode(null, 0, t3, C.Rect_0_0_0_0, t5._isMergingSemanticsOfDescendants, t5._actions, t5._customSemanticsActions, t5._actionsAsBits, t5._flags, t5._semantics$_label, t5._semantics$_value, t5._decreasedValue, t5._increasedValue, t5._hint, t5._semantics$_elevation, t5._semantics$_thickness, t5._semantics$_textDirection);
                  t5.attach$1(t4);
                  t2._semantics = t5;
                }
                node = C.JSArray_methods.get$first(t1)._semantics;
                node.set$rect(0, C.JSArray_methods.get$first(t1).get$semanticBounds());
                t1 = $async$self._object$_children;
                t2 = H._arrayInstanceType(t1)._eval$1("ExpandIterable<1,SemanticsNode>");
                node.updateWith$2$childrenInInversePaintOrder$config(0, P.List_List$from(new H.ExpandIterable(t1, new K._RootSemanticsFragment_compileChildren_closure(parentSemanticsClipRect, parentPaintClipRect), t2), true, t2._eval$1("Iterable.E")), null);
                $async$goto = 2;
                return node;
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.SemanticsNode);
    },
    get$config: function() {
      return null;
    },
    markAsExplicit$0: function() {
    },
    addAll$1: function(_, fragments) {
      C.JSArray_methods.addAll$1(this._object$_children, fragments);
    }
  };
  K._RootSemanticsFragment_compileChildren_closure.prototype = {
    call$1: function(fragment) {
      return fragment.compileChildren$3$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect(0, this.parentPaintClipRect, this.parentSemanticsClipRect);
    }
  };
  K._SwitchableSemanticsFragment.prototype = {
    compileChildren$3$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect: function(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect) {
      return this.compileChildren$body$_SwitchableSemanticsFragment(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect);
    },
    compileChildren$body$_SwitchableSemanticsFragment: function($async$elevationAdjustment, $async$parentPaintClipRect, $async$parentSemanticsClipRect) {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var elevationAdjustment = $async$elevationAdjustment,
          parentPaintClipRect = $async$parentPaintClipRect,
          parentSemanticsClipRect = $async$parentSemanticsClipRect;
        var $async$goto = 0, $async$handler = 2, $async$currentError, t1, t2, t3, _i, fragment, geometry, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, node, children;
        return function $async$compileChildren$3$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = !$async$self._isExplicit ? 3 : 4;
                break;
              case 3:
                // then
                t1 = $async$self._ancestorChain;
                C.JSArray_methods.get$first(t1)._semantics = null;
                t2 = $async$self._object$_children, t3 = t2.length, _i = 0;
              case 5:
                // for condition
                if (!(_i < t2.length)) {
                  // goto after for
                  $async$goto = 7;
                  break;
                }
                fragment = t2[_i];
                C.JSArray_methods.addAll$1(fragment._ancestorChain, C.JSArray_methods.sublist$1(t1, 1));
                $async$goto = 8;
                return P._IterationMarker_yieldStar(fragment.compileChildren$3$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect(elevationAdjustment + $async$self._config._semantics$_elevation, parentPaintClipRect, parentSemanticsClipRect));
              case 8:
                // after yield
              case 6:
                // for update
                t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i;
                // goto for condition
                $async$goto = 5;
                break;
              case 7:
                // after for
                // goto return
                $async$goto = 1;
                break;
              case 4:
                // join
                t1 = $async$self._ancestorChain;
                if (t1.length > 1) {
                  geometry = new K._SemanticsGeometry();
                  geometry._computeValues$3(parentSemanticsClipRect, parentPaintClipRect, t1);
                } else
                  geometry = null;
                t2 = $async$self._mergeIntoParent;
                t3 = !t2;
                if (t3) {
                  if (geometry == null)
                    t4 = null;
                  else {
                    t4 = geometry._object$_rect;
                    t4 = t4.get$isEmpty(t4);
                  }
                  t4 = t4 === true;
                } else
                  t4 = false;
                if (t4) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t4 = C.JSArray_methods.get$first(t1);
                if (t4._semantics == null) {
                  t5 = C.JSArray_methods.get$first(t1).get$showOnScreen();
                  t6 = $.$get$SemanticsNode__kEmptyConfig();
                  t7 = t6._isMergingSemanticsOfDescendants;
                  t8 = t6._actions;
                  t9 = t6._customSemanticsActions;
                  t10 = t6._actionsAsBits;
                  t11 = t6._flags;
                  t12 = t6._semantics$_label;
                  t13 = t6._semantics$_value;
                  t14 = t6._decreasedValue;
                  t15 = t6._increasedValue;
                  t16 = t6._hint;
                  t17 = t6._semantics$_elevation;
                  t18 = t6._semantics$_thickness;
                  t6 = t6._semantics$_textDirection;
                  t19 = ($.SemanticsNode__lastIdentifier + 1) % 65535;
                  $.SemanticsNode__lastIdentifier = t19;
                  t4._semantics = new A.SemanticsNode(null, t19, t5, C.Rect_0_0_0_0, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t6);
                }
                node = C.JSArray_methods.get$first(t1)._semantics;
                node.set$isMergedIntoParent(t2);
                node.tags = $async$self._object$_tagsForChildren;
                node.elevationAdjustment = elevationAdjustment;
                if (elevationAdjustment !== 0) {
                  $async$self._ensureConfigIsWritable$0();
                  t2 = $async$self._config;
                  t2.set$elevation(0, t2._semantics$_elevation + elevationAdjustment);
                }
                if (geometry != null) {
                  node.set$rect(0, geometry._object$_rect);
                  node.set$transform(0, geometry._object$_transform);
                  node.parentSemanticsClipRect = geometry._semanticsClipRect;
                  node.parentPaintClipRect = geometry._paintClipRect;
                  if (t3 && geometry._markAsHidden) {
                    $async$self._ensureConfigIsWritable$0();
                    $async$self._config._setFlag$2(C.SemanticsFlag_8192, true);
                  }
                }
                t2 = $async$self._object$_children;
                t3 = H._arrayInstanceType(t2)._eval$1("ExpandIterable<1,SemanticsNode>");
                children = P.List_List$from(new H.ExpandIterable(t2, new K._SwitchableSemanticsFragment_compileChildren_closure(node), t3), true, t3._eval$1("Iterable.E"));
                t2 = $async$self._config;
                if (t2._isSemanticBoundary)
                  C.JSArray_methods.get$first(t1).assembleSemanticsNode$3(node, $async$self._config, children);
                else
                  node.updateWith$2$childrenInInversePaintOrder$config(0, children, t2);
                $async$goto = 9;
                return node;
              case 9:
                // after yield
              case 1:
                // return
                return P._IterationMarker_endOfIteration();
              case 2:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.SemanticsNode);
    },
    get$config: function() {
      return this._isExplicit ? null : this._config;
    },
    addAll$1: function(_, fragments) {
      var t1, t2, _i, fragment, _this = this;
      for (t1 = fragments.length, t2 = _this._object$_children, _i = 0; _i < fragments.length; fragments.length === t1 || (0, H.throwConcurrentModificationError)(fragments), ++_i) {
        fragment = fragments[_i];
        t2.push(fragment);
        if (fragment.get$config() == null)
          continue;
        if (!_this._isConfigWritable) {
          _this._config = _this._config.copy$0();
          _this._isConfigWritable = true;
        }
        _this._config.absorb$1(fragment.get$config());
      }
    },
    _ensureConfigIsWritable$0: function() {
      var t1, t2, t3, t4, _this = this;
      if (!_this._isConfigWritable) {
        t1 = _this._config;
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(type$.SemanticsAction, type$.void_Function_dynamic);
        t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.void_Function);
        t4 = new A.SemanticsConfiguration(t2, t3);
        t4._isSemanticBoundary = t1._isSemanticBoundary;
        t4.explicitChildNodes = t1.explicitChildNodes;
        t4.isBlockingSemanticsOfPreviouslyPaintedNodes = t1.isBlockingSemanticsOfPreviouslyPaintedNodes;
        t4._hasBeenAnnotated = t1._hasBeenAnnotated;
        t4._isMergingSemanticsOfDescendants = t1._isMergingSemanticsOfDescendants;
        t4._semantics$_textDirection = t1._semantics$_textDirection;
        t4._sortKey = t1._sortKey;
        t4._semantics$_label = t1._semantics$_label;
        t4._increasedValue = t1._increasedValue;
        t4._semantics$_value = t1._semantics$_value;
        t4._decreasedValue = t1._decreasedValue;
        t4._hint = t1._hint;
        t4._semantics$_hintOverrides = t1._semantics$_hintOverrides;
        t4._semantics$_elevation = t1._semantics$_elevation;
        t4._semantics$_thickness = t1._semantics$_thickness;
        t4._flags = t1._flags;
        t4._tagsForChildren = t1._tagsForChildren;
        t4._textSelection = t1._textSelection;
        t4._scrollPosition = t1._scrollPosition;
        t4._scrollExtentMax = t1._scrollExtentMax;
        t4._scrollExtentMin = t1._scrollExtentMin;
        t4._actionsAsBits = t1._actionsAsBits;
        t4._indexInParent = t1._indexInParent;
        t4._scrollIndex = t1._scrollIndex;
        t4._scrollChildCount = t1._scrollChildCount;
        t4._platformViewId = t1._platformViewId;
        t4._maxValueLength = t1._maxValueLength;
        t4._currentValueLength = t1._currentValueLength;
        t2.addAll$1(0, t1._actions);
        t3.addAll$1(0, t1._customSemanticsActions);
        _this._config = t4;
        _this._isConfigWritable = true;
      }
    },
    markAsExplicit$0: function() {
      this._isExplicit = true;
    }
  };
  K._SwitchableSemanticsFragment_compileChildren_closure.prototype = {
    call$1: function(fragment) {
      var t1 = this.node,
        t2 = t1.parentSemanticsClipRect;
      return fragment.compileChildren$3$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect(0, t1.parentPaintClipRect, t2);
    }
  };
  K._AbortingSemanticsFragment.prototype = {
    get$abortsWalk: function() {
      return true;
    },
    get$config: function() {
      return null;
    },
    compileChildren$3$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect: function(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect) {
      return this.compileChildren$body$_AbortingSemanticsFragment(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect);
    },
    compileChildren$body$_AbortingSemanticsFragment: function($async$elevationAdjustment, $async$parentPaintClipRect, $async$parentSemanticsClipRect) {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var elevationAdjustment = $async$elevationAdjustment,
          parentPaintClipRect = $async$parentPaintClipRect,
          parentSemanticsClipRect = $async$parentSemanticsClipRect;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$compileChildren$3$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return C.JSArray_methods.get$first($async$self._ancestorChain)._semantics;
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.SemanticsNode);
    },
    markAsExplicit$0: function() {
    }
  };
  K._SemanticsGeometry.prototype = {
    _computeValues$3: function(parentSemanticsClipRect, parentPaintClipRect, ancestors) {
      var index, $parent, child, owner, t2, paintRect, _this = this,
        t1 = new E.Matrix4(new Float64Array(16));
      t1.setIdentity$0();
      _this._object$_transform = t1;
      _this._semanticsClipRect = parentSemanticsClipRect;
      _this._paintClipRect = parentPaintClipRect;
      for (index = ancestors.length - 1; index > 0;) {
        $parent = ancestors[index];
        --index;
        child = ancestors[index];
        parentSemanticsClipRect = $parent.describeSemanticsClip$1(child);
        if (parentSemanticsClipRect != null) {
          _this._semanticsClipRect = parentSemanticsClipRect;
          _this._paintClipRect = K._SemanticsGeometry__intersectRects(_this._paintClipRect, $parent.describeApproximatePaintClip$1(child));
        } else
          _this._semanticsClipRect = K._SemanticsGeometry__intersectRects(_this._semanticsClipRect, $parent.describeApproximatePaintClip$1(child));
        t1 = $.$get$_SemanticsGeometry__temporaryTransformHolder();
        t1.setIdentity$0();
        K._SemanticsGeometry__applyIntermediatePaintTransforms($parent, child, _this._object$_transform, t1);
        _this._semanticsClipRect = K._SemanticsGeometry__transformRect(_this._semanticsClipRect, t1);
        _this._paintClipRect = K._SemanticsGeometry__transformRect(_this._paintClipRect, t1);
      }
      owner = C.JSArray_methods.get$first(ancestors);
      t1 = _this._semanticsClipRect;
      t1 = t1 == null ? owner.get$semanticBounds() : t1.intersect$1(owner.get$semanticBounds());
      _this._object$_rect = t1;
      t2 = _this._paintClipRect;
      if (t2 != null) {
        paintRect = t2.intersect$1(t1);
        if (paintRect.get$isEmpty(paintRect)) {
          t1 = _this._object$_rect;
          t1 = !t1.get$isEmpty(t1);
        } else
          t1 = false;
        _this._markAsHidden = t1;
        if (!t1)
          _this._object$_rect = paintRect;
      }
    }
  };
  K.DiagnosticsDebugCreator.prototype = {};
  K._RenderObject_AbstractNode_DiagnosticableTreeMixin.prototype = {};
  Q.TextOverflow.prototype = {
    toString$0: function(_) {
      return this._paragraph$_name;
    }
  };
  Q.TextParentData.prototype = {
    toString$0: function(_) {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_String);
      t1.push("offset=" + this.offset.toString$0(0));
      t1.push(this.super$BoxParentData$toString(0));
      return C.JSArray_methods.join$1(t1, "; ");
    }
  };
  Q.RenderParagraph.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof Q.TextParentData))
        child.parentData = new Q.TextParentData(null, null, C.Offset_0_0);
    },
    set$text: function(_, value) {
      var _this = this,
        t1 = _this._textPainter;
      switch (t1._text_painter$_text.compareTo$1(0, value)) {
        case C.RenderComparison_0:
        case C.RenderComparison_1:
          return;
        case C.RenderComparison_2:
          t1.set$text(0, value);
          _this._extractPlaceholderSpans$1(value);
          _this.markNeedsPaint$0();
          _this.markNeedsSemanticsUpdate$0();
          break;
        case C.RenderComparison_3:
          t1.set$text(0, value);
          _this._overflowShader = null;
          _this._extractPlaceholderSpans$1(value);
          _this.markNeedsLayout$0();
          break;
      }
    },
    _extractPlaceholderSpans$1: function(span) {
      this._placeholderSpans = H.setRuntimeTypeInfo([], type$.JSArray_PlaceholderSpan);
      span.visitChildren$1(new Q.RenderParagraph__extractPlaceholderSpans_closure(this));
    },
    set$textAlign: function(_, value) {
      var t1 = this._textPainter;
      if (t1._text_painter$_textAlign === value)
        return;
      t1.set$textAlign(0, value);
      this.markNeedsPaint$0();
    },
    set$textDirection: function(value) {
      var t1 = this._textPainter;
      if (t1._text_painter$_textDirection == value)
        return;
      t1.set$textDirection(value);
      this.markNeedsLayout$0();
    },
    set$softWrap: function(value) {
      if (this._softWrap === value)
        return;
      this._softWrap = value;
      this.markNeedsLayout$0();
    },
    set$overflow: function(_, value) {
      var t1, _this = this;
      if (_this._paragraph$_overflow === value)
        return;
      _this._paragraph$_overflow = value;
      t1 = value === C.TextOverflow_2 ? "\u2026" : null;
      _this._textPainter.set$ellipsis(t1);
      _this.markNeedsLayout$0();
    },
    set$textScaleFactor: function(value) {
      var t1 = this._textPainter;
      if (t1._textScaleFactor === value)
        return;
      t1.set$textScaleFactor(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$maxLines: function(value) {
      var t1 = this._textPainter,
        t2 = t1._text_painter$_maxLines;
      if (t2 == null ? value == null : t2 === value)
        return;
      t1.set$maxLines(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$locale: function(_, value) {
      var t1 = this._textPainter;
      if (J.$eq$(t1._text_painter$_locale, value))
        return;
      t1.set$locale(0, value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$strutStyle: function(value) {
      return;
    },
    set$textWidthBasis: function(value) {
      var t1 = this._textPainter;
      if (t1._textWidthBasis === value)
        return;
      t1.set$textWidthBasis(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$textHeightBehavior: function(value) {
      return;
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      this._layoutTextWithConstraints$1(type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(this)));
      return this._textPainter.computeDistanceToActualBaseline$1(C.TextBaseline_0);
    },
    hitTestSelf$1: function(position) {
      return true;
    },
    hitTestChildren$2$position: function(result, position) {
      var t2, t3, textParentData, t4, transform, child, _box_0 = {},
        t1 = _box_0.child = this.ContainerRenderObjectMixin__firstChild;
      for (t2 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"), t3 = type$.TextParentData; t1 != null; t1 = child) {
        textParentData = t3._as(t1.parentData);
        t1 = textParentData.offset;
        t4 = new Float64Array(16);
        transform = new E.Matrix4(t4);
        transform.setIdentity$0();
        t4[14] = 0;
        t4[13] = t1._dy;
        t4[12] = t1._dx;
        t1 = textParentData.scale;
        transform.scale$3(0, t1, t1, t1);
        if (result.addWithPaintTransform$3$hitTest$position$transform(new Q.RenderParagraph_hitTestChildren_closure(_box_0, position, textParentData), position, transform))
          return true;
        child = t2._as(_box_0.child.parentData).ContainerParentDataMixin_nextSibling;
        _box_0.child = child;
      }
      return false;
    },
    handleEvent$2: function($event, entry) {
      var t1, position;
      if (!($event instanceof F.PointerDownEvent))
        return;
      this._layoutTextWithConstraints$1(type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(this)));
      t1 = this._textPainter;
      position = t1._text_painter$_paragraph.getPositionForOffset$1(entry.localPosition);
      if (t1._text_painter$_text.getSpanForPosition$1(position) == null)
        return;
    },
    _layoutText$2$maxWidth$minWidth: function(maxWidth, minWidth) {
      var t1 = this._softWrap || this._paragraph$_overflow === C.TextOverflow_2 ? maxWidth : 1 / 0;
      this._textPainter.layout$2$maxWidth$minWidth(t1, minWidth);
    },
    systemFontsDidChange$0: function() {
      this.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange();
      this._textPainter.markNeedsLayout$0();
    },
    _layoutTextWithConstraints$1: function(constraints) {
      var t1;
      this._textPainter.setPlaceholderDimensions$1(this._placeholderDimensions);
      t1 = constraints.minWidth;
      this._layoutText$2$maxWidth$minWidth(constraints.maxWidth, t1);
    },
    _layoutChildren$1: function(constraints) {
      var child, childIndex, t2, t3, _this = this,
        t1 = _this.ContainerRenderObjectMixin__childCount;
      if (t1 === 0)
        return;
      child = _this.ContainerRenderObjectMixin__firstChild;
      t1 = new Array(t1);
      t1.fixed$length = Array;
      _this._placeholderDimensions = H.setRuntimeTypeInfo(t1, type$.JSArray_PlaceholderDimensions);
      for (t1 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"), childIndex = 0; child != null;) {
        child.layout$2$parentUsesSize(new S.BoxConstraints(0, constraints.maxWidth, 0, 1 / 0), true);
        switch (_this._placeholderSpans[childIndex].get$alignment()) {
          case C.PlaceholderAlignment_0:
            child.getDistanceToBaseline$1(_this._placeholderSpans[childIndex].get$baseline());
            break;
          default:
            break;
        }
        t2 = _this._placeholderDimensions;
        t3 = child._size;
        _this._placeholderSpans[childIndex].get$alignment();
        t2[childIndex] = new U.PlaceholderDimensions(t3, _this._placeholderSpans[childIndex].get$baseline());
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
        ++childIndex;
      }
    },
    _setParentData$0: function() {
      var textParentData, t4, t5,
        child = this.ContainerRenderObjectMixin__firstChild,
        t1 = type$.TextParentData,
        t2 = this._textPainter,
        t3 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"),
        childIndex = 0;
      while (true) {
        if (child != null)
          t2._inlinePlaceholderBoxes.length;
        if (!false)
          break;
        textParentData = t1._as(child.parentData);
        t4 = t2._inlinePlaceholderBoxes[childIndex];
        t4 = t4.get$left(t4);
        t5 = t2._inlinePlaceholderBoxes[childIndex];
        textParentData.offset = new P.Offset(t4, t5.get$top(t5));
        textParentData.scale = t2._inlinePlaceholderScales[childIndex];
        child = t3._as(child.parentData).ContainerParentDataMixin_nextSibling;
        ++childIndex;
      }
    },
    performLayout$0: function() {
      var t1, t2, t3, textDidExceedMaxLines, t4, didOverflowHeight, didOverflowWidth, fadeSizePainter, fadeStart, fadeEnd, _this = this, _null = null,
        constraints = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this));
      _this._layoutChildren$1(constraints);
      _this._layoutTextWithConstraints$1(constraints);
      _this._setParentData$0();
      t1 = _this._textPainter;
      t2 = t1.get$width(t1);
      t3 = t1._text_painter$_paragraph;
      t3 = t3.get$height(t3);
      t3.toString;
      t3 = Math.ceil(t3);
      textDidExceedMaxLines = t1._text_painter$_paragraph.get$didExceedMaxLines();
      t4 = _this._size = constraints.constrain$1(new P.Size(t2, t3));
      didOverflowHeight = t4._dy < t3 || textDidExceedMaxLines;
      didOverflowWidth = t4._dx < t2;
      if (didOverflowWidth || didOverflowHeight)
        switch (_this._paragraph$_overflow) {
          case C.TextOverflow_3:
            _this._needsClipping = false;
            _this._overflowShader = null;
            break;
          case C.TextOverflow_0:
          case C.TextOverflow_2:
            _this._needsClipping = true;
            _this._overflowShader = null;
            break;
          case C.TextOverflow_1:
            _this._needsClipping = true;
            t2 = Q.TextSpan$(_null, t1._text_painter$_text.style, "\u2026");
            t3 = t1._text_painter$_textDirection;
            t4 = t1._textScaleFactor;
            fadeSizePainter = U.TextPainter$(_null, t1._text_painter$_locale, _null, _null, t2, C.TextAlign_4, t3, _null, t4, C.TextWidthBasis_0);
            fadeSizePainter.layout$0();
            if (didOverflowWidth) {
              switch (t1._text_painter$_textDirection) {
                case C.TextDirection_0:
                  fadeStart = fadeSizePainter.get$width(fadeSizePainter);
                  fadeEnd = 0;
                  break;
                case C.TextDirection_1:
                  fadeEnd = _this._size._dx;
                  fadeStart = fadeEnd - fadeSizePainter.get$width(fadeSizePainter);
                  break;
                default:
                  fadeStart = _null;
                  fadeEnd = fadeStart;
              }
              _this._overflowShader = H.GradientLinear$(new P.Offset(fadeStart, 0), new P.Offset(fadeEnd, 0), H.setRuntimeTypeInfo([C.Color_4294967295, C.Color_16777215], type$.JSArray_Color), _null, C.TileMode_0);
            } else {
              fadeEnd = _this._size._dy;
              t1 = fadeSizePainter._text_painter$_paragraph;
              t1 = t1.get$height(t1);
              t1.toString;
              _this._overflowShader = H.GradientLinear$(new P.Offset(0, fadeEnd - Math.ceil(t1) / 2), new P.Offset(0, fadeEnd), H.setRuntimeTypeInfo([C.Color_4294967295, C.Color_16777215], type$.JSArray_Color), _null, C.TileMode_0);
            }
            break;
        }
      else {
        _this._needsClipping = false;
        _this._overflowShader = null;
      }
    },
    paint$2: function(context, offset) {
      var t1, t2, t3, bounds, t4, t5, t6, childIndex, textParentData, scale, t7, child, paint, _this = this, _box_0 = {};
      _this._layoutTextWithConstraints$1(type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)));
      if (_this._needsClipping) {
        t1 = _this._size;
        t2 = offset._dx;
        t3 = offset._dy;
        bounds = new P.Rect(t2, t3, t2 + t1._dx, t3 + t1._dy);
        if (_this._overflowShader != null) {
          t1 = context.get$canvas(context);
          t1.saveLayer$2(bounds, new H.SurfacePaint(new H.SurfacePaintData()));
        } else
          context.get$canvas(context).save$0(0);
        context.get$canvas(context).clipRect$1(bounds);
      }
      t1 = _this._textPainter;
      context.get$canvas(context).drawParagraph$2(t1._text_painter$_paragraph, offset);
      t2 = _box_0.child = _this.ContainerRenderObjectMixin__firstChild;
      t3 = type$.TextParentData;
      t4 = offset._dx;
      t5 = offset._dy;
      t6 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
      childIndex = 0;
      while (true) {
        if (t2 != null)
          t1._inlinePlaceholderBoxes.length;
        if (!false)
          break;
        textParentData = t3._as(t2.parentData);
        scale = textParentData.scale;
        t2 = _this._needsCompositing;
        t7 = textParentData.offset;
        context.pushTransform$4(t2, new P.Offset(t4 + t7._dx, t5 + t7._dy), E.Matrix4_Matrix4$diagonal3Values(scale, scale, scale), new Q.RenderParagraph_paint_closure(_box_0));
        child = t6._as(_box_0.child.parentData).ContainerParentDataMixin_nextSibling;
        _box_0.child = child;
        ++childIndex;
        t2 = child;
      }
      if (_this._needsClipping) {
        if (_this._overflowShader != null) {
          context.get$canvas(context).translate$2(0, t4, t5);
          paint = new H.SurfacePaint(new H.SurfacePaintData());
          paint.set$blendMode(C.BlendMode_13);
          paint.set$shader(_this._overflowShader);
          t1 = context.get$canvas(context);
          t2 = _this._size;
          t1.drawRect$2(new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), paint);
        }
        context.get$canvas(context).restore$0(0);
      }
    },
    _combineSemanticsInfo$0: function() {
      var t1, t2, workingLabel, workingText, _i, info, t3, t4, _null = null,
        combined = H.setRuntimeTypeInfo([], type$.JSArray_InlineSpanSemanticsInformation);
      for (t1 = this._semanticsInfo, t2 = t1.length, workingLabel = _null, workingText = "", _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        info = t1[_i];
        if (info.requiresOwnNode) {
          t3 = workingLabel == null ? workingText : workingLabel;
          combined.push(new G.InlineSpanSemanticsInformation(workingText, t3, _null, false));
          combined.push(info);
          workingLabel = _null;
          workingText = "";
        } else {
          t3 = info.text;
          workingText = C.JSString_methods.$add(workingText, t3);
          if (workingLabel == null)
            workingLabel = "";
          t4 = info.semanticsLabel;
          workingLabel = t4 != null ? workingLabel + t4 : C.JSString_methods.$add(workingLabel, t3);
        }
      }
      combined.push(G.InlineSpanSemanticsInformation$(workingText, _null, workingLabel));
      return combined;
    },
    describeSemanticsConfiguration$1: function(config) {
      var t1, t2, collector, t3, _i, t4, info, t5, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      t1 = _this._textPainter;
      t2 = t1._text_painter$_text;
      t2.toString;
      collector = H.setRuntimeTypeInfo([], type$.JSArray_InlineSpanSemanticsInformation);
      t2.computeSemanticsInformation$1(collector);
      _this._semanticsInfo = collector;
      if (C.JSArray_methods.any$1(collector, new Q.RenderParagraph_describeSemanticsConfiguration_closure()))
        config._isSemanticBoundary = config.explicitChildNodes = true;
      else {
        for (t2 = _this._semanticsInfo, t3 = t2.length, _i = 0, t4 = ""; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
          info = t2[_i];
          t5 = info.semanticsLabel;
          t4 += H.S(t5 == null ? info.text : t5);
        }
        config._semantics$_label = t4.charCodeAt(0) == 0 ? t4 : t4;
        config._hasBeenAnnotated = true;
        config._semantics$_textDirection = t1._text_painter$_textDirection;
      }
    },
    assembleSemanticsNode$3: function(node, config, children) {
      var t2, t3, t4, t5, t6, t7, t8, currentRect, ordinal, start, _i, info, t9, start0, selection, t10, t11, rects, rect, currentDirection0, t12, t13, configuration, ordinal0, newChild, t14, t15, t16, t17, t18, t19, t20, t21, t22, _this = this, _null = null,
        newChildren = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNode),
        t1 = _this._textPainter,
        currentDirection = t1._text_painter$_textDirection,
        newChildCache = P.ListQueue$(_null, type$.SemanticsNode);
      for (t2 = _this._combineSemanticsInfo$0(), t3 = t2.length, t4 = type$.SemanticsAction, t5 = type$.void_Function_dynamic, t6 = type$.CustomSemanticsAction, t7 = type$.void_Function, t8 = type$.BoxConstraints, currentRect = _null, ordinal = 0, start = 0, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        info = t2[_i];
        t9 = info.text;
        start0 = start + t9.length;
        selection = X.TextSelection$(start, start0);
        t10 = t8._as(K.RenderObject.prototype.get$constraints.call(_this));
        t1.setPlaceholderDimensions$1(_this._placeholderDimensions);
        t11 = t10.minWidth;
        t10 = t10.maxWidth;
        t1.layout$2$maxWidth$minWidth(_this._softWrap || _this._paragraph$_overflow === C.TextOverflow_2 ? t10 : 1 / 0, t11);
        rects = t1._text_painter$_paragraph.getBoxesForRange$4$boxHeightStyle$boxWidthStyle(selection.start, selection.end, C.BoxHeightStyle_0, C.BoxWidthStyle_0);
        if (rects.length === 0)
          continue;
        t10 = C.JSArray_methods.get$first(rects);
        rect = new P.Rect(t10.left, t10.top, t10.right, t10.bottom);
        currentDirection0 = C.JSArray_methods.get$first(rects).direction;
        for (t10 = H.SubListIterable$(rects, 1, _null, H._arrayInstanceType(rects)._precomputed1), t10 = new H.ListIterator(t10, t10.get$length(t10)); t10.moveNext$0();) {
          t11 = t10.__internal$_current;
          rect = rect.expandToInclude$1(new P.Rect(t11.left, t11.top, t11.right, t11.bottom));
          currentDirection0 = t11.direction;
        }
        t10 = rect.left;
        t11 = Math.max(0, H.checkNum(t10));
        t12 = rect.top;
        t13 = Math.max(0, H.checkNum(t12));
        t10 = Math.min(rect.right - t10, H.checkNum(t8._as(K.RenderObject.prototype.get$constraints.call(_this)).maxWidth));
        t12 = Math.min(rect.bottom - t12, H.checkNum(t8._as(K.RenderObject.prototype.get$constraints.call(_this)).maxHeight));
        currentRect = new P.Rect(Math.floor(t11) - 4, Math.floor(t13) - 4, Math.ceil(t11 + t10) + 4, Math.ceil(t13 + t12) + 4);
        configuration = new A.SemanticsConfiguration(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), P.LinkedHashMap_LinkedHashMap$_empty(t6, t7));
        ordinal0 = ordinal + 1;
        configuration._sortKey = new A.OrdinalSortKey(ordinal, _null);
        configuration._hasBeenAnnotated = true;
        configuration._semantics$_textDirection = currentDirection;
        t10 = info.semanticsLabel;
        configuration._semantics$_label = t10 == null ? t9 : t10;
        t9 = _this._cachedChildNodes;
        if ((t9 == null ? _null : !t9.get$isEmpty(t9)) === true)
          newChild = _this._cachedChildNodes.removeFirst$0();
        else {
          t9 = $.$get$SemanticsNode__kEmptyConfig();
          t10 = t9._isMergingSemanticsOfDescendants;
          t11 = t9._actions;
          t12 = t9._customSemanticsActions;
          t13 = t9._actionsAsBits;
          t14 = t9._flags;
          t15 = t9._semantics$_label;
          t16 = t9._semantics$_value;
          t17 = t9._decreasedValue;
          t18 = t9._increasedValue;
          t19 = t9._hint;
          t20 = t9._semantics$_elevation;
          t21 = t9._semantics$_thickness;
          t9 = t9._semantics$_textDirection;
          t22 = ($.SemanticsNode__lastIdentifier + 1) % 65535;
          $.SemanticsNode__lastIdentifier = t22;
          newChild = new A.SemanticsNode(_null, t22, _null, C.Rect_0_0_0_0, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t9);
        }
        newChild.updateWith$1$config(0, configuration);
        if (!J.$eq$(newChild._semantics$_rect, currentRect)) {
          newChild._semantics$_rect = currentRect;
          newChild._markDirty$0();
        }
        newChildCache._add$1(0, newChild);
        newChildren.push(newChild);
        start = start0;
        ordinal = ordinal0;
        currentDirection = currentDirection0;
      }
      _this._cachedChildNodes = newChildCache;
      node.updateWith$2$childrenInInversePaintOrder$config(0, newChildren, config);
    },
    clearSemantics$0: function() {
      this.super$RenderObject$clearSemantics();
      this._cachedChildNodes = null;
    },
    debugDescribeChildren$0: function() {
      var t1 = this._textPainter._text_painter$_text;
      t1.toString;
      return H.setRuntimeTypeInfo([new Y.DiagnosticableTreeNode(t1, "text", true, true, null, C.DiagnosticsTreeStyle_4)], type$.JSArray_DiagnosticsNode);
    }
  };
  Q.RenderParagraph__extractPlaceholderSpans_closure.prototype = {
    call$1: function(span) {
      return true;
    }
  };
  Q.RenderParagraph_hitTestChildren_closure.prototype = {
    call$2: function(result, transformed) {
      return this._box_0.child.hitTest$2$position(result, transformed);
    }
  };
  Q.RenderParagraph_paint_closure.prototype = {
    call$2: function(context, offset) {
      context.paintChild$2(this._box_0.child, offset);
    },
    $signature: 109
  };
  Q.RenderParagraph_describeSemanticsConfiguration_closure.prototype = {
    call$1: function(info) {
      info.toString;
      return false;
    }
  };
  Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1: function(owner) {
      var child, t1;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.TextParentData; child != null;) {
        child.attach$1(owner);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0: function(_) {
      var child, t1;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.TextParentData; child != null;) {
        child.detach$0(0);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin.prototype = {
    attach$1: function(owner) {
      this.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$attach(owner);
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.add$1(0, this.get$systemFontsDidChange());
    },
    detach$0: function(_) {
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.remove$1(0, this.get$systemFontsDidChange());
      this.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$detach(0);
    }
  };
  L.RenderPerformanceOverlay.prototype = {
    set$optionsMask: function(value) {
      if (value === this._optionsMask)
        return;
      this._optionsMask = value;
      this.markNeedsPaint$0();
    },
    set$rasterizerThreshold: function(value) {
      if (value === this._rasterizerThreshold)
        return;
      this._rasterizerThreshold = value;
      this.markNeedsPaint$0();
    },
    get$sizedByParent: function() {
      return true;
    },
    get$alwaysNeedsCompositing: function() {
      return true;
    },
    get$_intrinsicHeight: function() {
      var t1 = this._optionsMask,
        result = (t1 | 1) >>> 0 > 0 || (t1 | 2) >>> 0 > 0 ? 80 : 0;
      return (t1 | 4) >>> 0 > 0 || (t1 | 8) >>> 0 > 0 ? result + 80 : result;
    },
    performResize$0: function() {
      this._size = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(this)).constrain$1(new P.Size(1 / 0, this.get$_intrinsicHeight()));
    },
    paint$2: function(context, offset) {
      var t5, t6,
        t1 = offset._dx,
        t2 = offset._dy,
        t3 = this._size,
        t4 = t3._dx;
      t3 = t3._dy;
      t5 = this._optionsMask;
      t6 = this._rasterizerThreshold;
      context.stopRecordingIfNeeded$0();
      context.appendLayer$1(new T.PerformanceOverlayLayer(new P.Rect(t1, t2, t1 + t4, t2 + t3), t5, t6, false, false));
    }
  };
  E.RenderProxyBox.prototype = {};
  E.RenderProxyBoxMixin.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof K.ParentData))
        child.parentData = new K.ParentData();
    },
    performLayout$0: function() {
      var _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)), true);
        _this._size = _this.RenderObjectWithChildMixin__child._size;
      } else
        _this.performResize$0();
    },
    hitTestChildren$2$position: function(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.hitTest$2$position(result, position);
      return t1 === true;
    },
    applyPaintTransform$2: function(child, transform) {
    },
    paint$2: function(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    }
  };
  E.HitTestBehavior.prototype = {
    toString$0: function(_) {
      return this._proxy_box$_name;
    }
  };
  E.RenderProxyBoxWithHitTestBehavior.prototype = {
    hitTest$2$position: function(result, position) {
      var hitTarget, _this = this;
      if (_this._size.contains$1(0, position)) {
        hitTarget = _this.hitTestChildren$2$position(result, position) || _this.behavior === C.HitTestBehavior_1;
        if (hitTarget || _this.behavior === C.HitTestBehavior_2)
          result.add$1(0, new S.BoxHitTestEntry(position, _this));
      } else
        hitTarget = false;
      return hitTarget;
    },
    hitTestSelf$1: function(position) {
      return this.behavior === C.HitTestBehavior_1;
    }
  };
  E.RenderConstrainedBox.prototype = {
    set$additionalConstraints: function(value) {
      if (J.$eq$(this._additionalConstraints, value))
        return;
      this._additionalConstraints = value;
      this.markNeedsLayout$0();
    },
    performLayout$0: function() {
      var _this = this,
        constraints = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this.RenderObjectWithChildMixin__child,
        t2 = _this._additionalConstraints;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(t2.enforce$1(constraints), true);
        _this._size = _this.RenderObjectWithChildMixin__child._size;
      } else
        _this._size = t2.enforce$1(constraints).constrain$1(C.Size_0_0);
    }
  };
  E.RenderLimitedBox.prototype = {
    set$maxWidth: function(_, value) {
      if (this._proxy_box$_maxWidth === value)
        return;
      this._proxy_box$_maxWidth = value;
      this.markNeedsLayout$0();
    },
    set$maxHeight: function(_, value) {
      if (this._maxHeight === value)
        return;
      this._maxHeight = value;
      this.markNeedsLayout$0();
    },
    _limitConstraints$1: function(constraints) {
      var t3, t4,
        t1 = constraints.minWidth,
        t2 = constraints.maxWidth;
      t2 = t2 < 1 / 0 ? t2 : C.JSInt_methods.clamp$2(this._proxy_box$_maxWidth, t1, t2);
      t3 = constraints.minHeight;
      t4 = constraints.maxHeight;
      return new S.BoxConstraints(t1, t2, t3, t4 < 1 / 0 ? t4 : C.JSInt_methods.clamp$2(this._maxHeight, t3, t4));
    },
    performLayout$0: function() {
      var constraints, _this = this,
        t1 = type$.BoxConstraints;
      if (_this.RenderObjectWithChildMixin__child != null) {
        constraints = t1._as(K.RenderObject.prototype.get$constraints.call(_this));
        _this.RenderObjectWithChildMixin__child.layout$2$parentUsesSize(_this._limitConstraints$1(constraints), true);
        _this._size = constraints.constrain$1(_this.RenderObjectWithChildMixin__child._size);
      } else
        _this._size = _this._limitConstraints$1(t1._as(K.RenderObject.prototype.get$constraints.call(_this))).constrain$1(C.Size_0_0);
    }
  };
  E.RenderOpacity.prototype = {
    get$alwaysNeedsCompositing: function() {
      if (this.RenderObjectWithChildMixin__child != null) {
        var t1 = this._alpha;
        t1 = t1 !== 0 && t1 !== 255;
      } else
        t1 = false;
      return t1;
    },
    set$opacity: function(_, value) {
      var didNeedCompositing, t1, _this = this;
      if (_this._proxy_box$_opacity == value)
        return;
      didNeedCompositing = _this.get$alwaysNeedsCompositing();
      t1 = _this._alpha;
      _this._proxy_box$_opacity = value;
      _this._alpha = C.JSNumber_methods.round$0(J.clamp$2$n(value, 0, 1) * 255);
      if (didNeedCompositing !== _this.get$alwaysNeedsCompositing())
        _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsPaint$0();
      if (t1 !== 0 !== (_this._alpha !== 0) && true)
        _this.markNeedsSemanticsUpdate$0();
    },
    set$alwaysIncludeSemantics: function(value) {
      return;
    },
    paint$2: function(context, offset) {
      var t2, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = _this._alpha;
        if (t2 === 0) {
          _this._layer = null;
          return;
        }
        if (t2 === 255) {
          _this._layer = null;
          context.paintChild$2(t1, offset);
          return;
        }
        _this._layer = context.pushOpacity$4$oldLayer(offset, t2, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), type$.OpacityLayer._as(_this._layer));
      }
    },
    visitChildrenForSemantics$1: function(visitor) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t2 = this._alpha !== 0 || false;
      else
        t2 = false;
      if (t2)
        visitor.call$1(t1);
    }
  };
  E.RenderAnimatedOpacityMixin.prototype = {
    get$alwaysNeedsCompositing: function() {
      return this.RenderObjectWithChildMixin__child != null && this.RenderAnimatedOpacityMixin__currentlyNeedsCompositing;
    },
    set$opacity: function(_, value) {
      var _this = this,
        t1 = _this.RenderAnimatedOpacityMixin__opacity;
      if (t1 == value)
        return;
      if (_this._node$_owner != null && t1 != null)
        t1.removeListener$1(0, _this.get$_updateOpacity());
      _this.RenderAnimatedOpacityMixin__opacity = value;
      if (_this._node$_owner != null)
        value.addListener$1(0, _this.get$_updateOpacity());
      _this._updateOpacity$0();
    },
    set$alwaysIncludeSemantics: function(value) {
      if (false === this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics)
        return;
      this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics = false;
      this.markNeedsSemanticsUpdate$0();
    },
    _updateOpacity$0: function() {
      var didNeedCompositing, _this = this,
        oldAlpha = _this.RenderAnimatedOpacityMixin__alpha,
        t1 = _this.RenderAnimatedOpacityMixin__opacity;
      t1 = _this.RenderAnimatedOpacityMixin__alpha = C.JSNumber_methods.round$0(J.clamp$2$n(t1.get$value(t1), 0, 1) * 255);
      if (oldAlpha !== t1) {
        didNeedCompositing = _this.RenderAnimatedOpacityMixin__currentlyNeedsCompositing;
        t1 = t1 > 0 && t1 < 255;
        _this.RenderAnimatedOpacityMixin__currentlyNeedsCompositing = t1;
        if (_this.RenderObjectWithChildMixin__child != null && didNeedCompositing !== t1)
          _this.markNeedsCompositingBitsUpdate$0();
        _this.markNeedsPaint$0();
        if (oldAlpha === 0 || _this.RenderAnimatedOpacityMixin__alpha === 0)
          _this.markNeedsSemanticsUpdate$0();
      }
    },
    visitChildrenForSemantics$1: function(visitor) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t2 = this.RenderAnimatedOpacityMixin__alpha !== 0 || this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics;
      else
        t2 = false;
      if (t2)
        visitor.call$1(t1);
    }
  };
  E.RenderAnimatedOpacity.prototype = {};
  E.CustomClipper.prototype = {
    toString$0: function(_) {
      return "CustomClipper";
    }
  };
  E.ShapeBorderClipper.prototype = {
    getClip$1: function(size) {
      return this.shape.getOuterPath$2$textDirection(new P.Rect(0, 0, 0 + size._dx, 0 + size._dy), this.textDirection);
    },
    shouldReclip$1: function(oldClipper) {
      if (!H.getRuntimeType(oldClipper).$eq(0, C.Type_ShapeBorderClipper_QWG))
        return true;
      type$.ShapeBorderClipper._as(oldClipper);
      return !J.$eq$(oldClipper.shape, this.shape) || oldClipper.textDirection != this.textDirection;
    }
  };
  E._RenderCustomClip.prototype = {
    set$clipper: function(newClipper) {
      var _this = this,
        t1 = _this._clipper;
      if (t1 == newClipper)
        return;
      _this._clipper = newClipper;
      if (newClipper == null || t1 == null || !H.getRuntimeType(newClipper).$eq(0, H.getRuntimeType(t1)) || newClipper.shouldReclip$1(t1))
        _this._markNeedsClip$0();
      _this._node$_owner != null;
    },
    attach$1: function(owner) {
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
    },
    detach$0: function(_) {
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    _markNeedsClip$0: function() {
      this._clip = null;
      this.markNeedsPaint$0();
      this.markNeedsSemanticsUpdate$0();
    },
    set$clipBehavior: function(value) {
      if (value !== this._clipBehavior) {
        this._clipBehavior = value;
        this.markNeedsPaint$0();
      }
    },
    performLayout$0: function() {
      var _this = this,
        oldSize = _this._size;
      oldSize = oldSize != null ? oldSize : null;
      _this.super$RenderProxyBoxMixin$performLayout();
      if (!J.$eq$(oldSize, _this._size))
        _this._clip = null;
    },
    _updateClip$0: function() {
      var t1, _this = this;
      if (_this._clip == null) {
        t1 = _this._clipper;
        t1 = t1 == null ? null : t1.getClip$1(_this._size);
        _this._clip = t1 == null ? _this.get$_defaultClip() : t1;
      }
    },
    describeApproximatePaintClip$1: function(child) {
      var t1;
      if (this._clipper == null)
        t1 = null;
      else {
        t1 = this._size;
        t1 = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      if (t1 == null) {
        t1 = this._size;
        t1 = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      return t1;
    }
  };
  E.RenderClipRect.prototype = {
    get$_defaultClip: function() {
      var t1 = this._size;
      return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    hitTest$2$position: function(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2: function(context, offset) {
      var _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        _this._updateClip$0();
        _this._layer = context.pushClipRect$6$clipBehavior$oldLayer(_this._needsCompositing, offset, _this._clip, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), _this._clipBehavior, type$.ClipRectLayer._as(_this._layer));
      } else
        _this._layer = null;
    }
  };
  E.RenderClipPath.prototype = {
    get$_defaultClip: function() {
      var t1 = P.Path_Path(),
        t2 = this._size;
      t1.addRect$1(new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
      return t1;
    },
    hitTest$2$position: function(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2: function(context, offset) {
      var t1, t2, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        _this._updateClip$0();
        t1 = _this._needsCompositing;
        t2 = _this._size;
        _this._layer = context.pushClipPath$7$clipBehavior$oldLayer(t1, offset, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this._clip, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), _this._clipBehavior, type$.ClipPathLayer._as(_this._layer));
      } else
        _this._layer = null;
    }
  };
  E._RenderPhysicalModelBase.prototype = {
    set$elevation: function(_, value) {
      if (this._proxy_box$_elevation == value)
        return;
      this._proxy_box$_elevation = value;
      this.markNeedsPaint$0();
    },
    set$shadowColor: function(_, value) {
      if (J.$eq$(this._proxy_box$_shadowColor, value))
        return;
      this._proxy_box$_shadowColor = value;
      this.markNeedsPaint$0();
    },
    set$color: function(_, value) {
      if (J.$eq$(this._proxy_box$_color, value))
        return;
      this._proxy_box$_color = value;
      this.markNeedsPaint$0();
    },
    get$alwaysNeedsCompositing: function() {
      return true;
    },
    describeSemanticsConfiguration$1: function(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.set$elevation(0, this._proxy_box$_elevation);
    }
  };
  E.RenderPhysicalModel.prototype = {
    set$shape: function(_, value) {
      if (this._proxy_box$_shape === value)
        return;
      this._proxy_box$_shape = value;
      this._markNeedsClip$0();
    },
    set$borderRadius: function(_, value) {
      if (J.$eq$(this._proxy_box$_borderRadius, value))
        return;
      this._proxy_box$_borderRadius = value;
      this._markNeedsClip$0();
    },
    get$_defaultClip: function() {
      var t1, t2, t3, t4, _this = this;
      switch (_this._proxy_box$_shape) {
        case C.BoxShape_0:
          t1 = _this._proxy_box$_borderRadius;
          if (t1 == null)
            t1 = C.BorderRadius_tLn;
          t2 = _this._size;
          return t1.toRRect$1(new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
        case C.BoxShape_1:
          t1 = _this._size;
          t2 = 0 + t1._dx;
          t1 = 0 + t1._dy;
          t3 = (t2 - 0) / 2;
          t4 = (t1 - 0) / 2;
          return new P.RRect(0, 0, t2, t1, t3, t4, t3, t4, t3, t4, t3, t4, t3 === t4);
      }
      return null;
    },
    hitTest$2$position: function(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2: function(context, offset) {
      var offsetRRect, offsetRRectAsPath, t1, t2, t3, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        _this._updateClip$0();
        offsetRRect = _this._clip.shift$1(offset);
        offsetRRectAsPath = P.Path_Path();
        offsetRRectAsPath.addRRect$1(offsetRRect);
        t1 = type$.PhysicalModelLayer;
        if (t1._as(K.RenderObject.prototype.get$layer.call(_this, _this)) == null)
          _this._layer = T.PhysicalModelLayer$();
        t2 = t1._as(K.RenderObject.prototype.get$layer.call(_this, _this));
        t2.set$clipPath(0, offsetRRectAsPath);
        t2.set$clipBehavior(_this._clipBehavior);
        t3 = _this._proxy_box$_elevation;
        t2.set$elevation(0, t3);
        t2.set$color(0, _this._proxy_box$_color);
        t2.set$shadowColor(0, _this._proxy_box$_shadowColor);
        context.pushLayer$4$childPaintBounds(t1._as(K.RenderObject.prototype.get$layer.call(_this, _this)), E.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset, new P.Rect(offsetRRect.left, offsetRRect.top, offsetRRect.right, offsetRRect.bottom));
      } else
        _this._layer = null;
    }
  };
  E.RenderPhysicalShape.prototype = {
    get$_defaultClip: function() {
      var t1 = P.Path_Path(),
        t2 = this._size;
      t1.addRect$1(new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
      return t1;
    },
    hitTest$2$position: function(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2: function(context, offset) {
      var t1, t2, t3, t4, offsetPath, t5, t6, t7, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        _this._updateClip$0();
        t1 = _this._size;
        t2 = offset._dx;
        t3 = offset._dy;
        t4 = t1._dx;
        t1 = t1._dy;
        offsetPath = _this._clip.shift$1(offset);
        t5 = type$.PhysicalModelLayer;
        if (t5._as(K.RenderObject.prototype.get$layer.call(_this, _this)) == null)
          _this._layer = T.PhysicalModelLayer$();
        t6 = t5._as(K.RenderObject.prototype.get$layer.call(_this, _this));
        t6.set$clipPath(0, offsetPath);
        t6.set$clipBehavior(_this._clipBehavior);
        t7 = _this._proxy_box$_elevation;
        t6.set$elevation(0, t7);
        t6.set$color(0, _this._proxy_box$_color);
        t6.set$shadowColor(0, _this._proxy_box$_shadowColor);
        context.pushLayer$4$childPaintBounds(t5._as(K.RenderObject.prototype.get$layer.call(_this, _this)), E.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset, new P.Rect(t2, t3, t2 + t4, t3 + t1));
      } else
        _this._layer = null;
    }
  };
  E.DecorationPosition.prototype = {
    toString$0: function(_) {
      return this._proxy_box$_name;
    }
  };
  E.RenderDecoratedBox.prototype = {
    set$decoration: function(value) {
      var t1, _this = this;
      if (J.$eq$(value, _this._proxy_box$_decoration))
        return;
      t1 = _this._painter;
      if (t1 != null)
        t1.dispose$0();
      _this._painter = null;
      _this._proxy_box$_decoration = value;
      _this.markNeedsPaint$0();
    },
    set$position: function(_, value) {
      if (value === this._proxy_box$_position)
        return;
      this._proxy_box$_position = value;
      this.markNeedsPaint$0();
    },
    set$configuration: function(value) {
      if (value.$eq(0, this._proxy_box$_configuration))
        return;
      this._proxy_box$_configuration = value;
      this.markNeedsPaint$0();
    },
    detach$0: function(_) {
      var _this = this,
        t1 = _this._painter;
      if (t1 != null)
        t1.dispose$0();
      _this._painter = null;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
      _this.markNeedsPaint$0();
    },
    hitTestSelf$1: function(position) {
      return this._proxy_box$_decoration.hitTest$3$textDirection(this._size, position, this._proxy_box$_configuration.textDirection);
    },
    paint$2: function(context, offset) {
      var t2, t3, filledConfiguration, _this = this,
        t1 = _this._painter;
      if (t1 == null)
        t1 = _this._painter = _this._proxy_box$_decoration.createBoxPainter$1(_this.get$markNeedsPaint());
      t2 = _this._proxy_box$_configuration;
      t3 = _this._size;
      if (t3 == null)
        t3 = t2.size;
      filledConfiguration = new M.ImageConfiguration(t2.bundle, t2.devicePixelRatio, t2.locale, t2.textDirection, t3, t2.platform);
      if (_this._proxy_box$_position === C.DecorationPosition_0) {
        t1.paint$3(context.get$canvas(context), offset, filledConfiguration);
        if (_this._proxy_box$_decoration.get$isComplex())
          context.setIsComplexHint$0();
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
      if (_this._proxy_box$_position === C.DecorationPosition_1) {
        _this._painter.paint$3(context.get$canvas(context), offset, filledConfiguration);
        if (_this._proxy_box$_decoration.get$isComplex())
          context.setIsComplexHint$0();
      }
    }
  };
  E.RenderTransform.prototype = {
    set$origin: function(_, value) {
      return;
    },
    set$alignment: function(value) {
      var _this = this;
      if (J.$eq$(_this._proxy_box$_alignment, value))
        return;
      _this._proxy_box$_alignment = value;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    set$textDirection: function(value) {
      var _this = this;
      if (_this._proxy_box$_textDirection == value)
        return;
      _this._proxy_box$_textDirection = value;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    set$transform: function(_, value) {
      var t1, _this = this;
      if (J.$eq$(_this._proxy_box$_transform, value))
        return;
      t1 = new E.Matrix4(new Float64Array(16));
      t1.setFrom$1(value);
      _this._proxy_box$_transform = t1;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    get$_effectiveTransform: function() {
      var result, t1, centerX, centerY, t2, translation, _this = this,
        resolvedAlignment = _this._proxy_box$_alignment;
      if (resolvedAlignment == null)
        resolvedAlignment = null;
      if (resolvedAlignment == null)
        return _this._proxy_box$_transform;
      result = new E.Matrix4(new Float64Array(16));
      result.setIdentity$0();
      t1 = _this._size;
      centerX = t1._dx / 2;
      centerY = t1._dy / 2;
      t1 = centerX + resolvedAlignment.x * centerX;
      t2 = centerY + resolvedAlignment.y * centerY;
      translation = new P.Offset(t1, t2);
      result.translate$2(0, t1, t2);
      result.multiply$1(0, _this._proxy_box$_transform);
      result.translate$2(0, -translation._dx, -translation._dy);
      return result;
    },
    hitTest$2$position: function(result, position) {
      return this.hitTestChildren$2$position(result, position);
    },
    hitTestChildren$2$position: function(result, position) {
      var t1 = this.transformHitTests ? this.get$_effectiveTransform() : null;
      return result.addWithPaintTransform$3$hitTest$position$transform(new E.RenderTransform_hitTestChildren_closure(this), position, t1);
    },
    paint$2: function(context, offset) {
      var transform, childOffset, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        transform = _this.get$_effectiveTransform();
        childOffset = T.MatrixUtils_getAsTranslation(transform);
        if (childOffset == null)
          _this._layer = context.pushTransform$5$oldLayer(_this._needsCompositing, offset, transform, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), type$.TransformLayer._as(_this._layer));
        else {
          _this.super$RenderProxyBoxMixin$paint(context, offset.$add(0, childOffset));
          _this._layer = null;
        }
      }
    },
    applyPaintTransform$2: function(child, transform) {
      transform.multiply$1(0, this.get$_effectiveTransform());
    }
  };
  E.RenderTransform_hitTestChildren_closure.prototype = {
    call$2: function(result, position) {
      return this.$this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    }
  };
  E.RenderFractionalTranslation.prototype = {
    set$translation: function(value) {
      var _this = this;
      if (J.$eq$(_this._translation, value))
        return;
      _this._translation = value;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    hitTest$2$position: function(result, position) {
      return this.hitTestChildren$2$position(result, position);
    },
    hitTestChildren$2$position: function(result, position) {
      var t1, t2, t3, _this = this;
      if (_this.transformHitTests) {
        t1 = _this._translation;
        t2 = t1._dx;
        t3 = _this._size;
        t3 = new P.Offset(t2 * t3._dx, t1._dy * t3._dy);
        t1 = t3;
      } else
        t1 = null;
      return result.addWithPaintOffset$3$hitTest$offset$position(new E.RenderFractionalTranslation_hitTestChildren_closure(_this), t1, position);
    },
    paint$2: function(context, offset) {
      var t1, t2, t3, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        t1 = _this._translation;
        t2 = t1._dx;
        t3 = _this._size;
        _this.super$RenderProxyBoxMixin$paint(context, new P.Offset(offset._dx + t2 * t3._dx, offset._dy + t1._dy * t3._dy));
      }
    },
    applyPaintTransform$2: function(child, transform) {
      var t1 = this._translation,
        t2 = t1._dx,
        t3 = this._size;
      transform.translate$2(0, t2 * t3._dx, t1._dy * t3._dy);
    }
  };
  E.RenderFractionalTranslation_hitTestChildren_closure.prototype = {
    call$2: function(result, position) {
      return this.$this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    }
  };
  E.RenderPointerListener.prototype = {
    performResize$0: function() {
      var t1 = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(this));
      this._size = new P.Size(C.JSInt_methods.clamp$2(1 / 0, t1.minWidth, t1.maxWidth), C.JSInt_methods.clamp$2(1 / 0, t1.minHeight, t1.maxHeight));
    },
    handleEvent$2: function($event, entry) {
      var _this = this,
        t1 = _this.onPointerDown;
      if (t1 != null && $event instanceof F.PointerDownEvent)
        return t1.call$1($event);
      t1 = _this.onPointerUp;
      if (t1 != null && $event instanceof F.PointerUpEvent)
        return t1.call$1($event);
      t1 = _this.onPointerCancel;
      if (t1 != null && $event instanceof F.PointerCancelEvent)
        return t1.call$1($event);
      t1 = _this.onPointerSignal;
      if (t1 != null && $event instanceof F.PointerSignalEvent)
        return t1.call$1($event);
    }
  };
  E.RenderMouseRegion.prototype = {
    _handleEnter$1: function($event) {
      var t1 = this._onEnter;
      if (t1 != null)
        t1.call$1($event);
    },
    _handleHover$1: function($event) {
    },
    _handleExit$1: function($event) {
      var t1 = this._onExit;
      if (t1 != null)
        t1.call$1($event);
    },
    _markPropertyUpdated$1$mustRepaint: function(mustRepaint) {
      var t1, newAnnotationIsActive, annotationWasActive, _this = this;
      if (_this._onEnter == null)
        t1 = _this._onExit != null || _this._proxy_box$_opaque;
      else
        t1 = true;
      if (t1) {
        t1 = $.RendererBinding__instance.RendererBinding__mouseTracker._mouseStates;
        newAnnotationIsActive = t1.get$isNotEmpty(t1);
      } else
        newAnnotationIsActive = false;
      annotationWasActive = _this._annotationIsActive;
      _this._annotationIsActive = newAnnotationIsActive;
      if (annotationWasActive !== newAnnotationIsActive) {
        _this.markNeedsPaint$0();
        _this.markNeedsCompositingBitsUpdate$0();
      }
      if (mustRepaint)
        _this.markNeedsPaint$0();
    },
    _handleUpdatedMouseIsConnected$0: function() {
      this._markPropertyUpdated$1$mustRepaint(false);
    },
    attach$1: function(owner) {
      var t1;
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      t1 = $.RendererBinding__instance.RendererBinding__mouseTracker.ChangeNotifier__listeners;
      t1._isDirty = true;
      t1._list.push(this.get$_handleUpdatedMouseIsConnected());
      this._markPropertyUpdated$1$mustRepaint(false);
    },
    detach$0: function(_) {
      $.RendererBinding__instance.RendererBinding__mouseTracker.ChangeNotifier__listeners.remove$1(0, this.get$_handleUpdatedMouseIsConnected());
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    get$needsCompositing: function() {
      return K.RenderObject.prototype.get$needsCompositing.call(this) || this._annotationIsActive;
    },
    paint$2: function(context, offset) {
      var t1, t2, _this = this;
      if (_this._annotationIsActive) {
        t1 = _this._hoverAnnotation;
        t2 = _this._size;
        context.pushLayer$3(T.AnnotatedRegionLayer$(t1, offset, _this._proxy_box$_opaque, t2, type$.MouseTrackerAnnotation), E.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset);
      } else
        _this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    performResize$0: function() {
      var t1 = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(this));
      this._size = new P.Size(C.JSInt_methods.clamp$2(1 / 0, t1.minWidth, t1.maxWidth), C.JSInt_methods.clamp$2(1 / 0, t1.minHeight, t1.maxHeight));
    }
  };
  E.RenderRepaintBoundary.prototype = {
    get$isRepaintBoundary: function() {
      return true;
    }
  };
  E.RenderIgnorePointer.prototype = {
    set$ignoring: function(value) {
      var t1, _this = this;
      if (value === _this._ignoring)
        return;
      _this._ignoring = value;
      t1 = _this._ignoringSemantics;
      if (t1 == null || !t1)
        _this.markNeedsSemanticsUpdate$0();
    },
    set$ignoringSemantics: function(value) {
      var oldEffectiveValue, _this = this;
      if (value == _this._ignoringSemantics)
        return;
      oldEffectiveValue = _this.get$_effectiveIgnoringSemantics();
      _this._ignoringSemantics = value;
      if (oldEffectiveValue !== _this.get$_effectiveIgnoringSemantics())
        _this.markNeedsSemanticsUpdate$0();
    },
    get$_effectiveIgnoringSemantics: function() {
      var t1 = this._ignoringSemantics;
      return t1 == null ? this._ignoring : t1;
    },
    hitTest$2$position: function(result, position) {
      return !this._ignoring && this.super$RenderBox$hitTest(result, position);
    },
    visitChildrenForSemantics$1: function(visitor) {
      if (this.RenderObjectWithChildMixin__child != null && !this.get$_effectiveIgnoringSemantics())
        visitor.call$1(this.RenderObjectWithChildMixin__child);
    }
  };
  E.RenderOffstage.prototype = {
    set$offstage: function(value) {
      var _this = this;
      if (value === _this._proxy_box$_offstage)
        return;
      _this._proxy_box$_offstage = value;
      _this.markNeedsLayout$0();
      _this.markParentNeedsLayout$0();
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      if (this._proxy_box$_offstage)
        return null;
      return this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline(baseline);
    },
    get$sizedByParent: function() {
      return this._proxy_box$_offstage;
    },
    performResize$0: function() {
      var t1 = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(this));
      this._size = new P.Size(C.JSInt_methods.clamp$2(0, t1.minWidth, t1.maxWidth), C.JSInt_methods.clamp$2(0, t1.minHeight, t1.maxHeight));
    },
    performLayout$0: function() {
      var t1, _this = this;
      if (_this._proxy_box$_offstage) {
        t1 = _this.RenderObjectWithChildMixin__child;
        if (t1 != null)
          t1.layout$1(type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)));
      } else
        _this.super$RenderProxyBoxMixin$performLayout();
    },
    hitTest$2$position: function(result, position) {
      return !this._proxy_box$_offstage && this.super$RenderBox$hitTest(result, position);
    },
    paint$2: function(context, offset) {
      if (this._proxy_box$_offstage)
        return;
      this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    visitChildrenForSemantics$1: function(visitor) {
      if (this._proxy_box$_offstage)
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    },
    debugDescribeChildren$0: function() {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 == null)
        return H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
      return H.setRuntimeTypeInfo([new Y.DiagnosticableTreeNode(t1, "child", true, true, null, this._proxy_box$_offstage ? C.DiagnosticsTreeStyle_2 : C.DiagnosticsTreeStyle_1)], type$.JSArray_DiagnosticsNode);
    }
  };
  E.RenderAbsorbPointer.prototype = {
    set$absorbing: function(value) {
      if (this._absorbing == value)
        return;
      this._absorbing = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$ignoringSemantics: function(value) {
      return;
    },
    get$_effectiveIgnoringSemantics: function() {
      var t1 = this._absorbing;
      return t1;
    },
    hitTest$2$position: function(result, position) {
      return this._absorbing ? this._size.contains$1(0, position) : this.super$RenderBox$hitTest(result, position);
    },
    visitChildrenForSemantics$1: function(visitor) {
      if (this.RenderObjectWithChildMixin__child != null && !this.get$_effectiveIgnoringSemantics())
        visitor.call$1(this.RenderObjectWithChildMixin__child);
    }
  };
  E.RenderSemanticsGestureHandler.prototype = {
    set$validActions: function(value) {
      if (S.setEquals(value, this._validActions))
        return;
      this._validActions = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$onTap: function(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onTap, value))
        return;
      t1 = _this._onTap;
      _this._onTap = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onLongPress: function(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onLongPress, value))
        return;
      t1 = _this._onLongPress;
      _this._onLongPress = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    get$onHorizontalDragUpdate: function() {
      return this._onHorizontalDragUpdate;
    },
    set$onHorizontalDragUpdate: function(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onHorizontalDragUpdate, value))
        return;
      t1 = _this._onHorizontalDragUpdate;
      _this._onHorizontalDragUpdate = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    get$onVerticalDragUpdate: function() {
      return this._onVerticalDragUpdate;
    },
    set$onVerticalDragUpdate: function(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onVerticalDragUpdate, value))
        return;
      t1 = _this._onVerticalDragUpdate;
      _this._onVerticalDragUpdate = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    describeSemanticsConfiguration$1: function(config) {
      var t1, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      if (_this._onTap != null && _this._isValidAction$1(C.SemanticsAction_1)) {
        t1 = _this._onTap;
        config._addArgumentlessAction$2(C.SemanticsAction_1, t1);
        config._semantics$_onTap = t1;
      }
      if (_this._onLongPress != null && _this._isValidAction$1(C.SemanticsAction_2)) {
        t1 = _this._onLongPress;
        config._addArgumentlessAction$2(C.SemanticsAction_2, t1);
        config._semantics$_onLongPress = t1;
      }
      if (_this._onHorizontalDragUpdate != null) {
        if (_this._isValidAction$1(C.SemanticsAction_8))
          config._addArgumentlessAction$2(C.SemanticsAction_8, _this.get$_performSemanticScrollRight());
        if (_this._isValidAction$1(C.SemanticsAction_4))
          config._addArgumentlessAction$2(C.SemanticsAction_4, _this.get$_performSemanticScrollLeft());
      }
      if (_this._onVerticalDragUpdate != null) {
        if (_this._isValidAction$1(C.SemanticsAction_16))
          config._addArgumentlessAction$2(C.SemanticsAction_16, _this.get$_performSemanticScrollUp());
        if (_this._isValidAction$1(C.SemanticsAction_32))
          config._addArgumentlessAction$2(C.SemanticsAction_32, _this.get$_performSemanticScrollDown());
      }
    },
    _isValidAction$1: function(action) {
      var t1 = this._validActions;
      return t1 == null || t1.contains$1(0, action);
    },
    _performSemanticScrollLeft$0: function() {
      var t1, primaryDelta, _this = this;
      if (_this._onHorizontalDragUpdate != null) {
        t1 = _this._size;
        primaryDelta = t1._dx * -0.8;
        t1 = t1.center$1(C.Offset_0_0);
        _this.onHorizontalDragUpdate$1(O.DragUpdateDetails$(new P.Offset(primaryDelta, 0), T.MatrixUtils_transformPoint(_this.getTransformTo$1(0, null), t1), null, primaryDelta, null));
      }
    },
    _performSemanticScrollRight$0: function() {
      var t1, primaryDelta, _this = this;
      if (_this._onHorizontalDragUpdate != null) {
        t1 = _this._size;
        primaryDelta = t1._dx * 0.8;
        t1 = t1.center$1(C.Offset_0_0);
        _this.onHorizontalDragUpdate$1(O.DragUpdateDetails$(new P.Offset(primaryDelta, 0), T.MatrixUtils_transformPoint(_this.getTransformTo$1(0, null), t1), null, primaryDelta, null));
      }
    },
    _performSemanticScrollUp$0: function() {
      var t1, primaryDelta, _this = this;
      if (_this._onVerticalDragUpdate != null) {
        t1 = _this._size;
        primaryDelta = t1._dy * -0.8;
        t1 = t1.center$1(C.Offset_0_0);
        _this.onVerticalDragUpdate$1(O.DragUpdateDetails$(new P.Offset(0, primaryDelta), T.MatrixUtils_transformPoint(_this.getTransformTo$1(0, null), t1), null, primaryDelta, null));
      }
    },
    _performSemanticScrollDown$0: function() {
      var t1, primaryDelta, _this = this;
      if (_this._onVerticalDragUpdate != null) {
        t1 = _this._size;
        primaryDelta = t1._dy * 0.8;
        t1 = t1.center$1(C.Offset_0_0);
        _this.onVerticalDragUpdate$1(O.DragUpdateDetails$(new P.Offset(0, primaryDelta), T.MatrixUtils_transformPoint(_this.getTransformTo$1(0, null), t1), null, primaryDelta, null));
      }
    },
    onHorizontalDragUpdate$1: function(arg0) {
      return this.get$onHorizontalDragUpdate().call$1(arg0);
    },
    onVerticalDragUpdate$1: function(arg0) {
      return this.get$onVerticalDragUpdate().call$1(arg0);
    }
  };
  E.RenderSemanticsAnnotations.prototype = {
    set$container: function(value) {
      if (this._container === value)
        return;
      this._container = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$explicitChildNodes: function(value) {
      if (this._explicitChildNodes === value)
        return;
      this._explicitChildNodes = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$excludeSemantics: function(value) {
      return;
    },
    set$checked: function(_, value) {
      return;
    },
    set$enabled: function(_, value) {
      if (this._enabled == value)
        return;
      this._enabled = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$selected: function(_, value) {
      if (this._selected == value)
        return;
      this._selected = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$button: function(_, value) {
      if (this._button == value)
        return;
      this._button = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$link: function(value) {
      return;
    },
    set$header: function(value) {
      if (this._header == value)
        return;
      this._header = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$textField: function(value) {
      return;
    },
    set$readOnly: function(_, value) {
      return;
    },
    set$focusable: function(value) {
      if (this._focusable == value)
        return;
      this._focusable = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$focused: function(_, value) {
      if (this._focused == value)
        return;
      this._focused = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$inMutuallyExclusiveGroup: function(value) {
      return;
    },
    set$obscured: function(value) {
      return;
    },
    set$multiline: function(_, value) {
      return;
    },
    set$scopesRoute: function(value) {
      if (this._scopesRoute == value)
        return;
      this._scopesRoute = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$namesRoute: function(value) {
      if (this._namesRoute == value)
        return;
      this._namesRoute = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$hidden: function(_, value) {
      return;
    },
    set$image: function(_, value) {
      return;
    },
    set$liveRegion: function(value) {
      return;
    },
    set$maxValueLength: function(value) {
      return;
    },
    set$currentValueLength: function(value) {
      return;
    },
    set$toggled: function(value) {
      return;
    },
    set$label: function(_, value) {
      if (this._label == value)
        return;
      this._label = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$value: function(_, value) {
      return;
    },
    set$increasedValue: function(value) {
      return;
    },
    set$decreasedValue: function(value) {
      return;
    },
    set$hint: function(_, value) {
      return;
    },
    set$hintOverrides: function(value) {
      if (J.$eq$(this._hintOverrides, value))
        return;
      this._hintOverrides = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$textDirection: function(value) {
      if (this._proxy_box$_textDirection == value)
        return;
      this._proxy_box$_textDirection = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$sortKey: function(value) {
      return;
    },
    set$onTap: function(handler) {
      return;
    },
    get$onDismiss: function() {
      return this._onDismiss;
    },
    set$onDismiss: function(handler) {
      var t1, _this = this;
      if (J.$eq$(_this._onDismiss, handler))
        return;
      t1 = _this._onDismiss;
      _this._onDismiss = handler;
      if (handler != null === (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onLongPress: function(handler) {
      return;
    },
    set$onScrollLeft: function(handler) {
      return;
    },
    set$onScrollRight: function(handler) {
      return;
    },
    set$onScrollUp: function(handler) {
      return;
    },
    set$onScrollDown: function(handler) {
      return;
    },
    set$onIncrease: function(handler) {
      return;
    },
    set$onDecrease: function(handler) {
      return;
    },
    set$onCopy: function(_, handler) {
      return;
    },
    set$onCut: function(_, handler) {
      return;
    },
    set$onPaste: function(_, handler) {
      return;
    },
    set$onMoveCursorForwardByCharacter: function(handler) {
      return;
    },
    set$onMoveCursorBackwardByCharacter: function(handler) {
      return;
    },
    set$onMoveCursorForwardByWord: function(handler) {
      return;
    },
    set$onMoveCursorBackwardByWord: function(handler) {
      return;
    },
    set$onSetSelection: function(handler) {
      return;
    },
    set$onDidGainAccessibilityFocus: function(handler) {
      return;
    },
    set$onDidLoseAccessibilityFocus: function(handler) {
      return;
    },
    set$customSemanticsActions: function(value) {
      return;
    },
    visitChildrenForSemantics$1: function(visitor) {
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    },
    describeSemanticsConfiguration$1: function(config) {
      var t1, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      config._isSemanticBoundary = _this._container;
      config.explicitChildNodes = _this._explicitChildNodes;
      t1 = _this._enabled;
      if (t1 != null) {
        config._setFlag$2(C.SemanticsFlag_64, true);
        config._setFlag$2(C.SemanticsFlag_128, t1);
      }
      t1 = _this._selected;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_4, t1);
      t1 = _this._button;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_8, t1);
      t1 = _this._header;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_512, t1);
      t1 = _this._focusable;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_2097152, t1);
      t1 = _this._focused;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_32, t1);
      t1 = _this._label;
      if (t1 != null) {
        config._semantics$_label = t1;
        config._hasBeenAnnotated = true;
      }
      t1 = _this._hintOverrides;
      if (t1 != null && t1.get$isNotEmpty(t1))
        config.set$hintOverrides(_this._hintOverrides);
      t1 = _this._scopesRoute;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_2048, t1);
      t1 = _this._namesRoute;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_4096, t1);
      t1 = _this._proxy_box$_textDirection;
      if (t1 != null) {
        config._semantics$_textDirection = t1;
        config._hasBeenAnnotated = true;
      }
      if (_this._onDismiss != null)
        config._addArgumentlessAction$2(C.SemanticsAction_262144, _this.get$_performDismiss());
    },
    _performDismiss$0: function() {
      if (this._onDismiss != null)
        this.onDismiss$0();
    },
    onDismiss$0: function() {
      return this.get$onDismiss().call$0();
    }
  };
  E.RenderBlockSemantics.prototype = {
    set$blocking: function(value) {
      return;
    },
    describeSemanticsConfiguration$1: function(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.isBlockingSemanticsOfPreviouslyPaintedNodes = true;
    }
  };
  E.RenderMergeSemantics.prototype = {
    describeSemanticsConfiguration$1: function(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config._hasBeenAnnotated = config._isMergingSemanticsOfDescendants = config._isSemanticBoundary = true;
    }
  };
  E.RenderExcludeSemantics.prototype = {
    set$excluding: function(value) {
      if (value == this._excluding)
        return;
      this._excluding = value;
      this.markNeedsSemanticsUpdate$0();
    },
    visitChildrenForSemantics$1: function(visitor) {
      if (this._excluding)
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    }
  };
  E.RenderIndexedSemantics.prototype = {
    set$index: function(_, value) {
      if (value === this._proxy_box$_index)
        return;
      this._proxy_box$_index = value;
      this.markNeedsSemanticsUpdate$0();
    },
    describeSemanticsConfiguration$1: function(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config._isSemanticBoundary = true;
      config._indexInParent = this._proxy_box$_index;
      config._hasBeenAnnotated = true;
    }
  };
  E.RenderAnnotatedRegion.prototype = {
    set$value: function(_, newValue) {
      if (this._proxy_box$_value.$eq(0, newValue))
        return;
      this._proxy_box$_value = newValue;
      this.markNeedsPaint$0();
    },
    set$sized: function(value) {
      return;
    },
    paint$2: function(context, offset) {
      var _this = this,
        t1 = _this._proxy_box$_value,
        t2 = _this._size;
      context.pushLayer$3(T.AnnotatedRegionLayer$(t1, offset, false, t2, _this.$ti._precomputed1), E.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset);
    },
    get$alwaysNeedsCompositing: function() {
      return true;
    }
  };
  E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin.prototype = {
    computeDistanceToActualBaseline$1: function(baseline) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return t1.getDistanceToActualBaseline$1(baseline);
      return this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline(baseline);
    }
  };
  E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin.prototype = {
    attach$1: function(owner) {
      var _this = this;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      _this.RenderAnimatedOpacityMixin__opacity.addListener$1(0, _this.get$_updateOpacity());
      _this._updateOpacity$0();
    },
    detach$0: function(_) {
      this.RenderAnimatedOpacityMixin__opacity.removeListener$1(0, this.get$_updateOpacity());
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    paint$2: function(context, offset) {
      var t2, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = _this.RenderAnimatedOpacityMixin__alpha;
        if (t2 === 0) {
          _this._layer = null;
          return;
        }
        if (t2 === 255) {
          _this._layer = null;
          context.paintChild$2(t1, offset);
          return;
        }
        _this._layer = context.pushOpacity$4$oldLayer(offset, t2, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), type$.OpacityLayer._as(_this._layer));
      }
    }
  };
  E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1: function(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0: function(_) {
      var t1;
      this.super$AbstractNode$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin.prototype = {
    computeDistanceToActualBaseline$1: function(baseline) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return t1.getDistanceToActualBaseline$1(baseline);
      return this.super$RenderBox$computeDistanceToActualBaseline(baseline);
    }
  };
  T.RenderShiftedBox.prototype = {
    computeDistanceToActualBaseline$1: function(baseline) {
      var result, childParentData,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        result = t1.getDistanceToActualBaseline$1(baseline);
        childParentData = type$.BoxParentData._as(this.RenderObjectWithChildMixin__child.parentData);
        if (result != null)
          result += childParentData.offset._dy;
      } else
        result = this.super$RenderBox$computeDistanceToActualBaseline(baseline);
      return result;
    },
    paint$2: function(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, type$.BoxParentData._as(t1.parentData).offset.$add(0, offset));
    },
    hitTestChildren$2$position: function(result, position) {
      var childParentData,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        childParentData = type$.BoxParentData._as(t1.parentData);
        return result.addWithPaintOffset$3$hitTest$offset$position(new T.RenderShiftedBox_hitTestChildren_closure(this, position, childParentData), childParentData.offset, position);
      }
      return false;
    }
  };
  T.RenderShiftedBox_hitTestChildren_closure.prototype = {
    call$2: function(result, transformed) {
      return this.$this.RenderObjectWithChildMixin__child.hitTest$2$position(result, transformed);
    }
  };
  T.RenderPadding.prototype = {
    _shifted_box$_resolve$0: function() {
      var _this = this;
      if (_this._resolvedPadding != null)
        return;
      _this._resolvedPadding = _this._shifted_box$_padding.resolve$1(_this._shifted_box$_textDirection);
    },
    set$padding: function(_, value) {
      var _this = this;
      if (J.$eq$(_this._shifted_box$_padding, value))
        return;
      _this._shifted_box$_padding = value;
      _this._resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    set$textDirection: function(value) {
      var _this = this;
      if (_this._shifted_box$_textDirection == value)
        return;
      _this._shifted_box$_textDirection = value;
      _this._resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    performLayout$0: function() {
      var t1, horizontal, vertical, deflatedMinWidth, deflatedMinHeight, t2, childParentData, t3, t4, _this = this,
        constraints = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this));
      _this._shifted_box$_resolve$0();
      if (_this.RenderObjectWithChildMixin__child == null) {
        t1 = _this._resolvedPadding;
        _this._size = constraints.constrain$1(new P.Size(t1.left + t1.right, t1.top + t1.bottom));
        return;
      }
      t1 = _this._resolvedPadding;
      constraints.toString;
      horizontal = t1.get$horizontal();
      vertical = t1.get$_top(t1) + t1.get$_bottom(t1);
      deflatedMinWidth = Math.max(0, constraints.minWidth - horizontal);
      deflatedMinHeight = Math.max(0, constraints.minHeight - vertical);
      t1 = Math.max(deflatedMinWidth, constraints.maxWidth - horizontal);
      t2 = Math.max(deflatedMinHeight, constraints.maxHeight - vertical);
      _this.RenderObjectWithChildMixin__child.layout$2$parentUsesSize(new S.BoxConstraints(deflatedMinWidth, t1, deflatedMinHeight, t2), true);
      t2 = _this.RenderObjectWithChildMixin__child;
      childParentData = type$.BoxParentData._as(t2.parentData);
      t1 = _this._resolvedPadding;
      t3 = t1.left;
      t4 = t1.top;
      childParentData.offset = new P.Offset(t3, t4);
      t2 = t2._size;
      _this._size = constraints.constrain$1(new P.Size(t3 + t2._dx + t1.right, t4 + t2._dy + t1.bottom));
    }
  };
  T.RenderAligningShiftedBox.prototype = {
    _shifted_box$_resolve$0: function() {
      var _this = this;
      if (_this._shifted_box$_resolvedAlignment != null)
        return;
      _this._shifted_box$_resolvedAlignment = _this._shifted_box$_alignment.resolve$1(_this._shifted_box$_textDirection);
    },
    set$alignment: function(value) {
      var _this = this;
      if (J.$eq$(_this._shifted_box$_alignment, value))
        return;
      _this._shifted_box$_alignment = value;
      _this._shifted_box$_resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    set$textDirection: function(value) {
      var _this = this;
      if (_this._shifted_box$_textDirection == value)
        return;
      _this._shifted_box$_textDirection = value;
      _this._shifted_box$_resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    alignChild$0: function() {
      var t1, _this = this;
      _this._shifted_box$_resolve$0();
      t1 = _this.RenderObjectWithChildMixin__child;
      type$.BoxParentData._as(t1.parentData).offset = _this._shifted_box$_resolvedAlignment.alongOffset$1(type$.Offset._as(_this._size.$sub(0, t1._size)));
    }
  };
  T.RenderPositionedBox.prototype = {
    set$widthFactor: function(value) {
      if (this._widthFactor == value)
        return;
      this._widthFactor = value;
      this.markNeedsLayout$0();
    },
    set$heightFactor: function(value) {
      if (this._heightFactor == value)
        return;
      this._heightFactor = value;
      this.markNeedsLayout$0();
    },
    performLayout$0: function() {
      var t2, t3, _this = this,
        constraints = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)),
        shrinkWrapWidth = _this._widthFactor != null || constraints.maxWidth === 1 / 0,
        shrinkWrapHeight = _this._heightFactor != null || constraints.maxHeight === 1 / 0,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(constraints.loosen$0(), true);
        if (shrinkWrapWidth) {
          t1 = _this.RenderObjectWithChildMixin__child._size._dx;
          t2 = _this._widthFactor;
          t1 *= t2 == null ? 1 : t2;
        } else
          t1 = 1 / 0;
        if (shrinkWrapHeight) {
          t2 = _this.RenderObjectWithChildMixin__child._size._dy;
          t3 = _this._heightFactor;
          t2 *= t3 == null ? 1 : t3;
        } else
          t2 = 1 / 0;
        _this._size = constraints.constrain$1(new P.Size(t1, t2));
        _this.alignChild$0();
      } else {
        t1 = shrinkWrapWidth ? 0 : 1 / 0;
        _this._size = constraints.constrain$1(new P.Size(t1, shrinkWrapHeight ? 0 : 1 / 0));
      }
    }
  };
  T.SingleChildLayoutDelegate.prototype = {
    getSize$1: function(constraints) {
      return new P.Size(C.JSInt_methods.clamp$2(1 / 0, constraints.minWidth, constraints.maxWidth), C.JSInt_methods.clamp$2(1 / 0, constraints.minHeight, constraints.maxHeight));
    }
  };
  T.RenderCustomSingleChildLayoutBox.prototype = {
    set$delegate: function(newDelegate) {
      var _this = this,
        t1 = _this._shifted_box$_delegate;
      if (t1 === newDelegate)
        return;
      if (!H.getRuntimeType(newDelegate).$eq(0, H.getRuntimeType(t1)) || newDelegate.shouldRelayout$1(t1))
        _this.markNeedsLayout$0();
      _this._shifted_box$_delegate = newDelegate;
      _this._node$_owner != null;
    },
    attach$1: function(owner) {
      this.super$_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
    },
    detach$0: function(_) {
      this.super$_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    performLayout$0: function() {
      var childConstraints, t3, t4, childParentData, t5, t6, _this = this,
        t1 = type$.BoxConstraints,
        t2 = t1._as(K.RenderObject.prototype.get$constraints.call(_this));
      _this._size = t2.constrain$1(_this._shifted_box$_delegate.getSize$1(t2));
      if (_this.RenderObjectWithChildMixin__child != null) {
        childConstraints = _this._shifted_box$_delegate.getConstraintsForChild$1(t1._as(K.RenderObject.prototype.get$constraints.call(_this)));
        t1 = _this.RenderObjectWithChildMixin__child;
        t2 = childConstraints.minWidth;
        t3 = childConstraints.maxWidth;
        t4 = t2 >= t3;
        t1.layout$2$parentUsesSize(childConstraints, !(t4 && childConstraints.minHeight >= childConstraints.maxHeight));
        t1 = _this.RenderObjectWithChildMixin__child;
        childParentData = type$.BoxParentData._as(t1.parentData);
        t5 = _this._shifted_box$_delegate;
        t6 = _this._size;
        childParentData.offset = t5.getPositionForChild$2(t6, t4 && childConstraints.minHeight >= childConstraints.maxHeight ? new P.Size(C.JSInt_methods.clamp$2(0, t2, t3), C.JSInt_methods.clamp$2(0, childConstraints.minHeight, childConstraints.maxHeight)) : t1._size);
      }
    }
  };
  T._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1: function(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0: function(_) {
      var t1;
      this.super$AbstractNode$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  G.GrowthDirection.prototype = {
    toString$0: function(_) {
      return this._sliver$_name;
    }
  };
  G.SliverConstraints.prototype = {
    get$isTight: function() {
      return false;
    },
    asBoxConstraints$2$maxExtent$minExtent: function(maxExtent, minExtent) {
      var crossAxisExtent = this.crossAxisExtent;
      switch (G.axisDirectionToAxis(this.axisDirection)) {
        case C.Axis_0:
          return new S.BoxConstraints(minExtent, maxExtent, crossAxisExtent, crossAxisExtent);
        case C.Axis_1:
          return new S.BoxConstraints(crossAxisExtent, crossAxisExtent, minExtent, maxExtent);
      }
      return null;
    },
    asBoxConstraints$0: function() {
      return this.asBoxConstraints$2$maxExtent$minExtent(1 / 0, 0);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof G.SliverConstraints))
        return false;
      t1 = other.axisDirection == _this.axisDirection && other.growthDirection === _this.growthDirection && other.scrollOffset === _this.scrollOffset && other.overlap === _this.overlap && other.remainingPaintExtent === _this.remainingPaintExtent && other.crossAxisExtent == _this.crossAxisExtent && other.crossAxisDirection == _this.crossAxisDirection && other.viewportMainAxisExtent == _this.viewportMainAxisExtent && other.remainingCacheExtent === _this.remainingCacheExtent && other.cacheOrigin === _this.cacheOrigin;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.axisDirection, _this.growthDirection, _this.scrollOffset, _this.overlap, _this.remainingPaintExtent, _this.crossAxisExtent, _this.crossAxisDirection, _this.viewportMainAxisExtent, _this.remainingCacheExtent, _this.cacheOrigin, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t2, _this = this,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_String);
      t1.push(H.S(_this.axisDirection));
      t1.push(_this.growthDirection.toString$0(0));
      t1.push(H.S(_this.userScrollDirection));
      t1.push("scrollOffset: " + C.JSNumber_methods.toStringAsFixed$1(_this.scrollOffset, 1));
      t1.push("remainingPaintExtent: " + C.JSNumber_methods.toStringAsFixed$1(_this.remainingPaintExtent, 1));
      t2 = _this.overlap;
      if (t2 !== 0)
        t1.push("overlap: " + C.JSNumber_methods.toStringAsFixed$1(t2, 1));
      t1.push("crossAxisExtent: " + J.toStringAsFixed$1$n(_this.crossAxisExtent, 1));
      t1.push("crossAxisDirection: " + H.S(_this.crossAxisDirection));
      t1.push("viewportMainAxisExtent: " + J.toStringAsFixed$1$n(_this.viewportMainAxisExtent, 1));
      t1.push("remainingCacheExtent: " + C.JSNumber_methods.toStringAsFixed$1(_this.remainingCacheExtent, 1));
      t1.push("cacheOrigin: " + C.JSNumber_methods.toStringAsFixed$1(_this.cacheOrigin, 1));
      return "SliverConstraints(" + C.JSArray_methods.join$1(t1, ", ") + ")";
    }
  };
  G.SliverGeometry.prototype = {
    toStringShort$0: function() {
      return "SliverGeometry";
    }
  };
  G.SliverHitTestResult.prototype = {};
  G.SliverHitTestEntry.prototype = {
    get$target: function(_) {
      return type$.RenderSliver._as(this.target);
    },
    toString$0: function(_) {
      var _this = this;
      return H.getRuntimeType(type$.RenderSliver._as(_this.target)).toString$0(0) + "@(mainAxis: " + H.S(_this.mainAxisPosition) + ", crossAxis: " + H.S(_this.crossAxisPosition) + ")";
    }
  };
  G.SliverLogicalParentData.prototype = {
    toString$0: function(_) {
      var t1 = this.layoutOffset;
      return "layoutOffset=" + (t1 == null ? "None" : C.JSNumber_methods.toStringAsFixed$1(t1, 1));
    }
  };
  G.SliverPhysicalParentData.prototype = {
    toString$0: function(_) {
      return "paintOffset=" + H.S(this.paintOffset);
    }
  };
  G.SliverPhysicalContainerParentData.prototype = {};
  G.RenderSliver.prototype = {
    get$constraints: function() {
      return type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(this));
    },
    get$semanticBounds: function() {
      return this.get$paintBounds();
    },
    get$paintBounds: function() {
      var _this = this,
        t1 = type$.SliverConstraints;
      switch (G.axisDirectionToAxis(t1._as(K.RenderObject.prototype.get$constraints.call(_this)).axisDirection)) {
        case C.Axis_0:
          return new P.Rect(0, 0, 0 + _this._sliver$_geometry.paintExtent, 0 + t1._as(K.RenderObject.prototype.get$constraints.call(_this)).crossAxisExtent);
        case C.Axis_1:
          return new P.Rect(0, 0, 0 + t1._as(K.RenderObject.prototype.get$constraints.call(_this)).crossAxisExtent, 0 + _this._sliver$_geometry.paintExtent);
      }
      return null;
    },
    performResize$0: function() {
    },
    hitTest$3$crossAxisPosition$mainAxisPosition: function(result, crossAxisPosition, mainAxisPosition) {
      var _this = this;
      if (mainAxisPosition >= 0 && mainAxisPosition < _this._sliver$_geometry.hitTestExtent && crossAxisPosition >= 0 && crossAxisPosition < type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)).crossAxisExtent)
        if (_this.hitTestChildren$3$crossAxisPosition$mainAxisPosition(result, crossAxisPosition, mainAxisPosition) || false) {
          result.add$1(0, new G.SliverHitTestEntry(mainAxisPosition, crossAxisPosition, _this));
          return true;
        }
      return false;
    },
    hitTest$1: function(result) {
      return this.hitTest$3$crossAxisPosition$mainAxisPosition(result, null, null);
    },
    hitTestChildren$3$crossAxisPosition$mainAxisPosition: function(result, crossAxisPosition, mainAxisPosition) {
      return false;
    },
    calculatePaintOffset$3$from$to: function(constraints, from, to) {
      var a = constraints.scrollOffset,
        t1 = constraints.remainingPaintExtent,
        b = a + t1;
      return C.JSNumber_methods.clamp$2(J.clamp$2$n(to, a, b) - J.clamp$2$n(from, a, b), 0, t1);
    },
    calculateCacheOffset$3$from$to: function(constraints, from, to) {
      var t1 = constraints.scrollOffset,
        a = t1 + constraints.cacheOrigin,
        t2 = constraints.remainingCacheExtent,
        b = t1 + t2;
      return C.JSNumber_methods.clamp$2(J.clamp$2$n(to, a, b) - J.clamp$2$n(from, a, b), 0, t2);
    },
    childScrollOffset$1: function(child) {
      return 0;
    },
    applyPaintTransform$2: function(child, transform) {
    },
    handleEvent$2: function($event, entry) {
    }
  };
  G.RenderSliverHelpers.prototype = {
    _getRightWayUp$1: function(constraints) {
      var rightWayUp;
      switch (constraints.axisDirection) {
        case C.AxisDirection_0:
        case C.AxisDirection_3:
          rightWayUp = false;
          break;
        case C.AxisDirection_2:
        case C.AxisDirection_1:
          rightWayUp = true;
          break;
        default:
          rightWayUp = null;
      }
      switch (constraints.growthDirection) {
        case C.GrowthDirection_0:
          break;
        case C.GrowthDirection_1:
          rightWayUp = !rightWayUp;
          break;
      }
      return rightWayUp;
    },
    hitTestBoxChild$4$crossAxisPosition$mainAxisPosition: function(result, child, crossAxisPosition, mainAxisPosition) {
      var paintOffset, _this = this, _box_0 = {},
        t1 = type$.SliverConstraints,
        rightWayUp = _this._getRightWayUp$1(t1._as(K.RenderObject.prototype.get$constraints.call(_this))),
        delta = type$.SliverMultiBoxAdaptorParentData._as(child.parentData).layoutOffset - t1._as(K.RenderObject.prototype.get$constraints.call(_this)).scrollOffset,
        absolutePosition = mainAxisPosition - delta,
        absoluteCrossAxisPosition = crossAxisPosition - 0;
      _box_0.transformedPosition = null;
      switch (G.axisDirectionToAxis(t1._as(K.RenderObject.prototype.get$constraints.call(_this)).axisDirection)) {
        case C.Axis_0:
          if (!rightWayUp) {
            t1 = child._size._dx;
            absolutePosition = t1 - absolutePosition;
            delta = _this._sliver$_geometry.paintExtent - t1 - delta;
          }
          paintOffset = new P.Offset(delta, 0);
          _box_0.transformedPosition = new P.Offset(absolutePosition, absoluteCrossAxisPosition);
          break;
        case C.Axis_1:
          if (!rightWayUp) {
            t1 = child._size._dy;
            absolutePosition = t1 - absolutePosition;
            delta = _this._sliver$_geometry.paintExtent - t1 - delta;
          }
          paintOffset = new P.Offset(0, delta);
          _box_0.transformedPosition = new P.Offset(absoluteCrossAxisPosition, absolutePosition);
          break;
        default:
          paintOffset = null;
      }
      return result.addWithPaintOffset$3$hitTest$offset$position(new G.RenderSliverHelpers_hitTestBoxChild_closure(_box_0, child), paintOffset, null);
    }
  };
  G.RenderSliverHelpers_hitTestBoxChild_closure.prototype = {
    call$2: function(result, _) {
      return this.child.hitTest$2$position(result, this._box_0.transformedPosition);
    }
  };
  G._SliverGeometry_Object_Diagnosticable.prototype = {};
  G._SliverPhysicalContainerParentData_SliverPhysicalParentData_ContainerParentDataMixin.prototype = {
    detach$0: function(_) {
      this.super$ParentData$detach(0);
    }
  };
  A.RenderSliverFillViewport.prototype = {
    get$itemExtent: function() {
      return type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(this)).viewportMainAxisExtent * this._sliver_fill0$_viewportFraction;
    },
    set$viewportFraction: function(value) {
      if (this._sliver_fill0$_viewportFraction === value)
        return;
      this._sliver_fill0$_viewportFraction = value;
      this.markNeedsLayout$0();
    }
  };
  X.RenderSliverFixedExtentBoxAdaptor.prototype = {
    getMinChildIndexForScrollOffset$2: function(scrollOffset, itemExtent) {
      var actual, round;
      if (itemExtent > 0) {
        actual = scrollOffset / itemExtent;
        round = C.JSDouble_methods.round$0(actual);
        if (Math.abs(actual - round) < 1e-10)
          return round;
        return C.JSDouble_methods.floor$0(actual);
      }
      return 0;
    },
    getMaxChildIndexForScrollOffset$2: function(scrollOffset, itemExtent) {
      return itemExtent > 0 ? Math.max(0, C.JSDouble_methods.ceil$0(scrollOffset / itemExtent) - 1) : 0;
    },
    _calculateLeadingGarbage$1: function(firstIndex) {
      var walker = this.ContainerRenderObjectMixin__firstChild,
        t1 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"),
        t2 = type$.SliverMultiBoxAdaptorParentData,
        leadingGarbage = 0;
      while (true) {
        if (!(walker != null && t2._as(walker.parentData).index < firstIndex))
          break;
        ++leadingGarbage;
        walker = t1._as(walker.parentData).ContainerParentDataMixin_nextSibling;
      }
      return leadingGarbage;
    },
    _calculateTrailingGarbage$1: function(targetLastIndex) {
      var walker = this.ContainerRenderObjectMixin__lastChild,
        t1 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"),
        t2 = type$.SliverMultiBoxAdaptorParentData,
        trailingGarbage = 0;
      while (true) {
        if (!(walker != null && t2._as(walker.parentData).index > targetLastIndex))
          break;
        ++trailingGarbage;
        walker = t1._as(walker.parentData).ContainerParentDataMixin_previousSibling;
      }
      return trailingGarbage;
    },
    performLayout$0: function() {
      var itemExtent, t2, scrollOffset, targetEndScrollOffset, childConstraints, firstIndex, targetLastIndex, max, possibleFirstIndex, t3, index, trailingChildWithLayout, child, estimatedMaxScrollOffset, t4, t5, childParentData, lastIndex, leadingScrollOffset, trailingScrollOffset, paintExtent, cacheExtent, targetEndScrollOffsetForPaint, targetLastIndexForPaint, _this = this, _null = null,
        constraints = type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this._childManager;
      t1._didUnderflow = false;
      itemExtent = _this.get$itemExtent();
      t2 = constraints.scrollOffset;
      scrollOffset = t2 + constraints.cacheOrigin;
      targetEndScrollOffset = scrollOffset + constraints.remainingCacheExtent;
      childConstraints = constraints.asBoxConstraints$2$maxExtent$minExtent(itemExtent, itemExtent);
      firstIndex = _this.getMinChildIndexForScrollOffset$2(scrollOffset, itemExtent);
      targetLastIndex = isFinite(targetEndScrollOffset) ? _this.getMaxChildIndexForScrollOffset$2(targetEndScrollOffset, itemExtent) : _null;
      if (_this.ContainerRenderObjectMixin__firstChild != null)
        _this.collectGarbage$2(_this._calculateLeadingGarbage$1(firstIndex), _this._calculateTrailingGarbage$1(targetLastIndex));
      else
        _this.collectGarbage$2(0, 0);
      if (_this.ContainerRenderObjectMixin__firstChild == null)
        if (!_this.addInitialChild$2$index$layoutOffset(firstIndex, itemExtent * firstIndex)) {
          t2 = type$.SliverMultiBoxAdaptorWidget;
          if (t2._as(N.RenderObjectElement.prototype.get$widget.call(t1)).delegate.get$estimatedChildCount() != null)
            max = t2._as(N.RenderObjectElement.prototype.get$widget.call(t1)).delegate.get$estimatedChildCount() * itemExtent;
          else if (firstIndex <= 0)
            max = 0;
          else {
            possibleFirstIndex = firstIndex - 1;
            while (true) {
              if (!(possibleFirstIndex > 0 && !_this.addInitialChild$2$index$layoutOffset(possibleFirstIndex, itemExtent * possibleFirstIndex)))
                break;
              --possibleFirstIndex;
            }
            max = possibleFirstIndex * itemExtent;
          }
          _this._sliver$_geometry = G.SliverGeometry$(_null, false, _null, _null, max, 0, max, _null);
          t1.didFinishLayout$0();
          return;
        }
      for (t3 = type$.SliverMultiBoxAdaptorParentData, index = t3._as(_this.ContainerRenderObjectMixin__firstChild.parentData).index - 1, trailingChildWithLayout = _null; index >= firstIndex; --index) {
        child = _this.insertAndLayoutLeadingChild$1(childConstraints);
        if (child == null) {
          _this._sliver$_geometry = G.SliverGeometry$(_null, false, _null, _null, 0, 0, 0, index * itemExtent);
          return;
        }
        t3._as(child.parentData).layoutOffset = itemExtent * index;
        if (trailingChildWithLayout == null)
          trailingChildWithLayout = child;
      }
      if (trailingChildWithLayout == null) {
        _this.ContainerRenderObjectMixin__firstChild.layout$1(childConstraints);
        trailingChildWithLayout = _this.ContainerRenderObjectMixin__firstChild;
        t3._as(trailingChildWithLayout.parentData).layoutOffset = itemExtent * firstIndex;
      }
      index = t3._as(trailingChildWithLayout.parentData).index + 1;
      t4 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
      t5 = targetLastIndex != null;
      while (true) {
        if (!(!t5 || index <= targetLastIndex)) {
          estimatedMaxScrollOffset = 1 / 0;
          break;
        }
        child = t4._as(trailingChildWithLayout.parentData).ContainerParentDataMixin_nextSibling;
        if (child == null || t3._as(child.parentData).index !== index) {
          child = _this.insertAndLayoutChild$2$after(childConstraints, trailingChildWithLayout);
          if (child == null) {
            estimatedMaxScrollOffset = index * itemExtent;
            break;
          }
        } else
          child.layout$1(childConstraints);
        childParentData = t3._as(child.parentData);
        childParentData.layoutOffset = itemExtent * childParentData.index;
        ++index;
        trailingChildWithLayout = child;
      }
      lastIndex = t3._as(_this.ContainerRenderObjectMixin__lastChild.parentData).index;
      leadingScrollOffset = itemExtent * firstIndex;
      trailingScrollOffset = itemExtent * (lastIndex + 1);
      estimatedMaxScrollOffset = Math.min(estimatedMaxScrollOffset, t1.estimateMaxScrollOffset$5$firstIndex$lastIndex$leadingScrollOffset$trailingScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset));
      paintExtent = _this.calculatePaintOffset$3$from$to(constraints, leadingScrollOffset, trailingScrollOffset);
      cacheExtent = _this.calculateCacheOffset$3$from$to(constraints, leadingScrollOffset, trailingScrollOffset);
      targetEndScrollOffsetForPaint = t2 + constraints.remainingPaintExtent;
      targetLastIndexForPaint = isFinite(targetEndScrollOffsetForPaint) ? _this.getMaxChildIndexForScrollOffset$2(targetEndScrollOffsetForPaint, itemExtent) : _null;
      _this._sliver$_geometry = G.SliverGeometry$(cacheExtent, targetLastIndexForPaint != null && lastIndex >= targetLastIndexForPaint || t2 > 0, _null, _null, estimatedMaxScrollOffset, paintExtent, estimatedMaxScrollOffset, _null);
      if (estimatedMaxScrollOffset === trailingScrollOffset)
        t1._didUnderflow = true;
      t1.didFinishLayout$0();
    }
  };
  X.RenderSliverFixedExtentList.prototype = {
    get$itemExtent: function() {
      return this._itemExtent;
    },
    set$itemExtent: function(value) {
      if (this._itemExtent == value)
        return;
      this._itemExtent = value;
      this.markNeedsLayout$0();
    }
  };
  U.RenderSliverList.prototype = {
    performLayout$0: function() {
      var t2, scrollOffset, targetEndScrollOffset, childConstraints, earliestUsefulChild, t3, childParentData, t4, earliestUsefulChild0, leadingChildrenWithoutLayoutOffset, earliestScrollOffset, leadingChildWithLayout, firstChildScrollOffset, correction, advance, leadingGarbage, extent, reachedEnd, t5, trailingGarbage, child, estimatedMaxScrollOffset, paintExtent, cacheExtent, _this = this, _null = null, _box_0 = {},
        constraints = type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this._childManager;
      t1._didUnderflow = false;
      t2 = constraints.scrollOffset;
      scrollOffset = t2 + constraints.cacheOrigin;
      targetEndScrollOffset = scrollOffset + constraints.remainingCacheExtent;
      childConstraints = constraints.asBoxConstraints$0();
      if (_this.ContainerRenderObjectMixin__firstChild == null)
        if (!_this.addInitialChild$0()) {
          _this._sliver$_geometry = C.SliverGeometry_yvr;
          t1.didFinishLayout$0();
          return;
        }
      _box_0.trailingChildWithLayout = null;
      earliestUsefulChild = _this.ContainerRenderObjectMixin__firstChild;
      t3 = type$.SliverMultiBoxAdaptorParentData;
      childParentData = t3._as(earliestUsefulChild.parentData);
      if (childParentData.layoutOffset == null) {
        for (t4 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"), earliestUsefulChild0 = childParentData.ContainerParentDataMixin_nextSibling, leadingChildrenWithoutLayoutOffset = 0; t3._as(earliestUsefulChild.parentData).layoutOffset == null; earliestUsefulChild = earliestUsefulChild0) {
          t4._as(childParentData);
          ++leadingChildrenWithoutLayoutOffset;
        }
        _this.collectGarbage$2(leadingChildrenWithoutLayoutOffset, 0);
      }
      earliestUsefulChild = _this.ContainerRenderObjectMixin__firstChild;
      earliestScrollOffset = t3._as(earliestUsefulChild.parentData).layoutOffset;
      leadingChildWithLayout = _null;
      while (earliestScrollOffset > scrollOffset) {
        earliestUsefulChild = _this.insertAndLayoutLeadingChild$2$parentUsesSize(childConstraints, true);
        if (earliestUsefulChild == null) {
          t4 = _this.ContainerRenderObjectMixin__firstChild;
          t3._as(t4.parentData).layoutOffset = 0;
          if (scrollOffset === 0) {
            t4.layout$2$parentUsesSize(childConstraints, true);
            earliestUsefulChild = _this.ContainerRenderObjectMixin__firstChild;
            if (_box_0.trailingChildWithLayout == null)
              _box_0.trailingChildWithLayout = earliestUsefulChild;
            leadingChildWithLayout = earliestUsefulChild;
            break;
          } else {
            _this._sliver$_geometry = G.SliverGeometry$(_null, false, _null, _null, 0, 0, 0, -scrollOffset);
            return;
          }
        }
        firstChildScrollOffset = earliestScrollOffset - _this.paintExtentOf$1(_this.ContainerRenderObjectMixin__firstChild);
        if (firstChildScrollOffset < -1e-10) {
          for (correction = 0; earliestUsefulChild != null;) {
            correction += _this.paintExtentOf$1(_this.ContainerRenderObjectMixin__firstChild);
            earliestUsefulChild = _this.insertAndLayoutLeadingChild$2$parentUsesSize(childConstraints, true);
          }
          earliestUsefulChild = _this.ContainerRenderObjectMixin__firstChild;
          t4 = correction - earliestScrollOffset;
          if (Math.abs(t4) > 1e-10) {
            _this._sliver$_geometry = G.SliverGeometry$(_null, false, _null, _null, 0, 0, 0, t4);
            t3._as(earliestUsefulChild.parentData).layoutOffset = 0;
            return;
          }
        }
        childParentData = t3._as(earliestUsefulChild.parentData);
        childParentData.layoutOffset = firstChildScrollOffset;
        if (_box_0.trailingChildWithLayout == null)
          _box_0.trailingChildWithLayout = earliestUsefulChild;
        childParentData.toString;
        earliestScrollOffset = firstChildScrollOffset;
        leadingChildWithLayout = earliestUsefulChild;
      }
      if (leadingChildWithLayout == null) {
        earliestUsefulChild.layout$2$parentUsesSize(childConstraints, true);
        _box_0.trailingChildWithLayout = earliestUsefulChild;
      }
      _box_0.inLayoutRange = true;
      _box_0.child = earliestUsefulChild;
      childParentData = t3._as(earliestUsefulChild.parentData);
      _box_0.index = childParentData.index;
      _box_0.endScrollOffset = childParentData.layoutOffset + _this.paintExtentOf$1(earliestUsefulChild);
      advance = new U.RenderSliverList_performLayout_advance(_box_0, _this, childConstraints);
      for (leadingGarbage = 0; _box_0.endScrollOffset < scrollOffset;) {
        ++leadingGarbage;
        if (!advance.call$0()) {
          _this.collectGarbage$2(leadingGarbage - 1, 0);
          t1 = _this.ContainerRenderObjectMixin__lastChild;
          extent = t3._as(t1.parentData).layoutOffset + _this.paintExtentOf$1(t1);
          _this._sliver$_geometry = G.SliverGeometry$(_null, false, _null, _null, extent, 0, extent, _null);
          return;
        }
      }
      while (true) {
        if (!(_box_0.endScrollOffset < targetEndScrollOffset)) {
          reachedEnd = false;
          break;
        }
        if (!advance.call$0()) {
          reachedEnd = true;
          break;
        }
      }
      t4 = _box_0.child;
      if (t4 != null) {
        t5 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
        t4 = _box_0.child = t5._as(t4.parentData).ContainerParentDataMixin_nextSibling;
        for (trailingGarbage = 0; t4 != null; t4 = child) {
          ++trailingGarbage;
          child = t5._as(t4.parentData).ContainerParentDataMixin_nextSibling;
          _box_0.child = child;
        }
      } else
        trailingGarbage = 0;
      _this.collectGarbage$2(leadingGarbage, trailingGarbage);
      estimatedMaxScrollOffset = _box_0.endScrollOffset;
      if (!reachedEnd) {
        childParentData = t3._as(_this.ContainerRenderObjectMixin__firstChild.parentData);
        estimatedMaxScrollOffset = t1.estimateMaxScrollOffset$5$firstIndex$lastIndex$leadingScrollOffset$trailingScrollOffset(constraints, childParentData.index, t3._as(_this.ContainerRenderObjectMixin__lastChild.parentData).index, childParentData.layoutOffset, estimatedMaxScrollOffset);
      }
      paintExtent = _this.calculatePaintOffset$3$from$to(constraints, t3._as(_this.ContainerRenderObjectMixin__firstChild.parentData).layoutOffset, _box_0.endScrollOffset);
      cacheExtent = _this.calculateCacheOffset$3$from$to(constraints, t3._as(_this.ContainerRenderObjectMixin__firstChild.parentData).layoutOffset, _box_0.endScrollOffset);
      t3 = constraints.remainingPaintExtent;
      t4 = _box_0.endScrollOffset;
      _this._sliver$_geometry = G.SliverGeometry$(cacheExtent, t4 > t2 + t3 || t2 > 0, _null, _null, estimatedMaxScrollOffset, paintExtent, estimatedMaxScrollOffset, _null);
      if (estimatedMaxScrollOffset === t4)
        t1._didUnderflow = true;
      t1.didFinishLayout$0();
    }
  };
  U.RenderSliverList_performLayout_advance.prototype = {
    call$0: function() {
      var t4, child, index, t5, childParentData,
        t1 = this._box_0,
        t2 = t1.child,
        t3 = t1.trailingChildWithLayout;
      if (t2 == t3)
        t1.inLayoutRange = false;
      t4 = this.$this;
      child = t1.child = H._instanceType(t4)._eval$1("ContainerRenderObjectMixin.1")._as(t2.parentData).ContainerParentDataMixin_nextSibling;
      t2 = child == null;
      if (t2)
        t1.inLayoutRange = false;
      index = t1.index + 1;
      t1.index = index;
      if (!t1.inLayoutRange) {
        t2 = t2 || type$.SliverMultiBoxAdaptorParentData._as(child.parentData).index !== index;
        t5 = this.childConstraints;
        if (t2) {
          child = t4.insertAndLayoutChild$3$after$parentUsesSize(t5, t3, true);
          t1.child = child;
          if (child == null)
            return false;
        } else
          child.layout$2$parentUsesSize(t5, true);
        t2 = t1.trailingChildWithLayout = t1.child;
      } else
        t2 = child;
      childParentData = type$.SliverMultiBoxAdaptorParentData._as(t2.parentData);
      t3 = t1.endScrollOffset;
      childParentData.layoutOffset = t3;
      childParentData.toString;
      t1.endScrollOffset = t3 + t4.paintExtentOf$1(t2);
      return true;
    },
    $signature: 26
  };
  F.KeepAliveParentDataMixin.prototype = {};
  F.RenderSliverWithKeepAliveMixin.prototype = {
    setupParentData$1: function(child) {
    }
  };
  F.SliverMultiBoxAdaptorParentData.prototype = {
    toString$0: function(_) {
      var t1 = "index=" + H.S(this.index) + "; ";
      return t1 + (this.KeepAliveParentDataMixin_keepAlive ? "keepAlive; " : "") + this.super$SliverLogicalParentData$toString(0);
    }
  };
  F.RenderSliverMultiBoxAdaptor.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof F.SliverMultiBoxAdaptorParentData))
        child.parentData = new F.SliverMultiBoxAdaptorParentData(false, null, null);
    },
    adoptChild$1: function(child) {
      var childParentData;
      this.super$RenderObject$adoptChild(child);
      childParentData = type$.SliverMultiBoxAdaptorParentData._as(child.parentData);
      if (!childParentData._keptAlive) {
        type$.RenderBox._as(child);
        childParentData.index = this._childManager._currentlyUpdatingChildIndex;
      }
    },
    insert$2$after: function(_, child, after) {
      this.super$ContainerRenderObjectMixin$insert(0, child, after);
    },
    move$2$after: function(child, after) {
      var t2, _this = this,
        t1 = type$.SliverMultiBoxAdaptorParentData,
        childParentData = t1._as(child.parentData);
      if (!childParentData._keptAlive) {
        _this.super$ContainerRenderObjectMixin$move(child, after);
        t1._as(child.parentData).index = _this._childManager._currentlyUpdatingChildIndex;
        _this.markNeedsLayout$0();
      } else {
        t2 = _this._keepAliveBucket;
        if (t2.$index(0, childParentData.index) == child)
          t2.remove$1(0, childParentData.index);
        t1._as(child.parentData).index = _this._childManager._currentlyUpdatingChildIndex;
        t2.$indexSet(0, childParentData.index, child);
      }
    },
    remove$1: function(_, child) {
      var childParentData = type$.SliverMultiBoxAdaptorParentData._as(child.parentData);
      if (!childParentData._keptAlive) {
        this.super$ContainerRenderObjectMixin$remove(0, child);
        return;
      }
      this._keepAliveBucket.remove$1(0, childParentData.index);
      this.dropChild$1(child);
    },
    _createOrObtainChild$2$after: function(index, after) {
      this.invokeLayoutCallback$1$1(new F.RenderSliverMultiBoxAdaptor__createOrObtainChild_closure(this, index, after), type$.SliverConstraints);
    },
    _destroyOrCacheChild$1: function(child) {
      var _this = this,
        childParentData = type$.SliverMultiBoxAdaptorParentData._as(child.parentData);
      if (childParentData.KeepAliveParentDataMixin_keepAlive) {
        _this.remove$1(0, child);
        _this._keepAliveBucket.$indexSet(0, childParentData.index, child);
        child.parentData = childParentData;
        _this.super$RenderObject$adoptChild(child);
        childParentData._keptAlive = true;
      } else
        _this._childManager.removeChild$1(child);
    },
    attach$1: function(owner) {
      var t1;
      this.super$_RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin$attach(owner);
      for (t1 = this._keepAliveBucket, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current(t1).attach$1(owner);
    },
    detach$0: function(_) {
      var t1;
      this.super$_RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin$detach(0);
      for (t1 = this._keepAliveBucket, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current(t1).detach$0(0);
    },
    redepthChildren$0: function() {
      this.super$ContainerRenderObjectMixin$redepthChildren();
      var t1 = this._keepAliveBucket;
      t1.get$values(t1).forEach$1(0, this.get$redepthChild());
    },
    visitChildren$1: function(visitor) {
      var t1;
      this.super$ContainerRenderObjectMixin$visitChildren(visitor);
      t1 = this._keepAliveBucket;
      t1.get$values(t1).forEach$1(0, visitor);
    },
    visitChildrenForSemantics$1: function(visitor) {
      this.super$ContainerRenderObjectMixin$visitChildren(visitor);
    },
    addInitialChild$2$index$layoutOffset: function(index, layoutOffset) {
      var t1;
      this._createOrObtainChild$2$after(index, null);
      t1 = this.ContainerRenderObjectMixin__firstChild;
      if (t1 != null) {
        type$.SliverMultiBoxAdaptorParentData._as(t1.parentData).layoutOffset = layoutOffset;
        return true;
      }
      this._childManager._didUnderflow = true;
      return false;
    },
    addInitialChild$0: function() {
      return this.addInitialChild$2$index$layoutOffset(0, 0);
    },
    insertAndLayoutLeadingChild$2$parentUsesSize: function(childConstraints, parentUsesSize) {
      var t2, _this = this,
        t1 = type$.SliverMultiBoxAdaptorParentData,
        index = t1._as(_this.ContainerRenderObjectMixin__firstChild.parentData).index - 1;
      _this._createOrObtainChild$2$after(index, null);
      t2 = _this.ContainerRenderObjectMixin__firstChild;
      if (t1._as(t2.parentData).index === index) {
        t2.layout$2$parentUsesSize(childConstraints, parentUsesSize);
        return _this.ContainerRenderObjectMixin__firstChild;
      }
      _this._childManager._didUnderflow = true;
      return null;
    },
    insertAndLayoutLeadingChild$1: function(childConstraints) {
      return this.insertAndLayoutLeadingChild$2$parentUsesSize(childConstraints, false);
    },
    insertAndLayoutChild$3$after$parentUsesSize: function(childConstraints, after, parentUsesSize) {
      var child,
        t1 = type$.SliverMultiBoxAdaptorParentData,
        index = t1._as(after.parentData).index + 1;
      this._createOrObtainChild$2$after(index, after);
      child = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1")._as(after.parentData).ContainerParentDataMixin_nextSibling;
      if (child != null && t1._as(child.parentData).index === index) {
        child.layout$2$parentUsesSize(childConstraints, parentUsesSize);
        return child;
      }
      this._childManager._didUnderflow = true;
      return null;
    },
    insertAndLayoutChild$2$after: function(childConstraints, after) {
      return this.insertAndLayoutChild$3$after$parentUsesSize(childConstraints, after, false);
    },
    collectGarbage$2: function(leadingGarbage, trailingGarbage) {
      var t1 = {};
      t1.leadingGarbage = leadingGarbage;
      t1.trailingGarbage = trailingGarbage;
      this.invokeLayoutCallback$1$1(new F.RenderSliverMultiBoxAdaptor_collectGarbage_closure(t1, this), type$.SliverConstraints);
    },
    paintExtentOf$1: function(child) {
      switch (G.axisDirectionToAxis(type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(this)).axisDirection)) {
        case C.Axis_0:
          return child._size._dx;
        case C.Axis_1:
          return child._size._dy;
      }
      return null;
    },
    hitTestChildren$3$crossAxisPosition$mainAxisPosition: function(result, crossAxisPosition, mainAxisPosition) {
      var t1,
        child = this.ContainerRenderObjectMixin__lastChild,
        boxResult = new S.BoxHitTestResult(result._path, result._transforms);
      for (t1 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"); child != null;) {
        if (this.hitTestBoxChild$4$crossAxisPosition$mainAxisPosition(boxResult, child, crossAxisPosition, mainAxisPosition))
          return true;
        child = t1._as(child.parentData).ContainerParentDataMixin_previousSibling;
      }
      return false;
    },
    childScrollOffset$1: function(child) {
      return type$.SliverMultiBoxAdaptorParentData._as(child.parentData).layoutOffset;
    },
    applyPaintTransform$2: function(child, transform) {
      var t1, rightWayUp, delta, _this = this;
      type$.RenderBox._as(child);
      t1 = type$.SliverConstraints;
      rightWayUp = _this._getRightWayUp$1(t1._as(K.RenderObject.prototype.get$constraints.call(_this)));
      delta = type$.SliverMultiBoxAdaptorParentData._as(child.parentData).layoutOffset - t1._as(K.RenderObject.prototype.get$constraints.call(_this)).scrollOffset;
      switch (G.axisDirectionToAxis(t1._as(K.RenderObject.prototype.get$constraints.call(_this)).axisDirection)) {
        case C.Axis_0:
          transform.translate$2(0, !rightWayUp ? _this._sliver$_geometry.paintExtent - child._size._dx - delta : delta, 0);
          break;
        case C.Axis_1:
          transform.translate$2(0, 0, !rightWayUp ? _this._sliver$_geometry.paintExtent - child._size._dy - delta : delta);
          break;
      }
    },
    paint$2: function(context, offset) {
      var t1, originOffset, mainAxisUnit, crossAxisUnit, addExtent, child, t2, t3, mainAxisDelta, t4, t5, t6, t7, childOffset, t8, _this = this, _null = null;
      if (_this.ContainerRenderObjectMixin__firstChild == null)
        return;
      t1 = type$.SliverConstraints;
      switch (G.applyGrowthDirectionToAxisDirection(t1._as(K.RenderObject.prototype.get$constraints.call(_this)).axisDirection, t1._as(K.RenderObject.prototype.get$constraints.call(_this)).growthDirection)) {
        case C.AxisDirection_0:
          originOffset = offset.$add(0, new P.Offset(0, _this._sliver$_geometry.paintExtent));
          mainAxisUnit = C.Offset_0_m1;
          crossAxisUnit = C.Offset_1_0;
          addExtent = true;
          break;
        case C.AxisDirection_1:
          originOffset = offset;
          mainAxisUnit = C.Offset_1_0;
          crossAxisUnit = C.Offset_0_1;
          addExtent = false;
          break;
        case C.AxisDirection_2:
          originOffset = offset;
          mainAxisUnit = C.Offset_0_1;
          crossAxisUnit = C.Offset_1_0;
          addExtent = false;
          break;
        case C.AxisDirection_3:
          originOffset = offset.$add(0, new P.Offset(_this._sliver$_geometry.paintExtent, 0));
          mainAxisUnit = C.Offset_m1_0;
          crossAxisUnit = C.Offset_0_1;
          addExtent = true;
          break;
        default:
          addExtent = _null;
          originOffset = addExtent;
          crossAxisUnit = originOffset;
          mainAxisUnit = crossAxisUnit;
      }
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t2 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"), t3 = type$.SliverMultiBoxAdaptorParentData; child != null;) {
        mainAxisDelta = t3._as(child.parentData).layoutOffset - t1._as(K.RenderObject.prototype.get$constraints.call(_this)).scrollOffset;
        t4 = originOffset._dx;
        t5 = mainAxisUnit._dx;
        t4 = t4 + t5 * mainAxisDelta + crossAxisUnit._dx * 0;
        t6 = originOffset._dy;
        t7 = mainAxisUnit._dy;
        t6 = t6 + t7 * mainAxisDelta + crossAxisUnit._dy * 0;
        childOffset = new P.Offset(t4, t6);
        if (addExtent) {
          t8 = _this.paintExtentOf$1(child);
          childOffset = new P.Offset(t4 + t5 * t8, t6 + t7 * t8);
        }
        if (mainAxisDelta < t1._as(K.RenderObject.prototype.get$constraints.call(_this)).remainingPaintExtent && mainAxisDelta + _this.paintExtentOf$1(child) > 0)
          context.paintChild$2(child, childOffset);
        child = t2._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    debugDescribeChildren$0: function() {
      var t1, childParentData, t2, indices, _i, index, t3, t4,
        _s17_ = "child with index ",
        children = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode),
        child = this.ContainerRenderObjectMixin__firstChild;
      if (child != null)
        for (t1 = type$.SliverMultiBoxAdaptorParentData; true;) {
          childParentData = t1._as(child.parentData);
          children.push(new Y.DiagnosticableTreeNode(child, _s17_ + H.S(childParentData.index), true, true, null, null));
          t2 = this.ContainerRenderObjectMixin__lastChild;
          if (child == null ? t2 == null : child === t2)
            break;
          child = childParentData.ContainerParentDataMixin_nextSibling;
        }
      t1 = this._keepAliveBucket;
      if (t1.get$isNotEmpty(t1)) {
        t2 = t1.get$keys(t1);
        indices = P.List_List$from(t2, true, H._instanceType(t2)._eval$1("Iterable.E"));
        C.JSArray_methods.sort$0(indices);
        for (t2 = indices.length, _i = 0; _i < indices.length; indices.length === t2 || (0, H.throwConcurrentModificationError)(indices), ++_i) {
          index = indices[_i];
          t3 = t1.$index(0, index);
          t4 = _s17_ + H.S(index) + " (kept alive but not laid out)";
          t3.toString;
          children.push(new Y.DiagnosticableTreeNode(t3, t4, true, true, null, C.DiagnosticsTreeStyle_2));
        }
      }
      return children;
    }
  };
  F.RenderSliverMultiBoxAdaptor__createOrObtainChild_closure.prototype = {
    call$1: function(constraints) {
      var child, childParentData,
        t1 = this.$this,
        t2 = t1._keepAliveBucket,
        t3 = this.index,
        t4 = this.after;
      if (t2.containsKey$1(0, t3)) {
        child = t2.remove$1(0, t3);
        childParentData = type$.SliverMultiBoxAdaptorParentData._as(child.parentData);
        t1.dropChild$1(child);
        child.parentData = childParentData;
        t1.super$ContainerRenderObjectMixin$insert(0, child, t4);
        childParentData._keptAlive = false;
      } else
        t1._childManager.createChild$2$after(t3, t4);
    }
  };
  F.RenderSliverMultiBoxAdaptor_collectGarbage_closure.prototype = {
    call$1: function(constraints) {
      var t1, t2, t3;
      for (t1 = this._box_0, t2 = this.$this; t1.leadingGarbage > 0;) {
        t2._destroyOrCacheChild$1(t2.ContainerRenderObjectMixin__firstChild);
        --t1.leadingGarbage;
      }
      for (; t1.trailingGarbage > 0;) {
        t2._destroyOrCacheChild$1(t2.ContainerRenderObjectMixin__lastChild);
        --t1.trailingGarbage;
      }
      t1 = t2._keepAliveBucket;
      t1 = t1.get$values(t1);
      t3 = H._instanceType(t1)._eval$1("WhereIterable<Iterable.E>");
      C.JSArray_methods.forEach$1(P.List_List$from(new H.WhereIterable(t1, new F.RenderSliverMultiBoxAdaptor_collectGarbage__closure(), t3), true, t3._eval$1("Iterable.E")), t2._childManager.get$removeChild());
    }
  };
  F.RenderSliverMultiBoxAdaptor_collectGarbage__closure.prototype = {
    call$1: function(child) {
      return !type$.SliverMultiBoxAdaptorParentData._as(child.parentData).KeepAliveParentDataMixin_keepAlive;
    }
  };
  F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin.prototype = {
    attach$1: function(owner) {
      var child, t1;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.SliverMultiBoxAdaptorParentData; child != null;) {
        child.attach$1(owner);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0: function(_) {
      var child, t1;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.SliverMultiBoxAdaptorParentData; child != null;) {
        child.detach$0(0);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers.prototype = {};
  F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers_RenderSliverWithKeepAliveMixin.prototype = {};
  F._SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin.prototype = {
    detach$0: function(_) {
      this.super$ParentData$detach(0);
    }
  };
  F._SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin_KeepAliveParentDataMixin.prototype = {};
  T.RenderSliverEdgeInsetsPadding.prototype = {
    get$beforePadding: function() {
      var _this = this,
        t1 = type$.SliverConstraints;
      switch (G.applyGrowthDirectionToAxisDirection(t1._as(K.RenderObject.prototype.get$constraints.call(_this)).axisDirection, t1._as(K.RenderObject.prototype.get$constraints.call(_this)).growthDirection)) {
        case C.AxisDirection_0:
          return _this.get$resolvedPadding().bottom;
        case C.AxisDirection_1:
          return _this.get$resolvedPadding().left;
        case C.AxisDirection_2:
          return _this.get$resolvedPadding().top;
        case C.AxisDirection_3:
          return _this.get$resolvedPadding().right;
      }
      return null;
    },
    get$afterPadding: function() {
      var _this = this,
        t1 = type$.SliverConstraints;
      switch (G.applyGrowthDirectionToAxisDirection(t1._as(K.RenderObject.prototype.get$constraints.call(_this)).axisDirection, t1._as(K.RenderObject.prototype.get$constraints.call(_this)).growthDirection)) {
        case C.AxisDirection_0:
          return _this.get$resolvedPadding().top;
        case C.AxisDirection_1:
          return _this.get$resolvedPadding().right;
        case C.AxisDirection_2:
          return _this.get$resolvedPadding().bottom;
        case C.AxisDirection_3:
          return _this.get$resolvedPadding().left;
      }
      return null;
    },
    get$crossAxisPadding: function() {
      switch (G.axisDirectionToAxis(type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(this)).axisDirection)) {
        case C.Axis_0:
          var t1 = this.get$resolvedPadding();
          return t1.get$_top(t1) + t1.get$_bottom(t1);
        case C.Axis_1:
          return this.get$resolvedPadding().get$horizontal();
      }
      return null;
    },
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof G.SliverPhysicalParentData))
        child.parentData = new G.SliverPhysicalParentData(C.Offset_0_0);
    },
    performLayout$0: function() {
      var mainAxisPadding, crossAxisPadding, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, childLayoutGeometry, beforePaddingPaintExtent, afterPaddingPaintExtent, mainAxisPaddingPaintExtent, beforePaddingCacheExtent, afterPaddingCacheExtent, paintExtent, childParentData, _this = this, _null = null,
        t1 = type$.SliverConstraints,
        constraints = t1._as(K.RenderObject.prototype.get$constraints.call(_this)),
        beforePadding = _this.get$beforePadding();
      _this.get$afterPadding();
      mainAxisPadding = _this.get$resolvedPadding().along$1(G.axisDirectionToAxis(t1._as(K.RenderObject.prototype.get$constraints.call(_this)).axisDirection));
      crossAxisPadding = _this.get$crossAxisPadding();
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 == null) {
        t1 = constraints.remainingPaintExtent;
        _this._sliver$_geometry = G.SliverGeometry$(_null, false, _null, _null, mainAxisPadding, Math.min(H.checkNum(mainAxisPadding), t1), mainAxisPadding, _null);
        return;
      }
      t2 = Math.max(0, constraints.scrollOffset - beforePadding);
      t3 = Math.min(0, constraints.cacheOrigin + beforePadding);
      t4 = constraints.remainingPaintExtent;
      t5 = _this.calculatePaintOffset$3$from$to(constraints, 0, beforePadding);
      t6 = constraints.remainingCacheExtent;
      t7 = _this.calculateCacheOffset$3$from$to(constraints, 0, beforePadding);
      t8 = Math.max(0, constraints.crossAxisExtent - crossAxisPadding);
      t9 = constraints.precedingScrollExtent;
      t10 = constraints.axisDirection;
      t11 = constraints.growthDirection;
      t12 = constraints.userScrollDirection;
      t13 = constraints.crossAxisDirection;
      t14 = constraints.viewportMainAxisExtent;
      t1.layout$2$parentUsesSize(G.SliverConstraints$(t10, t3, t13, t8, t11, 0, beforePadding + t9, t6 - t7, t4 - t5, t2, t12, t14), true);
      childLayoutGeometry = _this.RenderObjectWithChildMixin__child._sliver$_geometry;
      t1 = childLayoutGeometry.scrollOffsetCorrection;
      if (t1 != null) {
        _this._sliver$_geometry = G.SliverGeometry$(_null, false, _null, _null, 0, 0, 0, t1);
        return;
      }
      beforePaddingPaintExtent = _this.calculatePaintOffset$3$from$to(constraints, 0, beforePadding);
      t1 = childLayoutGeometry.scrollExtent;
      t2 = beforePadding + t1;
      t3 = mainAxisPadding + t1;
      afterPaddingPaintExtent = _this.calculatePaintOffset$3$from$to(constraints, t2, t3);
      mainAxisPaddingPaintExtent = beforePaddingPaintExtent + afterPaddingPaintExtent;
      beforePaddingCacheExtent = _this.calculateCacheOffset$3$from$to(constraints, 0, beforePadding);
      afterPaddingCacheExtent = _this.calculateCacheOffset$3$from$to(constraints, t2, t3);
      t2 = childLayoutGeometry.paintExtent;
      t5 = childLayoutGeometry.layoutExtent;
      paintExtent = Math.min(beforePaddingPaintExtent + Math.max(t2, t5 + afterPaddingPaintExtent), t4);
      t5 = Math.min(mainAxisPaddingPaintExtent + t5, paintExtent);
      t6 = Math.min(afterPaddingCacheExtent + beforePaddingCacheExtent + childLayoutGeometry.cacheExtent, t6);
      t4 = childLayoutGeometry.maxPaintExtent;
      t2 = Math.max(mainAxisPaddingPaintExtent + t2, beforePaddingPaintExtent + childLayoutGeometry.hitTestExtent);
      _this._sliver$_geometry = G.SliverGeometry$(t6, childLayoutGeometry.hasVisualOverflow, t2, t5, mainAxisPadding + t4, paintExtent, t3, _null);
      childParentData = type$.SliverPhysicalParentData._as(_this.RenderObjectWithChildMixin__child.parentData);
      switch (G.applyGrowthDirectionToAxisDirection(t10, t11)) {
        case C.AxisDirection_0:
          childParentData.paintOffset = new P.Offset(_this.get$resolvedPadding().left, _this.calculatePaintOffset$3$from$to(constraints, _this.get$resolvedPadding().bottom + t1, _this.get$resolvedPadding().bottom + t1 + _this.get$resolvedPadding().top));
          break;
        case C.AxisDirection_1:
          childParentData.paintOffset = new P.Offset(_this.calculatePaintOffset$3$from$to(constraints, 0, _this.get$resolvedPadding().left), _this.get$resolvedPadding().top);
          break;
        case C.AxisDirection_2:
          childParentData.paintOffset = new P.Offset(_this.get$resolvedPadding().left, _this.calculatePaintOffset$3$from$to(constraints, 0, _this.get$resolvedPadding().top));
          break;
        case C.AxisDirection_3:
          childParentData.paintOffset = new P.Offset(_this.calculatePaintOffset$3$from$to(constraints, _this.get$resolvedPadding().right + t1, _this.get$resolvedPadding().right + t1 + _this.get$resolvedPadding().left), _this.get$resolvedPadding().top);
          break;
      }
    },
    hitTestChildren$3$crossAxisPosition$mainAxisPosition: function(result, crossAxisPosition, mainAxisPosition) {
      var childParentData, t2, t3, t4, t5, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null && t1._sliver$_geometry.hitTestExtent > 0) {
        childParentData = type$.SliverPhysicalParentData._as(t1.parentData);
        t1 = _this.calculatePaintOffset$3$from$to(type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)), 0, _this.get$beforePadding());
        t2 = _this.childCrossAxisPosition$1(_this.RenderObjectWithChildMixin__child);
        t3 = childParentData.paintOffset;
        t4 = _this.RenderObjectWithChildMixin__child.get$hitTest();
        t5 = t3 != null;
        if (t5)
          result.pushTransform$1(E.Matrix4_Matrix4$translationValues(-t3._dx, -t3._dy, 0));
        t4.call$3$crossAxisPosition$mainAxisPosition(result, crossAxisPosition - t2, mainAxisPosition - t1);
        if (t5)
          result._transforms.removeLast$0(0);
      }
      return false;
    },
    childCrossAxisPosition$1: function(child) {
      var _this = this,
        t1 = type$.SliverConstraints;
      switch (G.applyGrowthDirectionToAxisDirection(t1._as(K.RenderObject.prototype.get$constraints.call(_this)).axisDirection, t1._as(K.RenderObject.prototype.get$constraints.call(_this)).growthDirection)) {
        case C.AxisDirection_0:
        case C.AxisDirection_2:
          return _this.get$resolvedPadding().left;
        case C.AxisDirection_3:
        case C.AxisDirection_1:
          return _this.get$resolvedPadding().top;
      }
      return null;
    },
    childScrollOffset$1: function(child) {
      return this.get$beforePadding();
    },
    applyPaintTransform$2: function(child, transform) {
      var t1 = type$.SliverPhysicalParentData._as(child.parentData).paintOffset;
      transform.translate$2(0, t1._dx, t1._dy);
    },
    paint$2: function(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null && t1._sliver$_geometry.visible)
        context.paintChild$2(t1, offset.$add(0, type$.SliverPhysicalParentData._as(t1.parentData).paintOffset));
    }
  };
  T.RenderSliverPadding.prototype = {
    get$resolvedPadding: function() {
      return this._sliver_padding$_resolvedPadding;
    },
    _sliver_padding$_resolve$0: function() {
      if (this._sliver_padding$_resolvedPadding != null)
        return;
      this._sliver_padding$_resolvedPadding = this._sliver_padding$_padding;
    },
    set$padding: function(_, value) {
      var _this = this;
      if (_this._sliver_padding$_padding.$eq(0, value))
        return;
      _this._sliver_padding$_padding = value;
      _this._sliver_padding$_resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    set$textDirection: function(value) {
      var _this = this;
      if (_this._sliver_padding$_textDirection == value)
        return;
      _this._sliver_padding$_textDirection = value;
      _this._sliver_padding$_resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    performLayout$0: function() {
      this._sliver_padding$_resolve$0();
      this.super$RenderSliverEdgeInsetsPadding$performLayout();
    }
  };
  T._RenderSliverEdgeInsetsPadding_RenderSliver_RenderObjectWithChildMixin.prototype = {
    attach$1: function(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0: function(_) {
      var t1;
      this.super$AbstractNode$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  K.RelativeRect.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof K.RelativeRect && other.left == _this.left && other.top == _this.top && other.right === _this.right && other.bottom === _this.bottom;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.left, _this.top, _this.right, _this.bottom, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t2, _this = this,
        t1 = _this.left;
      t1 = "RelativeRect.fromLTRB(" + H.S(t1 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t1, 1)) + ", ";
      t2 = _this.top;
      t1 = t1 + H.S(t2 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t2, 1)) + ", ";
      t2 = C.JSNumber_methods.toStringAsFixed$1(_this.right, 1);
      t1 = t1 + t2 + ", ";
      t2 = C.JSNumber_methods.toStringAsFixed$1(_this.bottom, 1);
      return t1 + t2 + ")";
    }
  };
  K.StackParentData.prototype = {
    get$isPositioned: function() {
      var _this = this;
      return _this.top != null || _this.right != null || _this.bottom != null || _this.left != null || _this.width != null || false;
    },
    toString$0: function(_) {
      var _this = this,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_String),
        t2 = _this.top;
      if (t2 != null)
        t1.push("top=" + E.debugFormatDouble(t2));
      t2 = _this.right;
      if (t2 != null)
        t1.push("right=" + E.debugFormatDouble(t2));
      t2 = _this.bottom;
      if (t2 != null)
        t1.push("bottom=" + E.debugFormatDouble(t2));
      t2 = _this.left;
      if (t2 != null)
        t1.push("left=" + E.debugFormatDouble(t2));
      t2 = _this.width;
      if (t2 != null)
        t1.push("width=" + E.debugFormatDouble(t2));
      if (t1.length === 0)
        t1.push("not positioned");
      t1.push(_this.super$BoxParentData$toString(0));
      return C.JSArray_methods.join$1(t1, "; ");
    }
  };
  K.StackFit.prototype = {
    toString$0: function(_) {
      return this._stack$_name;
    }
  };
  K.Overflow.prototype = {
    toString$0: function(_) {
      return "Overflow.clip";
    }
  };
  K.RenderStack.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof K.StackParentData))
        child.parentData = new K.StackParentData(null, null, C.Offset_0_0);
    },
    _stack$_resolve$0: function() {
      var _this = this;
      if (_this._resolvedAlignment != null)
        return;
      _this._resolvedAlignment = _this._alignment.resolve$1(_this._stack$_textDirection);
    },
    set$alignment: function(value) {
      var _this = this;
      if (_this._alignment.$eq(0, value))
        return;
      _this._alignment = value;
      _this._resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    set$textDirection: function(value) {
      var _this = this;
      if (_this._stack$_textDirection == value)
        return;
      _this._stack$_textDirection = value;
      _this._resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      return this.defaultComputeDistanceToHighestActualBaseline$1(baseline);
    },
    performLayout$0: function() {
      var width, height, nonPositionedConstraints, child, t1, height0, width0, hasNonPositionedChildren, childParentData, childSize, t2, _this = this,
        constraints = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this));
      _this._stack$_resolve$0();
      _this._stack$_hasVisualOverflow = false;
      if (_this.ContainerRenderObjectMixin__childCount === 0) {
        _this._size = new P.Size(C.JSInt_methods.clamp$2(1 / 0, constraints.minWidth, constraints.maxWidth), C.JSInt_methods.clamp$2(1 / 0, constraints.minHeight, constraints.maxHeight));
        return;
      }
      width = constraints.minWidth;
      height = constraints.minHeight;
      switch (_this._fit) {
        case C.StackFit_0:
          nonPositionedConstraints = constraints.loosen$0();
          break;
        case C.StackFit_1:
          nonPositionedConstraints = S.BoxConstraints$tight(new P.Size(C.JSInt_methods.clamp$2(1 / 0, width, constraints.maxWidth), C.JSInt_methods.clamp$2(1 / 0, height, constraints.maxHeight)));
          break;
        case C.StackFit_2:
          nonPositionedConstraints = constraints;
          break;
        default:
          nonPositionedConstraints = null;
      }
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData, height0 = height, width0 = width, hasNonPositionedChildren = false; child != null;) {
        childParentData = t1._as(child.parentData);
        if (!childParentData.get$isPositioned()) {
          child.layout$2$parentUsesSize(nonPositionedConstraints, true);
          childSize = child._size;
          t2 = childSize._dx;
          width0 = Math.max(H.checkNum(width0), H.checkNum(t2));
          t2 = childSize._dy;
          height0 = Math.max(H.checkNum(height0), H.checkNum(t2));
          hasNonPositionedChildren = true;
        }
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      if (hasNonPositionedChildren)
        _this._size = new P.Size(width0, height0);
      else
        _this._size = new P.Size(C.JSInt_methods.clamp$2(1 / 0, width, constraints.maxWidth), C.JSInt_methods.clamp$2(1 / 0, height, constraints.maxHeight));
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t2 = type$.Offset; child != null;) {
        childParentData = t1._as(child.parentData);
        if (!childParentData.get$isPositioned())
          childParentData.offset = _this._resolvedAlignment.alongOffset$1(t2._as(_this._size.$sub(0, child._size)));
        else
          _this._stack$_hasVisualOverflow = K.RenderStack_layoutPositionedChild(child, childParentData, _this._size, _this._resolvedAlignment) || _this._stack$_hasVisualOverflow;
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
    },
    hitTestChildren$2$position: function(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paintStack$2: function(context, offset) {
      this.defaultPaint$2(context, offset);
    },
    paint$2: function(context, offset) {
      var t1, t2, _this = this;
      if (_this._overflow === C.Overflow_1 && _this._stack$_hasVisualOverflow) {
        t1 = _this._needsCompositing;
        t2 = _this._size;
        context.pushClipRect$4(t1, offset, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$paintStack());
      } else
        _this.defaultPaint$2(context, offset);
    },
    describeApproximatePaintClip$1: function(child) {
      var t1;
      if (this._stack$_hasVisualOverflow) {
        t1 = this._size;
        t1 = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      } else
        t1 = null;
      return t1;
    }
  };
  K._RenderStack_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1: function(owner) {
      var child, t1;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.attach$1(owner);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0: function(_) {
      var child, t1;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.detach$0(0);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  K._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A.ViewConfiguration.prototype = {
    toString$0: function(_) {
      return this.size.toString$0(0) + " at " + E.debugFormatDouble(this.devicePixelRatio) + "x";
    }
  };
  A.RenderView.prototype = {
    set$configuration: function(value) {
      var t1, _this = this;
      if (_this._view$_configuration === value)
        return;
      _this._view$_configuration = value;
      t1 = _this._updateMatricesAndCreateNewRootLayer$0();
      _this._layer.detach$0(0);
      _this._layer = t1;
      _this.markNeedsPaint$0();
      _this.markNeedsLayout$0();
    },
    _updateMatricesAndCreateNewRootLayer$0: function() {
      var rootLayer,
        t1 = this._view$_configuration.devicePixelRatio;
      t1 = E.Matrix4_Matrix4$diagonal3Values(t1, t1, 1);
      this._rootTransform = t1;
      rootLayer = new T.TransformLayer(t1, C.Offset_0_0);
      rootLayer.attach$1(this);
      return rootLayer;
    },
    performResize$0: function() {
    },
    performLayout$0: function() {
      var t2,
        t1 = this._view$_configuration.size;
      this._view$_size = t1;
      t2 = this.RenderObjectWithChildMixin__child;
      if (t2 != null)
        t2.layout$1(S.BoxConstraints$tight(t1));
    },
    hitTest$2$position: function(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.hitTest$2$position(new S.BoxHitTestResult(result._path, result._transforms), position);
      result.add$1(0, new O.HitTestEntry(this));
      return true;
    },
    hitTestMouseTrackers$1: function(position) {
      var result,
        t1 = this._layer,
        t2 = position.$mul(0, this._view$_configuration.devicePixelRatio);
      t1.toString;
      result = new T.AnnotationResult(H.setRuntimeTypeInfo([], type$.JSArray_AnnotationEntry_MouseTrackerAnnotation), type$.AnnotationResult_MouseTrackerAnnotation);
      t1.findAnnotations$1$3$onlyFirst(result, t2, false, type$.MouseTrackerAnnotation);
      return result.get$annotations();
    },
    get$isRepaintBoundary: function() {
      return true;
    },
    paint$2: function(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    },
    applyPaintTransform$2: function(child, transform) {
      transform.multiply$1(0, this._rootTransform);
      this.super$RenderObject$applyPaintTransform(child, transform);
    },
    compositeFrame$0: function() {
      var builder, scene, bounds, t1, t2, t3, t4, t5, t6, t7, upperOverlayStyle, lowerOverlayStyle, _this = this, _null = null;
      P.Timeline_startSync("Compositing", C.Map_9aZ6I, _null);
      try {
        builder = P.SceneBuilder_SceneBuilder();
        scene = _this._layer.buildScene$1(builder);
        bounds = _this.get$paintBounds();
        t1 = bounds.get$center();
        t2 = _this._window;
        t3 = t2._debugDevicePixelRatio;
        t3 = t3 != null ? t3 : H.EngineWindow_browserDevicePixelRatio();
        t4 = bounds.get$center();
        t5 = bounds.get$center();
        t6 = t2._debugDevicePixelRatio;
        t6 = t6 != null ? t6 : H.EngineWindow_browserDevicePixelRatio();
        t7 = type$.SystemUiOverlayStyle;
        upperOverlayStyle = _this._layer.find$1$1(0, new P.Offset(t1._dx, 0 / t3), t7);
        switch (U.defaultTargetPlatform()) {
          case C.TargetPlatform_0:
            lowerOverlayStyle = _this._layer.find$1$1(0, new P.Offset(t4._dx, t5._dy - 0 / t6), t7);
            break;
          case C.TargetPlatform_1:
          case C.TargetPlatform_2:
          case C.TargetPlatform_3:
          case C.TargetPlatform_4:
          case C.TargetPlatform_5:
            lowerOverlayStyle = _null;
            break;
          default:
            lowerOverlayStyle = _null;
        }
        t1 = upperOverlayStyle == null;
        if (!t1 || lowerOverlayStyle != null) {
          t3 = t1 ? _null : upperOverlayStyle.statusBarBrightness;
          t4 = t1 ? _null : upperOverlayStyle.statusBarIconBrightness;
          t1 = t1 ? _null : upperOverlayStyle.statusBarColor;
          t5 = lowerOverlayStyle == null;
          t6 = t5 ? _null : lowerOverlayStyle.systemNavigationBarColor;
          t7 = t5 ? _null : lowerOverlayStyle.systemNavigationBarDividerColor;
          X.SystemChrome_setSystemUIOverlayStyle(new X.SystemUiOverlayStyle(t6, t7, t5 ? _null : lowerOverlayStyle.systemNavigationBarIconBrightness, t1, t3, t4));
        }
        t2.render$1(scene);
        scene.dispose$0();
      } finally {
        P.Timeline_finishSync();
      }
    },
    get$paintBounds: function() {
      var t1 = this._view$_size.$mul(0, this._view$_configuration.devicePixelRatio);
      return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    get$semanticBounds: function() {
      var t1 = this._rootTransform,
        t2 = this._view$_size;
      return T.MatrixUtils_transformRect(t1, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
    }
  };
  A._RenderView_RenderObject_RenderObjectWithChildMixin.prototype = {
    attach$1: function(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0: function(_) {
      var t1;
      this.super$AbstractNode$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  Q.CacheExtentStyle.prototype = {
    toString$0: function(_) {
      return this._viewport$_name;
    }
  };
  Q.RevealedOffset.prototype = {
    toString$0: function(_) {
      return "RevealedOffset(offset: " + H.S(this.offset) + ", rect: " + H.S(this.rect) + ")";
    }
  };
  Q.RenderViewportBase.prototype = {
    describeSemanticsConfiguration$1: function(config) {
      var t1;
      this.super$RenderObject$describeSemanticsConfiguration(config);
      t1 = config._tagsForChildren;
      (t1 == null ? config._tagsForChildren = P.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsTag) : t1).add$1(0, C.SemanticsTag_FIw);
    },
    visitChildrenForSemantics$1: function(visitor) {
      var t1 = this.get$childrenInPaintOrder();
      t1.toString;
      new H.WhereIterable(t1, new Q.RenderViewportBase_visitChildrenForSemantics_closure(), t1.$ti._eval$1("WhereIterable<Iterable.E>")).forEach$1(0, visitor);
    },
    set$axisDirection: function(value) {
      if (value == this._axisDirection)
        return;
      this._axisDirection = value;
      this.markNeedsLayout$0();
    },
    set$crossAxisDirection: function(value) {
      if (value == this._crossAxisDirection)
        return;
      this._crossAxisDirection = value;
      this.markNeedsLayout$0();
    },
    set$offset: function(_, value) {
      var _this = this,
        t1 = _this._viewport$_offset;
      if (value == t1)
        return;
      if (_this._node$_owner != null)
        t1.ChangeNotifier__listeners.remove$1(0, _this.get$markNeedsLayout());
      _this._viewport$_offset = value;
      if (_this._node$_owner != null) {
        t1 = value.ChangeNotifier__listeners;
        t1._isDirty = true;
        t1._list.push(_this.get$markNeedsLayout());
      }
      _this.markNeedsLayout$0();
    },
    set$cacheExtent: function(value) {
      if (value == null)
        value = 250;
      if (value === this._cacheExtent)
        return;
      this._cacheExtent = value;
      this.markNeedsLayout$0();
    },
    set$cacheExtentStyle: function(value) {
      if (value === this._cacheExtentStyle)
        return;
      this._cacheExtentStyle = value;
      this.markNeedsLayout$0();
    },
    attach$1: function(owner) {
      var t1;
      this.super$_RenderViewportBase_RenderBox_ContainerRenderObjectMixin$attach(owner);
      t1 = this._viewport$_offset.ChangeNotifier__listeners;
      t1._isDirty = true;
      t1._list.push(this.get$markNeedsLayout());
    },
    detach$0: function(_) {
      this._viewport$_offset.ChangeNotifier__listeners.remove$1(0, this.get$markNeedsLayout());
      this.super$_RenderViewportBase_RenderBox_ContainerRenderObjectMixin$detach(0);
    },
    get$isRepaintBoundary: function() {
      return true;
    },
    layoutChildSequence$11$advance$cacheOrigin$child$crossAxisExtent$growthDirection$layoutOffset$mainAxisExtent$overlap$remainingCacheExtent$remainingPaintExtent$scrollOffset: function(advance, cacheOrigin, child, crossAxisExtent, growthDirection, layoutOffset, mainAxisExtent, overlap, remainingCacheExtent, remainingPaintExtent, scrollOffset) {
      var layoutOffset0, precedingScrollExtent, sliverScrollOffset, correctedCacheOrigin, cacheExtentCorrection, childLayoutGeometry, t1, effectiveLayoutOffset, _this = this,
        adjustedUserScrollDirection = G.applyGrowthDirectionToScrollDirection(_this._viewport$_offset._userScrollDirection, growthDirection),
        maxPaintOffset = layoutOffset + overlap;
      for (layoutOffset0 = layoutOffset, precedingScrollExtent = 0; child != null;) {
        sliverScrollOffset = scrollOffset <= 0 ? 0 : scrollOffset;
        correctedCacheOrigin = Math.max(cacheOrigin, -sliverScrollOffset);
        cacheExtentCorrection = cacheOrigin - correctedCacheOrigin;
        child.layout$2$parentUsesSize(new G.SliverConstraints(_this._axisDirection, growthDirection, adjustedUserScrollDirection, sliverScrollOffset, precedingScrollExtent, maxPaintOffset - layoutOffset0, Math.max(0, remainingPaintExtent - layoutOffset0 + layoutOffset), crossAxisExtent, _this._crossAxisDirection, mainAxisExtent, correctedCacheOrigin, Math.max(0, remainingCacheExtent + cacheExtentCorrection)), true);
        childLayoutGeometry = child._sliver$_geometry;
        t1 = childLayoutGeometry.scrollOffsetCorrection;
        if (t1 != null)
          return t1;
        effectiveLayoutOffset = layoutOffset0 + 0;
        if (childLayoutGeometry.visible || scrollOffset > 0)
          _this.updateChildLayoutOffset$3(child, effectiveLayoutOffset, growthDirection);
        else
          _this.updateChildLayoutOffset$3(child, -scrollOffset + layoutOffset, growthDirection);
        maxPaintOffset = Math.max(effectiveLayoutOffset + childLayoutGeometry.paintExtent, maxPaintOffset);
        t1 = childLayoutGeometry.scrollExtent;
        scrollOffset -= t1;
        precedingScrollExtent += t1;
        layoutOffset0 += childLayoutGeometry.layoutExtent;
        t1 = childLayoutGeometry.cacheExtent;
        if (t1 !== 0) {
          remainingCacheExtent -= t1 - cacheExtentCorrection;
          cacheOrigin = Math.min(correctedCacheOrigin + t1, 0);
        }
        _this.updateOutOfBandData$2(growthDirection, childLayoutGeometry);
        child = advance.call$1(child);
      }
      return 0;
    },
    describeApproximatePaintClip$1: function(child) {
      var t2, overlapCorrection, $top, left,
        t1 = this._size,
        right = 0 + t1._dx,
        bottom = 0 + t1._dy;
      child.toString;
      t1 = type$.SliverConstraints;
      if (t1._as(K.RenderObject.prototype.get$constraints.call(child)).overlap !== 0) {
        t2 = t1._as(K.RenderObject.prototype.get$constraints.call(child)).viewportMainAxisExtent;
        t2.toString;
        t2 = !isFinite(t2);
      } else
        t2 = true;
      if (t2)
        return new P.Rect(0, 0, right, bottom);
      overlapCorrection = t1._as(K.RenderObject.prototype.get$constraints.call(child)).viewportMainAxisExtent - t1._as(K.RenderObject.prototype.get$constraints.call(child)).remainingPaintExtent + t1._as(K.RenderObject.prototype.get$constraints.call(child)).overlap;
      switch (G.applyGrowthDirectionToAxisDirection(this._axisDirection, t1._as(K.RenderObject.prototype.get$constraints.call(child)).growthDirection)) {
        case C.AxisDirection_2:
          $top = 0 + overlapCorrection;
          left = 0;
          break;
        case C.AxisDirection_0:
          bottom -= overlapCorrection;
          left = 0;
          $top = 0;
          break;
        case C.AxisDirection_1:
          left = 0 + overlapCorrection;
          $top = 0;
          break;
        case C.AxisDirection_3:
          right -= overlapCorrection;
          left = 0;
          $top = 0;
          break;
        default:
          left = 0;
          $top = 0;
      }
      return new P.Rect(left, $top, right, bottom);
    },
    describeSemanticsClip$1: function(child) {
      var t2, _this = this,
        t1 = _this._calculatedCacheExtent;
      if (t1 == null) {
        t1 = _this._size;
        return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      switch (G.axisDirectionToAxis(_this._axisDirection)) {
        case C.Axis_1:
          t2 = _this._size;
          return new P.Rect(0, 0 - t1, 0 + t2._dx, 0 + t2._dy + t1);
        case C.Axis_0:
          t2 = _this._size;
          return new P.Rect(0 - t1, 0, 0 + t2._dx + t1, 0 + t2._dy);
      }
      return null;
    },
    paint$2: function(context, offset) {
      var t1, t2, _this = this;
      if (_this.ContainerRenderObjectMixin__firstChild == null)
        return;
      if (_this.get$hasVisualOverflow()) {
        t1 = _this._needsCompositing;
        t2 = _this._size;
        context.pushClipRect$4(t1, offset, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$_paintContents());
      } else
        _this._paintContents$2(context, offset);
    },
    _paintContents$2: function(context, offset) {
      var t1, t2, t3, t4, t5;
      for (t1 = new P._SyncStarIterator(this.get$childrenInPaintOrder()._outerHelper()), t2 = offset._dx, t3 = offset._dy; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        if (t4._sliver$_geometry.visible) {
          t5 = this.paintOffsetOf$1(t4);
          context.paintChild$2(t4, new P.Offset(t2 + t5._dx, t3 + t5._dy));
        }
      }
    },
    hitTestChildren$2$position: function(result, position) {
      var sliverResult, t1, t2, transform, _this = this, _box_0 = {};
      _box_0.crossAxisPosition = _box_0.mainAxisPosition = null;
      switch (G.axisDirectionToAxis(_this._axisDirection)) {
        case C.Axis_1:
          _box_0.mainAxisPosition = position._dy;
          _box_0.crossAxisPosition = position._dx;
          break;
        case C.Axis_0:
          _box_0.mainAxisPosition = position._dx;
          _box_0.crossAxisPosition = position._dy;
          break;
      }
      sliverResult = new G.SliverHitTestResult(result._path, result._transforms);
      for (t1 = new P._SyncStarIterator(_this.get$childrenInHitTestOrder()._outerHelper()); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        if (!t2._sliver$_geometry.visible)
          continue;
        transform = new E.Matrix4(new Float64Array(16));
        transform.setIdentity$0();
        _this.applyPaintTransform$2(t2, transform);
        if (result.addWithPaintTransform$3$hitTest$position$transform(new Q.RenderViewportBase_hitTestChildren_closure(_box_0, _this, t2, sliverResult), null, transform))
          return true;
      }
      return false;
    },
    getOffsetToReveal$3$rect: function(target, alignment, rect) {
      var onlySlivers, t1, pivot, child, leadingScrollOffset, t2, pivotParent, bounds, growthDirection, offset, targetMainAxisExtent, extentOfPinnedSlivers, mainAxisExtent, targetOffset, offsetDifference, transform, targetRect, _this = this, _null = null;
      if (rect == null)
        rect = target.get$paintBounds();
      onlySlivers = target instanceof G.RenderSliver;
      for (t1 = type$.RenderObject, pivot = _null, child = target, leadingScrollOffset = 0; t2 = child._node$_parent, t2 !== _this; child = t2) {
        t1._as(t2);
        if (child instanceof S.RenderBox)
          pivot = child;
        if (t2 instanceof G.RenderSliver)
          leadingScrollOffset += t2.childScrollOffset$1(child);
        else {
          leadingScrollOffset = 0;
          onlySlivers = false;
        }
      }
      if (pivot != null) {
        pivotParent = type$.RenderSliver._as(pivot._node$_parent);
        bounds = T.MatrixUtils_transformRect(target.getTransformTo$1(0, pivot), rect);
        pivotParent.toString;
        growthDirection = type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(pivotParent)).growthDirection;
        switch (G.applyGrowthDirectionToAxisDirection(_this._axisDirection, growthDirection)) {
          case C.AxisDirection_0:
            switch (growthDirection) {
              case C.GrowthDirection_0:
                offset = bounds.bottom;
                break;
              case C.GrowthDirection_1:
                offset = bounds.top;
                break;
              default:
                offset = _null;
            }
            leadingScrollOffset += pivot._size._dy - offset;
            targetMainAxisExtent = bounds.bottom - bounds.top;
            break;
          case C.AxisDirection_1:
            switch (growthDirection) {
              case C.GrowthDirection_0:
                offset = bounds.left;
                break;
              case C.GrowthDirection_1:
                offset = bounds.right;
                break;
              default:
                offset = _null;
            }
            leadingScrollOffset += offset;
            targetMainAxisExtent = bounds.right - bounds.left;
            break;
          case C.AxisDirection_2:
            switch (growthDirection) {
              case C.GrowthDirection_0:
                offset = bounds.top;
                break;
              case C.GrowthDirection_1:
                offset = bounds.bottom;
                break;
              default:
                offset = _null;
            }
            leadingScrollOffset += offset;
            targetMainAxisExtent = bounds.bottom - bounds.top;
            break;
          case C.AxisDirection_3:
            switch (growthDirection) {
              case C.GrowthDirection_0:
                offset = bounds.right;
                break;
              case C.GrowthDirection_1:
                offset = bounds.left;
                break;
              default:
                offset = _null;
            }
            leadingScrollOffset += pivot._size._dx - offset;
            targetMainAxisExtent = bounds.right - bounds.left;
            break;
          default:
            targetMainAxisExtent = _null;
        }
      } else if (onlySlivers)
        targetMainAxisExtent = type$.RenderSliver._as(target)._sliver$_geometry.scrollExtent;
      else
        return new Q.RevealedOffset(_this._viewport$_offset._pixels, rect);
      type$.RenderSliver._as(child);
      extentOfPinnedSlivers = _this.maxScrollObstructionExtentBefore$1(child);
      leadingScrollOffset = _this.scrollOffsetOf$2(child, leadingScrollOffset);
      switch (type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(child)).growthDirection) {
        case C.GrowthDirection_0:
          leadingScrollOffset -= extentOfPinnedSlivers;
          break;
        case C.GrowthDirection_1:
          break;
      }
      switch (G.axisDirectionToAxis(_this._axisDirection)) {
        case C.Axis_0:
          mainAxisExtent = _this._size._dx - extentOfPinnedSlivers;
          break;
        case C.Axis_1:
          mainAxisExtent = _this._size._dy - extentOfPinnedSlivers;
          break;
        default:
          mainAxisExtent = _null;
      }
      targetOffset = leadingScrollOffset - (mainAxisExtent - targetMainAxisExtent) * alignment;
      offsetDifference = _this._viewport$_offset._pixels - targetOffset;
      transform = target.getTransformTo$1(0, _this);
      _this.applyPaintTransform$2(child, transform);
      targetRect = T.MatrixUtils_transformRect(transform, rect);
      switch (_this._axisDirection) {
        case C.AxisDirection_2:
          targetRect = targetRect.translate$2(0, 0, offsetDifference);
          break;
        case C.AxisDirection_1:
          targetRect = targetRect.translate$2(0, offsetDifference, 0);
          break;
        case C.AxisDirection_0:
          targetRect = targetRect.translate$2(0, 0, -offsetDifference);
          break;
        case C.AxisDirection_3:
          targetRect = targetRect.translate$2(0, -offsetDifference, 0);
          break;
      }
      return new Q.RevealedOffset(targetOffset, targetRect);
    },
    getOffsetToReveal$2: function(target, alignment) {
      return this.getOffsetToReveal$3$rect(target, alignment, null);
    },
    computeAbsolutePaintOffset$3: function(child, layoutOffset, growthDirection) {
      switch (G.applyGrowthDirectionToAxisDirection(this._axisDirection, growthDirection)) {
        case C.AxisDirection_0:
          return new P.Offset(0, this._size._dy - (layoutOffset + child._sliver$_geometry.paintExtent));
        case C.AxisDirection_1:
          return new P.Offset(layoutOffset, 0);
        case C.AxisDirection_2:
          return new P.Offset(0, layoutOffset);
        case C.AxisDirection_3:
          return new P.Offset(this._size._dx - (layoutOffset + child._sliver$_geometry.paintExtent), 0);
      }
      return null;
    },
    debugDescribeChildren$0: function() {
      var count, t1, t2, _this = this,
        children = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode),
        child = _this.ContainerRenderObjectMixin__firstChild;
      if (child == null)
        return children;
      count = _this.get$indexOfFirstChild();
      for (t1 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"); true;) {
        t2 = _this.labelForChild$1(count);
        child.toString;
        children.push(new Y.DiagnosticableTreeNode(child, t2, true, true, null, null));
        if (child === _this.ContainerRenderObjectMixin__lastChild)
          break;
        ++count;
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
      return children;
    },
    showOnScreen$4$curve$descendant$duration$rect: function(curve, descendant, duration, rect) {
      var _this = this;
      if (!_this._viewport$_offset.physics.get$allowImplicitScrolling())
        return _this.super$RenderObject$showOnScreen(curve, descendant, duration, rect);
      _this.super$RenderObject$showOnScreen(curve, null, duration, Q.RenderViewportBase_showInViewport(curve, descendant, duration, _this._viewport$_offset, rect, _this));
    },
    showOnScreen$0: function() {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_JUR, null, C.Duration_0, null);
    },
    $isRenderAbstractViewport: 1
  };
  Q.RenderViewportBase_visitChildrenForSemantics_closure.prototype = {
    call$1: function(sliver) {
      var t1 = sliver._sliver$_geometry;
      return t1.visible || t1.cacheExtent > 0;
    }
  };
  Q.RenderViewportBase_hitTestChildren_closure.prototype = {
    call$2: function(result, _) {
      var _this = this,
        t1 = _this.child,
        t2 = _this._box_0,
        t3 = _this.$this.computeChildMainAxisPosition$2(t1, t2.mainAxisPosition);
      return t1.hitTest$3$crossAxisPosition$mainAxisPosition(_this.sliverResult, t2.crossAxisPosition, t3);
    }
  };
  Q.RenderViewport.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof G.SliverPhysicalContainerParentData))
        child.parentData = new G.SliverPhysicalContainerParentData(null, null, C.Offset_0_0);
    },
    set$anchor: function(value) {
      if (value === this._anchor)
        return;
      this._anchor = value;
      this.markNeedsLayout$0();
    },
    set$center: function(value) {
      if (value == this._viewport$_center)
        return;
      this._viewport$_center = value;
      this.markNeedsLayout$0();
    },
    get$sizedByParent: function() {
      return true;
    },
    performResize$0: function() {
      var _this = this,
        t1 = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)),
        t2 = C.JSInt_methods.clamp$2(1 / 0, t1.minWidth, t1.maxWidth);
      t1 = C.JSInt_methods.clamp$2(1 / 0, t1.minHeight, t1.maxHeight);
      _this._size = new P.Size(t2, t1);
      switch (G.axisDirectionToAxis(_this._axisDirection)) {
        case C.Axis_1:
          _this._viewport$_offset.applyViewportDimension$1(t1);
          break;
        case C.Axis_0:
          _this._viewport$_offset.applyViewportDimension$1(t2);
          break;
      }
    },
    performLayout$0: function() {
      var t1, mainAxisExtent, crossAxisExtent, correction, t2, t3, t4, count, _this = this;
      if (_this._viewport$_center == null) {
        _this._viewport$_maxScrollExtent = _this._viewport$_minScrollExtent = 0;
        _this._viewport$_hasVisualOverflow = false;
        _this._viewport$_offset.applyContentDimensions$2(0, 0);
        return;
      }
      switch (G.axisDirectionToAxis(_this._axisDirection)) {
        case C.Axis_1:
          t1 = _this._size;
          mainAxisExtent = t1._dy;
          crossAxisExtent = t1._dx;
          break;
        case C.Axis_0:
          t1 = _this._size;
          mainAxisExtent = t1._dx;
          crossAxisExtent = t1._dy;
          break;
        default:
          mainAxisExtent = null;
          crossAxisExtent = null;
      }
      t1 = 0;
      do {
        correction = _this._attemptLayout$3(mainAxisExtent, crossAxisExtent, _this._viewport$_offset._pixels + 0);
        if (correction !== 0)
          _this._viewport$_offset.correctBy$1(correction);
        else {
          t2 = _this._viewport$_offset;
          t3 = _this._viewport$_minScrollExtent;
          t4 = _this._anchor;
          if (t2.applyContentDimensions$2(Math.min(0, t3 + mainAxisExtent * t4), Math.max(0, _this._viewport$_maxScrollExtent - mainAxisExtent * (1 - t4))))
            break;
        }
        count = t1 + 1;
        if (count < 10) {
          t1 = count;
          continue;
        } else
          break;
      } while (true);
    },
    _attemptLayout$3: function(mainAxisExtent, crossAxisExtent, correctedOffset) {
      var centerOffset, reverseDirectionRemainingPaintExtent, t1, forwardDirectionRemainingPaintExtent, t2, fullCacheExtent, centerCacheOffset, reverseDirectionRemainingCacheExtent, forwardDirectionRemainingCacheExtent, leadingNegativeChild, t3, result, t4, _this = this;
      _this._viewport$_maxScrollExtent = _this._viewport$_minScrollExtent = 0;
      _this._viewport$_hasVisualOverflow = false;
      centerOffset = mainAxisExtent * _this._anchor - correctedOffset;
      reverseDirectionRemainingPaintExtent = C.JSNumber_methods.clamp$2(centerOffset, 0, mainAxisExtent);
      t1 = mainAxisExtent - centerOffset;
      forwardDirectionRemainingPaintExtent = C.JSNumber_methods.clamp$2(t1, 0, mainAxisExtent);
      switch (_this._cacheExtentStyle) {
        case C.CacheExtentStyle_0:
          _this._calculatedCacheExtent = _this._cacheExtent;
          break;
        case C.CacheExtentStyle_1:
          _this._calculatedCacheExtent = mainAxisExtent * _this._cacheExtent;
          break;
      }
      t2 = _this._calculatedCacheExtent;
      fullCacheExtent = mainAxisExtent + 2 * t2;
      centerCacheOffset = centerOffset + t2;
      reverseDirectionRemainingCacheExtent = C.JSNumber_methods.clamp$2(centerCacheOffset, 0, fullCacheExtent);
      forwardDirectionRemainingCacheExtent = C.JSNumber_methods.clamp$2(fullCacheExtent - centerCacheOffset, 0, fullCacheExtent);
      leadingNegativeChild = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1")._as(_this._viewport$_center.parentData).ContainerParentDataMixin_previousSibling;
      t2 = leadingNegativeChild == null;
      if (!t2) {
        t3 = Math.max(mainAxisExtent, centerOffset);
        result = _this.layoutChildSequence$11$advance$cacheOrigin$child$crossAxisExtent$growthDirection$layoutOffset$mainAxisExtent$overlap$remainingCacheExtent$remainingPaintExtent$scrollOffset(_this.get$childBefore(), C.JSNumber_methods.clamp$2(t1, -_this._calculatedCacheExtent, 0), leadingNegativeChild, crossAxisExtent, C.GrowthDirection_1, forwardDirectionRemainingPaintExtent, mainAxisExtent, 0, reverseDirectionRemainingCacheExtent, reverseDirectionRemainingPaintExtent, t3 - mainAxisExtent);
        if (result !== 0)
          return -result;
      }
      t1 = _this._viewport$_center;
      t3 = -centerOffset;
      t4 = Math.max(0, t3);
      t2 = t2 ? Math.min(0, t3) : 0;
      t3 = centerOffset >= mainAxisExtent ? centerOffset : reverseDirectionRemainingPaintExtent;
      return _this.layoutChildSequence$11$advance$cacheOrigin$child$crossAxisExtent$growthDirection$layoutOffset$mainAxisExtent$overlap$remainingCacheExtent$remainingPaintExtent$scrollOffset(_this.get$childAfter(), C.JSNumber_methods.clamp$2(centerOffset, -_this._calculatedCacheExtent, 0), t1, crossAxisExtent, C.GrowthDirection_0, t3, mainAxisExtent, t2, forwardDirectionRemainingCacheExtent, forwardDirectionRemainingPaintExtent, t4);
    },
    get$hasVisualOverflow: function() {
      return this._viewport$_hasVisualOverflow;
    },
    updateOutOfBandData$2: function(growthDirection, childLayoutGeometry) {
      var _this = this;
      switch (growthDirection) {
        case C.GrowthDirection_0:
          _this._viewport$_maxScrollExtent = _this._viewport$_maxScrollExtent + childLayoutGeometry.scrollExtent;
          break;
        case C.GrowthDirection_1:
          _this._viewport$_minScrollExtent = _this._viewport$_minScrollExtent - childLayoutGeometry.scrollExtent;
          break;
      }
      if (childLayoutGeometry.hasVisualOverflow)
        _this._viewport$_hasVisualOverflow = true;
    },
    updateChildLayoutOffset$3: function(child, layoutOffset, growthDirection) {
      type$.SliverPhysicalParentData._as(child.parentData).paintOffset = this.computeAbsolutePaintOffset$3(child, layoutOffset, growthDirection);
    },
    paintOffsetOf$1: function(child) {
      return type$.SliverPhysicalParentData._as(child.parentData).paintOffset;
    },
    scrollOffsetOf$2: function(child, scrollOffsetWithinChild) {
      var current, t1, scrollOffsetToChild, _this = this;
      child.toString;
      switch (type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(child)).growthDirection) {
        case C.GrowthDirection_0:
          current = _this._viewport$_center;
          for (t1 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"), scrollOffsetToChild = 0; current !== child;) {
            scrollOffsetToChild += current._sliver$_geometry.scrollExtent;
            current = t1._as(current.parentData).ContainerParentDataMixin_nextSibling;
          }
          return scrollOffsetToChild + scrollOffsetWithinChild;
        case C.GrowthDirection_1:
          t1 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
          current = t1._as(_this._viewport$_center.parentData).ContainerParentDataMixin_previousSibling;
          for (scrollOffsetToChild = 0; current !== child;) {
            scrollOffsetToChild -= current._sliver$_geometry.scrollExtent;
            current = t1._as(current.parentData).ContainerParentDataMixin_previousSibling;
          }
          return scrollOffsetToChild - scrollOffsetWithinChild;
      }
      return null;
    },
    maxScrollObstructionExtentBefore$1: function(child) {
      var current, t1, _this = this;
      child.toString;
      switch (type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(child)).growthDirection) {
        case C.GrowthDirection_0:
          current = _this._viewport$_center;
          for (t1 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"); current !== child;) {
            current._sliver$_geometry.toString;
            current = t1._as(current.parentData).ContainerParentDataMixin_nextSibling;
          }
          return 0;
        case C.GrowthDirection_1:
          t1 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
          current = t1._as(_this._viewport$_center.parentData).ContainerParentDataMixin_previousSibling;
          for (; current !== child;) {
            current._sliver$_geometry.toString;
            current = t1._as(current.parentData).ContainerParentDataMixin_previousSibling;
          }
          return 0;
      }
      return null;
    },
    applyPaintTransform$2: function(child, transform) {
      var t1 = type$.SliverPhysicalParentData._as(child.parentData).paintOffset;
      transform.translate$2(0, t1._dx, t1._dy);
    },
    computeChildMainAxisPosition$2: function(child, parentMainAxisPosition) {
      var childParentData = type$.SliverPhysicalParentData._as(child.parentData),
        t1 = type$.SliverConstraints;
      switch (G.applyGrowthDirectionToAxisDirection(t1._as(K.RenderObject.prototype.get$constraints.call(child)).axisDirection, t1._as(K.RenderObject.prototype.get$constraints.call(child)).growthDirection)) {
        case C.AxisDirection_2:
          return parentMainAxisPosition - childParentData.paintOffset._dy;
        case C.AxisDirection_1:
          return parentMainAxisPosition - childParentData.paintOffset._dx;
        case C.AxisDirection_0:
          return child._sliver$_geometry.paintExtent - (parentMainAxisPosition - childParentData.paintOffset._dy);
        case C.AxisDirection_3:
          return child._sliver$_geometry.paintExtent - (parentMainAxisPosition - childParentData.paintOffset._dx);
      }
      return 0;
    },
    get$indexOfFirstChild: function() {
      var t1, t2, count,
        child = this._viewport$_center;
      for (t1 = this.ContainerRenderObjectMixin__firstChild, t2 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"), count = 0; child == null ? t1 != null : child !== t1;) {
        --count;
        child = t2._as(child.parentData).ContainerParentDataMixin_previousSibling;
      }
      return count;
    },
    labelForChild$1: function(index) {
      if (index === 0)
        return "center child";
      return "child " + index;
    },
    get$childrenInPaintOrder: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 2, $async$currentError, t1, child;
        return function $async$get$childrenInPaintOrder($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                child = $async$self.ContainerRenderObjectMixin__firstChild;
                if (child == null) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1 = H._instanceType($async$self)._eval$1("ContainerRenderObjectMixin.1");
              case 3:
                // for condition
                if (!(child != $async$self._viewport$_center)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return child;
              case 5:
                // after yield
                child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
                // goto for condition
                $async$goto = 3;
                break;
              case 4:
                // after for
                child = $async$self.ContainerRenderObjectMixin__lastChild;
              case 6:
                // for condition
                // trivial condition
                $async$goto = 8;
                return child;
              case 8:
                // after yield
                if (child == $async$self._viewport$_center) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                child = t1._as(child.parentData).ContainerParentDataMixin_previousSibling;
                // goto for condition
                $async$goto = 6;
                break;
              case 7:
                // after for
              case 1:
                // return
                return P._IterationMarker_endOfIteration();
              case 2:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.RenderSliver);
    },
    get$childrenInHitTestOrder: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 2, $async$currentError, child, t1;
        return function $async$get$childrenInHitTestOrder($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                if ($async$self.ContainerRenderObjectMixin__firstChild == null) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                child = $async$self._viewport$_center;
                t1 = H._instanceType($async$self)._eval$1("ContainerRenderObjectMixin.1");
              case 3:
                // for condition
                if (!(child != null)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return child;
              case 5:
                // after yield
                child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
                // goto for condition
                $async$goto = 3;
                break;
              case 4:
                // after for
                child = t1._as($async$self._viewport$_center.parentData).ContainerParentDataMixin_previousSibling;
              case 6:
                // for condition
                if (!(child != null)) {
                  // goto after for
                  $async$goto = 7;
                  break;
                }
                $async$goto = 8;
                return child;
              case 8:
                // after yield
                child = t1._as(child.parentData).ContainerParentDataMixin_previousSibling;
                // goto for condition
                $async$goto = 6;
                break;
              case 7:
                // after for
              case 1:
                // return
                return P._IterationMarker_endOfIteration();
              case 2:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.RenderSliver);
    }
  };
  Q._RenderViewportBase_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1: function(owner) {
      var child, t1;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("_RenderViewportBase_RenderBox_ContainerRenderObjectMixin.0"); child != null;) {
        child.attach$1(owner);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0: function(_) {
      var child, t1;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("_RenderViewportBase_RenderBox_ContainerRenderObjectMixin.0"); child != null;) {
        child.detach$0(0);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  N.ScrollDirection.prototype = {
    toString$0: function(_) {
      return this._viewport_offset$_name;
    }
  };
  N.ViewportOffset.prototype = {
    moveTo$3$curve$duration: function(_, to, curve, duration) {
      var t1 = duration._duration === 0;
      if (t1) {
        this.jumpTo$1(to);
        t1 = new P._Future($.Zone__current, type$._Future_void);
        t1._asyncComplete$1(null);
        return t1;
      } else
        return this.animateTo$3$curve$duration(to, curve, duration);
    },
    toString$0: function(_) {
      var _this = this,
        description = H.setRuntimeTypeInfo([], type$.JSArray_String);
      _this.super$ScrollPosition$debugFillDescription(description);
      description.push(H.getRuntimeType(_this.context).toString$0(0));
      description.push(H.S(_this.physics));
      description.push(H.S(_this._activity));
      description.push(_this._userScrollDirection.toString$0(0));
      return "<optimized out>#" + Y.shortHash(_this) + "(" + C.JSArray_methods.join$1(description, ", ") + ")";
    },
    debugFillDescription$1: function(description) {
      var t1 = this._pixels;
      description.push("offset: " + H.S(t1 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t1, 1)));
    }
  };
  N._TaskEntry.prototype = {
    run$0: function() {
      P.Timeline_timeSync("Scheduled Task", new N._TaskEntry_run_closure(this), null);
    }
  };
  N._TaskEntry_run_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1.completer.complete$1(0, t1.task.call$0());
    },
    $signature: 0
  };
  N._FrameCallbackEntry.prototype = {};
  N.SchedulerPhase.prototype = {
    toString$0: function(_) {
      return this._binding$_name;
    }
  };
  N.SchedulerBinding.prototype = {
    addTimingsCallback$1: function(callback) {
      var t1 = this.SchedulerBinding__timingsCallbacks;
      t1.push(callback);
      if (t1.length === 1)
        $.$get$window()._onReportTimings = this.get$_executeTimingsCallbacks();
    },
    removeTimingsCallback$1: function(callback) {
      var t1 = this.SchedulerBinding__timingsCallbacks;
      C.JSArray_methods.remove$1(t1, callback);
      if (t1.length === 0)
        $.$get$window()._onReportTimings = null;
    },
    _executeTimingsCallbacks$1: function(timings) {
      var callback, exception, stack, t2, _i, exception0, _null = null,
        t1 = this.SchedulerBinding__timingsCallbacks,
        clonedCallbacks = P.List_List$from(t1, true, type$.void_Function_List_FrameTiming);
      for (t2 = clonedCallbacks.length, _i = 0; _i < clonedCallbacks.length; clonedCallbacks.length === t2 || (0, H.throwConcurrentModificationError)(clonedCallbacks), ++_i) {
        callback = clonedCallbacks[_i];
        try {
          if (C.JSArray_methods.contains$1(t1, callback))
            callback.call$1(timings);
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          $.$get$FlutterError_onError().call$1(new U.FlutterErrorDetails(exception, stack, "Flutter framework", new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["while executing callbacks for FrameTiming"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), _null, false));
        }
      }
    },
    handleAppLifecycleStateChanged$1: function(state) {
      this.SchedulerBinding__lifecycleState = state;
      switch (state) {
        case C.AppLifecycleState_0:
        case C.AppLifecycleState_1:
          this._setFramesEnabledState$1(true);
          break;
        case C.AppLifecycleState_2:
        case C.AppLifecycleState_3:
          this._setFramesEnabledState$1(false);
          break;
      }
    },
    scheduleTask$1$2: function(task, priority, $T) {
      var t1 = this.SchedulerBinding__taskQueue,
        t2 = t1._priority_queue$_length,
        entry = new N._TaskEntry(task, priority._priority$_value, null, null, $T._eval$1("_TaskEntry<0>"));
      entry.completer = new P._AsyncCompleter(new P._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncCompleter<0>"));
      t1._priority_queue$_add$1(0, entry);
      if (t2 === 0 && this._lockCount <= 0)
        this._ensureEventLoopCallback$0();
      return entry.completer.future;
    },
    _ensureEventLoopCallback$0: function() {
      if (this.SchedulerBinding__hasRequestedAnEventLoopCallback)
        return;
      this.SchedulerBinding__hasRequestedAnEventLoopCallback = true;
      P.Timer_Timer(C.Duration_0, this.get$_runTasks());
    },
    _runTasks$0: function() {
      this.SchedulerBinding__hasRequestedAnEventLoopCallback = false;
      if (this.handleEventLoopCallback$0())
        this._ensureEventLoopCallback$0();
    },
    handleEventLoopCallback$0: function() {
      var entry, exception, exceptionStack, newLength, last, exception0, _this = this, _null = null,
        _s15_ = "No such element",
        t1 = _this.SchedulerBinding__taskQueue,
        t2 = t1._priority_queue$_length === 0;
      if (t2 || _this._lockCount > 0)
        return false;
      if (t2)
        H.throwExpression(P.StateError$(_s15_));
      entry = t1._priority_queue$_queue[0];
      t2 = entry.priority;
      if (_this.SchedulerBinding_schedulingStrategy.call$2$priority$scheduler(t2, _this)) {
        try {
          t2 = t1._priority_queue$_length;
          if (t2 === 0)
            H.throwExpression(P.StateError$(_s15_));
          newLength = t2 - 1;
          t2 = t1._priority_queue$_queue;
          last = t2[newLength];
          C.JSArray_methods.$indexSet(t2, newLength, _null);
          t1._priority_queue$_length = newLength;
          if (newLength > 0)
            t1._bubbleDown$2(last, 0);
          entry.run$0();
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          exceptionStack = H.getTraceFromException(exception0);
          t2 = U.FlutterErrorDetails$(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["during a task callback"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), exception, _null, "scheduler library", false, exceptionStack);
          $.$get$FlutterError_onError().call$1(t2);
        }
        return t1._priority_queue$_length !== 0;
      }
      return false;
    },
    scheduleFrameCallback$2$rescheduling: function(callback, rescheduling) {
      var t1, _this = this;
      _this.scheduleFrame$0();
      t1 = ++_this.SchedulerBinding__nextFrameCallbackId;
      _this.SchedulerBinding__transientCallbacks.$indexSet(0, t1, new N._FrameCallbackEntry(callback));
      return _this.SchedulerBinding__nextFrameCallbackId;
    },
    get$endOfFrame: function() {
      var _this = this;
      if (_this.SchedulerBinding__nextFrameCompleter == null) {
        if (_this.SchedulerBinding__schedulerPhase === C.SchedulerPhase_0)
          _this.scheduleFrame$0();
        _this.SchedulerBinding__nextFrameCompleter = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
        _this.SchedulerBinding__postFrameCallbacks.push(new N.SchedulerBinding_endOfFrame_closure(_this));
      }
      return _this.SchedulerBinding__nextFrameCompleter.future;
    },
    get$framesEnabled: function() {
      return this.SchedulerBinding__framesEnabled;
    },
    _setFramesEnabledState$1: function(enabled) {
      if (this.SchedulerBinding__framesEnabled === enabled)
        return;
      this.SchedulerBinding__framesEnabled = enabled;
      if (enabled)
        this.scheduleFrame$0();
    },
    ensureVisualUpdate$0: function() {
      switch (this.SchedulerBinding__schedulerPhase) {
        case C.SchedulerPhase_0:
        case C.SchedulerPhase_4:
          this.scheduleFrame$0();
          return;
        case C.SchedulerPhase_1:
        case C.SchedulerPhase_2:
        case C.SchedulerPhase_3:
          return;
      }
    },
    scheduleFrame$0: function() {
      var t1, _this = this;
      if (_this.SchedulerBinding__hasScheduledFrame || !_this.get$framesEnabled())
        return;
      t1 = $.$get$window();
      if (t1._onBeginFrame == null) {
        t1._onBeginFrame = _this.get$_handleBeginFrame();
        t1._onBeginFrameZone = $.Zone__current;
      }
      if (t1._onDrawFrame == null) {
        t1._onDrawFrame = _this.get$_handleDrawFrame();
        t1._onDrawFrameZone = $.Zone__current;
      }
      t1.scheduleFrame$0();
      _this.SchedulerBinding__hasScheduledFrame = true;
    },
    scheduleForcedFrame$0: function() {
      if (!this.get$framesEnabled())
        return;
      if (this.SchedulerBinding__hasScheduledFrame)
        return;
      $.$get$window().scheduleFrame$0();
      this.SchedulerBinding__hasScheduledFrame = true;
    },
    scheduleWarmUpFrame$0: function() {
      var hadScheduledFrame, _this = this;
      if (_this.SchedulerBinding__warmUpFrame || _this.SchedulerBinding__schedulerPhase !== C.SchedulerPhase_0)
        return;
      _this.SchedulerBinding__warmUpFrame = true;
      P.Timeline_startSync("Warm-up frame", null, null);
      hadScheduledFrame = _this.SchedulerBinding__hasScheduledFrame;
      P.Timer_Timer(C.Duration_0, new N.SchedulerBinding_scheduleWarmUpFrame_closure(_this));
      P.Timer_Timer(C.Duration_0, new N.SchedulerBinding_scheduleWarmUpFrame_closure0(_this, hadScheduledFrame));
      _this.lockEvents$1(new N.SchedulerBinding_scheduleWarmUpFrame_closure1(_this));
    },
    resetEpoch$0: function() {
      var _this = this;
      _this.SchedulerBinding__epochStart = _this._adjustForEpoch$1(_this.SchedulerBinding__lastRawTimeStamp);
      _this.SchedulerBinding__firstRawTimeStampInEpoch = null;
    },
    _adjustForEpoch$1: function(rawTimeStamp) {
      var t1 = this.SchedulerBinding__firstRawTimeStampInEpoch,
        rawDurationSinceEpoch = t1 == null ? C.Duration_0 : new P.Duration(rawTimeStamp._duration - t1._duration);
      return P.Duration$(C.JSDouble_methods.round$0(rawDurationSinceEpoch._duration / $._timeDilation) + this.SchedulerBinding__epochStart._duration, 0);
    },
    _handleBeginFrame$1: function(rawTimeStamp) {
      if (this.SchedulerBinding__warmUpFrame) {
        this.SchedulerBinding__ignoreNextEngineDrawFrame = true;
        return;
      }
      this.handleBeginFrame$1(rawTimeStamp);
    },
    _handleDrawFrame$0: function() {
      if (this.SchedulerBinding__ignoreNextEngineDrawFrame) {
        this.SchedulerBinding__ignoreNextEngineDrawFrame = false;
        return;
      }
      this.handleDrawFrame$0();
    },
    handleBeginFrame$1: function(rawTimeStamp) {
      var callbacks, t1, _this = this;
      P.Timeline_startSync("Frame", C.Map_9aZ6I, null);
      if (_this.SchedulerBinding__firstRawTimeStampInEpoch == null)
        _this.SchedulerBinding__firstRawTimeStampInEpoch = rawTimeStamp;
      t1 = rawTimeStamp == null;
      _this.SchedulerBinding__currentFrameTimeStamp = _this._adjustForEpoch$1(t1 ? _this.SchedulerBinding__lastRawTimeStamp : rawTimeStamp);
      if (!t1)
        _this.SchedulerBinding__lastRawTimeStamp = rawTimeStamp;
      _this.SchedulerBinding__hasScheduledFrame = false;
      try {
        P.Timeline_startSync("Animate", C.Map_9aZ6I, null);
        _this.SchedulerBinding__schedulerPhase = C.SchedulerPhase_1;
        callbacks = _this.SchedulerBinding__transientCallbacks;
        _this.SchedulerBinding__transientCallbacks = P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._FrameCallbackEntry);
        J.forEach$1$ax(callbacks, new N.SchedulerBinding_handleBeginFrame_closure(_this));
        _this.SchedulerBinding__removedIds.clear$0(0);
      } finally {
        _this.SchedulerBinding__schedulerPhase = C.SchedulerPhase_2;
      }
    },
    handleDrawFrame$0: function() {
      var callback, localPostFrameCallbacks, callback0, t1, t2, _i, _this = this;
      P.Timeline_finishSync();
      try {
        _this.SchedulerBinding__schedulerPhase = C.SchedulerPhase_3;
        for (t1 = _this.SchedulerBinding__persistentCallbacks, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          callback = t1[_i];
          _this._invokeFrameCallback$2(callback, _this.SchedulerBinding__currentFrameTimeStamp);
        }
        _this.SchedulerBinding__schedulerPhase = C.SchedulerPhase_4;
        t1 = _this.SchedulerBinding__postFrameCallbacks;
        localPostFrameCallbacks = P.List_List$from(t1, true, type$.void_Function_Duration);
        C.JSArray_methods.set$length(t1, 0);
        for (t1 = localPostFrameCallbacks, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          callback0 = t1[_i];
          _this._invokeFrameCallback$2(callback0, _this.SchedulerBinding__currentFrameTimeStamp);
        }
      } finally {
        _this.SchedulerBinding__schedulerPhase = C.SchedulerPhase_0;
        P.Timeline_finishSync();
        _this.SchedulerBinding__currentFrameTimeStamp = null;
      }
    },
    _profileFramePostEvent$2: function(frameNumber, frameTiming) {
      P.postEvent("Flutter.Frame", P.LinkedHashMap_LinkedHashMap$_literal(["number", frameNumber, "startTime", frameTiming.timestampInMicroseconds$1(C.FramePhase_0), "elapsed", frameTiming.get$totalSpan().get$inMicroseconds(), "build", frameTiming.get$buildDuration().get$inMicroseconds(), "raster", frameTiming.get$rasterDuration().get$inMicroseconds()], type$.String, type$.dynamic));
    },
    _invokeFrameCallback$3: function(callback, timeStamp, callbackStack) {
      var exception, exceptionStack, exception0, t1, _null = null;
      try {
        callback.call$1(timeStamp);
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        exceptionStack = H.getTraceFromException(exception0);
        t1 = U.FlutterErrorDetails$(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["during a scheduler callback"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), exception, _null, "scheduler library", false, exceptionStack);
        $.$get$FlutterError_onError().call$1(t1);
      }
    },
    _invokeFrameCallback$2: function(callback, timeStamp) {
      return this._invokeFrameCallback$3(callback, timeStamp, null);
    }
  };
  N.SchedulerBinding_endOfFrame_closure.prototype = {
    call$1: function(timeStamp) {
      var t1 = this.$this;
      t1.SchedulerBinding__nextFrameCompleter.complete$0(0);
      t1.SchedulerBinding__nextFrameCompleter = null;
    },
    $signature: 6
  };
  N.SchedulerBinding_scheduleWarmUpFrame_closure.prototype = {
    call$0: function() {
      this.$this.handleBeginFrame$1(null);
    },
    $signature: 0
  };
  N.SchedulerBinding_scheduleWarmUpFrame_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1.handleDrawFrame$0();
      t1.resetEpoch$0();
      t1.SchedulerBinding__warmUpFrame = false;
      if (this.hadScheduledFrame)
        t1.scheduleFrame$0();
    },
    $signature: 0
  };
  N.SchedulerBinding_scheduleWarmUpFrame_closure1.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait($async$self.$this.get$endOfFrame(), $async$call$0);
            case 2:
              // returning from await.
              P.Timeline_finishSync();
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 21
  };
  N.SchedulerBinding_handleBeginFrame_closure.prototype = {
    call$2: function(id, callbackEntry) {
      var t1 = this.$this;
      if (!t1.SchedulerBinding__removedIds.contains$1(0, id))
        t1._invokeFrameCallback$3(callbackEntry.callback, t1.SchedulerBinding__currentFrameTimeStamp, callbackEntry.debugStack);
    },
    $signature: 115
  };
  V.Priority.prototype = {
    $add: function(_, offset) {
      if (Math.abs(offset) > 10000)
        offset = 10000 * C.JSInt_methods.get$sign(offset);
      return new V.Priority(this._priority$_value + offset);
    },
    $sub: function(_, offset) {
      return this.$add(0, -offset);
    }
  };
  M.Ticker.prototype = {
    set$muted: function(_, value) {
      var t1, _this = this;
      if (value === _this._muted)
        return;
      _this._muted = value;
      if (value)
        _this.unscheduleTick$0();
      else {
        t1 = _this._ticker$_future != null && _this._animationId == null;
        if (t1)
          _this._animationId = $.SchedulerBinding__instance.scheduleFrameCallback$2$rescheduling(_this.get$_ticker$_tick(), false);
      }
    },
    get$isTicking: function() {
      if (this._ticker$_future == null)
        return false;
      if (this._muted)
        return false;
      if ($.SchedulerBinding__instance.get$framesEnabled())
        return true;
      if ($.SchedulerBinding__instance.SchedulerBinding__schedulerPhase !== C.SchedulerPhase_0)
        return true;
      return false;
    },
    start$0: function(_) {
      var t1, t2, _this = this;
      _this._ticker$_future = new M.TickerFuture(new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
      if (!_this._muted)
        t1 = _this._animationId == null;
      else
        t1 = false;
      if (t1)
        _this._animationId = $.SchedulerBinding__instance.scheduleFrameCallback$2$rescheduling(_this.get$_ticker$_tick(), false);
      t1 = $.SchedulerBinding__instance;
      t2 = t1.SchedulerBinding__schedulerPhase.index;
      if (t2 > 0 && t2 < 4)
        _this._startTime = t1.SchedulerBinding__currentFrameTimeStamp;
      return _this._ticker$_future;
    },
    stop$1$canceled: function(_, canceled) {
      var _this = this,
        t1 = _this._ticker$_future;
      if (t1 == null)
        return;
      _this._startTime = _this._ticker$_future = null;
      _this.unscheduleTick$0();
      if (canceled)
        t1._cancel$1(_this);
      else
        t1._ticker$_complete$0();
    },
    stop$0: function($receiver) {
      return this.stop$1$canceled($receiver, false);
    },
    _ticker$_tick$1: function(timeStamp) {
      var t1, _this = this;
      _this._animationId = null;
      t1 = _this._startTime;
      if (t1 == null)
        t1 = _this._startTime = timeStamp;
      _this._onTick.call$1(new P.Duration(timeStamp._duration - t1._duration));
      if (!_this._muted && _this._ticker$_future != null && _this._animationId == null)
        _this._animationId = $.SchedulerBinding__instance.scheduleFrameCallback$2$rescheduling(_this.get$_ticker$_tick(), true);
    },
    unscheduleTick$0: function() {
      var t2,
        t1 = this._animationId;
      if (t1 != null) {
        t2 = $.SchedulerBinding__instance;
        t2.SchedulerBinding__transientCallbacks.remove$1(0, t1);
        t2.SchedulerBinding__removedIds.add$1(0, t1);
        this._animationId = null;
      }
    },
    dispose$0: function() {
      var _this = this,
        t1 = _this._ticker$_future;
      if (t1 != null) {
        _this._ticker$_future = null;
        _this.unscheduleTick$0();
        t1._cancel$1(_this);
      }
    },
    toString$1$debugIncludeStack: function(_, debugIncludeStack) {
      return "Ticker()".charCodeAt(0) == 0 ? "Ticker()" : "Ticker()";
    },
    toString$0: function($receiver) {
      return this.toString$1$debugIncludeStack($receiver, false);
    }
  };
  M.TickerFuture.prototype = {
    _ticker$_complete$0: function() {
      this._completed = true;
      this._primaryCompleter.complete$1(0, null);
      var t1 = this._secondaryCompleter;
      if (t1 != null)
        t1.complete$1(0, null);
    },
    _cancel$1: function(ticker) {
      var t1;
      this._completed = false;
      t1 = this._secondaryCompleter;
      if (t1 != null)
        t1.completeError$1(new M.TickerCanceled(ticker));
    },
    whenCompleteOrCancel$1: function(callback) {
      var t2, t3, _this = this,
        t1 = new M.TickerFuture_whenCompleteOrCancel_thunk(callback);
      if (_this._secondaryCompleter == null) {
        t2 = _this._secondaryCompleter = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
        t3 = _this._completed;
        if (t3 != null)
          if (t3)
            t2.complete$0(0);
          else
            t2.completeError$1(C.TickerCanceled_null);
      }
      _this._secondaryCompleter.future.then$1$2$onError(t1, t1, type$.void);
    },
    then$1$2$onError: function(onValue, onError, $R) {
      return this._primaryCompleter.future.then$1$2$onError(onValue, onError, $R);
    },
    then$1$1: function(onValue, $R) {
      return this.then$1$2$onError(onValue, null, $R);
    },
    whenComplete$1: function(action) {
      return this._primaryCompleter.future.whenComplete$1(action);
    },
    toString$0: function(_) {
      var t1 = "<optimized out>#" + Y.shortHash(this) + "(",
        t2 = this._completed;
      if (t2 == null)
        t2 = "active";
      else
        t2 = t2 ? "complete" : "canceled";
      return t1 + t2 + ")";
    },
    $isFuture: 1
  };
  M.TickerFuture_whenCompleteOrCancel_thunk.prototype = {
    call$1: function(value) {
      this.callback.call$0();
    },
    $signature: 15
  };
  M.TickerCanceled.prototype = {
    toString$0: function(_) {
      var t1 = this.ticker;
      if (t1 != null)
        return "This ticker was canceled: " + t1.toString$0(0);
      return 'The ticker was canceled before the "orCancel" property was first used.';
    },
    $isException: 1
  };
  N.SemanticsBinding.prototype = {};
  A.SemanticsTag.prototype = {
    toString$0: function(_) {
      return "SemanticsTag(" + this.name + ")";
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  A.CustomSemanticsAction.prototype = {};
  A.SemanticsData.prototype = {
    toStringShort$0: function() {
      return "SemanticsData";
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.SemanticsData)
        if (other.flags === _this.flags)
          if (other.actions === _this.actions)
            if (other.label == _this.label)
              if (other.value == _this.value)
                if (other.increasedValue == _this.increasedValue)
                  if (other.decreasedValue == _this.decreasedValue)
                    if (other.hint == _this.hint)
                      if (other.textDirection == _this.textDirection)
                        if (J.$eq$(other.rect, _this.rect))
                          if (S.setEquals(other.tags, _this.tags))
                            if (other.scrollChildCount == _this.scrollChildCount)
                              if (other.scrollIndex == _this.scrollIndex)
                                if (other.scrollPosition == _this.scrollPosition)
                                  if (other.scrollExtentMax == _this.scrollExtentMax)
                                    if (other.scrollExtentMin == _this.scrollExtentMin)
                                      t1 = J.$eq$(other.transform, _this.transform) && other.elevation == _this.elevation && other.thickness === _this.thickness && A.SemanticsData__sortedListsEqual(other.customSemanticsActionIds, _this.customSemanticsActionIds);
                                    else
                                      t1 = false;
                                  else
                                    t1 = false;
                                else
                                  t1 = false;
                              else
                                t1 = false;
                            else
                              t1 = false;
                          else
                            t1 = false;
                        else
                          t1 = false;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(P.hashValues(_this.flags, _this.actions, _this.label, _this.value, _this.increasedValue, _this.decreasedValue, _this.hint, _this.textDirection, _this.rect, _this.tags, _this.textSelection, _this.scrollChildCount, _this.scrollIndex, _this.scrollPosition, _this.scrollExtentMax, _this.scrollExtentMin, _this.platformViewId, _this.maxValueLength, _this.currentValueLength, _this.transform), _this.elevation, _this.thickness, P.hashList(_this.customSemanticsActionIds), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  A._SemanticsDiagnosticableNode.prototype = {
    getChildren$0: function() {
      var t1 = this.value.debugDescribeChildren$1$childOrder(this.childOrder);
      return t1;
    }
  };
  A.SemanticsProperties.prototype = {
    toStringShort$0: function() {
      return "SemanticsProperties";
    }
  };
  A.SemanticsNode.prototype = {
    set$transform: function(_, value) {
      if (!T.MatrixUtils_matrixEquals(this._semantics$_transform, value)) {
        this._semantics$_transform = T.MatrixUtils_isIdentity(value) ? null : value;
        this._markDirty$0();
      }
    },
    set$rect: function(_, value) {
      if (!J.$eq$(this._semantics$_rect, value)) {
        this._semantics$_rect = value;
        this._markDirty$0();
      }
    },
    set$isMergedIntoParent: function(value) {
      if (this._isMergedIntoParent === value)
        return;
      this._isMergedIntoParent = value;
      this._markDirty$0();
    },
    _replaceChildren$1: function(newChildren) {
      var t2, _i, t3, sawChange, child, t4, i, _this = this,
        t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t2; ++_i)
          t1[_i]._dead = true;
      for (t1 = newChildren.length, _i = 0; _i < t1; ++_i)
        newChildren[_i]._dead = false;
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, t3 = type$.SemanticsNode, sawChange = false, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          if (child._dead) {
            t4 = J.getInterceptor$x(child);
            if (t3._as(B.AbstractNode.prototype.get$parent.call(t4, child)) === _this) {
              child._node$_parent = null;
              if (_this._node$_owner != null)
                child.detach$0(0);
            }
            sawChange = true;
          }
        }
      else
        sawChange = false;
      for (t1 = newChildren.length, t2 = type$.SemanticsNode, _i = 0; _i < newChildren.length; newChildren.length === t1 || (0, H.throwConcurrentModificationError)(newChildren), ++_i) {
        child = newChildren[_i];
        child.toString;
        t3 = J.getInterceptor$x(child);
        if (t2._as(B.AbstractNode.prototype.get$parent.call(t3, child)) !== _this) {
          if (t2._as(B.AbstractNode.prototype.get$parent.call(t3, child)) != null) {
            t3 = t2._as(B.AbstractNode.prototype.get$parent.call(t3, child));
            if (t3 != null) {
              child._node$_parent = null;
              if (t3._node$_owner != null)
                child.detach$0(0);
            }
          }
          child._node$_parent = _this;
          t3 = _this._node$_owner;
          if (t3 != null)
            child.attach$1(t3);
          t3 = child._node$_depth;
          t4 = _this._node$_depth;
          if (t3 <= t4) {
            child._node$_depth = t4 + 1;
            child.redepthChildren$0();
          }
          sawChange = true;
        }
      }
      if (!sawChange && _this._semantics$_children != null)
        for (t1 = _this._semantics$_children, t2 = t1.length, i = 0; i < t2; ++i)
          if (t1[i].id !== newChildren[i].id) {
            sawChange = true;
            break;
          }
      _this._semantics$_children = newChildren;
      if (sawChange)
        _this._markDirty$0();
    },
    get$hasChildren: function() {
      var t1 = this._semantics$_children;
      t1 = t1 == null ? null : t1.length !== 0;
      return t1 === true;
    },
    _visitDescendants$1: function(visitor) {
      var t2, _i, child,
        t1 = this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          if (!visitor.call$1(child) || !child._visitDescendants$1(visitor))
            return false;
        }
      return true;
    },
    redepthChildren$0: function() {
      var t1 = this._semantics$_children;
      if (t1 != null)
        C.JSArray_methods.forEach$1(t1, this.get$redepthChild());
    },
    attach$1: function(owner) {
      var t1, t2, _i, _this = this;
      _this.super$AbstractNode$attach(owner);
      owner._nodes.$indexSet(0, _this.id, _this);
      owner._detachedNodes.remove$1(0, _this);
      if (_this._semantics$_dirty) {
        _this._semantics$_dirty = false;
        _this._markDirty$0();
      }
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].attach$1(owner);
    },
    detach$0: function(_) {
      var t2, t3, _i, child, t4, _this = this,
        t1 = type$.SemanticsOwner;
      t1._as(B.AbstractNode.prototype.get$owner.call(_this))._nodes.remove$1(0, _this.id);
      t1._as(B.AbstractNode.prototype.get$owner.call(_this))._detachedNodes.add$1(0, _this);
      _this.super$AbstractNode$detach(0);
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, t3 = type$.SemanticsNode, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          child.toString;
          t4 = J.getInterceptor$x(child);
          if (t3._as(B.AbstractNode.prototype.get$parent.call(t4, child)) === _this)
            t4.detach$0(child);
        }
      _this._markDirty$0();
    },
    _markDirty$0: function() {
      var _this = this;
      if (_this._semantics$_dirty)
        return;
      _this._semantics$_dirty = true;
      if (_this._node$_owner != null)
        type$.SemanticsOwner._as(B.AbstractNode.prototype.get$owner.call(_this))._semantics$_dirtyNodes.add$1(0, _this);
    },
    isTagged$1: function(tag) {
      var t1 = this.tags;
      return t1 != null && t1.contains$1(0, tag);
    },
    updateWith$2$childrenInInversePaintOrder$config: function(_, childrenInInversePaintOrder, config) {
      var t1, _this = this;
      if (config == null)
        config = $.$get$SemanticsNode__kEmptyConfig();
      if (_this._semantics$_label == config._semantics$_label)
        if (_this._hint == config._hint)
          if (_this._semantics$_elevation == config._semantics$_elevation)
            if (_this._semantics$_thickness === config._semantics$_thickness)
              if (_this._decreasedValue == config._decreasedValue)
                if (_this._semantics$_value == config._semantics$_value)
                  if (_this._increasedValue == config._increasedValue)
                    if (_this._flags === config._flags)
                      if (_this._semantics$_textDirection == config._semantics$_textDirection)
                        if (_this._sortKey == config._sortKey)
                          if (_this._scrollPosition == config._scrollPosition)
                            if (_this._scrollExtentMax == config._scrollExtentMax)
                              if (_this._scrollExtentMin == config._scrollExtentMin)
                                if (_this._actionsAsBits === config._actionsAsBits)
                                  if (_this.indexInParent == config._indexInParent)
                                    t1 = _this._mergeAllDescendantsIntoThisNode !== config._isMergingSemanticsOfDescendants;
                                  else
                                    t1 = true;
                                else
                                  t1 = true;
                              else
                                t1 = true;
                            else
                              t1 = true;
                          else
                            t1 = true;
                        else
                          t1 = true;
                      else
                        t1 = true;
                    else
                      t1 = true;
                  else
                    t1 = true;
                else
                  t1 = true;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        _this._markDirty$0();
      _this._semantics$_label = config._semantics$_label;
      _this._decreasedValue = config._decreasedValue;
      _this._semantics$_value = config._semantics$_value;
      _this._increasedValue = config._increasedValue;
      _this._hint = config._hint;
      _this._semantics$_hintOverrides = config._semantics$_hintOverrides;
      _this._semantics$_elevation = config._semantics$_elevation;
      _this._semantics$_thickness = config._semantics$_thickness;
      _this._flags = config._flags;
      _this._semantics$_textDirection = config._semantics$_textDirection;
      _this._sortKey = config._sortKey;
      _this._actions = P.LinkedHashMap_LinkedHashMap$from(config._actions, type$.SemanticsAction, type$.void_Function_dynamic);
      _this._customSemanticsActions = P.LinkedHashMap_LinkedHashMap$from(config._customSemanticsActions, type$.CustomSemanticsAction, type$.void_Function);
      _this._actionsAsBits = config._actionsAsBits;
      _this._textSelection = config._textSelection;
      _this._scrollPosition = config._scrollPosition;
      _this._scrollExtentMax = config._scrollExtentMax;
      _this._scrollExtentMin = config._scrollExtentMin;
      _this._mergeAllDescendantsIntoThisNode = config._isMergingSemanticsOfDescendants;
      _this._scrollChildCount = config._scrollChildCount;
      _this._scrollIndex = config._scrollIndex;
      _this.indexInParent = config._indexInParent;
      _this._platformViewId = config._platformViewId;
      _this._maxValueLength = config._maxValueLength;
      _this._currentValueLength = config._currentValueLength;
      _this._replaceChildren$1(childrenInInversePaintOrder == null ? C.List_empty6 : childrenInInversePaintOrder);
    },
    updateWith$1$config: function($receiver, config) {
      return this.updateWith$2$childrenInInversePaintOrder$config($receiver, null, config);
    },
    getSemanticsData$0: function() {
      var t1, elevation, customSemanticsActionIds, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, _this = this, _box_0 = {};
      _box_0.flags = _this._flags;
      _box_0.actions = _this._actionsAsBits;
      _box_0.label = _this._semantics$_label;
      _box_0.hint = _this._hint;
      _box_0.value = _this._semantics$_value;
      _box_0.increasedValue = _this._increasedValue;
      _box_0.decreasedValue = _this._decreasedValue;
      _box_0.textDirection = _this._semantics$_textDirection;
      t1 = _this.tags;
      _box_0.mergedTags = t1 == null ? null : P.LinkedHashSet_LinkedHashSet$from(t1, type$.SemanticsTag);
      _box_0.textSelection = _this._textSelection;
      _box_0.scrollChildCount = _this._scrollChildCount;
      _box_0.scrollIndex = _this._scrollIndex;
      _box_0.scrollPosition = _this._scrollPosition;
      _box_0.scrollExtentMax = _this._scrollExtentMax;
      _box_0.scrollExtentMin = _this._scrollExtentMin;
      _box_0.platformViewId = _this._platformViewId;
      _box_0.maxValueLength = _this._maxValueLength;
      _box_0.currentValueLength = _this._currentValueLength;
      elevation = _this._semantics$_elevation;
      _box_0.thickness = _this._semantics$_thickness;
      customSemanticsActionIds = P.LinkedHashSet_LinkedHashSet$_empty(type$.int);
      for (t1 = _this._customSemanticsActions, t1 = t1.get$keys(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        customSemanticsActionIds.add$1(0, A.CustomSemanticsAction_getIdentifier(t1.get$current(t1)));
      _this._semantics$_hintOverrides != null;
      if (_this._mergeAllDescendantsIntoThisNode)
        _this._visitDescendants$1(new A.SemanticsNode_getSemanticsData_closure(_box_0, _this, customSemanticsActionIds));
      t1 = _box_0.flags;
      t2 = _box_0.actions;
      t3 = _box_0.label;
      t4 = _box_0.value;
      t5 = _box_0.increasedValue;
      t6 = _box_0.decreasedValue;
      t7 = _box_0.hint;
      t8 = _box_0.textDirection;
      t9 = _this._semantics$_rect;
      t10 = _this._semantics$_transform;
      t11 = _box_0.thickness;
      t12 = _box_0.mergedTags;
      t13 = _box_0.textSelection;
      t14 = _box_0.scrollChildCount;
      t15 = _box_0.scrollIndex;
      t16 = _box_0.scrollPosition;
      t17 = _box_0.scrollExtentMax;
      t18 = _box_0.scrollExtentMin;
      t19 = _box_0.platformViewId;
      t20 = _box_0.maxValueLength;
      t21 = _box_0.currentValueLength;
      t22 = customSemanticsActionIds.toList$0(0);
      C.JSArray_methods.sort$0(t22);
      return new A.SemanticsData(t1, t2, t3, t4, t5, t6, t7, t8, t13, t14, t15, t16, t17, t18, t19, t20, t21, t9, t12, t10, elevation, t11, t22);
    },
    _addToUpdate$2: function(builder, customSemanticsActionIdsUpdate) {
      var childrenInTraversalOrder, childrenInHitTestOrder, childCount, sortedChildren, i, t1, t2, customSemanticsActionIds, t3, t4, t5, t6, t7, _this = this,
        data = _this.getSemanticsData$0();
      if (!_this.get$hasChildren() || _this._mergeAllDescendantsIntoThisNode) {
        childrenInTraversalOrder = $.$get$SemanticsNode__kEmptyChildList();
        childrenInHitTestOrder = childrenInTraversalOrder;
      } else {
        childCount = _this._semantics$_children.length;
        sortedChildren = _this._childrenInTraversalOrder$0();
        childrenInTraversalOrder = new Int32Array(childCount);
        for (i = 0; i < childCount; ++i)
          childrenInTraversalOrder[i] = sortedChildren[i].id;
        childrenInHitTestOrder = new Int32Array(childCount);
        for (i = childCount - 1, t1 = _this._semantics$_children; i >= 0; --i)
          childrenInHitTestOrder[i] = t1[childCount - i - 1].id;
      }
      t1 = data.customSemanticsActionIds;
      t2 = t1.length;
      if (t2 !== 0) {
        customSemanticsActionIds = new Int32Array(t2);
        for (i = 0; i < t1.length; ++i) {
          t2 = t1[i];
          customSemanticsActionIds[i] = t2;
          customSemanticsActionIdsUpdate.add$1(0, t2);
        }
      } else
        customSemanticsActionIds = null;
      t1 = data.scrollChildCount;
      if (t1 == null)
        t1 = 0;
      t2 = data.scrollIndex;
      if (t2 == null)
        t2 = 0;
      t3 = data.scrollPosition;
      if (t3 == null)
        t3 = 0 / 0;
      t4 = data.scrollExtentMax;
      if (t4 == null)
        t4 = 0 / 0;
      t5 = data.scrollExtentMin;
      if (t5 == null)
        t5 = 0 / 0;
      t6 = data.transform;
      t6 = t6 == null ? null : t6._m4storage;
      if (t6 == null)
        t6 = $.$get$SemanticsNode__kIdentityTransform();
      t7 = customSemanticsActionIds == null ? $.$get$SemanticsNode__kEmptyCustomSemanticsActionsList() : customSemanticsActionIds;
      t6.length;
      builder._nodeUpdates.push(new H.SemanticsNodeUpdate(_this.id, data.flags, data.actions, -1, -1, t1, t2, t3, t4, t5, data.rect, data.label, data.hint, data.value, data.increasedValue, data.decreasedValue, data.textDirection, H.toMatrix32(t6), childrenInTraversalOrder, childrenInHitTestOrder, t7));
      _this._semantics$_dirty = false;
    },
    _childrenInTraversalOrder$0: function() {
      var t2, childrenInDefaultOrder, everythingSorted, sortNodes, lastSortKey, position, child, sortKey, isCompatibleWithPreviousSortKey, _this = this,
        inheritedTextDirection = _this._semantics$_textDirection,
        t1 = type$.SemanticsNode,
        ancestor = t1._as(B.AbstractNode.prototype.get$parent.call(_this, _this));
      while (true) {
        t2 = inheritedTextDirection == null;
        if (!(t2 && ancestor != null))
          break;
        inheritedTextDirection = ancestor._semantics$_textDirection;
        ancestor = t1._as(B.AbstractNode.prototype.get$parent.call(ancestor, ancestor));
      }
      childrenInDefaultOrder = _this._semantics$_children;
      if (!t2)
        childrenInDefaultOrder = A._childrenInDefaultOrder(childrenInDefaultOrder, inheritedTextDirection);
      t1 = type$.JSArray__TraversalSortNode;
      everythingSorted = H.setRuntimeTypeInfo([], t1);
      sortNodes = H.setRuntimeTypeInfo([], t1);
      for (lastSortKey = null, position = 0; position < childrenInDefaultOrder.length; ++position) {
        child = childrenInDefaultOrder[position];
        sortKey = child._sortKey;
        lastSortKey = position > 0 ? childrenInDefaultOrder[position - 1]._sortKey : null;
        if (position !== 0)
          if (J.get$runtimeType$(sortKey).$eq(0, J.get$runtimeType$(lastSortKey))) {
            if (sortKey != null)
              lastSortKey.toString;
            isCompatibleWithPreviousSortKey = true;
          } else
            isCompatibleWithPreviousSortKey = false;
        else
          isCompatibleWithPreviousSortKey = true;
        if (!isCompatibleWithPreviousSortKey && sortNodes.length !== 0) {
          if (lastSortKey != null) {
            if (!!sortNodes.immutable$list)
              H.throwExpression(P.UnsupportedError$("sort"));
            t1 = sortNodes.length - 1;
            if (t1 - 0 <= 32)
              H.Sort__insertionSort(sortNodes, 0, t1, J._interceptors_JSArray__compareAny$closure());
            else
              H.Sort__dualPivotQuicksort(sortNodes, 0, t1, J._interceptors_JSArray__compareAny$closure());
          }
          C.JSArray_methods.addAll$1(everythingSorted, sortNodes);
          C.JSArray_methods.set$length(sortNodes, 0);
        }
        sortNodes.push(new A._TraversalSortNode(child, sortKey, position));
      }
      if (lastSortKey != null)
        C.JSArray_methods.sort$0(sortNodes);
      C.JSArray_methods.addAll$1(everythingSorted, sortNodes);
      return new H.MappedListIterable(everythingSorted, new A.SemanticsNode__childrenInTraversalOrder_closure(), type$.MappedListIterable__TraversalSortNode_SemanticsNode).toList$0(0);
    },
    sendEvent$1: function($event) {
      if (this._node$_owner == null)
        return;
      C.BasicMessageChannel_8hp.send$1(0, $event.toMap$1$nodeId(this.id));
    },
    toStringShort$0: function() {
      return "SemanticsNode#" + this.id;
    },
    toDiagnosticsNode$3$childOrder$name$style: function(childOrder, $name, style) {
      return new A._SemanticsDiagnosticableNode(childOrder, this, $name, true, true, null, style);
    },
    toDiagnosticsNode$1$style: function(style) {
      return this.toDiagnosticsNode$3$childOrder$name$style(C.DebugSemanticsDumpOrder_1, null, style);
    },
    toDiagnosticsNode$0: function() {
      return this.toDiagnosticsNode$3$childOrder$name$style(C.DebugSemanticsDumpOrder_1, null, C.DiagnosticsTreeStyle_1);
    },
    debugDescribeChildren$1$childOrder: function(childOrder) {
      var t1 = this.debugListChildrenInOrder$1(childOrder);
      t1.toString;
      return new H.MappedListIterable(t1, new A.SemanticsNode_debugDescribeChildren_closure(childOrder), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,DiagnosticsNode>")).toList$0(0);
    },
    debugDescribeChildren$0: function() {
      return this.debugDescribeChildren$1$childOrder(C.DebugSemanticsDumpOrder_0);
    },
    debugListChildrenInOrder$1: function(childOrder) {
      var t1 = this._semantics$_children;
      if (t1 == null)
        return C.List_empty6;
      switch (childOrder) {
        case C.DebugSemanticsDumpOrder_0:
          return t1;
        case C.DebugSemanticsDumpOrder_1:
          return this._childrenInTraversalOrder$0();
      }
      return null;
    },
    $isDiagnosticableTree: 1
  };
  A.SemanticsNode_getSemanticsData_closure.prototype = {
    call$1: function(node) {
      var t2, t3,
        t1 = this._box_0;
      t1.flags = t1.flags | node._flags;
      t1.actions = t1.actions | node._actionsAsBits;
      if (t1.textDirection == null)
        t1.textDirection = node._semantics$_textDirection;
      t1.textSelection = node._textSelection;
      if (t1.scrollChildCount == null)
        t1.scrollChildCount = node._scrollChildCount;
      if (t1.scrollIndex == null)
        t1.scrollIndex = node._scrollIndex;
      if (t1.scrollPosition == null)
        t1.scrollPosition = node._scrollPosition;
      if (t1.scrollExtentMax == null)
        t1.scrollExtentMax = node._scrollExtentMax;
      if (t1.scrollExtentMin == null)
        t1.scrollExtentMin = node._scrollExtentMin;
      t1.platformViewId = node._platformViewId;
      t1.maxValueLength = node._maxValueLength;
      t1.currentValueLength = node._currentValueLength;
      t2 = t1.value;
      if (t2 === "" || t2 == null)
        t1.value = node._semantics$_value;
      t2 = t1.increasedValue;
      if (t2 === "" || t2 == null)
        t1.increasedValue = node._increasedValue;
      t2 = t1.decreasedValue;
      if (t2 === "" || t2 == null)
        t1.decreasedValue = node._decreasedValue;
      t2 = node.tags;
      if (t2 != null) {
        t3 = t1.mergedTags;
        (t3 == null ? t1.mergedTags = P.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsTag) : t3).addAll$1(0, t2);
      }
      if (node._customSemanticsActions != null)
        for (t2 = this.$this._customSemanticsActions, t2 = t2.get$keys(t2), t2 = t2.get$iterator(t2), t3 = this.customSemanticsActionIds; t2.moveNext$0();)
          t3.add$1(0, A.CustomSemanticsAction_getIdentifier(t2.get$current(t2)));
      node._semantics$_hintOverrides != null;
      t2 = t1.label;
      t3 = t1.textDirection;
      t1.label = A._concatStrings(node._semantics$_label, node._semantics$_textDirection, t2, t3);
      t3 = t1.hint;
      t2 = t1.textDirection;
      t1.hint = A._concatStrings(node._hint, node._semantics$_textDirection, t3, t2);
      t1.thickness = Math.max(t1.thickness, node._semantics$_thickness + node._semantics$_elevation);
      return true;
    }
  };
  A.SemanticsNode__childrenInTraversalOrder_closure.prototype = {
    call$1: function(sortNode) {
      return sortNode.node;
    }
  };
  A.SemanticsNode_debugDescribeChildren_closure.prototype = {
    call$1: function(node) {
      node.toString;
      return new A._SemanticsDiagnosticableNode(this.childOrder, node, null, true, true, null, C.DiagnosticsTreeStyle_1);
    }
  };
  A._BoxEdge.prototype = {
    compareTo$1: function(_, other) {
      return C.JSNumber_methods.toInt$0(J.get$sign$in(this.offset - other.offset));
    },
    $isComparable: 1
  };
  A._SemanticsSortGroup.prototype = {
    compareTo$1: function(_, other) {
      return C.JSNumber_methods.toInt$0(J.get$sign$in(this.startOffset - other.startOffset));
    },
    sortedWithinVerticalGroup$0: function() {
      var t1, t2, _i, child, t3, t4, t5, t6, horizontalGroups, group, depth, edge,
        edges = H.setRuntimeTypeInfo([], type$.JSArray__BoxEdge);
      for (t1 = this.nodes, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        t3 = child._semantics$_rect;
        t4 = t3.left;
        t5 = t3.top;
        t6 = t3.right;
        t3 = t3.bottom;
        edges.push(new A._BoxEdge(true, A._pointInParentCoordinates(child, new P.Offset(t4 - -0.1, t5 - -0.1))._dx, child));
        edges.push(new A._BoxEdge(false, A._pointInParentCoordinates(child, new P.Offset(t6 + -0.1, t3 + -0.1))._dx, child));
      }
      C.JSArray_methods.sort$0(edges);
      horizontalGroups = H.setRuntimeTypeInfo([], type$.JSArray__SemanticsSortGroup);
      for (t1 = edges.length, t2 = this.textDirection, t3 = type$.JSArray_SemanticsNode, group = null, depth = 0, _i = 0; _i < edges.length; edges.length === t1 || (0, H.throwConcurrentModificationError)(edges), ++_i) {
        edge = edges[_i];
        if (edge.isLeadingEdge) {
          ++depth;
          if (group == null)
            group = new A._SemanticsSortGroup(edge.offset, t2, H.setRuntimeTypeInfo([], t3));
          group.nodes.push(edge.node);
        } else
          --depth;
        if (depth === 0) {
          horizontalGroups.push(group);
          group = null;
        }
      }
      C.JSArray_methods.sort$0(horizontalGroups);
      if (t2 === C.TextDirection_0)
        horizontalGroups = new H.ReversedListIterable(horizontalGroups, type$.ReversedListIterable__SemanticsSortGroup).toList$0(0);
      t1 = H._arrayInstanceType(horizontalGroups)._eval$1("ExpandIterable<1,SemanticsNode>");
      return P.List_List$from(new H.ExpandIterable(horizontalGroups, new A._SemanticsSortGroup_sortedWithinVerticalGroup_closure(), t1), true, t1._eval$1("Iterable.E"));
    },
    sortedWithinKnot$0: function() {
      var t3, nodeMap, edges, t4, t5, t6, _i, node, t7, t8, t9, t10, center, _i0, nextNode, t11, t12, t13, nextCenter, direction, isLtrAndForward, isRtlAndForward, sortedIds, startNodes,
        t1 = this.nodes,
        t2 = t1.length;
      if (t2 <= 1)
        return t1;
      t3 = type$.int;
      nodeMap = P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.SemanticsNode);
      edges = P.LinkedHashMap_LinkedHashMap$_empty(t3, t3);
      for (t4 = this.textDirection, t5 = t4 === C.TextDirection_0, t4 = t4 === C.TextDirection_1, t6 = t2, _i = 0; _i < t6; t10 === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i, t6 = t10) {
        node = t1[_i];
        t6 = node.id;
        nodeMap.$indexSet(0, t6, node);
        t7 = node._semantics$_rect;
        t8 = t7.left;
        t9 = t7.right;
        t10 = t7.top;
        center = A._pointInParentCoordinates(node, new P.Offset(t8 + (t9 - t8) / 2, t10 + (t7.bottom - t10) / 2));
        for (t7 = t1.length, t8 = center._dx, t9 = center._dy, _i0 = 0; t10 = t1.length, _i0 < t10; t1.length === t7 || (0, H.throwConcurrentModificationError)(t1), ++_i0) {
          nextNode = t1[_i0];
          if ((node == null ? nextNode == null : node === nextNode) || edges.$index(0, nextNode.id) === t6)
            continue;
          t10 = nextNode._semantics$_rect;
          t11 = t10.left;
          t12 = t10.right;
          t13 = t10.top;
          nextCenter = A._pointInParentCoordinates(nextNode, new P.Offset(t11 + (t12 - t11) / 2, t13 + (t10.bottom - t13) / 2));
          direction = Math.atan2(nextCenter._dy - t9, nextCenter._dx - t8);
          isLtrAndForward = t4 && -0.7853981633974483 < direction && direction < 2.356194490192345;
          if (t5)
            isRtlAndForward = direction < -2.356194490192345 || direction > 2.356194490192345;
          else
            isRtlAndForward = false;
          if (isLtrAndForward || isRtlAndForward)
            edges.$indexSet(0, t6, nextNode.id);
        }
      }
      sortedIds = H.setRuntimeTypeInfo([], type$.JSArray_int);
      startNodes = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1)._eval$1("JSArray<1>"));
      C.JSArray_methods.sort$1(startNodes, new A._SemanticsSortGroup_sortedWithinKnot_closure());
      new H.MappedListIterable(startNodes, new A._SemanticsSortGroup_sortedWithinKnot_closure0(), H._arrayInstanceType(startNodes)._eval$1("MappedListIterable<1,int>")).forEach$1(0, new A._SemanticsSortGroup_sortedWithinKnot_search(P.LinkedHashSet_LinkedHashSet$_empty(t3), edges, sortedIds));
      t1 = new H.MappedListIterable(sortedIds, new A._SemanticsSortGroup_sortedWithinKnot_closure1(nodeMap), type$.MappedListIterable_int_SemanticsNode).toList$0(0);
      return new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>")).toList$0(0);
    }
  };
  A._SemanticsSortGroup_sortedWithinVerticalGroup_closure.prototype = {
    call$1: function(group) {
      return group.sortedWithinKnot$0();
    }
  };
  A._SemanticsSortGroup_sortedWithinKnot_closure.prototype = {
    call$2: function(a, b) {
      var bTopLeft, verticalDiff,
        t1 = a._semantics$_rect,
        aTopLeft = A._pointInParentCoordinates(a, new P.Offset(t1.left, t1.top));
      t1 = b._semantics$_rect;
      bTopLeft = A._pointInParentCoordinates(b, new P.Offset(t1.left, t1.top));
      verticalDiff = J.compareTo$1$ns(aTopLeft._dy, bTopLeft._dy);
      if (verticalDiff !== 0)
        return -verticalDiff;
      return -J.compareTo$1$ns(aTopLeft._dx, bTopLeft._dx);
    },
    $signature: 34
  };
  A._SemanticsSortGroup_sortedWithinKnot_search.prototype = {
    call$1: function(id) {
      var _this = this,
        t1 = _this.visitedIds;
      if (t1.contains$1(0, id))
        return;
      t1.add$1(0, id);
      t1 = _this.edges;
      if (t1.containsKey$1(0, id))
        _this.call$1(t1.$index(0, id));
      _this.sortedIds.push(id);
    }
  };
  A._SemanticsSortGroup_sortedWithinKnot_closure0.prototype = {
    call$1: function(node) {
      return node.id;
    }
  };
  A._SemanticsSortGroup_sortedWithinKnot_closure1.prototype = {
    call$1: function(id) {
      return this.nodeMap.$index(0, id);
    }
  };
  A._childrenInDefaultOrder_closure.prototype = {
    call$1: function(group) {
      return group.sortedWithinVerticalGroup$0();
    }
  };
  A._TraversalSortNode.prototype = {
    compareTo$1: function(_, other) {
      var t2,
        t1 = this.sortKey;
      if (t1 != null)
        t2 = (other == null ? null : other.sortKey) == null;
      else
        t2 = true;
      if (t2)
        return this.position - other.position;
      return t1.compareTo$1(0, other.sortKey);
    },
    $isComparable: 1
  };
  A.SemanticsOwner.prototype = {
    sendSemanticsUpdate$0: function() {
      var customSemanticsActionIds, visitedNodes, t2, t3, t4, t5, localDirtyNodes, t6, t7, _i, node, t8, builder, _this = this,
        t1 = _this._semantics$_dirtyNodes;
      if (t1._collection$_length === 0)
        return;
      customSemanticsActionIds = P.LinkedHashSet_LinkedHashSet$_empty(type$.int);
      visitedNodes = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNode);
      for (t2 = type$.SemanticsNode, t3 = H._instanceType(t1)._eval$1("WhereIterable<1>"), t4 = t3._eval$1("Iterable.E"), t5 = _this._detachedNodes; t1._collection$_length !== 0;) {
        localDirtyNodes = P.List_List$from(new H.WhereIterable(t1, new A.SemanticsOwner_sendSemanticsUpdate_closure(_this), t3), true, t4);
        t1.clear$0(0);
        t5.clear$0(0);
        t6 = new A.SemanticsOwner_sendSemanticsUpdate_closure0();
        if (!!localDirtyNodes.immutable$list)
          H.throwExpression(P.UnsupportedError$("sort"));
        t7 = localDirtyNodes.length - 1;
        if (t7 - 0 <= 32)
          H.Sort__insertionSort(localDirtyNodes, 0, t7, t6);
        else
          H.Sort__dualPivotQuicksort(localDirtyNodes, 0, t7, t6);
        C.JSArray_methods.addAll$1(visitedNodes, localDirtyNodes);
        for (t6 = localDirtyNodes.length, _i = 0; _i < localDirtyNodes.length; localDirtyNodes.length === t6 || (0, H.throwConcurrentModificationError)(localDirtyNodes), ++_i) {
          node = localDirtyNodes[_i];
          if (node._mergeAllDescendantsIntoThisNode || node._isMergedIntoParent) {
            t7 = J.getInterceptor$x(node);
            if (t2._as(B.AbstractNode.prototype.get$parent.call(t7, node)) != null) {
              t8 = t2._as(B.AbstractNode.prototype.get$parent.call(t7, node));
              t8 = t8._mergeAllDescendantsIntoThisNode || t8._isMergedIntoParent;
            } else
              t8 = false;
            if (t8)
              t2._as(B.AbstractNode.prototype.get$parent.call(t7, node))._markDirty$0();
          }
        }
      }
      C.JSArray_methods.sort$1(visitedNodes, new A.SemanticsOwner_sendSemanticsUpdate_closure1());
      builder = new P.SemanticsUpdateBuilder(H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNodeUpdate));
      for (t2 = visitedNodes.length, _i = 0; _i < visitedNodes.length; visitedNodes.length === t2 || (0, H.throwConcurrentModificationError)(visitedNodes), ++_i) {
        node = visitedNodes[_i];
        if (node._semantics$_dirty && node._node$_owner != null)
          node._addToUpdate$2(builder, customSemanticsActionIds);
      }
      t1.clear$0(0);
      for (t1 = P._LinkedHashSetIterator$(customSemanticsActionIds, customSemanticsActionIds._collection$_modifications); t1.moveNext$0();)
        $.CustomSemanticsAction__actions.$index(0, t1._collection$_current).toString;
      $.SemanticsBinding__instance.toString;
      $.$get$window().toString;
      H.EngineSemanticsOwner_instance().updateSemantics$1(new H.SemanticsUpdate(builder._nodeUpdates));
      _this.notifyListeners$0();
    },
    _getSemanticsActionHandlerForId$2: function(id, action) {
      var t2, t1 = {},
        result = t1.result = this._nodes.$index(0, id);
      if (result != null)
        t2 = (result._mergeAllDescendantsIntoThisNode || result._isMergedIntoParent) && !result._actions.containsKey$1(0, action);
      else
        t2 = false;
      if (t2)
        result._visitDescendants$1(new A.SemanticsOwner__getSemanticsActionHandlerForId_closure(t1, action));
      t2 = t1.result;
      if (t2 == null || !t2._actions.containsKey$1(0, action))
        return null;
      return t1.result._actions.$index(0, action);
    },
    performAction$3: function(id, action, args) {
      var handler = this._getSemanticsActionHandlerForId$2(id, action);
      if (handler != null) {
        handler.call$1(args);
        return;
      }
      if (action === C.SemanticsAction_256 && this._nodes.$index(0, id)._showOnScreen != null)
        this._nodes.$index(0, id)._showOnScreen.call$0();
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this);
    }
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure.prototype = {
    call$1: function(node) {
      return !this.$this._detachedNodes.contains$1(0, node);
    }
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure0.prototype = {
    call$2: function(a, b) {
      return a._node$_depth - b._node$_depth;
    },
    $signature: 34
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure1.prototype = {
    call$2: function(a, b) {
      return a._node$_depth - b._node$_depth;
    },
    $signature: 34
  };
  A.SemanticsOwner__getSemanticsActionHandlerForId_closure.prototype = {
    call$1: function(node) {
      if (node._actions.containsKey$1(0, this.action)) {
        this._box_0.result = node;
        return false;
      }
      return true;
    }
  };
  A.SemanticsConfiguration.prototype = {
    _addAction$2: function(action, handler) {
      var _this = this;
      _this._actions.$indexSet(0, action, handler);
      _this._actionsAsBits = _this._actionsAsBits | action.index;
      _this._hasBeenAnnotated = true;
    },
    _addArgumentlessAction$2: function(action, handler) {
      this._addAction$2(action, new A.SemanticsConfiguration__addArgumentlessAction_closure(handler));
    },
    set$onMoveCursorForwardByCharacter: function(value) {
      this._addAction$2(C.SemanticsAction_512, new A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure(value));
    },
    set$onMoveCursorBackwardByCharacter: function(value) {
      this._addAction$2(C.SemanticsAction_1024, new A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure(value));
    },
    set$onMoveCursorForwardByWord: function(value) {
      this._addAction$2(C.SemanticsAction_524288, new A.SemanticsConfiguration_onMoveCursorForwardByWord_closure(value));
    },
    set$onMoveCursorBackwardByWord: function(value) {
      this._addAction$2(C.SemanticsAction_1048576, new A.SemanticsConfiguration_onMoveCursorBackwardByWord_closure(value));
    },
    set$onSetSelection: function(value) {
      this._addAction$2(C.SemanticsAction_2048, new A.SemanticsConfiguration_onSetSelection_closure(value));
    },
    set$scrollChildCount: function(value) {
      if (value == this._scrollChildCount)
        return;
      this._scrollChildCount = value;
      this._hasBeenAnnotated = true;
    },
    set$scrollIndex: function(value) {
      if (value == this._scrollIndex)
        return;
      this._scrollIndex = value;
      this._hasBeenAnnotated = true;
    },
    set$maxValueLength: function(value) {
      return;
    },
    set$currentValueLength: function(value) {
      return;
    },
    set$hintOverrides: function(value) {
      if (value == null)
        return;
      this._semantics$_hintOverrides = value;
      this._hasBeenAnnotated = true;
    },
    set$elevation: function(_, value) {
      if (value == this._semantics$_elevation)
        return;
      this._semantics$_elevation = value;
      this._hasBeenAnnotated = true;
    },
    _setFlag$2: function(flag, value) {
      var _this = this,
        t1 = _this._flags,
        t2 = flag.index;
      if (value)
        _this._flags = t1 | t2;
      else
        _this._flags = t1 & ~t2;
      _this._hasBeenAnnotated = true;
    },
    isCompatibleWith$1: function(other) {
      var t1, _this = this;
      if (other == null || !other._hasBeenAnnotated || !_this._hasBeenAnnotated)
        return true;
      if ((_this._actionsAsBits & other._actionsAsBits) !== 0)
        return false;
      if ((_this._flags & other._flags) !== 0)
        return false;
      t1 = _this._semantics$_value;
      if (t1 != null)
        if (t1.length !== 0) {
          t1 = other._semantics$_value;
          t1 = t1 != null && t1.length !== 0;
        } else
          t1 = false;
      else
        t1 = false;
      if (t1)
        return false;
      return true;
    },
    absorb$1: function(child) {
      var t1, t2, _this = this;
      if (!child._hasBeenAnnotated)
        return;
      _this._actions.addAll$1(0, child._actions);
      _this._customSemanticsActions.addAll$1(0, child._customSemanticsActions);
      _this._actionsAsBits = _this._actionsAsBits | child._actionsAsBits;
      _this._flags = _this._flags | child._flags;
      _this._textSelection = child._textSelection;
      if (_this._scrollPosition == null)
        _this._scrollPosition = child._scrollPosition;
      if (_this._scrollExtentMax == null)
        _this._scrollExtentMax = child._scrollExtentMax;
      if (_this._scrollExtentMin == null)
        _this._scrollExtentMin = child._scrollExtentMin;
      if (_this._semantics$_hintOverrides == null)
        _this._semantics$_hintOverrides = child._semantics$_hintOverrides;
      if (_this._indexInParent == null)
        _this._indexInParent = child._indexInParent;
      if (_this._scrollIndex == null)
        _this._scrollIndex = child._scrollIndex;
      if (_this._scrollChildCount == null)
        _this._scrollChildCount = child._scrollChildCount;
      _this._platformViewId = child._platformViewId;
      _this._maxValueLength = child._maxValueLength;
      _this._currentValueLength = child._currentValueLength;
      t1 = _this._semantics$_textDirection;
      if (t1 == null) {
        t1 = _this._semantics$_textDirection = child._semantics$_textDirection;
        _this._hasBeenAnnotated = true;
      }
      if (_this._sortKey == null)
        _this._sortKey = child._sortKey;
      t2 = _this._semantics$_label;
      _this._semantics$_label = A._concatStrings(child._semantics$_label, child._semantics$_textDirection, t2, t1);
      t1 = _this._decreasedValue;
      if (t1 === "" || t1 == null)
        _this._decreasedValue = child._decreasedValue;
      t1 = _this._semantics$_value;
      if (t1 === "" || t1 == null)
        _this._semantics$_value = child._semantics$_value;
      t1 = _this._increasedValue;
      if (t1 === "" || t1 == null)
        _this._increasedValue = child._increasedValue;
      t1 = _this._hint;
      t2 = _this._semantics$_textDirection;
      _this._hint = A._concatStrings(child._hint, child._semantics$_textDirection, t1, t2);
      _this._semantics$_thickness = Math.max(_this._semantics$_thickness, child._semantics$_thickness + child._semantics$_elevation);
      _this._hasBeenAnnotated = _this._hasBeenAnnotated || child._hasBeenAnnotated;
    },
    copy$0: function() {
      var _this = this,
        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.SemanticsAction, type$.void_Function_dynamic),
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.void_Function),
        t3 = new A.SemanticsConfiguration(t1, t2);
      t3._isSemanticBoundary = _this._isSemanticBoundary;
      t3.explicitChildNodes = _this.explicitChildNodes;
      t3.isBlockingSemanticsOfPreviouslyPaintedNodes = _this.isBlockingSemanticsOfPreviouslyPaintedNodes;
      t3._hasBeenAnnotated = _this._hasBeenAnnotated;
      t3._isMergingSemanticsOfDescendants = _this._isMergingSemanticsOfDescendants;
      t3._semantics$_textDirection = _this._semantics$_textDirection;
      t3._sortKey = _this._sortKey;
      t3._semantics$_label = _this._semantics$_label;
      t3._increasedValue = _this._increasedValue;
      t3._semantics$_value = _this._semantics$_value;
      t3._decreasedValue = _this._decreasedValue;
      t3._hint = _this._hint;
      t3._semantics$_hintOverrides = _this._semantics$_hintOverrides;
      t3._semantics$_elevation = _this._semantics$_elevation;
      t3._semantics$_thickness = _this._semantics$_thickness;
      t3._flags = _this._flags;
      t3._tagsForChildren = _this._tagsForChildren;
      t3._textSelection = _this._textSelection;
      t3._scrollPosition = _this._scrollPosition;
      t3._scrollExtentMax = _this._scrollExtentMax;
      t3._scrollExtentMin = _this._scrollExtentMin;
      t3._actionsAsBits = _this._actionsAsBits;
      t3._indexInParent = _this._indexInParent;
      t3._scrollIndex = _this._scrollIndex;
      t3._scrollChildCount = _this._scrollChildCount;
      t3._platformViewId = _this._platformViewId;
      t3._maxValueLength = _this._maxValueLength;
      t3._currentValueLength = _this._currentValueLength;
      t1.addAll$1(0, _this._actions);
      t2.addAll$1(0, _this._customSemanticsActions);
      return t3;
    }
  };
  A.SemanticsConfiguration__addArgumentlessAction_closure.prototype = {
    call$1: function(args) {
      this.handler.call$0();
    },
    $signature: 3
  };
  A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure.prototype = {
    call$1: function(args) {
      this.value.call$1(H._asBoolS(args));
    },
    $signature: 3
  };
  A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure.prototype = {
    call$1: function(args) {
      this.value.call$1(H._asBoolS(args));
    },
    $signature: 3
  };
  A.SemanticsConfiguration_onMoveCursorForwardByWord_closure.prototype = {
    call$1: function(args) {
      this.value.call$1(H._asBoolS(args));
    },
    $signature: 3
  };
  A.SemanticsConfiguration_onMoveCursorBackwardByWord_closure.prototype = {
    call$1: function(args) {
      this.value.call$1(H._asBoolS(args));
    },
    $signature: 3
  };
  A.SemanticsConfiguration_onSetSelection_closure.prototype = {
    call$1: function(args) {
      var selection = J.cast$2$0$ax(type$.Map_dynamic_dynamic._as(args), type$.String, type$.int);
      this.value.call$1(X.TextSelection$(selection.$index(0, "base"), selection.$index(0, "extent")));
    },
    $signature: 3
  };
  A.DebugSemanticsDumpOrder.prototype = {
    toString$0: function(_) {
      return this._semantics$_name;
    }
  };
  A.SemanticsSortKey.prototype = {
    compareTo$1: function(_, other) {
      var t1;
      other.toString;
      t1 = this.doCompare$1(other);
      return t1;
    },
    $isComparable: 1,
    get$name: function(receiver) {
      return this.name;
    }
  };
  A.OrdinalSortKey.prototype = {
    doCompare$1: function(other) {
      var t1 = other.order === this.order;
      if (t1)
        return 0;
      return C.JSInt_methods.compareTo$1(this.order, other.order);
    }
  };
  A._SemanticsData_Object_Diagnosticable.prototype = {};
  A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin.prototype = {};
  A._SemanticsSortKey_Object_Diagnosticable.prototype = {};
  E.SemanticsEvent.prototype = {
    toMap$1$nodeId: function(nodeId) {
      var $event = P.LinkedHashMap_LinkedHashMap$_literal(["type", this.type, "data", this.getDataMap$0()], type$.String, type$.dynamic);
      if (nodeId != null)
        $event.$indexSet(0, "nodeId", nodeId);
      return $event;
    },
    toMap$0: function() {
      return this.toMap$1$nodeId(null);
    },
    toString$0: function(_) {
      var _i, key,
        pairs = H.setRuntimeTypeInfo([], type$.JSArray_String),
        dataMap = this.getDataMap$0(),
        t1 = dataMap.get$keys(dataMap),
        sortedKeys = P.List_List$from(t1, true, H._instanceType(t1)._eval$1("Iterable.E"));
      C.JSArray_methods.sort$0(sortedKeys);
      for (t1 = sortedKeys.length, _i = 0; _i < sortedKeys.length; sortedKeys.length === t1 || (0, H.throwConcurrentModificationError)(sortedKeys), ++_i) {
        key = sortedKeys[_i];
        pairs.push(H.S(key) + ": " + H.S(dataMap.$index(0, key)));
      }
      return "SemanticsEvent(" + C.JSArray_methods.join$1(pairs, ", ") + ")";
    }
  };
  E.TooltipSemanticsEvent.prototype = {
    getDataMap$0: function() {
      return P.LinkedHashMap_LinkedHashMap$_literal(["message", this.message], type$.String, type$.dynamic);
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  E.LongPressSemanticsEvent.prototype = {
    getDataMap$0: function() {
      return C.Map_empty3;
    }
  };
  E.TapSemanticEvent.prototype = {
    getDataMap$0: function() {
      return C.Map_empty3;
    }
  };
  Q.AssetBundle.prototype = {
    loadString$2$cache: function(key, cache) {
      return this.loadString$body$AssetBundle(key, true);
    },
    loadString$body$AssetBundle: function(key, cache) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, data;
      var $async$loadString$2$cache = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.load$1(0, key), $async$loadString$2$cache);
            case 3:
              // returning from await.
              data = $async$result;
              if (data == null)
                throw H.wrapException(U.FlutterError_FlutterError("Unable to load asset: " + key));
              if (data.byteLength < 10240) {
                $async$returnValue = C.C_Utf8Codec.decode$1(0, H.NativeUint8List_NativeUint8List$view(data.buffer, 0, null));
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = U.compute(Q.asset_bundle_AssetBundle__utf8decode$closure(), data, 'UTF8 decode for "' + key + '"', type$.ByteData, type$.String);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadString$2$cache, $async$completer);
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "()";
    }
  };
  Q.CachingAssetBundle.prototype = {
    loadString$2$cache: function(key, cache) {
      return this.super$AssetBundle$loadString(key, true);
    }
  };
  Q.PlatformAssetBundle.prototype = {
    load$1: function(_, key) {
      return this.load$body$PlatformAssetBundle(_, key);
    },
    load$body$PlatformAssetBundle: function(_, key) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.ByteData),
        $async$returnValue, port, isFile, t2, hasAuthority, path, encoded, asset, t1, scheme, userInfo, host;
      var $async$load$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = P._Uri__uriEncode(C.List_gnE, key, C.C_Utf8Codec, false);
              scheme = P._Uri__makeScheme(null, 0, 0);
              userInfo = P._Uri__makeUserInfo(null, 0, 0);
              host = P._Uri__makeHost(null, 0, 0, false);
              P._Uri__makeQuery(null, 0, 0, null);
              P._Uri__makeFragment(null, 0, 0);
              port = P._Uri__makePort(null, scheme);
              isFile = scheme === "file";
              if (host == null)
                t2 = userInfo.length !== 0 || port != null || isFile;
              else
                t2 = false;
              if (t2)
                host = "";
              t2 = host == null;
              hasAuthority = !t2;
              path = P._Uri__makePath(t1, 0, t1 == null ? 0 : t1.length, null, scheme, hasAuthority);
              t1 = scheme.length === 0;
              if (t1 && t2 && !C.JSString_methods.startsWith$1(path, "/"))
                path = P._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
              else
                path = P._Uri__removeDotSegments(path);
              t2 && C.JSString_methods.startsWith$1(path, "//") ? "" : host;
              encoded = C.C_Utf8Encoder.convert$1(path);
              $async$goto = 3;
              return P._asyncAwait($.ServicesBinding__instance.ServicesBinding__defaultBinaryMessenger.send$2(0, "flutter/assets", H.NativeByteData_NativeByteData$view(encoded.buffer, 0, null)), $async$load$1);
            case 3:
              // returning from await.
              asset = $async$result;
              if (asset == null)
                throw H.wrapException(U.FlutterError_FlutterError("Unable to load asset: " + key));
              $async$returnValue = asset;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$load$1, $async$completer);
    }
  };
  Q.BinaryMessenger.prototype = {};
  N.ServicesBinding.prototype = {
    handleMemoryPressure$0: function() {
    },
    handleSystemMessage$1: function(systemMessage) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$handleSystemMessage$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              switch (H._asStringS(J.$index$asx(type$.Map_String_dynamic._as(systemMessage), "type"))) {
                case "memoryPressure":
                  $async$self.handleMemoryPressure$0();
                  break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$handleSystemMessage$1, $async$completer);
    },
    _addLicenses$0: function() {
      var $async$_addLicenses$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        switch ($async$errorCode) {
          case 2:
            $async$next = $async$nextWhenCanceled;
            $async$goto = $async$next.pop();
            break;
          case 1:
            $async$currentError = $async$result;
            $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new P._Future($.Zone__current, type$._Future_String);
              rawLicenses = new P._AsyncCompleter(t1, type$._AsyncCompleter_String);
              t2 = type$.Future_Null;
              $async$self.scheduleTask$1$2(new N.ServicesBinding__addLicenses_closure(rawLicenses), C.Priority_100000, t2);
              $async$goto = 3;
              return P._asyncStarHelper(t1, $async$_addLicenses$0, $async$controller);
            case 3:
              // returning from await.
              t1 = new P._Future($.Zone__current, type$._Future_List_LicenseEntry);
              $async$self.scheduleTask$1$2(new N.ServicesBinding__addLicenses_closure0(new P._AsyncCompleter(t1, type$._AsyncCompleter_List_LicenseEntry), rawLicenses), C.Priority_100000, t2);
              $async$goto = 4;
              return P._asyncStarHelper(t1, $async$_addLicenses$0, $async$controller);
            case 4:
              // returning from await.
              $async$temp1 = P;
              $async$goto = 6;
              return P._asyncStarHelper(t1, $async$_addLicenses$0, $async$controller);
            case 6:
              // returning from await.
              $async$goto = 5;
              $async$nextWhenCanceled = [1];
              return P._asyncStarHelper(P._IterationMarker_yieldStar($async$temp1.Stream_Stream$fromIterable($async$result, type$.LicenseEntry)), $async$_addLicenses$0, $async$controller);
            case 5:
              // after yield
            case 1:
              // return
              return P._asyncStarHelper(null, 0, $async$controller);
            case 2:
              // rethrow
              return P._asyncStarHelper($async$currentError, 1, $async$controller);
          }
      });
      var $async$goto = 0,
        $async$controller = P._makeAsyncStarStreamController($async$_addLicenses$0, type$.LicenseEntry),
        $async$nextWhenCanceled, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1, rawLicenses, t2, $async$temp1;
      return P._streamOfController($async$controller);
    },
    readInitialLifecycleStateFromNativeWindow$0: function() {
      if (this.SchedulerBinding__lifecycleState != null)
        return;
      $.$get$window().toString;
      var state = N.ServicesBinding__parseAppLifecycleMessage(null);
      if (state != null)
        this.handleAppLifecycleStateChanged$1(state);
    },
    _handleLifecycleMessage$1: function(message) {
      return this._handleLifecycleMessage$body$ServicesBinding(message);
    },
    _handleLifecycleMessage$body$ServicesBinding: function(message) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this;
      var $async$_handleLifecycleMessage$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.handleAppLifecycleStateChanged$1(N.ServicesBinding__parseAppLifecycleMessage(message));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_handleLifecycleMessage$1, $async$completer);
    }
  };
  N.ServicesBinding__addLicenses_closure.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.rawLicenses.complete$1(0, $.$get$rootBundle().loadString$2$cache("LICENSE", false));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 21
  };
  N.ServicesBinding__addLicenses_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, $async$temp1, $async$temp2, $async$temp3;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = $async$self.parsedLicenses;
              $async$temp2 = U;
              $async$temp3 = N.binding0_ServicesBinding__parseLicenses$closure();
              $async$goto = 2;
              return P._asyncAwait($async$self.rawLicenses.future, $async$call$0);
            case 2:
              // returning from await.
              $async$temp1.complete$1(0, $async$temp2.compute($async$temp3, $async$result, "parseLicenses", type$.String, type$.List_LicenseEntry));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 21
  };
  N._DefaultBinaryMessenger.prototype = {
    _sendPlatformMessage$2: function(channel, message) {
      var t1 = new P._Future($.Zone__current, type$._Future_ByteData),
        t2 = $.$get$window();
      t2.toString;
      t2.__engine$_sendPlatformMessage$3(channel, message, H.EngineWindow__zonedPlatformMessageResponseCallback(new N._DefaultBinaryMessenger__sendPlatformMessage_closure(new P._AsyncCompleter(t1, type$._AsyncCompleter_ByteData))));
      return t1;
    },
    handlePlatformMessage$3: function(channel, data, callback) {
      return this.handlePlatformMessage$body$_DefaultBinaryMessenger(channel, data, callback);
    },
    handlePlatformMessage$body$_DefaultBinaryMessenger: function(channel, data, callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$next = [], handler, exception, stack, t1, t2, t3, queue, result, exception0, response, $async$exception0;
      var $async$handlePlatformMessage$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              response = null;
              $async$handler = 3;
              handler = $._DefaultBinaryMessenger__handlers.$index(0, channel);
              $async$goto = handler != null ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return P._asyncAwait(handler.call$1(data), $async$handlePlatformMessage$3);
            case 9:
              // returning from await.
              response = $async$result;
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              t1 = $.$get$channelBuffers();
              t2 = callback;
              t3 = t1._messages;
              queue = t3.$index(0, channel);
              if (queue == null) {
                result = new P._RingBuffer(P.ListQueue$(1, type$._StoredMessage), 1, type$._RingBuffer__StoredMessage);
                result._dropItemCallback = t1.get$_onDropItem();
                t3.$indexSet(0, channel, result);
                queue = result;
              }
              if (queue.push$1(new P._StoredMessage(data, t2))) {
                t1 = "Overflow on channel: " + H.S(channel) + ".  Messages on this channel are being discarded in FIFO fashion.  The engine may not be running or you need to adjust the buffer size if of the channel.";
                if (typeof console != "undefined")
                  window.console.error(t1);
              }
              callback = null;
            case 7:
              // join
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception0 = $async$currentError;
              exception = H.unwrapException($async$exception0);
              stack = H.getTraceFromException($async$exception0);
              t1 = U.FlutterErrorDetails$(new U.ErrorDescription(null, false, true, null, null, null, false, ["during a platform message callback"], null, C.DiagnosticLevel_3, null, false, false, null, C.DiagnosticsTreeStyle_7), exception, null, "services library", false, stack);
              $.$get$FlutterError_onError().call$1(t1);
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 4:
              // finally
              $async$handler = 1;
              if (callback != null)
                callback.call$1(response);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$handlePlatformMessage$3, $async$completer);
    },
    send$2: function(_, channel, message) {
      $._DefaultBinaryMessenger__mockHandlers.$index(0, channel);
      return this._sendPlatformMessage$2(channel, message);
    },
    setMessageHandler$2: function(channel, handler) {
      if (handler == null)
        $._DefaultBinaryMessenger__handlers.remove$1(0, channel);
      else
        $._DefaultBinaryMessenger__handlers.$indexSet(0, channel, handler);
      $.$get$channelBuffers().drain$2(channel, new N._DefaultBinaryMessenger_setMessageHandler_closure(this, channel));
    }
  };
  N._DefaultBinaryMessenger__sendPlatformMessage_closure.prototype = {
    call$1: function(reply) {
      var exception, stack, exception0, t1, _null = null;
      try {
        this.completer.complete$1(0, reply);
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        stack = H.getTraceFromException(exception0);
        t1 = U.FlutterErrorDetails$(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["during a platform message response callback"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), exception, _null, "services library", false, stack);
        $.$get$FlutterError_onError().call$1(t1);
      }
    },
    $signature: 17
  };
  N._DefaultBinaryMessenger_setMessageHandler_closure.prototype = {
    call$2: function(data, callback) {
      return this.$call$body$_DefaultBinaryMessenger_setMessageHandler_closure(data, callback);
    },
    $call$body$_DefaultBinaryMessenger_setMessageHandler_closure: function(data, callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this;
      var $async$call$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait($async$self.$this.handlePlatformMessage$3($async$self.channel, data, callback), $async$call$2);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$2, $async$completer);
    }
  };
  G.KeyboardKey.prototype = {};
  G.LogicalKeyboardKey.prototype = {
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this.keyId);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof G.LogicalKeyboardKey && other.keyId === this.keyId;
    }
  };
  G.PhysicalKeyboardKey.prototype = {
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this.usbHidUsage);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof G.PhysicalKeyboardKey && other.usbHidUsage === this.usbHidUsage;
    }
  };
  G._KeyboardKey_Object_Diagnosticable.prototype = {};
  F.MethodCall0.prototype = {
    toString$0: function(_) {
      return "MethodCall(" + this.method + ", " + H.S(this.$arguments) + ")";
    }
  };
  F.PlatformException.prototype = {
    toString$0: function(_) {
      return "PlatformException(" + H.S(this.code) + ", " + H.S(this.message) + ", " + H.S(this.details) + ")";
    },
    $isException: 1,
    get$message: function(receiver) {
      return this.message;
    }
  };
  F.MissingPluginException.prototype = {
    toString$0: function(_) {
      return "MissingPluginException(" + this.message + ")";
    },
    $isException: 1,
    get$message: function(receiver) {
      return this.message;
    }
  };
  U.StringCodec0.prototype = {
    decodeMessage$1: function(message) {
      if (message == null)
        return null;
      return new P.Utf8Decoder(false).convert$1(H.NativeUint8List_NativeUint8List$view(message.buffer, message.byteOffset, message.byteLength));
    },
    encodeMessage$1: function(message) {
      if (message == null)
        return null;
      return H.NativeByteData_NativeByteData$view(C.C_Utf8Encoder.convert$1(message).buffer, 0, null);
    }
  };
  U.JSONMessageCodec0.prototype = {
    encodeMessage$1: function(message) {
      if (message == null)
        return null;
      return C.C_StringCodec.encodeMessage$1(C.C_JsonCodec.encode$1(message));
    },
    decodeMessage$1: function(message) {
      if (message == null)
        return message;
      return C.C_JsonCodec.decode$1(0, C.C_StringCodec.decodeMessage$1(message));
    }
  };
  U.JSONMethodCodec0.prototype = {
    decodeMethodCall$1: function(methodCall) {
      var t1, method, $arguments, _null = null,
        decoded = C.C_JSONMessageCodec.decodeMessage$1(methodCall);
      if (!type$.Map_dynamic_dynamic._is(decoded))
        throw H.wrapException(P.FormatException$("Expected method call Map, got " + H.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      method = t1.$index(decoded, "method");
      $arguments = t1.$index(decoded, "args");
      if (typeof method == "string")
        return new F.MethodCall0(method, $arguments);
      throw H.wrapException(P.FormatException$("Invalid method call: " + H.S(decoded), _null, _null));
    },
    decodeEnvelope$1: function(envelope) {
      var t1, t2, _null = null,
        decoded = C.C_JSONMessageCodec.decodeMessage$1(envelope);
      if (!type$.List_dynamic._is(decoded))
        throw H.wrapException(P.FormatException$("Expected envelope List, got " + H.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      if (t1.get$length(decoded) === 1)
        return t1.$index(decoded, 0);
      if (t1.get$length(decoded) === 3)
        if (typeof t1.$index(decoded, 0) == "string")
          t2 = t1.$index(decoded, 1) == null || typeof t1.$index(decoded, 1) == "string";
        else
          t2 = false;
      else
        t2 = false;
      if (t2)
        throw H.wrapException(new F.PlatformException(H._asStringS(t1.$index(decoded, 0)), H._asStringS(t1.$index(decoded, 1)), t1.$index(decoded, 2)));
      throw H.wrapException(P.FormatException$("Invalid envelope: " + H.S(decoded), _null, _null));
    }
  };
  U.StandardMessageCodec0.prototype = {
    encodeMessage$1: function(message) {
      var buffer, t1, t2, result;
      if (message == null)
        return null;
      buffer = new G.WriteBuffer0();
      t1 = new Uint8Array(0);
      buffer._serialization$_buffer = new N.Uint8Buffer0(t1, t1.length);
      t1 = new DataView(new ArrayBuffer(8));
      buffer._serialization$_eightBytes = t1;
      buffer._serialization$_eightBytesAsList = H.NativeUint8List_NativeUint8List$view(t1.buffer, 0, null);
      this.writeValue$2(0, buffer, message);
      t1 = buffer._serialization$_buffer;
      t2 = t1._typed_buffers$_buffer;
      result = H.NativeByteData_NativeByteData$view(t2.buffer, 0, t1._typed_buffers$_length * t2.BYTES_PER_ELEMENT);
      buffer._serialization$_buffer = null;
      return result;
    },
    decodeMessage$1: function(message) {
      var buffer, result;
      if (message == null)
        return null;
      buffer = new G.ReadBuffer0(message);
      result = this.readValue$1(0, buffer);
      if (buffer._serialization$_position < message.byteLength)
        throw H.wrapException(C.FormatException_oCg);
      return result;
    },
    writeValue$2: function(_, buffer, value) {
      var t1, t2, bytes, _this = this;
      if (value == null)
        buffer._serialization$_buffer._typed_buffers$_add$1(0, 0);
      else if (H._isBool(value)) {
        t1 = value ? 1 : 2;
        buffer._serialization$_buffer._typed_buffers$_add$1(0, t1);
      } else if (typeof value == "number") {
        buffer._serialization$_buffer._typed_buffers$_add$1(0, 6);
        buffer._serialization$_alignTo$1(8);
        t1 = buffer._serialization$_eightBytes;
        t2 = $.$get$Endian_host();
        t1.setFloat64(0, value, C.C_Endian === t2);
        buffer._serialization$_buffer.addAll$1(0, buffer._serialization$_eightBytesAsList);
      } else if (H._isInt(value)) {
        t1 = -2147483648 <= value && value <= 2147483647;
        t2 = buffer._serialization$_buffer;
        if (t1) {
          t2._typed_buffers$_add$1(0, 3);
          t1 = buffer._serialization$_eightBytes;
          t2 = $.$get$Endian_host();
          t1.setInt32(0, value, C.C_Endian === t2);
          buffer._serialization$_buffer.addAll$3(0, buffer._serialization$_eightBytesAsList, 0, 4);
        } else {
          t2._typed_buffers$_add$1(0, 4);
          t1 = buffer._serialization$_eightBytes;
          t2 = $.$get$Endian_host();
          C.NativeByteData_methods.setInt64$3(t1, 0, value, t2);
        }
      } else if (typeof value == "string") {
        buffer._serialization$_buffer._typed_buffers$_add$1(0, 7);
        bytes = C.C_Utf8Encoder.convert$1(value);
        _this.writeSize$2(buffer, bytes.length);
        buffer._serialization$_buffer.addAll$1(0, bytes);
      } else if (type$.Uint8List._is(value)) {
        buffer._serialization$_buffer._typed_buffers$_add$1(0, 8);
        _this.writeSize$2(buffer, value.length);
        buffer._serialization$_buffer.addAll$1(0, value);
      } else if (type$.Int32List._is(value)) {
        buffer._serialization$_buffer._typed_buffers$_add$1(0, 9);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._serialization$_alignTo$1(4);
        buffer._serialization$_buffer.addAll$1(0, H.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 4 * t1));
      } else if (type$.Float64List._is(value)) {
        buffer._serialization$_buffer._typed_buffers$_add$1(0, 11);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._serialization$_alignTo$1(8);
        buffer._serialization$_buffer.addAll$1(0, H.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 8 * t1));
      } else if (type$.List_dynamic._is(value)) {
        buffer._serialization$_buffer._typed_buffers$_add$1(0, 12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); t1.moveNext$0();)
          _this.writeValue$2(0, buffer, t1.get$current(t1));
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer._serialization$_buffer._typed_buffers$_add$1(0, 13);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        t1.forEach$1(value, new U.StandardMessageCodec_writeValue_closure0(_this, buffer));
      } else
        throw H.wrapException(P.ArgumentError$value(value, null, null));
    },
    readValue$1: function(_, buffer) {
      if (!(buffer._serialization$_position < buffer.data.byteLength))
        throw H.wrapException(C.FormatException_oCg);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2: function(type, buffer) {
      var t1, t2, value, $length, list, result, i, t3, _this = this;
      switch (type) {
        case 0:
          return null;
        case 1:
          return true;
        case 2:
          return false;
        case 3:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getInt32(t1, C.C_Endian === t2);
          buffer._serialization$_position += 4;
          return value;
        case 4:
          return buffer.getInt64$0(0);
        case 6:
          buffer._serialization$_alignTo$1(8);
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getFloat64(t1, C.C_Endian === t2);
          buffer._serialization$_position += 8;
          return value;
        case 5:
        case 7:
          return new P.Utf8Decoder(false).convert$1(buffer.getUint8List$1(_this.readSize$1(buffer)));
        case 8:
          return buffer.getUint8List$1(_this.readSize$1(buffer));
        case 9:
          $length = _this.readSize$1(buffer);
          buffer._serialization$_alignTo$1(4);
          t1 = buffer.data;
          list = H.NativeInt32List_NativeInt32List$view(t1.buffer, t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 4 * $length;
          return list;
        case 10:
          return buffer.getInt64List$1(_this.readSize$1(buffer));
        case 11:
          $length = _this.readSize$1(buffer);
          buffer._serialization$_alignTo$1(8);
          t1 = buffer.data;
          list = H.NativeFloat64List_NativeFloat64List$view(t1.buffer, t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 8 * $length;
          return list;
        case 12:
          $length = _this.readSize$1(buffer);
          result = new Array($length);
          result.fixed$length = Array;
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer._serialization$_position;
            if (!(t2 < t1.byteLength))
              H.throwExpression(C.FormatException_oCg);
            buffer._serialization$_position = t2 + 1;
            result[i] = _this.readValueOfType$2(t1.getUint8(t2), buffer);
          }
          return result;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.dynamic;
          result = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer._serialization$_position;
            if (!(t2 < t1.byteLength))
              H.throwExpression(C.FormatException_oCg);
            buffer._serialization$_position = t2 + 1;
            t2 = _this.readValueOfType$2(t1.getUint8(t2), buffer);
            t3 = buffer._serialization$_position;
            if (!(t3 < t1.byteLength))
              H.throwExpression(C.FormatException_oCg);
            buffer._serialization$_position = t3 + 1;
            result.$indexSet(0, t2, _this.readValueOfType$2(t1.getUint8(t3), buffer));
          }
          return result;
        default:
          throw H.wrapException(C.FormatException_oCg);
      }
    },
    writeSize$2: function(buffer, value) {
      var t1, t2;
      if (value < 254)
        buffer._serialization$_buffer._typed_buffers$_add$1(0, value);
      else {
        t1 = buffer._serialization$_buffer;
        if (value <= 65535) {
          t1._typed_buffers$_add$1(0, 254);
          t1 = buffer._serialization$_eightBytes;
          t2 = $.$get$Endian_host();
          t1.setUint16(0, value, C.C_Endian === t2);
          buffer._serialization$_buffer.addAll$3(0, buffer._serialization$_eightBytesAsList, 0, 2);
        } else {
          t1._typed_buffers$_add$1(0, 255);
          t1 = buffer._serialization$_eightBytes;
          t2 = $.$get$Endian_host();
          t1.setUint32(0, value, C.C_Endian === t2);
          buffer._serialization$_buffer.addAll$3(0, buffer._serialization$_eightBytesAsList, 0, 4);
        }
      }
    },
    readSize$1: function(buffer) {
      var t1, t2,
        value = buffer.getUint8$0(0);
      switch (value) {
        case 254:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getUint16(t1, C.C_Endian === t2);
          buffer._serialization$_position += 2;
          return value;
        case 255:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getUint32(t1, C.C_Endian === t2);
          buffer._serialization$_position += 4;
          return value;
        default:
          return value;
      }
    }
  };
  U.StandardMessageCodec_writeValue_closure0.prototype = {
    call$2: function(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(0, t2, key);
      t1.writeValue$2(0, t2, value);
    },
    $signature: 7
  };
  A.BasicMessageChannel.prototype = {
    send$1: function(_, message) {
      return this.send$body$BasicMessageChannel(_, message, this.$ti._precomputed1);
    },
    send$body$BasicMessageChannel: function(_, message, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, t2, $async$temp1;
      var $async$send$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              t2 = $.ServicesBinding__instance;
              t2 = t2.ServicesBinding__defaultBinaryMessenger;
              $async$temp1 = t1;
              $async$goto = 3;
              return P._asyncAwait(t2.send$2(0, $async$self.name, t1.encodeMessage$1(message)), $async$send$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.decodeMessage$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$send$1, $async$completer);
    },
    setMessageHandler$1: function(handler) {
      var t1 = $.ServicesBinding__instance;
      t1 = t1.ServicesBinding__defaultBinaryMessenger;
      t1.setMessageHandler$2(this.name, new A.BasicMessageChannel_setMessageHandler_closure(this, handler));
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  A.BasicMessageChannel_setMessageHandler_closure.prototype = {
    call$1: function(message) {
      return this.$call$body$BasicMessageChannel_setMessageHandler_closure(message);
    },
    $call$body$BasicMessageChannel_setMessageHandler_closure: function(message) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.ByteData),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this.codec;
              $async$temp1 = t1;
              $async$goto = 3;
              return P._asyncAwait($async$self.handler.call$1(t1.decodeMessage$1(message)), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.encodeMessage$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 54
  };
  A.MethodChannel.prototype = {
    _invokeMethod$1$3$arguments$missingOk: function(method, $arguments, missingOk, $T) {
      return this._invokeMethod$body$MethodChannel(method, $arguments, missingOk, $T, $T);
    },
    _invokeMethod$body$MethodChannel: function(method, $arguments, missingOk, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t2, result, t1;
      var $async$_invokeMethod$1$3$arguments$missingOk = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.ServicesBinding__instance;
              t1 = t1.ServicesBinding__defaultBinaryMessenger;
              t2 = $async$self.name;
              $async$goto = 3;
              return P._asyncAwait(t1.send$2(0, t2, C.C_JSONMessageCodec.encodeMessage$1(P.LinkedHashMap_LinkedHashMap$_literal(["method", method, "args", $arguments], type$.String, type$.dynamic))), $async$_invokeMethod$1$3$arguments$missingOk);
            case 3:
              // returning from await.
              result = $async$result;
              if (result == null) {
                if (missingOk) {
                  $async$returnValue = null;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                throw H.wrapException(new F.MissingPluginException("No implementation found for method " + method + " on channel " + t2));
              }
              $async$returnValue = $T._as(C.C_JSONMethodCodec.decodeEnvelope$1(result));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_invokeMethod$1$3$arguments$missingOk, $async$completer);
    },
    setMethodCallHandler$1: function(handler) {
      var t1 = $.ServicesBinding__instance;
      t1 = t1.ServicesBinding__defaultBinaryMessenger;
      t1.setMessageHandler$2(this.name, new A.MethodChannel_setMethodCallHandler_closure(this, handler));
    },
    _handleAsMethodCall$2: function(message, handler) {
      return this._handleAsMethodCall$body$MethodChannel(message, handler);
    },
    _handleAsMethodCall$body$MethodChannel: function(message, handler) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.ByteData),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], e, e0, t1, exception, $call, $async$exception, $async$temp1;
      var $async$_handleAsMethodCall$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $call = C.C_JSONMethodCodec.decodeMethodCall$1(message);
              $async$handler = 4;
              $async$temp1 = C.C_JSONMessageCodec;
              $async$goto = 7;
              return P._asyncAwait(handler.call$1($call), $async$_handleAsMethodCall$2);
            case 7:
              // returning from await.
              t1 = $async$temp1.encodeMessage$1([$async$result]);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (t1 instanceof F.PlatformException) {
                e = t1;
                $async$returnValue = C.C_JSONMessageCodec.encodeMessage$1([e.code, e.message, e.details]);
                // goto return
                $async$goto = 1;
                break;
              } else if (t1 instanceof F.MissingPluginException) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              } else {
                e0 = t1;
                t1 = C.C_JSONMessageCodec.encodeMessage$1(["error", J.toString$0$(e0), null]);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_handleAsMethodCall$2, $async$completer);
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  A.MethodChannel_setMethodCallHandler_closure.prototype = {
    call$1: function(message) {
      return this.$this._handleAsMethodCall$2(message, this.handler);
    },
    $signature: 54
  };
  A.OptionalMethodChannel.prototype = {
    invokeMethod$1$2: function(method, $arguments, $T) {
      return this.invokeMethod$body$OptionalMethodChannel(method, $arguments, $T, $T);
    },
    invokeMethod$1$1: function(method, $T) {
      return this.invokeMethod$1$2(method, null, $T);
    },
    invokeMethod$body$OptionalMethodChannel: function(method, $arguments, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this;
      var $async$invokeMethod$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self.super$MethodChannel$_invokeMethod(method, $arguments, true, $T);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$invokeMethod$1$2, $async$completer);
    }
  };
  B.KeyboardSide.prototype = {
    toString$0: function(_) {
      return this._raw_keyboard$_name;
    }
  };
  B.ModifierKey.prototype = {
    toString$0: function(_) {
      return this._raw_keyboard$_name;
    }
  };
  B.RawKeyEventData.prototype = {
    get$modifiersPressed: function() {
      var _i, key,
        result = P.LinkedHashMap_LinkedHashMap$_empty(type$.ModifierKey, type$.KeyboardSide);
      for (_i = 0; _i < 9; ++_i) {
        key = C.List_0[_i];
        if (this.isModifierPressed$1(key))
          result.$indexSet(0, key, this.getModifierSide$1(key));
      }
      return result;
    }
  };
  B.RawKeyEvent.prototype = {};
  B.RawKeyDownEvent.prototype = {};
  B.RawKeyUpEvent.prototype = {};
  B.RawKeyboard.prototype = {
    _handleKeyEvent$1: function(message) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t2, t3, _i, listener, $event, t1;
      var $async$_handleKeyEvent$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $event = B.RawKeyEvent_RawKeyEvent$fromMessage(type$.Map_String_dynamic._as(message));
              t1 = $event.data;
              if (t1 instanceof B.RawKeyEventDataMacOs && t1.get$logicalKey().$eq(0, C.LogicalKeyboardKey_4294967314_Fn_null)) {
                // goto return
                $async$goto = 1;
                break;
              }
              if ($event instanceof B.RawKeyDownEvent)
                $async$self._keysPressed.$indexSet(0, t1.get$physicalKey(), t1.get$logicalKey());
              if ($event instanceof B.RawKeyUpEvent)
                $async$self._keysPressed.remove$1(0, t1.get$physicalKey());
              $async$self._synchronizeModifiers$1($event);
              t1 = $async$self._raw_keyboard$_listeners;
              if (t1.length === 0) {
                // goto return
                $async$goto = 1;
                break;
              }
              for (t2 = P.List_List$from(t1, true, type$.void_Function_RawKeyEvent), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
                listener = t2[_i];
                if (C.JSArray_methods.contains$1(t1, listener))
                  listener.call$1($event);
              }
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_handleKeyEvent$1, $async$completer);
    },
    _synchronizeModifiers$1: function($event) {
      var t2, t3, mappedKeys, t4,
        t1 = $event.data,
        modifiersPressed = t1.get$modifiersPressed(),
        modifierKeys = P.LinkedHashMap_LinkedHashMap$_empty(type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey);
      for (t2 = modifiersPressed.get$keys(modifiersPressed), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        mappedKeys = $.RawKeyboard__modifierKeyMap.$index(0, new B._ModifierSidePair(t3, modifiersPressed.$index(0, t3)));
        for (t3 = new P._LinkedHashSetIterator(mappedKeys, mappedKeys._collection$_modifications), t3._collection$_cell = mappedKeys._collection$_first; t3.moveNext$0();) {
          t4 = t3._collection$_current;
          modifierKeys.$indexSet(0, t4, $.$get$RawKeyboard__allModifiers().$index(0, t4));
        }
      }
      t2 = this._keysPressed;
      $.RawKeyboard__allModifiersExceptFn.get$keys($.RawKeyboard__allModifiersExceptFn).forEach$1(0, t2.get$remove(t2));
      if (!(t1 instanceof Q.RawKeyEventDataFuchsia) && !(t1 instanceof B.RawKeyEventDataMacOs))
        t2.remove$1(0, C.PhysicalKeyboardKey_18_Fn);
      t2.addAll$1(0, modifierKeys);
    }
  };
  B._ModifierSidePair.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof B._ModifierSidePair && other.modifier == this.modifier && other.side == this.side;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.modifier, this.side, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  B._RawKeyEvent_Object_Diagnosticable.prototype = {};
  Q.RawKeyEventDataAndroid.prototype = {
    get$keyLabel: function() {
      var t1 = this.plainCodePoint;
      return t1 === 0 ? null : H.Primitives_stringFromCharCode(t1 & 2147483647);
    },
    get$physicalKey: function() {
      var foundKey,
        t1 = this.scanCode;
      if (C.Map_FYU44.containsKey$1(0, t1)) {
        t1 = C.Map_FYU44.$index(0, t1);
        return t1 == null ? C.PhysicalKeyboardKey_0_None : t1;
      }
      if ((this.eventSource & 16777232) === 16777232) {
        foundKey = C.Map_Eyiil.$index(0, this.keyCode);
        t1 = J.getInterceptor$(foundKey);
        if (t1.$eq(foundKey, C.LogicalKeyboardKey_gCR))
          return C.PhysicalKeyboardKey_ytW;
        if (t1.$eq(foundKey, C.LogicalKeyboardKey_O7X))
          return C.PhysicalKeyboardKey_G79;
        if (t1.$eq(foundKey, C.LogicalKeyboardKey_muk))
          return C.PhysicalKeyboardKey_4iW;
        if (t1.$eq(foundKey, C.LogicalKeyboardKey_CzM))
          return C.PhysicalKeyboardKey_Q8r;
      }
      return C.PhysicalKeyboardKey_0_None;
    },
    get$logicalKey: function() {
      var keyId, t2, newKey, _this = this,
        t1 = _this.keyCode,
        numPadKey = C.Map_uS2jN.$index(0, t1);
      if (numPadKey != null)
        return numPadKey;
      if (_this.get$keyLabel() != null && _this.get$keyLabel().length !== 0 && !G.LogicalKeyboardKey_isControlCharacter(_this.get$keyLabel())) {
        keyId = 0 | _this.plainCodePoint & 2147483647 & 4294967295;
        t1 = C.Map_hyDV7.$index(0, keyId);
        if (t1 == null) {
          t1 = _this.get$keyLabel();
          t2 = _this.get$keyLabel();
          t1 = new G.LogicalKeyboardKey(keyId, "Key " + t2.toUpperCase(), t1);
        }
        return t1;
      }
      newKey = C.Map_Eyiil.$index(0, t1);
      if (newKey != null)
        return newKey;
      t2 = "Unknown Android key code " + t1;
      newKey = new G.LogicalKeyboardKey((8589934592 | t1 | 1099511627776) >>> 0, t2, null);
      return newKey;
    },
    _raw_keyboard_android$_isLeftRightModifierPressed$4: function(side, anyMask, leftMask, rightMask) {
      var t1 = this.metaState;
      if ((t1 & anyMask) === 0)
        return false;
      switch (side) {
        case C.KeyboardSide_0:
          return true;
        case C.KeyboardSide_3:
          return (t1 & leftMask) !== 0 && (t1 & rightMask) !== 0;
        case C.KeyboardSide_1:
          return (t1 & leftMask) !== 0;
        case C.KeyboardSide_2:
          return (t1 & rightMask) !== 0;
      }
      return false;
    },
    isModifierPressed$1: function(key) {
      var _this = this;
      switch (key) {
        case C.ModifierKey_0:
          return _this._raw_keyboard_android$_isLeftRightModifierPressed$4(C.KeyboardSide_0, 4096, 8192, 16384);
        case C.ModifierKey_1:
          return _this._raw_keyboard_android$_isLeftRightModifierPressed$4(C.KeyboardSide_0, 1, 64, 128);
        case C.ModifierKey_2:
          return _this._raw_keyboard_android$_isLeftRightModifierPressed$4(C.KeyboardSide_0, 2, 16, 32);
        case C.ModifierKey_3:
          return _this._raw_keyboard_android$_isLeftRightModifierPressed$4(C.KeyboardSide_0, 65536, 131072, 262144);
        case C.ModifierKey_4:
          return (_this.metaState & 1048576) !== 0;
        case C.ModifierKey_5:
          return (_this.metaState & 2097152) !== 0;
        case C.ModifierKey_6:
          return (_this.metaState & 4194304) !== 0;
        case C.ModifierKey_7:
          return (_this.metaState & 8) !== 0;
        case C.ModifierKey_8:
          return (_this.metaState & 4) !== 0;
      }
      return false;
    },
    getModifierSide$1: function(key) {
      var t1 = new Q.RawKeyEventDataAndroid_getModifierSide_findSide(this);
      switch (key) {
        case C.ModifierKey_0:
          return t1.call$2(8192, 16384);
        case C.ModifierKey_1:
          return t1.call$2(64, 128);
        case C.ModifierKey_2:
          return t1.call$2(16, 32);
        case C.ModifierKey_3:
          return t1.call$2(131072, 262144);
        case C.ModifierKey_4:
        case C.ModifierKey_5:
        case C.ModifierKey_6:
        case C.ModifierKey_7:
        case C.ModifierKey_8:
          return C.KeyboardSide_3;
      }
      return null;
    },
    toString$0: function(_) {
      var _this = this;
      return "RawKeyEventDataAndroid(keyLabel: " + H.S(_this.get$keyLabel()) + " flags: " + _this.flags + ", codePoint: " + _this.codePoint + ", keyCode: " + _this.keyCode + ", scanCode: " + _this.scanCode + ", metaState: " + _this.metaState + ", modifiers down: " + _this.get$modifiersPressed().toString$0(0) + ")";
    }
  };
  Q.RawKeyEventDataAndroid_getModifierSide_findSide.prototype = {
    call$2: function(leftMask, rightMask) {
      var combinedMask = leftMask | rightMask,
        combined = this.$this.metaState & combinedMask;
      if (combined === leftMask)
        return C.KeyboardSide_1;
      else if (combined === rightMask)
        return C.KeyboardSide_2;
      else if (combined === combinedMask)
        return C.KeyboardSide_3;
      return null;
    }
  };
  Q.RawKeyEventDataFuchsia.prototype = {
    get$logicalKey: function() {
      var t2, t3, newKey,
        t1 = this.codePoint;
      if (t1 !== 0) {
        t2 = H.Primitives_stringFromCharCode(t1);
        t3 = H.Primitives_stringFromCharCode(t1);
        t3 = "Key " + t3;
        return new G.LogicalKeyboardKey((0 | t1 & 4294967295) >>> 0, t3, t2);
      }
      t1 = this.hidUsage;
      newKey = C.Map_6xZKG.$index(0, (t1 | 4294967296) >>> 0);
      if (newKey != null)
        return newKey;
      t2 = "Ephemeral Fuchsia key code " + t1;
      newKey = new G.LogicalKeyboardKey((12884901888 | t1 | 1099511627776) >>> 0, t2, null);
      return newKey;
    },
    get$physicalKey: function() {
      var t1 = C.Map_aOo1R.$index(0, this.hidUsage);
      return t1 == null ? C.PhysicalKeyboardKey_0_None : t1;
    },
    _raw_keyboard_fuchsia$_isLeftRightModifierPressed$4: function(side, anyMask, leftMask, rightMask) {
      var t1 = this.modifiers;
      if ((t1 & anyMask) === 0)
        return false;
      switch (side) {
        case C.KeyboardSide_0:
          return true;
        case C.KeyboardSide_3:
          return (t1 & leftMask) !== 0 && (t1 & rightMask) !== 0;
        case C.KeyboardSide_1:
          return (t1 & leftMask) !== 0;
        case C.KeyboardSide_2:
          return (t1 & rightMask) !== 0;
      }
      return false;
    },
    isModifierPressed$1: function(key) {
      var _this = this;
      switch (key) {
        case C.ModifierKey_0:
          return _this._raw_keyboard_fuchsia$_isLeftRightModifierPressed$4(C.KeyboardSide_0, 24, 8, 16);
        case C.ModifierKey_1:
          return _this._raw_keyboard_fuchsia$_isLeftRightModifierPressed$4(C.KeyboardSide_0, 6, 2, 4);
        case C.ModifierKey_2:
          return _this._raw_keyboard_fuchsia$_isLeftRightModifierPressed$4(C.KeyboardSide_0, 96, 32, 64);
        case C.ModifierKey_3:
          return _this._raw_keyboard_fuchsia$_isLeftRightModifierPressed$4(C.KeyboardSide_0, 384, 128, 256);
        case C.ModifierKey_4:
          return (_this.modifiers & 1) !== 0;
        case C.ModifierKey_5:
        case C.ModifierKey_6:
        case C.ModifierKey_7:
        case C.ModifierKey_8:
          return false;
      }
      return false;
    },
    getModifierSide$1: function(key) {
      var t1 = new Q.RawKeyEventDataFuchsia_getModifierSide_findSide(this);
      switch (key) {
        case C.ModifierKey_0:
          return t1.call$3(8, 16, 24);
        case C.ModifierKey_1:
          return t1.call$3(2, 4, 6);
        case C.ModifierKey_2:
          return t1.call$3(32, 64, 96);
        case C.ModifierKey_3:
          return t1.call$3(128, 256, 384);
        case C.ModifierKey_4:
          return (this.modifiers & 1) === 0 ? null : C.KeyboardSide_3;
        case C.ModifierKey_5:
        case C.ModifierKey_6:
        case C.ModifierKey_7:
        case C.ModifierKey_8:
          return null;
      }
      return null;
    },
    toString$0: function(_) {
      var _this = this;
      return "RawKeyEventDataFuchsia(hidUsage: " + _this.hidUsage + ", codePoint: " + _this.codePoint + ", modifiers: " + _this.modifiers + ", modifiers down: " + _this.get$modifiersPressed().toString$0(0) + ")";
    }
  };
  Q.RawKeyEventDataFuchsia_getModifierSide_findSide.prototype = {
    call$3: function(leftMask, rightMask, combinedMask) {
      var combined = this.$this.modifiers & combinedMask;
      if (combined === leftMask)
        return C.KeyboardSide_1;
      else if (combined === rightMask)
        return C.KeyboardSide_2;
      else if (combined === combinedMask)
        return C.KeyboardSide_3;
      return null;
    }
  };
  O.RawKeyEventDataLinux.prototype = {
    get$physicalKey: function() {
      var t1 = C.Map_NUnnN.$index(0, this.scanCode);
      return t1 == null ? C.PhysicalKeyboardKey_0_None : t1;
    },
    get$logicalKey: function() {
      var t2, t3, t4, keyId, newKey, _null = null,
        t1 = this.keyCode,
        numPadKey = C.Map_s3kmC.$index(0, t1);
      if (numPadKey != null)
        return numPadKey;
      t2 = this.unicodeScalarValues;
      t3 = t2 === 0;
      if ((t3 ? _null : H.Primitives_stringFromCharCode(t2)) != null)
        t4 = !G.LogicalKeyboardKey_isControlCharacter(t3 ? _null : H.Primitives_stringFromCharCode(t2));
      else
        t4 = false;
      if (t4) {
        keyId = (0 | t2 & 4294967295) >>> 0;
        t1 = C.Map_hyDV7.$index(0, keyId);
        if (t1 == null) {
          t1 = t3 ? _null : H.Primitives_stringFromCharCode(t2);
          t2 = t3 ? _null : H.Primitives_stringFromCharCode(t2);
          t2 = "Key " + t2.toUpperCase();
          t1 = new G.LogicalKeyboardKey(keyId, t2, t1);
        }
        return t1;
      }
      newKey = C.Map_kvIFE.$index(0, t1);
      if (newKey != null)
        return newKey;
      t2 = "Unknown key code " + t1;
      newKey = new G.LogicalKeyboardKey((25769803776 | t1 | 1099511627776) >>> 0, t2, _null);
      return newKey;
    },
    isModifierPressed$1: function(key) {
      var _this = this;
      return _this.keyHelper.isModifierPressed$5$isDown$keyCode$side(key, _this.modifiers, _this.isDown, _this.keyCode, C.KeyboardSide_0);
    },
    getModifierSide$1: function(key) {
      return this.keyHelper.getModifierSide$1(key);
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this.unicodeScalarValues;
      return "RawKeyEventDataLinux(keyLabel: " + H.S(t1 === 0 ? null : H.Primitives_stringFromCharCode(t1)) + ", keyCode: " + _this.keyCode + ", scanCode: " + _this.scanCode + ", unicodeScalarValues: " + t1 + ", modifiers: " + _this.modifiers + ", modifiers down: " + _this.get$modifiersPressed().toString$0(0) + ")";
    }
  };
  O.KeyHelper.prototype = {};
  O.GLFWKeyHelper.prototype = {
    isModifierPressed$5$isDown$keyCode$side: function(key, modifiers, isDown, keyCode, side) {
      var modifierChange;
      switch (keyCode) {
        case 340:
        case 344:
          modifierChange = 1;
          break;
        case 341:
        case 345:
          modifierChange = 2;
          break;
        case 342:
        case 346:
          modifierChange = 4;
          break;
        case 343:
        case 347:
          modifierChange = 8;
          break;
        case 280:
          modifierChange = 16;
          break;
        case 282:
          modifierChange = 32;
          break;
        default:
          modifierChange = 0;
          break;
      }
      modifiers = isDown ? modifiers | modifierChange : modifiers & ~modifierChange;
      switch (key) {
        case C.ModifierKey_0:
          return (modifiers & 2) !== 0;
        case C.ModifierKey_1:
          return (modifiers & 1) !== 0;
        case C.ModifierKey_2:
          return (modifiers & 4) !== 0;
        case C.ModifierKey_3:
          return (modifiers & 8) !== 0;
        case C.ModifierKey_4:
          return (modifiers & 16) !== 0;
        case C.ModifierKey_5:
          return (modifiers & 32) !== 0;
        case C.ModifierKey_7:
        case C.ModifierKey_8:
        case C.ModifierKey_6:
          return false;
      }
      return false;
    },
    getModifierSide$1: function(key) {
      switch (key) {
        case C.ModifierKey_0:
        case C.ModifierKey_1:
        case C.ModifierKey_2:
        case C.ModifierKey_3:
          return C.KeyboardSide_0;
        case C.ModifierKey_4:
        case C.ModifierKey_5:
        case C.ModifierKey_7:
        case C.ModifierKey_8:
        case C.ModifierKey_6:
          return C.KeyboardSide_3;
      }
      return null;
    }
  };
  O._GLFWKeyHelper_Object_KeyHelper.prototype = {};
  B.RawKeyEventDataMacOs.prototype = {
    get$physicalKey: function() {
      var t1 = C.Map_AY14u.$index(0, this.keyCode);
      return t1 == null ? C.PhysicalKeyboardKey_0_None : t1;
    },
    get$logicalKey: function() {
      var t2, t3, t4, t5, codeUnit, keyId, _this = this, _null = null,
        t1 = _this.keyCode,
        numPadKey = C.Map_F1QoB.$index(0, t1);
      if (numPadKey != null)
        return numPadKey;
      t2 = _this.charactersIgnoringModifiers;
      t3 = t2.length;
      t4 = t3 === 0;
      if ((t4 ? _null : t2) != null)
        if (!G.LogicalKeyboardKey_isControlCharacter(t4 ? _null : t2))
          t5 = !B.RawKeyEventDataMacOs__isUnprintableKey(t4 ? _null : t2);
        else
          t5 = false;
      else
        t5 = false;
      if (t5) {
        codeUnit = C.JSString_methods._codeUnitAt$1(t2, 0);
        keyId = (0 | (t3 === 2 ? codeUnit << 16 | C.JSString_methods._codeUnitAt$1(t2, 1) : codeUnit) & 4294967295) >>> 0;
        t1 = C.Map_hyDV7.$index(0, keyId);
        if (t1 == null) {
          t1 = t4 ? _null : t2;
          if (t4)
            t2 = _null;
          t2 = "Key " + t2.toUpperCase();
          t1 = new G.LogicalKeyboardKey(keyId, t2, t1);
        }
        return t1;
      }
      if (!_this.get$physicalKey().$eq(0, C.PhysicalKeyboardKey_0_None)) {
        keyId = (_this.get$physicalKey().usbHidUsage | 4294967296) >>> 0;
        t1 = C.Map_hyDV7.$index(0, keyId);
        if (t1 == null) {
          t1 = _this.get$physicalKey();
          t1 = new G.LogicalKeyboardKey(keyId, _this.get$physicalKey().debugName, t1.debugName);
        }
        return t1;
      }
      t2 = "Unknown macOS key code " + t1;
      return new G.LogicalKeyboardKey((21474836480 | t1 | 1099511627776) >>> 0, t2, _null);
    },
    _raw_keyboard_macos$_isLeftRightModifierPressed$4: function(side, anyMask, leftMask, rightMask) {
      var anyOnly,
        t1 = this.modifiers;
      if ((t1 & anyMask) === 0)
        return false;
      anyOnly = (t1 & (leftMask | rightMask | anyMask)) === anyMask;
      switch (side) {
        case C.KeyboardSide_0:
          return true;
        case C.KeyboardSide_3:
          return (t1 & leftMask) !== 0 && (t1 & rightMask) !== 0 || anyOnly;
        case C.KeyboardSide_1:
          return (t1 & leftMask) !== 0 || anyOnly;
        case C.KeyboardSide_2:
          return (t1 & rightMask) !== 0 || anyOnly;
      }
      return false;
    },
    isModifierPressed$1: function(key) {
      var result, _this = this,
        independentModifier = _this.modifiers & 4294901760;
      switch (key) {
        case C.ModifierKey_0:
          result = _this._raw_keyboard_macos$_isLeftRightModifierPressed$4(C.KeyboardSide_0, independentModifier & 262144, 1, 8192);
          break;
        case C.ModifierKey_1:
          result = _this._raw_keyboard_macos$_isLeftRightModifierPressed$4(C.KeyboardSide_0, independentModifier & 131072, 2, 4);
          break;
        case C.ModifierKey_2:
          result = _this._raw_keyboard_macos$_isLeftRightModifierPressed$4(C.KeyboardSide_0, independentModifier & 524288, 32, 64);
          break;
        case C.ModifierKey_3:
          result = _this._raw_keyboard_macos$_isLeftRightModifierPressed$4(C.KeyboardSide_0, independentModifier & 1048576, 8, 16);
          break;
        case C.ModifierKey_4:
          result = (independentModifier & 65536) !== 0;
          break;
        case C.ModifierKey_7:
        case C.ModifierKey_5:
        case C.ModifierKey_8:
        case C.ModifierKey_6:
          result = false;
          break;
        default:
          result = null;
      }
      return result;
    },
    getModifierSide$1: function(key) {
      var t1 = new B.RawKeyEventDataMacOs_getModifierSide_findSide(this);
      switch (key) {
        case C.ModifierKey_0:
          return t1.call$3(1, 8192, 262144);
        case C.ModifierKey_1:
          return t1.call$3(2, 4, 131072);
        case C.ModifierKey_2:
          return t1.call$3(32, 64, 524288);
        case C.ModifierKey_3:
          return t1.call$3(8, 16, 1048576);
        case C.ModifierKey_4:
        case C.ModifierKey_5:
        case C.ModifierKey_6:
        case C.ModifierKey_7:
        case C.ModifierKey_8:
          return C.KeyboardSide_3;
      }
      return null;
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this.charactersIgnoringModifiers;
      return "RawKeyEventDataMacOs(keyLabel: " + H.S(t1.length === 0 ? null : t1) + ", keyCode: " + _this.keyCode + ", characters: " + _this.characters + ", unmodifiedCharacters: " + t1 + ", modifiers: " + _this.modifiers + ", modifiers down: " + _this.get$modifiersPressed().toString$0(0) + ")";
    }
  };
  B.RawKeyEventDataMacOs_getModifierSide_findSide.prototype = {
    call$3: function(leftMask, rightMask, anyMask) {
      var combinedMask = leftMask | rightMask,
        t1 = this.$this.modifiers,
        combined = t1 & combinedMask;
      if (combined === leftMask)
        return C.KeyboardSide_1;
      else if (combined === rightMask)
        return C.KeyboardSide_2;
      else if (combined === combinedMask || (t1 & (combinedMask | anyMask)) === anyMask)
        return C.KeyboardSide_3;
      return null;
    }
  };
  A.RawKeyEventDataWeb.prototype = {
    get$physicalKey: function() {
      var t1 = C.Map_YVo3E.$index(0, this.code);
      return t1 == null ? C.PhysicalKeyboardKey_0_None : t1;
    },
    get$logicalKey: function() {
      var newKey, t2,
        t1 = this.code,
        numPadKey = C.Map_oWD5f.$index(0, t1);
      if (numPadKey != null)
        return numPadKey;
      newKey = C.Map_YVkOG.$index(0, t1);
      if (newKey != null)
        return newKey;
      t2 = J.get$hashCode$(t1);
      t1 = 'Unknown Web code "' + H.S(t1) + '"';
      return new G.LogicalKeyboardKey((34359738368 | t2 | 1099511627776) >>> 0, t1, null);
    },
    isModifierPressed$1: function(key) {
      var _this = this;
      switch (key) {
        case C.ModifierKey_0:
          return (_this.metaState & 4) !== 0;
        case C.ModifierKey_1:
          return (_this.metaState & 1) !== 0;
        case C.ModifierKey_2:
          return (_this.metaState & 2) !== 0;
        case C.ModifierKey_3:
          return (_this.metaState & 8) !== 0;
        case C.ModifierKey_5:
          return (_this.metaState & 16) !== 0;
        case C.ModifierKey_4:
          return (_this.metaState & 32) !== 0;
        case C.ModifierKey_6:
          return (_this.metaState & 64) !== 0;
        case C.ModifierKey_7:
        case C.ModifierKey_8:
        default:
          return false;
      }
    },
    getModifierSide$1: function(key) {
      return C.KeyboardSide_3;
    },
    toString$0: function(_) {
      var _this = this;
      return "RawKeyEventDataWeb(keyLabel: " + H.S(_this.key) + ", code: " + H.S(_this.code) + ", metaState: " + H.S(_this.metaState) + ", modifiers down: " + _this.get$modifiersPressed().toString$0(0) + ")";
    }
  };
  R.RawKeyEventDataWindows.prototype = {
    get$physicalKey: function() {
      var t1 = C.Map_mDkQW.$index(0, this.scanCode);
      return t1 == null ? C.PhysicalKeyboardKey_0_None : t1;
    },
    get$logicalKey: function() {
      var t2, t3, t4, keyId, newKey, _null = null,
        t1 = this.keyCode,
        numPadKey = C.Map_cG43h.$index(0, t1);
      if (numPadKey != null)
        return numPadKey;
      t2 = this.characterCodePoint;
      t3 = t2 === 0;
      if ((t3 ? _null : H.Primitives_stringFromCharCode(t2)) != null)
        if ((t3 ? _null : H.Primitives_stringFromCharCode(t2)).length !== 0)
          t4 = !G.LogicalKeyboardKey_isControlCharacter(t3 ? _null : H.Primitives_stringFromCharCode(t2));
        else
          t4 = false;
      else
        t4 = false;
      if (t4) {
        keyId = (0 | t2 & 4294967295) >>> 0;
        t1 = C.Map_hyDV7.$index(0, keyId);
        if (t1 == null) {
          t1 = t3 ? _null : H.Primitives_stringFromCharCode(t2);
          t2 = t3 ? _null : H.Primitives_stringFromCharCode(t2);
          t2 = "Key " + t2.toUpperCase();
          t1 = new G.LogicalKeyboardKey(keyId, t2, t1);
        }
        return t1;
      }
      newKey = C.Map_rjjB5.$index(0, t1);
      if (newKey != null)
        return newKey;
      t2 = "Unknown Windows key code " + H.S(t1);
      newKey = new G.LogicalKeyboardKey((30064771072 | t1 | 1099511627776) >>> 0, t2, _null);
      return newKey;
    },
    _isLeftRightModifierPressed$4: function(side, anyMask, leftMask, rightMask) {
      var anyOnly,
        t1 = this.modifiers;
      if ((t1 & anyMask) === 0 && (t1 & leftMask) === 0 && (t1 & rightMask) === 0)
        return false;
      anyOnly = (t1 & (leftMask | rightMask | anyMask)) === anyMask;
      switch (side) {
        case C.KeyboardSide_0:
          return true;
        case C.KeyboardSide_3:
          return (t1 & leftMask) !== 0 && (t1 & rightMask) !== 0 || anyOnly;
        case C.KeyboardSide_1:
          return (t1 & leftMask) !== 0 || anyOnly;
        case C.KeyboardSide_2:
          return (t1 & rightMask) !== 0 || anyOnly;
      }
      return false;
    },
    isModifierPressed$1: function(key) {
      var result, _this = this;
      switch (key) {
        case C.ModifierKey_0:
          result = _this._isLeftRightModifierPressed$4(C.KeyboardSide_0, 8, 16, 32);
          break;
        case C.ModifierKey_1:
          result = _this._isLeftRightModifierPressed$4(C.KeyboardSide_0, 1, 2, 4);
          break;
        case C.ModifierKey_2:
          result = _this._isLeftRightModifierPressed$4(C.KeyboardSide_0, 64, 128, 256);
          break;
        case C.ModifierKey_3:
          result = _this._isLeftRightModifierPressed$4(C.KeyboardSide_0, 1536, 512, 1024);
          break;
        case C.ModifierKey_4:
          result = (_this.modifiers & 2048) !== 0;
          break;
        case C.ModifierKey_6:
          result = (_this.modifiers & 8192) !== 0;
          break;
        case C.ModifierKey_5:
          result = (_this.modifiers & 4096) !== 0;
          break;
        case C.ModifierKey_7:
        case C.ModifierKey_8:
          result = false;
          break;
        default:
          result = null;
      }
      return result;
    },
    getModifierSide$1: function(key) {
      var t1 = new R.RawKeyEventDataWindows_getModifierSide_findSide(this);
      switch (key) {
        case C.ModifierKey_0:
          return t1.call$3(16, 32, 8);
        case C.ModifierKey_1:
          return t1.call$3(2, 4, 1);
        case C.ModifierKey_2:
          return t1.call$3(128, 256, 64);
        case C.ModifierKey_3:
          return t1.call$3(512, 1024, 0);
        case C.ModifierKey_4:
        case C.ModifierKey_5:
        case C.ModifierKey_6:
        case C.ModifierKey_7:
        case C.ModifierKey_8:
          return C.KeyboardSide_3;
      }
      return null;
    }
  };
  R.RawKeyEventDataWindows_getModifierSide_findSide.prototype = {
    call$3: function(leftMask, rightMask, anyMask) {
      var combinedMask = leftMask | rightMask,
        t1 = this.$this.modifiers,
        combined = t1 & combinedMask;
      if (combined === leftMask)
        return C.KeyboardSide_1;
      else if (combined === rightMask)
        return C.KeyboardSide_2;
      else if (combined === combinedMask)
        return C.KeyboardSide_3;
      else if ((t1 & (combinedMask | anyMask)) === anyMask)
        return C.KeyboardSide_0;
      return null;
    }
  };
  X.ApplicationSwitcherDescription.prototype = {};
  X.SystemUiOverlayStyle.prototype = {
    _toMap$0: function() {
      var t2, t3, t4, _this = this, _null = null,
        t1 = _this.systemNavigationBarColor;
      t1 = t1 == null ? _null : t1.value;
      t2 = _this.statusBarBrightness;
      t2 = t2 == null ? _null : t2._ui$_name;
      t3 = _this.statusBarIconBrightness;
      t3 = t3 == null ? _null : t3._ui$_name;
      t4 = _this.systemNavigationBarIconBrightness;
      return P.LinkedHashMap_LinkedHashMap$_literal(["systemNavigationBarColor", t1, "systemNavigationBarDividerColor", null, "statusBarColor", null, "statusBarBrightness", t2, "statusBarIconBrightness", t3, "systemNavigationBarIconBrightness", t4 == null ? _null : t4._ui$_name], type$.String, type$.dynamic);
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this._toMap$0());
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.systemNavigationBarColor, _this.systemNavigationBarDividerColor, _this.statusBarColor, _this.statusBarBrightness, _this.statusBarIconBrightness, _this.systemNavigationBarIconBrightness, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof X.SystemUiOverlayStyle)
        if (J.$eq$(other.systemNavigationBarColor, _this.systemNavigationBarColor))
          t1 = other.statusBarIconBrightness == _this.statusBarIconBrightness && other.statusBarBrightness == _this.statusBarBrightness && other.systemNavigationBarIconBrightness == _this.systemNavigationBarIconBrightness;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  X.SystemChrome_setSystemUIOverlayStyle_closure.prototype = {
    call$0: function() {
      if (!J.$eq$($.SystemChrome__pendingStyle, $.SystemChrome__latestStyle)) {
        C.OptionalMethodChannel_cdS.invokeMethod$1$2("SystemChrome.setSystemUIOverlayStyle", $.SystemChrome__pendingStyle._toMap$0(), type$.void);
        $.SystemChrome__latestStyle = $.SystemChrome__pendingStyle;
      }
      $.SystemChrome__pendingStyle = null;
    },
    $signature: 0
  };
  V.SystemSoundType.prototype = {
    toString$0: function(_) {
      return "SystemSoundType.click";
    }
  };
  X.TextSelection.prototype = {
    toString$0: function(_) {
      return "TextSelection(baseOffset: " + H.S(this.baseOffset) + ", extentOffset: " + H.S(this.extentOffset) + ", affinity: " + C.TextAffinity_1.toString$0(0) + ", isDirectional: false)";
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof X.TextSelection)
        if (other.baseOffset == this.baseOffset)
          if (other.extentOffset == this.extentOffset)
            t1 = true;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return P.hashValues(J.get$hashCode$(this.baseOffset), J.get$hashCode$(this.extentOffset), H.Primitives_objectHashCode(C.TextAffinity_1), C.JSBool_methods.get$hashCode(false), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  U._getParent_closure.prototype = {
    call$1: function(ancestor) {
      this._box_0.parent = ancestor;
      return false;
    }
  };
  U.Intent.prototype = {};
  U.Action.prototype = {
    isEnabled$1: function(_, intent) {
      return true;
    }
  };
  U.ContextAction.prototype = {};
  U.CallbackAction.prototype = {
    invoke$1: function(intent) {
      return this.onInvoke.call$1(intent);
    }
  };
  U.ActionDispatcher.prototype = {
    invokeAction$3: function(action, intent, context) {
      var t1;
      if (context == null) {
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
        context = t1 == null ? null : t1._context;
      }
      if (action.isEnabled$1(0, intent))
        if (action instanceof U.ContextAction)
          return action.invoke$2(intent, context);
        else
          return action.invoke$1(intent);
      return null;
    }
  };
  U.Actions.prototype = {
    createState$0: function() {
      return new U._ActionsState(P.LinkedHashSet_LinkedHashSet$_empty(type$.Action_Intent), new P.Object(), C._StateLifecycle_0);
    }
  };
  U.Actions__findDispatcher_closure.prototype = {
    call$1: function(element) {
      type$._ActionsMarker._as(element.get$widget()).toString;
      return false;
    }
  };
  U.Actions_invoke_closure.prototype = {
    call$1: function(element) {
      var t1,
        result = this.T._eval$1("Action<0>")._as(type$._ActionsMarker._as(element.get$widget()).actions.$index(0, H.getRuntimeType(this.intent)));
      if (result != null) {
        t1 = this._box_0;
        t1.action = result;
        t1.actionElement = element;
        return true;
      }
      return false;
    }
  };
  U._ActionsState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this._updateActionListeners$0();
    },
    _handleActionChanged$1: function(action) {
      this.setState$1(new U._ActionsState__handleActionChanged_closure(this));
    },
    _updateActionListeners$0: function() {
      var widgetActions, removedActions, addedActions, t2, t3, t4, _this = this,
        t1 = _this._widget.actions;
      t1 = t1.get$values(t1);
      widgetActions = P.LinkedHashSet_LinkedHashSet$from(t1, H._instanceType(t1)._eval$1("Iterable.E"));
      removedActions = _this.listenedActions.difference$1(widgetActions);
      addedActions = widgetActions.difference$1(_this.listenedActions);
      for (t1 = removedActions.get$iterator(removedActions), t2 = _this.get$_handleActionChanged(); t1.moveNext$0();) {
        t3 = t1.get$current(t1)._listeners;
        t3._isDirty = true;
        t4 = t3._observer_list$_set;
        if (t4 != null)
          if (t4._collection$_length > 0) {
            t4._collection$_strings = t4._collection$_nums = t4._collection$_rest = t4._elements = null;
            t4._collection$_length = 0;
          }
        C.JSArray_methods.remove$1(t3._list, t2);
      }
      for (t1 = addedActions.get$iterator(addedActions); t1.moveNext$0();) {
        t3 = t1.get$current(t1)._listeners;
        t3._isDirty = true;
        t3._list.push(t2);
      }
      _this.listenedActions = widgetActions;
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._updateActionListeners$0();
    },
    dispose$0: function() {
      var t1, t2, t3, t4, _this = this;
      _this.super$State$dispose();
      for (t1 = _this.listenedActions, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = _this.get$_handleActionChanged(); t1.moveNext$0();) {
        t3 = t1._collection$_current._listeners;
        t3._isDirty = true;
        t4 = t3._observer_list$_set;
        if (t4 != null)
          if (t4._collection$_length > 0) {
            t4._collection$_strings = t4._collection$_nums = t4._collection$_rest = t4._elements = null;
            t4._collection$_length = 0;
          }
        C.JSArray_methods.remove$1(t3._list, t2);
      }
      _this.listenedActions = null;
    },
    build$1: function(context) {
      var t1 = this._widget;
      return new U._ActionsMarker(null, t1.actions, this.rebuildKey, t1.child, null);
    }
  };
  U._ActionsState__handleActionChanged_closure.prototype = {
    call$0: function() {
      this.$this.rebuildKey = new P.Object();
    },
    $signature: 0
  };
  U._ActionsMarker.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      var t1;
      if (this.rebuildKey === oldWidget.rebuildKey)
        t1 = !S.mapEquals(oldWidget.actions, this.actions);
      else
        t1 = true;
      return t1;
    }
  };
  U.FocusableActionDetector.prototype = {
    createState$0: function() {
      return new U._FocusableActionDetectorState(C._StateLifecycle_0);
    }
  };
  U._FocusableActionDetectorState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new U._FocusableActionDetectorState_initState_closure(this));
      $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._focus_manager$_listeners.add$1(0, this.get$_actions$_handleFocusHighlightModeChange());
    },
    dispose$0: function() {
      $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager.removeHighlightModeListener$1(this.get$_actions$_handleFocusHighlightModeChange());
      this.super$State$dispose();
    },
    _actions$_updateHighlightMode$1: function(mode) {
      this._mayTriggerCallback$1$task(new U._FocusableActionDetectorState__updateHighlightMode_closure(this));
    },
    _actions$_handleFocusHighlightModeChange$1: function(mode) {
      if (this._framework$_element == null)
        return;
      this._actions$_updateHighlightMode$1(mode);
    },
    _actions$_handleMouseEnter$1: function($event) {
      if (!this._actions$_hovering)
        this._mayTriggerCallback$1$task(new U._FocusableActionDetectorState__handleMouseEnter_closure(this));
    },
    _actions$_handleMouseExit$1: function($event) {
      if (this._actions$_hovering)
        this._mayTriggerCallback$1$task(new U._FocusableActionDetectorState__handleMouseExit_closure(this));
    },
    _handleFocusChange$1: function(focused) {
      var _this = this;
      if (_this._actions$_focused !== focused) {
        _this._mayTriggerCallback$1$task(new U._FocusableActionDetectorState__handleFocusChange_closure(_this, focused));
        _this._widget.toString;
      }
    },
    _mayTriggerCallback$2$oldWidget$task: function(oldWidget, task) {
      var doShowHoverHighlight, doShowFocusHighlight, _this = this,
        t1 = new U._FocusableActionDetectorState__mayTriggerCallback_shouldShowHoverHighlight(_this),
        t2 = new U._FocusableActionDetectorState__mayTriggerCallback_shouldShowFocusHighlight(_this),
        oldTarget = oldWidget == null ? _this._widget : oldWidget,
        didShowHoverHighlight = t1.call$1(oldTarget),
        didShowFocusHighlight = t2.call$1(oldTarget);
      if (task != null)
        task.call$0();
      doShowHoverHighlight = t1.call$1(_this._widget);
      doShowFocusHighlight = t2.call$1(_this._widget);
      if (didShowFocusHighlight != doShowFocusHighlight)
        _this._widget.onShowFocusHighlight.call$1(doShowFocusHighlight);
      if (didShowHoverHighlight != doShowHoverHighlight)
        _this._widget.onShowHoverHighlight.call$1(doShowHoverHighlight);
    },
    _mayTriggerCallback$1$task: function(task) {
      return this._mayTriggerCallback$2$oldWidget$task(null, task);
    },
    _mayTriggerCallback$1$oldWidget: function(oldWidget) {
      return this._mayTriggerCallback$2$oldWidget$task(oldWidget, null);
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      if (this._widget.enabled !== oldWidget.enabled)
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new U._FocusableActionDetectorState_didUpdateWidget_closure(this, oldWidget));
    },
    build$1: function(context) {
      var _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.focusNode,
        t3 = t1.enabled,
        child = T.MouseRegion$(L.Focus$(false, t3, t1.child, _null, t2, true, _null, _this.get$_handleFocusChange(), _null, _null), _this.get$_actions$_handleMouseEnter(), _this.get$_actions$_handleMouseExit(), _null, true);
      if (t3) {
        t1 = t1.actions;
        t1 = t1 != null && t1.get$isNotEmpty(t1);
      } else
        t1 = false;
      if (t1)
        child = U.Actions$(_this._widget.actions, child);
      _this._widget.enabled;
      return child;
    }
  };
  U._FocusableActionDetectorState_initState_closure.prototype = {
    call$1: function(duration) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightMode;
      if (t1 == null)
        t1 = O.FocusManager__defaultModeForPlatform();
      this.$this._actions$_updateHighlightMode$1(t1);
    },
    $signature: 6
  };
  U._FocusableActionDetectorState__updateHighlightMode_closure.prototype = {
    call$0: function() {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightMode;
      switch (t1 == null ? O.FocusManager__defaultModeForPlatform() : t1) {
        case C.FocusHighlightMode_0:
          this.$this._canShowHighlight = false;
          break;
        case C.FocusHighlightMode_1:
          this.$this._canShowHighlight = true;
          break;
      }
    },
    $signature: 0
  };
  U._FocusableActionDetectorState__handleMouseEnter_closure.prototype = {
    call$0: function() {
      this.$this._actions$_hovering = true;
    },
    $signature: 0
  };
  U._FocusableActionDetectorState__handleMouseExit_closure.prototype = {
    call$0: function() {
      this.$this._actions$_hovering = false;
    },
    $signature: 0
  };
  U._FocusableActionDetectorState__handleFocusChange_closure.prototype = {
    call$0: function() {
      this.$this._actions$_focused = this.focused;
    },
    $signature: 0
  };
  U._FocusableActionDetectorState__mayTriggerCallback_shouldShowHoverHighlight.prototype = {
    call$1: function(target) {
      var t1 = this.$this;
      return t1._actions$_hovering && target.enabled && t1._canShowHighlight;
    }
  };
  U._FocusableActionDetectorState__mayTriggerCallback_shouldShowFocusHighlight.prototype = {
    call$1: function(target) {
      var t1 = this.$this;
      return t1._actions$_focused && target.enabled && t1._canShowHighlight;
    }
  };
  U._FocusableActionDetectorState_didUpdateWidget_closure.prototype = {
    call$1: function(duration) {
      this.$this._mayTriggerCallback$1$oldWidget(this.oldWidget);
    },
    $signature: 6
  };
  U.DoNothingIntent.prototype = {};
  U.DoNothingAction.prototype = {
    invoke$1: function(intent) {
    }
  };
  U.ActivateIntent.prototype = {};
  U._Action_Object_Diagnosticable.prototype = {};
  U._ActionDispatcher_Object_Diagnosticable.prototype = {};
  U._Intent_Object_Diagnosticable.prototype = {};
  X.AnnotatedRegion.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderAnnotatedRegion(this.value, true, null, this.$ti._eval$1("RenderAnnotatedRegion<1>"));
      t1.get$isRepaintBoundary();
      t1._needsCompositing = true;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$value(0, this.value);
      renderObject.set$sized(true);
    }
  };
  S.WidgetsApp.prototype = {
    createState$0: function() {
      return new S._WidgetsAppState(C._StateLifecycle_0);
    },
    pageRouteBuilder$2: function(arg0, arg1) {
      return this.pageRouteBuilder.call$2(arg0, arg1);
    },
    onUnknownRoute$1: function(arg0) {
      return this.onUnknownRoute.call$1(arg0);
    },
    builder$2: function(arg0, arg1) {
      return this.builder.call$2(arg0, arg1);
    }
  };
  S._WidgetsAppState.prototype = {
    initState$0: function() {
      var _this = this;
      _this.super$State$initState();
      _this._updateNavigator$0();
      $.WidgetsBinding__instance.toString;
      $.$get$window().toString;
      _this._app$_locale = _this._resolveLocales$2(C.List_Locale, _this._widget.supportedLocales);
      $.WidgetsBinding__instance.WidgetsBinding__observers.push(_this);
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._widget.toString;
      oldWidget.toString;
    },
    dispose$0: function() {
      C.JSArray_methods.remove$1($.WidgetsBinding__instance.WidgetsBinding__observers, this);
      this.super$State$dispose();
    },
    _updateNavigator$0: function() {
      this._widget.toString;
      this._navigator = new N.GlobalObjectKey(this, type$.GlobalObjectKey_NavigatorState);
    },
    _onGenerateRoute$1: function(settings) {
      var t1, pageContentBuilder, _this = this,
        $name = settings.name;
      if ($name === "/") {
        _this._widget.toString;
        t1 = true;
      } else
        t1 = false;
      pageContentBuilder = t1 ? new S._WidgetsAppState__onGenerateRoute_closure(_this) : _this._widget.routes.$index(0, $name);
      if (pageContentBuilder != null)
        return _this._widget.pageRouteBuilder$2(settings, pageContentBuilder);
      _this._widget.toString;
      return null;
    },
    _onUnknownRoute$1: function(settings) {
      return this._widget.onUnknownRoute$1(settings);
    },
    didPopRoute$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, $navigator;
      var $async$didPopRoute$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._navigator;
              $navigator = t1 == null ? null : t1.get$currentState();
              if ($navigator == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return P._asyncAwait($navigator.maybePop$0(), $async$didPopRoute$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$didPopRoute$0, $async$completer);
    },
    didPushRoute$1: function(route) {
      return this.didPushRoute$body$_WidgetsAppState(route);
    },
    didPushRoute$body$_WidgetsAppState: function(route) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t2, t1, $navigator;
      var $async$didPushRoute$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._navigator;
              $navigator = t1 == null ? null : t1.get$currentState();
              if ($navigator == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = type$.Object;
              t2 = $navigator._routeNamed$1$2$arguments(route, null, t1);
              $navigator._history.push(new K._RouteEntry(t2, C._RouteLifecycle_3));
              $navigator._flushHistoryUpdates$0();
              $navigator._afterNavigation$1$1(t2, t1);
              t2.toString;
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$didPushRoute$1, $async$completer);
    },
    _resolveLocales$2: function(preferredLocales, supportedLocales) {
      this._widget.toString;
      return S._WidgetsAppState_basicLocaleListResolution(preferredLocales, supportedLocales);
    },
    get$_app$_localizationsDelegates: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$get$_app$_localizationsDelegates($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return P._IterationMarker_yieldStar($async$self._widget.localizationsDelegates);
              case 2:
                // after yield
                $async$goto = 3;
                return C.C__WidgetsLocalizationsDelegate;
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.LocalizationsDelegate_dynamic);
    },
    build$1: function(context) {
      var t2, t3, t4, result, performanceOverlay, title, appLocale, _this = this, _null = null, t1 = {};
      t1.navigator = null;
      t2 = _this._navigator;
      if (t2 != null) {
        $.WidgetsBinding__instance.toString;
        t3 = $.$get$window();
        if (t3.get$defaultRouteName() !== "/") {
          $.WidgetsBinding__instance.toString;
          t3 = t3.get$defaultRouteName();
        } else {
          _this._widget.toString;
          t4 = $.WidgetsBinding__instance;
          t4.toString;
          t3 = t3.get$defaultRouteName();
        }
        t4 = _this._widget;
        t1.navigator = new K.Navigator(t3, _this.get$_onGenerateRoute(), _this.get$_onUnknownRoute(), t4.navigatorObservers, K.navigator_Navigator_defaultGenerateInitialRoutes$closure(), t2);
      }
      t1.result = null;
      t2 = _this._widget;
      t2.toString;
      result = new T.Builder(new S._WidgetsAppState_build_closure(t1, _this), _null);
      t1.result = result;
      result = t1.result = L.DefaultTextStyle$(result, _null, C.TextOverflow_0, true, t2.textStyle, _null, _null, C.TextWidthBasis_0);
      t2 = $.WidgetsApp_showPerformanceOverlayOverride;
      if (t2)
        performanceOverlay = new L.PerformanceOverlay(15, false, false, _null);
      else
        performanceOverlay = _null;
      t1 = performanceOverlay != null ? t1.result = T.Stack$(C.AlignmentDirectional_m1_m1, H.setRuntimeTypeInfo([result, T.Positioned$(_null, performanceOverlay, _null, _null, 0, 0, 0, _null)], type$.JSArray_Widget), C.StackFit_0) : result;
      t2 = _this._widget;
      t3 = t2.title;
      title = U.Title$(t1, t2.color, t3);
      appLocale = _this._app$_locale;
      t1 = S.WidgetsApp_defaultShortcuts();
      t2 = $.$get$WidgetsApp_defaultActions();
      t3 = _this.get$_app$_localizationsDelegates();
      t3 = P.List_List$from(t3, true, t3.$ti._eval$1("Iterable.E"));
      return X.Shortcuts$(U.Actions$(t2, new U.FocusTraversalGroup(new S._MediaQueryFromWindow(new L.Localizations(appLocale, t3, title, _null), _null), new U.ReadingOrderTraversalPolicy(P.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData)), _null)), "<Default WidgetsApp Shortcuts>", t1);
    }
  };
  S._WidgetsAppState__onGenerateRoute_closure.prototype = {
    call$1: function(context) {
      return this.$this._widget.home;
    }
  };
  S._WidgetsAppState_build_closure.prototype = {
    call$1: function(context) {
      return this.$this._widget.builder$2(context, this._box_0.navigator);
    }
  };
  S._MediaQueryFromWindow.prototype = {
    createState$0: function() {
      return new S._MediaQueryFromWindowsState(C._StateLifecycle_0);
    }
  };
  S._MediaQueryFromWindowsState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      $.WidgetsBinding__instance.WidgetsBinding__observers.push(this);
    },
    didChangeMetrics$0: function() {
      this.setState$1(new S._MediaQueryFromWindowsState_didChangeMetrics_closure());
    },
    didChangePlatformBrightness$0: function() {
      this.setState$1(new S._MediaQueryFromWindowsState_didChangePlatformBrightness_closure());
    },
    build$1: function(context) {
      var t1, t2, t3, t4, t5, t6, t7, t8;
      $.WidgetsBinding__instance.toString;
      t1 = $.$get$window();
      t2 = t1.get$physicalSize();
      t3 = t1._debugDevicePixelRatio;
      t2 = t2.$div(0, t3 != null ? t3 : H.EngineWindow_browserDevicePixelRatio());
      t3 = t1._debugDevicePixelRatio;
      t3 = t3 != null ? t3 : H.EngineWindow_browserDevicePixelRatio();
      t4 = t1._platformBrightness;
      t5 = t1._debugDevicePixelRatio;
      t5 = V.EdgeInsets$fromWindowPadding(C.C_WindowPadding, t5 != null ? t5 : H.EngineWindow_browserDevicePixelRatio());
      t6 = t1._debugDevicePixelRatio;
      t6 = V.EdgeInsets$fromWindowPadding(C.C_WindowPadding, t6 != null ? t6 : H.EngineWindow_browserDevicePixelRatio());
      t7 = t1._debugDevicePixelRatio;
      t7 = V.EdgeInsets$fromWindowPadding(C.C_WindowPadding, t7 != null ? t7 : H.EngineWindow_browserDevicePixelRatio());
      t8 = t1._debugDevicePixelRatio;
      t8 = V.EdgeInsets$fromWindowPadding(C.C_WindowPadding, t8 != null ? t8 : H.EngineWindow_browserDevicePixelRatio());
      t1 = t1._accessibilityFeatures._ui$_index;
      return new F.MediaQuery(new F.MediaQueryData(t2, t3, 1, t4, t7, t5, t6, t8, 17976931348623157e292, false, (1 & t1) !== 0, (2 & t1) !== 0, (32 & t1) !== 0, (4 & t1) !== 0, (8 & t1) !== 0), this._widget.child, null);
    },
    dispose$0: function() {
      C.JSArray_methods.remove$1($.WidgetsBinding__instance.WidgetsBinding__observers, this);
      this.super$State$dispose();
    }
  };
  S._MediaQueryFromWindowsState_didChangeMetrics_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  S._MediaQueryFromWindowsState_didChangePlatformBrightness_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  S.__MediaQueryFromWindowsState_State_WidgetsBindingObserver.prototype = {};
  S.__WidgetsAppState_State_WidgetsBindingObserver.prototype = {};
  L.AutomaticKeepAlive.prototype = {
    createState$0: function() {
      return new L._AutomaticKeepAliveState(C._StateLifecycle_0);
    }
  };
  L._AutomaticKeepAliveState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this._updateChild$0();
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._updateChild$0();
    },
    _updateChild$0: function() {
      this._automatic_keep_alive$_child = U.NotificationListener$(this._widget.child, this.get$_addClient(), type$.KeepAliveNotification);
    },
    dispose$0: function() {
      var t2,
        t1 = this._handles;
      if (t1 != null)
        for (t1 = t1.get$keys(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          t2 = t1.get$current(t1);
          t2.removeListener$1(0, this._handles.$index(0, t2));
        }
      this.super$State$dispose();
    },
    _addClient$1: function(notification) {
      var t2, childElement, _this = this,
        handle = notification.handle,
        t1 = _this._handles;
      if (t1 == null)
        t1 = _this._handles = P.LinkedHashMap_LinkedHashMap$_empty(type$.Listenable, type$.void_Function);
      t1.$indexSet(0, handle, _this._createCallback$1(handle));
      t1 = _this._handles.$index(0, handle);
      t2 = handle.ChangeNotifier__listeners;
      t2._isDirty = true;
      t2._list.push(t1);
      if (!_this._keepingAlive) {
        _this._keepingAlive = true;
        childElement = _this._getChildElement$0();
        if (childElement != null)
          _this._updateParentDataOfChild$1(childElement);
        else
          $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new L._AutomaticKeepAliveState__addClient_closure(_this));
      }
      return false;
    },
    _getChildElement$0: function() {
      var t1 = {},
        element = this._framework$_element;
      t1.childElement = null;
      element.visitChildren$1(new L._AutomaticKeepAliveState__getChildElement_closure(t1));
      return type$.ParentDataElement_KeepAliveParentDataMixin._as(t1.childElement);
    },
    _updateParentDataOfChild$1: function(childElement) {
      childElement._applyParentData$1(type$.ParentDataWidget_KeepAliveParentDataMixin._as(new G.KeepAlive(this._keepingAlive, this._automatic_keep_alive$_child, null)));
    },
    _createCallback$1: function(handle) {
      return new L._AutomaticKeepAliveState__createCallback_closure(this, handle);
    },
    build$1: function(context) {
      return new G.KeepAlive(this._keepingAlive, this._automatic_keep_alive$_child, null);
    }
  };
  L._AutomaticKeepAliveState__addClient_closure.prototype = {
    call$1: function(timeStamp) {
      var t1 = this.$this;
      if (t1._framework$_element == null)
        return;
      t1._updateParentDataOfChild$1(t1._getChildElement$0());
    },
    $signature: 6
  };
  L._AutomaticKeepAliveState__getChildElement_closure.prototype = {
    call$1: function(child) {
      this._box_0.childElement = child;
    }
  };
  L._AutomaticKeepAliveState__createCallback_closure.prototype = {
    call$0: function() {
      var t2,
        t1 = this.$this;
      t1._handles.remove$1(0, this.handle);
      t2 = t1._handles;
      if (t2.get$isEmpty(t2))
        if ($.SchedulerBinding__instance.SchedulerBinding__schedulerPhase.index < 3)
          t1.setState$1(new L._AutomaticKeepAliveState__createCallback__closure(t1));
        else {
          t1._keepingAlive = false;
          P.scheduleMicrotask(new L._AutomaticKeepAliveState__createCallback__closure0(t1));
        }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  L._AutomaticKeepAliveState__createCallback__closure.prototype = {
    call$0: function() {
      this.$this._keepingAlive = false;
    },
    $signature: 0
  };
  L._AutomaticKeepAliveState__createCallback__closure0.prototype = {
    call$0: function() {
      var t2,
        t1 = this.$this;
      if (t1._framework$_element != null) {
        t2 = t1._handles;
        t2 = t2.get$isEmpty(t2);
      } else
        t2 = false;
      if (t2)
        t1.setState$1(new L._AutomaticKeepAliveState__createCallback___closure(t1));
    },
    $signature: 0
  };
  L._AutomaticKeepAliveState__createCallback___closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  L.KeepAliveNotification.prototype = {};
  L.KeepAliveHandle.prototype = {};
  L.AutomaticKeepAliveClientMixin.prototype = {
    _ensureKeepAlive$0: function() {
      var t1 = new L.KeepAliveHandle(new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      this.AutomaticKeepAliveClientMixin__keepAliveHandle = t1;
      new L.KeepAliveNotification(t1).dispatch$1(this._framework$_element);
    },
    updateKeepAlive$0: function() {
      var t1, _this = this;
      if (_this.get$wantKeepAlive()) {
        if (_this.AutomaticKeepAliveClientMixin__keepAliveHandle == null)
          _this._ensureKeepAlive$0();
      } else {
        t1 = _this.AutomaticKeepAliveClientMixin__keepAliveHandle;
        if (t1 != null) {
          t1.notifyListeners$0();
          _this.AutomaticKeepAliveClientMixin__keepAliveHandle = null;
        }
      }
    },
    build$1: function(context) {
      if (this.get$wantKeepAlive() && this.AutomaticKeepAliveClientMixin__keepAliveHandle == null)
        this._ensureKeepAlive$0();
      return null;
    }
  };
  T.Directionality.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return this.textDirection != oldWidget.textDirection;
    }
  };
  T.Opacity.prototype = {
    createRenderObject$1: function(context) {
      var t2,
        t1 = this.opacity;
      t1 = new E.RenderOpacity(C.JSNumber_methods.round$0(J.clamp$2$n(t1, 0, 1) * 255), t1, false, null);
      t1.get$isRepaintBoundary();
      t2 = t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = t2;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$opacity(0, this.opacity);
      renderObject.set$alwaysIncludeSemantics(false);
    }
  };
  T.CustomPaint.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new V.RenderCustomPaint(this.painter, this.foregroundPainter, C.Size_0_0, false, false, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$painter(this.painter);
      renderObject.set$foregroundPainter(this.foregroundPainter);
      renderObject.set$preferredSize(C.Size_0_0);
      renderObject.willChange = renderObject.isComplex = false;
    },
    didUnmountRenderObject$1: function(renderObject) {
      renderObject.set$painter(null);
      renderObject.set$foregroundPainter(null);
    }
  };
  T.ClipRect.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderClipRect(null, C.Clip_1, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$clipper(null);
      renderObject.set$clipBehavior(C.Clip_1);
    },
    didUnmountRenderObject$1: function(renderObject) {
      renderObject.set$clipper(null);
    }
  };
  T.ClipPath.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderClipPath(this.clipper, this.clipBehavior, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$clipper(this.clipper);
      renderObject.set$clipBehavior(this.clipBehavior);
    },
    didUnmountRenderObject$1: function(renderObject) {
      renderObject.set$clipper(null);
    }
  };
  T.PhysicalModel.prototype = {
    createRenderObject$1: function(context) {
      var _this = this,
        t1 = new E.RenderPhysicalModel(_this.shape, _this.borderRadius, _this.elevation, _this.shadowColor, _this.color, null, _this.clipBehavior, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = true;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var _this = this;
      renderObject.set$shape(0, _this.shape);
      renderObject.set$clipBehavior(_this.clipBehavior);
      renderObject.set$borderRadius(0, _this.borderRadius);
      renderObject.set$elevation(0, _this.elevation);
      renderObject.set$color(0, _this.color);
      renderObject.set$shadowColor(0, _this.shadowColor);
    }
  };
  T.PhysicalShape.prototype = {
    createRenderObject$1: function(context) {
      var _this = this,
        t1 = new E.RenderPhysicalShape(_this.elevation, _this.shadowColor, _this.color, _this.clipper, _this.clipBehavior, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = true;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var _this = this;
      renderObject.set$clipper(_this.clipper);
      renderObject.set$clipBehavior(_this.clipBehavior);
      renderObject.set$elevation(0, _this.elevation);
      renderObject.set$color(0, _this.color);
      renderObject.set$shadowColor(0, _this.shadowColor);
    }
  };
  T.Transform.prototype = {
    createRenderObject$1: function(context) {
      var t1 = T.Directionality_of(context),
        t2 = new E.RenderTransform(this.transformHitTests, null);
      t2.get$isRepaintBoundary();
      t2.get$alwaysNeedsCompositing();
      t2._needsCompositing = false;
      t2.set$child(null);
      t2.set$transform(0, this.transform);
      t2.set$alignment(this.alignment);
      t2.set$textDirection(t1);
      t2.set$origin(0, null);
      return t2;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$transform(0, this.transform);
      renderObject.set$origin(0, null);
      renderObject.set$alignment(this.alignment);
      renderObject.set$textDirection(T.Directionality_of(context));
      renderObject.transformHitTests = this.transformHitTests;
    }
  };
  T.FractionalTranslation.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderFractionalTranslation(this.translation, this.transformHitTests, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$translation(this.translation);
      renderObject.transformHitTests = this.transformHitTests;
    }
  };
  T.Padding.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new T.RenderPadding(this.padding, T.Directionality_of(context), null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$padding(0, this.padding);
      renderObject.set$textDirection(T.Directionality_of(context));
    }
  };
  T.Align.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new T.RenderPositionedBox(this.widthFactor, this.heightFactor, this.alignment, T.Directionality_of(context), null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$alignment(this.alignment);
      renderObject.set$widthFactor(this.widthFactor);
      renderObject.set$heightFactor(this.heightFactor);
      renderObject.set$textDirection(T.Directionality_of(context));
    }
  };
  T.Center.prototype = {};
  T.CustomSingleChildLayout.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new T.RenderCustomSingleChildLayoutBox(this.delegate, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$delegate(this.delegate);
    }
  };
  T.LayoutId.prototype = {
    applyParentData$1: function(renderObject) {
      var targetParent,
        parentData = type$.MultiChildLayoutParentData._as(renderObject.parentData),
        t1 = this.id;
      if (parentData.id !== t1) {
        parentData.id = t1;
        targetParent = renderObject._node$_parent;
        if (targetParent instanceof K.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  T.CustomMultiChildLayout.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new B.RenderCustomMultiChildLayoutBox(this.delegate, 0, null, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$delegate(this.delegate);
    }
  };
  T.SizedBox.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderConstrainedBox(S.BoxConstraints$tightFor(this.height, this.width), null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$additionalConstraints(S.BoxConstraints$tightFor(this.height, this.width));
    },
    toStringShort$0: function() {
      var type, _this = this,
        t1 = _this.width;
      if (t1 === 1 / 0 && _this.height === 1 / 0)
        type = "SizedBox.expand";
      else
        type = t1 === 0 && _this.height === 0 ? "SizedBox.shrink" : "SizedBox";
      t1 = _this.key;
      return t1 == null ? type : type + "-" + t1.toString$0(0);
    }
  };
  T.ConstrainedBox.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderConstrainedBox(this.constraints, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$additionalConstraints(this.constraints);
    }
  };
  T.LimitedBox.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderLimitedBox(this.maxWidth, this.maxHeight, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$maxWidth(0, this.maxWidth);
      renderObject.set$maxHeight(0, this.maxHeight);
    }
  };
  T.Offstage.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderOffstage(this.offstage, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$offstage(this.offstage);
    },
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new T._OffstageElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
    }
  };
  T._OffstageElement.prototype = {
    get$widget: function() {
      return type$.Offstage._as(N.SingleChildRenderObjectElement.prototype.get$widget.call(this));
    }
  };
  T.SliverPadding.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new T.RenderSliverPadding(this.padding, T.Directionality_of(context), null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$padding(0, this.padding);
      renderObject.set$textDirection(T.Directionality_of(context));
    }
  };
  T.Stack.prototype = {
    createRenderObject$1: function(context) {
      var t1 = T.Directionality_of(context);
      t1 = new K.RenderStack(this.alignment, t1, this.fit, C.Overflow_1, 0, null, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var t1;
      renderObject.set$alignment(this.alignment);
      t1 = T.Directionality_of(context);
      renderObject.set$textDirection(t1);
      t1 = this.fit;
      if (renderObject._fit !== t1) {
        renderObject._fit = t1;
        renderObject.markNeedsLayout$0();
      }
      if (renderObject._overflow !== C.Overflow_1) {
        renderObject._overflow = C.Overflow_1;
        renderObject.markNeedsPaint$0();
      }
    }
  };
  T.Positioned.prototype = {
    applyParentData$1: function(renderObject) {
      var needsLayout, targetParent, _this = this,
        parentData = type$.StackParentData._as(renderObject.parentData),
        t1 = _this.left;
      if (parentData.left != t1) {
        parentData.left = t1;
        needsLayout = true;
      } else
        needsLayout = false;
      t1 = _this.top;
      if (parentData.top != t1) {
        parentData.top = t1;
        needsLayout = true;
      }
      t1 = _this.right;
      if (parentData.right != t1) {
        parentData.right = t1;
        needsLayout = true;
      }
      t1 = _this.bottom;
      if (parentData.bottom != t1) {
        parentData.bottom = t1;
        needsLayout = true;
      }
      t1 = _this.width;
      if (parentData.width != t1) {
        parentData.width = t1;
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject._node$_parent;
        if (targetParent instanceof K.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  T.PositionedDirectional.prototype = {
    build$1: function(context) {
      var left, _this = this, _null = null,
        right = _this.start;
      switch (T.Directionality_of(context)) {
        case C.TextDirection_0:
          left = _null;
          break;
        case C.TextDirection_1:
          left = right;
          right = _null;
          break;
        default:
          right = _null;
          left = right;
      }
      return T.Positioned$(_this.bottom, _this.child, _null, _null, left, right, _this.top, _this.width);
    }
  };
  T.Flex.prototype = {
    get$_needTextDirection: function() {
      switch (this.direction) {
        case C.Axis_0:
          return true;
        case C.Axis_1:
          var t1 = this.crossAxisAlignment;
          return t1 === C.CrossAxisAlignment_0 || t1 === C.CrossAxisAlignment_1;
      }
      return null;
    },
    getEffectiveTextDirection$1: function(context) {
      var t1 = this.get$_needTextDirection() ? T.Directionality_of(context) : null;
      return t1;
    },
    createRenderObject$1: function(context) {
      var _this = this;
      return F.RenderFlex$(null, _this.crossAxisAlignment, _this.direction, _this.mainAxisAlignment, _this.mainAxisSize, _this.textBaseline, _this.getEffectiveTextDirection$1(context), _this.verticalDirection);
    },
    updateRenderObject$2: function(context, renderObject) {
      var _this = this;
      renderObject.set$direction(0, _this.direction);
      renderObject.set$mainAxisAlignment(_this.mainAxisAlignment);
      renderObject.set$mainAxisSize(_this.mainAxisSize);
      renderObject.set$crossAxisAlignment(_this.crossAxisAlignment);
      renderObject.set$textDirection(_this.getEffectiveTextDirection$1(context));
      renderObject.set$verticalDirection(_this.verticalDirection);
      renderObject.set$textBaseline(0, _this.textBaseline);
    }
  };
  T.Row.prototype = {};
  T.Column.prototype = {};
  T.Flexible.prototype = {
    applyParentData$1: function(renderObject) {
      var needsLayout, targetParent,
        parentData = type$.FlexParentData._as(renderObject.parentData),
        t1 = this.flex;
      if (parentData.flex !== t1) {
        parentData.flex = t1;
        needsLayout = true;
      } else
        needsLayout = false;
      t1 = this.fit;
      if (parentData.fit !== t1) {
        parentData.fit = t1;
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject._node$_parent;
        if (targetParent instanceof K.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  T.Expanded.prototype = {};
  T.RichText.prototype = {
    createRenderObject$1: function(context) {
      var t3, t4, t5, _this = this, _null = null,
        t1 = _this.text,
        t2 = _this.textDirection;
      if (t2 == null)
        t2 = T.Directionality_of(context);
      t3 = _this.overflow;
      t4 = L.Localizations_localeOf(context, true);
      t5 = t3 === C.TextOverflow_2 ? "\u2026" : _null;
      t3 = new Q.RenderParagraph(U.TextPainter$(t5, t4, _this.maxLines, _this.strutStyle, t1, _this.textAlign, t2, _this.textHeightBehavior, _this.textScaleFactor, _this.textWidthBasis), _this.softWrap, t3, 0, _null, _null);
      t3.get$isRepaintBoundary();
      t3.get$alwaysNeedsCompositing();
      t3._needsCompositing = false;
      t3.addAll$1(0, _null);
      t3._extractPlaceholderSpans$1(t1);
      return t3;
    },
    updateRenderObject$2: function(context, renderObject) {
      var t1, _this = this;
      renderObject.set$text(0, _this.text);
      renderObject.set$textAlign(0, _this.textAlign);
      t1 = _this.textDirection;
      renderObject.set$textDirection(t1 == null ? T.Directionality_of(context) : t1);
      renderObject.set$softWrap(_this.softWrap);
      renderObject.set$overflow(0, _this.overflow);
      renderObject.set$textScaleFactor(_this.textScaleFactor);
      renderObject.set$maxLines(_this.maxLines);
      renderObject.set$strutStyle(_this.strutStyle);
      renderObject.set$textWidthBasis(_this.textWidthBasis);
      renderObject.set$textHeightBehavior(_this.textHeightBehavior);
      t1 = L.Localizations_localeOf(context, true);
      renderObject.set$locale(0, t1);
    }
  };
  T.RichText__extractChildren_closure.prototype = {
    call$1: function(span) {
      return true;
    }
  };
  T.DefaultAssetBundle.prototype = {};
  T.Listener.prototype = {
    build$1: function(context) {
      var _this = this;
      return new T._PointerListener(_this.onPointerDown, null, _this.onPointerUp, _this.onPointerCancel, _this.onPointerSignal, _this.behavior, _this._basic$_child, null);
    }
  };
  T._PointerListener.prototype = {
    createRenderObject$1: function(context) {
      var _this = this,
        t1 = new E.RenderPointerListener(_this.onPointerDown, _this.onPointerMove, _this.onPointerUp, _this.onPointerCancel, _this.onPointerSignal, _this.behavior, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var _this = this;
      renderObject.onPointerDown = _this.onPointerDown;
      renderObject.onPointerMove = _this.onPointerMove;
      renderObject.onPointerUp = _this.onPointerUp;
      renderObject.onPointerCancel = _this.onPointerCancel;
      renderObject.onPointerSignal = _this.onPointerSignal;
      renderObject.behavior = _this.behavior;
    }
  };
  T.MouseRegion.prototype = {
    createState$0: function() {
      return new T._MouseRegionState(C._StateLifecycle_0);
    },
    onExit$1: function($receiver, arg0) {
      return this.onExit.call$1(arg0);
    }
  };
  T._MouseRegionState.prototype = {
    handleExit$1: function($event) {
      var t1 = this._widget;
      if (t1.onExit != null && this._framework$_element != null)
        t1.onExit$1(0, $event);
    },
    getHandleExit$0: function() {
      return this._widget.onExit == null ? null : this.get$handleExit();
    },
    build$1: function(context) {
      return new T._RawMouseRegion(this, this._widget.child, null);
    }
  };
  T._RawMouseRegion.prototype = {
    createRenderObject$1: function(context) {
      var t1 = this.owner,
        widget = t1._widget,
        t2 = widget.onEnter,
        t3 = widget.onHover;
      t1 = t1.getHandleExit$0();
      t1 = new E.RenderMouseRegion(widget.opaque, t2, t3, t1, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      t1._hoverAnnotation = new Y.MouseTrackerAnnotation(t1.get$_handleEnter(), t1.get$_handleHover(), t1.get$_handleExit());
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var t1 = this.owner,
        widget = t1._widget,
        t2 = widget.onEnter;
      if (!J.$eq$(renderObject._onEnter, t2)) {
        renderObject._onEnter = t2;
        renderObject._markPropertyUpdated$1$mustRepaint(false);
      }
      t1 = t1.getHandleExit$0();
      if (!J.$eq$(renderObject._onExit, t1)) {
        renderObject._onExit = t1;
        renderObject._markPropertyUpdated$1$mustRepaint(false);
      }
      t1 = widget.opaque;
      if (renderObject._proxy_box$_opaque !== t1) {
        renderObject._proxy_box$_opaque = t1;
        renderObject._markPropertyUpdated$1$mustRepaint(true);
      }
    }
  };
  T.RepaintBoundary.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderRepaintBoundary(null);
      t1.get$isRepaintBoundary();
      t1._needsCompositing = true;
      t1.set$child(null);
      return t1;
    }
  };
  T.IgnorePointer.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderIgnorePointer(this.ignoring, this.ignoringSemantics, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$ignoring(this.ignoring);
      renderObject.set$ignoringSemantics(this.ignoringSemantics);
    }
  };
  T.AbsorbPointer.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderAbsorbPointer(false, null, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$absorbing(false);
      renderObject.set$ignoringSemantics(null);
    }
  };
  T.Semantics.prototype = {
    createRenderObject$1: function(context) {
      var _this = this, _null = null,
        t1 = _this.properties;
      t1 = new E.RenderSemanticsAnnotations(_this.container, _this.explicitChildNodes, false, t1.checked, t1.enabled, t1.selected, t1.button, t1.link, t1.header, t1.textField, t1.readOnly, t1.focusable, t1.focused, t1.inMutuallyExclusiveGroup, t1.obscured, t1.multiline, t1.scopesRoute, t1.namesRoute, t1.hidden, t1.image, t1.liveRegion, t1.maxValueLength, t1.currentValueLength, t1.toggled, t1.label, t1.value, t1.increasedValue, t1.decreasedValue, t1.hint, t1.hintOverrides, _this._getTextDirection$1(context), t1.sortKey, t1.onTap, t1.onDismiss, t1.onLongPress, t1.onScrollLeft, t1.onScrollRight, t1.onScrollUp, t1.onScrollDown, t1.onIncrease, t1.onDecrease, t1.onCopy, t1.onCut, t1.onPaste, t1.onMoveCursorForwardByCharacter, t1.onMoveCursorBackwardByCharacter, _null, _null, t1.onSetSelection, t1.onDidGainAccessibilityFocus, t1.onDidLoseAccessibilityFocus, t1.customSemanticsActions, _null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(_null);
      return t1;
    },
    _getTextDirection$1: function(context) {
      var containsText,
        t1 = this.properties,
        t2 = t1.textDirection;
      if (t2 != null)
        return t2;
      if (t1.label == null)
        containsText = false;
      else
        containsText = true;
      if (!containsText)
        return null;
      return T.Directionality_of(context);
    },
    updateRenderObject$2: function(context, renderObject) {
      var t1, t2, _this = this;
      renderObject.set$container(_this.container);
      renderObject.set$explicitChildNodes(_this.explicitChildNodes);
      renderObject.set$excludeSemantics(false);
      t1 = _this.properties;
      renderObject.set$scopesRoute(t1.scopesRoute);
      renderObject.set$enabled(0, t1.enabled);
      renderObject.set$checked(0, t1.checked);
      renderObject.set$toggled(t1.toggled);
      renderObject.set$selected(0, t1.selected);
      renderObject.set$button(0, t1.button);
      renderObject.set$link(t1.link);
      renderObject.set$header(t1.header);
      renderObject.set$textField(t1.textField);
      renderObject.set$readOnly(0, t1.readOnly);
      renderObject.set$focusable(t1.focusable);
      renderObject.set$focused(0, t1.focused);
      renderObject.set$inMutuallyExclusiveGroup(t1.inMutuallyExclusiveGroup);
      renderObject.set$obscured(t1.obscured);
      renderObject.set$multiline(0, t1.multiline);
      renderObject.set$hidden(0, t1.hidden);
      renderObject.set$image(0, t1.image);
      renderObject.set$liveRegion(t1.liveRegion);
      renderObject.set$maxValueLength(t1.maxValueLength);
      renderObject.set$currentValueLength(t1.currentValueLength);
      renderObject.set$label(0, t1.label);
      renderObject.set$value(0, t1.value);
      renderObject.set$increasedValue(t1.increasedValue);
      renderObject.set$decreasedValue(t1.decreasedValue);
      renderObject.set$hint(0, t1.hint);
      renderObject.set$hintOverrides(t1.hintOverrides);
      renderObject.set$namesRoute(t1.namesRoute);
      renderObject.set$textDirection(_this._getTextDirection$1(context));
      renderObject.set$sortKey(t1.sortKey);
      renderObject.set$onTap(t1.onTap);
      renderObject.set$onLongPress(t1.onLongPress);
      renderObject.set$onScrollLeft(t1.onScrollLeft);
      renderObject.set$onScrollRight(t1.onScrollRight);
      renderObject.set$onScrollUp(t1.onScrollUp);
      renderObject.set$onScrollDown(t1.onScrollDown);
      renderObject.set$onIncrease(t1.onIncrease);
      renderObject.set$onDismiss(t1.onDismiss);
      renderObject.set$onDecrease(t1.onDecrease);
      renderObject.set$onCopy(0, t1.onCopy);
      renderObject.set$onCut(0, t1.onCut);
      renderObject.set$onPaste(0, t1.onPaste);
      t2 = t1.onMoveCursorForwardByCharacter;
      renderObject.set$onMoveCursorForwardByCharacter(t2);
      renderObject.set$onMoveCursorBackwardByCharacter(t2);
      renderObject.set$onMoveCursorForwardByWord(null);
      renderObject.set$onMoveCursorBackwardByWord(null);
      renderObject.set$onSetSelection(t1.onSetSelection);
      renderObject.set$onDidGainAccessibilityFocus(t1.onDidGainAccessibilityFocus);
      renderObject.set$onDidLoseAccessibilityFocus(t1.onDidLoseAccessibilityFocus);
      renderObject.set$customSemanticsActions(t1.customSemanticsActions);
    }
  };
  T.MergeSemantics.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderMergeSemantics(null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    }
  };
  T.BlockSemantics.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderBlockSemantics(true, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$blocking(true);
    }
  };
  T.ExcludeSemantics.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderExcludeSemantics(this.excluding, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$excluding(this.excluding);
    }
  };
  T.IndexedSemantics.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderIndexedSemantics(this.index, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$index(0, this.index);
    }
  };
  T.KeyedSubtree.prototype = {
    build$1: function(context) {
      return this.child;
    }
  };
  T.Builder.prototype = {
    build$1: function(context) {
      return this.builder.call$1(context);
    }
  };
  T.ColoredBox.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new T._RenderColoredBox(this.color, C.HitTestBehavior_1, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$color(0, this.color);
    }
  };
  T._RenderColoredBox.prototype = {
    set$color: function(_, value) {
      if (J.$eq$(value, this._basic$_color))
        return;
      this._basic$_color = value;
      this.markNeedsPaint$0();
    },
    paint$2: function(context, offset) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this._size;
      if (t1._dx > 0 && t1._dy > 0) {
        t1 = context.get$canvas(context);
        t2 = _this._size;
        t3 = offset._dx;
        t4 = offset._dy;
        t5 = t2._dx;
        t2 = t2._dy;
        t6 = new H.SurfacePaint(new H.SurfacePaintData());
        t6.set$color(0, _this._basic$_color);
        t1.drawRect$2(new P.Rect(t3, t4, t3 + t5, t4 + t2), t6);
      }
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure.prototype = {
    call$0: function() {
      N.debugDumpRenderTree();
      return D.debugPrintDone();
    },
    $signature: 5
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0.prototype = {
    call$0: function() {
      N.debugDumpSemanticsTree(C.DebugSemanticsDumpOrder_1);
      return D.debugPrintDone();
    },
    $signature: 5
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1.prototype = {
    call$0: function() {
      N.debugDumpSemanticsTree(C.DebugSemanticsDumpOrder_0);
      return D.debugPrintDone();
    },
    $signature: 5
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure.prototype = {
    call$1: function(timings) {
      var t1, t2, t3, t4;
      for (t1 = J.get$iterator$ax(timings), t2 = this._box_0, t3 = this.$this; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        t3._profileFramePostEvent$2(++t2.frameNumber, t4);
      }
    },
    $signature: 24
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.double),
        $async$returnValue;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $._timeDilation;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 58
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0.prototype = {
    call$1: function(value) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure(value);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure: function(value) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null);
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              N.timeDilation(value);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  N.WidgetsBindingObserver.prototype = {
    didPopRoute$0: function() {
      var t1 = new P._Future($.Zone__current, type$._Future_bool);
      t1._asyncComplete$1(false);
      return t1;
    },
    didPushRoute$1: function(route) {
      var t1 = new P._Future($.Zone__current, type$._Future_bool);
      t1._asyncComplete$1(false);
      return t1;
    },
    didChangeMetrics$0: function() {
    },
    didChangePlatformBrightness$0: function() {
    }
  };
  N.WidgetsBinding.prototype = {
    handlePopRoute$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$handlePopRoute$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = P.List_List$from($async$self.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t1.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t1[_i].didPopRoute$0(), $async$handlePopRoute$0);
            case 6:
              // returning from await.
              if ($async$result) {
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              M.SystemNavigator_pop();
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$handlePopRoute$0, $async$completer);
    },
    handlePushRoute$1: function(route) {
      return this.handlePushRoute$body$WidgetsBinding(route);
    },
    handlePushRoute$body$WidgetsBinding: function(route) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$handlePushRoute$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = P.List_List$from($async$self.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t1.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t1[_i].didPushRoute$1(route), $async$handlePushRoute$1);
            case 6:
              // returning from await.
              if ($async$result) {
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$handlePushRoute$1, $async$completer);
    },
    _handleNavigationInvocation$1: function(methodCall) {
      var t1;
      switch (methodCall.method) {
        case "popRoute":
          return this.handlePopRoute$0();
        case "pushRoute":
          return this.handlePushRoute$1(H._asStringS(methodCall.$arguments));
      }
      t1 = new P._Future($.Zone__current, type$._Future_dynamic);
      t1._asyncComplete$1(null);
      return t1;
    },
    _handleBuildScheduled$0: function() {
      this.ensureVisualUpdate$0();
    },
    scheduleAttachRootWidget$1: function(rootWidget) {
      P.Timer_Timer(C.Duration_0, new N.WidgetsBinding_scheduleAttachRootWidget_closure(this, rootWidget));
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure.prototype = {
    call$0: function() {
      N.debugDumpApp();
      return D.debugPrintDone();
    },
    $signature: 5
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0.prototype = {
    call$1: function(_) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(_);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2: function(_) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["enabled", $async$self.$this.WidgetsBinding__needToReportFirstFrame ? "false" : "true"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1.prototype = {
    call$1: function(_) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(_);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1: function(_) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["enabled", $async$self.$this.WidgetsBinding__firstFrameCompleter.future._state !== 0 ? "true" : "false"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2.prototype = {
    call$1: function(params) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(params);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0: function(params) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_String),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty(H._asStringS(J.$index$asx(params, "class"))).call$1($async$self.$this.WidgetsBinding__renderViewElement);
              t1 = type$.String;
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["Success", "true"], t1, t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty.prototype = {
    call$1: function(element) {
      var t1;
      if (element == null)
        return;
      t1 = element.get$widget();
      t1 = t1 == null ? null : H.getRuntimeType(t1);
      t1 = t1 == null ? null : t1.toString$0(0);
      t1 = t1 == null ? null : C.JSString_methods.startsWith$1(t1, this.className);
      if (t1 === true)
        element.markNeedsBuild$0();
      element.visitChildren$1(this);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.debugProfileBuildsEnabled;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 52
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4.prototype = {
    call$1: function(value) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure(value);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure: function(value) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null);
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($.debugProfileBuildsEnabled !== value)
                $.debugProfileBuildsEnabled = value;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure.prototype = {
    call$1: function(timings) {
      var t1;
      P.Timeline_instantSync("Rasterized first useful frame", null);
      P.postEvent("Flutter.FirstFrame", P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic));
      t1 = this._box_0;
      $.SchedulerBinding__instance.removeTimingsCallback$1(t1.firstFrameCallback);
      t1.firstFrameCallback = null;
      this.$this.WidgetsBinding__firstFrameCompleter.complete$0(0);
    },
    $signature: 24
  };
  N.WidgetsBinding_scheduleAttachRootWidget_closure.prototype = {
    call$0: function() {
      var t2,
        t1 = this.$this;
      t1.WidgetsBinding__readyToProduceFrames = true;
      t2 = t1.RendererBinding__pipelineOwner._rootNode;
      t1.WidgetsBinding__renderViewElement = new N.RenderObjectToWidgetAdapter(this.rootWidget, t2, "[root]", new N.GlobalObjectKey(t2, type$.GlobalObjectKey_State_StatefulWidget), type$.RenderObjectToWidgetAdapter_RenderBox).attachToRenderTree$2(t1.WidgetsBinding__buildOwner, type$.RenderObjectToWidgetElement_RenderBox._as(t1.WidgetsBinding__renderViewElement));
    },
    $signature: 0
  };
  N.RenderObjectToWidgetAdapter.prototype = {
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.RenderObjectToWidgetElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2), this.$ti._eval$1("RenderObjectToWidgetElement<1>"));
    },
    createRenderObject$1: function(context) {
      return this.container;
    },
    updateRenderObject$2: function(context, renderObject) {
    },
    attachToRenderTree$2: function(owner, element) {
      var t1 = {};
      t1.element = element;
      if (element == null) {
        owner.lockState$1(new N.RenderObjectToWidgetAdapter_attachToRenderTree_closure(t1, this, owner));
        owner.buildScope$2(t1.element, new N.RenderObjectToWidgetAdapter_attachToRenderTree_closure0(t1));
        $.SchedulerBinding__instance.ensureVisualUpdate$0();
      } else {
        element._newWidget = this;
        element.markNeedsBuild$0();
      }
      return t1.element;
    },
    toStringShort$0: function() {
      return this.debugShortDescription;
    }
  };
  N.RenderObjectToWidgetAdapter_attachToRenderTree_closure.prototype = {
    call$0: function() {
      var element,
        t1 = this.$this,
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      element = new N.RenderObjectToWidgetElement(t2, t1, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2), t1.$ti._eval$1("RenderObjectToWidgetElement<1>"));
      this._box_0.element = element;
      element._owner = this.owner;
    },
    $signature: 0
  };
  N.RenderObjectToWidgetAdapter_attachToRenderTree_closure0.prototype = {
    call$0: function() {
      var t1 = this._box_0.element;
      t1.toString;
      t1.super$RootRenderObjectElement$mount(null, null);
      t1._rebuild$0();
    },
    $signature: 0
  };
  N.RenderObjectToWidgetElement.prototype = {
    get$widget: function() {
      return this.$ti._eval$1("RenderObjectToWidgetAdapter<1>")._as(N.RenderObjectElement.prototype.get$widget.call(this));
    },
    visitChildren$1: function(visitor) {
      var t1 = this._child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1: function(child) {
      this._child = null;
      this.super$Element$forgetChild(child);
    },
    mount$2: function($parent, newSlot) {
      this.super$RootRenderObjectElement$mount($parent, newSlot);
      this._rebuild$0();
    },
    update$1: function(_, newWidget) {
      this.super$RenderObjectElement$update(0, newWidget);
      this._rebuild$0();
    },
    performRebuild$0: function() {
      var _this = this,
        t1 = _this._newWidget;
      if (t1 != null) {
        _this._newWidget = null;
        _this.super$RenderObjectElement$update(0, _this.$ti._eval$1("RenderObjectToWidgetAdapter<1>")._as(t1));
        _this._rebuild$0();
      }
      _this.super$RenderObjectElement$performRebuild();
    },
    _rebuild$0: function() {
      var exception, stack, details, error, exception0, _this = this, _null = null;
      try {
        _this._child = _this.updateChild$3(_this._child, _this.$ti._eval$1("RenderObjectToWidgetAdapter<1>")._as(N.RenderObjectElement.prototype.get$widget.call(_this)).child, C.C_Object);
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        stack = H.getTraceFromException(exception0);
        details = U.FlutterErrorDetails$(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["attaching to the render tree"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), exception, _null, "widgets library", false, stack);
        $.$get$FlutterError_onError().call$1(details);
        error = N.ErrorWidget__defaultErrorWidgetBuilder(details);
        _this._child = _this.updateChild$3(_null, error, C.C_Object);
      }
    },
    get$renderObject: function() {
      return this.$ti._eval$1("RenderObjectWithChildMixin<1>")._as(N.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    insertChildRenderObject$2: function(child, slot) {
      var t1 = this.$ti;
      t1._eval$1("RenderObjectWithChildMixin<1>")._as(N.RenderObjectElement.prototype.get$renderObject.call(this)).set$child(t1._precomputed1._as(child));
    },
    moveChildRenderObject$2: function(child, slot) {
    },
    removeChildRenderObject$1: function(child) {
      this.$ti._eval$1("RenderObjectWithChildMixin<1>")._as(N.RenderObjectElement.prototype.get$renderObject.call(this)).set$child(null);
    }
  };
  N.WidgetsFlutterBinding.prototype = {};
  N._WidgetsFlutterBinding_BindingBase_GestureBinding.prototype = {
    initInstances$0: function() {
      this.super$BindingBase$initInstances();
      $.GestureBinding__instance = this;
      var t1 = $.$get$window();
      t1._onPointerDataPacket = this.get$_handlePointerDataPacket();
      t1._onPointerDataPacketZone = $.Zone__current;
    },
    unlocked$0: function() {
      this.super$BindingBase$unlocked();
      this._flushPointerEventQueue$0();
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding.prototype = {
    initInstances$0: function() {
      var _this = this, t1 = {};
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$initInstances();
      $.SchedulerBinding__instance = _this;
      t1.frameNumber = 0;
      _this.addTimingsCallback$1(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure(t1, _this));
    },
    initServiceExtensions$0: function() {
      this.super$BindingBase$initServiceExtensions();
      this.registerNumericServiceExtension$3$getter$name$setter(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure(), "timeDilation", new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0());
    },
    unlocked$0: function() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$unlocked();
      if (this.SchedulerBinding__taskQueue._priority_queue$_length !== 0)
        this._ensureEventLoopCallback$0();
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding.prototype = {
    initInstances$0: function() {
      var _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initInstances();
      $.ServicesBinding__instance = _this;
      _this.ServicesBinding__defaultBinaryMessenger = C.C__DefaultBinaryMessenger;
      $.$get$window().set$onPlatformMessage(C.C__DefaultBinaryMessenger.get$handlePlatformMessage());
      F.LicenseRegistry_addLicense(_this.get$_addLicenses());
      C.BasicMessageChannel_Qma.setMessageHandler$1(_this.get$handleSystemMessage());
      C.BasicMessageChannel_No7.setMessageHandler$1(_this.get$_handleLifecycleMessage());
      _this.readInitialLifecycleStateFromNativeWindow$0();
    },
    initServiceExtensions$0: function() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initServiceExtensions();
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype = {
    initInstances$0: function() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initInstances();
      $.PaintingBinding__instance = this;
      var t1 = type$.Object;
      this.PaintingBinding__imageCache = new E.ImageCache(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._PendingImage), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._CachedImage), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._LiveImage));
      C.C_DefaultShaderWarmUp.execute$0();
    },
    handleMemoryPressure$0: function() {
      this.super$ServicesBinding$handleMemoryPressure();
      this.PaintingBinding__imageCache.clear$0(0);
    },
    handleSystemMessage$1: function(systemMessage) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$handleSystemMessage$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.super$ServicesBinding$handleSystemMessage(systemMessage), $async$handleSystemMessage$1);
            case 3:
              // returning from await.
              switch (H._asStringS(J.$index$asx(type$.Map_String_dynamic._as(systemMessage), "type"))) {
                case "fontsChange":
                  $async$self.PaintingBinding__systemFonts.notifyListeners$0();
                  break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$handleSystemMessage$1, $async$completer);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding.prototype = {
    initInstances$0: function() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$initInstances();
      $.SemanticsBinding__instance = this;
      this.SemanticsBinding__accessibilityFeatures = $.$get$window()._accessibilityFeatures;
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding.prototype = {
    initInstances$0: function() {
      var t1, t2, _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding$initInstances();
      $.RendererBinding__instance = _this;
      t1 = type$.JSArray_RenderObject;
      _this.RendererBinding__pipelineOwner = new K.PipelineOwner(_this.get$ensureVisualUpdate(), _this.get$_handleSemanticsOwnerCreated(), _this.get$_handleSemanticsOwnerDisposed(), H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1), P.LinkedHashSet_LinkedHashSet$_empty(type$.RenderObject));
      t1 = $.$get$window();
      t1._onMetricsChanged = _this.get$handleMetricsChanged();
      t2 = t1._onMetricsChangedZone = $.Zone__current;
      t1._onPlatformBrightnessChanged = _this.get$handlePlatformBrightnessChanged();
      t1._onPlatformBrightnessChangedZone = t2;
      t1._onSemanticsEnabledChanged = _this.get$_handleSemanticsEnabledChanged();
      t1._onSemanticsEnabledChangedZone = t2;
      t1._onSemanticsAction = _this.get$_handleSemanticsAction();
      t1._onSemanticsActionZone = t2;
      _this.initRenderView$0();
      _this.setSemanticsEnabled$1(H.EngineSemanticsOwner_instance()._semanticsEnabled);
      _this.SchedulerBinding__persistentCallbacks.push(_this.get$_handlePersistentFrameCallback());
      _this.initMouseTracker$0();
    },
    initServiceExtensions$0: function() {
      var _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initServiceExtensions();
      _this.registerSignalServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure(), "debugDumpRenderTree");
      _this.registerSignalServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0(), "debugDumpSemanticsTreeInTraversalOrder");
      _this.registerSignalServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1(), "debugDumpSemanticsTreeInInverseHitTestOrder");
    },
    hitTest$2: function(result, position) {
      this.RendererBinding__pipelineOwner._rootNode.hitTest$2$position(result, position);
      this.super$GestureBinding$hitTest(result, position);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding.prototype = {
    initInstances$0: function() {
      var t1, _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initInstances();
      $.WidgetsBinding__instance = _this;
      t1 = new N.BuildOwner(new N._InactiveElements(P.HashSet_HashSet(type$.Element_2)), H.setRuntimeTypeInfo([], type$.JSArray_Element_2), O.FocusManager$());
      _this.WidgetsBinding__buildOwner = t1;
      t1.onBuildScheduled = _this.get$_handleBuildScheduled();
      $.$get$window().toString;
      C.MethodChannel_gc6.setMethodCallHandler$1(_this.get$_handleNavigationInvocation());
      $.FlutterErrorDetails_propertiesTransformers.push(N.widget_inspector__transformDebugCreator$closure());
    },
    initServiceExtensions$0: function() {
      var _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initServiceExtensions();
      _this.registerSignalServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure(), "debugDumpApp");
      _this.registerServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(_this), "didSendFirstFrameEvent");
      _this.registerServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(_this), "didSendFirstFrameRasterizedEvent");
      _this.registerServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(_this), "fastReassemble");
      _this.registerBoolServiceExtension$3$getter$name$setter(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3(), "profileWidgetBuilds", new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4());
    },
    handleMetricsChanged$0: function() {
      var t1, t2, _i;
      this.super$RendererBinding$handleMetricsChanged();
      for (t1 = this.WidgetsBinding__observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].didChangeMetrics$0();
    },
    handlePlatformBrightnessChanged$0: function() {
      var t1, t2, _i;
      this.super$RendererBinding$handlePlatformBrightnessChanged();
      for (t1 = this.WidgetsBinding__observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].didChangePlatformBrightness$0();
    },
    handleAppLifecycleStateChanged$1: function(state) {
      var t1, _i;
      this.super$SchedulerBinding$handleAppLifecycleStateChanged(state);
      for (t1 = this.WidgetsBinding__observers.length, _i = 0; _i < t1; ++_i)
        ;
    },
    handleMemoryPressure$0: function() {
      var t1, _i;
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$handleMemoryPressure();
      for (t1 = this.WidgetsBinding__observers.length, _i = 0; _i < t1; ++_i)
        ;
    },
    drawFrame$0: function() {
      var firstFrameCallback, t2, _this = this, t1 = {};
      t1.firstFrameCallback = null;
      if (_this.WidgetsBinding__needToReportFirstFrame) {
        firstFrameCallback = new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure(t1, _this);
        t1.firstFrameCallback = firstFrameCallback;
        $.SchedulerBinding__instance.addTimingsCallback$1(firstFrameCallback);
      }
      try {
        t2 = _this.WidgetsBinding__renderViewElement;
        if (t2 != null)
          _this.WidgetsBinding__buildOwner.buildScope$1(t2);
        _this.super$RendererBinding$drawFrame();
        _this.WidgetsBinding__buildOwner.finalizeTree$0();
      } finally {
      }
      if (_this.WidgetsBinding__needToReportFirstFrame)
        t2 = _this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0;
      else
        t2 = false;
      if (t2)
        P.Timeline_instantSync("Widgets built first useful frame", null);
      t2 = _this.WidgetsBinding__needToReportFirstFrame = false;
      t1 = t1.firstFrameCallback;
      if (t1 != null)
        t2 = !(_this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0);
      if (t2)
        $.SchedulerBinding__instance.removeTimingsCallback$1(t1);
    },
    get$framesEnabled: function() {
      return N.SchedulerBinding.prototype.get$framesEnabled.call(this) && this.WidgetsBinding__readyToProduceFrames;
    }
  };
  M.DecoratedBox.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderDecoratedBox(this.decoration, this.position, U.createLocalImageConfiguration(context), null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$decoration(this.decoration);
      renderObject.set$configuration(U.createLocalImageConfiguration(context));
      renderObject.set$position(0, this.position);
    }
  };
  M.Container.prototype = {
    get$_paddingIncludingDecoration: function() {
      var decorationPadding,
        t1 = this.decoration;
      if (t1 == null || t1.get$padding(t1) == null)
        return this.padding;
      decorationPadding = t1.get$padding(t1);
      t1 = this.padding;
      if (t1 == null)
        return decorationPadding;
      return t1.add$1(0, decorationPadding);
    },
    build$1: function(context) {
      var t1, effectivePadding, _this = this, _null = null,
        current = _this.child;
      if (current == null) {
        t1 = _this.constraints;
        if (t1 != null)
          t1 = !(t1.minWidth >= t1.maxWidth && t1.minHeight >= t1.maxHeight);
        else
          t1 = true;
      } else
        t1 = false;
      if (t1)
        current = new T.LimitedBox(0, 0, new T.ConstrainedBox(C.BoxConstraints_ALM, _null, _null), _null);
      t1 = _this.alignment;
      if (t1 != null)
        current = new T.Align(t1, _null, _null, current, _null);
      effectivePadding = _this.get$_paddingIncludingDecoration();
      if (effectivePadding != null)
        current = new T.Padding(effectivePadding, current, _null);
      t1 = _this.color;
      if (t1 != null)
        current = new T.ColoredBox(t1, current, _null);
      t1 = _this.decoration;
      if (t1 != null)
        current = new M.DecoratedBox(t1, C.DecorationPosition_0, current, _null);
      t1 = _this.constraints;
      if (t1 != null)
        current = new T.ConstrainedBox(t1, current, _null);
      t1 = _this.margin;
      if (t1 != null)
        current = new T.Padding(t1, current, _null);
      return current;
    }
  };
  O.FocusAttachment.prototype = {
    detach$0: function(_) {
      var t2,
        t1 = this._node;
      if (t1._attachment === this) {
        if (!t1.get$hasPrimaryFocus()) {
          t2 = t1._manager;
          t2 = t2 != null && t2._markedForFocus === t1;
        } else
          t2 = true;
        if (t2)
          t1.unfocus$1$disposition(C.UnfocusDisposition_1);
        t2 = t1._manager;
        if (t2 != null) {
          if (t2._primaryFocus === t1)
            t2._primaryFocus = null;
          t2._dirtyNodes.remove$1(0, t1);
        }
        t2 = t1._focus_manager$_parent;
        if (t2 != null)
          t2._removeChild$1(0, t1);
        t1._attachment = null;
      }
    },
    reparent$0: function() {
      var $parent,
        t1 = this._node;
      if (t1._attachment === this) {
        $parent = L.Focus_of(t1._context, true, true);
        ($parent == null ? t1._context._owner.focusManager.rootScope : $parent)._reparent$1(t1);
      }
    }
  };
  O.UnfocusDisposition.prototype = {
    toString$0: function(_) {
      return this._focus_manager$_name;
    }
  };
  O.FocusNode.prototype = {
    set$skipTraversal: function(value) {
      var t1, _this = this;
      if (value != _this._skipTraversal) {
        _this._skipTraversal = value;
        t1 = _this._manager;
        if (t1 != null)
          t1._markPropertiesChanged$1(_this);
      }
    },
    get$canRequestFocus: function() {
      var t1,
        scope = this.get$enclosingScope();
      if (this._focus_manager$_canRequestFocus)
        t1 = scope == null || scope.get$canRequestFocus();
      else
        t1 = false;
      return t1;
    },
    set$canRequestFocus: function(value) {
      var t1, _this = this;
      if (value != _this._focus_manager$_canRequestFocus) {
        if (!value)
          _this.unfocus$1$disposition(C.UnfocusDisposition_1);
        _this._focus_manager$_canRequestFocus = value;
        t1 = _this._manager;
        if (t1 != null)
          t1._markPropertiesChanged$1(_this);
      }
    },
    get$onKey: function() {
      return this._onKey;
    },
    get$descendants: function() {
      var result, t2, _i, child,
        t1 = this._descendants;
      if (t1 == null) {
        result = H.setRuntimeTypeInfo([], type$.JSArray_FocusNode);
        for (t1 = this._children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          C.JSArray_methods.addAll$1(result, child.get$descendants());
          result.push(child);
        }
        this._descendants = result;
        t1 = result;
      }
      return t1;
    },
    get$traversalDescendants: function() {
      var t1 = this.get$descendants();
      t1.toString;
      return new H.WhereIterable(t1, new O.FocusNode_traversalDescendants_closure(), H._arrayInstanceType(t1)._eval$1("WhereIterable<1>"));
    },
    get$ancestors: function() {
      var result, $parent,
        t1 = this._ancestors;
      if (t1 == null) {
        result = H.setRuntimeTypeInfo([], type$.JSArray_FocusNode);
        $parent = this._focus_manager$_parent;
        for (; $parent != null;) {
          result.push($parent);
          $parent = $parent._focus_manager$_parent;
        }
        this._ancestors = result;
        t1 = result;
      }
      return t1;
    },
    get$hasFocus: function() {
      if (!this.get$hasPrimaryFocus()) {
        var t1 = this._manager;
        t1 = t1 == null ? null : t1._primaryFocus;
        t1 = t1 == null ? null : t1.get$ancestors();
        t1 = t1 == null ? null : C.JSArray_methods.contains$1(t1, this);
        t1 = t1 === true;
      } else
        t1 = true;
      return t1;
    },
    get$hasPrimaryFocus: function() {
      var t1 = this._manager;
      return (t1 == null ? null : t1._primaryFocus) === this;
    },
    get$nearestScope: function() {
      return this.get$enclosingScope();
    },
    get$enclosingScope: function() {
      var t1 = this.get$ancestors();
      return type$.FocusScopeNode._as((t1 && C.JSArray_methods).firstWhere$2$orElse(t1, new O.FocusNode_enclosingScope_closure(), new O.FocusNode_enclosingScope_closure0()));
    },
    get$rect: function(_) {
      var bottomRight,
        object = this._context.get$renderObject(),
        t1 = object.getTransformTo$1(0, null),
        t2 = object.get$semanticBounds(),
        topLeft = T.MatrixUtils_transformPoint(t1, new P.Offset(t2.left, t2.top));
      t2 = object.getTransformTo$1(0, null);
      t1 = object.get$semanticBounds();
      bottomRight = T.MatrixUtils_transformPoint(t2, new P.Offset(t1.right, t1.bottom));
      return new P.Rect(topLeft._dx, topLeft._dy, bottomRight._dx, bottomRight._dy);
    },
    unfocus$1$disposition: function(disposition) {
      var t1, scope, scope0, _this = this;
      if (!_this.get$hasFocus()) {
        t1 = _this._manager;
        t1 = t1 == null || t1._markedForFocus !== _this;
      } else
        t1 = false;
      if (t1)
        return;
      scope = _this.get$enclosingScope();
      if (scope == null)
        return;
      switch (disposition) {
        case C.UnfocusDisposition_0:
          if (scope.get$canRequestFocus())
            C.JSArray_methods.set$length(scope._focusedChildren, 0);
          while (true) {
            scope0 = scope.get$enclosingScope();
            if (scope._focus_manager$_canRequestFocus)
              t1 = scope0 == null || scope0.get$canRequestFocus();
            else
              t1 = false;
            if (!!t1)
              break;
            scope = scope.get$enclosingScope();
            if (scope == null) {
              t1 = _this._manager;
              scope = t1 == null ? null : t1.rootScope;
            }
          }
          scope._doRequestFocus$1$findFirstFocus(false);
          break;
        case C.UnfocusDisposition_1:
          if (scope.get$canRequestFocus()) {
            t1 = scope._focusedChildren;
            C.JSArray_methods.remove$1(t1, _this);
          }
          while (true) {
            scope0 = scope.get$enclosingScope();
            if (scope._focus_manager$_canRequestFocus)
              t1 = scope0 == null || scope0.get$canRequestFocus();
            else
              t1 = false;
            if (!!t1)
              break;
            t1 = scope.get$enclosingScope();
            t1 = t1 == null ? null : t1._focusedChildren;
            if (t1 != null)
              C.JSArray_methods.remove$1(t1, scope);
            scope = scope.get$enclosingScope();
            if (scope == null) {
              t1 = _this._manager;
              scope = t1 == null ? null : t1.rootScope;
            }
          }
          scope._doRequestFocus$1$findFirstFocus(true);
          break;
      }
    },
    unfocus$0: function() {
      return this.unfocus$1$disposition(C.UnfocusDisposition_0);
    },
    _markNextFocus$1: function(newFocus) {
      var _this = this,
        t1 = _this._manager;
      if (t1 != null) {
        if (t1._primaryFocus === _this)
          t1._markedForFocus = null;
        else {
          t1._markedForFocus = _this;
          t1._markNeedsUpdate$0();
        }
        return;
      }
      newFocus._setAsFocusedChildForScope$0();
      newFocus._notify$0();
      if (newFocus !== _this)
        _this._notify$0();
    },
    _removeChild$2$removeScopeFocus: function(_, node, removeScopeFocus) {
      var t1, t2, _i;
      if (removeScopeFocus) {
        t1 = node.get$enclosingScope();
        t1 = t1 == null ? null : t1._focusedChildren;
        if (t1 != null)
          C.JSArray_methods.remove$1(t1, node);
      }
      node._focus_manager$_parent = null;
      C.JSArray_methods.remove$1(this._children, node);
      for (t1 = this.get$ancestors(), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i]._descendants = null;
      this._descendants = null;
    },
    _removeChild$1: function($receiver, node) {
      return this._removeChild$2$removeScopeFocus($receiver, node, true);
    },
    _updateManager$1: function(manager) {
      var t1, t2, _i, descendant;
      this._manager = manager;
      for (t1 = this.get$descendants(), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        descendant = t1[_i];
        descendant._manager = manager;
        descendant._ancestors = null;
      }
    },
    _reparent$1: function(child) {
      var oldScope, hadFocus, t1, t2, _i, _this = this;
      if (child._focus_manager$_parent === _this)
        return;
      oldScope = child.get$enclosingScope();
      hadFocus = child.get$hasFocus();
      t1 = child._focus_manager$_parent;
      if (t1 != null)
        t1._removeChild$2$removeScopeFocus(0, child, oldScope != _this.get$nearestScope());
      _this._children.push(child);
      child._focus_manager$_parent = _this;
      child._ancestors = null;
      child._updateManager$1(_this._manager);
      for (t1 = child.get$ancestors(), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i]._descendants = null;
      if (hadFocus) {
        t1 = _this._manager;
        t1 = t1 == null ? null : t1._primaryFocus;
        if (t1 != null)
          t1._setAsFocusedChildForScope$0();
      }
      if (oldScope != null && child._context != null && child.get$enclosingScope() !== oldScope) {
        t1 = U.FocusTraversalGroup_of(child._context, true);
        if (t1 != null)
          t1.changedScope$2$node$oldScope(child, oldScope);
      }
      if (child._requestFocusWhenReparented) {
        child._doRequestFocus$1$findFirstFocus(true);
        child._requestFocusWhenReparented = false;
      }
    },
    attach$2$onKey: function(context, onKey) {
      var _this = this;
      _this._context = context;
      _this._onKey = onKey == null ? _this._onKey : onKey;
      return _this._attachment = new O.FocusAttachment(_this);
    },
    dispose$0: function() {
      var t1 = this._attachment;
      if (t1 != null)
        t1.detach$0(0);
      this.super$ChangeNotifier$dispose();
    },
    _notify$0: function() {
      var _this = this;
      if (_this._focus_manager$_parent == null)
        return;
      if (_this.get$hasPrimaryFocus())
        _this._setAsFocusedChildForScope$0();
      _this.notifyListeners$0();
    },
    requestFocus$0: function() {
      this._doRequestFocus$1$findFirstFocus(true);
    },
    _doRequestFocus$1$findFirstFocus: function(findFirstFocus) {
      var t1, _this = this;
      if (!_this.get$canRequestFocus())
        return;
      if (_this._focus_manager$_parent == null) {
        _this._requestFocusWhenReparented = true;
        return;
      }
      _this._setAsFocusedChildForScope$0();
      if (_this.get$hasPrimaryFocus()) {
        t1 = _this._manager._markedForFocus;
        t1 = t1 == null || t1 === _this;
      } else
        t1 = false;
      if (t1)
        return;
      _this._markNextFocus$1(_this);
    },
    _setAsFocusedChildForScope$0: function() {
      var t2, scopeFocus, scopeFocus0, t3,
        t1 = this.get$ancestors();
      t1.toString;
      t1 = C.JSArray_methods.get$iterator(t1);
      t2 = new H.WhereTypeIterator(t1, type$.WhereTypeIterator_FocusScopeNode);
      scopeFocus = this;
      for (; t2.moveNext$0(); scopeFocus = scopeFocus0) {
        scopeFocus0 = t1.get$current(t1);
        t3 = scopeFocus0._focusedChildren;
        C.JSArray_methods.remove$1(t3, scopeFocus);
        t3.push(scopeFocus);
      }
    },
    debugDescribeChildren$0: function() {
      var t2, t1 = {};
      t1.count = 1;
      t2 = this._children;
      return new H.MappedListIterable(t2, new O.FocusNode_debugDescribeChildren_closure(t1), H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,DiagnosticsNode>")).toList$0(0);
    },
    toStringShort$0: function() {
      var t1, extraData, _this = this;
      _this.get$hasFocus();
      t1 = _this.get$hasFocus() && !_this.get$hasPrimaryFocus() ? "[IN FOCUS PATH]" : "";
      extraData = t1 + (_this.get$hasPrimaryFocus() ? "[PRIMARY FOCUS]" : "");
      t1 = "<optimized out>#" + Y.shortHash(_this);
      return t1 + (extraData.length !== 0 ? "(" + extraData + ")" : "");
    },
    $isListenable: 1,
    $isDiagnosticableTree: 1,
    onKey$2: function(arg0, arg1) {
      return this.get$onKey().call$2(arg0, arg1);
    }
  };
  O.FocusNode_traversalDescendants_closure.prototype = {
    call$1: function(node) {
      return !node._skipTraversal && node.get$canRequestFocus();
    }
  };
  O.FocusNode_enclosingScope_closure.prototype = {
    call$1: function(node) {
      return node instanceof O.FocusScopeNode;
    }
  };
  O.FocusNode_enclosingScope_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  O.FocusNode_debugDescribeChildren_closure.prototype = {
    call$1: function(child) {
      var t1 = "Child " + this._box_0.count++;
      child.toString;
      return new Y.DiagnosticableTreeNode(child, t1, true, true, null, null);
    }
  };
  O.FocusScopeNode.prototype = {
    get$nearestScope: function() {
      return this;
    },
    setFirstFocus$1: function(scope) {
      if (scope._focus_manager$_parent == null)
        this._reparent$1(scope);
      if (this.get$hasFocus())
        scope._doRequestFocus$1$findFirstFocus(true);
      else
        scope._setAsFocusedChildForScope$0();
    },
    _doRequestFocus$1$findFirstFocus: function(findFirstFocus) {
      var t2, scope, primaryFocus, _this = this, _null = null,
        t1 = _this._focusedChildren;
      while (true) {
        if ((t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null) != null) {
          t2 = t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null;
          scope = t2.get$enclosingScope();
          if (t2._focus_manager$_canRequestFocus)
            t2 = scope == null || scope.get$canRequestFocus();
          else
            t2 = false;
          t2 = !t2;
        } else
          t2 = false;
        if (!t2)
          break;
        t1.pop();
      }
      if (!findFirstFocus) {
        if (_this.get$canRequestFocus()) {
          _this._setAsFocusedChildForScope$0();
          _this._markNextFocus$1(_this);
        }
        return;
      }
      primaryFocus = t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null;
      if (primaryFocus == null)
        primaryFocus = _this;
      while (true) {
        if (primaryFocus instanceof O.FocusScopeNode) {
          t1 = primaryFocus._focusedChildren;
          t1 = (t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null) != null;
        } else
          t1 = false;
        if (!t1)
          break;
        t1 = primaryFocus._focusedChildren;
        primaryFocus = t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null;
      }
      if (primaryFocus === _this) {
        if (primaryFocus.get$canRequestFocus()) {
          _this._setAsFocusedChildForScope$0();
          _this._markNextFocus$1(_this);
        }
      } else
        primaryFocus._doRequestFocus$1$findFirstFocus(true);
    }
  };
  O.FocusHighlightMode.prototype = {
    toString$0: function(_) {
      return this._focus_manager$_name;
    }
  };
  O.FocusHighlightStrategy.prototype = {
    toString$0: function(_) {
      return this._focus_manager$_name;
    }
  };
  O.FocusManager.prototype = {
    _updateHighlightMode$0: function() {
      var t1, newMode, oldMode, _this = this;
      switch (C.FocusHighlightStrategy_0) {
        case C.FocusHighlightStrategy_0:
          t1 = _this._lastInteractionWasTouch;
          if (t1 == null)
            return;
          newMode = t1 ? C.FocusHighlightMode_0 : C.FocusHighlightMode_1;
          break;
        case C.FocusHighlightStrategy_1:
          newMode = C.FocusHighlightMode_0;
          break;
        case C.FocusHighlightStrategy_2:
          newMode = C.FocusHighlightMode_1;
          break;
        default:
          newMode = null;
      }
      oldMode = _this._highlightMode;
      if (oldMode == null)
        oldMode = O.FocusManager__defaultModeForPlatform();
      _this._highlightMode = newMode;
      if ((newMode == null ? O.FocusManager__defaultModeForPlatform() : newMode) != oldMode)
        _this._notifyHighlightModeListeners$0();
    },
    removeHighlightModeListener$1: function(listener) {
      var t1 = this._focus_manager$_listeners.remove$1(0, listener);
      return t1;
    },
    _notifyHighlightModeListeners$0: function() {
      var listener, exception, stack, localListeners, _i, t3, exception0, _null = null,
        t1 = this._focus_manager$_listeners,
        t2 = t1._observer_list$_map;
      if (t2.get$isEmpty(t2))
        return;
      localListeners = P.List_List$from(t1, true, type$.void_Function_FocusHighlightMode);
      for (t1 = localListeners.length, _i = 0; _i < localListeners.length; localListeners.length === t1 || (0, H.throwConcurrentModificationError)(localListeners), ++_i) {
        listener = localListeners[_i];
        try {
          if (t2.containsKey$1(0, listener)) {
            t3 = this._highlightMode;
            if (t3 == null)
              t3 = O.FocusManager__defaultModeForPlatform();
            listener.call$1(t3);
          }
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          t3 = "while dispatching notifications for " + H.getRuntimeType(this).toString$0(0);
          $.$get$FlutterError_onError().call$1(new U.FlutterErrorDetails(exception, stack, "widgets library", new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t3], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), _null, false));
        }
      }
    },
    _focus_manager$_handlePointerEvent$1: function($event) {
      var expectedMode, t1, _this = this;
      switch ($event.kind) {
        case C.PointerDeviceKind_0:
        case C.PointerDeviceKind_2:
        case C.PointerDeviceKind_3:
          _this._lastInteractionWasTouch = true;
          expectedMode = C.FocusHighlightMode_0;
          break;
        case C.PointerDeviceKind_1:
        case C.PointerDeviceKind_4:
          _this._lastInteractionWasTouch = false;
          expectedMode = C.FocusHighlightMode_1;
          break;
        default:
          expectedMode = null;
      }
      t1 = _this._highlightMode;
      if (expectedMode != (t1 == null ? O.FocusManager__defaultModeForPlatform() : t1))
        _this._updateHighlightMode$0();
    },
    _handleRawKeyEvent$1: function($event) {
      var t2, t3, t4, _i, node, _this = this,
        t1 = _this._lastInteractionWasTouch = false;
      _this._updateHighlightMode$0();
      if (_this._primaryFocus == null)
        return;
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_FocusNode);
      t2.push(_this._primaryFocus);
      for (t3 = _this._primaryFocus.get$ancestors(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)
        t2.push(t3[_i]);
      t3 = t2.length;
      _i = 0;
      for (; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        node = t2[_i];
        if (node._onKey != null ? node.onKey$2(node, $event) : t1)
          break;
      }
    },
    _markPropertiesChanged$1: function(node) {
      this._markNeedsUpdate$0();
      this._dirtyNodes.add$1(0, node);
    },
    _markNeedsUpdate$0: function() {
      if (this._haveScheduledUpdate)
        return;
      this._haveScheduledUpdate = true;
      P.scheduleMicrotask(this.get$_applyFocusChange());
    },
    _applyFocusChange$0: function() {
      var previousFocus, t1, t2, previousPath, nextPath, _this = this;
      _this._haveScheduledUpdate = false;
      previousFocus = _this._primaryFocus;
      t1 = previousFocus == null;
      if (t1 && _this._markedForFocus == null)
        _this._markedForFocus = _this.rootScope;
      t2 = _this._markedForFocus;
      if (t2 != null && t2 !== previousFocus) {
        t2 = t1 ? null : previousFocus.get$ancestors();
        previousPath = t2 == null ? null : P.LinkedHashSet_LinkedHashSet$from(t2, H._arrayInstanceType(t2)._precomputed1);
        if (previousPath == null)
          previousPath = P.LinkedHashSet_LinkedHashSet$_empty(type$.FocusNode);
        t2 = _this._markedForFocus.get$ancestors();
        t2.toString;
        nextPath = P.LinkedHashSet_LinkedHashSet$from(t2, H._arrayInstanceType(t2)._precomputed1);
        t2 = _this._dirtyNodes;
        t2.addAll$1(0, nextPath.difference$1(previousPath));
        t2.addAll$1(0, previousPath.difference$1(nextPath));
        t2 = _this._primaryFocus = _this._markedForFocus;
        _this._markedForFocus = null;
      } else
        t2 = previousFocus;
      if (previousFocus != t2) {
        if (!t1)
          _this._dirtyNodes.add$1(0, previousFocus);
        t1 = _this._primaryFocus;
        if (t1 != null)
          _this._dirtyNodes.add$1(0, t1);
      }
      for (t1 = _this._dirtyNodes, t2 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t2.moveNext$0();)
        t2._collection$_current._notify$0();
      t1.clear$0(0);
      if (previousFocus != _this._primaryFocus)
        _this.notifyListeners$0();
    },
    debugDescribeChildren$0: function() {
      return H.setRuntimeTypeInfo([new Y.DiagnosticableTreeNode(this.rootScope, "rootScope", true, true, null, null)], type$.JSArray_DiagnosticsNode);
    },
    $isListenable: 1,
    $isDiagnosticableTree: 1
  };
  O._FocusManager_Object_DiagnosticableTreeMixin.prototype = {};
  O._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier.prototype = {};
  O._FocusNode_Object_DiagnosticableTreeMixin.prototype = {};
  O._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier.prototype = {};
  L.Focus.prototype = {
    createState$0: function() {
      return new L._FocusState(C._StateLifecycle_0);
    },
    onFocusChange$1: function(arg0) {
      return this.onFocusChange.call$1(arg0);
    }
  };
  L._FocusState.prototype = {
    get$focusNode: function(_) {
      var t1 = this._widget.focusNode;
      return t1 == null ? this._internalNode : t1;
    },
    initState$0: function() {
      this.super$State$initState();
      this._initNode$0();
    },
    _initNode$0: function() {
      var t1, _this = this;
      if (_this._widget.focusNode == null)
        if (_this._internalNode == null)
          _this._internalNode = _this._createNode$0();
      if (_this._widget.skipTraversal != null)
        _this.get$focusNode(_this).set$skipTraversal(_this._widget.skipTraversal);
      if (_this._widget.canRequestFocus != null)
        _this.get$focusNode(_this).set$canRequestFocus(_this._widget.canRequestFocus);
      _this._canRequestFocus = _this.get$focusNode(_this).get$canRequestFocus();
      _this._hasPrimaryFocus = _this.get$focusNode(_this).get$hasPrimaryFocus();
      _this._focusAttachment = _this.get$focusNode(_this).attach$2$onKey(_this._framework$_element, _this._widget.onKey);
      t1 = _this.get$focusNode(_this).ChangeNotifier__listeners;
      t1._isDirty = true;
      t1._list.push(_this.get$_handleFocusChanged());
    },
    _createNode$0: function() {
      var t1 = this._widget,
        t2 = t1.debugLabel,
        t3 = t1.canRequestFocus;
      t1 = t1.skipTraversal;
      return O.FocusNode$(t3 !== false, t2, null, t1 === true);
    },
    dispose$0: function() {
      var t1, _this = this;
      _this.get$focusNode(_this).ChangeNotifier__listeners.remove$1(0, _this.get$_handleFocusChanged());
      _this._focusAttachment.detach$0(0);
      t1 = _this._internalNode;
      if (t1 != null)
        t1.dispose$0();
      _this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      this.super$State$didChangeDependencies();
      var t1 = this._focusAttachment;
      if (t1 != null)
        t1.reparent$0();
      this._handleAutofocus$0();
    },
    _handleAutofocus$0: function() {
      var t1, t2, t3, _this = this;
      if (!_this._didAutofocus && _this._widget.autofocus) {
        t1 = L.FocusScope_of(_this._framework$_element);
        t2 = _this.get$focusNode(_this);
        t3 = t1._focusedChildren;
        if ((t3.length !== 0 ? C.JSArray_methods.get$last(t3) : null) == null) {
          if (t2._focus_manager$_parent == null)
            t1._reparent$1(t2);
          t2._doRequestFocus$1$findFirstFocus(true);
        }
        _this._didAutofocus = true;
      }
    },
    deactivate$0: function() {
      this.super$State$deactivate();
      var t1 = this._focusAttachment;
      if (t1 != null)
        t1.reparent$0();
      this._didAutofocus = false;
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.focusNode;
      t2 = _this._widget;
      if (t1 == t2.focusNode) {
        if (t2.skipTraversal != null)
          _this.get$focusNode(_this).set$skipTraversal(_this._widget.skipTraversal);
        if (_this._widget.canRequestFocus != null)
          _this.get$focusNode(_this).set$canRequestFocus(_this._widget.canRequestFocus);
      } else {
        _this._focusAttachment.detach$0(0);
        _this.get$focusNode(_this).ChangeNotifier__listeners.remove$1(0, _this.get$_handleFocusChanged());
        _this._initNode$0();
      }
      if (oldWidget.autofocus !== _this._widget.autofocus)
        _this._handleAutofocus$0();
    },
    _handleFocusChanged$0: function() {
      var _this = this,
        hasPrimaryFocus = _this.get$focusNode(_this).get$hasPrimaryFocus(),
        canRequestFocus = _this.get$focusNode(_this).get$canRequestFocus(),
        t1 = _this._widget;
      if (t1.onFocusChange != null)
        t1.onFocusChange$1(_this.get$focusNode(_this).get$hasFocus());
      if (_this._hasPrimaryFocus !== hasPrimaryFocus)
        _this.setState$1(new L._FocusState__handleFocusChanged_closure(_this, hasPrimaryFocus));
      if (_this._canRequestFocus !== canRequestFocus)
        _this.setState$1(new L._FocusState__handleFocusChanged_closure0(_this, canRequestFocus));
    },
    build$1: function(context) {
      var t1, child, _this = this, _null = null;
      _this._focusAttachment.reparent$0();
      t1 = _this._widget;
      child = t1.child;
      if (t1.includeSemantics)
        child = T.Semantics$(_null, child, false, _null, false, _this._canRequestFocus, _this._hasPrimaryFocus, _null, _null, _null, _null, _null, _null, _null);
      return new L._FocusMarker(_this.get$focusNode(_this), child, _null);
    }
  };
  L._FocusState__handleFocusChanged_closure.prototype = {
    call$0: function() {
      this.$this._hasPrimaryFocus = this.hasPrimaryFocus;
    },
    $signature: 0
  };
  L._FocusState__handleFocusChanged_closure0.prototype = {
    call$0: function() {
      this.$this._canRequestFocus = this.canRequestFocus;
    },
    $signature: 0
  };
  L.FocusScope.prototype = {
    createState$0: function() {
      return new L._FocusScopeState(C._StateLifecycle_0);
    }
  };
  L._FocusScopeState.prototype = {
    _createNode$0: function() {
      var t1 = this._widget,
        t2 = t1.debugLabel,
        t3 = t1.canRequestFocus;
      t1 = t1.skipTraversal;
      return O.FocusScopeNode$(t3 !== false, t2, t1 === true);
    },
    build$1: function(context) {
      var _this = this, _null = null;
      _this._focusAttachment.reparent$0();
      return T.Semantics$(_null, new L._FocusMarker(_this.get$focusNode(_this), _this._widget.child, _null), false, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  L._FocusMarker.prototype = {};
  U._getAncestor_closure.prototype = {
    call$1: function(ancestor) {
      var t1 = this._box_0;
      if (--t1.count === 0) {
        t1.target = ancestor;
        return false;
      }
      return true;
    }
  };
  U._FocusTraversalGroupInfo.prototype = {};
  U.TraversalDirection.prototype = {
    toString$0: function(_) {
      return this._focus_traversal$_name;
    }
  };
  U.FocusTraversalPolicy.prototype = {
    invalidateScopeData$1: function(node) {
    },
    changedScope$2$node$oldScope: function(node, oldScope) {
    },
    _getMarker$1: function(context) {
      var t1 = context == null ? null : context.getElementForInheritedWidgetOfExactType$1$0(type$._FocusTraversalGroupMarker);
      t1 = t1 == null ? null : t1.get$widget();
      return type$._FocusTraversalGroupMarker._as(t1);
    },
    _sortAllDescendants$1: function(scope) {
      var groups, t2, t3, t4, t5, _i, node, t6, ancestor, groupMarker, groupNode, parentContext, parentMarker, parentNode, groupKeys, sortedDescendants, _null = null,
        scopeGroupMarker = this._getMarker$1(scope._context),
        t1 = scopeGroupMarker == null,
        defaultPolicy = t1 ? _null : scopeGroupMarker.policy;
      if (defaultPolicy == null)
        defaultPolicy = new U.ReadingOrderTraversalPolicy(P.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData));
      groups = P.LinkedHashMap_LinkedHashMap$_empty(type$.FocusNode, type$._FocusTraversalGroupInfo);
      for (t2 = scope.get$descendants(), t3 = t2.length, t4 = type$._FocusTraversalGroupMarker, t5 = type$.JSArray_FocusNode, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        node = t2[_i];
        t6 = node._context;
        if (t6 == null)
          t6 = _null;
        else {
          t6 = t6._inheritedWidgets;
          ancestor = t6 == null ? _null : t6.$index(0, H.createRuntimeType(t4));
          t6 = ancestor;
        }
        groupMarker = t4._as(t6 == null ? _null : t6.get$widget());
        groupNode = groupMarker == null ? _null : groupMarker.focusNode;
        if (node == null ? groupNode == null : node === groupNode) {
          parentContext = U._getAncestor(groupNode._context, 2);
          if (parentContext == null)
            t6 = _null;
          else {
            t6 = parentContext._inheritedWidgets;
            ancestor = t6 == null ? _null : t6.$index(0, H.createRuntimeType(t4));
            t6 = ancestor;
          }
          parentMarker = t4._as(t6 == null ? _null : t6.get$widget());
          parentNode = parentMarker == null ? _null : parentMarker.focusNode;
          if (groups.$index(0, parentNode) == null)
            groups.$indexSet(0, parentNode, U._FocusTraversalGroupInfo$(parentMarker, defaultPolicy, H.setRuntimeTypeInfo([], t5)));
          groups.$index(0, parentNode).members.push(groupNode);
          continue;
        }
        scope = node.get$enclosingScope();
        if (node._focus_manager$_canRequestFocus)
          t6 = scope == null || scope.get$canRequestFocus();
        else
          t6 = false;
        if (t6 && !node._skipTraversal) {
          if (groups.$index(0, groupNode) == null)
            groups.$indexSet(0, groupNode, U._FocusTraversalGroupInfo$(groupMarker, defaultPolicy, H.setRuntimeTypeInfo([], t5)));
          groups.$index(0, groupNode).members.push(node);
        }
      }
      t2 = groups.get$keys(groups);
      groupKeys = P.LinkedHashSet_LinkedHashSet$from(t2, H._instanceType(t2)._eval$1("Iterable.E"));
      for (t2 = groups.get$keys(groups), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = groups.$index(0, t3).policy.sortDescendants$1(groups.$index(0, t3).members);
        t4 = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4)._eval$1("JSArray<1>"));
        C.JSArray_methods.set$length(groups.$index(0, t3).members, 0);
        C.JSArray_methods.addAll$1(groups.$index(0, t3).members, t4);
      }
      sortedDescendants = H.setRuntimeTypeInfo([], t5);
      new U.FocusTraversalPolicy__sortAllDescendants_visitGroups(groupKeys, groups, sortedDescendants).call$1(groups.$index(0, t1 ? _null : scopeGroupMarker.focusNode));
      return sortedDescendants;
    },
    _moveFocus$2$forward: function(currentNode, $forward) {
      var t1, focusedChild, scope, candidate, sorted, sortedNodes, previousNode, previousNode0, _this = this, _null = null,
        nearestScope = currentNode.get$nearestScope();
      _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
      _this.DirectionalFocusTraversalPolicyMixin__policyData.remove$1(0, nearestScope);
      t1 = nearestScope._focusedChildren;
      focusedChild = t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null;
      if (focusedChild == null) {
        scope = currentNode.get$nearestScope();
        t1 = scope._focusedChildren;
        candidate = t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null;
        if (candidate == null && scope.get$descendants().length !== 0) {
          sorted = _this._sortAllDescendants$1(scope);
          candidate = sorted.length !== 0 ? C.JSArray_methods.get$first(sorted) : _null;
        }
        if (candidate == null)
          candidate = currentNode;
        t1 = $forward ? C.ScrollPositionAlignmentPolicy_1 : C.ScrollPositionAlignmentPolicy_2;
        candidate.requestFocus$0();
        F.Scrollable_ensureVisible(candidate._context, 1, t1);
        return true;
      }
      sortedNodes = _this._sortAllDescendants$1(nearestScope);
      if ($forward && focusedChild == C.JSArray_methods.get$last(sortedNodes)) {
        t1 = C.JSArray_methods.get$first(sortedNodes);
        t1.requestFocus$0();
        F.Scrollable_ensureVisible(t1._context, 1, C.ScrollPositionAlignmentPolicy_1);
        return true;
      }
      if (!$forward && focusedChild == C.JSArray_methods.get$first(sortedNodes)) {
        t1 = C.JSArray_methods.get$last(sortedNodes);
        t1.requestFocus$0();
        F.Scrollable_ensureVisible(t1._context, 1, C.ScrollPositionAlignmentPolicy_2);
        return true;
      }
      for (t1 = J.get$iterator$ax($forward ? sortedNodes : new H.ReversedListIterable(sortedNodes, H._arrayInstanceType(sortedNodes)._eval$1("ReversedListIterable<1>"))), previousNode = _null; t1.moveNext$0(); previousNode = previousNode0) {
        previousNode0 = t1.get$current(t1);
        if (previousNode == focusedChild) {
          t1 = $forward ? C.ScrollPositionAlignmentPolicy_1 : C.ScrollPositionAlignmentPolicy_2;
          previousNode0.requestFocus$0();
          F.Scrollable_ensureVisible(previousNode0._context, 1, t1);
          return true;
        }
      }
      return false;
    }
  };
  U.FocusTraversalPolicy__sortAllDescendants_visitGroups.prototype = {
    call$1: function(info) {
      var t1, t2, t3, t4, t5, _i, node, _this = this;
      for (t1 = info.members, t2 = t1.length, t3 = _this.sortedDescendants, t4 = _this.groupKeys, t5 = _this.groups, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        if (t4.contains$1(0, node))
          _this.call$1(t5.$index(0, node));
        else
          t3.push(node);
      }
    }
  };
  U._DirectionalPolicyDataEntry.prototype = {};
  U._DirectionalPolicyData.prototype = {};
  U.DirectionalFocusTraversalPolicyMixin.prototype = {
    findFirstFocusInDirection$2: function(currentNode, direction) {
      var _this = this;
      switch (direction) {
        case C.TraversalDirection_0:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, false, true);
        case C.TraversalDirection_2:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, true, true);
        case C.TraversalDirection_3:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, false, false);
        case C.TraversalDirection_1:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, true, false);
      }
      return null;
    },
    _sortAndFindInitial$3$first$vertical: function(currentNode, first, vertical) {
      var nodes = currentNode.get$nearestScope().get$traversalDescendants(),
        sorted = P.List_List$from(nodes, true, nodes.$ti._eval$1("Iterable.E"));
      N.mergeSort(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure(vertical, first), type$.FocusNode);
      if (sorted.length !== 0)
        return C.JSArray_methods.get$first(sorted);
      return null;
    },
    _sortAndFilterHorizontally$3: function(direction, target, nearestScope) {
      var result,
        nodes = nearestScope.get$traversalDescendants(),
        sorted = P.List_List$from(nodes, true, nodes.$ti._eval$1("Iterable.E"));
      N.mergeSort(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure(), type$.FocusNode);
      switch (direction) {
        case C.TraversalDirection_3:
          result = new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0(target), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          break;
        case C.TraversalDirection_1:
          result = new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1(target), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          break;
        case C.TraversalDirection_0:
        case C.TraversalDirection_2:
          result = null;
          break;
        default:
          result = null;
      }
      return result;
    },
    _sortAndFilterVertically$3: function(direction, target, nodes) {
      var sorted = P.List_List$from(nodes, true, nodes.$ti._eval$1("Iterable.E"));
      N.mergeSort(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure(), type$.FocusNode);
      switch (direction) {
        case C.TraversalDirection_0:
          return new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0(target), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
        case C.TraversalDirection_2:
          return new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1(target), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
        case C.TraversalDirection_3:
        case C.TraversalDirection_1:
          break;
      }
      return null;
    },
    _popPolicyDataIfNeeded$3: function(direction, nearestScope, focusedChild) {
      var t3, popOrInvalidate, _this = this,
        t1 = _this.DirectionalFocusTraversalPolicyMixin__policyData,
        policyData = t1.$index(0, nearestScope),
        t2 = policyData != null;
      if (t2) {
        t3 = policyData.history;
        t3 = t3.length !== 0 && C.JSArray_methods.get$first(t3).direction !== direction;
      } else
        t3 = false;
      if (t3) {
        t3 = policyData.history;
        if (C.JSArray_methods.get$last(t3).node._focus_manager$_parent == null) {
          _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
          t1.remove$1(0, nearestScope);
          return false;
        }
        popOrInvalidate = new U.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate(_this, policyData, nearestScope);
        switch (direction) {
          case C.TraversalDirection_2:
          case C.TraversalDirection_0:
            switch (C.JSArray_methods.get$first(t3).direction) {
              case C.TraversalDirection_3:
              case C.TraversalDirection_1:
                _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
                t1.remove$1(0, nearestScope);
                break;
              case C.TraversalDirection_0:
              case C.TraversalDirection_2:
                if (popOrInvalidate.call$1(direction))
                  return true;
                break;
            }
            break;
          case C.TraversalDirection_3:
          case C.TraversalDirection_1:
            switch (C.JSArray_methods.get$first(t3).direction) {
              case C.TraversalDirection_3:
              case C.TraversalDirection_1:
                if (popOrInvalidate.call$1(direction))
                  return true;
                break;
              case C.TraversalDirection_0:
              case C.TraversalDirection_2:
                _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
                t1.remove$1(0, nearestScope);
                break;
            }
            break;
        }
      }
      if (t2 && policyData.history.length === 0) {
        _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
        t1.remove$1(0, nearestScope);
      }
      return false;
    },
    _pushPolicyData$3: function(direction, nearestScope, focusedChild) {
      var t1 = this.DirectionalFocusTraversalPolicyMixin__policyData,
        policyData = t1.$index(0, nearestScope),
        newEntry = new U._DirectionalPolicyDataEntry(direction, focusedChild);
      if (policyData != null)
        policyData.history.push(newEntry);
      else
        t1.$indexSet(0, nearestScope, new U._DirectionalPolicyData(H.setRuntimeTypeInfo([newEntry], type$.JSArray__DirectionalPolicyDataEntry)));
    },
    inDirection$2: function(currentNode, direction) {
      var firstFocus, focusedScrollable, eligibleNodes, filteredEligibleNodes, found, sorted, inBand, _this = this, _null = null,
        nearestScope = currentNode.get$nearestScope(),
        t1 = nearestScope._focusedChildren,
        focusedChild = t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null;
      if (focusedChild == null) {
        firstFocus = _this.findFirstFocusInDirection$2(currentNode, direction);
        if (firstFocus == null)
          firstFocus = currentNode;
        switch (direction) {
          case C.TraversalDirection_0:
          case C.TraversalDirection_3:
            firstFocus.requestFocus$0();
            F.Scrollable_ensureVisible(firstFocus._context, 1, C.ScrollPositionAlignmentPolicy_2);
            break;
          case C.TraversalDirection_1:
          case C.TraversalDirection_2:
            firstFocus.requestFocus$0();
            F.Scrollable_ensureVisible(firstFocus._context, 1, C.ScrollPositionAlignmentPolicy_1);
            break;
        }
        return true;
      }
      if (_this._popPolicyDataIfNeeded$3(direction, nearestScope, focusedChild))
        return true;
      focusedScrollable = F.Scrollable_of(focusedChild._context);
      switch (direction) {
        case C.TraversalDirection_2:
        case C.TraversalDirection_0:
          eligibleNodes = _this._sortAndFilterVertically$3(direction, focusedChild.get$rect(focusedChild), nearestScope.get$traversalDescendants());
          if (focusedScrollable != null && !focusedScrollable._scrollable$_position.get$atEdge()) {
            eligibleNodes.toString;
            filteredEligibleNodes = new H.WhereIterable(eligibleNodes, new U.DirectionalFocusTraversalPolicyMixin_inDirection_closure(focusedScrollable), eligibleNodes.$ti._eval$1("WhereIterable<Iterable.E>"));
            if (!filteredEligibleNodes.get$isEmpty(filteredEligibleNodes))
              eligibleNodes = filteredEligibleNodes;
          }
          if (!eligibleNodes.get$iterator(eligibleNodes).moveNext$0()) {
            found = _null;
            break;
          }
          sorted = P.List_List$from(eligibleNodes, true, H._instanceType(eligibleNodes)._eval$1("Iterable.E"));
          if (direction === C.TraversalDirection_0)
            sorted = new H.ReversedListIterable(sorted, H._arrayInstanceType(sorted)._eval$1("ReversedListIterable<1>")).toList$0(0);
          inBand = new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin_inDirection_closure0(new P.Rect(focusedChild.get$rect(focusedChild).left, -1 / 0, focusedChild.get$rect(focusedChild).right, 1 / 0)), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          if (!inBand.get$isEmpty(inBand)) {
            found = inBand.get$first(inBand);
            break;
          }
          N.mergeSort(sorted, new U.DirectionalFocusTraversalPolicyMixin_inDirection_closure1(focusedChild), type$.FocusNode);
          found = C.JSArray_methods.get$first(sorted);
          break;
        case C.TraversalDirection_1:
        case C.TraversalDirection_3:
          eligibleNodes = _this._sortAndFilterHorizontally$3(direction, focusedChild.get$rect(focusedChild), nearestScope);
          if (focusedScrollable != null && !focusedScrollable._scrollable$_position.get$atEdge()) {
            eligibleNodes.toString;
            filteredEligibleNodes = new H.WhereIterable(eligibleNodes, new U.DirectionalFocusTraversalPolicyMixin_inDirection_closure2(focusedScrollable), eligibleNodes.$ti._eval$1("WhereIterable<Iterable.E>"));
            if (!filteredEligibleNodes.get$isEmpty(filteredEligibleNodes))
              eligibleNodes = filteredEligibleNodes;
          }
          if (!eligibleNodes.get$iterator(eligibleNodes).moveNext$0()) {
            found = _null;
            break;
          }
          sorted = P.List_List$from(eligibleNodes, true, H._instanceType(eligibleNodes)._eval$1("Iterable.E"));
          if (direction === C.TraversalDirection_3)
            sorted = new H.ReversedListIterable(sorted, H._arrayInstanceType(sorted)._eval$1("ReversedListIterable<1>")).toList$0(0);
          inBand = new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin_inDirection_closure3(new P.Rect(-1 / 0, focusedChild.get$rect(focusedChild).top, 1 / 0, focusedChild.get$rect(focusedChild).bottom)), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          if (!inBand.get$isEmpty(inBand)) {
            found = inBand.get$first(inBand);
            break;
          }
          N.mergeSort(sorted, new U.DirectionalFocusTraversalPolicyMixin_inDirection_closure4(focusedChild), type$.FocusNode);
          found = C.JSArray_methods.get$first(sorted);
          break;
        default:
          found = _null;
      }
      if (found != null) {
        _this._pushPolicyData$3(direction, nearestScope, focusedChild);
        switch (direction) {
          case C.TraversalDirection_0:
          case C.TraversalDirection_3:
            found.requestFocus$0();
            F.Scrollable_ensureVisible(found._context, 1, C.ScrollPositionAlignmentPolicy_2);
            break;
          case C.TraversalDirection_2:
          case C.TraversalDirection_1:
            found.requestFocus$0();
            F.Scrollable_ensureVisible(found._context, 1, C.ScrollPositionAlignmentPolicy_1);
            break;
        }
        return true;
      }
      return false;
    }
  };
  U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure.prototype = {
    call$1: function(entry) {
      return entry.node === this.node;
    }
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure.prototype = {
    call$2: function(a, b) {
      if (this.vertical)
        if (this.first)
          return J.compareTo$1$ns(a.get$rect(a).top, b.get$rect(b).top);
        else
          return J.compareTo$1$ns(b.get$rect(b).bottom, a.get$rect(a).bottom);
      else if (this.first)
        return J.compareTo$1$ns(a.get$rect(a).left, b.get$rect(b).left);
      else
        return J.compareTo$1$ns(b.get$rect(b).right, a.get$rect(a).right);
    },
    $signature: 20
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure.prototype = {
    call$2: function(a, b) {
      return J.compareTo$1$ns(a.get$rect(a).get$center()._dx, b.get$rect(b).get$center()._dx);
    },
    $signature: 20
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0.prototype = {
    call$1: function(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dx <= t1.left;
    }
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1.prototype = {
    call$1: function(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dx >= t1.right;
    }
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure.prototype = {
    call$2: function(a, b) {
      return J.compareTo$1$ns(a.get$rect(a).get$center()._dy, b.get$rect(b).get$center()._dy);
    },
    $signature: 20
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0.prototype = {
    call$1: function(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dy <= t1.top;
    }
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1.prototype = {
    call$1: function(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dy >= t1.bottom;
    }
  };
  U.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate.prototype = {
    call$1: function(direction) {
      var t1, t2, alignmentPolicy,
        lastNode = this.policyData.history.pop().node;
      if (F.Scrollable_of(lastNode._context) != F.Scrollable_of($.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context)) {
        t1 = this.$this;
        t2 = this.nearestScope;
        t1.super$FocusTraversalPolicy$invalidateScopeData(t2);
        t1.DirectionalFocusTraversalPolicyMixin__policyData.remove$1(0, t2);
        return false;
      }
      switch (direction) {
        case C.TraversalDirection_0:
        case C.TraversalDirection_3:
          alignmentPolicy = C.ScrollPositionAlignmentPolicy_2;
          break;
        case C.TraversalDirection_1:
        case C.TraversalDirection_2:
          alignmentPolicy = C.ScrollPositionAlignmentPolicy_1;
          break;
        default:
          alignmentPolicy = null;
      }
      lastNode.requestFocus$0();
      F.Scrollable_ensureVisible(lastNode._context, 1, alignmentPolicy);
      return true;
    }
  };
  U.DirectionalFocusTraversalPolicyMixin_inDirection_closure.prototype = {
    call$1: function(node) {
      return F.Scrollable_of(node._context) === this.focusedScrollable;
    }
  };
  U.DirectionalFocusTraversalPolicyMixin_inDirection_closure0.prototype = {
    call$1: function(node) {
      var t1 = node.get$rect(node).intersect$1(this.band);
      return !t1.get$isEmpty(t1);
    }
  };
  U.DirectionalFocusTraversalPolicyMixin_inDirection_closure1.prototype = {
    call$2: function(a, b) {
      var t1 = this.focusedChild;
      return C.JSNumber_methods.compareTo$1(Math.abs(a.get$rect(a).get$center()._dx - t1.get$rect(t1).get$center()._dx), Math.abs(b.get$rect(b).get$center()._dx - t1.get$rect(t1).get$center()._dx));
    },
    $signature: 20
  };
  U.DirectionalFocusTraversalPolicyMixin_inDirection_closure2.prototype = {
    call$1: function(node) {
      return F.Scrollable_of(node._context) === this.focusedScrollable;
    }
  };
  U.DirectionalFocusTraversalPolicyMixin_inDirection_closure3.prototype = {
    call$1: function(node) {
      var t1 = node.get$rect(node).intersect$1(this.band);
      return !t1.get$isEmpty(t1);
    }
  };
  U.DirectionalFocusTraversalPolicyMixin_inDirection_closure4.prototype = {
    call$2: function(a, b) {
      var t1 = this.focusedChild;
      return C.JSNumber_methods.compareTo$1(Math.abs(a.get$rect(a).get$center()._dy - t1.get$rect(t1).get$center()._dy), Math.abs(b.get$rect(b).get$center()._dy - t1.get$rect(t1).get$center()._dy));
    },
    $signature: 20
  };
  U._ReadingOrderSortData.prototype = {
    get$directionalAncestors: function() {
      var t1 = this._directionalAncestors;
      return t1 == null ? this._directionalAncestors = new U._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors().call$1(this.node._context) : t1;
    }
  };
  U._ReadingOrderSortData_commonDirectionalityOf_closure.prototype = {
    call$1: function(member) {
      var t1 = member.get$directionalAncestors();
      t1.toString;
      return P.LinkedHashSet_LinkedHashSet$from(t1, H._arrayInstanceType(t1)._precomputed1);
    }
  };
  U._ReadingOrderSortData_sortWithDirectionality_closure.prototype = {
    call$2: function(a, b) {
      switch (this.directionality) {
        case C.TextDirection_1:
          return J.compareTo$1$ns(a.rect.left, b.rect.left);
        case C.TextDirection_0:
          return J.compareTo$1$ns(b.rect.right, a.rect.right);
      }
      return 0;
    },
    $signature: 51
  };
  U._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors.prototype = {
    call$1: function(context) {
      var t2, ancestor,
        result = H.setRuntimeTypeInfo([], type$.JSArray_Directionality),
        t1 = type$.Directionality,
        directionalityElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; directionalityElement != null;) {
        result.push(t1._as(directionalityElement.get$widget()));
        t2 = U._getAncestor(directionalityElement, 1);
        if (t2 == null)
          directionalityElement = null;
        else {
          t2 = t2._inheritedWidgets;
          ancestor = t2 == null ? null : t2.$index(0, H.createRuntimeType(t1));
          directionalityElement = ancestor;
        }
      }
      return result;
    }
  };
  U._ReadingOrderDirectionalGroupData.prototype = {
    get$rect: function(_) {
      var t1, t2, t3, _this = this;
      if (_this._rect == null)
        for (t1 = _this.members, t1 = new H.MappedListIterable(t1, new U._ReadingOrderDirectionalGroupData_rect_closure(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Rect>")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {
          t2 = t1.__internal$_current;
          t3 = _this._rect;
          if (t3 == null) {
            _this._rect = t2;
            t3 = t2;
          }
          _this._rect = t3.expandToInclude$1(t2);
        }
      return _this._rect;
    }
  };
  U._ReadingOrderDirectionalGroupData_rect_closure.prototype = {
    call$1: function(data) {
      return data.rect;
    }
  };
  U._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure.prototype = {
    call$2: function(a, b) {
      switch (this.directionality) {
        case C.TextDirection_1:
          return J.compareTo$1$ns(a.get$rect(a).left, b.get$rect(b).left);
        case C.TextDirection_0:
          return J.compareTo$1$ns(b.get$rect(b).right, a.get$rect(a).right);
      }
      return 0;
    },
    $signature: 132
  };
  U.ReadingOrderTraversalPolicy.prototype = {
    _collectDirectionalityGroups$1: function(candidates) {
      var t2, _i, candidate, currentDirection0,
        currentDirection = C.JSArray_methods.get$first(candidates).directionality,
        t1 = type$.JSArray__ReadingOrderSortData,
        currentGroup = H.setRuntimeTypeInfo([], t1),
        result = H.setRuntimeTypeInfo([], type$.JSArray__ReadingOrderDirectionalGroupData);
      for (t2 = candidates.length, _i = 0; _i < candidates.length; candidates.length === t2 || (0, H.throwConcurrentModificationError)(candidates), ++_i) {
        candidate = candidates[_i];
        currentDirection0 = candidate.directionality;
        if (currentDirection0 == currentDirection) {
          currentGroup.push(candidate);
          continue;
        }
        result.push(new U._ReadingOrderDirectionalGroupData(currentGroup));
        currentGroup = H.setRuntimeTypeInfo([candidate], t1);
        currentDirection = currentDirection0;
      }
      if (currentGroup.length !== 0)
        result.push(new U._ReadingOrderDirectionalGroupData(currentGroup));
      for (t1 = result.length, _i = 0; _i < result.length; result.length === t1 || (0, H.throwConcurrentModificationError)(result), ++_i) {
        t2 = result[_i].members;
        if (t2.length === 1)
          continue;
        U._ReadingOrderSortData_sortWithDirectionality(t2, C.JSArray_methods.get$first(t2).directionality);
      }
      return result;
    },
    _pickNext$1: function(candidates) {
      var topmost, inBandOfTop, nearestCommonDirectionality, bandGroups;
      N.mergeSort(candidates, new U.ReadingOrderTraversalPolicy__pickNext_closure(), type$._ReadingOrderSortData);
      topmost = C.JSArray_methods.get$first(candidates);
      inBandOfTop = new U.ReadingOrderTraversalPolicy__pickNext_inBand().call$2(topmost, candidates);
      if (J.get$length$asx(inBandOfTop) <= 1)
        return topmost;
      nearestCommonDirectionality = U._ReadingOrderSortData_commonDirectionalityOf(inBandOfTop);
      U._ReadingOrderSortData_sortWithDirectionality(inBandOfTop, nearestCommonDirectionality);
      bandGroups = this._collectDirectionalityGroups$1(inBandOfTop);
      if (bandGroups.length === 1)
        return C.JSArray_methods.get$first(C.JSArray_methods.get$first(bandGroups).members);
      U._ReadingOrderDirectionalGroupData_sortWithDirectionality(bandGroups, nearestCommonDirectionality);
      return C.JSArray_methods.get$first(C.JSArray_methods.get$first(bandGroups).members);
    },
    sortDescendants$1: function(descendants) {
      var t1, t2, t3, _i, node, t4, t5, ancestor, sortedList, current, next;
      if (descendants.length <= 1)
        return descendants;
      t1 = H.setRuntimeTypeInfo([], type$.JSArray__ReadingOrderSortData);
      for (t2 = descendants.length, t3 = type$.Directionality, _i = 0; _i < descendants.length; descendants.length === t2 || (0, H.throwConcurrentModificationError)(descendants), ++_i) {
        node = descendants[_i];
        t4 = node.get$rect(node);
        t5 = node._context._inheritedWidgets;
        ancestor = t5 == null ? null : t5.$index(0, H.createRuntimeType(t3));
        t5 = t3._as(ancestor == null ? null : ancestor.get$widget());
        t1.push(new U._ReadingOrderSortData(t5 == null ? null : t5.textDirection, t4, node));
      }
      sortedList = H.setRuntimeTypeInfo([], type$.JSArray_FocusNode);
      current = this._pickNext$1(t1);
      sortedList.push(current.node);
      C.JSArray_methods.remove$1(t1, current);
      for (; t1.length !== 0;) {
        next = this._pickNext$1(t1);
        sortedList.push(next.node);
        C.JSArray_methods.remove$1(t1, next);
      }
      return sortedList;
    }
  };
  U.ReadingOrderTraversalPolicy__pickNext_closure.prototype = {
    call$2: function(a, b) {
      return J.compareTo$1$ns(a.rect.top, b.rect.top);
    },
    $signature: 51
  };
  U.ReadingOrderTraversalPolicy__pickNext_inBand.prototype = {
    call$2: function(current, candidates) {
      var t1 = current.rect,
        t2 = H._arrayInstanceType(candidates)._eval$1("WhereIterable<1>");
      return P.List_List$from(new H.WhereIterable(candidates, new U.ReadingOrderTraversalPolicy__pickNext_inBand_closure(new P.Rect(-1 / 0, t1.top, 1 / 0, t1.bottom)), t2), true, t2._eval$1("Iterable.E"));
    }
  };
  U.ReadingOrderTraversalPolicy__pickNext_inBand_closure.prototype = {
    call$1: function(item) {
      var t1 = item.rect.intersect$1(this.band);
      return !t1.get$isEmpty(t1);
    }
  };
  U.FocusTraversalGroup.prototype = {
    createState$0: function() {
      return new U._FocusTraversalGroupState(C._StateLifecycle_0);
    }
  };
  U._FocusTraversalGroupState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this.focusNode = O.FocusNode$(false, "FocusTraversalGroup", null, true);
    },
    dispose$0: function() {
      var t1 = this.focusNode;
      if (t1 != null)
        t1.dispose$0();
      this.super$State$dispose();
    },
    build$1: function(context) {
      var _null = null,
        t1 = this._widget,
        t2 = t1.policy,
        t3 = this.focusNode;
      return new U._FocusTraversalGroupMarker(t2, t3, L.Focus$(false, false, t1.child, _null, t3, false, _null, _null, _null, true), _null);
    }
  };
  U._FocusTraversalGroupMarker.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return false;
    }
  };
  U.RequestFocusIntent.prototype = {};
  U.RequestFocusAction.prototype = {
    invoke$1: function(intent) {
      var t1 = intent.get$focusNode(intent);
      t1.requestFocus$0();
      F.Scrollable_ensureVisible(t1._context, 1, C.ScrollPositionAlignmentPolicy_0);
    }
  };
  U.NextFocusIntent.prototype = {};
  U.NextFocusAction.prototype = {
    invoke$1: function(intent) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      U.FocusTraversalGroup_of(t1._context, false)._moveFocus$2$forward(t1, true);
    }
  };
  U.PreviousFocusIntent.prototype = {};
  U.PreviousFocusAction.prototype = {
    invoke$1: function(intent) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      U.FocusTraversalGroup_of(t1._context, false)._moveFocus$2$forward(t1, false);
    }
  };
  U.DirectionalFocusIntent.prototype = {};
  U.DirectionalFocusAction.prototype = {
    invoke$1: function(intent) {
      var t1 = $.WidgetsBinding__instance;
      t1.WidgetsBinding__buildOwner.focusManager._primaryFocus._context.get$widget();
      t1 = $.WidgetsBinding__instance;
      t1 = t1.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      U.FocusTraversalGroup_of(t1._context, false).inDirection$2(t1, intent.direction);
    }
  };
  U._FocusTraversalPolicy_Object_Diagnosticable.prototype = {};
  U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin.prototype = {
    changedScope$2$node$oldScope: function(node, oldScope) {
      var t1;
      this.super$FocusTraversalPolicy$changedScope(node, oldScope);
      t1 = this.DirectionalFocusTraversalPolicyMixin__policyData.$index(0, oldScope);
      t1 = t1 == null ? null : t1.history;
      if (t1 != null) {
        if (!!t1.fixed$length)
          H.throwExpression(P.UnsupportedError$("removeWhere"));
        C.JSArray_methods._removeWhere$2(t1, new U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure(node), true);
      }
    }
  };
  U.__ReadingOrderDirectionalGroupData_Object_Diagnosticable.prototype = {};
  U.__ReadingOrderSortData_Object_Diagnosticable.prototype = {};
  N.UniqueKey.prototype = {
    toString$0: function(_) {
      return "[#" + Y.shortHash(this) + "]";
    }
  };
  N.GlobalKey.prototype = {
    get$currentState: function() {
      var state,
        element = $.GlobalKey__registry.$index(0, this);
      if (element instanceof N.StatefulElement) {
        state = element._framework$_state;
        if (H._instanceType(this)._precomputed1._is(state))
          return state;
      }
      return null;
    }
  };
  N.LabeledGlobalKey.prototype = {
    toString$0: function(_) {
      var _this = this,
        t1 = _this._debugLabel,
        label = t1 != null ? " " + t1 : "";
      if (H.getRuntimeType(_this).$eq(0, C.Type_LabeledGlobalKey_6TW))
        return "[GlobalKey#" + Y.shortHash(_this) + label + "]";
      return "[" + ("<optimized out>#" + Y.shortHash(_this)) + label + "]";
    }
  };
  N.GlobalObjectKey.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return this.$ti._is(other) && other.value == this.value;
    },
    get$hashCode: function(_) {
      return H.objectHashCode(this.value);
    },
    toString$0: function(_) {
      var _s15_ = "GlobalObjectKey";
      return "[" + (C.JSString_methods.endsWith$1(_s15_, "<State<StatefulWidget>>") ? C.JSString_methods.substring$2(_s15_, 0, -8) : _s15_) + " " + ("<optimized out>#" + Y.shortHash(this.value)) + "]";
    }
  };
  N.Widget.prototype = {
    toStringShort$0: function() {
      var t1 = this.key;
      return t1 == null ? "Widget" : "Widget-" + t1.toString$0(0);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return this.super$Object$$eq(0, other);
    },
    get$hashCode: function(_) {
      return P.Object.prototype.get$hashCode.call(this, this);
    }
  };
  N.StatelessWidget.prototype = {
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.StatelessElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
    }
  };
  N.StatefulWidget.prototype = {
    createElement$0: function(_) {
      var t1 = this.createState$0(),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      t2 = new N.StatefulElement(t1, t2, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
      t1._framework$_element = t2;
      t1._widget = this;
      return t2;
    }
  };
  N._StateLifecycle.prototype = {
    toString$0: function(_) {
      return this._framework$_name;
    }
  };
  N.State.prototype = {
    initState$0: function() {
    },
    didUpdateWidget$1: function(oldWidget) {
    },
    setState$1: function(fn) {
      fn.call$0();
      this._framework$_element.markNeedsBuild$0();
    },
    deactivate$0: function() {
    },
    dispose$0: function() {
    },
    didChangeDependencies$0: function() {
    }
  };
  N.ProxyWidget.prototype = {};
  N.ParentDataWidget.prototype = {
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.ParentDataElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2), H._instanceType(this)._eval$1("ParentDataElement<ParentDataWidget.T>"));
    }
  };
  N.InheritedWidget.prototype = {
    createElement$0: function(_) {
      var t1 = type$.Element_2,
        t2 = P.HashMap_HashMap(t1, type$.Object),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      return new N.InheritedElement(t2, t3, this, C._ElementLifecycle_0, P.HashSet_HashSet(t1));
    }
  };
  N.RenderObjectWidget.prototype = {
    updateRenderObject$2: function(context, renderObject) {
    },
    didUnmountRenderObject$1: function(renderObject) {
    }
  };
  N.LeafRenderObjectWidget.prototype = {
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.LeafRenderObjectElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
    }
  };
  N.SingleChildRenderObjectWidget.prototype = {
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.SingleChildRenderObjectElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
    }
  };
  N.MultiChildRenderObjectWidget.prototype = {
    createElement$0: function(_) {
      var t1 = type$.Element_2,
        t2 = P.HashSet_HashSet(t1),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      return new N.MultiChildRenderObjectElement(t2, t3, this, C._ElementLifecycle_0, P.HashSet_HashSet(t1));
    }
  };
  N._ElementLifecycle.prototype = {
    toString$0: function(_) {
      return this._framework$_name;
    }
  };
  N._InactiveElements.prototype = {
    _unmount$1: function(element) {
      element.visitChildren$1(new N._InactiveElements__unmount_closure(this, element));
      element.unmount$0();
    },
    _unmountAll$0: function() {
      var elements, t1, elements0, _this = this;
      _this._locked = true;
      t1 = _this._framework$_elements;
      elements0 = t1.toList$0(0);
      C.JSArray_methods.sort$1(elements0, N.framework_Element__sort$closure());
      elements = elements0;
      t1.clear$0(0);
      try {
        t1 = elements;
        new H.ReversedListIterable(t1, H.instanceType(t1)._eval$1("ReversedListIterable<1>")).forEach$1(0, _this.get$_unmount());
      } finally {
        _this._locked = false;
      }
    },
    add$1: function(_, element) {
      if (element._active) {
        element.deactivate$0();
        element.visitChildren$1(N.framework__InactiveElements__deactivateRecursively$closure());
      }
      this._framework$_elements.add$1(0, element);
    }
  };
  N._InactiveElements__unmount_closure.prototype = {
    call$1: function(child) {
      this.$this._unmount$1(child);
    }
  };
  N.BuildContext.prototype = {};
  N.BuildOwner.prototype = {
    scheduleBuildFor$1: function(element) {
      var _this = this;
      if (element._inDirtyList) {
        _this._dirtyElementsNeedsResorting = true;
        return;
      }
      if (!_this._scheduledFlushDirtyElements && _this.onBuildScheduled != null) {
        _this._scheduledFlushDirtyElements = true;
        _this.onBuildScheduled.call$0();
      }
      _this._dirtyElements.push(element);
      element._inDirtyList = true;
    },
    lockState$1: function(callback) {
      try {
        callback.call$0();
      } finally {
      }
    },
    buildScope$2: function(context, callback) {
      var e, stack, element, t2, exception, t3, t4, _i, _this = this, _null = null, _box_0 = {},
        t1 = callback == null;
      if (t1 && _this._dirtyElements.length === 0)
        return;
      P.Timeline_startSync("Build", C.Map_9aZ6I, _null);
      try {
        _this._scheduledFlushDirtyElements = true;
        if (!t1) {
          _box_0.debugPreviousBuildTarget = null;
          _this._dirtyElementsNeedsResorting = false;
          try {
            callback.call$0();
          } finally {
          }
        }
        t1 = _this._dirtyElements;
        C.JSArray_methods.sort$1(t1, N.framework_Element__sort$closure());
        _this._dirtyElementsNeedsResorting = false;
        _box_0.dirtyCount = t1.length;
        _box_0.index = 0;
        for (t2 = 0; t2 < _box_0.dirtyCount;) {
          try {
            t1[t2].rebuild$0();
          } catch (exception) {
            e = H.unwrapException(exception);
            stack = H.getTraceFromException(exception);
            $.$get$FlutterError_onError().call$1(new U.FlutterErrorDetails(e, stack, "widgets library", new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["while rebuilding dirty elements"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), new N.BuildOwner_buildScope_closure(_box_0, _this), false));
          }
          t2 = ++_box_0.index;
          t3 = _box_0.dirtyCount;
          t4 = t1.length;
          if (t3 < t4 || _this._dirtyElementsNeedsResorting) {
            if (!!t1.immutable$list)
              H.throwExpression(P.UnsupportedError$("sort"));
            t2 = t4 - 1;
            if (t2 - 0 <= 32)
              H.Sort__insertionSort(t1, 0, t2, N.framework_Element__sort$closure());
            else
              H.Sort__dualPivotQuicksort(t1, 0, t2, N.framework_Element__sort$closure());
            t2 = _this._dirtyElementsNeedsResorting = false;
            _box_0.dirtyCount = t1.length;
            while (true) {
              t3 = _box_0.index;
              if (!(t3 > 0 ? t1[t3 - 1]._dirty : t2))
                break;
              _box_0.index = t3 - 1;
            }
            t2 = t3;
          }
        }
      } finally {
        for (t1 = _this._dirtyElements, t2 = t1.length, _i = 0; _i < t2; ++_i) {
          element = t1[_i];
          element._inDirtyList = false;
        }
        C.JSArray_methods.set$length(t1, 0);
        _this._scheduledFlushDirtyElements = false;
        _this._dirtyElementsNeedsResorting = null;
        P.Timeline_finishSync();
      }
    },
    buildScope$1: function(context) {
      return this.buildScope$2(context, null);
    },
    finalizeTree$0: function() {
      var e, stack, exception, _null = null;
      P.Timeline_startSync("Finalize tree", C.Map_9aZ6I, _null);
      try {
        this.lockState$1(new N.BuildOwner_finalizeTree_closure(this));
      } catch (exception) {
        e = H.unwrapException(exception);
        stack = H.getTraceFromException(exception);
        N._debugReportException(new U.ErrorSummary(_null, false, true, _null, _null, _null, false, ["while finalizing the widget tree"], _null, C.DiagnosticLevel_6, _null, false, false, _null, C.DiagnosticsTreeStyle_7), e, stack, _null);
      } finally {
        P.Timeline_finishSync();
      }
    }
  };
  N.BuildOwner_buildScope_closure.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.$this._dirtyElements;
                t2 = $async$self._box_0;
                t3 = t1[t2.index];
                $async$goto = 2;
                return new K.DiagnosticsDebugCreator(null, false, true, null, null, null, false, new N.DebugCreator(t3), C.C__NoDefaultValue, C.DiagnosticLevel_0, "debugCreator", true, true, null, C.DiagnosticsTreeStyle_8);
              case 2:
                // after yield
                t3 = t2.index;
                t1 = t1[t3];
                $async$goto = 3;
                return Y.DiagnosticsProperty$("The element being rebuilt at the time was index " + t3 + " of " + t2.dirtyCount, t1, true, C.C__NoDefaultValue, null, false, null, null, C.DiagnosticLevel_3, null, false, true, true, C.DiagnosticsTreeStyle_9, null, type$.Element_2);
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 11
  };
  N.BuildOwner_finalizeTree_closure.prototype = {
    call$0: function() {
      this.$this._inactiveElements._unmountAll$0();
    },
    $signature: 0
  };
  N.Element.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      return this === other;
    },
    get$hashCode: function(_) {
      return this._cachedHash;
    },
    get$widget: function() {
      return this._widget;
    },
    get$renderObject: function() {
      var t1 = {};
      t1.result = null;
      new N.Element_renderObject_visit(t1).call$1(this);
      return t1.result;
    },
    describeElement$1: function($name) {
      var _null = null;
      return Y.DiagnosticsProperty$($name, this, true, C.C__NoDefaultValue, _null, false, _null, _null, C.DiagnosticLevel_3, _null, false, true, true, C.DiagnosticsTreeStyle_9, _null, type$.Element_2);
    },
    visitChildren$1: function(visitor) {
    },
    updateChild$3: function(child, newWidget, newSlot) {
      var t1, newChild, _this = this;
      if (newWidget == null) {
        if (child != null)
          _this.deactivateChild$1(child);
        return null;
      }
      if (child != null) {
        t1 = J.$eq$(child.get$widget(), newWidget);
        if (t1) {
          if (!J.$eq$(child._slot, newSlot))
            _this.updateSlotForChild$2(child, newSlot);
          t1 = child;
        } else {
          t1 = N.Widget_canUpdate(child.get$widget(), newWidget);
          if (t1) {
            if (!J.$eq$(child._slot, newSlot))
              _this.updateSlotForChild$2(child, newSlot);
            child.update$1(0, newWidget);
            t1 = child;
          } else {
            _this.deactivateChild$1(child);
            newChild = _this.inflateWidget$2(newWidget, newSlot);
            t1 = newChild;
          }
        }
      } else {
        newChild = _this.inflateWidget$2(newWidget, newSlot);
        t1 = newChild;
      }
      return t1;
    },
    mount$2: function($parent, newSlot) {
      var t1, key, _this = this;
      _this._parent = $parent;
      _this._slot = newSlot;
      t1 = $parent != null;
      _this._depth = t1 ? $parent._depth + 1 : 1;
      _this._active = true;
      if (t1)
        _this._owner = $parent._owner;
      key = _this.get$widget().key;
      if (key instanceof N.GlobalKey)
        $.GlobalKey__registry.$indexSet(0, key, _this);
      _this._updateInheritance$0();
    },
    update$1: function(_, newWidget) {
      this._widget = newWidget;
    },
    updateSlotForChild$2: function(child, newSlot) {
      new N.Element_updateSlotForChild_visit(newSlot).call$1(child);
    },
    _updateSlot$1: function(newSlot) {
      this._slot = newSlot;
    },
    _updateDepth$1: function(parentDepth) {
      var expectedDepth = parentDepth + 1;
      if (this._depth < expectedDepth) {
        this._depth = expectedDepth;
        this.visitChildren$1(new N.Element__updateDepth_closure(expectedDepth));
      }
    },
    detachRenderObject$0: function() {
      this.visitChildren$1(new N.Element_detachRenderObject_closure());
      this._slot = null;
    },
    attachRenderObject$1: function(newSlot) {
      this.visitChildren$1(new N.Element_attachRenderObject_closure(newSlot));
      this._slot = newSlot;
    },
    _retakeInactiveElement$2: function(key, newWidget) {
      var $parent,
        element = $.GlobalKey__registry.$index(0, key);
      if (element == null)
        return null;
      if (!N.Widget_canUpdate(element.get$widget(), newWidget))
        return null;
      $parent = element._parent;
      if ($parent != null) {
        $parent.forgetChild$1(element);
        $parent.deactivateChild$1(element);
      }
      this._owner._inactiveElements._framework$_elements.remove$1(0, element);
      return element;
    },
    inflateWidget$2: function(newWidget, newSlot) {
      var newChild, _this = this,
        key = newWidget.key;
      if (key instanceof N.GlobalKey) {
        newChild = _this._retakeInactiveElement$2(key, newWidget);
        if (newChild != null) {
          newChild._parent = _this;
          newChild._updateDepth$1(_this._depth);
          newChild.activate$0();
          newChild.visitChildren$1(N.framework_Element__activateRecursively$closure());
          newChild.attachRenderObject$1(newSlot);
          return _this.updateChild$3(newChild, newWidget, newSlot);
        }
      }
      newChild = newWidget.createElement$0(0);
      newChild.mount$2(_this, newSlot);
      return newChild;
    },
    deactivateChild$1: function(child) {
      child._parent = null;
      child.detachRenderObject$0();
      this._owner._inactiveElements.add$1(0, child);
    },
    forgetChild$1: function(child) {
    },
    activate$0: function() {
      var _this = this,
        t1 = _this._dependencies,
        t2 = t1 == null,
        hadDependencies = !t2 && t1._collection$_length !== 0 || _this._hadUnsatisfiedDependencies;
      _this._active = true;
      if (!t2)
        t1.clear$0(0);
      _this._hadUnsatisfiedDependencies = false;
      _this._updateInheritance$0();
      if (_this._dirty)
        _this._owner.scheduleBuildFor$1(_this);
      if (hadDependencies)
        _this.didChangeDependencies$0();
    },
    deactivate$0: function() {
      var _this = this,
        t1 = _this._dependencies;
      if (t1 != null && t1._collection$_length !== 0)
        for (t1 = new P._HashSetIterator(t1, t1._computeElements$0()); t1.moveNext$0();)
          t1._collection$_current._dependents.remove$1(0, _this);
      _this._inheritedWidgets = null;
      _this._active = false;
    },
    unmount$0: function() {
      var key = this._widget.key;
      if (key instanceof N.GlobalKey)
        if (J.$eq$($.GlobalKey__registry.$index(0, key), this))
          $.GlobalKey__registry.remove$1(0, key);
    },
    get$size: function(_) {
      var renderObject = this.get$renderObject();
      if (renderObject instanceof S.RenderBox)
        return renderObject._size;
      return null;
    },
    dependOnInheritedElement$2$aspect: function(ancestor, aspect) {
      var t1 = this._dependencies;
      (t1 == null ? this._dependencies = P.HashSet_HashSet(type$.InheritedElement) : t1).add$1(0, ancestor);
      ancestor._dependents.$indexSet(0, this, null);
      return ancestor.get$widget();
    },
    dependOnInheritedWidgetOfExactType$1$0: function($T) {
      var t1 = this._inheritedWidgets,
        ancestor = t1 == null ? null : t1.$index(0, H.createRuntimeType($T));
      if (ancestor != null)
        return $T._as(this.dependOnInheritedElement$2$aspect(ancestor, null));
      this._hadUnsatisfiedDependencies = true;
      return null;
    },
    getElementForInheritedWidgetOfExactType$1$0: function($T) {
      var t1 = this._inheritedWidgets;
      return t1 == null ? null : t1.$index(0, H.createRuntimeType($T));
    },
    _updateInheritance$0: function() {
      var t1 = this._parent;
      this._inheritedWidgets = t1 == null ? null : t1._inheritedWidgets;
    },
    findAncestorWidgetOfExactType$1$0: function($T) {
      var t1,
        ancestor = this._parent;
      while (true) {
        t1 = ancestor == null;
        if (!(!t1 && !J.get$runtimeType$(ancestor.get$widget()).$eq(0, H.createRuntimeType($T))))
          break;
        ancestor = ancestor._parent;
      }
      return $T._as(t1 ? null : ancestor.get$widget());
    },
    findAncestorStateOfType$1$0: function($T) {
      var t1,
        ancestor = this._parent;
      for (; t1 = ancestor == null, !t1;) {
        if (ancestor instanceof N.StatefulElement && $T._is(ancestor._framework$_state))
          break;
        ancestor = ancestor._parent;
      }
      type$.StatefulElement._as(ancestor);
      return $T._as(t1 ? null : ancestor._framework$_state);
    },
    findAncestorRenderObjectOfType$1$0: function($T) {
      var ancestor = this._parent;
      for (; ancestor != null;) {
        if (ancestor instanceof N.RenderObjectElement && $T._is(ancestor.get$renderObject()))
          return $T._as(ancestor.get$renderObject());
        ancestor = ancestor._parent;
      }
      return null;
    },
    visitAncestorElements$1: function(visitor) {
      var ancestor = this._parent;
      while (true) {
        if (!(ancestor != null && visitor.call$1(ancestor)))
          break;
        ancestor = ancestor._parent;
      }
    },
    didChangeDependencies$0: function() {
      this.markNeedsBuild$0();
    },
    debugGetCreatorChain$1: function(limit) {
      var chain = H.setRuntimeTypeInfo([], type$.JSArray_String),
        node = this;
      while (true) {
        if (!(chain.length < limit && node != null))
          break;
        chain.push(node.get$widget() != null ? node.get$widget().toStringShort$0() : "[Element]");
        node = node._parent;
      }
      if (node != null)
        chain.push("\u22ef");
      return C.JSArray_methods.join$1(chain, " \u2190 ");
    },
    toStringShort$0: function() {
      return this.get$widget() != null ? this.get$widget().toStringShort$0() : "[Element]";
    },
    toDiagnosticsNode$2$name$style: function($name, style) {
      return new N._ElementDiagnosticableTreeNode(false, this, $name, true, true, null, style);
    },
    toDiagnosticsNode$0: function() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    },
    debugDescribeChildren$0: function() {
      var children = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
      this.visitChildren$1(new N.Element_debugDescribeChildren_closure(children));
      return children;
    },
    markNeedsBuild$0: function() {
      var _this = this;
      if (!_this._active)
        return;
      if (_this._dirty)
        return;
      _this._dirty = true;
      _this._owner.scheduleBuildFor$1(_this);
    },
    rebuild$0: function() {
      if (!this._active || !this._dirty)
        return;
      this.performRebuild$0();
    },
    $isBuildContext: 1
  };
  N.Element_renderObject_visit.prototype = {
    call$1: function(element) {
      if (element instanceof N.RenderObjectElement)
        this._box_0.result = element.get$renderObject();
      else
        element.visitChildren$1(this);
    }
  };
  N.Element_updateSlotForChild_visit.prototype = {
    call$1: function(element) {
      element._updateSlot$1(this.newSlot);
      if (!(element instanceof N.RenderObjectElement))
        element.visitChildren$1(this);
    }
  };
  N.Element__updateDepth_closure.prototype = {
    call$1: function(child) {
      child._updateDepth$1(this.expectedDepth);
    }
  };
  N.Element_detachRenderObject_closure.prototype = {
    call$1: function(child) {
      child.detachRenderObject$0();
    }
  };
  N.Element_attachRenderObject_closure.prototype = {
    call$1: function(child) {
      child.attachRenderObject$1(this.newSlot);
    }
  };
  N.Element_debugDescribeChildren_closure.prototype = {
    call$1: function(child) {
      var t1 = this.children;
      if (child != null)
        t1.push(child.toDiagnosticsNode$0());
      else
        t1.push(Y.DiagnosticsNode_DiagnosticsNode$message("<null child>", true, C.DiagnosticsTreeStyle_8));
    }
  };
  N._ElementDiagnosticableTreeNode.prototype = {};
  N.ErrorWidget.prototype = {
    createRenderObject$1: function(context) {
      return V.RenderErrorBox$(this.message);
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  N.ComponentElement.prototype = {
    mount$2: function($parent, newSlot) {
      this.super$Element$mount($parent, newSlot);
      this._firstBuild$0();
    },
    _firstBuild$0: function() {
      this.rebuild$0();
    },
    performRebuild$0: function() {
      var built, e, stack, e0, stack0, exception, _this = this, _null = null,
        t1 = $.debugProfileBuildsEnabled;
      if (t1)
        P.Timeline_startSync(J.get$runtimeType$(_this.get$widget()).toString$0(0), C.Map_9aZ6I, _null);
      built = null;
      try {
        built = _this.build$0();
        _this.get$widget();
      } catch (exception) {
        e = H.unwrapException(exception);
        stack = H.getTraceFromException(exception);
        t1 = "building " + _this.toString$0(0);
        built = N.ErrorWidget__defaultErrorWidgetBuilder(N._debugReportException(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t1], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), e, stack, new N.ComponentElement_performRebuild_closure(_this)));
      } finally {
        _this._dirty = false;
      }
      try {
        _this._framework$_child = _this.updateChild$3(_this._framework$_child, built, _this._slot);
      } catch (exception) {
        e0 = H.unwrapException(exception);
        stack0 = H.getTraceFromException(exception);
        t1 = "building " + _this.toString$0(0);
        built = N.ErrorWidget__defaultErrorWidgetBuilder(N._debugReportException(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t1], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), e0, stack0, new N.ComponentElement_performRebuild_closure0(_this)));
        _this._framework$_child = _this.updateChild$3(_null, built, _this._slot);
      }
      t1 = $.debugProfileBuildsEnabled;
      if (t1)
        P.Timeline_finishSync();
    },
    visitChildren$1: function(visitor) {
      var t1 = this._framework$_child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1: function(child) {
      this._framework$_child = null;
      this.super$Element$forgetChild(child);
    }
  };
  N.ComponentElement_performRebuild_closure.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new K.DiagnosticsDebugCreator(null, false, true, null, null, null, false, new N.DebugCreator($async$self.$this), C.C__NoDefaultValue, C.DiagnosticLevel_0, "debugCreator", true, true, null, C.DiagnosticsTreeStyle_8);
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 11
  };
  N.ComponentElement_performRebuild_closure0.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new K.DiagnosticsDebugCreator(null, false, true, null, null, null, false, new N.DebugCreator($async$self.$this), C.C__NoDefaultValue, C.DiagnosticLevel_0, "debugCreator", true, true, null, C.DiagnosticsTreeStyle_8);
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 11
  };
  N.StatelessElement.prototype = {
    get$widget: function() {
      return type$.StatelessWidget._as(N.Element.prototype.get$widget.call(this));
    },
    build$0: function() {
      return type$.StatelessWidget._as(N.Element.prototype.get$widget.call(this)).build$1(this);
    },
    update$1: function(_, newWidget) {
      this.super$Element$update(0, newWidget);
      this._dirty = true;
      this.rebuild$0();
    }
  };
  N.StatefulElement.prototype = {
    build$0: function() {
      return this._framework$_state.build$1(this);
    },
    _firstBuild$0: function() {
      var debugCheckForReturnedFuture, _this = this;
      try {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = true;
        debugCheckForReturnedFuture = _this._framework$_state.initState$0();
      } finally {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = false;
      }
      _this._framework$_state.didChangeDependencies$0();
      _this.super$ComponentElement$_firstBuild();
    },
    performRebuild$0: function() {
      var _this = this;
      if (_this._didChangeDependencies) {
        _this._framework$_state.didChangeDependencies$0();
        _this._didChangeDependencies = false;
      }
      _this.super$ComponentElement$performRebuild();
    },
    update$1: function(_, newWidget) {
      var oldWidget, debugCheckForReturnedFuture, t1, _this = this;
      _this.super$Element$update(0, newWidget);
      t1 = _this._framework$_state;
      oldWidget = t1._widget;
      _this._dirty = true;
      t1._widget = type$.StatefulWidget._as(_this._widget);
      try {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = true;
        debugCheckForReturnedFuture = t1.didUpdateWidget$1(oldWidget);
      } finally {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = false;
      }
      _this.rebuild$0();
    },
    activate$0: function() {
      this.super$Element$activate();
      this.markNeedsBuild$0();
    },
    deactivate$0: function() {
      this._framework$_state.deactivate$0();
      this.super$Element$deactivate();
    },
    unmount$0: function() {
      var _this = this;
      _this.super$Element$unmount();
      _this._framework$_state.dispose$0();
      _this._framework$_state = _this._framework$_state._framework$_element = null;
    },
    dependOnInheritedElement$2$aspect: function(ancestor, aspect) {
      return this.super$Element$dependOnInheritedElement(ancestor, aspect);
    },
    didChangeDependencies$0: function() {
      this.super$Element$didChangeDependencies();
      this._didChangeDependencies = true;
    },
    toDiagnosticsNode$2$name$style: function($name, style) {
      return new N._ElementDiagnosticableTreeNode(true, this, $name, true, true, null, style);
    },
    toDiagnosticsNode$0: function() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    }
  };
  N.ProxyElement.prototype = {
    get$widget: function() {
      return type$.ProxyWidget._as(N.Element.prototype.get$widget.call(this));
    },
    build$0: function() {
      return this.get$widget().child;
    },
    update$1: function(_, newWidget) {
      var _this = this,
        oldWidget = _this.get$widget();
      _this.super$Element$update(0, newWidget);
      _this.updated$1(oldWidget);
      _this._dirty = true;
      _this.rebuild$0();
    },
    updated$1: function(oldWidget) {
      this.notifyClients$1(oldWidget);
    }
  };
  N.ParentDataElement.prototype = {
    get$widget: function() {
      return this.$ti._eval$1("ParentDataWidget<1>")._as(N.ProxyElement.prototype.get$widget.call(this));
    },
    _applyParentData$1: function(widget) {
      this.visitChildren$1(new N.ParentDataElement__applyParentData_applyParentDataToChild(widget));
    },
    notifyClients$1: function(oldWidget) {
      this._applyParentData$1(this.$ti._eval$1("ParentDataWidget<1>")._as(N.ProxyElement.prototype.get$widget.call(this)));
    }
  };
  N.ParentDataElement__applyParentData_applyParentDataToChild.prototype = {
    call$1: function(child) {
      if (child instanceof N.RenderObjectElement)
        this.widget.applyParentData$1(child.get$renderObject());
      else
        child.visitChildren$1(this);
    }
  };
  N.InheritedElement.prototype = {
    get$widget: function() {
      return type$.InheritedWidget._as(N.ProxyElement.prototype.get$widget.call(this));
    },
    _updateInheritance$0: function() {
      var t2, _this = this,
        t1 = _this._parent,
        incomingWidgets = t1 == null ? null : t1._inheritedWidgets;
      t1 = type$.Type;
      t2 = type$.InheritedElement;
      t1 = incomingWidgets != null ? _this._inheritedWidgets = P.HashMap_HashMap$from(incomingWidgets, t1, t2) : _this._inheritedWidgets = P.HashMap_HashMap(t1, t2);
      t1.$indexSet(0, J.get$runtimeType$(_this.get$widget()), _this);
    },
    updated$1: function(oldWidget) {
      if (this.get$widget().updateShouldNotify$1(oldWidget))
        this.super$ProxyElement$updated(oldWidget);
    },
    notifyClients$1: function(oldWidget) {
      var t1;
      for (t1 = this._dependents, t1 = new P._HashMapKeyIterable(t1, H._instanceType(t1)._eval$1("_HashMapKeyIterable<1>")), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1._collection$_current.didChangeDependencies$0();
    }
  };
  N.RenderObjectElement.prototype = {
    get$widget: function() {
      return type$.RenderObjectWidget._as(N.Element.prototype.get$widget.call(this));
    },
    get$renderObject: function() {
      return this._renderObject;
    },
    _findAncestorRenderObjectElement$0: function() {
      var ancestor = this._parent;
      while (true) {
        if (!(ancestor != null && !(ancestor instanceof N.RenderObjectElement)))
          break;
        ancestor = ancestor._parent;
      }
      return type$.RenderObjectElement._as(ancestor);
    },
    _findAncestorParentDataElement$0: function() {
      var ancestor, _box_0 = {},
        t1 = _box_0.ancestor = this._parent;
      _box_0.result = null;
      while (true) {
        if (!(t1 != null && !(t1 instanceof N.RenderObjectElement)))
          break;
        if (t1 instanceof N.ParentDataElement) {
          _box_0.result = t1;
          break;
        }
        ancestor = t1._parent;
        _box_0.ancestor = ancestor;
        t1 = ancestor;
      }
      return _box_0.result;
    },
    mount$2: function($parent, newSlot) {
      var _this = this;
      _this.super$Element$mount($parent, newSlot);
      _this._renderObject = _this.get$widget().createRenderObject$1(_this);
      _this.attachRenderObject$1(newSlot);
      _this._dirty = false;
    },
    update$1: function(_, newWidget) {
      var _this = this;
      _this.super$Element$update(0, newWidget);
      _this.get$widget().updateRenderObject$2(_this, _this.get$renderObject());
      _this._dirty = false;
    },
    performRebuild$0: function() {
      var _this = this;
      _this.get$widget().updateRenderObject$2(_this, _this.get$renderObject());
      _this._dirty = false;
    },
    updateChildren$3$forgottenChildren: function(oldChildren, newWidgets, forgottenChildren) {
      var newChildren, previousChild, newChildrenTop, oldChildrenTop, oldChild, newWidget, newChild, oldChildrenBottom0, haveOldChildren, oldKeyedChildren, key, t3, _this = this, _null = null,
        replaceWithNullIfForgotten = new N.RenderObjectElement_updateChildren_replaceWithNullIfForgotten(forgottenChildren),
        t1 = newWidgets.length,
        newChildrenBottom = t1 - 1,
        t2 = oldChildren.length,
        oldChildrenBottom = t2 - 1;
      if (t2 === t1)
        newChildren = oldChildren;
      else {
        t1 = new Array(t1);
        t1.fixed$length = Array;
        newChildren = H.setRuntimeTypeInfo(t1, type$.JSArray_Element_2);
      }
      t1 = type$.IndexedSlot_Element;
      previousChild = _null;
      newChildrenTop = 0;
      oldChildrenTop = 0;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(oldChildren[oldChildrenTop]);
        newWidget = newWidgets[newChildrenTop];
        if (oldChild != null) {
          t2 = oldChild.get$widget();
          t2 = !(J.get$runtimeType$(t2).$eq(0, J.get$runtimeType$(newWidget)) && J.$eq$(t2.key, newWidget.key));
        } else
          t2 = true;
        if (t2)
          break;
        newChild = _this.updateChild$3(oldChild, newWidget, new N.IndexedSlot(previousChild, newChildrenTop, t1));
        newChildren[newChildrenTop] = newChild;
        ++newChildrenTop;
        ++oldChildrenTop;
        previousChild = newChild;
      }
      oldChildrenBottom0 = oldChildrenBottom;
      while (true) {
        haveOldChildren = oldChildrenTop <= oldChildrenBottom0;
        if (!(haveOldChildren && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(oldChildren[oldChildrenBottom0]);
        newWidget = newWidgets[newChildrenBottom];
        if (oldChild != null) {
          t2 = oldChild.get$widget();
          t2 = !(J.get$runtimeType$(t2).$eq(0, J.get$runtimeType$(newWidget)) && J.$eq$(t2.key, newWidget.key));
        } else
          t2 = true;
        if (t2)
          break;
        --oldChildrenBottom0;
        --newChildrenBottom;
      }
      if (haveOldChildren) {
        oldKeyedChildren = P.LinkedHashMap_LinkedHashMap$_empty(type$.Key, type$.Element_2);
        for (; oldChildrenTop <= oldChildrenBottom0;) {
          oldChild = replaceWithNullIfForgotten.call$1(oldChildren[oldChildrenTop]);
          if (oldChild != null)
            if (oldChild.get$widget().key != null)
              oldKeyedChildren.$indexSet(0, oldChild.get$widget().key, oldChild);
            else {
              oldChild._parent = null;
              oldChild.detachRenderObject$0();
              t2 = _this._owner._inactiveElements;
              if (oldChild._active) {
                oldChild.deactivate$0();
                oldChild.visitChildren$1(N.framework__InactiveElements__deactivateRecursively$closure());
              }
              t2._framework$_elements.add$1(0, oldChild);
            }
          ++oldChildrenTop;
        }
        haveOldChildren = true;
      } else
        oldKeyedChildren = _null;
      for (; newChildrenTop <= newChildrenBottom; previousChild = newChild) {
        newWidget = newWidgets[newChildrenTop];
        if (haveOldChildren) {
          key = newWidget.key;
          if (key != null) {
            oldChild = oldKeyedChildren.$index(0, key);
            if (oldChild != null) {
              t2 = oldChild.get$widget();
              if (J.get$runtimeType$(t2).$eq(0, newWidget.get$runtimeType(newWidget)) && J.$eq$(t2.key, key))
                oldKeyedChildren.remove$1(0, key);
              else
                oldChild = _null;
            }
          } else
            oldChild = _null;
        } else
          oldChild = _null;
        newChild = _this.updateChild$3(oldChild, newWidget, new N.IndexedSlot(previousChild, newChildrenTop, t1));
        newChildren[newChildrenTop] = newChild;
        ++newChildrenTop;
      }
      newChildrenBottom = newWidgets.length - 1;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        newChild = _this.updateChild$3(oldChildren[oldChildrenTop], newWidgets[newChildrenTop], new N.IndexedSlot(previousChild, newChildrenTop, t1));
        newChildren[newChildrenTop] = newChild;
        ++newChildrenTop;
        ++oldChildrenTop;
        previousChild = newChild;
      }
      if (haveOldChildren && oldKeyedChildren.get$isNotEmpty(oldKeyedChildren))
        for (t1 = oldKeyedChildren.get$values(oldKeyedChildren), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          t2 = t1.get$current(t1);
          if (!forgottenChildren.contains$1(0, t2)) {
            t2._parent = null;
            t2.detachRenderObject$0();
            t3 = _this._owner._inactiveElements;
            if (t2._active) {
              t2.deactivate$0();
              t2.visitChildren$1(N.framework__InactiveElements__deactivateRecursively$closure());
            }
            t3._framework$_elements.add$1(0, t2);
          }
        }
      return newChildren;
    },
    deactivate$0: function() {
      this.super$Element$deactivate();
    },
    unmount$0: function() {
      this.super$Element$unmount();
      this.get$widget().didUnmountRenderObject$1(this.get$renderObject());
    },
    _updateSlot$1: function(newSlot) {
      var _this = this;
      _this.super$Element$_updateSlot(newSlot);
      _this._ancestorRenderObjectElement.moveChildRenderObject$2(_this.get$renderObject(), _this._slot);
    },
    attachRenderObject$1: function(newSlot) {
      var t1, parentDataElement, _this = this;
      _this._slot = newSlot;
      t1 = _this._ancestorRenderObjectElement = _this._findAncestorRenderObjectElement$0();
      if (t1 != null)
        t1.insertChildRenderObject$2(_this.get$renderObject(), newSlot);
      parentDataElement = _this._findAncestorParentDataElement$0();
      if (parentDataElement != null)
        parentDataElement.$ti._eval$1("ParentDataWidget<1>")._as(N.ProxyElement.prototype.get$widget.call(parentDataElement)).applyParentData$1(_this.get$renderObject());
    },
    detachRenderObject$0: function() {
      var _this = this,
        t1 = _this._ancestorRenderObjectElement;
      if (t1 != null) {
        t1.removeChildRenderObject$1(_this.get$renderObject());
        _this._ancestorRenderObjectElement = null;
      }
      _this._slot = null;
    }
  };
  N.RenderObjectElement_updateChildren_replaceWithNullIfForgotten.prototype = {
    call$1: function(child) {
      var t1 = this.forgottenChildren.contains$1(0, child);
      return t1 ? null : child;
    }
  };
  N.RootRenderObjectElement.prototype = {
    mount$2: function($parent, newSlot) {
      this.super$RenderObjectElement$mount($parent, newSlot);
    }
  };
  N.LeafRenderObjectElement.prototype = {
    forgetChild$1: function(child) {
      this.super$Element$forgetChild(child);
    },
    insertChildRenderObject$2: function(child, slot) {
    },
    moveChildRenderObject$2: function(child, slot) {
    },
    removeChildRenderObject$1: function(child) {
    },
    debugDescribeChildren$0: function() {
      type$.RenderObjectWidget._as(N.Element.prototype.get$widget.call(this)).toString;
      return C.List_empty2;
    }
  };
  N.SingleChildRenderObjectElement.prototype = {
    get$widget: function() {
      return type$.SingleChildRenderObjectWidget._as(N.RenderObjectElement.prototype.get$widget.call(this));
    },
    visitChildren$1: function(visitor) {
      var t1 = this._framework$_child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1: function(child) {
      this._framework$_child = null;
      this.super$Element$forgetChild(child);
    },
    mount$2: function($parent, newSlot) {
      var _this = this;
      _this.super$RenderObjectElement$mount($parent, newSlot);
      _this._framework$_child = _this.updateChild$3(_this._framework$_child, _this.get$widget().child, null);
    },
    update$1: function(_, newWidget) {
      var _this = this;
      _this.super$RenderObjectElement$update(0, newWidget);
      _this._framework$_child = _this.updateChild$3(_this._framework$_child, _this.get$widget().child, null);
    },
    insertChildRenderObject$2: function(child, slot) {
      type$.RenderObjectWithChildMixin_RenderObject._as(this._renderObject).set$child(child);
    },
    moveChildRenderObject$2: function(child, slot) {
    },
    removeChildRenderObject$1: function(child) {
      type$.RenderObjectWithChildMixin_RenderObject._as(this._renderObject).set$child(null);
    }
  };
  N.MultiChildRenderObjectElement.prototype = {
    get$widget: function() {
      return type$.MultiChildRenderObjectWidget._as(N.RenderObjectElement.prototype.get$widget.call(this));
    },
    get$children: function(_) {
      var t1 = this._framework$_children;
      t1.toString;
      return new H.WhereIterable(t1, new N.MultiChildRenderObjectElement_children_closure(this), H._arrayInstanceType(t1)._eval$1("WhereIterable<1>"));
    },
    insertChildRenderObject$2: function(child, slot) {
      var renderObject = type$.ContainerRenderObjectMixin_of_RenderObject_and_ContainerParentDataMixin_RenderObject._as(this.get$renderObject()),
        t1 = slot == null ? null : slot.value;
      renderObject.insert$2$after(0, child, t1 == null ? null : t1.get$renderObject());
    },
    moveChildRenderObject$2: function(child, slot) {
      var renderObject = type$.ContainerRenderObjectMixin_of_RenderObject_and_ContainerParentDataMixin_RenderObject._as(this.get$renderObject()),
        t1 = slot == null ? null : slot.value;
      renderObject.move$2$after(child, t1 == null ? null : t1.get$renderObject());
    },
    removeChildRenderObject$1: function(child) {
      type$.ContainerRenderObjectMixin_of_RenderObject_and_ContainerParentDataMixin_RenderObject._as(this.get$renderObject()).remove$1(0, child);
    },
    visitChildren$1: function(visitor) {
      var t1, t2, t3, _i, child;
      for (t1 = this._framework$_children, t2 = t1.length, t3 = this._forgottenChildren, _i = 0; _i < t2; ++_i) {
        child = t1[_i];
        if (!t3.contains$1(0, child))
          visitor.call$1(child);
      }
    },
    forgetChild$1: function(child) {
      this._forgottenChildren.add$1(0, child);
      this.super$Element$forgetChild(child);
    },
    mount$2: function($parent, newSlot) {
      var t1, t2, previousChild, i, newChild, _this = this;
      _this.super$RenderObjectElement$mount($parent, newSlot);
      t1 = new Array(_this.get$widget().children.length);
      t1.fixed$length = Array;
      t1 = _this._framework$_children = H.setRuntimeTypeInfo(t1, type$.JSArray_Element_2);
      for (t2 = type$.IndexedSlot_Element, previousChild = null, i = 0; i < t1.length; ++i, previousChild = newChild) {
        newChild = _this.inflateWidget$2(_this.get$widget().children[i], new N.IndexedSlot(previousChild, i, t2));
        t1 = _this._framework$_children;
        t1[i] = newChild;
      }
    },
    update$1: function(_, newWidget) {
      var t1, _this = this;
      _this.super$RenderObjectElement$update(0, newWidget);
      t1 = _this._forgottenChildren;
      _this._framework$_children = _this.updateChildren$3$forgottenChildren(_this._framework$_children, _this.get$widget().children, t1);
      t1.clear$0(0);
    }
  };
  N.MultiChildRenderObjectElement_children_closure.prototype = {
    call$1: function(child) {
      return !this.$this._forgottenChildren.contains$1(0, child);
    }
  };
  N.DebugCreator.prototype = {
    toString$0: function(_) {
      return this.element.debugGetCreatorChain$1(12);
    }
  };
  N.IndexedSlot.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof N.IndexedSlot && this.index === other.index && J.$eq$(this.value, other.value);
    },
    get$hashCode: function(_) {
      return P.hashValues(this.index, this.value, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  N._State_Object_Diagnosticable.prototype = {};
  D.GestureRecognizerFactory.prototype = {};
  D.GestureRecognizerFactoryWithHandlers.prototype = {
    constructor$0: function() {
      return this._constructor.call$0();
    },
    initializer$1: function(instance) {
      return this._initializer.call$1(instance);
    }
  };
  D.GestureDetector.prototype = {
    build$1: function(context) {
      var t1, _this = this,
        gestures = P.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.GestureRecognizerFactory_GestureRecognizer);
      if (_this.onTapDown == null)
        if (_this.onTap == null)
          if (_this.onTapCancel == null)
            t1 = false;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        gestures.$indexSet(0, C.Type_TapGestureRecognizer_62h, new D.GestureRecognizerFactoryWithHandlers(new D.GestureDetector_build_closure(_this), new D.GestureDetector_build_closure0(_this), type$.GestureRecognizerFactoryWithHandlers_TapGestureRecognizer));
      if (_this.onDoubleTap != null)
        gestures.$indexSet(0, C.Type_DoubleTapGestureRecognizer_oyU, new D.GestureRecognizerFactoryWithHandlers(new D.GestureDetector_build_closure1(_this), new D.GestureDetector_build_closure2(_this), type$.GestureRecognizerFactoryWithHandlers_DoubleTapGestureRecognizer));
      if (_this.onLongPress == null)
        t1 = false;
      else
        t1 = true;
      if (t1)
        gestures.$indexSet(0, C.Type_LongPressGestureRecognizer_46y, new D.GestureRecognizerFactoryWithHandlers(new D.GestureDetector_build_closure3(_this), new D.GestureDetector_build_closure4(_this), type$.GestureRecognizerFactoryWithHandlers_LongPressGestureRecognizer));
      t1 = _this.onVerticalDragStart != null || _this.onVerticalDragUpdate != null || _this.onVerticalDragEnd != null || false;
      if (t1)
        gestures.$indexSet(0, C.Type_mLh, new D.GestureRecognizerFactoryWithHandlers(new D.GestureDetector_build_closure5(_this), new D.GestureDetector_build_closure6(_this), type$.GestureRecognizerFactoryWithHandlers_VerticalDragGestureRecognizer));
      if (_this.onHorizontalDragDown == null)
        t1 = _this.onHorizontalDragUpdate != null || _this.onHorizontalDragEnd != null || _this.onHorizontalDragCancel != null;
      else
        t1 = true;
      if (t1)
        gestures.$indexSet(0, C.Type_Vq1, new D.GestureRecognizerFactoryWithHandlers(new D.GestureDetector_build_closure7(_this), new D.GestureDetector_build_closure8(_this), type$.GestureRecognizerFactoryWithHandlers_HorizontalDragGestureRecognizer));
      if (_this.onPanDown == null)
        t1 = _this.onPanUpdate != null || _this.onPanEnd != null || false;
      else
        t1 = true;
      if (t1)
        gestures.$indexSet(0, C.Type_PanGestureRecognizer_bbH, new D.GestureRecognizerFactoryWithHandlers(new D.GestureDetector_build_closure9(_this), new D.GestureDetector_build_closure10(_this), type$.GestureRecognizerFactoryWithHandlers_PanGestureRecognizer));
      return D.RawGestureDetector$(_this.behavior, _this.child, _this.excludeFromSemantics, gestures, null, null);
    }
  };
  D.GestureDetector_build_closure.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new N.TapGestureRecognizer(C.Duration_100000, 18, C.GestureRecognizerState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), this.$this, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 134
  };
  D.GestureDetector_build_closure0.prototype = {
    call$1: function(instance) {
      var t1 = this.$this;
      instance.onTapDown = t1.onTapDown;
      instance.onTapUp = null;
      instance.onTap = t1.onTap;
      instance.onTapCancel = t1.onTapCancel;
      instance.onSecondaryTapCancel = instance.onSecondaryTapUp = instance.onSecondaryTapDown = null;
    }
  };
  D.GestureDetector_build_closure1.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new F.DoubleTapGestureRecognizer(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._TapTracker), this.$this, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 135
  };
  D.GestureDetector_build_closure2.prototype = {
    call$1: function(instance) {
      instance.onDoubleTap = this.$this.onDoubleTap;
    }
  };
  D.GestureDetector_build_closure3.prototype = {
    call$0: function() {
      return T.LongPressGestureRecognizer$(this.$this, null, null, null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 136
  };
  D.GestureDetector_build_closure4.prototype = {
    call$1: function(instance) {
      instance.onLongPress = this.$this.onLongPress;
      instance.onLongPressUp = instance.onLongPressEnd = instance.onLongPressMoveUpdate = instance.onLongPressStart = null;
    }
  };
  D.GestureDetector_build_closure5.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new O.VerticalDragGestureRecognizer(C.DragStartBehavior_1, C._DragState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), this.$this, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 50
  };
  D.GestureDetector_build_closure6.prototype = {
    call$1: function(instance) {
      var t1;
      instance.onDown = null;
      t1 = this.$this;
      instance.onStart = t1.onVerticalDragStart;
      instance.onUpdate = t1.onVerticalDragUpdate;
      instance.onEnd = t1.onVerticalDragEnd;
      instance.onCancel = null;
      instance.dragStartBehavior = t1.dragStartBehavior;
    }
  };
  D.GestureDetector_build_closure7.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new O.HorizontalDragGestureRecognizer(C.DragStartBehavior_1, C._DragState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), this.$this, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 49
  };
  D.GestureDetector_build_closure8.prototype = {
    call$1: function(instance) {
      var t1 = this.$this;
      instance.onDown = t1.onHorizontalDragDown;
      instance.onStart = null;
      instance.onUpdate = t1.onHorizontalDragUpdate;
      instance.onEnd = t1.onHorizontalDragEnd;
      instance.onCancel = t1.onHorizontalDragCancel;
      instance.dragStartBehavior = t1.dragStartBehavior;
    }
  };
  D.GestureDetector_build_closure9.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new O.PanGestureRecognizer(C.DragStartBehavior_1, C._DragState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), this.$this, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 164
  };
  D.GestureDetector_build_closure10.prototype = {
    call$1: function(instance) {
      var t1 = this.$this;
      instance.onDown = t1.onPanDown;
      instance.onStart = null;
      instance.onUpdate = t1.onPanUpdate;
      instance.onEnd = t1.onPanEnd;
      instance.onCancel = null;
      instance.dragStartBehavior = t1.dragStartBehavior;
    }
  };
  D.RawGestureDetector.prototype = {
    createState$0: function() {
      return new D.RawGestureDetectorState(C.Map_empty2, C._StateLifecycle_0);
    }
  };
  D.RawGestureDetectorState.prototype = {
    initState$0: function() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      t2 = t1.semantics;
      _this._gesture_detector$_semantics = t2 == null ? new D._DefaultSemanticsGestureDelegate(_this) : t2;
      _this._syncAll$1(t1.gestures);
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (!(oldWidget.semantics == null && _this._widget.semantics == null)) {
        t1 = _this._widget.semantics;
        _this._gesture_detector$_semantics = t1 == null ? new D._DefaultSemanticsGestureDelegate(_this) : t1;
      }
      _this._syncAll$1(_this._widget.gestures);
    },
    replaceSemanticsActions$1: function(actions) {
      if (this._widget.excludeFromSemantics)
        return;
      type$.RenderSemanticsGestureHandler._as(this._framework$_element.get$renderObject()).set$validActions(actions);
    },
    dispose$0: function() {
      for (var t1 = this._recognizers, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current(t1).dispose$0();
      this._recognizers = null;
      this.super$State$dispose();
    },
    _syncAll$1: function(gestures) {
      var t1, t2, t3, t4, _this = this,
        oldRecognizers = _this._recognizers;
      _this._recognizers = P.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.GestureRecognizer);
      for (t1 = gestures.get$keys(gestures), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        t3 = _this._recognizers;
        t4 = oldRecognizers.$index(0, t2);
        t3.$indexSet(0, t2, t4 == null ? gestures.$index(0, t2).constructor$0() : t4);
        gestures.$index(0, t2).initializer$1(_this._recognizers.$index(0, t2));
      }
      for (t1 = oldRecognizers.get$keys(oldRecognizers), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        if (!_this._recognizers.containsKey$1(0, t2))
          oldRecognizers.$index(0, t2).dispose$0();
      }
    },
    _gesture_detector$_handlePointerDown$1: function($event) {
      var t1, t2;
      for (t1 = this._recognizers, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        t2._pointerToKind.$indexSet(0, $event.pointer, $event.kind);
        if (t2.isPointerAllowed$1($event))
          t2.addAllowedPointer$1($event);
        else
          t2.handleNonAllowedPointer$1($event);
      }
    },
    _updateSemanticsForRenderObject$1: function(renderObject) {
      this._gesture_detector$_semantics.assignSemantics$1(renderObject);
    },
    build$1: function(context) {
      var result, _null = null,
        t1 = this._widget,
        t2 = t1.behavior;
      if (t2 == null)
        t2 = t1.child == null ? C.HitTestBehavior_2 : C.HitTestBehavior_0;
      result = T.Listener$(t2, t1.child, _null, this.get$_gesture_detector$_handlePointerDown(), _null, _null);
      return !t1.excludeFromSemantics ? new D._GestureSemantics(this.get$_updateSemanticsForRenderObject(), result, _null) : result;
    }
  };
  D._GestureSemantics.prototype = {
    createRenderObject$1: function(context) {
      var renderObject = new E.RenderSemanticsGestureHandler(null);
      renderObject.get$isRepaintBoundary();
      renderObject.get$alwaysNeedsCompositing();
      renderObject._needsCompositing = false;
      renderObject.set$child(null);
      this.assignSemantics.call$1(renderObject);
      return renderObject;
    },
    updateRenderObject$2: function(context, renderObject) {
      this.assignSemantics.call$1(renderObject);
    }
  };
  D.SemanticsGestureDelegate.prototype = {
    toString$0: function(_) {
      return "SemanticsGestureDelegate()";
    }
  };
  D._DefaultSemanticsGestureDelegate.prototype = {
    assignSemantics$1: function(renderObject) {
      var _this = this,
        recognizers = _this.detectorState._recognizers;
      renderObject.set$onTap(_this._getTapHandler$1(recognizers));
      renderObject.set$onLongPress(_this._getLongPressHandler$1(recognizers));
      renderObject.set$onHorizontalDragUpdate(_this._getHorizontalDragUpdateHandler$1(recognizers));
      renderObject.set$onVerticalDragUpdate(_this._getVerticalDragUpdateHandler$1(recognizers));
    },
    _getTapHandler$1: function(recognizers) {
      var tap = type$.TapGestureRecognizer._as(recognizers.$index(0, C.Type_TapGestureRecognizer_62h));
      if (tap == null)
        return null;
      return new D._DefaultSemanticsGestureDelegate__getTapHandler_closure(tap);
    },
    _getLongPressHandler$1: function(recognizers) {
      var longPress = type$.LongPressGestureRecognizer._as(recognizers.$index(0, C.Type_LongPressGestureRecognizer_46y));
      if (longPress == null)
        return null;
      return new D._DefaultSemanticsGestureDelegate__getLongPressHandler_closure(longPress);
    },
    _getHorizontalDragUpdateHandler$1: function(recognizers) {
      var horizontal = type$.HorizontalDragGestureRecognizer._as(recognizers.$index(0, C.Type_Vq1)),
        pan = type$.PanGestureRecognizer._as(recognizers.$index(0, C.Type_PanGestureRecognizer_bbH)),
        horizontalHandler = horizontal == null ? null : new D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure(horizontal),
        panHandler = pan == null ? null : new D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0(pan);
      if (horizontalHandler == null && panHandler == null)
        return null;
      return new D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1(horizontalHandler, panHandler);
    },
    _getVerticalDragUpdateHandler$1: function(recognizers) {
      var vertical = type$.VerticalDragGestureRecognizer._as(recognizers.$index(0, C.Type_mLh)),
        pan = type$.PanGestureRecognizer._as(recognizers.$index(0, C.Type_PanGestureRecognizer_bbH)),
        verticalHandler = vertical == null ? null : new D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure(vertical),
        panHandler = pan == null ? null : new D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0(pan);
      if (verticalHandler == null && panHandler == null)
        return null;
      return new D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1(verticalHandler, panHandler);
    }
  };
  D._DefaultSemanticsGestureDelegate__getTapHandler_closure.prototype = {
    call$0: function() {
      var t1 = this.tap,
        t2 = t1.onTapDown;
      if (t2 != null)
        t2.call$1(N.TapDownDetails$(C.Offset_0_0, null, null));
      t2 = t1.onTapUp;
      if (t2 != null)
        t2.call$1(N.TapUpDetails$(C.Offset_0_0, null));
      t1 = t1.onTap;
      if (t1 != null)
        t1.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  D._DefaultSemanticsGestureDelegate__getLongPressHandler_closure.prototype = {
    call$0: function() {
      var t1 = this.longPress,
        t2 = t1.onLongPressStart;
      if (t2 != null)
        t2.call$1(C.LongPressStartDetails_Offset_0_0);
      t2 = t1.onLongPress;
      if (t2 != null)
        t2.call$0();
      t1 = t1.onLongPressEnd;
      if (t1 != null)
        t1.call$1(C.LongPressEndDetails_aB0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure.prototype = {
    call$1: function(details) {
      var t1 = this.horizontal,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(O.DragDownDetails$(C.Offset_0_0, null));
      if (t1.onStart != null) {
        t2 = O.DragStartDetails$(C.Offset_0_0, null, null);
        t1.onStart.call$1(t2);
      }
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      if (t1.onEnd != null)
        t1.onEnd.call$1(new O.DragEndDetails(C.Velocity_Offset_0_0, 0));
    }
  };
  D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0.prototype = {
    call$1: function(details) {
      var _null = null,
        t1 = this.pan,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(O.DragDownDetails$(C.Offset_0_0, _null));
      if (t1.onStart != null) {
        t2 = O.DragStartDetails$(C.Offset_0_0, _null, _null);
        t1.onStart.call$1(t2);
      }
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      if (t1.onEnd != null)
        t1.onEnd.call$1(new O.DragEndDetails(C.Velocity_Offset_0_0, _null));
    }
  };
  D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1.prototype = {
    call$1: function(details) {
      var t1 = this.horizontalHandler;
      if (t1 != null)
        t1.call$1(details);
      t1 = this.panHandler;
      if (t1 != null)
        t1.call$1(details);
    }
  };
  D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure.prototype = {
    call$1: function(details) {
      var t1 = this.vertical,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(O.DragDownDetails$(C.Offset_0_0, null));
      if (t1.onStart != null) {
        t2 = O.DragStartDetails$(C.Offset_0_0, null, null);
        t1.onStart.call$1(t2);
      }
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      if (t1.onEnd != null)
        t1.onEnd.call$1(new O.DragEndDetails(C.Velocity_Offset_0_0, 0));
    }
  };
  D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0.prototype = {
    call$1: function(details) {
      var _null = null,
        t1 = this.pan,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(O.DragDownDetails$(C.Offset_0_0, _null));
      if (t1.onStart != null) {
        t2 = O.DragStartDetails$(C.Offset_0_0, _null, _null);
        t1.onStart.call$1(t2);
      }
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      if (t1.onEnd != null)
        t1.onEnd.call$1(new O.DragEndDetails(C.Velocity_Offset_0_0, _null));
    }
  };
  D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1.prototype = {
    call$1: function(details) {
      var t1 = this.verticalHandler;
      if (t1 != null)
        t1.call$1(details);
      t1 = this.panHandler;
      if (t1 != null)
        t1.call$1(details);
    }
  };
  T.HeroFlightDirection.prototype = {
    toString$0: function(_) {
      return this._heroes$_name;
    }
  };
  T.Hero.prototype = {
    createState$0: function() {
      return new T._HeroState(new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), C._StateLifecycle_0);
    }
  };
  T.Hero__allHeroesFor_inviteHero.prototype = {
    call$2: function(hero, tag) {
      var t1,
        heroWidget = type$.Hero._as(hero._widget),
        heroState = type$._HeroState._as(hero._framework$_state);
      if (this.isUserGestureTransition) {
        heroWidget.toString;
        t1 = false;
      } else
        t1 = true;
      if (t1)
        this.result.$indexSet(0, tag, heroState);
      else
        heroState.ensurePlaceholderIsHidden$0();
    }
  };
  T.Hero__allHeroesFor_visitor.prototype = {
    call$1: function(element) {
      var tag, heroRoute, t1, _this = this,
        widget = element.get$widget();
      if (widget instanceof T.Hero) {
        type$.StatefulElement._as(element);
        tag = widget.tag;
        if (K.Navigator_of(element) == _this.navigator)
          _this.inviteHero.call$2(element, tag);
        else {
          heroRoute = T.ModalRoute_of(element, type$.Object);
          if (heroRoute != null)
            t1 = heroRoute.get$isCurrent();
          else
            t1 = false;
          if (t1)
            _this.inviteHero.call$2(element, tag);
        }
      }
      element.visitChildren$1(_this);
    }
  };
  T._HeroState.prototype = {
    startFlight$1$shouldIncludedChildInPlaceholder: function(shouldIncludedChildInPlaceholder) {
      var _this = this;
      _this._shouldIncludeChild = shouldIncludedChildInPlaceholder;
      _this.setState$1(new T._HeroState_startFlight_closure(_this, type$.RenderBox._as(_this._framework$_element.get$renderObject())));
    },
    startFlight$0: function() {
      return this.startFlight$1$shouldIncludedChildInPlaceholder(false);
    },
    ensurePlaceholderIsHidden$0: function() {
      if (this._framework$_element != null)
        this.setState$1(new T._HeroState_ensurePlaceholderIsHidden_closure(this));
    },
    build$1: function(context) {
      var t3, _this = this, _null = null,
        t1 = _this._placeholderSize,
        t2 = t1 == null,
        showPlaceholder = !t2;
      if (showPlaceholder)
        _this._widget.toString;
      if (showPlaceholder && !_this._shouldIncludeChild)
        return new T.SizedBox(t1._dx, t1._dy, _null, _null);
      t3 = t2 ? _null : t1._dx;
      t1 = t2 ? _null : t1._dy;
      return new T.SizedBox(t3, t1, new T.Offstage(showPlaceholder, new U.TickerMode(t2, new T.KeyedSubtree(_this._widget.child, _this._heroes$_key), _null), _null), _null);
    }
  };
  T._HeroState_startFlight_closure.prototype = {
    call$0: function() {
      this.$this._placeholderSize = this.box._size;
    },
    $signature: 0
  };
  T._HeroState_ensurePlaceholderIsHidden_closure.prototype = {
    call$0: function() {
      this.$this._placeholderSize = null;
    },
    $signature: 0
  };
  T._HeroFlightManifest.prototype = {
    get$animation: function(_) {
      var _this = this,
        t1 = _this.type === C.HeroFlightDirection_0 ? _this.toRoute._animationProxy : _this.fromRoute._animationProxy;
      return S.CurvedAnimation$(C.Cubic_ifx, t1, _this.isDiverted ? null : new Z.FlippedCurve(C.Cubic_ifx));
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this.fromHero;
      return "_HeroFlightManifest(" + _this.type.toString$0(0) + " tag: " + t1._widget.tag.toString$0(0) + " from route: " + _this.fromRoute._settings.toString$0(0) + " to route: " + _this.toRoute._settings.toString$0(0) + " with hero: " + t1.toString$0(0) + " to " + H.S(_this.toHero) + ")";
    }
  };
  T._HeroFlight.prototype = {
    _doCreateRectTween$2: function(begin, end) {
      var createRectTween,
        t1 = this.manifest;
      t1.toHero._widget.toString;
      createRectTween = t1.createRectTween;
      return createRectTween.call$2(begin, end);
    },
    _buildOverlay$1: function(context) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.shuttle;
      if (t1 == null) {
        t1 = _this.manifest;
        t2 = t1.get$animation(t1);
        t3 = _this.manifest;
        t4 = t3.type;
        t5 = t3.fromHero._framework$_element;
        t3 = t3.toHero._framework$_element;
        t3 = _this.shuttle = t1.shuttleBuilder.call$5(context, t2, t4, t5, t3);
        t1 = t3;
      }
      return K.AnimatedBuilder$(_this._proxyAnimation, new T._HeroFlight__buildOverlay_closure(_this), t1);
    },
    _handleAnimationUpdate$1: function($status) {
      var t2, _this = this,
        t1 = $status !== C.AnimationStatus_3;
      if (!t1 || $status === C.AnimationStatus_0) {
        _this._proxyAnimation.set$parent(0, null);
        _this.overlayEntry.remove$0(0);
        _this.overlayEntry = null;
        t2 = _this.manifest.fromHero;
        t2.toString;
        if (t1)
          t2.ensurePlaceholderIsHidden$0();
        t1 = _this.manifest.toHero;
        t1.toString;
        if ($status !== C.AnimationStatus_0)
          t1.ensurePlaceholderIsHidden$0();
        _this.onFlightEnded.call$1(_this);
      }
    },
    toString$0: function(_) {
      var t1 = this.manifest,
        from = t1.fromRoute._settings,
        to = t1.toRoute._settings;
      return "HeroFlight(for: " + t1.fromHero._widget.tag.toString$0(0) + ", from: " + from.toString$0(0) + ", to: " + to.toString$0(0) + " " + H.S(this._proxyAnimation._animations$_parent) + ")";
    }
  };
  T._HeroFlight__buildOverlay_closure.prototype = {
    call$2: function(context, child) {
      var t3, t4, t5, toHeroOrigin, t6, t7, t8, rect, _null = null,
        t1 = this.$this,
        t2 = t1.manifest.toHero._framework$_element;
      t2 = t2 == null ? _null : t2.get$renderObject();
      t3 = type$.RenderBox;
      t3._as(t2);
      if (t1._aborted || t2 == null || t2._node$_owner == null) {
        t2 = t1._heroOpacity;
        if (t2.get$status(t2) === C.AnimationStatus_3) {
          t2 = t1._proxyAnimation;
          t3 = $.$get$_HeroFlight__reverseTween();
          t4 = t2.get$value(t2);
          t3.toString;
          t5 = t3.$ti._eval$1("_ChainedEvaluation<Animatable.T>");
          t1._heroOpacity = new R._AnimatedEvaluation(type$.Animation_double._as(t2), new R._ChainedEvaluation(new R.CurveTween(new Z.Interval(t4, 1, C.C__Linear)), t3, t5), t5._eval$1("_AnimatedEvaluation<Animatable.T>"));
        }
      } else if (t2._size != null) {
        t4 = $.GlobalKey__registry.$index(0, t1.manifest.toRoute._subtreeKey);
        toHeroOrigin = T.MatrixUtils_transformPoint(t2.getTransformTo$1(0, t3._as(t4 == null ? _null : t4.get$renderObject())), C.Offset_0_0);
        t2 = t1.heroRectTween.end;
        if (!toHeroOrigin.$eq(0, new P.Offset(t2.left, t2.top))) {
          t2 = t1.heroRectTween;
          t3 = t2.end;
          t4 = t3.right;
          t5 = t3.left;
          t6 = t3.bottom;
          t3 = t3.top;
          t7 = toHeroOrigin._dx;
          t8 = toHeroOrigin._dy;
          t1.heroRectTween = t1._doCreateRectTween$2(t2.begin, new P.Rect(t7, t8, t7 + (t4 - t5), t8 + (t6 - t3)));
        }
      }
      t2 = t1.heroRectTween;
      t3 = t1._proxyAnimation;
      t2.toString;
      rect = t2.transform$1(0, t3.get$value(t3));
      t3 = t1.manifest.navigatorRect;
      t2 = rect.left;
      t4 = rect.top;
      t5 = rect.right;
      t6 = rect.bottom;
      t1 = t1._heroOpacity;
      return T.Positioned$(t3.bottom - t3.top - t6, new T.IgnorePointer(true, _null, new T.RepaintBoundary(T.Opacity$(child, t1.get$value(t1)), _null), _null), _null, _null, t2, t3.right - t3.left - t5, t4, _null);
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  T.HeroController.prototype = {
    didStopUserGesture$0: function() {
      var t1, t2, invalidFlights, _i;
      if (this._navigator$_navigator.userGestureInProgressNotifier._change_notifier$_value)
        return;
      t1 = this._flights;
      t1 = t1.get$values(t1);
      t2 = H._instanceType(t1)._eval$1("WhereIterable<Iterable.E>");
      invalidFlights = P.List_List$from(new H.WhereIterable(t1, new T.HeroController_didStopUserGesture_isInvalidFlight(), t2), false, t2._eval$1("Iterable.E"));
      for (t1 = invalidFlights.length, _i = 0; _i < invalidFlights.length; invalidFlights.length === t1 || (0, H.throwConcurrentModificationError)(invalidFlights), ++_i)
        invalidFlights[_i]._handleAnimationUpdate$1(C.AnimationStatus_0);
    },
    _maybeStartHeroTransition$4: function(fromRoute, toRoute, flightType, isUserGestureTransition) {
      var animation, t1;
      if (toRoute != fromRoute && toRoute instanceof V.PageRoute && fromRoute instanceof V.PageRoute) {
        animation = flightType === C.HeroFlightDirection_0 ? toRoute._animationProxy : fromRoute._animationProxy;
        switch (flightType) {
          case C.HeroFlightDirection_1:
            if (animation.get$value(animation) === 0)
              return;
            break;
          case C.HeroFlightDirection_0:
            if (animation.get$value(animation) === 1)
              return;
            break;
        }
        if (isUserGestureTransition)
          if (flightType === C.HeroFlightDirection_1) {
            toRoute.toString;
            t1 = true;
          } else
            t1 = false;
        else
          t1 = false;
        if (t1)
          this._startHeroTransition$5(fromRoute, toRoute, animation, flightType, isUserGestureTransition);
        else {
          t1 = toRoute._animationProxy;
          toRoute.set$offstage(t1.get$value(t1) === 0);
          $.WidgetsBinding__instance.SchedulerBinding__postFrameCallbacks.push(new T.HeroController__maybeStartHeroTransition_closure(this, fromRoute, toRoute, animation, flightType, isUserGestureTransition));
        }
      }
    },
    _startHeroTransition$5: function(from, to, animation, flightType, isUserGestureTransition) {
      var navigatorRect, fromHeroes, t1, toHeroes, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, tag, isDiverted, t17, t18, t19, t20, manifest, t21, _this = this;
      if (_this._navigator$_navigator == null || $.GlobalKey__registry.$index(0, from._subtreeKey) == null || $.GlobalKey__registry.$index(0, to._subtreeKey) == null) {
        to.set$offstage(false);
        return;
      }
      navigatorRect = T._boundingBoxFor(_this._navigator$_navigator._framework$_element, null);
      fromHeroes = T.Hero__allHeroesFor($.GlobalKey__registry.$index(0, from._subtreeKey), isUserGestureTransition, _this._navigator$_navigator);
      t1 = to._subtreeKey;
      toHeroes = T.Hero__allHeroesFor($.GlobalKey__registry.$index(0, t1), isUserGestureTransition, _this._navigator$_navigator);
      to.set$offstage(false);
      for (t2 = fromHeroes.get$keys(fromHeroes), t2 = t2.get$iterator(t2), t3 = _this._flights, t4 = type$.LabeledGlobalKey__OverlayEntryWidgetState, t5 = _this.get$_handleFlightEnded(), t6 = type$.JSArray_of_void_Function_AnimationStatus, t7 = type$.ObserverList_of_void_Function_AnimationStatus, t8 = type$.JSArray_of_void_Function, t9 = type$.ObserverList_of_void_Function, t10 = _this.createRectTween, t11 = type$.Tween_double, t12 = type$.Animation_double, t13 = t11._eval$1("_AnimatedEvaluation<Animatable.T>"), t14 = type$.ReverseTween_Rect, t15 = flightType === C.HeroFlightDirection_1, t16 = flightType === C.HeroFlightDirection_0; t2.moveNext$0();) {
        tag = t2.get$current(t2);
        if (toHeroes.$index(0, tag) != null) {
          fromHeroes.$index(0, tag)._widget.toString;
          toHeroes.$index(0, tag)._widget.toString;
          isDiverted = t3.$index(0, tag) != null;
          t17 = _this._navigator$_navigator._overlayKey.get$currentState();
          t18 = fromHeroes.$index(0, tag);
          t19 = toHeroes.$index(0, tag);
          t20 = $.$get$HeroController__defaultHeroFlightShuttleBuilder();
          manifest = new T._HeroFlightManifest(flightType, t17, navigatorRect, from, to, t18, t19, t10, t20, isUserGestureTransition, isDiverted);
          if (isDiverted) {
            t17 = t3.$index(0, tag);
            t20 = t17.manifest.type;
            if (t20 === C.HeroFlightDirection_0 && t15) {
              t17._proxyAnimation.set$parent(0, new S.ReverseAnimation(manifest.get$animation(manifest), new R.ObserverList(H.setRuntimeTypeInfo([], t6), t7), 0));
              t18 = t17.heroRectTween;
              t17.heroRectTween = new R.ReverseTween(t18, t18.end, t18.begin, t14);
            } else {
              t20 = t20 === C.HeroFlightDirection_1 && t16;
              t21 = t17._proxyAnimation;
              if (t20) {
                t18 = manifest.get$animation(manifest);
                t20 = t17.manifest;
                t20 = t20.get$animation(t20);
                t20 = t20.get$value(t20);
                t21.set$parent(0, new R._AnimatedEvaluation(t12._as(t18), new R.Tween(t20, 1, t11), t13));
                t18 = t17.manifest.fromHero;
                if (t18 != t19) {
                  t18.toString;
                  t19.startFlight$0();
                  t17.heroRectTween = t17._doCreateRectTween$2(t17.heroRectTween.end, T._boundingBoxFor(t19._framework$_element, $.GlobalKey__registry.$index(0, t1)));
                } else {
                  t18 = t17.heroRectTween;
                  t17.heroRectTween = t17._doCreateRectTween$2(t18.end, t18.begin);
                }
              } else {
                t20 = t17.heroRectTween;
                t20.toString;
                t17.heroRectTween = t17._doCreateRectTween$2(t20.transform$1(0, t21.get$value(t21)), T._boundingBoxFor(t19._framework$_element, $.GlobalKey__registry.$index(0, t1)));
                t17.shuttle = null;
                t20 = t17._proxyAnimation;
                if (t15)
                  t20.set$parent(0, new S.ReverseAnimation(manifest.get$animation(manifest), new R.ObserverList(H.setRuntimeTypeInfo([], t6), t7), 0));
                else
                  t20.set$parent(0, manifest.get$animation(manifest));
                t20 = t17.manifest;
                t20.fromHero.toString;
                t20.toHero.toString;
                t18.startFlight$1$shouldIncludedChildInPlaceholder(t16);
                t19.startFlight$0();
                t18 = t17.overlayEntry._key.get$currentState();
                if (t18 != null)
                  t18._markNeedsBuild$0();
              }
            }
            t17._aborted = false;
            t17.manifest = manifest;
          } else {
            t17 = new T._HeroFlight(t5, C.C__AlwaysCompleteAnimation);
            t18 = H.setRuntimeTypeInfo([], t6);
            t19 = new R.ObserverList(t18, t7);
            t20 = new S.ProxyAnimation(t19, new R.ObserverList(H.setRuntimeTypeInfo([], t8), t9), 0);
            t20._status = C.AnimationStatus_0;
            t20._animations$_value = 0;
            t20.didRegisterListener$0();
            t19._isDirty = true;
            t18.push(t17.get$_handleAnimationUpdate());
            t17._proxyAnimation = t20;
            t17.manifest = manifest;
            if (t15)
              t20.set$parent(0, new S.ReverseAnimation(manifest.get$animation(manifest), new R.ObserverList(H.setRuntimeTypeInfo([], t6), t7), 0));
            else
              t20.set$parent(0, manifest.get$animation(manifest));
            t18 = t17.manifest;
            t18.fromHero.startFlight$1$shouldIncludedChildInPlaceholder(t18.type === C.HeroFlightDirection_0);
            t17.manifest.toHero.startFlight$0();
            t18 = t17.manifest;
            t18 = T._boundingBoxFor(t18.fromHero._framework$_element, $.GlobalKey__registry.$index(0, t18.fromRoute._subtreeKey));
            t19 = t17.manifest;
            t17.heroRectTween = t17._doCreateRectTween$2(t18, T._boundingBoxFor(t19.toHero._framework$_element, $.GlobalKey__registry.$index(0, t19.toRoute._subtreeKey)));
            t19 = new X.OverlayEntry(t17.get$_buildOverlay(), false, new N.LabeledGlobalKey(null, t4));
            t17.overlayEntry = t19;
            t17.manifest.overlay.insert$1(0, t19);
            t3.$indexSet(0, tag, t17);
          }
        } else if (t3.$index(0, tag) != null)
          t3.$index(0, tag)._aborted = true;
      }
      for (t1 = toHeroes.get$keys(toHeroes), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        tag = t1.get$current(t1);
        if (fromHeroes.$index(0, tag) == null)
          toHeroes.$index(0, tag).ensurePlaceholderIsHidden$0();
      }
    },
    _handleFlightEnded$1: function(flight) {
      this._flights.remove$1(0, flight.manifest.fromHero._widget.tag);
    }
  };
  T.HeroController_didStopUserGesture_isInvalidFlight.prototype = {
    call$1: function(flight) {
      var t1 = flight.manifest;
      if (t1.isUserGestureTransition)
        if (t1.type === C.HeroFlightDirection_1) {
          t1 = flight._proxyAnimation;
          t1 = t1.get$status(t1) === C.AnimationStatus_0;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  T.HeroController__maybeStartHeroTransition_closure.prototype = {
    call$1: function(value) {
      var _this = this;
      _this.$this._startHeroTransition$5(_this.from, _this.to, _this.animation, _this.flightType, _this.isUserGestureTransition);
    },
    $signature: 6
  };
  T.HeroController_closure.prototype = {
    call$5: function(flightContext, animation, flightDirection, fromHeroContext, toHeroContext) {
      return type$.Hero._as(toHeroContext.get$widget()).child;
    },
    "call*": "call$5",
    $requiredArgCount: 5
  };
  L.Icon.prototype = {
    build$1: function(context) {
      var iconTheme, t3, iconSize, iconOpacity, iconColor, iconWidget, _null = null,
        textDirection = T.Directionality_of(context),
        iconThemeData = Y.IconTheme__getInheritedIconThemeData(context).resolve$1(context),
        t1 = iconThemeData.color,
        t2 = t1 == null;
      if (!t2 && iconThemeData.get$opacity(iconThemeData) != null && iconThemeData.size != null)
        iconTheme = iconThemeData;
      else {
        t3 = iconThemeData.size;
        if (t3 == null)
          t3 = 24;
        if (t2)
          t1 = C.Color_4278190080;
        t2 = iconThemeData.get$opacity(iconThemeData);
        iconTheme = iconThemeData.copyWith$3$color$opacity$size(t1, t2 == null ? C.IconThemeData_Color_4278190080_1_24.get$opacity(C.IconThemeData_Color_4278190080_1_24) : t2, t3);
      }
      iconSize = iconTheme.size;
      t1 = this.icon;
      if (t1 == null)
        return T.Semantics$(_null, new T.SizedBox(iconSize, iconSize, _null, _null), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      iconOpacity = iconTheme.get$opacity(iconTheme);
      iconColor = iconTheme.color;
      if (iconOpacity !== 1)
        iconColor = P.Color$fromARGB(C.JSNumber_methods.round$0(255 * (((4278190080 & iconColor.get$value(iconColor)) >>> 24) / 255 * iconOpacity)), (16711680 & iconColor.get$value(iconColor)) >>> 16, (65280 & iconColor.get$value(iconColor)) >>> 8, (255 & iconColor.get$value(iconColor)) >>> 0);
      t2 = H.Primitives_stringFromCharCode(t1.codePoint);
      iconWidget = T.RichText$(_null, _null, C.TextOverflow_3, true, _null, Q.TextSpan$(_null, A.TextStyle$(_null, _null, iconColor, _null, _null, _null, _null, _null, "MaterialIcons", _null, _null, iconSize, _null, _null, _null, _null, false, _null, _null, _null, _null, _null, _null), t2), C.TextAlign_4, textDirection, _null, 1, C.TextWidthBasis_0);
      if (t1.matchTextDirection)
        switch (textDirection) {
          case C.TextDirection_0:
            t1 = new E.Matrix4(new Float64Array(16));
            t1.setIdentity$0();
            t1.scale$3(0, -1, 1, 1);
            iconWidget = T.Transform$(C.Alignment_0_0, iconWidget, t1, false);
            break;
          case C.TextDirection_1:
            break;
        }
      return T.Semantics$(_null, new T.ExcludeSemantics(true, new T.SizedBox(iconSize, iconSize, new T.Center(C.Alignment_0_0, _null, _null, iconWidget, _null), _null), _null), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  X.IconData.prototype = {
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      if (other instanceof X.IconData)
        if (other.codePoint === this.codePoint)
          t1 = other.matchTextDirection === this.matchTextDirection;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.codePoint, "MaterialIcons", null, this.matchTextDirection, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "IconData(U+" + C.JSString_methods.padLeft$2(C.JSInt_methods.toRadixString$1(this.codePoint, 16).toUpperCase(), 5, "0") + ")";
    }
  };
  Y.IconTheme.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return !this.data.$eq(0, oldWidget.data);
    }
  };
  Y.IconTheme_merge_closure.prototype = {
    call$1: function(context) {
      return new Y.IconTheme(Y.IconTheme__getInheritedIconThemeData(context).merge$1(this.data), this.child, this.key);
    }
  };
  T.IconThemeData.prototype = {
    copyWith$3$color$opacity$size: function(color, opacity, size) {
      var _this = this,
        t1 = color == null ? _this.color : color,
        t2 = opacity == null ? _this.get$opacity(_this) : opacity;
      return new T.IconThemeData(t1, t2, size == null ? _this.size : size);
    },
    merge$1: function(other) {
      return this.copyWith$3$color$opacity$size(other.color, other.get$opacity(other), other.size);
    },
    resolve$1: function(context) {
      return this;
    },
    get$opacity: function(_) {
      var t1 = this._opacity;
      return t1 == null ? null : C.JSNumber_methods.clamp$2(t1, 0, 1);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      return other instanceof T.IconThemeData && J.$eq$(other.color, _this.color) && other.get$opacity(other) == _this.get$opacity(_this) && other.size == _this.size;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.color, _this.get$opacity(_this), _this.size, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  T._IconThemeData_Object_Diagnosticable.prototype = {};
  G.DecorationTween.prototype = {
    lerp$1: function(t) {
      return Z.Decoration_lerp(this.begin, this.end, t);
    }
  };
  G.BorderRadiusTween.prototype = {
    lerp$1: function(t) {
      return K.BorderRadius_lerp(this.begin, this.end, t);
    }
  };
  G.TextStyleTween.prototype = {
    lerp$1: function(t) {
      return A.TextStyle_lerp(this.begin, this.end, t);
    }
  };
  G.ImplicitlyAnimatedWidget.prototype = {};
  G.ImplicitlyAnimatedWidgetState.prototype = {
    initState$0: function() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this._widget.duration;
      t1 = G.AnimationController$(null, t1, 0, null, 1, null, _this);
      _this._implicit_animations$_controller = t1;
      t1.addStatusListener$1(new G.ImplicitlyAnimatedWidgetState_initState_closure(_this));
      _this._updateCurve$0();
      _this._constructTweens$0();
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this._widget.curve !== oldWidget.curve)
        _this._updateCurve$0();
      _this._implicit_animations$_controller.duration = _this._widget.duration;
      if (_this._constructTweens$0()) {
        _this.forEachTween$1(new G.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure(_this));
        t1 = _this._implicit_animations$_controller;
        t1.set$value(0, 0);
        t1.forward$0(0);
      }
    },
    _updateCurve$0: function() {
      var t1 = this._widget,
        t2 = this._implicit_animations$_controller;
      this._implicit_animations$_animation = S.CurvedAnimation$(t1.curve, t2, null);
    },
    dispose$0: function() {
      this._implicit_animations$_controller.dispose$0();
      this.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$dispose();
    },
    _updateTween$2: function(tween, targetValue) {
      var t1;
      if (tween == null)
        return;
      t1 = this._implicit_animations$_animation;
      tween.set$begin(tween.transform$1(0, t1.get$value(t1)));
      tween.set$end(0, targetValue);
    },
    _constructTweens$0: function() {
      var t1 = {};
      t1.shouldStartAnimation = false;
      this.forEachTween$1(new G.ImplicitlyAnimatedWidgetState__constructTweens_closure(t1, this));
      return t1.shouldStartAnimation;
    }
  };
  G.ImplicitlyAnimatedWidgetState_initState_closure.prototype = {
    call$1: function($status) {
      switch ($status) {
        case C.AnimationStatus_3:
          this.$this._widget.toString;
          break;
        case C.AnimationStatus_0:
        case C.AnimationStatus_1:
        case C.AnimationStatus_2:
          break;
      }
    },
    $signature: 45
  };
  G.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure.prototype = {
    call$3: function(tween, targetValue, $constructor) {
      this.$this._updateTween$2(tween, targetValue);
      return tween;
    }
  };
  G.ImplicitlyAnimatedWidgetState__constructTweens_closure.prototype = {
    call$3: function(tween, targetValue, $constructor) {
      var t1;
      if (targetValue != null) {
        if (tween == null)
          tween = $constructor.call$1(targetValue);
        t1 = tween.end;
        if (!J.$eq$(targetValue, t1 == null ? tween.begin : t1))
          this._box_0.shouldStartAnimation = true;
      } else
        tween = null;
      return tween;
    }
  };
  G.AnimatedWidgetBaseState.prototype = {
    initState$0: function() {
      this.super$ImplicitlyAnimatedWidgetState$initState();
      var t1 = this._implicit_animations$_controller;
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._list.push(this.get$_handleAnimationChanged());
    },
    _handleAnimationChanged$0: function() {
      this.setState$1(new G.AnimatedWidgetBaseState__handleAnimationChanged_closure());
    }
  };
  G.AnimatedWidgetBaseState__handleAnimationChanged_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  G.AnimatedDefaultTextStyle.prototype = {
    createState$0: function() {
      return new G._AnimatedDefaultTextStyleState(null, C._StateLifecycle_0);
    }
  };
  G._AnimatedDefaultTextStyleState.prototype = {
    forEachTween$1: function(visitor) {
      this._implicit_animations$_style = type$.TextStyleTween._as(visitor.call$3(this._implicit_animations$_style, this._widget.style, new G._AnimatedDefaultTextStyleState_forEachTween_closure()));
    },
    build$1: function(context) {
      var t1 = this._implicit_animations$_style,
        t2 = this._implicit_animations$_animation;
      t1.toString;
      t2 = t1.transform$1(0, t2.get$value(t2));
      return L.DefaultTextStyle$(this._widget.child, null, C.TextOverflow_0, true, t2, null, null, C.TextWidthBasis_0);
    }
  };
  G._AnimatedDefaultTextStyleState_forEachTween_closure.prototype = {
    call$1: function(value) {
      return new G.TextStyleTween(type$.TextStyle._as(value), null);
    },
    $signature: 143
  };
  G.AnimatedPhysicalModel.prototype = {
    createState$0: function() {
      return new G._AnimatedPhysicalModelState(null, C._StateLifecycle_0);
    }
  };
  G._AnimatedPhysicalModelState.prototype = {
    forEachTween$1: function(visitor) {
      var t1, _this = this;
      _this._borderRadius = type$.BorderRadiusTween._as(visitor.call$3(_this._borderRadius, _this._widget.borderRadius, new G._AnimatedPhysicalModelState_forEachTween_closure()));
      _this._implicit_animations$_elevation = type$.Tween_double._as(visitor.call$3(_this._implicit_animations$_elevation, _this._widget.elevation, new G._AnimatedPhysicalModelState_forEachTween_closure0()));
      t1 = type$.ColorTween;
      _this._implicit_animations$_color = t1._as(visitor.call$3(_this._implicit_animations$_color, _this._widget.color, new G._AnimatedPhysicalModelState_forEachTween_closure1()));
      _this._implicit_animations$_shadowColor = t1._as(visitor.call$3(_this._implicit_animations$_shadowColor, _this._widget.shadowColor, new G._AnimatedPhysicalModelState_forEachTween_closure2()));
    },
    build$1: function(context) {
      var t4, t5, t6, t7, t8, _this = this,
        t1 = _this._widget,
        t2 = t1.child,
        t3 = t1.shape;
      t1 = t1.clipBehavior;
      t4 = _this._borderRadius;
      t5 = _this._implicit_animations$_animation;
      t4.toString;
      t5 = t4.transform$1(0, t5.get$value(t5));
      t4 = _this._implicit_animations$_elevation;
      t6 = _this._implicit_animations$_animation;
      t4.toString;
      t6 = t4.transform$1(0, t6.get$value(t6));
      t4 = _this._widget.color;
      t7 = _this._implicit_animations$_shadowColor;
      t8 = _this._implicit_animations$_animation;
      t7.toString;
      t7 = t7.transform$1(0, t8.get$value(t8));
      return new T.PhysicalModel(t3, t1, t5, t6, t4, t7, t2, null);
    }
  };
  G._AnimatedPhysicalModelState_forEachTween_closure.prototype = {
    call$1: function(value) {
      return new G.BorderRadiusTween(type$.BorderRadius._as(value), null);
    },
    $signature: 144
  };
  G._AnimatedPhysicalModelState_forEachTween_closure0.prototype = {
    call$1: function(value) {
      return new R.Tween(H._asDoubleS(value), null, type$.Tween_double);
    },
    $signature: 57
  };
  G._AnimatedPhysicalModelState_forEachTween_closure1.prototype = {
    call$1: function(value) {
      return new R.ColorTween(type$.Color._as(value), null);
    },
    $signature: 30
  };
  G._AnimatedPhysicalModelState_forEachTween_closure2.prototype = {
    call$1: function(value) {
      return new R.ColorTween(type$.Color._as(value), null);
    },
    $signature: 30
  };
  G._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var t1 = this.SingleTickerProviderStateMixin__ticker;
      if (t1 != null)
        t1.set$muted(0, !U.TickerMode_of(this._framework$_element));
      this.super$State$didChangeDependencies();
    }
  };
  S.InheritedNotifier.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return oldWidget.notifier != this.notifier;
    },
    createElement$0: function(_) {
      var t1 = type$.Element_2,
        t2 = P.HashMap_HashMap(t1, type$.Object),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      t1 = new S._InheritedNotifierElement(t2, t3, this, C._ElementLifecycle_0, P.HashSet_HashSet(t1), H._instanceType(this)._eval$1("_InheritedNotifierElement<InheritedNotifier.T>"));
      t3 = this.notifier;
      if (t3 != null) {
        t2 = t3.ChangeNotifier__listeners;
        t2._isDirty = true;
        t2._list.push(t1.get$_handleUpdate());
      }
      return t1;
    }
  };
  S._InheritedNotifierElement.prototype = {
    get$widget: function() {
      return this.$ti._eval$1("InheritedNotifier<1>")._as(N.InheritedElement.prototype.get$widget.call(this));
    },
    update$1: function(_, newWidget) {
      var t1, _this = this,
        oldNotifier = _this.$ti._eval$1("InheritedNotifier<1>")._as(N.InheritedElement.prototype.get$widget.call(_this)).notifier,
        newNotifier = newWidget.notifier;
      if (oldNotifier != newNotifier) {
        if (oldNotifier != null)
          oldNotifier.ChangeNotifier__listeners.remove$1(0, _this.get$_handleUpdate());
        if (newNotifier != null) {
          t1 = newNotifier.ChangeNotifier__listeners;
          t1._isDirty = true;
          t1._list.push(_this.get$_handleUpdate());
        }
      }
      _this.super$ProxyElement$update(0, newWidget);
    },
    build$0: function() {
      var _this = this;
      if (_this._inherited_notifier$_dirty) {
        _this.super$InheritedElement$notifyClients(_this.$ti._eval$1("InheritedNotifier<1>")._as(N.InheritedElement.prototype.get$widget.call(_this)));
        _this._inherited_notifier$_dirty = false;
      }
      return _this.super$ProxyElement$build();
    },
    _handleUpdate$0: function() {
      this._inherited_notifier$_dirty = true;
      this.markNeedsBuild$0();
    },
    notifyClients$1: function(oldWidget) {
      this.super$InheritedElement$notifyClients(oldWidget);
      this._inherited_notifier$_dirty = false;
    },
    unmount$0: function() {
      var _this = this,
        t1 = _this.$ti._eval$1("InheritedNotifier<1>")._as(N.InheritedElement.prototype.get$widget.call(_this)).notifier;
      if (t1 != null)
        t1.ChangeNotifier__listeners.remove$1(0, _this.get$_handleUpdate());
      _this.super$Element$unmount();
    }
  };
  M.InheritedTheme.prototype = {};
  L._Pending.prototype = {};
  L._loadAll_closure.prototype = {
    call$1: function(value) {
      return this._box_0.completedValue = value;
    },
    $signature: 8
  };
  L._loadAll_closure0.prototype = {
    call$1: function(p) {
      return p.futureValue;
    }
  };
  L._loadAll_closure1.prototype = {
    call$1: function(values) {
      var t1, t2, t3, i;
      for (t1 = J.getInterceptor$asx(values), t2 = this._box_1, t3 = this.output, i = 0; i < t1.get$length(values); ++i)
        t3.$indexSet(0, H.createRuntimeType(H._instanceType(t2.pendingList[i].delegate)._eval$1("LocalizationsDelegate.T")), t1.$index(values, i));
      return t3;
    },
    $signature: 145
  };
  L.LocalizationsDelegate.prototype = {
    toString$0: function(_) {
      return "LocalizationsDelegate[" + H.createRuntimeType(H._instanceType(this)._eval$1("LocalizationsDelegate.T")).toString$0(0) + "]";
    }
  };
  L.WidgetsLocalizations.prototype = {};
  L._WidgetsLocalizationsDelegate.prototype = {
    isSupported$1: function(locale) {
      return true;
    },
    load$1: function(_, locale) {
      return new O.SynchronousFuture(C.C_DefaultWidgetsLocalizations, type$.SynchronousFuture_WidgetsLocalizations);
    },
    shouldReload$1: function(old) {
      return false;
    },
    toString$0: function(_) {
      return "DefaultWidgetsLocalizations.delegate(en_US)";
    }
  };
  L.DefaultWidgetsLocalizations.prototype = {$isWidgetsLocalizations: 1};
  L._LocalizationsScope.prototype = {
    updateShouldNotify$1: function(old) {
      var t1 = this.typeToResources,
        t2 = old.typeToResources;
      return t1 == null ? t2 != null : t1 !== t2;
    }
  };
  L.Localizations.prototype = {
    createState$0: function() {
      return new L._LocalizationsState(new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), P.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.dynamic), C._StateLifecycle_0);
    }
  };
  L._LocalizationsState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this.load$1(0, this._widget.locale);
    },
    _anyDelegatesShouldReload$1: function(old) {
      var delegates, oldDelegates, i, delegate, oldDelegate,
        t1 = this._widget.delegates,
        t2 = old.delegates;
      if (t1.length !== t2.length)
        return true;
      delegates = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1));
      oldDelegates = H.setRuntimeTypeInfo(t2.slice(0), H._arrayInstanceType(t2));
      for (i = 0; i < delegates.length; ++i) {
        delegate = delegates[i];
        oldDelegate = oldDelegates[i];
        if (J.get$runtimeType$(delegate).$eq(0, J.get$runtimeType$(oldDelegate))) {
          delegate.shouldReload$1(oldDelegate);
          t1 = false;
        } else
          t1 = true;
        if (t1)
          return true;
      }
      return false;
    },
    didUpdateWidget$1: function(old) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(old);
      if (J.$eq$(_this._widget.locale, old.locale)) {
        _this._widget.toString;
        t1 = _this._anyDelegatesShouldReload$1(old);
      } else
        t1 = true;
      if (t1)
        _this.load$1(0, _this._widget.locale);
    },
    load$1: function(_, locale) {
      var typeToResourcesFuture, _this = this, t1 = {},
        delegates = _this._widget.delegates,
        t2 = delegates.length;
      if (t2 === 0) {
        _this._localizations$_locale = locale;
        return;
      }
      t1.typeToResources = null;
      typeToResourcesFuture = L._loadAll(locale, delegates).then$1$1(new L._LocalizationsState_load_closure(t1), type$.Map_Type_dynamic);
      t1 = t1.typeToResources;
      if (t1 != null) {
        _this._typeToResources = t1;
        _this._localizations$_locale = locale;
      } else {
        ++$.RendererBinding__instance.RendererBinding__firstFrameDeferredCount;
        typeToResourcesFuture.then$1$1(new L._LocalizationsState_load_closure0(_this, locale), type$.void);
      }
    },
    get$_localizations$_textDirection: function() {
      type$.WidgetsLocalizations._as(J.$index$asx(this._typeToResources, C.Type_WidgetsLocalizations_43h)).toString;
      return C.TextDirection_1;
    },
    build$1: function(context) {
      var t1, _this = this, _null = null;
      if (_this._localizations$_locale == null)
        return M.Container$(_null, _null, _null, _null, _null, _null, _null, _null, _null);
      t1 = _this.get$_localizations$_textDirection();
      return T.Semantics$(_null, new L._LocalizationsScope(_this, _this._typeToResources, new T.Directionality(_this.get$_localizations$_textDirection(), _this._widget.child, _null), _this._localizedResourcesScopeKey), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, t1);
    }
  };
  L._LocalizationsState_load_closure.prototype = {
    call$1: function(value) {
      return this._box_0.typeToResources = value;
    }
  };
  L._LocalizationsState_load_closure0.prototype = {
    call$1: function(value) {
      var t1 = this.$this;
      if (t1._framework$_element != null)
        t1.setState$1(new L._LocalizationsState_load__closure(t1, value, this.locale));
      t1 = $.RendererBinding__instance;
      --t1.RendererBinding__firstFrameDeferredCount;
      if (!t1.RendererBinding__firstFrameSent)
        t1.scheduleWarmUpFrame$0();
    }
  };
  L._LocalizationsState_load__closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._typeToResources = this.value;
      t1._localizations$_locale = this.locale;
    },
    $signature: 0
  };
  F.MediaQueryData.prototype = {
    copyWith$1$padding: function(padding) {
      var _this = this;
      return F.MediaQueryData$(_this.accessibleNavigation, false, _this.boldText, _this.devicePixelRatio, _this.disableAnimations, _this.highContrast, _this.invertColors, padding, _this.physicalDepth, _this.platformBrightness, _this.size, _this.systemGestureInsets, _this.textScaleFactor, _this.viewInsets, _this.viewPadding);
    },
    removePadding$4$removeBottom$removeLeft$removeRight$removeTop: function(removeBottom, removeLeft, removeRight, removeTop) {
      var t1, t2, t3, t4, t5, t6, _this = this, _null = null;
      if (!(removeLeft || removeTop || removeRight || removeBottom))
        return _this;
      t1 = _this.padding;
      t2 = removeLeft ? 0 : _null;
      t3 = removeTop ? 0 : _null;
      t4 = removeRight ? 0 : _null;
      t2 = t1.copyWith$4$bottom$left$right$top(removeBottom ? 0 : _null, t2, t4, t3);
      t3 = _this.viewPadding;
      t4 = removeLeft ? Math.max(0, t3.left - t1.left) : _null;
      t5 = removeTop ? Math.max(0, t3.top - t1.top) : _null;
      t6 = removeRight ? Math.max(0, t3.right - t1.right) : _null;
      return F.MediaQueryData$(_this.accessibleNavigation, false, _this.boldText, _this.devicePixelRatio, _this.disableAnimations, _this.highContrast, _this.invertColors, t2, 17976931348623157e292, _this.platformBrightness, _this.size, C.EdgeInsets_0_0_0_0, _this.textScaleFactor, _this.viewInsets, t3.copyWith$4$bottom$left$right$top(removeBottom ? Math.max(0, t3.bottom - t1.bottom) : _null, t4, t6, t5));
    },
    removeViewInsets$1$removeBottom: function(removeBottom) {
      var _this = this, _null = null,
        t1 = _this.viewPadding,
        t2 = _this.viewInsets;
      t1 = t1.copyWith$4$bottom$left$right$top(Math.max(0, t1.bottom - t2.bottom), _null, _null, _null);
      return F.MediaQueryData$(_this.accessibleNavigation, false, _this.boldText, _this.devicePixelRatio, _this.disableAnimations, _this.highContrast, _this.invertColors, _this.padding, 17976931348623157e292, _this.platformBrightness, _this.size, C.EdgeInsets_0_0_0_0, _this.textScaleFactor, t2.copyWith$4$bottom$left$right$top(0, _null, _null, _null), t1);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(_this)))
        return false;
      if (other instanceof F.MediaQueryData)
        if (other.size.$eq(0, _this.size))
          if (other.devicePixelRatio == _this.devicePixelRatio)
            if (other.textScaleFactor === _this.textScaleFactor)
              if (other.platformBrightness === _this.platformBrightness)
                if (other.padding.$eq(0, _this.padding))
                  if (other.viewPadding.$eq(0, _this.viewPadding))
                    if (other.viewInsets.$eq(0, _this.viewInsets))
                      if (other.physicalDepth === _this.physicalDepth)
                        t1 = other.highContrast === _this.highContrast && other.disableAnimations === _this.disableAnimations && other.invertColors === _this.invertColors && other.accessibleNavigation === _this.accessibleNavigation && other.boldText === _this.boldText;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.size, _this.devicePixelRatio, _this.textScaleFactor, _this.platformBrightness, _this.padding, _this.viewPadding, _this.viewInsets, _this.physicalDepth, false, _this.highContrast, _this.disableAnimations, _this.invertColors, _this.accessibleNavigation, _this.boldText, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this;
      return "MediaQueryData(" + C.JSArray_methods.join$1(H.setRuntimeTypeInfo(["size: " + _this.size.toString$0(0), "devicePixelRatio: " + J.toStringAsFixed$1$n(_this.devicePixelRatio, 1), "textScaleFactor: " + C.JSInt_methods.toStringAsFixed$1(_this.textScaleFactor, 1), "platformBrightness: " + _this.platformBrightness.toString$0(0), "padding: " + _this.padding.toString$0(0), "viewPadding: " + _this.viewPadding.toString$0(0), "viewInsets: " + _this.viewInsets.toString$0(0), "physicalDepth: " + _this.physicalDepth, "alwaysUse24HourFormat: false", "accessibleNavigation: " + _this.accessibleNavigation, "highContrast: " + _this.highContrast, "disableAnimations: " + _this.disableAnimations, "invertColors: " + _this.invertColors, "boldText: " + _this.boldText], type$.JSArray_String), ", ") + ")";
    }
  };
  F.MediaQuery.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return !this.data.$eq(0, oldWidget.data);
    }
  };
  X.ModalBarrier.prototype = {
    build$1: function(context) {
      var t1, _null = null;
      switch (U.defaultTargetPlatform()) {
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_3:
        case C.TargetPlatform_5:
          break;
        case C.TargetPlatform_2:
        case C.TargetPlatform_4:
          break;
      }
      t1 = this.color;
      return new T.BlockSemantics(new T.ExcludeSemantics(true, new X._ModalBarrierGestureDetector(T.Semantics$(_null, T.MouseRegion$(new T.ConstrainedBox(C.BoxConstraints_ALM, t1 == null ? _null : new M.DecoratedBox(S.BoxDecoration$(_null, _null, _null, t1, _null, _null, C.BoxShape_0), C.DecorationPosition_0, _null, _null), _null), _null, _null, _null, true), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null), new X.ModalBarrier_build_closure(this, context), _null), _null), _null);
    }
  };
  X.ModalBarrier_build_closure.prototype = {
    call$0: function() {
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  X._AnyTapGestureRecognizer.prototype = {
    isPointerAllowed$1: function($event) {
      if (this.onAnyTapUp == null)
        return false;
      return this.super$GestureRecognizer$isPointerAllowed($event);
    },
    handleTapDown$1$down: function(down) {
    },
    handleTapUp$2$down$up: function(down, up) {
      var t1 = this.onAnyTapUp;
      if (t1 != null)
        t1.call$0();
    },
    handleTapCancel$3$cancel$down$reason: function(cancel, down, reason) {
    }
  };
  X._ModalBarrierSemanticsDelegate.prototype = {
    assignSemantics$1: function(renderObject) {
      renderObject.set$onTap(this.onDismiss);
    }
  };
  X._AnyTapGestureRecognizerFactory.prototype = {
    constructor$0: function() {
      var t1 = type$.int;
      return new X._AnyTapGestureRecognizer(C.Duration_100000, 18, C.GestureRecognizerState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), null, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    initializer$1: function(instance) {
      instance.onAnyTapUp = this.onAnyTapUp;
    }
  };
  X._ModalBarrierGestureDetector.prototype = {
    build$1: function(context) {
      var t1 = this.onDismiss;
      return D.RawGestureDetector$(C.HitTestBehavior_1, this.child, false, P.LinkedHashMap_LinkedHashMap$_literal([C.Type__AnyTapGestureRecognizer_5RQ, new X._AnyTapGestureRecognizerFactory(t1)], type$.Type, type$.GestureRecognizerFactory_GestureRecognizer), null, new X._ModalBarrierSemanticsDelegate(t1));
    }
  };
  E.NavigationToolbar.prototype = {
    build$1: function(context) {
      var _this = this,
        textDirection = T.Directionality_of(context),
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_Widget),
        t2 = _this.leading;
      if (t2 != null)
        t1.push(T.LayoutId$(t2, C._ToolbarSlot_0));
      t2 = _this.middle;
      if (t2 != null)
        t1.push(T.LayoutId$(t2, C._ToolbarSlot_1));
      t2 = _this.trailing;
      if (t2 != null)
        t1.push(T.LayoutId$(t2, C._ToolbarSlot_2));
      return new T.CustomMultiChildLayout(new E._ToolbarLayout(_this.centerMiddle, _this.middleSpacing, textDirection), t1, null);
    }
  };
  E._ToolbarSlot.prototype = {
    toString$0: function(_) {
      return this._navigation_toolbar$_name;
    }
  };
  E._ToolbarLayout.prototype = {
    performLayout$1: function(size) {
      var t1, t2, leadingWidth, leadingX, trailingSize, trailingX, trailingWidth, maxWidth, t3, middleSize, middleStartMargin, t4, middleStart, t5, middleX, _this = this;
      if (_this._idToChild.$index(0, C._ToolbarSlot_0) != null) {
        t1 = size._dx;
        t2 = size._dy;
        leadingWidth = _this.layoutChild$2(C._ToolbarSlot_0, new S.BoxConstraints(0, t1 / 3, t2, t2))._dx;
        switch (_this.textDirection) {
          case C.TextDirection_0:
            leadingX = t1 - leadingWidth;
            break;
          case C.TextDirection_1:
            leadingX = 0;
            break;
          default:
            leadingX = null;
        }
        _this.positionChild$2(C._ToolbarSlot_0, new P.Offset(leadingX, 0));
      } else
        leadingWidth = 0;
      if (_this._idToChild.$index(0, C._ToolbarSlot_2) != null) {
        t1 = size._dx;
        t2 = size._dy;
        trailingSize = _this.layoutChild$2(C._ToolbarSlot_2, new S.BoxConstraints(0, t1, 0, t2));
        switch (_this.textDirection) {
          case C.TextDirection_0:
            trailingX = 0;
            break;
          case C.TextDirection_1:
            trailingX = t1 - trailingSize._dx;
            break;
          default:
            trailingX = null;
        }
        t1 = trailingSize._dy;
        trailingWidth = trailingSize._dx;
        _this.positionChild$2(C._ToolbarSlot_2, new P.Offset(trailingX, (t2 - t1) / 2));
      } else
        trailingWidth = 0;
      if (_this._idToChild.$index(0, C._ToolbarSlot_1) != null) {
        t1 = size._dx;
        t2 = _this.middleSpacing;
        maxWidth = Math.max(t1 - leadingWidth - trailingWidth - t2 * 2, 0);
        t3 = size._dy;
        middleSize = _this.layoutChild$2(C._ToolbarSlot_1, new S.BoxConstraints(0, t1, 0, t3).copyWith$1$maxWidth(maxWidth));
        middleStartMargin = leadingWidth + t2;
        t2 = middleSize._dy;
        if (_this.centerMiddle) {
          t4 = middleSize._dx;
          middleStart = (t1 - t4) / 2;
          t5 = t1 - trailingWidth;
          if (middleStart + t4 > t5)
            middleStart = t5 - t4;
          else if (middleStart < middleStartMargin)
            middleStart = middleStartMargin;
        } else
          middleStart = middleStartMargin;
        switch (_this.textDirection) {
          case C.TextDirection_0:
            middleX = t1 - middleSize._dx - middleStart;
            break;
          case C.TextDirection_1:
            middleX = middleStart;
            break;
          default:
            middleX = null;
        }
        _this.positionChild$2(C._ToolbarSlot_1, new P.Offset(middleX, (t3 - t2) / 2));
      }
    },
    shouldRelayout$1: function(oldDelegate) {
      return oldDelegate.centerMiddle != this.centerMiddle || oldDelegate.middleSpacing !== this.middleSpacing || oldDelegate.textDirection != this.textDirection;
    }
  };
  K.RoutePopDisposition.prototype = {
    toString$0: function(_) {
      return this._navigator$_name;
    }
  };
  K.Route.prototype = {
    install$0: function() {
    },
    didPush$0: function() {
      var t1 = new M.TickerFuture(new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
      t1._ticker$_complete$0();
      t1.then$1$1(new K.Route_didPush_closure(this), type$.void);
      return t1;
    },
    didAdd$0: function() {
      var t1 = new M.TickerFuture(new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
      t1._ticker$_complete$0();
      t1.then$1$1(new K.Route_didAdd_closure(this), type$.void);
    },
    didReplace$1: function(oldRoute) {
    },
    willPop$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this;
      var $async$willPop$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self.get$isFirst() ? C.RoutePopDisposition_2 : C.RoutePopDisposition_0;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$willPop$0, $async$completer);
    },
    didPop$1: function(result) {
      this.didComplete$1(result);
      return true;
    },
    didComplete$1: function(result) {
      this._popCompleter.complete$1(0, null);
    },
    didPopNext$1: function(nextRoute) {
    },
    didChangeNext$1: function(nextRoute) {
    },
    didChangePrevious$1: function(previousRoute) {
    },
    changedInternalState$0: function() {
    },
    changedExternalState$0: function() {
    },
    dispose$0: function() {
      this._navigator$_navigator = null;
    },
    get$isCurrent: function() {
      var currentRouteEntry,
        t1 = this._navigator$_navigator;
      if (t1 == null)
        return false;
      currentRouteEntry = C.JSArray_methods.lastWhere$2$orElse(t1._history, $.$get$_RouteEntry_isPresentPredicate(), new K.Route_isCurrent_closure());
      if (currentRouteEntry == null)
        return false;
      return currentRouteEntry.route === this;
    },
    get$isFirst: function() {
      var currentRouteEntry,
        t1 = this._navigator$_navigator;
      if (t1 == null)
        return false;
      currentRouteEntry = C.JSArray_methods.firstWhere$2$orElse(t1._history, $.$get$_RouteEntry_isPresentPredicate(), new K.Route_isFirst_closure());
      if (currentRouteEntry == null)
        return false;
      return currentRouteEntry.route === this;
    },
    get$isActive: function() {
      var t1 = this._navigator$_navigator;
      if (t1 == null)
        return false;
      t1 = C.JSArray_methods.firstWhere$2$orElse(t1._history, K._RouteEntry_isRoutePredicate(this), new K.Route_isActive_closure());
      return (t1 == null ? null : t1.get$isPresent()) === true;
    }
  };
  K.Route_didPush_closure.prototype = {
    call$1: function(_) {
      var t1 = this.$this._navigator$_navigator;
      t1 = t1 == null ? null : t1.focusScopeNode;
      if (t1 != null)
        t1.requestFocus$0();
    },
    $signature: 13
  };
  K.Route_didAdd_closure.prototype = {
    call$1: function(_) {
      this.$this._navigator$_navigator.focusScopeNode.requestFocus$0();
    },
    $signature: 13
  };
  K.Route_isCurrent_closure.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  K.Route_isFirst_closure.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  K.Route_isActive_closure.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  K.RouteSettings.prototype = {
    toString$0: function(_) {
      return 'RouteSettings("' + H.S(this.name) + '", ' + H.S(this.$arguments) + ")";
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  K.Page.prototype = {};
  K.NavigatorObserver.prototype = {};
  K.RouteTransitionRecord.prototype = {};
  K.TransitionDelegate.prototype = {};
  K.DefaultTransitionDelegate.prototype = {};
  K.Navigator.prototype = {
    createState$0: function() {
      return new K.NavigatorState(new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_OverlayState), H.setRuntimeTypeInfo([], type$.JSArray__RouteEntry), O.FocusScopeNode$(true, "Navigator Scope", false), new B.ValueNotifier(false, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function)), P.LinkedHashSet_LinkedHashSet$_empty(type$.int), null, C._StateLifecycle_0);
    },
    onPopPage$2: function(arg0, arg1) {
      return null.call$2(arg0, arg1);
    },
    onGenerateRoute$1: function(arg0) {
      return this.onGenerateRoute.call$1(arg0);
    },
    onUnknownRoute$1: function(arg0) {
      return this.onUnknownRoute.call$1(arg0);
    },
    onGenerateInitialRoutes$2: function(arg0, arg1) {
      return this.onGenerateInitialRoutes.call$2(arg0, arg1);
    }
  };
  K.Navigator_defaultGenerateInitialRoutes_closure.prototype = {
    call$1: function(route) {
      return route == null;
    }
  };
  K._RouteLifecycle.prototype = {
    toString$0: function(_) {
      return this._navigator$_name;
    }
  };
  K._RouteEntry.prototype = {
    handlePush$4$isNewFirst$navigator$previous$previousPresent: function(isNewFirst, $navigator, previous, previousPresent) {
      var t2, routeFuture, t3, _i, observer, t4, _this = this,
        previousState = _this.currentState,
        t1 = _this.route;
      t1._navigator$_navigator = $navigator;
      t1.install$0();
      t2 = _this.currentState;
      if (t2 === C._RouteLifecycle_3 || t2 === C._RouteLifecycle_4) {
        t2 = t1._scopeKey;
        if (t2.get$currentState() != null)
          t1._navigator$_navigator.focusScopeNode.setFirstFocus$1(t2.get$currentState().focusScopeNode);
        routeFuture = t1.super$TransitionRoute$didPush();
        _this.currentState = C._RouteLifecycle_5;
        routeFuture.whenCompleteOrCancel$1(new K._RouteEntry_handlePush_closure(_this, $navigator));
      } else {
        if (previous instanceof T.TransitionRoute)
          t1._controller.set$value(0, previous._controller._animation_controller$_value);
        t1._didPushOrReplace$0();
        t1.super$Route$didReplace(previous);
        _this.currentState = C._RouteLifecycle_7;
      }
      if (isNewFirst) {
        t1._updateSecondaryAnimation$1(null);
        t1.super$Route$didChangeNext(null);
      }
      if (previousState === C._RouteLifecycle_6 || previousState === C._RouteLifecycle_4)
        for (t2 = $navigator._widget.observers, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
          observer = t2[_i];
          observer.toString;
          t4 = t1.get$isCurrent();
          if (t4)
            observer._maybeStartHeroTransition$4(previous, t1, C.HeroFlightDirection_0, false);
        }
      else
        for (t2 = $navigator._widget.observers, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
          t2[_i]._maybeStartHeroTransition$4(previousPresent, t1, C.HeroFlightDirection_0, false);
    },
    handlePop$2$navigator$previousPresent: function($navigator, previousPresent) {
      var t1, t2, t3, _i, observer;
      this.currentState = C._RouteLifecycle_10;
      for (t1 = $navigator._widget.observers, t2 = t1.length, t3 = this.route, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        observer = t1[_i];
        if (!observer._navigator$_navigator.userGestureInProgressNotifier._change_notifier$_value)
          observer._maybeStartHeroTransition$4(t3, previousPresent, C.HeroFlightDirection_1, false);
      }
    },
    handleRemoval$2$navigator$previousPresent: function($navigator, previousPresent) {
      var t1, t2, _i;
      this.currentState = C._RouteLifecycle_11;
      if (this._reportRemovalToObserver)
        for (t1 = $navigator._widget.observers, t2 = t1.length, _i = 0; _i < t2; ++_i)
          t1[_i].toString;
    },
    didAdd$4$isNewFirst$navigator$previous$previousPresent: function(isNewFirst, $navigator, previous, previousPresent) {
      var t3, _i,
        t1 = this.route,
        t2 = t1._scopeKey;
      if (t2.get$currentState() != null)
        t1._navigator$_navigator.focusScopeNode.setFirstFocus$1(t2.get$currentState().focusScopeNode);
      t1.super$TransitionRoute$didAdd();
      this.currentState = C._RouteLifecycle_7;
      if (isNewFirst) {
        t1._updateSecondaryAnimation$1(null);
        t1.super$Route$didChangeNext(null);
      }
      for (t2 = $navigator._widget.observers, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        t2[_i]._maybeStartHeroTransition$4(previousPresent, t1, C.HeroFlightDirection_0, false);
    },
    pop$1$1: function(result) {
      var _this = this;
      _this.doingPop = true;
      if (_this.route.didPop$1(result) && _this.doingPop)
        _this.currentState = C._RouteLifecycle_8;
      _this.doingPop = false;
    },
    pop$1: function(result) {
      return this.pop$1$1(result, type$.dynamic);
    },
    get$isPresent: function() {
      var t1 = this.currentState.index;
      return t1 <= 9 && t1 >= 1;
    }
  };
  K._RouteEntry_handlePush_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1.currentState === C._RouteLifecycle_5) {
        t1.currentState = C._RouteLifecycle_7;
        this.navigator._flushHistoryUpdates$0();
      }
    },
    $signature: 0
  };
  K._RouteEntry_closure1.prototype = {
    call$1: function(entry) {
      return entry.get$isPresent();
    }
  };
  K._RouteEntry_closure.prototype = {
    call$1: function(entry) {
      var t1 = entry.currentState.index;
      return t1 <= 9 && t1 >= 3;
    }
  };
  K._RouteEntry_closure0.prototype = {
    call$1: function(entry) {
      var t1 = entry.currentState.index;
      return t1 <= 7 && t1 >= 1;
    }
  };
  K._RouteEntry_isRoutePredicate_closure.prototype = {
    call$1: function(entry) {
      return entry.route === this.route;
    }
  };
  K.NavigatorState.prototype = {
    initState$0: function() {
      var t1, t2, _i, initialRoute, _this = this;
      _this.super$State$initState();
      for (t1 = _this._widget.observers, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i]._navigator$_navigator = _this;
      t1 = _this._widget;
      initialRoute = t1.initialRoute;
      t2 = _this._history;
      C.JSArray_methods.addAll$1(t2, J.map$1$1$ax(t1.onGenerateInitialRoutes$2(_this, initialRoute), new K.NavigatorState_initState_closure(), type$._RouteEntry));
      _this._flushHistoryUpdates$0();
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, t2, _i, t3, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.observers;
      t2 = _this._widget.observers;
      if (t1 == null ? t2 != null : t1 !== t2) {
        for (t2 = t1.length, _i = 0; _i < t2; ++_i)
          t1[_i]._navigator$_navigator = null;
        for (t1 = _this._widget.observers, t2 = t1.length, _i = 0; _i < t2; ++_i)
          t1[_i]._navigator$_navigator = _this;
      }
      _this._widget.toString;
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        t3 = t1[_i].route;
        t3.toString;
        t3.super$Route$changedExternalState();
        t3 = t3._scopeKey;
        if (t3.get$currentState() != null)
          t3.get$currentState()._forceRebuildPage$0();
      }
    },
    dispose$0: function() {
      var t1, t2, _i, entry, t3, t4, t5, _this = this;
      for (t1 = _this._widget.observers, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i]._navigator$_navigator = null;
      _this.focusScopeNode.dispose$0();
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        t3 = entry.route;
        t4 = t3._controller;
        if (t4 != null) {
          t4._ticker.dispose$0();
          t4._ticker = null;
          t4.super$AnimationEagerListenerMixin$dispose();
        }
        t4 = t3._transitionCompleter;
        t5 = t3._result;
        t4 = t4.future;
        if (t4._state !== 0)
          H.throwExpression(P.StateError$("Future already completed"));
        t4._asyncComplete$1(t5);
        t3.super$OverlayRoute$dispose();
        entry.currentState = C._RouteLifecycle_13;
      }
      _this.super$_NavigatorState_State_TickerProviderStateMixin$dispose();
    },
    get$_allRouteOverlayEntries: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, _i;
        return function $async$get$_allRouteOverlayEntries($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._history, t2 = t1.length, _i = 0;
              case 2:
                // for condition
                if (!(_i < t1.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return P._IterationMarker_yieldStar(t1[_i].route._overlayEntries);
              case 5:
                // after yield
              case 3:
                // for update
                t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.OverlayEntry);
    },
    _flushHistoryUpdates$1$rearrangeOverlay: function(rearrangeOverlay) {
      var t2, t3, t4, poppedRoute, next, canRemoveOrAdd, seenTopActiveRoute, t5, t6, t7, index0, previous0, lastEntry, routeName, _i, _i0, _this = this, _null = null,
        t1 = _this._history,
        index = t1.length - 1,
        entry = t1[index],
        previous = index > 0 ? t1[index - 1] : _null,
        toBeDisposed = H.setRuntimeTypeInfo([], type$.JSArray__RouteEntry);
      for (t1 = type$.JSArray_of_void_Function_AnimationStatus, t2 = type$.ObserverList_of_void_Function_AnimationStatus, t3 = type$.JSArray_of_void_Function, t4 = type$.ObserverList_of_void_Function, poppedRoute = _null, next = poppedRoute, canRemoveOrAdd = false, seenTopActiveRoute = false; index >= 0;) {
        switch (entry.currentState) {
          case C._RouteLifecycle_1:
            t5 = entry.route;
            t5._navigator$_navigator = _this;
            t5.toString;
            t5.super$TransitionRoute$install();
            t6 = T.TransitionRoute.prototype.get$animation.call(t5, t5);
            t7 = new S.ProxyAnimation(new R.ObserverList(H.setRuntimeTypeInfo([], t1), t2), new R.ObserverList(H.setRuntimeTypeInfo([], t3), t4), 0);
            t7._animations$_parent = t6;
            if (t6 == null) {
              t7._status = C.AnimationStatus_0;
              t7._animations$_value = 0;
            }
            t5._animationProxy = t7;
            t6 = T.TransitionRoute.prototype.get$secondaryAnimation.call(t5);
            t7 = new S.ProxyAnimation(new R.ObserverList(H.setRuntimeTypeInfo([], t1), t2), new R.ObserverList(H.setRuntimeTypeInfo([], t3), t4), 0);
            t7._animations$_parent = t6;
            t5._secondaryAnimationProxy = t7;
            entry.currentState = C._RouteLifecycle_2;
            continue;
          case C._RouteLifecycle_2:
            if (canRemoveOrAdd || next == null) {
              t5 = previous == null ? _null : previous.route;
              index0 = _this._getIndexBefore$2(index - 1, $.$get$_RouteEntry_isPresentPredicate());
              t6 = index0 >= 0 ? _this._history[index0] : _null;
              t6 = t6 == null ? _null : t6.route;
              entry.didAdd$4$isNewFirst$navigator$previous$previousPresent(next == null, _this, t5, t6);
              continue;
            }
            break;
          case C._RouteLifecycle_3:
          case C._RouteLifecycle_4:
          case C._RouteLifecycle_6:
            t5 = previous == null ? _null : previous.route;
            index0 = _this._getIndexBefore$2(index - 1, $.$get$_RouteEntry_isPresentPredicate());
            t6 = index0 >= 0 ? _this._history[index0] : _null;
            t6 = t6 == null ? _null : t6.route;
            entry.handlePush$4$isNewFirst$navigator$previous$previousPresent(next == null, _this, t5, t6);
            if (entry.currentState === C._RouteLifecycle_7)
              continue;
            break;
          case C._RouteLifecycle_5:
            if (!seenTopActiveRoute && poppedRoute != null) {
              t5 = entry.route;
              t5._updateSecondaryAnimation$1(poppedRoute);
              t5.super$Route$didPopNext(poppedRoute);
              entry.lastAnnouncedPoppedNextRoute = poppedRoute;
            }
            seenTopActiveRoute = true;
            break;
          case C._RouteLifecycle_7:
            if (!seenTopActiveRoute && poppedRoute != null) {
              t5 = entry.route;
              t5._updateSecondaryAnimation$1(poppedRoute);
              t5.super$Route$didPopNext(poppedRoute);
              entry.lastAnnouncedPoppedNextRoute = poppedRoute;
            }
            canRemoveOrAdd = true;
            seenTopActiveRoute = true;
            break;
          case C._RouteLifecycle_8:
            if (!seenTopActiveRoute) {
              if (poppedRoute != null) {
                t5 = entry.route;
                t5._updateSecondaryAnimation$1(poppedRoute);
                t5.super$Route$didPopNext(poppedRoute);
                entry.lastAnnouncedPoppedNextRoute = poppedRoute;
              }
              poppedRoute = entry.route;
            }
            index0 = _this._getIndexBefore$2(index, $.$get$_RouteEntry_willBePresentPredicate());
            t5 = index0 >= 0 ? _this._history[index0] : _null;
            entry.handlePop$2$navigator$previousPresent(_this, t5 == null ? _null : t5.route);
            canRemoveOrAdd = true;
            break;
          case C._RouteLifecycle_10:
            break;
          case C._RouteLifecycle_9:
            if (!seenTopActiveRoute) {
              if (poppedRoute != null) {
                t5 = entry.route;
                t5._updateSecondaryAnimation$1(poppedRoute);
                t5.super$Route$didPopNext(poppedRoute);
              }
              poppedRoute = _null;
            }
            index0 = _this._getIndexBefore$2(index, $.$get$_RouteEntry_willBePresentPredicate());
            t5 = index0 >= 0 ? _this._history[index0] : _null;
            entry.handleRemoval$2$navigator$previousPresent(_this, t5 == null ? _null : t5.route);
            continue;
          case C._RouteLifecycle_11:
            if (!canRemoveOrAdd && next != null)
              break;
            entry.currentState = C._RouteLifecycle_12;
            continue;
          case C._RouteLifecycle_12:
            toBeDisposed.push(C.JSArray_methods.removeAt$1(_this._history, index));
            entry = next;
            break;
          case C._RouteLifecycle_13:
          case C._RouteLifecycle_0:
            break;
        }
        --index;
        previous0 = index > 0 ? _this._history[index - 1] : _null;
        next = entry;
        entry = previous;
        previous = previous0;
      }
      _this._flushRouteAnnouncement$0();
      lastEntry = C.JSArray_methods.lastWhere$2$orElse(_this._history, $.$get$_RouteEntry_isPresentPredicate(), new K.NavigatorState__flushHistoryUpdates_closure());
      t1 = lastEntry == null ? _null : lastEntry.route;
      t1 = t1 == null ? _null : t1._settings;
      routeName = t1 == null ? _null : t1.name;
      t1 = _this._lastAnnouncedRouteName;
      if (routeName != t1) {
        C.MethodChannel_gc6._invokeMethod$1$3$arguments$missingOk("routeUpdated", P.LinkedHashMap_LinkedHashMap$_literal(["previousRouteName", t1, "routeName", routeName], type$.String, type$.dynamic), false, type$.void);
        _this._lastAnnouncedRouteName = routeName;
      }
      for (t1 = toBeDisposed.length, _i = 0; _i < toBeDisposed.length; toBeDisposed.length === t1 || (0, H.throwConcurrentModificationError)(toBeDisposed), ++_i) {
        entry = toBeDisposed[_i];
        for (t2 = entry.route, t3 = t2._overlayEntries, t4 = t3.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i0)
          J.remove$0$ax(t3[_i0]);
        t3 = t2._controller;
        if (t3 != null) {
          t3._ticker.dispose$0();
          t3._ticker = null;
          t3.super$AnimationEagerListenerMixin$dispose();
        }
        t3 = t2._transitionCompleter;
        t4 = t2._result;
        t3 = t3.future;
        if (t3._state !== 0)
          H.throwExpression(P.StateError$("Future already completed"));
        t3._asyncComplete$1(t4);
        t2.super$OverlayRoute$dispose();
        entry.currentState = C._RouteLifecycle_13;
      }
      if (rearrangeOverlay) {
        t1 = _this._overlayKey.get$currentState();
        if (t1 != null)
          t1.rearrange$1(_this.get$_allRouteOverlayEntries());
      }
    },
    _flushHistoryUpdates$0: function() {
      return this._flushHistoryUpdates$1$rearrangeOverlay(true);
    },
    _flushRouteAnnouncement$0: function() {
      var entry, t1, next, t2, t3, t4, index0, _this = this, _null = null,
        index = _this._history.length - 1;
      for (; index >= 0;) {
        entry = _this._history[index];
        t1 = entry.currentState.index;
        if (!(t1 <= 11 && t1 >= 3)) {
          --index;
          continue;
        }
        t1 = $.$get$_RouteEntry_suitableForTransitionAnimationPredicate();
        next = _this._getRouteAfter$2(index + 1, t1);
        t2 = next == null;
        t3 = t2 ? _null : next.route;
        t4 = entry.lastAnnouncedNextRoute;
        if (t3 != t4) {
          if ((t2 ? _null : next.route) == null) {
            t3 = entry.lastAnnouncedPoppedNextRoute;
            t3 = t3 != null && t3 === t4;
          } else
            t3 = false;
          if (!t3) {
            t3 = entry.route;
            t4 = t2 ? _null : next.route;
            t3._updateSecondaryAnimation$1(t4);
            t3.super$Route$didChangeNext(t4);
          }
          entry.lastAnnouncedNextRoute = t2 ? _null : next.route;
        }
        --index;
        index0 = _this._getIndexBefore$2(index, t1);
        t1 = index0 >= 0 ? _this._history[index0] : _null;
        t2 = t1 == null;
        t3 = t2 ? _null : t1.route;
        if (t3 != entry.lastAnnouncedPreviousRoute) {
          t3 = entry.route;
          t4 = t2 ? _null : t1.route;
          t3.toString;
          t3.super$Route$didChangePrevious(t4);
          t3.changedInternalState$0();
          entry.lastAnnouncedPreviousRoute = t2 ? _null : t1.route;
        }
      }
    },
    _getRouteBefore$2: function(index, predicate) {
      index = this._getIndexBefore$2(index, predicate);
      return index >= 0 ? this._history[index] : null;
    },
    _getIndexBefore$2: function(index, predicate) {
      while (true) {
        if (!(index >= 0 && !predicate.call$1(this._history[index])))
          break;
        --index;
      }
      return index;
    },
    _getRouteAfter$2: function(index, predicate) {
      var t1;
      while (true) {
        t1 = this._history;
        if (!(index < t1.length && !predicate.call$1(t1[index])))
          break;
        ++index;
      }
      t1 = this._history;
      return index < t1.length ? t1[index] : null;
    },
    _routeNamed$1$3$allowNull$arguments: function($name, allowNull, $arguments, $T) {
      var settings, t1, route;
      if (allowNull)
        this._widget.toString;
      settings = new K.RouteSettings($name, $arguments);
      t1 = $T._eval$1("Route<0>");
      route = t1._as(this._widget.onGenerateRoute$1(settings));
      return route == null && !allowNull ? t1._as(this._widget.onUnknownRoute$1(settings)) : route;
    },
    _routeNamed$1$2$arguments: function($name, $arguments, $T) {
      return this._routeNamed$1$3$allowNull$arguments($name, false, $arguments, $T);
    },
    _afterNavigation$1$1: function(route, $T) {
      var t1, t2, routeJsonable, settingsJsonable;
      if (route != null) {
        t1 = type$.String;
        t2 = type$.dynamic;
        routeJsonable = P.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
        routeJsonable.$indexSet(0, "description", $T._eval$1("TransitionRoute<0>")._is(route) ? T.TransitionRoute.prototype.get$debugLabel.call(route) + "(" + H.S(route._settings.name) + ")" : route.toString$0(0));
        settingsJsonable = P.LinkedHashMap_LinkedHashMap$_literal(["name", route._settings.name], t1, t2);
        routeJsonable.$indexSet(0, "settings", settingsJsonable);
      } else
        routeJsonable = null;
      P.postEvent("Flutter.Navigation", P.LinkedHashMap_LinkedHashMap$_literal(["route", routeJsonable], type$.String, type$.dynamic));
      this._cancelActivePointers$0();
    },
    maybePop$1$1: function(result) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, disposition, t1, t2, lastEntry;
      var $async$maybePop$1$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._history;
                t2 = $.$get$_RouteEntry_isPresentPredicate();
                lastEntry = C.JSArray_methods.lastWhere$2$orElse(t1, t2, new K.NavigatorState_maybePop_closure());
                if (lastEntry == null) {
                  $async$returnValue = false;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                $async$goto = 3;
                return P._asyncAwait(lastEntry.route.willPop$0(), $async$maybePop$1$1);
              case 3:
                // returning from await.
                disposition = $async$result;
                if ($async$self._framework$_element == null) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if (lastEntry !== C.JSArray_methods.lastWhere$2$orElse($async$self._history, t2, new K.NavigatorState_maybePop_closure0())) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                switch (disposition) {
                  case C.RoutePopDisposition_2:
                    $async$returnValue = false;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.RoutePopDisposition_0:
                    $async$self.pop$1(result);
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.RoutePopDisposition_1:
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return P._asyncStartSync($async$maybePop$1$1, $async$completer);
    },
    maybePop$1: function(result) {
      return this.maybePop$1$1(result, type$.Object);
    },
    maybePop$0: function() {
      return this.maybePop$1$1(null, type$.Object);
    },
    pop$1$1: function(result) {
      var _this = this,
        entry = C.JSArray_methods.lastWhere$1(_this._history, $.$get$_RouteEntry_isPresentPredicate()),
        t1 = entry.route;
      if (t1._settings instanceof K.Page) {
        if (_this._widget.onPopPage$2(t1, result))
          entry.currentState = C._RouteLifecycle_8;
      } else
        entry.pop$1(result);
      if (entry.currentState === C._RouteLifecycle_8)
        _this._flushHistoryUpdates$1$rearrangeOverlay(false);
      _this._afterNavigation$1$1(t1, type$.dynamic);
    },
    pop$0: function() {
      return this.pop$1$1(null, type$.Object);
    },
    pop$1: function(result) {
      return this.pop$1$1(result, type$.Object);
    },
    finalizeRoute$1: function(route) {
      var entry = C.JSArray_methods.firstWhere$1(this._history, K._RouteEntry_isRoutePredicate(route));
      if (entry.doingPop) {
        entry.currentState = C._RouteLifecycle_8;
        this._flushHistoryUpdates$1$rearrangeOverlay(false);
      }
      entry.currentState = C._RouteLifecycle_12;
      this._flushHistoryUpdates$1$rearrangeOverlay(false);
    },
    set$_userGesturesInProgress: function(value) {
      this._userGesturesInProgressCount = value;
      this.userGestureInProgressNotifier.set$value(0, value > 0);
    },
    didStartUserGesture$0: function() {
      var t1, t2, routeIndex, route, previousRoute, _i, _this = this;
      _this.set$_userGesturesInProgress(_this._userGesturesInProgressCount + 1);
      if (_this._userGesturesInProgressCount === 1) {
        t1 = _this._history.length;
        t2 = $.$get$_RouteEntry_willBePresentPredicate();
        routeIndex = _this._getIndexBefore$2(t1 - 1, t2);
        route = _this._history[routeIndex].route;
        previousRoute = !route.get$willHandlePopInternally() && routeIndex > 0 ? _this._getRouteBefore$2(routeIndex - 1, t2).route : null;
        for (t1 = _this._widget.observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i]._maybeStartHeroTransition$4(route, previousRoute, C.HeroFlightDirection_1, true);
      }
    },
    didStopUserGesture$0: function() {
      var t1, t2, _i, _this = this;
      _this.set$_userGesturesInProgress(_this._userGesturesInProgressCount - 1);
      if (_this._userGesturesInProgressCount === 0)
        for (t1 = _this._widget.observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].didStopUserGesture$0();
    },
    _handlePointerDown$1: function($event) {
      this._activePointers.add$1(0, $event.pointer);
    },
    _handlePointerUpOrCancel$1: function($event) {
      this._activePointers.remove$1(0, $event.pointer);
    },
    _cancelActivePointers$0: function() {
      if ($.SchedulerBinding__instance.SchedulerBinding__schedulerPhase === C.SchedulerPhase_0) {
        var t1 = $.GlobalKey__registry.$index(0, this._overlayKey);
        this.setState$1(new K.NavigatorState__cancelActivePointers_closure(t1 == null ? null : t1.findAncestorRenderObjectOfType$1$0(type$.RenderAbsorbPointer)));
      }
      C.JSArray_methods.forEach$1(this._activePointers.toList$0(0), $.WidgetsBinding__instance.get$cancelPointer());
    },
    build$1: function(context) {
      var t3, _this = this,
        t1 = _this.get$_handlePointerUpOrCancel(),
        t2 = _this._overlayKey;
      if (t2.get$currentState() == null) {
        t3 = _this.get$_allRouteOverlayEntries();
        t3 = P.List_List$from(t3, false, t3.$ti._eval$1("Iterable.E"));
      } else
        t3 = C.List_empty3;
      return T.Listener$(C.HitTestBehavior_0, new T.AbsorbPointer(false, L.FocusScope$(true, new X.Overlay(t3, t2), null, _this.focusScopeNode), null), t1, _this.get$_handlePointerDown(), null, t1);
    }
  };
  K.NavigatorState_initState_closure.prototype = {
    call$1: function(route) {
      return new K._RouteEntry(route, C._RouteLifecycle_1);
    }
  };
  K.NavigatorState__flushHistoryUpdates_closure.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  K.NavigatorState_maybePop_closure.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  K.NavigatorState_maybePop_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  K.NavigatorState__cancelActivePointers_closure.prototype = {
    call$0: function() {
      var t1 = this.absorber;
      if (t1 != null)
        t1.set$absorbing(true);
    },
    $signature: 0
  };
  K._NavigatorState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var muted = !U.TickerMode_of(this._framework$_element),
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
          t1._collection$_current.set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  U.Notification0.prototype = {
    visitAncestor$1: function(element) {
      var widget;
      if (element instanceof N.StatelessElement) {
        widget = type$.StatelessWidget._as(N.Element.prototype.get$widget.call(element));
        if (widget instanceof U.NotificationListener)
          if (widget._notification_listener$_dispatch$2(this, element))
            return false;
      }
      return true;
    },
    dispatch$1: function(target) {
      if (target != null)
        target.visitAncestorElements$1(this.get$visitAncestor());
    },
    toString$0: function(_) {
      var description = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.debugFillDescription$1(description);
      return "Notification(" + C.JSArray_methods.join$1(description, ", ") + ")";
    },
    debugFillDescription$1: function(description) {
    }
  };
  U.NotificationListener.prototype = {
    _notification_listener$_dispatch$2: function(notification, element) {
      if (this.$ti._precomputed1._is(notification))
        return this.onNotification.call$1(notification) === true;
      return false;
    },
    build$1: function(context) {
      return this.child;
    }
  };
  U.LayoutChangedNotification.prototype = {};
  X.OverlayEntry.prototype = {
    set$opaque: function(value) {
      var t1;
      if (this._opaque === value)
        return;
      this._opaque = value;
      t1 = this._overlay;
      if (t1 != null)
        t1._didChangeEntryOpacity$0();
    },
    remove$0: function(_) {
      var t1, _this = this,
        overlay = _this._overlay;
      _this._overlay = null;
      t1 = $.SchedulerBinding__instance;
      if (t1.SchedulerBinding__schedulerPhase === C.SchedulerPhase_3)
        t1.SchedulerBinding__postFrameCallbacks.push(new X.OverlayEntry_remove_closure(_this, overlay));
      else
        overlay._overlay$_remove$1(0, _this);
    },
    markNeedsBuild$0: function() {
      var t1 = this._key.get$currentState();
      if (t1 != null)
        t1._markNeedsBuild$0();
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(opaque: " + this._opaque + "; maintainState: " + this._maintainState + ")";
    }
  };
  X.OverlayEntry_remove_closure.prototype = {
    call$1: function(duration) {
      this.overlay._overlay$_remove$1(0, this.$this);
    },
    $signature: 6
  };
  X._OverlayEntryWidget.prototype = {
    createState$0: function() {
      return new X._OverlayEntryWidgetState(C._StateLifecycle_0);
    }
  };
  X._OverlayEntryWidgetState.prototype = {
    build$1: function(context) {
      var t1 = this._widget;
      return new U.TickerMode(t1.tickerEnabled, t1.entry.builder.call$1(context), null);
    },
    _markNeedsBuild$0: function() {
      this.setState$1(new X._OverlayEntryWidgetState__markNeedsBuild_closure());
    }
  };
  X._OverlayEntryWidgetState__markNeedsBuild_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  X.Overlay.prototype = {
    createState$0: function() {
      return new X.OverlayState(H.setRuntimeTypeInfo([], type$.JSArray_OverlayEntry), null, C._StateLifecycle_0);
    }
  };
  X.OverlayState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this.insertAll$1(0, this._widget.initialEntries);
    },
    _insertionIndex$2: function(below, above) {
      return this._entries.length;
    },
    insert$1: function(_, entry) {
      entry._overlay = this;
      this.setState$1(new X.OverlayState_insert_closure(this, null, null, entry));
    },
    insertAll$1: function(_, entries) {
      var _i,
        t1 = entries.length;
      if (t1 === 0)
        return;
      for (_i = 0; _i < t1; ++_i)
        entries[_i]._overlay = this;
      this.setState$1(new X.OverlayState_insertAll_closure(this, null, null, entries));
    },
    rearrange$1: function(newEntries) {
      var t1, old, _i, entry, _this = this,
        newEntriesList = type$.List_OverlayEntry._is(newEntries) ? newEntries : P.List_List$from(newEntries, false, newEntries.$ti._eval$1("Iterable.E"));
      if (newEntriesList.length === 0)
        return;
      t1 = _this._entries;
      if (S.listEquals(t1, newEntriesList))
        return;
      old = P.LinkedHashSet_LinkedHashSet$from(t1, type$.OverlayEntry);
      for (t1 = newEntriesList.length, _i = 0; _i < t1; ++_i) {
        entry = newEntriesList[_i];
        if (entry._overlay == null)
          entry._overlay = _this;
      }
      _this.setState$1(new X.OverlayState_rearrange_closure(_this, newEntriesList, old, null, null));
    },
    _overlay$_remove$1: function(_, entry) {
      if (this._framework$_element != null)
        this.setState$1(new X.OverlayState__remove_closure(this, entry));
    },
    _didChangeEntryOpacity$0: function() {
      this.setState$1(new X.OverlayState__didChangeEntryOpacity_closure());
    },
    build$1: function(context) {
      var t1, i, onstage, onstageCount, entry,
        children = H.setRuntimeTypeInfo([], type$.JSArray_Widget);
      for (t1 = this._entries, i = t1.length - 1, onstage = true, onstageCount = 0; i >= 0; --i) {
        entry = t1[i];
        if (onstage) {
          ++onstageCount;
          children.push(new X._OverlayEntryWidget(entry, true, entry._key));
          onstage = !entry._opaque || false;
        } else if (entry._maintainState)
          children.push(new X._OverlayEntryWidget(entry, false, entry._key));
      }
      return new X._Theatre(children.length - onstageCount, new H.ReversedListIterable(children, type$.ReversedListIterable_Widget).toList$1$growable(0, false), null);
    }
  };
  X.OverlayState_insert_closure.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      C.JSArray_methods.insert$2(t1._entries, t1._insertionIndex$2(_this.below, _this.above), _this.entry);
    },
    $signature: 0
  };
  X.OverlayState_insertAll_closure.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      C.JSArray_methods.insertAll$2(t1._entries, t1._insertionIndex$2(_this.below, _this.above), _this.entries);
    },
    $signature: 0
  };
  X.OverlayState_rearrange_closure.prototype = {
    call$0: function() {
      var t3, t4, _this = this,
        t1 = _this.$this,
        t2 = t1._entries;
      C.JSArray_methods.set$length(t2, 0);
      t3 = _this.newEntriesList;
      C.JSArray_methods.addAll$1(t2, t3);
      t4 = _this.old;
      t4.removeAll$1(t3);
      C.JSArray_methods.insertAll$2(t2, t1._insertionIndex$2(_this.below, _this.above), t4);
    },
    $signature: 0
  };
  X.OverlayState__remove_closure.prototype = {
    call$0: function() {
      C.JSArray_methods.remove$1(this.$this._entries, this.entry);
    },
    $signature: 0
  };
  X.OverlayState__didChangeEntryOpacity_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  X._Theatre.prototype = {
    createElement$0: function(_) {
      var t1 = type$.Element_2,
        t2 = P.HashSet_HashSet(t1),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      return new X._TheatreElement(t2, t3, this, C._ElementLifecycle_0, P.HashSet_HashSet(t1));
    },
    createRenderObject$1: function(context) {
      var t1 = new X._RenderTheatre(T.Directionality_of(context), this.skipCount, 0, null, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var t1 = this.skipCount;
      if (renderObject._overlay$_skipCount !== t1) {
        renderObject._overlay$_skipCount = t1;
        renderObject.markNeedsLayout$0();
      }
      renderObject.set$textDirection(T.Directionality_of(context));
    }
  };
  X._TheatreElement.prototype = {
    get$widget: function() {
      return type$._Theatre._as(N.MultiChildRenderObjectElement.prototype.get$widget.call(this));
    },
    get$renderObject: function() {
      return type$._RenderTheatre._as(N.RenderObjectElement.prototype.get$renderObject.call(this));
    }
  };
  X._RenderTheatre.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof K.StackParentData))
        child.parentData = new K.StackParentData(null, null, C.Offset_0_0);
    },
    _overlay$_resolve$0: function() {
      if (this._overlay$_resolvedAlignment != null)
        return;
      this._overlay$_resolvedAlignment = C.AlignmentDirectional_m1_m1.resolve$1(this._overlay$_textDirection);
    },
    set$textDirection: function(value) {
      var _this = this;
      if (_this._overlay$_textDirection == value)
        return;
      _this._overlay$_textDirection = value;
      _this._overlay$_resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    get$_firstOnstageChild: function() {
      var child, toSkip, t1, _this = this;
      if (_this._overlay$_skipCount === K.ContainerRenderObjectMixin.prototype.get$childCount.call(_this))
        return null;
      child = K.ContainerRenderObjectMixin.prototype.get$firstChild.call(_this, _this);
      for (toSkip = _this._overlay$_skipCount, t1 = type$.StackParentData; toSkip > 0; --toSkip)
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      return child;
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      var t1, result, childParentData, candidate,
        child = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, result = null; child != null;) {
        childParentData = t1._as(child.parentData);
        candidate = child.getDistanceToActualBaseline$1(baseline);
        if (candidate != null) {
          candidate += childParentData.offset._dy;
          result = result != null ? Math.min(result, candidate) : candidate;
        }
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      return result;
    },
    get$sizedByParent: function() {
      return true;
    },
    performResize$0: function() {
      var t1 = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(this));
      this._size = new P.Size(C.JSInt_methods.clamp$2(1 / 0, t1.minWidth, t1.maxWidth), C.JSInt_methods.clamp$2(1 / 0, t1.minHeight, t1.maxHeight));
    },
    performLayout$0: function() {
      var t1, nonPositionedConstraints, child, t2, childParentData, _this = this;
      _this._hasVisualOverflow = false;
      if (_this.ContainerRenderObjectMixin__childCount - _this._overlay$_skipCount === 0)
        return;
      _this._overlay$_resolve$0();
      t1 = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this));
      nonPositionedConstraints = S.BoxConstraints$tight(new P.Size(C.JSInt_methods.clamp$2(1 / 0, t1.minWidth, t1.maxWidth), C.JSInt_methods.clamp$2(1 / 0, t1.minHeight, t1.maxHeight)));
      child = _this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, t2 = type$.Offset; child != null;) {
        childParentData = t1._as(child.parentData);
        if (!childParentData.get$isPositioned()) {
          child.layout$2$parentUsesSize(nonPositionedConstraints, true);
          childParentData.offset = _this._overlay$_resolvedAlignment.alongOffset$1(t2._as(_this._size.$sub(0, child._size)));
        } else
          _this._hasVisualOverflow = K.RenderStack_layoutPositionedChild(child, childParentData, _this._size, _this._overlay$_resolvedAlignment) || _this._hasVisualOverflow;
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
    },
    hitTestChildren$2$position: function(result, position) {
      var t2, i, childParentData, child, _this = this, _box_0 = {},
        t1 = _box_0.child = _this._overlay$_skipCount === K.ContainerRenderObjectMixin.prototype.get$childCount.call(_this) ? null : _this.ContainerRenderObjectMixin__lastChild;
      for (t2 = type$.StackParentData, i = 0; i < _this.ContainerRenderObjectMixin__childCount - _this._overlay$_skipCount; ++i, t1 = child) {
        childParentData = t2._as(t1.parentData);
        if (result.addWithPaintOffset$3$hitTest$offset$position(new X._RenderTheatre_hitTestChildren_closure(_box_0, position, childParentData), childParentData.offset, position))
          return true;
        child = childParentData.ContainerParentDataMixin_previousSibling;
        _box_0.child = child;
      }
      return false;
    },
    paintStack$2: function(context, offset) {
      var t1, t2, t3, childParentData, t4,
        child = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, t2 = offset._dx, t3 = offset._dy; child != null;) {
        childParentData = t1._as(child.parentData);
        t4 = childParentData.offset;
        context.paintChild$2(child, new P.Offset(t4._dx + t2, t4._dy + t3));
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
    },
    paint$2: function(context, offset) {
      var t1, t2, _this = this;
      if (_this._hasVisualOverflow) {
        t1 = _this._needsCompositing;
        t2 = _this._size;
        context.pushClipRect$4(t1, offset, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$paintStack());
      } else
        _this.paintStack$2(context, offset);
    },
    visitChildrenForSemantics$1: function(visitor) {
      var t1,
        child = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData; child != null;) {
        visitor.call$1(child);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    describeApproximatePaintClip$1: function(child) {
      var t1;
      if (this._hasVisualOverflow) {
        t1 = this._size;
        t1 = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      } else
        t1 = null;
      return t1;
    },
    debugDescribeChildren$0: function() {
      var t2, count, onstage, _i,
        t1 = type$.JSArray_DiagnosticsNode,
        offstageChildren = H.setRuntimeTypeInfo([], t1),
        onstageChildren = H.setRuntimeTypeInfo([], t1),
        child = this.ContainerRenderObjectMixin__firstChild,
        firstOnstageChild = this.get$_firstOnstageChild();
      for (t2 = type$.StackParentData, count = 1, onstage = false; child != null;) {
        if (child === firstOnstageChild) {
          count = 1;
          onstage = true;
        }
        if (onstage)
          onstageChildren.push(new Y.DiagnosticableTreeNode(child, "onstage " + count, true, true, null, null));
        else
          offstageChildren.push(new Y.DiagnosticableTreeNode(child, "offstage " + count, true, true, null, C.DiagnosticsTreeStyle_2));
        child = t2._as(child.parentData).ContainerParentDataMixin_nextSibling;
        ++count;
      }
      t1 = H.setRuntimeTypeInfo([], t1);
      for (t2 = onstageChildren.length, _i = 0; _i < onstageChildren.length; onstageChildren.length === t2 || (0, H.throwConcurrentModificationError)(onstageChildren), ++_i)
        t1.push(onstageChildren[_i]);
      t2 = offstageChildren.length;
      if (t2 !== 0)
        for (_i = 0; _i < offstageChildren.length; offstageChildren.length === t2 || (0, H.throwConcurrentModificationError)(offstageChildren), ++_i)
          t1.push(offstageChildren[_i]);
      else
        t1.push(Y.DiagnosticsNode_DiagnosticsNode$message("no offstage children", true, C.DiagnosticsTreeStyle_2));
      return t1;
    }
  };
  X._RenderTheatre_hitTestChildren_closure.prototype = {
    call$2: function(result, transformed) {
      return this._box_0.child.hitTest$2$position(result, transformed);
    }
  };
  X._OverlayState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var muted = !U.TickerMode_of(this._framework$_element),
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
          t1._collection$_current.set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  X.__RenderTheatre_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1: function(owner) {
      var child, t1;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.attach$1(owner);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0: function(_) {
      var child, t1;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.detach$0(0);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  L.GlowingOverscrollIndicator.prototype = {
    createState$0: function() {
      var t1 = type$.bool;
      return new L._GlowingOverscrollIndicatorState(P.LinkedHashMap_LinkedHashMap$_literal([false, true, true, true], t1, t1), null, C._StateLifecycle_0);
    },
    notificationPredicate$1: function(arg0) {
      return G.scroll_notification__defaultScrollNotificationPredicate$closure().call$1(arg0);
    }
  };
  L._GlowingOverscrollIndicatorState.prototype = {
    initState$0: function() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      t2 = t1.color;
      _this._leadingController = L._GlowController$(G.axisDirectionToAxis(t1.axisDirection), t2, _this);
      t2 = _this._widget;
      t1 = t2.color;
      t1 = L._GlowController$(G.axisDirectionToAxis(t2.axisDirection), t1, _this);
      _this._trailingController = t1;
      _this._leadingAndTrailingListener = new B._MergingListenable(H.setRuntimeTypeInfo([_this._leadingController, t1], type$.JSArray_Listenable));
    },
    didUpdateWidget$1: function(oldWidget) {
      var _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (!J.$eq$(oldWidget.color, _this._widget.color) || G.axisDirectionToAxis(oldWidget.axisDirection) != G.axisDirectionToAxis(_this._widget.axisDirection)) {
        _this._leadingController.set$color(0, _this._widget.color);
        _this._leadingController.set$axis(G.axisDirectionToAxis(_this._widget.axisDirection));
        _this._trailingController.set$color(0, _this._widget.color);
        _this._trailingController.set$axis(G.axisDirectionToAxis(_this._widget.axisDirection));
      }
    },
    _overscroll_indicator$_handleScrollNotification$1: function(notification) {
      var t1, controller, isLeading, t2, velocity, t3, renderer, size, position, _this = this;
      if (!_this._widget.notificationPredicate$1(notification))
        return false;
      if (notification instanceof G.OverscrollNotification) {
        t1 = notification.overscroll;
        if (t1 < 0)
          controller = _this._leadingController;
        else
          controller = t1 > 0 ? _this._trailingController : null;
        isLeading = controller == _this._leadingController;
        if (!J.$eq$(_this._lastNotificationType, C.Type_OverscrollNotification_Ps9)) {
          new L.OverscrollIndicatorNotification(isLeading, 0).dispatch$1(_this._framework$_element);
          _this._accepted.$indexSet(0, isLeading, true);
        }
        if (_this._accepted.$index(0, isLeading)) {
          t2 = notification.velocity;
          if (t2 !== 0) {
            t1 = controller._pullRecedeTimer;
            if (t1 != null)
              t1.cancel$0(0);
            controller._pullRecedeTimer = null;
            velocity = C.JSNumber_methods.clamp$2(Math.abs(t2), 100, 10000);
            t1 = controller._glowOpacityTween;
            if (controller._overscroll_indicator$_state === C._GlowState_0)
              t2 = 0.3;
            else {
              t2 = controller._glowOpacity;
              t3 = t2._evaluatable;
              t2 = t2.parent;
              t2 = t3.transform$1(0, t2.get$value(t2));
            }
            t1.begin = t2;
            t1.end = C.JSNumber_methods.clamp$2(velocity * 0.00006, t2, 0.5);
            t2 = controller._glowSizeTween;
            t1 = controller._glowSize;
            t3 = t1._evaluatable;
            t1 = t1.parent;
            t2.begin = t3.transform$1(0, t1.get$value(t1));
            t2.end = Math.min(0.025 + 75e-8 * velocity * velocity, 1);
            t2 = controller._glowController;
            t2.duration = P.Duration$(0, C.JSDouble_methods.round$0(0.15 + velocity * 0.02));
            t2.forward$1$from(0, 0);
            controller._displacement = 0.5;
            controller._overscroll_indicator$_state = C._GlowState_1;
          } else {
            t2 = notification.dragDetails;
            if (t2 != null) {
              renderer = type$.RenderBox._as(notification.context.get$renderObject());
              size = renderer._size;
              position = renderer.globalToLocal$1(t2.globalPosition);
              switch (G.axisDirectionToAxis(notification.metrics.axisDirection)) {
                case C.Axis_0:
                  t2 = size._dx;
                  t3 = size._dy;
                  controller.pull$4(0, Math.abs(t1), t2, J.clamp$2$n(position._dy, 0, t3), t3);
                  break;
                case C.Axis_1:
                  t2 = size._dy;
                  t3 = size._dx;
                  controller.pull$4(0, Math.abs(t1), t2, J.clamp$2$n(position._dx, 0, t3), t3);
                  break;
              }
            }
          }
        }
      } else if (notification instanceof G.ScrollEndNotification || notification instanceof G.ScrollUpdateNotification)
        if (notification.get$dragDetails() != null) {
          t1 = _this._leadingController;
          if (t1._overscroll_indicator$_state === C._GlowState_2)
            t1._recede$1(C.Duration_600000);
          t1 = _this._trailingController;
          if (t1._overscroll_indicator$_state === C._GlowState_2)
            t1._recede$1(C.Duration_600000);
        }
      _this._lastNotificationType = H.getRuntimeType(notification);
      return false;
    },
    dispose$0: function() {
      this._leadingController.dispose$0();
      this._trailingController.dispose$0();
      this.super$__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin$dispose();
    },
    build$1: function(context) {
      var _this = this, _null = null,
        t1 = _this._widget,
        t2 = _this._leadingController,
        t3 = _this._trailingController,
        t4 = t1.axisDirection,
        t5 = _this._leadingAndTrailingListener;
      return U.NotificationListener$(new T.RepaintBoundary(T.CustomPaint$(new T.RepaintBoundary(t1.child, _null), new L._GlowingOverscrollIndicatorPainter(t2, t3, t4, t5), _null, _null), _null), _this.get$_overscroll_indicator$_handleScrollNotification(), type$.ScrollNotification);
    }
  };
  L._GlowState.prototype = {
    toString$0: function(_) {
      return this._overscroll_indicator$_name;
    }
  };
  L._GlowController.prototype = {
    set$color: function(_, value) {
      if (J.$eq$(this._overscroll_indicator$_color, value))
        return;
      this._overscroll_indicator$_color = value;
      this.notifyListeners$0();
    },
    set$axis: function(value) {
      if (this._axis == value)
        return;
      this._axis = value;
      this.notifyListeners$0();
    },
    dispose$0: function() {
      var t1, _this = this;
      _this._glowController.dispose$0();
      t1 = _this._displacementTicker;
      t1._creator.TickerProviderStateMixin__tickers.remove$1(0, t1);
      t1.super$Ticker$dispose();
      t1 = _this._pullRecedeTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this.super$ChangeNotifier$dispose();
    },
    pull$4: function(_, overscroll, extent, crossAxisOffset, crossExtent) {
      var t2, t3, height, t4, _this = this,
        t1 = _this._pullRecedeTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._pullDistance = _this._pullDistance + overscroll / 200;
      t1 = _this._glowOpacityTween;
      t2 = _this._glowOpacity;
      t3 = t2._evaluatable;
      t2 = t2.parent;
      t1.begin = t3.transform$1(0, t2.get$value(t2));
      t2 = _this._glowOpacity;
      t3 = t2._evaluatable;
      t2 = t2.parent;
      t1.end = Math.min(t3.transform$1(0, t2.get$value(t2)) + overscroll / extent * 0.8, 0.5);
      height = Math.min(extent, crossExtent * 0.20096189432249995);
      t2 = _this._glowSizeTween;
      t3 = _this._glowSize;
      t1 = t3._evaluatable;
      t3 = t3.parent;
      t2.begin = t1.transform$1(0, t3.get$value(t3));
      t3 = Math.sqrt(_this._pullDistance * height);
      t1 = _this._glowSize;
      t4 = t1._evaluatable;
      t1 = t1.parent;
      t2.end = Math.max(1 - 1 / (0.7 * t3), H.checkNum(t4.transform$1(0, t1.get$value(t1))));
      t1 = crossAxisOffset / crossExtent;
      _this._displacementTarget = t1;
      if (t1 !== _this._displacement) {
        if (!_this._displacementTicker.get$isTicking())
          _this._displacementTicker.start$0(0);
      } else {
        _this._displacementTicker.stop$0(0);
        _this._displacementTickerLastElapsed = null;
      }
      t1 = _this._glowController;
      t1.duration = C.Duration_167000;
      if (_this._overscroll_indicator$_state !== C._GlowState_2) {
        t1.forward$1$from(0, 0);
        _this._overscroll_indicator$_state = C._GlowState_2;
      } else {
        t1 = t1._ticker;
        if (!(t1 != null && t1._ticker$_future != null))
          _this.notifyListeners$0();
      }
      _this._pullRecedeTimer = P.Timer_Timer(C.Duration_167000, new L._GlowController_pull_closure(_this));
    },
    _changePhase$1: function($status) {
      var _this = this;
      if ($status !== C.AnimationStatus_3)
        return;
      switch (_this._overscroll_indicator$_state) {
        case C._GlowState_1:
          _this._recede$1(C.Duration_600000);
          break;
        case C._GlowState_3:
          _this._overscroll_indicator$_state = C._GlowState_0;
          _this._pullDistance = 0;
          break;
        case C._GlowState_2:
        case C._GlowState_0:
          break;
      }
    },
    _recede$1: function(duration) {
      var t2, t3, _this = this,
        t1 = _this._overscroll_indicator$_state;
      if (t1 === C._GlowState_3 || t1 === C._GlowState_0)
        return;
      t1 = _this._pullRecedeTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._pullRecedeTimer = null;
      t1 = _this._glowOpacityTween;
      t2 = _this._glowOpacity;
      t3 = t2._evaluatable;
      t2 = t2.parent;
      t1.begin = t3.transform$1(0, t2.get$value(t2));
      t1.end = 0;
      t1 = _this._glowSizeTween;
      t2 = _this._glowSize;
      t3 = t2._evaluatable;
      t2 = t2.parent;
      t1.begin = t3.transform$1(0, t2.get$value(t2));
      t1.end = 0;
      t1 = _this._glowController;
      t1.duration = duration;
      t1.forward$1$from(0, 0);
      _this._overscroll_indicator$_state = C._GlowState_3;
    },
    _tickDisplacement$1: function(elapsed) {
      var t2, _this = this,
        t1 = _this._displacementTickerLastElapsed;
      if (t1 != null) {
        t1 = t1._duration;
        t2 = _this._displacementTarget;
        _this._displacement = t2 - (t2 - _this._displacement) * Math.pow(2, -(elapsed._duration - t1) / $.$get$_GlowController__crossAxisHalfTime()._duration);
        _this.notifyListeners$0();
      }
      if (B.nearEqual(_this._displacementTarget, _this._displacement, 0.001)) {
        _this._displacementTicker.stop$0(0);
        _this._displacementTickerLastElapsed = null;
      } else
        _this._displacementTickerLastElapsed = elapsed;
    },
    paint$2: function(canvas, size) {
      var baseGlowScale, radius, height, t3, paint, t4, t5, t6, _this = this,
        t1 = _this._glowOpacity,
        t2 = t1._evaluatable;
      t1 = t1.parent;
      if (J.$eq$(t2.transform$1(0, t1.get$value(t1)), 0))
        return;
      t1 = size._dx;
      t2 = size._dy;
      baseGlowScale = t1 > t2 ? t2 / t1 : 1;
      radius = t1 * 3 / 2;
      height = Math.min(t2, t1 * 0.20096189432249995);
      t2 = _this._glowSize;
      t3 = t2._evaluatable;
      t2 = t2.parent;
      t2 = t3.transform$1(0, t2.get$value(t2));
      t3 = _this._displacement;
      paint = new H.SurfacePaint(new H.SurfacePaintData());
      t4 = _this._overscroll_indicator$_color;
      t5 = _this._glowOpacity;
      t6 = t5._evaluatable;
      t5 = t5.parent;
      t5 = t6.transform$1(0, t5.get$value(t5));
      t4.toString;
      t4 = t4.value;
      paint.set$color(0, P.Color$fromARGB(C.JSNumber_methods.round$0(255 * t5), (16711680 & t4) >>> 16, (65280 & t4) >>> 8, (255 & t4) >>> 0));
      canvas.save$0(0);
      canvas.scale$2(0, 1, t2 * baseGlowScale);
      canvas.clipRect$1(new P.Rect(0, 0, 0 + t1, 0 + height));
      canvas.drawCircle$3(new P.Offset(t1 / 2 * (0.5 + t3), height - radius), radius, paint);
      canvas.restore$0(0);
    }
  };
  L._GlowController_pull_closure.prototype = {
    call$0: function() {
      return this.$this._recede$1(C.Duration_2000000);
    },
    $signature: 1
  };
  L._GlowingOverscrollIndicatorPainter.prototype = {
    _paintSide$5: function(canvas, size, controller, axisDirection, growthDirection) {
      var t1;
      if (controller == null)
        return;
      switch (G.applyGrowthDirectionToAxisDirection(axisDirection, growthDirection)) {
        case C.AxisDirection_0:
          controller.paint$2(canvas, size);
          break;
        case C.AxisDirection_2:
          canvas.save$0(0);
          canvas.translate$2(0, 0, size._dy);
          canvas.scale$2(0, 1, -1);
          controller.paint$2(canvas, size);
          canvas.restore$0(0);
          break;
        case C.AxisDirection_3:
          canvas.save$0(0);
          canvas.rotate$1(0, 1.5707963267948966);
          canvas.scale$2(0, 1, -1);
          controller.paint$2(canvas, new P.Size(size._dy, size._dx));
          canvas.restore$0(0);
          break;
        case C.AxisDirection_1:
          canvas.save$0(0);
          t1 = size._dx;
          canvas.translate$2(0, t1, 0);
          canvas.rotate$1(0, 1.5707963267948966);
          controller.paint$2(canvas, new P.Size(size._dy, t1));
          canvas.restore$0(0);
          break;
      }
    },
    paint$2: function(canvas, size) {
      var _this = this,
        t1 = _this.axisDirection;
      _this._paintSide$5(canvas, size, _this.leadingController, t1, C.GrowthDirection_1);
      _this._paintSide$5(canvas, size, _this.trailingController, t1, C.GrowthDirection_0);
    },
    shouldRepaint$1: function(oldDelegate) {
      return oldDelegate.leadingController != this.leadingController || oldDelegate.trailingController != this.trailingController;
    }
  };
  L.OverscrollIndicatorNotification.prototype = {
    debugFillDescription$1: function(description) {
      this.super$_OverscrollIndicatorNotification_Notification_ViewportNotificationMixin$debugFillDescription(description);
      description.push("side: " + (this.leading ? "leading edge" : "trailing edge"));
    }
  };
  L._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin.prototype = {
    visitAncestor$1: function(element) {
      if (element instanceof N.RenderObjectElement && type$.RenderAbstractViewport._is(element.get$renderObject()))
        ++this.ViewportNotificationMixin__depth;
      return this.super$Notification$visitAncestor(element);
    },
    debugFillDescription$1: function(description) {
      var t1;
      this.super$Notification$debugFillDescription(description);
      t1 = "depth: " + this.ViewportNotificationMixin__depth + " (";
      description.push(t1 + (this.ViewportNotificationMixin__depth === 0 ? "local" : "remote") + ")");
    }
  };
  L.__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var muted = !U.TickerMode_of(this._framework$_element),
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
          t1._collection$_current.set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  S.PageStorageKey.prototype = {};
  S._StorageEntryIdentifier.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return other instanceof S._StorageEntryIdentifier && S.listEquals(other.keys, this.keys);
    },
    get$hashCode: function(_) {
      return P.hashList(this.keys);
    },
    toString$0: function(_) {
      var t1 = C.JSArray_methods.join$1(this.keys, ":");
      return "StorageEntryIdentifier(" + t1 + ")";
    }
  };
  S.PageStorageBucket.prototype = {
    _allKeys$1: function(context) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_PageStorageKey_dynamic);
      if (S.PageStorageBucket__maybeAddKey(context, keys))
        context.visitAncestorElements$1(new S.PageStorageBucket__allKeys_closure(keys));
      return keys;
    },
    writeState$2: function(context, data) {
      var t1, _this = this;
      if (_this._storage == null)
        _this._storage = P.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.dynamic);
      t1 = _this._allKeys$1(context);
      if (t1.length !== 0)
        _this._storage.$indexSet(0, new S._StorageEntryIdentifier(t1), data);
    },
    readState$1: function(context) {
      var t1;
      if (this._storage == null)
        return null;
      t1 = this._allKeys$1(context);
      return t1.length !== 0 ? this._storage.$index(0, new S._StorageEntryIdentifier(t1)) : null;
    }
  };
  S.PageStorageBucket__allKeys_closure.prototype = {
    call$1: function(element) {
      return S.PageStorageBucket__maybeAddKey(element, this.keys);
    }
  };
  S.PageStorage.prototype = {
    build$1: function(context) {
      return this.child;
    }
  };
  D.PageController.prototype = {
    animateToPage$3$curve$duration: function(page, curve, duration) {
      var position = type$._PagePosition._as(C.JSArray_methods.get$single(this._positions));
      page.toString;
      return position.animateTo$3$curve$duration(position.getPixelsFromPage$1(page), curve, duration);
    },
    createScrollPosition$3: function(physics, context, oldPosition) {
      var _null = null,
        t1 = type$.JSArray_of_void_Function,
        t2 = type$.ObserverList_of_void_Function;
      t2 = new D._PagePosition(this.initialPage, 1, C.ScrollDirection_0, physics, context, true, _null, new B.ValueNotifier(false, new R.ObserverList(H.setRuntimeTypeInfo([], t1), t2)), new R.ObserverList(H.setRuntimeTypeInfo([], t1), t2));
      t2.ScrollPosition$5$context$debugLabel$keepScrollOffset$oldPosition$physics(context, _null, true, oldPosition, physics);
      t2.ScrollPositionWithSingleContext$6$context$debugLabel$initialPixels$keepScrollOffset$oldPosition$physics(context, _null, _null, true, oldPosition, physics);
      return t2;
    },
    attach$1: function(position) {
      this.super$ScrollController$attach(position);
      type$._PagePosition._as(position).set$viewportFraction(1);
    }
  };
  D.PageMetrics.prototype = {};
  D._PagePosition.prototype = {
    set$viewportFraction: function(value) {
      var oldPage, _this = this;
      if (_this._viewportFraction === value)
        return;
      oldPage = _this.get$page(_this);
      _this._viewportFraction = value;
      if (oldPage != null) {
        _this._pixels = _this.getPixelsFromPage$1(oldPage);
        _this._updateSemanticActions$0();
        _this.super$ChangeNotifier$notifyListeners();
      }
    },
    get$_initialPageOffset: function() {
      return Math.max(0, this._viewportDimension * (this._viewportFraction - 1) / 2);
    },
    getPageFromPixels$2: function(pixels, viewportDimension) {
      var actual = Math.max(0, pixels - this.get$_initialPageOffset()) / Math.max(1, viewportDimension * this._viewportFraction),
        round = C.JSDouble_methods.roundToDouble$0(actual);
      if (Math.abs(actual - round) < 1e-10)
        return round;
      return actual;
    },
    getPixelsFromPage$1: function(page) {
      return page * this._viewportDimension * this._viewportFraction + this.get$_initialPageOffset();
    },
    get$page: function(_) {
      var _this = this,
        t1 = _this._pixels;
      return t1 == null ? null : _this.getPageFromPixels$2(C.JSNumber_methods.clamp$2(t1, _this._minScrollExtent, _this._maxScrollExtent), _this._viewportDimension);
    },
    saveScrollOffset$0: function() {
      var _this = this,
        t1 = _this.context,
        t2 = S.PageStorage_of(t1._framework$_element);
      if (t2 != null)
        t2.writeState$2(t1._framework$_element, _this.getPageFromPixels$2(_this._pixels, _this._viewportDimension));
    },
    restoreScrollOffset$0: function() {
      var t1, t2, value;
      if (this._pixels == null) {
        t1 = this.context;
        t2 = S.PageStorage_of(t1._framework$_element);
        value = t2 == null ? null : t2.readState$1(t1._framework$_element);
        if (value != null)
          this._pageToUseOnStartup = value;
      }
    },
    applyViewportDimension$1: function(viewportDimension) {
      var oldPixels, newPixels, _this = this,
        oldViewportDimensions = _this._viewportDimension;
      _this.super$ScrollPosition$applyViewportDimension(viewportDimension);
      oldPixels = _this._pixels;
      newPixels = _this.getPixelsFromPage$1(oldPixels == null || oldViewportDimensions === 0 ? _this._pageToUseOnStartup : _this.getPageFromPixels$2(oldPixels, oldViewportDimensions));
      if (newPixels !== oldPixels) {
        _this._pixels = newPixels;
        return false;
      }
      return true;
    },
    applyContentDimensions$2: function(minScrollExtent, maxScrollExtent) {
      var newMinScrollExtent = minScrollExtent + this.get$_initialPageOffset();
      this.super$ScrollPosition$applyContentDimensions(newMinScrollExtent, Math.max(newMinScrollExtent, maxScrollExtent - this.get$_initialPageOffset()));
      return true;
    },
    copyWith$0: function() {
      var t6, _this = this,
        t1 = _this._minScrollExtent,
        t2 = _this._maxScrollExtent,
        t3 = _this._pixels,
        t4 = _this._viewportDimension,
        t5 = _this.context._widget;
      t5 = t5.axisDirection;
      t6 = _this._viewportFraction;
      return new D.PageMetrics(t6, t1, t2, t3, t4, t5);
    }
  };
  D._ForceImplicitScrollPhysics.prototype = {
    applyTo$1: function(ancestor) {
      return new D._ForceImplicitScrollPhysics(false, this.buildParent$1(ancestor));
    },
    get$allowImplicitScrolling: function() {
      return this.allowImplicitScrolling;
    }
  };
  D.PageScrollPhysics.prototype = {
    applyTo$1: function(ancestor) {
      return new D.PageScrollPhysics(this.buildParent$1(ancestor));
    },
    _getPage$1: function(position) {
      if (position instanceof D._PagePosition)
        return position.get$page(position);
      return position._pixels / position._viewportDimension;
    },
    _getPixels$2: function(position, page) {
      if (position instanceof D._PagePosition)
        return position.getPixelsFromPage$1(page);
      return page * position._viewportDimension;
    },
    createBallisticSimulation$2: function(position, velocity) {
      var t1, tolerance, page, target, _this = this;
      if (!(velocity <= 0 && position._pixels <= position._minScrollExtent))
        t1 = velocity >= 0 && position._pixels >= position._maxScrollExtent;
      else
        t1 = true;
      if (t1)
        return _this.super$ScrollPhysics$createBallisticSimulation(position, velocity);
      tolerance = _this.get$tolerance();
      page = _this._getPage$1(position);
      t1 = tolerance.velocity;
      if (velocity < -t1)
        page -= 0.5;
      else if (velocity > t1)
        page += 0.5;
      target = _this._getPixels$2(position, J.roundToDouble$0$n(page));
      if (target !== position._pixels)
        return new M.ScrollSpringSimulation(target, M._SpringSolution__SpringSolution(_this.get$spring(), position._pixels - target, velocity), tolerance);
      return null;
    }
  };
  D.PageView.prototype = {
    createState$0: function() {
      return new D._PageViewState(C._StateLifecycle_0);
    }
  };
  D._PageViewState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this._lastReportedPage = this._widget.controller.initialPage;
    },
    _getDirection$1: function(context) {
      var axisDirection;
      this._widget.toString;
      switch (C.Axis_0) {
        case C.Axis_0:
          axisDirection = G.textDirectionToAxisDirection(T.Directionality_of(context));
          this._widget.toString;
          return axisDirection;
        case C.Axis_1:
          return C.AxisDirection_2;
      }
      return null;
    },
    build$1: function(context) {
      var t2, t3, _this = this,
        axisDirection = _this._getDirection$1(context),
        t1 = C.PageScrollPhysics_null.buildParent$1(_this._widget.physics);
      t1 = new D._ForceImplicitScrollPhysics(false, null).buildParent$1(new D.PageScrollPhysics(t1));
      t2 = _this._widget;
      t3 = t2.dragStartBehavior;
      return U.NotificationListener$(F.Scrollable$(axisDirection, t2.controller, t3, new D._ForceImplicitScrollPhysics(false, t1), null, new D._PageViewState_build_closure(_this, axisDirection)), new D._PageViewState_build_closure0(_this), type$.ScrollNotification);
    }
  };
  D._PageViewState_build_closure0.prototype = {
    call$1: function(notification) {
      if (notification.ViewportNotificationMixin__depth === 0)
        this.$this._widget.toString;
      return false;
    }
  };
  D._PageViewState_build_closure.prototype = {
    call$2: function(context, position) {
      var t1 = this.$this._widget;
      t1.controller.toString;
      return Q.Viewport$(0, this.axisDirection, 0, C.CacheExtentStyle_1, null, position, H.setRuntimeTypeInfo([new A.SliverFillViewport(1, t1.childrenDelegate, null)], type$.JSArray_Widget));
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  V.PageRoute.prototype = {};
  L.PerformanceOverlay.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new L.RenderPerformanceOverlay(this.optionsMask, 0, false, false);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = true;
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$optionsMask(this.optionsMask);
      renderObject.set$rasterizerThreshold(0);
    }
  };
  E.PrimaryScrollController.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return this.controller != oldWidget.controller;
    }
  };
  T.OverlayRoute.prototype = {
    install$0: function() {
      C.JSArray_methods.addAll$1(this._overlayEntries, this.createOverlayEntries$0());
      this.super$Route$install();
    },
    didPop$1: function(result) {
      var _this = this;
      _this.super$Route$didPop(result);
      if (_this._controller._animation_controller$_status === C.AnimationStatus_0)
        _this._navigator$_navigator.finalizeRoute$1(_this);
      return true;
    },
    dispose$0: function() {
      C.JSArray_methods.set$length(this._overlayEntries, 0);
      this.super$Route$dispose();
    }
  };
  T.TransitionRoute.prototype = {
    get$animation: function(_) {
      return this._animation;
    },
    get$secondaryAnimation: function() {
      return this._secondaryAnimation;
    },
    _handleStatusChanged$1: function($status) {
      var t1, _this = this;
      switch ($status) {
        case C.AnimationStatus_3:
          t1 = _this._overlayEntries;
          if (t1.length !== 0)
            C.JSArray_methods.get$first(t1).set$opaque(true);
          break;
        case C.AnimationStatus_1:
        case C.AnimationStatus_2:
          t1 = _this._overlayEntries;
          if (t1.length !== 0)
            C.JSArray_methods.get$first(t1).set$opaque(false);
          break;
        case C.AnimationStatus_0:
          if (!_this.get$isActive())
            _this._navigator$_navigator.finalizeRoute$1(_this);
          break;
      }
      _this.changedInternalState$0();
    },
    install$0: function() {
      var _this = this;
      _this._animation = _this._controller = G.AnimationController$(T.TransitionRoute.prototype.get$debugLabel.call(_this) + "(" + H.S(_this._settings.name) + ")", C.Duration_300000, 0, C.Duration_300000, 1, null, _this._navigator$_navigator);
      _this.super$OverlayRoute$install();
    },
    didPush$0: function() {
      this._didPushOrReplace$0();
      this.super$Route$didPush();
      return this._controller.forward$0(0);
    },
    didAdd$0: function() {
      this._didPushOrReplace$0();
      this.super$Route$didAdd();
      var t1 = this._controller;
      t1.set$value(0, t1.upperBound);
    },
    _didPushOrReplace$0: function() {
      var t1, _this = this;
      _this._animation.addStatusListener$1(_this.get$_handleStatusChanged());
      t1 = _this._animation;
      if (t1.get$status(t1) === C.AnimationStatus_3 && _this._overlayEntries.length !== 0)
        C.JSArray_methods.get$first(_this._overlayEntries).set$opaque(true);
    },
    didPop$1: function(result) {
      this._result = result;
      this._controller.reverse$0(0);
      this.super$OverlayRoute$didPop(result);
      return true;
    },
    _updateSecondaryAnimation$1: function(nextRoute) {
      var t2, current, currentTrain, nextTrain, t3, newAnimation, _this = this, t1 = {},
        previousTrainHoppingListenerRemover = _this._trainHoppingListenerRemover;
      _this._trainHoppingListenerRemover = null;
      if (nextRoute instanceof T.TransitionRoute)
        t2 = true;
      else
        t2 = false;
      if (t2) {
        current = _this._secondaryAnimation._animations$_parent;
        if (current != null) {
          currentTrain = current instanceof S.TrainHoppingAnimation ? current._currentTrain : current;
          nextTrain = nextRoute._animation;
          if (!J.$eq$(currentTrain.get$value(currentTrain), nextTrain._animation_controller$_value)) {
            t2 = nextTrain._animation_controller$_status;
            t2 = t2 === C.AnimationStatus_3 || t2 === C.AnimationStatus_0;
          } else
            t2 = true;
          t3 = nextRoute._transitionCompleter.future;
          if (t2)
            _this._setSecondaryAnimation$2(nextTrain, t3);
          else {
            t1.newAnimation = null;
            t2 = new T.TransitionRoute__updateSecondaryAnimation__jumpOnAnimationEnd(_this, nextTrain, nextRoute);
            _this._trainHoppingListenerRemover = new T.TransitionRoute__updateSecondaryAnimation_closure(t1, nextTrain, t2);
            nextTrain.addStatusListener$1(t2);
            newAnimation = S.TrainHoppingAnimation$(currentTrain, nextTrain, new T.TransitionRoute__updateSecondaryAnimation_closure0(t1, _this, nextRoute));
            t1.newAnimation = newAnimation;
            _this._setSecondaryAnimation$2(newAnimation, t3);
          }
        } else
          _this._setSecondaryAnimation$2(nextRoute._animation, nextRoute._transitionCompleter.future);
      } else
        _this._setSecondaryAnimation$1(C.C__AlwaysDismissedAnimation);
      if (previousTrainHoppingListenerRemover != null)
        previousTrainHoppingListenerRemover.call$0();
    },
    _setSecondaryAnimation$2: function(animation, disposed) {
      this._secondaryAnimation.set$parent(0, animation);
      if (disposed != null)
        disposed.then$1$1(new T.TransitionRoute__setSecondaryAnimation_closure(this, animation), type$.Null);
    },
    _setSecondaryAnimation$1: function(animation) {
      return this._setSecondaryAnimation$2(animation, null);
    },
    get$debugLabel: function() {
      return "TransitionRoute";
    },
    toString$0: function(_) {
      return "TransitionRoute(animation: " + H.S(this._controller) + ")";
    }
  };
  T.TransitionRoute__updateSecondaryAnimation__jumpOnAnimationEnd.prototype = {
    call$1: function($status) {
      var t1, t2;
      switch ($status) {
        case C.AnimationStatus_3:
        case C.AnimationStatus_0:
          t1 = this.$this;
          t1._setSecondaryAnimation$2(this.nextTrain, this.nextRoute._transitionCompleter.future);
          t2 = t1._trainHoppingListenerRemover;
          if (t2 != null) {
            t2.call$0();
            t1._trainHoppingListenerRemover = null;
          }
          break;
        case C.AnimationStatus_1:
        case C.AnimationStatus_2:
          break;
      }
    },
    $signature: 4
  };
  T.TransitionRoute__updateSecondaryAnimation_closure.prototype = {
    call$0: function() {
      this.nextTrain.removeStatusListener$1(this._jumpOnAnimationEnd);
      var t1 = this._box_0.newAnimation;
      if (t1 != null)
        t1.dispose$0();
    },
    $signature: 0
  };
  T.TransitionRoute__updateSecondaryAnimation_closure0.prototype = {
    call$0: function() {
      var t2,
        t1 = this.$this;
      t1._setSecondaryAnimation$2(this._box_0.newAnimation._currentTrain, this.nextRoute._transitionCompleter.future);
      t2 = t1._trainHoppingListenerRemover;
      if (t2 != null) {
        t2.call$0();
        t1._trainHoppingListenerRemover = null;
      }
    },
    $signature: 0
  };
  T.TransitionRoute__setSecondaryAnimation_closure.prototype = {
    call$1: function(_) {
      var t1 = this.$this._secondaryAnimation,
        t2 = this.animation;
      if (t1._animations$_parent == t2) {
        t1.set$parent(0, C.C__AlwaysDismissedAnimation);
        if (t2 instanceof S.TrainHoppingAnimation)
          t2.dispose$0();
      }
    },
    $signature: 3
  };
  T.LocalHistoryRoute.prototype = {
    get$willHandlePopInternally: function() {
      var t1 = this.LocalHistoryRoute__localHistory;
      return t1 != null && t1.length !== 0;
    }
  };
  T._ModalScopeStatus.prototype = {
    updateShouldNotify$1: function(old) {
      return this.isCurrent !== old.isCurrent || this.canPop !== old.canPop || this.route !== old.route;
    }
  };
  T._ModalScope.prototype = {
    createState$0: function() {
      return new T._ModalScopeState(O.FocusScopeNode$(true, C.Type__ModalScopeState_Yap.toString$0(0) + " Focus Scope", false), C._StateLifecycle_0, this.$ti._eval$1("_ModalScopeState<1>"));
    }
  };
  T._ModalScopeState.prototype = {
    initState$0: function() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_Listenable);
      t2 = _this._widget.route._animationProxy;
      if (t2 != null)
        t1.push(t2);
      t2 = _this._widget.route._secondaryAnimationProxy;
      if (t2 != null)
        t1.push(t2);
      _this._listenable = new B._MergingListenable(t1);
      if (_this._widget.route.get$isCurrent())
        _this._widget.route._navigator$_navigator.focusScopeNode.setFirstFocus$1(_this.focusScopeNode);
    },
    didUpdateWidget$1: function(oldWidget) {
      var _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this._widget.route.get$isCurrent())
        _this._widget.route._navigator$_navigator.focusScopeNode.setFirstFocus$1(_this.focusScopeNode);
    },
    didChangeDependencies$0: function() {
      this.super$State$didChangeDependencies();
      this._page = null;
    },
    _forceRebuildPage$0: function() {
      this.setState$1(new T._ModalScopeState__forceRebuildPage_closure(this));
    },
    dispose$0: function() {
      this.focusScopeNode.dispose$0();
      this.super$State$dispose();
    },
    get$_shouldIgnoreFocusRequest: function() {
      var t1 = this._widget.route._animationProxy;
      if ((t1 == null ? null : t1.get$status(t1)) !== C.AnimationStatus_2) {
        t1 = this._widget.route._navigator$_navigator;
        t1 = t1 == null ? null : t1.userGestureInProgressNotifier._change_notifier$_value;
        t1 = t1 === true;
      } else
        t1 = true;
      return t1;
    },
    build$1: function(context) {
      var t4, t5, t6, t7, _this = this, _null = null,
        t1 = _this._widget.route,
        t2 = t1.get$isCurrent(),
        t3 = _this._widget.route;
      t3 = !t3.get$isFirst() || t3.get$willHandlePopInternally();
      t4 = _this._widget.route;
      t5 = t4._offstage;
      t6 = _this._listenable;
      t7 = _this._page;
      if (t7 == null)
        t7 = _this._page = new T.RepaintBoundary(new T.Builder(new T._ModalScopeState_build_closure(_this), _null), t4._subtreeKey);
      return new T._ModalScopeStatus(t2, t3, t1, new T.Offstage(t5, new S.PageStorage(L.FocusScope$(false, new T.RepaintBoundary(K.AnimatedBuilder$(t6, new T._ModalScopeState_build_closure0(_this), t7), _null), _null, _this.focusScopeNode), t4._storageBucket, _null), _null), _null);
    }
  };
  T._ModalScopeState__forceRebuildPage_closure.prototype = {
    call$0: function() {
      this.$this._page = null;
    },
    $signature: 0
  };
  T._ModalScopeState_build_closure0.prototype = {
    call$2: function(context, child) {
      var theme, platform, matchingBuilder,
        t1 = this.$this,
        t2 = t1._widget.route,
        t3 = t2._animationProxy,
        t4 = t2._secondaryAnimationProxy,
        t5 = t2._navigator$_navigator;
      t5 = t5 == null ? null : t5.userGestureInProgressNotifier;
      if (t5 == null)
        t5 = new B.ValueNotifier(false, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      t1 = K.AnimatedBuilder$(t5, new T._ModalScopeState_build__closure(t1), child);
      theme = K.Theme_of(context).pageTransitionsTheme;
      platform = K.Theme_of(context).platform;
      if (t2._navigator$_navigator.userGestureInProgressNotifier._change_notifier$_value)
        platform = C.TargetPlatform_2;
      matchingBuilder = theme.get$builders().$index(0, platform);
      if (matchingBuilder == null)
        matchingBuilder = C.C_FadeUpwardsPageTransitionsBuilder;
      return matchingBuilder.buildTransitions$1$5(t2, context, t3, t4, t1, t2.$ti._precomputed1);
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  T._ModalScopeState_build__closure.prototype = {
    call$2: function(context, child) {
      var t1 = this.$this,
        ignoreEvents = t1.get$_shouldIgnoreFocusRequest();
      t1.focusScopeNode.set$canRequestFocus(!ignoreEvents);
      return new T.IgnorePointer(ignoreEvents, null, child, null);
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  T._ModalScopeState_build_closure.prototype = {
    call$1: function(context) {
      var _null = null;
      return T.Semantics$(_null, this.$this._widget.route.builder.call$1(context), false, _null, true, _null, _null, _null, _null, _null, _null, true, _null, _null);
    }
  };
  T.ModalRoute.prototype = {
    setState$1: function(fn) {
      var t1 = this._scopeKey;
      if (t1.get$currentState() != null) {
        t1 = t1.get$currentState();
        if (t1._widget.route.get$isCurrent() && !t1.get$_shouldIgnoreFocusRequest())
          t1._widget.route._navigator$_navigator.focusScopeNode.setFirstFocus$1(t1.focusScopeNode);
        t1.setState$1(fn);
      } else
        fn.call$0();
    },
    install$0: function() {
      var _this = this;
      _this.super$TransitionRoute$install();
      _this._animationProxy = S.ProxyAnimation$(T.TransitionRoute.prototype.get$animation.call(_this, _this));
      _this._secondaryAnimationProxy = S.ProxyAnimation$(T.TransitionRoute.prototype.get$secondaryAnimation.call(_this));
    },
    set$offstage: function(value) {
      var t1, _this = this;
      if (_this._offstage === value)
        return;
      _this.setState$1(new T.ModalRoute_offstage_closure(_this, value));
      t1 = _this._animationProxy;
      t1.set$parent(0, _this._offstage ? C.C__AlwaysCompleteAnimation : T.TransitionRoute.prototype.get$animation.call(_this, _this));
      t1 = _this._secondaryAnimationProxy;
      t1.set$parent(0, _this._offstage ? C.C__AlwaysDismissedAnimation : T.TransitionRoute.prototype.get$secondaryAnimation.call(_this));
    },
    willPop$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this, t1, t2, _i, $async$temp1;
      var $async$willPop$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._scopeKey.get$currentState();
              t1 = P.List_List$from($async$self._willPopCallbacks, true, type$.Future_bool_Function), t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t1.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$temp1 = J;
              $async$goto = 6;
              return P._asyncAwait(t1[_i].call$0(), $async$willPop$0);
            case 6:
              // returning from await.
              if (!$async$temp1.$eq$($async$result, true)) {
                $async$returnValue = C.RoutePopDisposition_1;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$goto = 7;
              return P._asyncAwait($async$self.super$_ModalRoute_TransitionRoute_LocalHistoryRoute$willPop(), $async$willPop$0);
            case 7:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$willPop$0, $async$completer);
    },
    changedInternalState$0: function() {
      this.super$Route$changedInternalState();
      this.setState$1(new T.ModalRoute_changedInternalState_closure());
      this._modalBarrier.markNeedsBuild$0();
    },
    _buildModalBarrier$1: function(context) {
      var _null = null,
        barrier = X.ModalBarrier$(true, _null, false, _null),
        t1 = this._animationProxy;
      if (t1.get$status(t1) !== C.AnimationStatus_2) {
        t1 = this._animationProxy;
        t1 = t1.get$status(t1) === C.AnimationStatus_0;
      } else
        t1 = true;
      return new T.IgnorePointer(t1, _null, barrier, _null);
    },
    _buildModalScope$1: function(context) {
      var _this = this,
        t1 = _this._modalScopeCache;
      return t1 == null ? _this._modalScopeCache = new T._ModalScope(_this, _this._scopeKey, _this.$ti._eval$1("_ModalScope<1>")) : t1;
    },
    createOverlayEntries$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$createOverlayEntries$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = X.OverlayEntry$($async$self.get$_buildModalBarrier(), false);
                $async$self._modalBarrier = t1;
                $async$goto = 2;
                return t1;
              case 2:
                // after yield
                $async$goto = 3;
                return X.OverlayEntry$($async$self.get$_buildModalScope(), true);
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.OverlayEntry);
    },
    toString$0: function(_) {
      return "ModalRoute(" + this._settings.toString$0(0) + ", animation: " + H.S(this._animation) + ")";
    }
  };
  T.ModalRoute_offstage_closure.prototype = {
    call$0: function() {
      this.$this._offstage = this.value;
    },
    $signature: 0
  };
  T.ModalRoute_changedInternalState_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  T._ModalRoute_TransitionRoute_LocalHistoryRoute.prototype = {
    willPop$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this;
      var $async$willPop$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self.get$willHandlePopInternally()) {
                $async$returnValue = C.RoutePopDisposition_0;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self.super$Route$willPop();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$willPop$0, $async$completer);
    },
    didPop$1: function(result) {
      var entry, _this = this,
        t1 = _this.LocalHistoryRoute__localHistory;
      if (t1 != null && t1.length !== 0) {
        entry = t1.pop();
        entry._routes$_owner = null;
        entry.onRemove.call$0();
        if (_this.LocalHistoryRoute__localHistory.length === 0)
          _this.changedInternalState$0();
        return false;
      }
      _this.super$TransitionRoute$didPop(result);
      return true;
    }
  };
  Q.SafeArea.prototype = {
    build$1: function(context) {
      var t2, t3, t4, t5, t6,
        padding = F.MediaQuery_of(context, false).padding,
        t1 = padding.bottom;
      t1 === 0;
      t2 = Math.max(H.checkNum(padding.left), 0);
      t3 = this.top;
      t4 = Math.max(H.checkNum(t3 ? padding.top : 0), 0);
      t5 = Math.max(H.checkNum(padding.right), 0);
      t6 = this.bottom;
      return new T.Padding(new V.EdgeInsets(t2, t4, t5, Math.max(H.checkNum(t6 ? t1 : 0), 0)), new F.MediaQuery(F.MediaQuery_of(context, false).removePadding$4$removeBottom$removeLeft$removeRight$removeTop(t6, true, true, t3), this.child, null), null);
    }
  };
  M.ScrollActivity.prototype = {
    resetActivity$0: function() {
    },
    dispatchScrollStartNotification$2: function(metrics, context) {
      new G.ScrollStartNotification(null, metrics, context, 0).dispatch$1(context);
    },
    dispatchScrollUpdateNotification$3: function(metrics, context, scrollDelta) {
      new G.ScrollUpdateNotification(null, scrollDelta, metrics, context, 0).dispatch$1(context);
    },
    dispatchOverscrollNotification$3: function(metrics, context, overscroll) {
      G.OverscrollNotification$(context, null, metrics, overscroll, 0).dispatch$1(context);
    },
    dispatchScrollEndNotification$2: function(metrics, context) {
      new G.ScrollEndNotification(null, metrics, context, 0).dispatch$1(context);
    },
    applyNewDimensions$0: function() {
    },
    dispose$0: function() {
      this._delegate = null;
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this);
    }
  };
  M.IdleScrollActivity.prototype = {
    applyNewDimensions$0: function() {
      this._delegate.goBallistic$1(0);
    },
    get$shouldIgnorePointer: function() {
      return false;
    },
    get$isScrolling: function() {
      return false;
    },
    get$velocity: function() {
      return 0;
    }
  };
  M.HoldScrollActivity.prototype = {
    get$shouldIgnorePointer: function() {
      return false;
    },
    get$isScrolling: function() {
      return false;
    },
    get$velocity: function() {
      return 0;
    },
    dispose$0: function() {
      this.onHoldCanceled.call$0();
      this.super$ScrollActivity$dispose();
    }
  };
  M.ScrollDragController.prototype = {
    _adjustForScrollStartThreshold$2: function(offset, timestamp) {
      var t1, t2, _this = this;
      if (timestamp == null)
        return offset;
      if (offset === 0) {
        if (_this.motionStartDistanceThreshold != null)
          if (_this._offsetSinceLastStop == null) {
            t1 = _this._lastNonStationaryTimestamp;
            t1 = timestamp._duration - t1._duration > 50000;
          } else
            t1 = false;
        else
          t1 = false;
        if (t1)
          _this._offsetSinceLastStop = 0;
        return 0;
      } else {
        t1 = _this._offsetSinceLastStop;
        if (t1 == null)
          return offset;
        else {
          t1 += offset;
          _this._offsetSinceLastStop = t1;
          t2 = _this.motionStartDistanceThreshold;
          if (Math.abs(t1) > t2) {
            _this._offsetSinceLastStop = null;
            t1 = Math.abs(offset);
            if (t1 > 24)
              return offset;
            else
              return Math.min(t2 / 3, t1) * J.get$sign$in(offset);
          } else
            return 0;
        }
      }
    },
    update$1: function(_, details) {
      var offset, t1, t2, _this = this;
      _this._lastDetails = details;
      offset = details.primaryDelta;
      t1 = offset === 0;
      if (!t1)
        _this._lastNonStationaryTimestamp = details.sourceTimeStamp;
      t2 = details.sourceTimeStamp;
      if (_this._retainMomentum)
        if (t1)
          if (t2 != null) {
            t1 = _this._lastNonStationaryTimestamp;
            t1 = t2._duration - t1._duration > 20000;
          } else
            t1 = true;
        else
          t1 = false;
      else
        t1 = false;
      if (t1)
        _this._retainMomentum = false;
      offset = _this._adjustForScrollStartThreshold$2(offset, t2);
      if (offset === 0)
        return;
      t1 = _this._delegate;
      if (G.axisDirectionIsReversed(t1.context._widget.axisDirection))
        offset = -offset;
      t1.updateUserScrollDirection$1(offset > 0 ? C.ScrollDirection_1 : C.ScrollDirection_2);
      t1.super$ScrollPosition$setPixels(t1._pixels - t1.physics.applyPhysicsToUserOffset$2(t1, offset));
    },
    end$1: function(_, details) {
      var _this = this,
        velocity = -details.primaryVelocity;
      if (G.axisDirectionIsReversed(_this._delegate.context._widget.axisDirection))
        velocity = -velocity;
      _this._lastDetails = details;
      if (_this._retainMomentum && J.get$sign$in(velocity) === J.get$sign$in(_this.carriedVelocity))
        velocity += _this.carriedVelocity;
      _this._delegate.goBallistic$1(velocity);
    },
    dispose$0: function() {
      this._lastDetails = null;
      this.onDragCanceled.call$0();
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this);
    }
  };
  M.DragScrollActivity.prototype = {
    dispatchScrollStartNotification$2: function(metrics, context) {
      new G.ScrollStartNotification(type$.DragStartDetails._as(this._scroll_activity$_controller._lastDetails), metrics, context, 0).dispatch$1(context);
    },
    dispatchScrollUpdateNotification$3: function(metrics, context, scrollDelta) {
      new G.ScrollUpdateNotification(type$.DragUpdateDetails._as(this._scroll_activity$_controller._lastDetails), scrollDelta, metrics, context, 0).dispatch$1(context);
    },
    dispatchOverscrollNotification$3: function(metrics, context, overscroll) {
      G.OverscrollNotification$(context, type$.DragUpdateDetails._as(this._scroll_activity$_controller._lastDetails), metrics, overscroll, 0).dispatch$1(context);
    },
    dispatchScrollEndNotification$2: function(metrics, context) {
      var lastDetails = this._scroll_activity$_controller._lastDetails;
      new G.ScrollEndNotification(lastDetails instanceof O.DragEndDetails ? lastDetails : null, metrics, context, 0).dispatch$1(context);
    },
    get$shouldIgnorePointer: function() {
      return true;
    },
    get$isScrolling: function() {
      return true;
    },
    get$velocity: function() {
      return 0;
    },
    dispose$0: function() {
      this._scroll_activity$_controller = null;
      this.super$ScrollActivity$dispose();
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(" + H.S(this._scroll_activity$_controller) + ")";
    }
  };
  M.BallisticScrollActivity.prototype = {
    get$velocity: function() {
      return this._scroll_activity$_controller.get$velocity();
    },
    resetActivity$0: function() {
      this._delegate.goBallistic$1(this._scroll_activity$_controller.get$velocity());
    },
    applyNewDimensions$0: function() {
      this._delegate.goBallistic$1(this._scroll_activity$_controller.get$velocity());
    },
    _scroll_activity$_tick$0: function() {
      var t1 = this._scroll_activity$_controller._animation_controller$_value,
        t2 = this._delegate;
      t2.toString;
      if (t2.super$ScrollPosition$setPixels(t1) !== 0) {
        t1 = this._delegate;
        t1.beginActivity$1(new M.IdleScrollActivity(t1));
      }
    },
    _scroll_activity$_end$0: function() {
      var t1 = this._delegate;
      if (t1 != null)
        t1.goBallistic$1(0);
    },
    dispatchOverscrollNotification$3: function(metrics, context, overscroll) {
      G.OverscrollNotification$(context, null, metrics, overscroll, this._scroll_activity$_controller.get$velocity()).dispatch$1(context);
    },
    get$shouldIgnorePointer: function() {
      return true;
    },
    get$isScrolling: function() {
      return true;
    },
    dispose$0: function() {
      this._scroll_activity$_controller.dispose$0();
      this.super$ScrollActivity$dispose();
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(" + H.S(this._scroll_activity$_controller) + ")";
    }
  };
  M.DrivenScrollActivity.prototype = {
    get$velocity: function() {
      return this._scroll_activity$_controller.get$velocity();
    },
    _scroll_activity$_tick$0: function() {
      var t1 = this._delegate,
        t2 = this._scroll_activity$_controller._animation_controller$_value;
      t1.toString;
      if (t1.super$ScrollPosition$setPixels(t2) !== 0) {
        t1 = this._delegate;
        t1.beginActivity$1(new M.IdleScrollActivity(t1));
      }
    },
    _scroll_activity$_end$0: function() {
      var t1 = this._delegate;
      if (t1 != null)
        t1.goBallistic$1(this._scroll_activity$_controller.get$velocity());
    },
    dispatchOverscrollNotification$3: function(metrics, context, overscroll) {
      G.OverscrollNotification$(context, null, metrics, overscroll, this._scroll_activity$_controller.get$velocity()).dispatch$1(context);
    },
    get$shouldIgnorePointer: function() {
      return true;
    },
    get$isScrolling: function() {
      return true;
    },
    dispose$0: function() {
      this._completer.complete$0(0);
      this._scroll_activity$_controller.dispose$0();
      this.super$ScrollActivity$dispose();
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(" + H.S(this._scroll_activity$_controller) + ")";
    }
  };
  K.ScrollBehavior.prototype = {
    getPlatform$1: function(context) {
      return U.defaultTargetPlatform();
    },
    buildViewportChrome$3: function(context, child, axisDirection) {
      switch (this.getPlatform$1(context)) {
        case C.TargetPlatform_2:
        case C.TargetPlatform_3:
        case C.TargetPlatform_4:
        case C.TargetPlatform_5:
          return child;
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
          return L.GlowingOverscrollIndicator$(axisDirection, child, C.Color_4294967295);
      }
      return null;
    },
    getScrollPhysics$1: function(context) {
      switch (this.getPlatform$1(context)) {
        case C.TargetPlatform_2:
        case C.TargetPlatform_4:
          return C.BouncingScrollPhysics_null;
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_3:
        case C.TargetPlatform_5:
          return C.ClampingScrollPhysics_null;
      }
      return null;
    },
    toString$0: function(_) {
      return "ScrollBehavior";
    }
  };
  K.ScrollConfiguration.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      var t1;
      if (H.getRuntimeType(this.behavior).$eq(0, H.getRuntimeType(oldWidget.behavior)))
        t1 = false;
      else
        t1 = true;
      return t1;
    }
  };
  F.ScrollController.prototype = {
    animateTo$3$curve$duration: function(offset, curve, duration) {
      var animations, i,
        t1 = this._positions,
        t2 = new Array(t1.length);
      t2.fixed$length = Array;
      animations = H.setRuntimeTypeInfo(t2, type$.JSArray_Future_void);
      for (i = 0; i < t1.length; ++i)
        animations[i] = t1[i].animateTo$3$curve$duration(offset, curve, duration);
      t1 = type$.void;
      return P.Future_wait(animations, t1).then$1$1(new F.ScrollController_animateTo_closure(), t1);
    },
    jumpTo$1: function(value) {
      var t1, t2, _i;
      for (t1 = P.List_List$from(this._positions, true, type$.ScrollPosition), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].jumpTo$1(value);
    },
    attach$1: function(position) {
      var t1;
      this._positions.push(position);
      t1 = position.ChangeNotifier__listeners;
      t1._isDirty = true;
      t1._list.push(this.get$notifyListeners());
    },
    detach$1: function(_, position) {
      position.ChangeNotifier__listeners.remove$1(0, this.get$notifyListeners());
      C.JSArray_methods.remove$1(this._positions, position);
    },
    createScrollPosition$3: function(physics, context, oldPosition) {
      return R.ScrollPositionWithSingleContext$(context, null, this._initialScrollOffset, true, oldPosition, physics);
    },
    toString$0: function(_) {
      var t2,
        description = H.setRuntimeTypeInfo([], type$.JSArray_String),
        t1 = this._initialScrollOffset;
      if (t1 !== 0)
        description.push("initialScrollOffset: " + C.JSInt_methods.toStringAsFixed$1(t1, 1) + ", ");
      t1 = this._positions;
      t2 = t1.length;
      if (t2 === 0)
        description.push("no clients");
      else if (t2 === 1) {
        t1 = C.JSArray_methods.get$single(t1)._pixels;
        description.push("one client, offset " + H.S(t1 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t1, 1)));
      } else
        description.push("" + t2 + " clients");
      return "<optimized out>#" + Y.shortHash(this) + "(" + C.JSArray_methods.join$1(description, ", ") + ")";
    }
  };
  F.ScrollController_animateTo_closure.prototype = {
    call$1: function(_) {
      return null;
    },
    $signature: 147
  };
  M.ScrollMetrics.prototype = {
    copyWith$0: function() {
      var _this = this,
        t1 = _this.get$minScrollExtent(),
        t2 = _this.get$maxScrollExtent(),
        t3 = _this.get$pixels(),
        t4 = _this.get$viewportDimension(),
        t5 = _this.get$axisDirection();
      return M.FixedScrollMetrics$(t5, t2, t1, t3, t4);
    },
    get$outOfRange: function() {
      var _this = this;
      return _this.get$pixels() < _this.get$minScrollExtent() || _this.get$pixels() > _this.get$maxScrollExtent();
    },
    get$atEdge: function() {
      var _this = this;
      return _this.get$pixels() == _this.get$minScrollExtent() || _this.get$pixels() == _this.get$maxScrollExtent();
    },
    get$extentInside: function() {
      var _this = this;
      return _this.get$viewportDimension() - C.JSNumber_methods.clamp$2(_this.get$minScrollExtent() - _this.get$pixels(), 0, _this.get$viewportDimension()) - C.JSNumber_methods.clamp$2(_this.get$pixels() - _this.get$maxScrollExtent(), 0, _this.get$viewportDimension());
    }
  };
  M.FixedScrollMetrics.prototype = {
    toString$0: function(_) {
      var _this = this,
        t1 = _this.pixels;
      return "FixedScrollMetrics(" + C.JSNumber_methods.toStringAsFixed$1(Math.max(t1 - _this.minScrollExtent, 0), 1) + "..[" + C.JSNumber_methods.toStringAsFixed$1(_this.get$extentInside(), 1) + "].." + C.JSNumber_methods.toStringAsFixed$1(Math.max(_this.maxScrollExtent - t1, 0), 1) + ")";
    },
    get$minScrollExtent: function() {
      return this.minScrollExtent;
    },
    get$maxScrollExtent: function() {
      return this.maxScrollExtent;
    },
    get$pixels: function() {
      return this.pixels;
    },
    get$viewportDimension: function() {
      return this.viewportDimension;
    },
    get$axisDirection: function() {
      return this.axisDirection;
    }
  };
  G.ViewportNotificationMixin.prototype = {};
  G.ScrollNotification.prototype = {
    debugFillDescription$1: function(description) {
      this.super$_ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin$debugFillDescription(description);
      description.push(this.metrics.toString$0(0));
    }
  };
  G.ScrollStartNotification.prototype = {
    debugFillDescription$1: function(description) {
      var t1;
      this.super$ScrollNotification$debugFillDescription(description);
      t1 = this.dragDetails;
      if (t1 != null)
        description.push(t1.toString$0(0));
    }
  };
  G.ScrollUpdateNotification.prototype = {
    debugFillDescription$1: function(description) {
      var t1;
      this.super$ScrollNotification$debugFillDescription(description);
      description.push("scrollDelta: " + H.S(this.scrollDelta));
      t1 = this.dragDetails;
      if (t1 != null)
        description.push(t1.toString$0(0));
    },
    get$dragDetails: function() {
      return this.dragDetails;
    }
  };
  G.OverscrollNotification.prototype = {
    debugFillDescription$1: function(description) {
      var t1, _this = this;
      _this.super$ScrollNotification$debugFillDescription(description);
      description.push("overscroll: " + C.JSNumber_methods.toStringAsFixed$1(_this.overscroll, 1));
      description.push("velocity: " + C.JSNumber_methods.toStringAsFixed$1(_this.velocity, 1));
      t1 = _this.dragDetails;
      if (t1 != null)
        description.push(t1.toString$0(0));
    }
  };
  G.ScrollEndNotification.prototype = {
    debugFillDescription$1: function(description) {
      var t1;
      this.super$ScrollNotification$debugFillDescription(description);
      t1 = this.dragDetails;
      if (t1 != null)
        description.push(t1.toString$0(0));
    },
    get$dragDetails: function() {
      return this.dragDetails;
    }
  };
  G.UserScrollNotification.prototype = {
    debugFillDescription$1: function(description) {
      this.super$ScrollNotification$debugFillDescription(description);
      description.push("direction: " + this.direction.toString$0(0));
    }
  };
  G._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin.prototype = {
    visitAncestor$1: function(element) {
      if (element instanceof N.RenderObjectElement && type$.RenderAbstractViewport._is(element.get$renderObject()))
        ++this.ViewportNotificationMixin__depth;
      return this.super$Notification$visitAncestor(element);
    },
    debugFillDescription$1: function(description) {
      var t1;
      this.super$Notification$debugFillDescription(description);
      t1 = "depth: " + this.ViewportNotificationMixin__depth + " (";
      description.push(t1 + (this.ViewportNotificationMixin__depth === 0 ? "local" : "remote") + ")");
    }
  };
  L.ScrollPhysics.prototype = {
    buildParent$1: function(ancestor) {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.applyTo$1(ancestor);
      return t1 == null ? ancestor : t1;
    },
    applyTo$1: function(ancestor) {
      return new L.ScrollPhysics(this.buildParent$1(ancestor));
    },
    applyPhysicsToUserOffset$2: function(position, offset) {
      var t1 = this.parent;
      if (t1 == null)
        return offset;
      return t1.applyPhysicsToUserOffset$2(position, offset);
    },
    shouldAcceptUserOffset$1: function(position) {
      var t1 = this.parent;
      if (t1 == null)
        return position._pixels !== 0 || position._minScrollExtent != position._maxScrollExtent;
      return t1.shouldAcceptUserOffset$1(position);
    },
    applyBoundaryConditions$2: function(position, value) {
      var t1 = this.parent;
      if (t1 == null)
        return 0;
      return t1.applyBoundaryConditions$2(position, value);
    },
    createBallisticSimulation$2: function(position, velocity) {
      var t1 = this.parent;
      if (t1 == null)
        return null;
      return t1.createBallisticSimulation$2(position, velocity);
    },
    get$spring: function() {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.get$spring();
      return t1 == null ? $.$get$ScrollPhysics__kDefaultSpring() : t1;
    },
    get$tolerance: function() {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.get$tolerance();
      return t1 == null ? $.$get$ScrollPhysics__kDefaultTolerance() : t1;
    },
    get$minFlingDistance: function() {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.get$minFlingDistance();
      return t1 == null ? 18 : t1;
    },
    get$minFlingVelocity: function() {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.get$minFlingVelocity();
      return t1 == null ? 50 : t1;
    },
    get$maxFlingVelocity: function() {
      var t1 = this.parent;
      t1 = t1 == null ? null : t1.get$maxFlingVelocity();
      return t1 == null ? 8000 : t1;
    },
    carriedMomentum$1: function(existingVelocity) {
      var t1 = this.parent;
      if (t1 == null)
        return 0;
      return t1.carriedMomentum$1(existingVelocity);
    },
    get$dragStartDistanceMotionThreshold: function() {
      var t1 = this.parent;
      return t1 == null ? null : t1.get$dragStartDistanceMotionThreshold();
    },
    get$allowImplicitScrolling: function() {
      return true;
    },
    toString$0: function(_) {
      var t1 = this.parent;
      if (t1 == null)
        return "ScrollPhsyics";
      return "ScrollPhysics -> " + t1.toString$0(0);
    }
  };
  L.BouncingScrollPhysics.prototype = {
    applyTo$1: function(ancestor) {
      return new L.BouncingScrollPhysics(this.buildParent$1(ancestor));
    },
    applyPhysicsToUserOffset$2: function(position, offset) {
      var t1, t2, overscrollPastStart, overscrollPastEnd, overscrollPast, easing, friction;
      if (!position.get$outOfRange())
        return offset;
      t1 = position._minScrollExtent;
      t2 = position._pixels;
      overscrollPastStart = Math.max(t1 - t2, 0);
      overscrollPastEnd = Math.max(t2 - position._maxScrollExtent, 0);
      overscrollPast = Math.max(overscrollPastStart, overscrollPastEnd);
      if (!(overscrollPastStart > 0 && offset < 0))
        easing = overscrollPastEnd > 0 && offset > 0;
      else
        easing = true;
      t1 = position._viewportDimension;
      friction = easing ? 0.52 * Math.pow(1 - (overscrollPast - Math.abs(offset)) / t1, 2) : 0.52 * Math.pow(1 - overscrollPast / t1, 2);
      return J.get$sign$in(offset) * L.BouncingScrollPhysics__applyFriction(overscrollPast, Math.abs(offset), friction);
    },
    applyBoundaryConditions$2: function(position, value) {
      return 0;
    },
    createBallisticSimulation$2: function(position, velocity) {
      var t1, t2, t3, t4, t5, t6, finalX,
        tolerance = this.get$tolerance();
      if (Math.abs(velocity) >= tolerance.velocity || position.get$outOfRange()) {
        t1 = this.get$spring();
        t2 = position._pixels;
        t3 = velocity * 0.91;
        t4 = position._minScrollExtent;
        t5 = position._maxScrollExtent;
        t6 = new Y.BouncingScrollSimulation(t4, t5, t1, tolerance);
        if (t2 < t4) {
          t6._springSimulation = new M.ScrollSpringSimulation(t4, M._SpringSolution__SpringSolution(t1, t2 - t4, t3), C.Tolerance_Gdw);
          t6._springTime = -1 / 0;
        } else if (t2 > t5) {
          t6._springSimulation = new M.ScrollSpringSimulation(t5, M._SpringSolution__SpringSolution(t1, t2 - t5, t3), C.Tolerance_Gdw);
          t6._springTime = -1 / 0;
        } else {
          t2 = t6._frictionSimulation = new D.FrictionSimulation(0.135, Math.log(0.135), t2, t3, C.Tolerance_Gdw);
          finalX = t2.get$finalX();
          if (t3 > 0 && finalX > t5) {
            t2 = t2.timeAtX$1(t5);
            t6._springTime = t2;
            t6._springSimulation = new M.ScrollSpringSimulation(t5, M._SpringSolution__SpringSolution(t1, t5 - t5, Math.min(t3 * Math.pow(0.135, t2), 5000)), C.Tolerance_Gdw);
          } else if (t3 < 0 && finalX < t4) {
            t2 = t2.timeAtX$1(t4);
            t6._springTime = t2;
            t6._springSimulation = new M.ScrollSpringSimulation(t4, M._SpringSolution__SpringSolution(t1, t4 - t4, Math.min(t3 * Math.pow(0.135, t2), 5000)), C.Tolerance_Gdw);
          } else
            t6._springTime = 1 / 0;
        }
        return t6;
      }
      return null;
    },
    get$minFlingVelocity: function() {
      return 100;
    },
    carriedMomentum$1: function(existingVelocity) {
      return J.get$sign$in(existingVelocity) * Math.min(0.000816 * Math.pow(Math.abs(existingVelocity), 1.967), 40000);
    },
    get$dragStartDistanceMotionThreshold: function() {
      return 3.5;
    }
  };
  L.ClampingScrollPhysics.prototype = {
    applyTo$1: function(ancestor) {
      return new L.ClampingScrollPhysics(this.buildParent$1(ancestor));
    },
    applyBoundaryConditions$2: function(position, value) {
      var t2, t3,
        t1 = position._pixels;
      if (value < t1 && t1 <= position._minScrollExtent)
        return value - t1;
      t2 = position._maxScrollExtent;
      if (t2 <= t1 && t1 < value)
        return value - t1;
      t3 = position._minScrollExtent;
      if (value < t3 && t3 < t1)
        return value - t3;
      if (t1 < t2 && t2 < value)
        return value - t2;
      return 0;
    },
    createBallisticSimulation$2: function(position, velocity) {
      var t1, end, end0, t2, _null = null,
        tolerance = this.get$tolerance();
      if (position.get$outOfRange()) {
        t1 = position._pixels;
        end = position._maxScrollExtent;
        end = t1 > end ? end : _null;
        end0 = position._minScrollExtent;
        if (t1 < end0)
          end = end0;
        return new M.ScrollSpringSimulation(end, M._SpringSolution__SpringSolution(this.get$spring(), position._pixels - end, Math.min(0, velocity)), tolerance);
      }
      t1 = Math.abs(velocity);
      if (t1 < tolerance.velocity)
        return _null;
      if (velocity > 0 && position._pixels >= position._maxScrollExtent)
        return _null;
      if (velocity < 0 && position._pixels <= position._minScrollExtent)
        return _null;
      t2 = new Y.ClampingScrollSimulation(position._pixels, velocity, tolerance);
      t1 = Math.exp(Math.log(0.35 * t1 / 778.3530259679999) / ($.$get$ClampingScrollSimulation__kDecelerationRate() - 1));
      t2._scroll_simulation$_duration = t1;
      t2._distance = Math.abs(velocity * t1 / 3.065);
      return t2;
    }
  };
  L.AlwaysScrollableScrollPhysics.prototype = {
    applyTo$1: function(ancestor) {
      return new L.AlwaysScrollableScrollPhysics(this.buildParent$1(ancestor));
    },
    shouldAcceptUserOffset$1: function(position) {
      return true;
    }
  };
  A.ScrollPositionAlignmentPolicy.prototype = {
    toString$0: function(_) {
      return this._scroll_position$_name;
    }
  };
  A.ScrollPosition.prototype = {
    ScrollPosition$5$context$debugLabel$keepScrollOffset$oldPosition$physics: function(context, debugLabel, keepScrollOffset, oldPosition, physics) {
      if (oldPosition != null)
        this.absorb$1(oldPosition);
      this.restoreScrollOffset$0();
    },
    get$minScrollExtent: function() {
      return this._minScrollExtent;
    },
    get$maxScrollExtent: function() {
      return this._maxScrollExtent;
    },
    get$pixels: function() {
      return this._pixels;
    },
    get$viewportDimension: function() {
      return this._viewportDimension;
    },
    absorb$1: function(other) {
      var _this = this;
      _this._minScrollExtent = other._minScrollExtent;
      _this._maxScrollExtent = other._maxScrollExtent;
      _this._pixels = other._pixels;
      _this._viewportDimension = other._viewportDimension;
      _this._activity = other._activity;
      other._activity = null;
      if (!H.getRuntimeType(other).$eq(0, H.getRuntimeType(_this)))
        _this._activity.resetActivity$0();
      _this.context.setIgnorePointer$1(_this._activity.get$shouldIgnorePointer());
      _this.isScrollingNotifier.set$value(0, _this._activity.get$isScrolling());
    },
    setPixels$1: function(newPixels) {
      var result, oldPixels, t1, _this = this;
      if (newPixels != _this._pixels) {
        result = _this.physics.applyBoundaryConditions$2(_this, newPixels);
        oldPixels = _this._pixels;
        t1 = newPixels - result;
        _this._pixels = t1;
        if (t1 !== oldPixels) {
          _this._updateSemanticActions$0();
          _this.super$ChangeNotifier$notifyListeners();
          _this.didUpdateScrollPositionBy$1(_this._pixels - oldPixels);
        }
        if (result !== 0) {
          _this._activity.dispatchOverscrollNotification$3(_this.copyWith$0(), $.GlobalKey__registry.$index(0, _this.context._gestureDetectorKey), result);
          return result;
        }
      }
      return 0;
    },
    correctBy$1: function(correction) {
      this._pixels = this._pixels + correction;
      this._didChangeViewportDimensionOrReceiveCorrection = true;
    },
    saveScrollOffset$0: function() {
      var t1 = this.context,
        t2 = S.PageStorage_of(t1._framework$_element);
      if (t2 != null)
        t2.writeState$2(t1._framework$_element, this._pixels);
    },
    restoreScrollOffset$0: function() {
      var t1, t2, value;
      if (this._pixels == null) {
        t1 = this.context;
        t2 = S.PageStorage_of(t1._framework$_element);
        value = t2 == null ? null : t2.readState$1(t1._framework$_element);
        if (value != null)
          this._pixels = value;
      }
    },
    applyViewportDimension$1: function(viewportDimension) {
      if (this._viewportDimension != viewportDimension) {
        this._viewportDimension = viewportDimension;
        this._didChangeViewportDimensionOrReceiveCorrection = true;
      }
      return true;
    },
    _updateSemanticActions$0: function() {
      var $forward, backward, actions, _this = this,
        t1 = _this.context;
      switch (t1._widget.axisDirection) {
        case C.AxisDirection_0:
          $forward = C.SemanticsAction_32;
          backward = C.SemanticsAction_16;
          break;
        case C.AxisDirection_1:
          $forward = C.SemanticsAction_4;
          backward = C.SemanticsAction_8;
          break;
        case C.AxisDirection_2:
          $forward = C.SemanticsAction_16;
          backward = C.SemanticsAction_32;
          break;
        case C.AxisDirection_3:
          $forward = C.SemanticsAction_8;
          backward = C.SemanticsAction_4;
          break;
        default:
          $forward = null;
          backward = null;
      }
      actions = P.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsAction);
      if (_this._pixels > _this._minScrollExtent)
        actions.add$1(0, backward);
      if (_this._pixels < _this._maxScrollExtent)
        actions.add$1(0, $forward);
      if (S.setEquals(actions, _this._semanticActions))
        return;
      _this._semanticActions = actions;
      t1 = t1._gestureDetectorKey;
      if (t1.get$currentState() != null)
        t1.get$currentState().replaceSemanticsActions$1(actions);
    },
    applyContentDimensions$2: function(minScrollExtent, maxScrollExtent) {
      var _this = this;
      if (!B.nearEqual(_this._minScrollExtent, minScrollExtent, 0.001) || !B.nearEqual(_this._maxScrollExtent, maxScrollExtent, 0.001) || _this._didChangeViewportDimensionOrReceiveCorrection) {
        _this._minScrollExtent = minScrollExtent;
        _this._maxScrollExtent = maxScrollExtent;
        _this._haveDimensions = true;
        _this.super$ScrollPosition$applyNewDimensions();
        _this.context.setCanDrag$1(_this.physics.shouldAcceptUserOffset$1(_this));
        _this._didChangeViewportDimensionOrReceiveCorrection = false;
      }
      return true;
    },
    applyNewDimensions$0: function() {
      this._activity.applyNewDimensions$0();
      this._updateSemanticActions$0();
    },
    ensureVisible$5$alignment$alignmentPolicy$curve$duration: function(object, alignment, alignmentPolicy, curve, duration) {
      var target, target0, t1, _this = this,
        viewport = Q.RenderAbstractViewport_of(object);
      switch (alignmentPolicy) {
        case C.ScrollPositionAlignmentPolicy_0:
          target = J.clamp$2$n(viewport.getOffsetToReveal$2(object, alignment).offset, _this._minScrollExtent, _this._maxScrollExtent);
          break;
        case C.ScrollPositionAlignmentPolicy_1:
          target = J.clamp$2$n(viewport.getOffsetToReveal$2(object, 1).offset, _this._minScrollExtent, _this._maxScrollExtent);
          target0 = _this._pixels;
          if (target < target0)
            target = target0;
          break;
        case C.ScrollPositionAlignmentPolicy_2:
          target = J.clamp$2$n(viewport.getOffsetToReveal$2(object, 0).offset, _this._minScrollExtent, _this._maxScrollExtent);
          target0 = _this._pixels;
          if (target > target0)
            target = target0;
          break;
        default:
          target = null;
      }
      if (target == _this._pixels) {
        t1 = new P._Future($.Zone__current, type$._Future_void);
        t1._asyncComplete$1(null);
        return t1;
      }
      if (duration._duration === 0) {
        _this.jumpTo$1(target);
        t1 = new P._Future($.Zone__current, type$._Future_void);
        t1._asyncComplete$1(null);
        return t1;
      }
      return _this.animateTo$3$curve$duration(target, curve, duration);
    },
    moveTo$3$curve$duration: function(_, to, curve, duration) {
      to = J.clamp$2$n(to, this._minScrollExtent, this._maxScrollExtent);
      return this.super$ViewportOffset$moveTo(0, to, curve, duration);
    },
    beginActivity$1: function(newActivity) {
      var oldIgnorePointer, wasScrolling, _this = this,
        t1 = _this._activity;
      if (t1 != null) {
        oldIgnorePointer = t1.get$shouldIgnorePointer();
        wasScrolling = _this._activity.get$isScrolling();
        if (wasScrolling && !newActivity.get$isScrolling())
          _this.didEndScroll$0();
        _this._activity.dispose$0();
      } else {
        wasScrolling = false;
        oldIgnorePointer = false;
      }
      _this._activity = newActivity;
      if (oldIgnorePointer !== newActivity.get$shouldIgnorePointer())
        _this.context.setIgnorePointer$1(_this._activity.get$shouldIgnorePointer());
      _this.isScrollingNotifier.set$value(0, _this._activity.get$isScrolling());
      if (!wasScrolling && _this._activity.get$isScrolling())
        _this.didStartScroll$0();
    },
    didStartScroll$0: function() {
      this._activity.dispatchScrollStartNotification$2(this.copyWith$0(), $.GlobalKey__registry.$index(0, this.context._gestureDetectorKey));
    },
    didUpdateScrollPositionBy$1: function(delta) {
      this._activity.dispatchScrollUpdateNotification$3(this.copyWith$0(), $.GlobalKey__registry.$index(0, this.context._gestureDetectorKey), delta);
    },
    didEndScroll$0: function() {
      var _this = this;
      _this._activity.dispatchScrollEndNotification$2(_this.copyWith$0(), $.GlobalKey__registry.$index(0, _this.context._gestureDetectorKey));
      _this.saveScrollOffset$0();
    },
    dispose$0: function() {
      var t1 = this._activity;
      if (t1 != null)
        t1.dispose$0();
      this._activity = null;
      this.super$ChangeNotifier$dispose();
    },
    debugFillDescription$1: function(description) {
      var t1, t2, _this = this;
      _this.super$ViewportOffset$debugFillDescription(description);
      t1 = _this._minScrollExtent;
      t1 = "range: " + H.S(t1 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t1, 1)) + "..";
      t2 = _this._maxScrollExtent;
      description.push(t1 + H.S(t2 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t2, 1)));
      t1 = _this._viewportDimension;
      description.push("viewport: " + H.S(t1 == null ? null : C.JSNumber_methods.toStringAsFixed$1(t1, 1)));
    }
  };
  A._ScrollPosition_ViewportOffset_ScrollMetrics.prototype = {};
  R.ScrollPositionWithSingleContext.prototype = {
    ScrollPositionWithSingleContext$6$context$debugLabel$initialPixels$keepScrollOffset$oldPosition$physics: function(context, debugLabel, initialPixels, keepScrollOffset, oldPosition, physics) {
      var _this = this;
      if (_this._pixels == null && initialPixels != null)
        _this._pixels = initialPixels;
      if (_this._activity == null)
        _this.beginActivity$1(new M.IdleScrollActivity(_this));
    },
    get$axisDirection: function() {
      return this.context._widget.axisDirection;
    },
    absorb$1: function(other) {
      var t1, _this = this;
      _this.super$ScrollPosition$absorb(other);
      _this._activity._delegate = _this;
      _this._userScrollDirection = other._userScrollDirection;
      t1 = other._currentDrag;
      if (t1 != null) {
        _this._currentDrag = t1;
        t1._delegate = _this;
        other._currentDrag = null;
      }
    },
    beginActivity$1: function(newActivity) {
      var t1, _this = this;
      _this._heldPreviousVelocity = 0;
      _this.super$ScrollPosition$beginActivity(newActivity);
      t1 = _this._currentDrag;
      if (t1 != null)
        t1.dispose$0();
      _this._currentDrag = null;
      if (!_this._activity.get$isScrolling())
        _this.updateUserScrollDirection$1(C.ScrollDirection_0);
    },
    goBallistic$1: function(velocity) {
      var t1, t2, t3, _this = this,
        simulation = _this.physics.createBallisticSimulation$2(_this, velocity);
      if (simulation != null) {
        t1 = new M.BallisticScrollActivity(_this);
        t2 = G.AnimationController$unbounded(null, 0, _this.context);
        t2.didRegisterListener$0();
        t3 = t2.AnimationLocalListenersMixin__listeners;
        t3._isDirty = true;
        t3._list.push(t1.get$_scroll_activity$_tick());
        t2.stop$0(0);
        t2._direction = C._AnimationDirection_0;
        t2._startSimulation$1(simulation)._primaryCompleter.future.whenComplete$1(t1.get$_scroll_activity$_end());
        t1._scroll_activity$_controller = t2;
        _this.beginActivity$1(t1);
      } else
        _this.beginActivity$1(new M.IdleScrollActivity(_this));
    },
    updateUserScrollDirection$1: function(value) {
      var t1, _this = this;
      if (_this._userScrollDirection === value)
        return;
      _this._userScrollDirection = value;
      t1 = _this.context._gestureDetectorKey;
      new G.UserScrollNotification(value, _this.copyWith$0(), $.GlobalKey__registry.$index(0, t1), 0).dispatch$1($.GlobalKey__registry.$index(0, t1));
    },
    animateTo$3$curve$duration: function(to, curve, duration) {
      var t1, activity, t2, _this = this;
      if (B.nearEqual(to, _this._pixels, _this.physics.get$tolerance().distance)) {
        _this.jumpTo$1(to);
        t1 = new P._Future($.Zone__current, type$._Future_void);
        t1._asyncComplete$1(null);
        return t1;
      }
      t1 = _this._pixels;
      activity = new M.DrivenScrollActivity(_this);
      activity._completer = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
      t1 = G.AnimationController$unbounded("DrivenScrollActivity", t1, _this.context);
      t1.didRegisterListener$0();
      t2 = t1.AnimationLocalListenersMixin__listeners;
      t2._isDirty = true;
      t2._list.push(activity.get$_scroll_activity$_tick());
      t1._direction = C._AnimationDirection_0;
      t1._animateToInternal$3$curve$duration(to, curve, duration)._primaryCompleter.future.whenComplete$1(activity.get$_scroll_activity$_end());
      activity._scroll_activity$_controller = t1;
      _this.beginActivity$1(activity);
      return activity._completer.future;
    },
    jumpTo$1: function(value) {
      var t1, _this = this;
      _this.beginActivity$1(new M.IdleScrollActivity(_this));
      t1 = _this._pixels;
      if (t1 != value) {
        _this._pixels = value;
        _this._updateSemanticActions$0();
        _this.super$ChangeNotifier$notifyListeners();
        _this.didStartScroll$0();
        _this.didUpdateScrollPositionBy$1(_this._pixels - t1);
        _this.didEndScroll$0();
      }
      _this.goBallistic$1(0);
    },
    drag$2: function(details, dragCancelCallback) {
      var t3, t4, drag, _this = this,
        t1 = _this.physics,
        t2 = t1.carriedMomentum$1(_this._heldPreviousVelocity);
      t1 = t1.get$dragStartDistanceMotionThreshold();
      t3 = details.sourceTimeStamp;
      t4 = t1 == null ? null : 0;
      drag = new M.ScrollDragController(_this, dragCancelCallback, t2, t1, t3, t2 !== 0, t4, details);
      _this.beginActivity$1(new M.DragScrollActivity(drag, _this));
      return _this._currentDrag = drag;
    },
    dispose$0: function() {
      var t1 = this._currentDrag;
      if (t1 != null)
        t1.dispose$0();
      this._currentDrag = null;
      this.super$ScrollPosition$dispose();
    }
  };
  Y.BouncingScrollSimulation.prototype = {
    _scroll_simulation$_simulation$1: function(time) {
      var simulation, _this = this,
        t1 = _this._springTime;
      if (time > t1) {
        _this._timeOffset = isFinite(t1) ? t1 : 0;
        simulation = _this._springSimulation;
      } else {
        _this._timeOffset = 0;
        simulation = _this._frictionSimulation;
      }
      simulation.tolerance = _this.tolerance;
      return simulation;
    },
    x$1: function(_, time) {
      return this._scroll_simulation$_simulation$1(time).x$1(0, time - this._timeOffset);
    },
    dx$1: function(_, time) {
      return this._scroll_simulation$_simulation$1(time).dx$1(0, time - this._timeOffset);
    },
    isDone$1: function(time) {
      return this._scroll_simulation$_simulation$1(time).isDone$1(time - this._timeOffset);
    },
    toString$0: function(_) {
      return "BouncingScrollSimulation(leadingExtent: " + H.S(this.leadingExtent) + ", trailingExtent: " + H.S(this.trailingExtent) + ")";
    }
  };
  Y.ClampingScrollSimulation.prototype = {
    x$1: function(_, time) {
      var _this = this,
        t = C.JSDouble_methods.clamp$2(time / _this._scroll_simulation$_duration, 0, 1);
      return _this.position + _this._distance * (1.2 * t * t * t - 3.27 * t * t + 3.065 * t) * J.get$sign$in(_this.velocity);
    },
    dx$1: function(_, time) {
      var _this = this,
        t = C.JSDouble_methods.clamp$2(time / _this._scroll_simulation$_duration, 0, 1);
      return _this._distance * (3.6 * t * t - 6.54 * t + 3.065) * J.get$sign$in(_this.velocity) / _this._scroll_simulation$_duration;
    },
    isDone$1: function(time) {
      return time >= this._scroll_simulation$_duration;
    }
  };
  B.ScrollViewKeyboardDismissBehavior.prototype = {
    toString$0: function(_) {
      return this._scroll_view$_name;
    }
  };
  B.ScrollView.prototype = {
    buildViewport$4: function(context, offset, axisDirection, slivers) {
      return Q.Viewport$(0, axisDirection, this.cacheExtent, C.CacheExtentStyle_0, null, offset, slivers);
    },
    build$1: function(context) {
      var t1, mediaQueryHorizontalPadding, mediaQueryVerticalPadding, slivers, axisDirection, scrollController, scrollable, scrollableResult, _this = this, _null = null,
        sliver = _this.buildChildLayout$1(context),
        effectivePadding = _this.padding,
        mediaQuery = F.MediaQuery_of(context, true);
      if (mediaQuery != null) {
        t1 = mediaQuery.padding;
        mediaQueryHorizontalPadding = t1.copyWith$2$bottom$top(0, 0);
        mediaQueryVerticalPadding = t1.copyWith$2$left$right(0, 0);
        t1 = _this.scrollDirection === C.Axis_1;
        effectivePadding = t1 ? mediaQueryVerticalPadding : mediaQueryHorizontalPadding;
        sliver = new F.MediaQuery(mediaQuery.copyWith$1$padding(t1 ? mediaQueryHorizontalPadding : mediaQueryVerticalPadding), sliver, _null);
      }
      slivers = H.setRuntimeTypeInfo([effectivePadding != null ? new T.SliverPadding(effectivePadding, sliver, _null) : sliver], type$.JSArray_Widget);
      axisDirection = T.getAxisDirectionFromAxisReverseAndDirectionality(context, _this.scrollDirection, false);
      t1 = _this.primary;
      scrollController = t1 ? E.PrimaryScrollController_of(context) : _this.controller;
      scrollable = F.Scrollable$(axisDirection, scrollController, _this.dragStartBehavior, _this.physics, _this.semanticChildCount, new B.ScrollView_build_closure(_this, axisDirection, slivers));
      scrollableResult = t1 && scrollController != null ? new E.PrimaryScrollController(_null, scrollable, _null) : scrollable;
      if (_this.keyboardDismissBehavior === C.ScrollViewKeyboardDismissBehavior_1)
        return U.NotificationListener$(scrollableResult, new B.ScrollView_build_closure0(context), type$.ScrollUpdateNotification);
      else
        return scrollableResult;
    }
  };
  B.ScrollView_build_closure.prototype = {
    call$2: function(context, offset) {
      return this.$this.buildViewport$4(context, offset, this.axisDirection, this.slivers);
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  B.ScrollView_build_closure0.prototype = {
    call$1: function(notification) {
      var focusScope = L.FocusScope_of(this.context);
      if (notification.dragDetails != null && focusScope.get$hasFocus())
        focusScope.unfocus$0();
      return false;
    }
  };
  B.BoxScrollView.prototype = {};
  B.ListView.prototype = {
    buildChildLayout$1: function(context) {
      var t1 = this.itemExtent;
      if (t1 != null)
        return new G.SliverFixedExtentList(t1, this.childrenDelegate, null);
      return new G.SliverList(this.childrenDelegate, null);
    }
  };
  F.Scrollable.prototype = {
    createState$0: function() {
      var _null = null,
        t1 = type$.LabeledGlobalKey_State_StatefulWidget;
      return new F.ScrollableState(new N.LabeledGlobalKey(_null, t1), new N.LabeledGlobalKey(_null, type$.LabeledGlobalKey_RawGestureDetectorState), new N.LabeledGlobalKey(_null, t1), C.Map_empty4, _null, C._StateLifecycle_0);
    },
    viewportBuilder$2: function(arg0, arg1) {
      return this.viewportBuilder.call$2(arg0, arg1);
    }
  };
  F._ScrollableScope.prototype = {
    updateShouldNotify$1: function(old) {
      return this.position != old.position;
    }
  };
  F.ScrollableState.prototype = {
    _updatePosition$0: function() {
      var t2, controller, oldPosition, _this = this,
        configuration = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.ScrollConfiguration),
        t1 = configuration == null ? null : configuration.behavior;
      if (t1 == null)
        t1 = C.C_ScrollBehavior;
      _this._scrollable$_configuration = t1;
      t1 = t1.getScrollPhysics$1(_this._framework$_element);
      _this._physics = t1;
      t2 = _this._widget.physics;
      if (t2 != null)
        _this._physics = t2.applyTo$1(t1);
      controller = _this._widget.controller;
      oldPosition = _this._scrollable$_position;
      if (oldPosition != null) {
        if (controller != null)
          controller.detach$1(0, oldPosition);
        P.scheduleMicrotask(oldPosition.get$dispose());
      }
      t1 = controller == null;
      t2 = t1 ? null : controller.createScrollPosition$3(_this._physics, _this, oldPosition);
      if (t2 == null)
        t2 = R.ScrollPositionWithSingleContext$(_this, null, 0, true, oldPosition, _this._physics);
      _this._scrollable$_position = t2;
      if (!t1)
        controller.attach$1(t2);
    },
    didChangeDependencies$0: function() {
      this.super$_ScrollableState_State_TickerProviderStateMixin$didChangeDependencies();
      this._updatePosition$0();
    },
    _shouldUpdatePosition$1: function(oldWidget) {
      var t1, t2, t3, _null = null,
        newPhysics = this._widget.physics,
        oldPhysics = oldWidget.physics;
      do {
        t1 = newPhysics == null;
        t2 = t1 ? _null : H.getRuntimeType(newPhysics);
        t3 = oldPhysics == null;
        if (!J.$eq$(t2, t3 ? _null : H.getRuntimeType(oldPhysics)))
          return true;
        newPhysics = t1 ? _null : newPhysics.parent;
        oldPhysics = t3 ? _null : oldPhysics.parent;
      } while (newPhysics != null || oldPhysics != null);
      t1 = this._widget.controller;
      t1 = t1 == null ? _null : H.getRuntimeType(t1);
      t2 = oldWidget.controller;
      return !J.$eq$(t1, t2 == null ? _null : H.getRuntimeType(t2));
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget.controller;
      t2 = oldWidget.controller;
      if (t1 != t2) {
        if (t2 != null)
          t2.detach$1(0, _this._scrollable$_position);
        t1 = _this._widget.controller;
        if (t1 != null)
          t1.attach$1(_this._scrollable$_position);
      }
      if (_this._shouldUpdatePosition$1(oldWidget))
        _this._updatePosition$0();
    },
    dispose$0: function() {
      var _this = this,
        t1 = _this._widget.controller;
      if (t1 != null)
        t1.detach$1(0, _this._scrollable$_position);
      _this._scrollable$_position.dispose$0();
      _this.super$_ScrollableState_State_TickerProviderStateMixin$dispose();
    },
    setCanDrag$1: function(canDrag) {
      var t1, semanticsGestureHandler, _this = this;
      if (canDrag === _this._lastCanDrag)
        t1 = !canDrag || G.axisDirectionToAxis(_this._widget.axisDirection) == _this._scrollable$_lastAxisDirection;
      else
        t1 = false;
      if (t1)
        return;
      if (!canDrag)
        _this._gestureRecognizers = C.Map_empty4;
      else {
        switch (G.axisDirectionToAxis(_this._widget.axisDirection)) {
          case C.Axis_1:
            _this._gestureRecognizers = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_mLh, new D.GestureRecognizerFactoryWithHandlers(new F.ScrollableState_setCanDrag_closure(), new F.ScrollableState_setCanDrag_closure0(_this), type$.GestureRecognizerFactoryWithHandlers_VerticalDragGestureRecognizer)], type$.Type, type$.GestureRecognizerFactory_GestureRecognizer);
            break;
          case C.Axis_0:
            _this._gestureRecognizers = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_Vq1, new D.GestureRecognizerFactoryWithHandlers(new F.ScrollableState_setCanDrag_closure1(), new F.ScrollableState_setCanDrag_closure2(_this), type$.GestureRecognizerFactoryWithHandlers_HorizontalDragGestureRecognizer)], type$.Type, type$.GestureRecognizerFactory_GestureRecognizer);
            break;
        }
        canDrag = true;
      }
      _this._lastCanDrag = canDrag;
      _this._scrollable$_lastAxisDirection = G.axisDirectionToAxis(_this._widget.axisDirection);
      t1 = _this._gestureDetectorKey;
      if (t1.get$currentState() != null) {
        t1 = t1.get$currentState();
        t1._syncAll$1(_this._gestureRecognizers);
        if (!t1._widget.excludeFromSemantics) {
          semanticsGestureHandler = type$.RenderSemanticsGestureHandler._as(t1._framework$_element.get$renderObject());
          t1._gesture_detector$_semantics.assignSemantics$1(semanticsGestureHandler);
        }
      }
    },
    setIgnorePointer$1: function(value) {
      var t1, _this = this;
      if (_this._shouldIgnorePointer === value)
        return;
      _this._shouldIgnorePointer = value;
      t1 = _this._ignorePointerKey;
      if ($.GlobalKey__registry.$index(0, t1) != null)
        type$.RenderIgnorePointer._as($.GlobalKey__registry.$index(0, t1).get$renderObject()).set$ignoring(_this._shouldIgnorePointer);
    },
    _handleDragDown$1: function(details) {
      var t1 = this._scrollable$_position,
        previousVelocity = t1._activity.get$velocity(),
        holdActivity = new M.HoldScrollActivity(this.get$_disposeHold(), t1);
      t1.beginActivity$1(holdActivity);
      t1._heldPreviousVelocity = previousVelocity;
      this._hold = holdActivity;
    },
    _scrollable$_handleDragStart$1: function(details) {
      this._scrollable$_drag = this._scrollable$_position.drag$2(details, this.get$_disposeDrag());
    },
    _scrollable$_handleDragUpdate$1: function(details) {
      var t1 = this._scrollable$_drag;
      if (t1 != null)
        t1.update$1(0, details);
    },
    _scrollable$_handleDragEnd$1: function(details) {
      var t1 = this._scrollable$_drag;
      if (t1 != null)
        t1.end$1(0, details);
    },
    _scrollable$_handleDragCancel$0: function() {
      var t1 = this._hold;
      if (t1 != null)
        t1._delegate.goBallistic$1(0);
      t1 = this._scrollable$_drag;
      if (t1 != null)
        t1._delegate.goBallistic$1(0);
    },
    _disposeHold$0: function() {
      this._hold = null;
    },
    _disposeDrag$0: function() {
      this._scrollable$_drag = null;
    },
    _targetScrollOffsetForPointerScroll$1: function($event) {
      var t1 = this._widget.axisDirection,
        delta = G.axisDirectionToAxis(t1) === C.Axis_0 ? $event.scrollDelta._dx : $event.scrollDelta._dy;
      if (G.axisDirectionIsReversed(t1))
        delta *= -1;
      t1 = this._scrollable$_position;
      return Math.min(Math.max(t1._pixels + delta, H.checkNum(t1._minScrollExtent)), H.checkNum(t1._maxScrollExtent));
    },
    _receivedPointerSignal$1: function($event) {
      var _this = this;
      if ($event instanceof F.PointerScrollEvent && _this._scrollable$_position != null)
        if (_this._targetScrollOffsetForPointerScroll$1($event) !== _this._scrollable$_position._pixels)
          $.GestureBinding__instance.GestureBinding_pointerSignalResolver.register$2(0, $event, _this.get$_handlePointerScroll());
    },
    _handlePointerScroll$1: function($event) {
      var targetScrollOffset, _this = this,
        t1 = _this._physics;
      if (t1 != null && !t1.shouldAcceptUserOffset$1(_this._scrollable$_position))
        return;
      targetScrollOffset = _this._targetScrollOffsetForPointerScroll$1($event);
      t1 = _this._scrollable$_position;
      if (targetScrollOffset !== t1._pixels)
        t1.jumpTo$1(targetScrollOffset);
    },
    build$1: function(context) {
      var t4, t5, result, _this = this, _null = null,
        t1 = _this._scrollable$_position,
        t2 = _this._gestureRecognizers,
        t3 = _this._widget;
      t2 = T.Listener$(C.HitTestBehavior_0, D.RawGestureDetector$(C.HitTestBehavior_1, T.Semantics$(_null, new T.IgnorePointer(_this._shouldIgnorePointer, false, t3.viewportBuilder$2(context, t1), _this._ignorePointerKey), false, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, t2, _this._gestureDetectorKey, _null), _null, _null, _this.get$_receivedPointerSignal(), _null);
      t3 = _this._widget;
      t4 = _this._scrollable$_position;
      t3 = t3.physics;
      t3 = t3 == null ? _null : t3.get$allowImplicitScrolling();
      if (t3 == null)
        t3 = _this._physics.get$allowImplicitScrolling();
      t5 = _this._widget;
      result = new F._ScrollSemantics(t4, t3, t5.semanticChildCount, new F._ScrollableScope(_this, t1, t2, _null), _this._scrollSemanticsKey);
      t1 = t5;
      return _this._scrollable$_configuration.buildViewportChrome$3(context, result, t1.axisDirection);
    }
  };
  F.ScrollableState_setCanDrag_closure.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new O.VerticalDragGestureRecognizer(C.DragStartBehavior_1, C._DragState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), null, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 50
  };
  F.ScrollableState_setCanDrag_closure0.prototype = {
    call$1: function(instance) {
      var t2,
        t1 = this.$this;
      instance.onDown = t1.get$_handleDragDown();
      instance.onStart = t1.get$_scrollable$_handleDragStart();
      instance.onUpdate = t1.get$_scrollable$_handleDragUpdate();
      instance.onEnd = t1.get$_scrollable$_handleDragEnd();
      instance.onCancel = t1.get$_scrollable$_handleDragCancel();
      t2 = t1._physics;
      instance.minFlingDistance = t2 == null ? null : t2.get$minFlingDistance();
      t2 = t1._physics;
      instance.minFlingVelocity = t2 == null ? null : t2.get$minFlingVelocity();
      t2 = t1._physics;
      instance.maxFlingVelocity = t2 == null ? null : t2.get$maxFlingVelocity();
      instance.dragStartBehavior = t1._widget.dragStartBehavior;
    }
  };
  F.ScrollableState_setCanDrag_closure1.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new O.HorizontalDragGestureRecognizer(C.DragStartBehavior_1, C._DragState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), null, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 49
  };
  F.ScrollableState_setCanDrag_closure2.prototype = {
    call$1: function(instance) {
      var t2,
        t1 = this.$this;
      instance.onDown = t1.get$_handleDragDown();
      instance.onStart = t1.get$_scrollable$_handleDragStart();
      instance.onUpdate = t1.get$_scrollable$_handleDragUpdate();
      instance.onEnd = t1.get$_scrollable$_handleDragEnd();
      instance.onCancel = t1.get$_scrollable$_handleDragCancel();
      t2 = t1._physics;
      instance.minFlingDistance = t2 == null ? null : t2.get$minFlingDistance();
      t2 = t1._physics;
      instance.minFlingVelocity = t2 == null ? null : t2.get$minFlingVelocity();
      t2 = t1._physics;
      instance.maxFlingVelocity = t2 == null ? null : t2.get$maxFlingVelocity();
      instance.dragStartBehavior = t1._widget.dragStartBehavior;
    }
  };
  F._ScrollSemantics.prototype = {
    createRenderObject$1: function(context) {
      var t1 = this.position,
        t2 = new F._RenderScrollSemantics(t1, this.allowImplicitScrolling, this.semanticChildCount, null);
      t2.get$isRepaintBoundary();
      t2.get$alwaysNeedsCompositing();
      t2._needsCompositing = false;
      t2.set$child(null);
      t1 = t1.ChangeNotifier__listeners;
      t1._isDirty = true;
      t1._list.push(t2.get$markNeedsSemanticsUpdate());
      return t2;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$allowImplicitScrolling(this.allowImplicitScrolling);
      renderObject.set$position(0, this.position);
      renderObject.set$semanticChildCount(this.semanticChildCount);
    }
  };
  F._RenderScrollSemantics.prototype = {
    set$position: function(_, value) {
      var t2, _this = this,
        t1 = _this._scrollable$_position;
      if (value == t1)
        return;
      t2 = _this.get$markNeedsSemanticsUpdate();
      t1.ChangeNotifier__listeners.remove$1(0, t2);
      _this._scrollable$_position = value;
      t1 = value.ChangeNotifier__listeners;
      t1._isDirty = true;
      t1._list.push(t2);
      _this.markNeedsSemanticsUpdate$0();
    },
    set$allowImplicitScrolling: function(value) {
      if (value === this._allowImplicitScrolling)
        return;
      this._allowImplicitScrolling = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$semanticChildCount: function(value) {
      if (value == this._semanticChildCount)
        return;
      this._semanticChildCount = value;
      this.markNeedsSemanticsUpdate$0();
    },
    describeSemanticsConfiguration$1: function(config) {
      var t1, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      config._isSemanticBoundary = true;
      if (_this._scrollable$_position._haveDimensions) {
        config._setFlag$2(C.SemanticsFlag_262144, _this._allowImplicitScrolling);
        t1 = _this._scrollable$_position;
        config._scrollPosition = t1._pixels;
        config._hasBeenAnnotated = true;
        config._scrollExtentMax = t1._maxScrollExtent;
        config._scrollExtentMin = t1._minScrollExtent;
        config.set$scrollChildCount(_this._semanticChildCount);
      }
    },
    assembleSemanticsNode$3: function(node, config, children) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, excluded, included, firstVisibleIndex, _i, child, _this = this;
      if (children.length === 0 || !C.JSArray_methods.get$first(children).isTagged$1(C.SemanticsTag_FIw)) {
        _this.super$RenderObject$assembleSemanticsNode(node, config, children);
        return;
      }
      t1 = _this._innerNode;
      if (t1 == null) {
        t1 = $.$get$SemanticsNode__kEmptyConfig();
        t2 = t1._isMergingSemanticsOfDescendants;
        t3 = t1._actions;
        t4 = t1._customSemanticsActions;
        t5 = t1._actionsAsBits;
        t6 = t1._flags;
        t7 = t1._semantics$_label;
        t8 = t1._semantics$_value;
        t9 = t1._decreasedValue;
        t10 = t1._increasedValue;
        t11 = t1._hint;
        t12 = t1._semantics$_elevation;
        t13 = t1._semantics$_thickness;
        t1 = t1._semantics$_textDirection;
        t14 = ($.SemanticsNode__lastIdentifier + 1) % 65535;
        $.SemanticsNode__lastIdentifier = t14;
        t1 = _this._innerNode = new A.SemanticsNode(null, t14, _this.get$showOnScreen(), C.Rect_0_0_0_0, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t1);
      }
      t1.set$isMergedIntoParent(node._mergeAllDescendantsIntoThisNode || node._isMergedIntoParent);
      t2 = node._semantics$_rect;
      t1.set$rect(0, new P.Rect(0, 0, 0 + (t2.right - t2.left), 0 + (t2.bottom - t2.top)));
      t2 = type$.JSArray_SemanticsNode;
      excluded = H.setRuntimeTypeInfo([_this._innerNode], t2);
      included = H.setRuntimeTypeInfo([], t2);
      for (t1 = children.length, firstVisibleIndex = null, _i = 0; _i < children.length; children.length === t1 || (0, H.throwConcurrentModificationError)(children), ++_i) {
        child = children[_i];
        t2 = child.tags;
        if (t2 != null && t2.contains$1(0, C.SemanticsTag_bQQ))
          excluded.push(child);
        else {
          if ((child._flags & 8192) === 0)
            firstVisibleIndex = firstVisibleIndex == null ? child.indexInParent : firstVisibleIndex;
          included.push(child);
        }
      }
      config.set$scrollIndex(firstVisibleIndex);
      node.updateWith$2$childrenInInversePaintOrder$config(0, excluded, null);
      _this._innerNode.updateWith$2$childrenInInversePaintOrder$config(0, included, config);
    },
    clearSemantics$0: function() {
      this.super$RenderObject$clearSemantics();
      this._innerNode = null;
    }
  };
  F.ScrollIncrementType.prototype = {
    toString$0: function(_) {
      return this._scrollable$_name;
    }
  };
  F.ScrollIntent.prototype = {};
  F.ScrollAction.prototype = {
    isEnabled$1: function(_, intent) {
      var t1,
        $focus = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      if ($focus != null) {
        t1 = $focus._context;
        t1 = t1 != null && F.Scrollable_of(t1) != null;
      } else
        t1 = false;
      return t1;
    },
    _calculateScrollIncrement$2$type: function(state, type) {
      state._widget.toString;
      switch (type) {
        case C.ScrollIncrementType_0:
          return 50;
        case C.ScrollIncrementType_1:
          return 0.8 * state._scrollable$_position._viewportDimension;
      }
      return 0;
    },
    _getIncrement$2: function(state, intent) {
      var increment = this._calculateScrollIncrement$2$type(state, intent.type);
      switch (intent.direction) {
        case C.AxisDirection_2:
          switch (state._widget.axisDirection) {
            case C.AxisDirection_0:
              return -increment;
            case C.AxisDirection_2:
              return increment;
            case C.AxisDirection_1:
            case C.AxisDirection_3:
              return 0;
          }
          break;
        case C.AxisDirection_0:
          switch (state._widget.axisDirection) {
            case C.AxisDirection_0:
              return increment;
            case C.AxisDirection_2:
              return -increment;
            case C.AxisDirection_1:
            case C.AxisDirection_3:
              return 0;
          }
          break;
        case C.AxisDirection_3:
          switch (state._widget.axisDirection) {
            case C.AxisDirection_1:
              return -increment;
            case C.AxisDirection_3:
              return increment;
            case C.AxisDirection_0:
            case C.AxisDirection_2:
              return 0;
          }
          break;
        case C.AxisDirection_1:
          switch (state._widget.axisDirection) {
            case C.AxisDirection_1:
              return increment;
            case C.AxisDirection_3:
              return -increment;
            case C.AxisDirection_0:
            case C.AxisDirection_2:
              return 0;
          }
          break;
      }
      return 0;
    },
    invoke$1: function(intent) {
      var increment,
        state = F.Scrollable_of($.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context),
        t1 = state._widget.physics;
      if (t1 != null && !t1.shouldAcceptUserOffset$1(state._scrollable$_position))
        return;
      increment = this._getIncrement$2(state, intent);
      if (increment === 0)
        return;
      t1 = state._scrollable$_position;
      t1.moveTo$3$curve$duration(0, t1._pixels + increment, C.Cubic_xDo, C.Duration_100000);
    }
  };
  F._ScrollableState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function() {
      this.super$State$dispose();
    },
    didChangeDependencies$0: function() {
      var muted = !U.TickerMode_of(this._framework$_element),
        t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)
          t1._collection$_current.set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  E.ScrollbarPainter.prototype = {
    set$color: function(_, value) {
      if (J.$eq$(this._scrollbar1$_color, value))
        return;
      this._scrollbar1$_color = value;
      this.notifyListeners$0();
    },
    set$textDirection: function(value) {
      if (this._scrollbar1$_textDirection == value)
        return;
      this._scrollbar1$_textDirection = value;
      this.notifyListeners$0();
    },
    set$padding: function(_, value) {
      if (this._scrollbar1$_padding.$eq(0, value))
        return;
      this._scrollbar1$_padding = value;
      this.notifyListeners$0();
    },
    get$_scrollbar1$_paint: function() {
      var t1 = new H.SurfacePaint(new H.SurfacePaintData()),
        t2 = this._scrollbar1$_color,
        t3 = this.fadeoutOpacityAnimation;
      t1.set$color(0, P.Color$fromARGB(C.JSNumber_methods.round$0(255 * (((4278190080 & t2.get$value(t2)) >>> 24) / 255 * t3.get$value(t3))), (16711680 & t2.get$value(t2)) >>> 16, (65280 & t2.get$value(t2)) >>> 8, (255 & t2.get$value(t2)) >>> 0));
      return t1;
    },
    _thumbExtent$0: function() {
      var t4, t5, t6, t7, fractionVisible, thumbExtent, safeMinLength, newMinLength, _this = this,
        t1 = _this._lastMetrics.get$extentInside(),
        t2 = _this.get$_isVertical(),
        t3 = _this._scrollbar1$_padding;
      t2 = t2 ? t3.get$_top(t3) + t3.get$_bottom(t3) : t3.get$horizontal();
      t3 = _this._lastMetrics;
      t4 = t3.maxScrollExtent;
      t5 = t3.minScrollExtent;
      t3 = t3.viewportDimension;
      t6 = _this.get$_isVertical();
      t7 = _this._scrollbar1$_padding;
      t6 = t6 ? t7.get$_top(t7) + t7.get$_bottom(t7) : t7.get$horizontal();
      fractionVisible = C.JSDouble_methods.clamp$2((t1 - t2) / (t4 - t5 + t3 - t6), 0, 1);
      thumbExtent = Math.max(Math.min(_this.get$_trackExtent(), _this.minOverscrollLength), _this.get$_trackExtent() * fractionVisible);
      t6 = _this._lastMetrics.get$extentInside();
      t3 = _this._lastMetrics.viewportDimension;
      safeMinLength = Math.min(_this.minLength, _this.get$_trackExtent());
      t1 = _this.get$_isReversed();
      t2 = _this._lastMetrics;
      if ((t1 ? Math.max(t2.maxScrollExtent - t2.pixels, 0) : Math.max(t2.pixels - t2.minScrollExtent, 0)) > 0) {
        t1 = _this.get$_isReversed();
        t2 = _this._lastMetrics;
        t2 = (t1 ? Math.max(t2.pixels - t2.minScrollExtent, 0) : Math.max(t2.maxScrollExtent - t2.pixels, 0)) > 0;
        t1 = t2;
      } else
        t1 = false;
      newMinLength = t1 ? safeMinLength : safeMinLength * (1 - C.JSNumber_methods.clamp$2(1 - t6 / t3, 0, 0.2) / 0.2);
      return C.JSNumber_methods.clamp$2(thumbExtent, newMinLength, _this.get$_trackExtent());
    },
    get$_isVertical: function() {
      var t1 = this._lastAxisDirection;
      return t1 === C.AxisDirection_2 || t1 === C.AxisDirection_0;
    },
    get$_isReversed: function() {
      var t1 = this._lastAxisDirection;
      return t1 === C.AxisDirection_0 || t1 === C.AxisDirection_3;
    },
    get$_trackExtent: function() {
      var _this = this,
        t1 = _this._lastMetrics.viewportDimension,
        t2 = _this.get$_isVertical(),
        t3 = _this._scrollbar1$_padding;
      t2 = t2 ? t3.get$_top(t3) + t3.get$_bottom(t3) : t3.get$horizontal();
      return t1 - 2 * _this.mainAxisMargin - t2;
    },
    getTrackToScroll$1: function(thumbOffsetLocal) {
      var t1 = this._lastMetrics;
      return (t1.maxScrollExtent - t1.minScrollExtent) * thumbOffsetLocal / (this.get$_trackExtent() - this._thumbExtent$0());
    },
    paint$2: function(canvas, size) {
      var t1, t2, t3, beforePadding, thumbExtent, scrollableExtent, fractionPast, thumbOffset, thumbSize, t4, x, y, _this = this, _null = null;
      if (_this._lastAxisDirection != null)
        if (_this._lastMetrics != null) {
          t1 = _this.fadeoutOpacityAnimation;
          t1 = t1.get$value(t1) === 0;
        } else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return;
      t1 = _this._lastMetrics.viewportDimension;
      t2 = _this.get$_isVertical();
      t3 = _this._scrollbar1$_padding;
      if (t1 <= (t2 ? t3.get$_top(t3) + t3.get$_bottom(t3) : t3.get$horizontal()) || _this.get$_trackExtent() <= 0)
        return;
      t1 = _this.get$_isVertical();
      t2 = _this._scrollbar1$_padding;
      beforePadding = t1 ? t2.top : t2.left;
      thumbExtent = _this._thumbExtent$0();
      t1 = _this._lastMetrics;
      t2 = t1.maxScrollExtent;
      t3 = t1.minScrollExtent;
      scrollableExtent = t2 - t3;
      fractionPast = scrollableExtent > 0 ? C.JSDouble_methods.clamp$2((t1.pixels - t3) / scrollableExtent, 0, 1) : 0;
      t1 = _this.get$_isReversed() ? 1 - fractionPast : fractionPast;
      thumbOffset = t1 * (_this.get$_trackExtent() - thumbExtent) + _this.mainAxisMargin + beforePadding;
      switch (_this._lastAxisDirection) {
        case C.AxisDirection_2:
          t1 = _this.thickness;
          thumbSize = new P.Size(t1, thumbExtent);
          t2 = _this._scrollbar1$_textDirection;
          t3 = _this.crossAxisMargin;
          t4 = _this._scrollbar1$_padding;
          x = t2 === C.TextDirection_0 ? t3 + t4.left : size._dx - t1 - t3 - t4.right;
          y = thumbOffset;
          break;
        case C.AxisDirection_0:
          t1 = _this.thickness;
          thumbSize = new P.Size(t1, thumbExtent);
          t2 = _this._scrollbar1$_textDirection;
          t3 = _this.crossAxisMargin;
          t4 = _this._scrollbar1$_padding;
          x = t2 === C.TextDirection_0 ? t3 + t4.left : size._dx - t1 - t3 - t4.right;
          y = thumbOffset;
          break;
        case C.AxisDirection_3:
          t1 = _this.thickness;
          thumbSize = new P.Size(thumbExtent, t1);
          y = size._dy - t1 - _this.crossAxisMargin - _this._scrollbar1$_padding.bottom;
          x = thumbOffset;
          break;
        case C.AxisDirection_1:
          t1 = _this.thickness;
          thumbSize = new P.Size(thumbExtent, t1);
          y = size._dy - t1 - _this.crossAxisMargin - _this._scrollbar1$_padding.bottom;
          x = thumbOffset;
          break;
        default:
          thumbSize = _null;
          y = thumbSize;
          x = y;
      }
      t1 = _this._thumbRect = new P.Rect(x, y, x + thumbSize._dx, y + thumbSize._dy);
      t2 = _this.radius;
      if (t2 == null)
        canvas.drawRect$2(t1, _this.get$_scrollbar1$_paint());
      else
        canvas.drawRRect$2(P.RRect$fromRectAndRadius(t1, t2), _this.get$_scrollbar1$_paint());
      return _null;
    },
    hitTestInteractive$1: function(position) {
      var t1;
      if (this._thumbRect == null)
        return false;
      t1 = this.fadeoutOpacityAnimation;
      if (t1.get$value(t1) === 0)
        return false;
      t1 = this._thumbRect;
      return t1.expandToInclude$1(P.Rect$fromCircle(t1.get$center(), 24)).contains$1(0, position);
    },
    hitTest$1: function(position) {
      var t1;
      if (this._thumbRect == null)
        return null;
      t1 = this.fadeoutOpacityAnimation;
      if (t1.get$value(t1) === 0)
        return false;
      return this._thumbRect.contains$1(0, position);
    },
    shouldRepaint$1: function(old) {
      var _this = this;
      return !J.$eq$(_this._scrollbar1$_color, old._scrollbar1$_color) || _this._scrollbar1$_textDirection != old._scrollbar1$_textDirection || _this.thickness !== old.thickness || _this.fadeoutOpacityAnimation != old.fadeoutOpacityAnimation || _this.mainAxisMargin !== old.mainAxisMargin || _this.crossAxisMargin !== old.crossAxisMargin || !J.$eq$(_this.radius, old.radius) || _this.minLength !== old.minLength || !_this._scrollbar1$_padding.$eq(0, old._scrollbar1$_padding);
    },
    shouldRebuildSemantics$1: function(oldDelegate) {
      return false;
    },
    get$semanticsBuilder: function() {
      return null;
    }
  };
  X.KeySet.prototype = {
    KeySet$4: function(key1, key2, key3, key4, _box_0, $T) {
      _box_0.count = 1;
      if (key2 != null)
        this._shortcuts$_keys.add$1(0, key2);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.get$runtimeType$(other).$eq(0, H.getRuntimeType(this)))
        return false;
      return H._instanceType(this)._eval$1("KeySet<KeySet.T>")._is(other) && S.setEquals(other._shortcuts$_keys, this._shortcuts$_keys);
    },
    get$hashCode: function(_) {
      var $length, iterator, h1, h2, sortedHashes, _this = this,
        t1 = _this._hashCode;
      if (t1 != null)
        return t1;
      t1 = _this._shortcuts$_keys;
      $length = t1._collection$_length;
      iterator = new P._HashSetIterator(t1, t1._computeElements$0());
      iterator.moveNext$0();
      h1 = J.get$hashCode$(iterator._collection$_current);
      if ($length === 1)
        return _this._hashCode = h1;
      iterator.moveNext$0();
      h2 = J.get$hashCode$(iterator._collection$_current);
      if ($length === 2)
        return _this._hashCode = h1 < h2 ? P.hashValues(h1, h2, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd) : P.hashValues(h2, h1, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
      sortedHashes = $length === 3 ? $.KeySet__tempHashStore3 : $.KeySet__tempHashStore4;
      sortedHashes[0] = h1;
      sortedHashes[1] = h2;
      iterator.moveNext$0();
      sortedHashes[2] = J.get$hashCode$(iterator._collection$_current);
      if ($length === 4) {
        iterator.moveNext$0();
        sortedHashes[3] = J.get$hashCode$(iterator._collection$_current);
      }
      C.JSArray_methods.sort$0(sortedHashes);
      return _this._hashCode = P.hashList(sortedHashes);
    }
  };
  X.LogicalKeySet.prototype = {};
  X.ShortcutManager.prototype = {
    set$shortcuts: function(value) {
      if (!S.mapEquals(this._shortcuts, value)) {
        this._shortcuts = value;
        this.notifyListeners$0();
      }
    },
    handleKeypress$2: function(context, $event) {
      var t1, keySet, matchedIntent, pseudoKeys, t2, t3, result, synonyms, primaryContext;
      if (!($event instanceof B.RawKeyDownEvent))
        return false;
      t1 = $.$get$RawKeyboard_instance();
      t1 = t1._keysPressed;
      t1 = t1.get$values(t1);
      keySet = new X.LogicalKeySet(P.HashSet_HashSet$from(P.LinkedHashSet_LinkedHashSet$from(t1, H._instanceType(t1)._eval$1("Iterable.E")), type$.LogicalKeyboardKey));
      matchedIntent = this._shortcuts.$index(0, keySet);
      if (matchedIntent == null) {
        t1 = type$.LogicalKeyboardKey;
        pseudoKeys = P.LinkedHashSet_LinkedHashSet$_empty(t1);
        for (t2 = keySet._shortcuts$_keys, t2 = t2.get$iterator(t2); t2.moveNext$0();) {
          t3 = t2.get$current(t2);
          t3.toString;
          result = $.LogicalKeyboardKey__synonyms.$index(0, t3);
          synonyms = result == null ? P.LinkedHashSet_LinkedHashSet$_empty(t1) : P.LinkedHashSet_LinkedHashSet$_literal([result], t1);
          if (synonyms._collection$_length !== 0) {
            t3 = synonyms._collection$_first;
            if (t3 == null)
              H.throwExpression(P.StateError$("No elements"));
            pseudoKeys.add$1(0, t3._element);
          } else
            pseudoKeys.add$1(0, t3);
        }
        matchedIntent = this._shortcuts.$index(0, new X.LogicalKeySet(P.HashSet_HashSet$from(pseudoKeys, t1)));
      }
      if (matchedIntent != null) {
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
        primaryContext = t1 == null ? null : t1._context;
        U.Actions_invoke(primaryContext, matchedIntent, true, type$.Intent);
        return true;
      }
      return false;
    }
  };
  X.Shortcuts.prototype = {
    createState$0: function() {
      return new X._ShortcutsState(C._StateLifecycle_0);
    }
  };
  X._ShortcutsState.prototype = {
    get$manager: function() {
      this._widget.toString;
      var t1 = this._internalManager;
      return t1;
    },
    dispose$0: function() {
      var t1 = this._internalManager;
      if (t1 != null)
        t1.ChangeNotifier__listeners = null;
      this.super$State$dispose();
    },
    initState$0: function() {
      var _this = this;
      _this.super$State$initState();
      _this._widget.toString;
      _this._internalManager = new X.ShortcutManager(C.Map_empty1, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      _this.get$manager().set$shortcuts(_this._widget.shortcuts);
    },
    didUpdateWidget$1: function(oldWidget) {
      var _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      _this._widget.toString;
      oldWidget.toString;
      _this.get$manager().set$shortcuts(_this._widget.shortcuts);
    },
    _handleOnKey$2: function(node, $event) {
      var t1;
      if (node._context == null)
        return false;
      if (!this.get$manager().handleKeypress$2(node._context, $event)) {
        this.get$manager().toString;
        t1 = false;
      } else
        t1 = true;
      return t1;
    },
    build$1: function(context) {
      var _null = null,
        t1 = C.Type_Shortcuts_6TW.toString$0(0);
      return L.Focus$(false, false, new X._ShortcutsMarker(this.get$manager(), this._widget.child, _null), t1, _null, true, _null, _null, this.get$_handleOnKey(), _null);
    }
  };
  X._ShortcutsMarker.prototype = {};
  X._LogicalKeySet_KeySet_Diagnosticable.prototype = {};
  X._ShortcutManager_ChangeNotifier_Diagnosticable.prototype = {};
  E.SingleChildScrollView.prototype = {
    build$1: function(context) {
      var t2, scrollController, scrollable, _this = this, _null = null, t1 = {},
        axisDirection = T.getAxisDirectionFromAxisReverseAndDirectionality(context, _this.scrollDirection, false);
      t1.contents = _this.child;
      t2 = _this.primary;
      scrollController = t2 ? E.PrimaryScrollController_of(context) : _this.controller;
      scrollable = F.Scrollable$(axisDirection, scrollController, _this.dragStartBehavior, _null, _null, new E.SingleChildScrollView_build_closure(t1, axisDirection));
      return t2 && scrollController != null ? new E.PrimaryScrollController(_null, scrollable, _null) : scrollable;
    }
  };
  E.SingleChildScrollView_build_closure.prototype = {
    call$2: function(context, offset) {
      return new E._SingleChildViewport(this.axisDirection, offset, this._box_0.contents, null);
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  E._SingleChildViewport.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E._RenderSingleChildViewport(this.axisDirection, this.offset, null);
      t1.get$isRepaintBoundary();
      t1._needsCompositing = true;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$axisDirection(this.axisDirection);
      renderObject.set$offset(0, this.offset);
    }
  };
  E._RenderSingleChildViewport.prototype = {
    set$axisDirection: function(value) {
      if (value == this._single_child_scroll_view$_axisDirection)
        return;
      this._single_child_scroll_view$_axisDirection = value;
      this.markNeedsLayout$0();
    },
    set$offset: function(_, value) {
      var _this = this,
        t1 = _this._single_child_scroll_view$_offset;
      if (value == t1)
        return;
      if (_this._node$_owner != null)
        t1.ChangeNotifier__listeners.remove$1(0, _this.get$_hasScrolled());
      _this._single_child_scroll_view$_offset = value;
      if (_this._node$_owner != null) {
        t1 = value.ChangeNotifier__listeners;
        t1._isDirty = true;
        t1._list.push(_this.get$_hasScrolled());
      }
      _this.markNeedsLayout$0();
    },
    _hasScrolled$0: function() {
      this.markNeedsPaint$0();
      this.markNeedsSemanticsUpdate$0();
    },
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof K.ParentData))
        child.parentData = new K.ParentData();
    },
    attach$1: function(owner) {
      var t1;
      this.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$attach(owner);
      t1 = this._single_child_scroll_view$_offset.ChangeNotifier__listeners;
      t1._isDirty = true;
      t1._list.push(this.get$_hasScrolled());
    },
    detach$0: function(_) {
      this._single_child_scroll_view$_offset.ChangeNotifier__listeners.remove$1(0, this.get$_hasScrolled());
      this.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    get$isRepaintBoundary: function() {
      return true;
    },
    get$_viewportExtent: function() {
      switch (G.axisDirectionToAxis(this._single_child_scroll_view$_axisDirection)) {
        case C.Axis_0:
          return this._size._dx;
        case C.Axis_1:
          return this._size._dy;
      }
      return null;
    },
    get$_single_child_scroll_view$_maxScrollExtent: function() {
      var _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 == null)
        return 0;
      switch (G.axisDirectionToAxis(_this._single_child_scroll_view$_axisDirection)) {
        case C.Axis_0:
          return Math.max(0, t1._size._dx - _this._size._dx);
        case C.Axis_1:
          return Math.max(0, t1._size._dy - _this._size._dy);
      }
      return null;
    },
    _getInnerConstraints$1: function(constraints) {
      switch (G.axisDirectionToAxis(this._single_child_scroll_view$_axisDirection)) {
        case C.Axis_0:
          return new S.BoxConstraints(0, 1 / 0, constraints.minHeight, constraints.maxHeight);
        case C.Axis_1:
          return new S.BoxConstraints(constraints.minWidth, constraints.maxWidth, 0, 1 / 0);
      }
      return null;
    },
    performLayout$0: function() {
      var _this = this,
        constraints = type$.BoxConstraints._as(K.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 == null)
        _this._size = new P.Size(C.JSInt_methods.clamp$2(0, constraints.minWidth, constraints.maxWidth), C.JSInt_methods.clamp$2(0, constraints.minHeight, constraints.maxHeight));
      else {
        t1.layout$2$parentUsesSize(_this._getInnerConstraints$1(constraints), true);
        _this._size = constraints.constrain$1(_this.RenderObjectWithChildMixin__child._size);
      }
      _this._single_child_scroll_view$_offset.applyViewportDimension$1(_this.get$_viewportExtent());
      _this._single_child_scroll_view$_offset.applyContentDimensions$2(0, _this.get$_single_child_scroll_view$_maxScrollExtent());
    },
    _paintOffsetForPosition$1: function(position) {
      var _this = this;
      switch (_this._single_child_scroll_view$_axisDirection) {
        case C.AxisDirection_0:
          return new P.Offset(0, position - _this.RenderObjectWithChildMixin__child._size._dy + _this._size._dy);
        case C.AxisDirection_2:
          return new P.Offset(0, -position);
        case C.AxisDirection_3:
          return new P.Offset(position - _this.RenderObjectWithChildMixin__child._size._dx + _this._size._dx, 0);
        case C.AxisDirection_1:
          return new P.Offset(-position, 0);
      }
      return null;
    },
    _shouldClipAtPaintOffset$1: function(paintOffset) {
      var t1, t2, t3, t4, t5;
      if (!paintOffset.$lt(0, C.Offset_0_0)) {
        t1 = this._size;
        t2 = t1._dx;
        t1 = t1._dy;
        t3 = this.RenderObjectWithChildMixin__child._size;
        t4 = paintOffset._dx;
        t5 = paintOffset._dy;
        t3 = !new P.Rect(0, 0, 0 + t2, 0 + t1).contains$1(0, new P.Offset(t4 + t3._dx, t5 + t3._dy));
        t1 = t3;
      } else
        t1 = true;
      return t1;
    },
    paint$2: function(context, offset) {
      var paintOffset, t1, t2, t3, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        paintOffset = _this._paintOffsetForPosition$1(_this._single_child_scroll_view$_offset._pixels);
        t1 = new E._RenderSingleChildViewport_paint_paintContents(_this, paintOffset);
        if (_this._shouldClipAtPaintOffset$1(paintOffset)) {
          t2 = _this._needsCompositing;
          t3 = _this._size;
          context.pushClipRect$4(t2, offset, new P.Rect(0, 0, 0 + t3._dx, 0 + t3._dy), t1);
        } else
          t1.call$2(context, offset);
      }
    },
    applyPaintTransform$2: function(child, transform) {
      var paintOffset = this._paintOffsetForPosition$1(this._single_child_scroll_view$_offset._pixels);
      transform.translate$2(0, paintOffset._dx, paintOffset._dy);
    },
    describeApproximatePaintClip$1: function(child) {
      var t1, _this = this;
      if (child != null && _this._shouldClipAtPaintOffset$1(_this._paintOffsetForPosition$1(_this._single_child_scroll_view$_offset._pixels))) {
        t1 = _this._size;
        return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      return null;
    },
    hitTestChildren$2$position: function(result, position) {
      var _this = this;
      if (_this.RenderObjectWithChildMixin__child != null)
        return result.addWithPaintOffset$3$hitTest$offset$position(new E._RenderSingleChildViewport_hitTestChildren_closure(_this, position), _this._paintOffsetForPosition$1(_this._single_child_scroll_view$_offset._pixels), position);
      return false;
    },
    getOffsetToReveal$3$rect: function(target, alignment, rect) {
      var bounds, contentSize, mainAxisExtent, t1, leadingScrollOffset, targetMainAxisExtent, targetOffset, _this = this;
      if (rect == null)
        rect = target.get$paintBounds();
      if (!(target instanceof S.RenderBox))
        return new Q.RevealedOffset(_this._single_child_scroll_view$_offset._pixels, rect);
      bounds = T.MatrixUtils_transformRect(target.getTransformTo$1(0, _this.RenderObjectWithChildMixin__child), rect);
      contentSize = _this.RenderObjectWithChildMixin__child._size;
      switch (_this._single_child_scroll_view$_axisDirection) {
        case C.AxisDirection_0:
          mainAxisExtent = _this._size._dy;
          t1 = bounds.bottom;
          leadingScrollOffset = contentSize._dy - t1;
          targetMainAxisExtent = t1 - bounds.top;
          break;
        case C.AxisDirection_1:
          mainAxisExtent = _this._size._dx;
          leadingScrollOffset = bounds.left;
          targetMainAxisExtent = bounds.right - leadingScrollOffset;
          break;
        case C.AxisDirection_2:
          mainAxisExtent = _this._size._dy;
          leadingScrollOffset = bounds.top;
          targetMainAxisExtent = bounds.bottom - leadingScrollOffset;
          break;
        case C.AxisDirection_3:
          mainAxisExtent = _this._size._dx;
          t1 = bounds.right;
          leadingScrollOffset = contentSize._dx - t1;
          targetMainAxisExtent = t1 - bounds.left;
          break;
        default:
          leadingScrollOffset = null;
          targetMainAxisExtent = null;
          mainAxisExtent = null;
      }
      targetOffset = leadingScrollOffset - (mainAxisExtent - targetMainAxisExtent) * alignment;
      return new Q.RevealedOffset(targetOffset, bounds.shift$1(_this._paintOffsetForPosition$1(targetOffset)));
    },
    getOffsetToReveal$2: function(target, alignment) {
      return this.getOffsetToReveal$3$rect(target, alignment, null);
    },
    showOnScreen$4$curve$descendant$duration$rect: function(curve, descendant, duration, rect) {
      var _this = this;
      if (!_this._single_child_scroll_view$_offset.physics.get$allowImplicitScrolling())
        return _this.super$RenderObject$showOnScreen(curve, descendant, duration, rect);
      _this.super$RenderObject$showOnScreen(curve, null, duration, Q.RenderViewportBase_showInViewport(curve, descendant, duration, _this._single_child_scroll_view$_offset, rect, _this));
    },
    showOnScreen$0: function() {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_JUR, null, C.Duration_0, null);
    },
    describeSemanticsClip$1: function(child) {
      var t1;
      switch (G.axisDirectionToAxis(this._single_child_scroll_view$_axisDirection)) {
        case C.Axis_1:
          t1 = this._size;
          return new P.Rect(0, -250, 0 + t1._dx, 0 + t1._dy + 250);
        case C.Axis_0:
          t1 = this._size;
          return new P.Rect(-250, 0, 0 + t1._dx + 250, 0 + t1._dy);
      }
      return null;
    },
    $isRenderAbstractViewport: 1
  };
  E._RenderSingleChildViewport_paint_paintContents.prototype = {
    call$2: function(context, offset) {
      context.paintChild$2(this.$this.RenderObjectWithChildMixin__child, offset.$add(0, this.paintOffset));
    }
  };
  E._RenderSingleChildViewport_hitTestChildren_closure.prototype = {
    call$2: function(result, transformed) {
      return this.$this.RenderObjectWithChildMixin__child.hitTest$2$position(result, transformed);
    }
  };
  E.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1: function(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0: function(_) {
      var t1;
      this.super$AbstractNode$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  G.SliverChildDelegate.prototype = {
    get$estimatedChildCount: function() {
      return null;
    },
    toString$0: function(_) {
      var description = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.debugFillDescription$1(description);
      return "<optimized out>#" + Y.shortHash(this) + "(" + C.JSArray_methods.join$1(description, ", ") + ")";
    },
    debugFillDescription$1: function(description) {
      var children, e, exception;
      try {
        children = this.get$estimatedChildCount();
        if (children != null)
          description.push("estimated child count: " + H.S(children));
      } catch (exception) {
        e = H.unwrapException(exception);
        description.push("estimated child count: EXCEPTION (" + J.get$runtimeType$(e).toString$0(0) + ")");
      }
    }
  };
  G._SaltedValueKey.prototype = {};
  G.SliverChildBuilderDelegate.prototype = {
    findIndexByKey$1: function(key) {
      return null;
    },
    build$2: function(context, index) {
      var child, exception, stackTrace, t1, exception0, details, key, semanticIndex, _null = null;
      if (!(index < 0)) {
        t1 = this.childCount;
        t1 = t1 != null && index >= t1;
      } else
        t1 = true;
      if (t1)
        return _null;
      child = null;
      try {
        child = this.builder.call$2(context, index);
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        stackTrace = H.getTraceFromException(exception0);
        details = U.FlutterErrorDetails$(new U.ErrorDescription(_null, false, true, _null, _null, _null, false, ["building"], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7), exception, _null, "widgets library", false, stackTrace);
        $.$get$FlutterError_onError().call$1(details);
        child = N.ErrorWidget__defaultErrorWidgetBuilder(details);
      }
      if (child == null)
        return _null;
      key = child.key != null ? new G._SaltedValueKey(child.key) : _null;
      t1 = child;
      child = new T.RepaintBoundary(t1, _null);
      semanticIndex = G._kDefaultSemanticIndexCallback(child, index);
      if (semanticIndex != null)
        child = new T.IndexedSemantics(semanticIndex, child, _null);
      t1 = child;
      child = new L.AutomaticKeepAlive(t1, _null);
      return new T.KeyedSubtree(child, key);
    },
    get$estimatedChildCount: function() {
      return this.childCount;
    },
    shouldRebuild$1: function(oldDelegate) {
      return true;
    }
  };
  G.SliverChildListDelegate.prototype = {
    _findChildIndex$1: function(key) {
      var index, t2, t3, _null = null,
        t1 = this._keyToIndex;
      if (!t1.containsKey$1(0, key)) {
        index = t1.$index(0, _null);
        for (t2 = this.children; index < t2.length;) {
          t3 = t2[index].key;
          if (t3 != null)
            t1.$indexSet(0, t3, index);
          if (J.$eq$(t3, key)) {
            t1.$indexSet(0, _null, index + 1);
            return index;
          }
          ++index;
        }
        t1.$indexSet(0, _null, index);
      } else
        return t1.$index(0, key);
      return _null;
    },
    findIndexByKey$1: function(key) {
      return this._findChildIndex$1(key instanceof G._SaltedValueKey ? key.value : key);
    },
    build$2: function(context, index) {
      var child, t1, key, semanticIndex, _null = null;
      if (index < 0 || index >= this.children.length)
        return _null;
      child = this.children[index];
      t1 = child.key;
      key = t1 != null ? new G._SaltedValueKey(t1) : _null;
      child = new T.RepaintBoundary(child, _null);
      semanticIndex = G._kDefaultSemanticIndexCallback(child, index);
      if (semanticIndex != null)
        child = new T.IndexedSemantics(semanticIndex, child, _null);
      return new T.KeyedSubtree(new L.AutomaticKeepAlive(child, _null), key);
    },
    get$estimatedChildCount: function() {
      return this.children.length;
    },
    shouldRebuild$1: function(oldDelegate) {
      var t1 = this.children,
        t2 = oldDelegate.children;
      return t1 == null ? t2 != null : t1 !== t2;
    }
  };
  G.SliverWithKeepAliveWidget.prototype = {};
  G.SliverMultiBoxAdaptorWidget.prototype = {
    createElement$0: function(_) {
      var t4,
        t1 = type$.int,
        t2 = P.HashMap_HashMap(t1, type$.Widget),
        t3 = type$.Element_2;
      t1 = P.SplayTreeMap$(t1, t3);
      t4 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t4;
      return new G.SliverMultiBoxAdaptorElement(t2, t1, t4, this, C._ElementLifecycle_0, P.HashSet_HashSet(t3));
    }
  };
  G.SliverList.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new U.RenderSliverList(type$.SliverMultiBoxAdaptorElement._as(context), P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.RenderBox), 0, null, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      return t1;
    }
  };
  G.SliverFixedExtentList.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new X.RenderSliverFixedExtentList(this.itemExtent, type$.SliverMultiBoxAdaptorElement._as(context), P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.RenderBox), 0, null, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$itemExtent(this.itemExtent);
    }
  };
  G.SliverMultiBoxAdaptorElement.prototype = {
    get$widget: function() {
      return type$.SliverMultiBoxAdaptorWidget._as(N.RenderObjectElement.prototype.get$widget.call(this));
    },
    get$renderObject: function() {
      return type$.RenderSliverMultiBoxAdaptor._as(N.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    update$1: function(_, newWidget) {
      var newDelegate, oldDelegate, t1,
        oldWidget = type$.SliverMultiBoxAdaptorWidget._as(N.RenderObjectElement.prototype.get$widget.call(this));
      this.super$RenderObjectElement$update(0, newWidget);
      newDelegate = newWidget.delegate;
      oldDelegate = oldWidget.delegate;
      if (newDelegate !== oldDelegate)
        t1 = !H.getRuntimeType(newDelegate).$eq(0, H.getRuntimeType(oldDelegate)) || newDelegate.shouldRebuild$1(oldDelegate);
      else
        t1 = false;
      if (t1)
        this.performRebuild$0();
    },
    performRebuild$0: function() {
      var newChildren, indexToLayoutOffset, processElement, index, key, newIndex, childParentData, lastKey, rightBoundary, t1, t2, t3, t4, t5, _i, t6, lastKey0, _this = this;
      _this._childWidgets.clear$0(0);
      _this.super$RenderObjectElement$performRebuild();
      _this._currentBeforeChild = null;
      try {
        t1 = type$.int;
        newChildren = P.SplayTreeMap$(t1, type$.Element_2);
        indexToLayoutOffset = P.HashMap_HashMap(t1, type$.double);
        processElement = new G.SliverMultiBoxAdaptorElement_performRebuild_processElement(_this, newChildren, indexToLayoutOffset);
        for (t1 = _this._childElements, t2 = t1.$ti._eval$1("_SplayTreeKeyIterable<1>"), t2 = P.List_List$from(new P._SplayTreeKeyIterable(t1, t2), true, t2._eval$1("Iterable.E")), t3 = t2.length, t4 = type$.SliverMultiBoxAdaptorParentData, t5 = type$.SliverMultiBoxAdaptorWidget, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
          index = t2[_i];
          key = t1.$index(0, index).get$widget().key;
          newIndex = key == null ? null : t5._as(N.RenderObjectElement.prototype.get$widget.call(_this)).delegate.findIndexByKey$1(key);
          t6 = t1.$index(0, index).get$renderObject();
          childParentData = t4._as(t6 == null ? null : t6.parentData);
          if (childParentData != null && childParentData.layoutOffset != null)
            J.$indexSet$ax(indexToLayoutOffset, index, childParentData.layoutOffset);
          if (newIndex != null && !J.$eq$(newIndex, index)) {
            if (childParentData != null)
              childParentData.layoutOffset = null;
            J.$indexSet$ax(newChildren, newIndex, t1.$index(0, index));
            J.putIfAbsent$2$x(newChildren, index, new G.SliverMultiBoxAdaptorElement_performRebuild_closure());
            t1.remove$1(0, index);
          } else
            J.putIfAbsent$2$x(newChildren, index, new G.SliverMultiBoxAdaptorElement_performRebuild_closure0(_this, index));
        }
        type$.RenderSliverMultiBoxAdaptor._as(N.RenderObjectElement.prototype.get$renderObject.call(_this)).toString;
        t2 = newChildren;
        new P._SplayTreeKeyIterable(t2, H.instanceType(t2)._eval$1("_SplayTreeKeyIterable<1>")).forEach$1(0, processElement);
        if (_this._didUnderflow) {
          lastKey0 = t1.lastKey$0();
          lastKey = lastKey0 == null ? -1 : lastKey0;
          rightBoundary = lastKey + 1;
          J.$indexSet$ax(newChildren, rightBoundary, t1.$index(0, rightBoundary));
          processElement.call$1(rightBoundary);
        }
      } finally {
        _this._currentlyUpdatingChildIndex = null;
        type$.RenderSliverMultiBoxAdaptor._as(N.RenderObjectElement.prototype.get$renderObject.call(_this)).toString;
      }
    },
    _build$1: function(index) {
      return this._childWidgets.putIfAbsent$2(0, index, new G.SliverMultiBoxAdaptorElement__build_closure(this, index));
    },
    createChild$2$after: function(index, after) {
      this._owner.buildScope$2(this, new G.SliverMultiBoxAdaptorElement_createChild_closure(this, after, index));
    },
    updateChild$3: function(child, newWidget, newSlot) {
      var t2, newChild, t3, newParentData, _null = null,
        t1 = child == null ? _null : child.get$renderObject();
      t1 = t1 == null ? _null : t1.parentData;
      t2 = type$.SliverMultiBoxAdaptorParentData;
      t2._as(t1);
      newChild = this.super$Element$updateChild(child, newWidget, newSlot);
      t3 = newChild == null ? _null : newChild.get$renderObject();
      newParentData = t2._as(t3 == null ? _null : t3.parentData);
      if (t1 != newParentData && t1 != null && newParentData != null)
        newParentData.layoutOffset = t1.layoutOffset;
      return newChild;
    },
    forgetChild$1: function(child) {
      this._childElements.remove$1(0, child._slot);
      this.super$Element$forgetChild(child);
    },
    removeChild$1: function(child) {
      var index, _this = this;
      type$.RenderSliverMultiBoxAdaptor._as(N.RenderObjectElement.prototype.get$renderObject.call(_this)).toString;
      index = type$.SliverMultiBoxAdaptorParentData._as(child.parentData).index;
      _this._owner.buildScope$2(_this, new G.SliverMultiBoxAdaptorElement_removeChild_closure(_this, index));
    },
    estimateMaxScrollOffset$5$firstIndex$lastIndex$leadingScrollOffset$trailingScrollOffset: function(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset) {
      var t1 = type$.SliverMultiBoxAdaptorWidget,
        childCount = t1._as(N.RenderObjectElement.prototype.get$widget.call(this)).delegate.get$estimatedChildCount();
      if (childCount == null)
        return 1 / 0;
      t1._as(N.RenderObjectElement.prototype.get$widget.call(this)).toString;
      t1 = G.SliverMultiBoxAdaptorElement__extrapolateMaxScrollOffset(firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset, childCount);
      return t1;
    },
    didFinishLayout$0: function() {
      var t1 = this._childElements;
      t1.firstKey$0();
      t1.lastKey$0();
      type$.SliverMultiBoxAdaptorWidget._as(N.RenderObjectElement.prototype.get$widget.call(this)).toString;
    },
    insertChildRenderObject$2: function(child, slot) {
      var t2,
        t1 = type$.RenderSliverMultiBoxAdaptor._as(N.RenderObjectElement.prototype.get$renderObject.call(this));
      type$.RenderBox._as(child);
      t2 = this._currentBeforeChild;
      t1.toString;
      t1.super$ContainerRenderObjectMixin$insert(0, child, t2);
    },
    moveChildRenderObject$2: function(child, slot) {
      type$.RenderSliverMultiBoxAdaptor._as(N.RenderObjectElement.prototype.get$renderObject.call(this)).move$2$after(type$.RenderBox._as(child), this._currentBeforeChild);
    },
    removeChildRenderObject$1: function(child) {
      type$.RenderSliverMultiBoxAdaptor._as(N.RenderObjectElement.prototype.get$renderObject.call(this)).remove$1(0, type$.RenderBox._as(child));
    },
    visitChildren$1: function(visitor) {
      var t1 = this._childElements,
        t2 = t1.$ti;
      t2 = t2._eval$1("@<1>")._bind$1(t2._rest[1])._eval$1("_SplayTreeValueIterable<1,2>");
      C.JSArray_methods.forEach$1(P.List_List$from(new P._SplayTreeValueIterable(t1, t2), true, t2._eval$1("Iterable.E")), visitor);
    }
  };
  G.SliverMultiBoxAdaptorElement_performRebuild_processElement.prototype = {
    call$1: function(index) {
      var newChild, parentData, t2, _this = this,
        t1 = _this.$this;
      t1._currentlyUpdatingChildIndex = index;
      t2 = t1._childElements;
      if (t2.$index(0, index) != null && !J.$eq$(t2.$index(0, index), _this.newChildren.$index(0, index)))
        t2.$indexSet(0, index, t1.updateChild$3(t2.$index(0, index), null, index));
      newChild = t1.updateChild$3(_this.newChildren.$index(0, index), t1._build$1(index), index);
      if (newChild != null) {
        t2.$indexSet(0, index, newChild);
        parentData = type$.SliverMultiBoxAdaptorParentData._as(newChild.get$renderObject().parentData);
        if (index === 0)
          parentData.layoutOffset = 0;
        else {
          t2 = _this.indexToLayoutOffset;
          if (t2.containsKey$1(0, index))
            parentData.layoutOffset = t2.$index(0, index);
        }
        if (!parentData._keptAlive)
          t1._currentBeforeChild = type$.RenderBox._as(newChild.get$renderObject());
      } else
        t2.remove$1(0, index);
    }
  };
  G.SliverMultiBoxAdaptorElement_performRebuild_closure.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 0
  };
  G.SliverMultiBoxAdaptorElement_performRebuild_closure0.prototype = {
    call$0: function() {
      return this.$this._childElements.$index(0, this.index);
    },
    $signature: 152
  };
  G.SliverMultiBoxAdaptorElement__build_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      return type$.SliverMultiBoxAdaptorWidget._as(N.RenderObjectElement.prototype.get$widget.call(t1)).delegate.build$2(t1, this.index);
    },
    $signature: 153
  };
  G.SliverMultiBoxAdaptorElement_createChild_closure.prototype = {
    call$0: function() {
      var newChild, t2, _this = this,
        t1 = _this.$this;
      t1._currentBeforeChild = _this.after == null ? null : type$.RenderBox._as(t1._childElements.$index(0, _this.index - 1).get$renderObject());
      newChild = null;
      try {
        t2 = t1._currentlyUpdatingChildIndex = _this.index;
        newChild = t1.updateChild$3(t1._childElements.$index(0, t2), t1._build$1(t2), t2);
      } finally {
        t1._currentlyUpdatingChildIndex = null;
      }
      t2 = _this.index;
      t1 = t1._childElements;
      if (newChild != null)
        t1.$indexSet(0, t2, newChild);
      else
        t1.remove$1(0, t2);
    },
    $signature: 0
  };
  G.SliverMultiBoxAdaptorElement_removeChild_closure.prototype = {
    call$0: function() {
      var result, t1, t2, _this = this;
      try {
        t1 = _this.$this;
        t2 = t1._currentlyUpdatingChildIndex = _this.index;
        result = t1.updateChild$3(t1._childElements.$index(0, t2), null, t2);
      } finally {
        _this.$this._currentlyUpdatingChildIndex = null;
      }
      _this.$this._childElements.remove$1(0, _this.index);
    },
    $signature: 0
  };
  G.KeepAlive.prototype = {
    applyParentData$1: function(renderObject) {
      var targetParent,
        parentData = type$.KeepAliveParentDataMixin._as(renderObject.parentData),
        t1 = this.keepAlive;
      if (parentData.KeepAliveParentDataMixin_keepAlive !== t1) {
        parentData.KeepAliveParentDataMixin_keepAlive = t1;
        targetParent = renderObject._node$_parent;
        if (targetParent instanceof K.RenderObject && !t1)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  A.SliverFillViewport.prototype = {
    build$1: function(context) {
      var t1 = this.viewportFraction,
        t2 = C.JSInt_methods.clamp$2(1 - t1, 0, 1);
      return new A._SliverFractionalPadding(t2 / 2, new A._SliverFillViewportRenderObjectWidget(t1, this.delegate, null), null);
    }
  };
  A._SliverFillViewportRenderObjectWidget.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new A.RenderSliverFillViewport(this.viewportFraction, type$.SliverMultiBoxAdaptorElement._as(context), P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.RenderBox), 0, null, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$viewportFraction(this.viewportFraction);
    }
  };
  A._SliverFractionalPadding.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new A._RenderSliverFractionalPadding(this.viewportFraction, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = false;
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$viewportFraction(this.viewportFraction);
    }
  };
  A._RenderSliverFractionalPadding.prototype = {
    set$viewportFraction: function(newValue) {
      var _this = this;
      if (_this._sliver_fill$_viewportFraction === newValue)
        return;
      _this._sliver_fill$_viewportFraction = newValue;
      _this._sliver_fill$_resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    get$resolvedPadding: function() {
      return this._sliver_fill$_resolvedPadding;
    },
    _sliver_fill$_resolve$0: function() {
      var t1, paddingValue, _this = this;
      if (_this._sliver_fill$_resolvedPadding != null && J.$eq$(_this._lastResolvedConstraints, type$.SliverConstraints._as(K.RenderObject.prototype.get$constraints.call(_this))))
        return;
      t1 = type$.SliverConstraints;
      paddingValue = t1._as(K.RenderObject.prototype.get$constraints.call(_this)).viewportMainAxisExtent * _this._sliver_fill$_viewportFraction;
      _this._lastResolvedConstraints = t1._as(K.RenderObject.prototype.get$constraints.call(_this));
      switch (G.axisDirectionToAxis(t1._as(K.RenderObject.prototype.get$constraints.call(_this)).axisDirection)) {
        case C.Axis_0:
          _this._sliver_fill$_resolvedPadding = new V.EdgeInsets(paddingValue, 0, paddingValue, 0);
          break;
        case C.Axis_1:
          _this._sliver_fill$_resolvedPadding = new V.EdgeInsets(0, paddingValue, 0, paddingValue);
          break;
      }
      return;
    },
    performLayout$0: function() {
      this._sliver_fill$_resolve$0();
      this.super$RenderSliverEdgeInsetsPadding$performLayout();
    }
  };
  L.DefaultTextStyle.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      var t1, _this = this;
      if (J.$eq$(_this.style, oldWidget.style))
        if (_this.softWrap === oldWidget.softWrap)
          if (_this.overflow === oldWidget.overflow)
            t1 = _this.textWidthBasis !== oldWidget.textWidthBasis || false;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    }
  };
  L.Text.prototype = {
    build$1: function(context) {
      var effectiveTextStyle, t2, t3, t4, t5, result, _this = this, _null = null,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
      if (t1 == null)
        t1 = C.DefaultTextStyle_PnK;
      effectiveTextStyle = _this.style;
      if (effectiveTextStyle == null || effectiveTextStyle.inherit)
        effectiveTextStyle = t1.style.merge$1(effectiveTextStyle);
      t2 = F.MediaQuery_of(context, true);
      t2 = t2 == null ? _null : t2.boldText;
      if (t2 === true)
        effectiveTextStyle = effectiveTextStyle.merge$1(C.TextStyle_GVa);
      t2 = _this.textAlign;
      if (t2 == null)
        t2 = t1.textAlign;
      if (t2 == null)
        t2 = C.TextAlign_4;
      t3 = _this.softWrap;
      if (t3 == null)
        t3 = t1.softWrap;
      t4 = _this.overflow;
      if (t4 == null)
        t4 = t1.overflow;
      t5 = F.MediaQuery_of(context, true);
      t5 = t5 == null ? _null : t5.textScaleFactor;
      if (t5 == null)
        t5 = 1;
      result = T.RichText$(_null, t1.maxLines, t4, t3, _null, Q.TextSpan$(_null, effectiveTextStyle, _this.data), t2, _null, t1.textHeightBehavior, t5, t1.textWidthBasis);
      return result;
    }
  };
  U.TickerMode.prototype = {
    build$1: function(context) {
      var t1 = this.enabled && U.TickerMode_of(context);
      return new U._EffectiveTickerMode(t1, this.child, null);
    }
  };
  U._EffectiveTickerMode.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return this.enabled !== oldWidget.enabled;
    }
  };
  U.SingleTickerProviderStateMixin.prototype = {
    createTicker$1: function(onTick) {
      return this.SingleTickerProviderStateMixin__ticker = new M.Ticker(onTick, null);
    }
  };
  U.TickerProviderStateMixin.prototype = {
    createTicker$1: function(onTick) {
      var result, _this = this;
      if (_this.TickerProviderStateMixin__tickers == null)
        _this.TickerProviderStateMixin__tickers = P.LinkedHashSet_LinkedHashSet$_empty(type$._WidgetTicker);
      result = new U._WidgetTicker(_this, onTick, "created by " + _this.toString$0(0));
      _this.TickerProviderStateMixin__tickers.add$1(0, result);
      return result;
    }
  };
  U._WidgetTicker.prototype = {
    dispose$0: function() {
      this._creator.TickerProviderStateMixin__tickers.remove$1(0, this);
      this.super$Ticker$dispose();
    }
  };
  U.Title.prototype = {
    build$1: function(context) {
      X.SystemChrome_setApplicationSwitcherDescription(new X.ApplicationSwitcherDescription(this.title, this.color.value));
      return this.child;
    }
  };
  K.AnimatedWidget.prototype = {
    createState$0: function() {
      return new K._AnimatedState(C._StateLifecycle_0);
    }
  };
  K._AnimatedState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this._widget.listenable.addListener$1(0, this.get$_transitions$_handleChange());
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget.listenable;
      t2 = oldWidget.listenable;
      if (t1 != t2) {
        t1 = _this.get$_transitions$_handleChange();
        t2.removeListener$1(0, t1);
        _this._widget.listenable.addListener$1(0, t1);
      }
    },
    dispose$0: function() {
      this._widget.listenable.removeListener$1(0, this.get$_transitions$_handleChange());
      this.super$State$dispose();
    },
    _transitions$_handleChange$0: function() {
      this.setState$1(new K._AnimatedState__handleChange_closure());
    },
    build$1: function(context) {
      return this._widget.build$1(context);
    }
  };
  K._AnimatedState__handleChange_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  K.SlideTransition.prototype = {
    build$1: function(context) {
      var _this = this,
        t1 = type$.Animation_Offset._as(_this.listenable),
        offset = t1.get$value(t1);
      if (_this.textDirection === C.TextDirection_0)
        offset = new P.Offset(-offset._dx, offset._dy);
      return new T.FractionalTranslation(offset, _this.transformHitTests, _this.child, null);
    }
  };
  K.ScaleTransition.prototype = {
    build$1: function(context) {
      var t1 = type$.Animation_double._as(this.listenable),
        scaleValue = t1.get$value(t1),
        transform = new E.Matrix4(new Float64Array(16));
      transform.setIdentity$0();
      transform.scale$3(0, scaleValue, scaleValue, 1);
      return T.Transform$(C.Alignment_0_0, this.child, transform, true);
    }
  };
  K.RotationTransition.prototype = {
    build$1: function(context) {
      var t2, c, s,
        t1 = type$.Animation_double._as(this.listenable);
      t1 = t1.get$value(t1) * 3.141592653589793 * 2;
      t2 = new Float64Array(16);
      t2[15] = 1;
      c = Math.cos(t1);
      s = Math.sin(t1);
      t2[0] = c;
      t2[1] = s;
      t2[2] = 0;
      t2[4] = -s;
      t2[5] = c;
      t2[6] = 0;
      t2[8] = 0;
      t2[9] = 0;
      t2[10] = 1;
      t2[3] = 0;
      t2[7] = 0;
      t2[11] = 0;
      return T.Transform$(C.Alignment_0_0, this.child, new E.Matrix4(t2), true);
    }
  };
  K.FadeTransition.prototype = {
    createRenderObject$1: function(context) {
      var t2, _null = null,
        t1 = new E.RenderAnimatedOpacity(_null, _null, _null, _null, _null);
      t1.get$isRepaintBoundary();
      t2 = t1.get$alwaysNeedsCompositing();
      t1._needsCompositing = t2;
      t1.set$child(_null);
      t1.set$opacity(0, this.opacity);
      t1.set$alwaysIncludeSemantics(false);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$opacity(0, this.opacity);
      renderObject.set$alwaysIncludeSemantics(false);
    }
  };
  K.DecoratedBoxTransition.prototype = {
    build$1: function(context) {
      var t1 = this.decoration,
        t2 = t1.parent;
      return new M.DecoratedBox(t1._evaluatable.transform$1(0, t2.get$value(t2)), C.DecorationPosition_0, this.child, null);
    }
  };
  K.AnimatedBuilder.prototype = {
    build$1: function(context) {
      return this.builder.call$2(context, this.child);
    }
  };
  Q.Viewport.prototype = {
    createRenderObject$1: function(context) {
      var _this = this,
        t1 = _this.axisDirection,
        t2 = Q.Viewport_getDefaultCrossAxisDirection(context, t1),
        t3 = _this.cacheExtent;
      if (t3 == null)
        t3 = 250;
      t3 = new Q.RenderViewport(_this.anchor, t1, t2, _this.offset, t3, _this.cacheExtentStyle, 0, null, null);
      t3.get$isRepaintBoundary();
      t3._needsCompositing = true;
      t3.addAll$1(0, null);
      t1 = t3.ContainerRenderObjectMixin__firstChild;
      if (t1 != null)
        t3._viewport$_center = t1;
      return t3;
    },
    updateRenderObject$2: function(context, renderObject) {
      var _this = this,
        t1 = _this.axisDirection;
      renderObject.set$axisDirection(t1);
      t1 = Q.Viewport_getDefaultCrossAxisDirection(context, t1);
      renderObject.set$crossAxisDirection(t1);
      renderObject.set$anchor(_this.anchor);
      renderObject.set$offset(0, _this.offset);
      renderObject.set$cacheExtent(_this.cacheExtent);
      renderObject.set$cacheExtentStyle(_this.cacheExtentStyle);
    },
    createElement$0: function(_) {
      var t1 = type$.Element_2,
        t2 = P.HashSet_HashSet(t1),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      return new Q._ViewportElement(t2, t3, this, C._ElementLifecycle_0, P.HashSet_HashSet(t1));
    }
  };
  Q._ViewportElement.prototype = {
    get$widget: function() {
      return type$.Viewport._as(N.MultiChildRenderObjectElement.prototype.get$widget.call(this));
    },
    get$renderObject: function() {
      return type$.RenderViewport._as(N.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    mount$2: function($parent, newSlot) {
      this.super$MultiChildRenderObjectElement$mount($parent, newSlot);
      this._updateCenter$0();
    },
    update$1: function(_, newWidget) {
      this.super$MultiChildRenderObjectElement$update(0, newWidget);
      this._updateCenter$0();
    },
    _updateCenter$0: function() {
      var t1, t2, _this = this;
      type$.Viewport._as(N.MultiChildRenderObjectElement.prototype.get$widget.call(_this)).toString;
      t1 = _this.get$children(_this);
      t2 = type$.RenderViewport;
      if (!t1.get$isEmpty(t1)) {
        t1 = t2._as(N.RenderObjectElement.prototype.get$renderObject.call(_this));
        t2 = _this.get$children(_this);
        t1.set$center(type$.RenderSliver._as(t2.get$first(t2).get$renderObject()));
      } else
        t2._as(N.RenderObjectElement.prototype.get$renderObject.call(_this)).set$center(null);
    }
  };
  N._InspectorReferenceData.prototype = {};
  N._WidgetInspectorService.prototype = {};
  N.WidgetInspectorService.prototype = {
    isWidgetCreationTracked$0: function() {
      var t1 = this.WidgetInspectorService__widgetCreationTracked;
      return t1 == null ? this.WidgetInspectorService__widgetCreationTracked = false : t1;
    }
  };
  N._LocationCount.prototype = {};
  N._ElementLocationStatsTracker.prototype = {};
  N.InspectorSelection.prototype = {};
  N._describeRelevantUserCode_processElement.prototype = {
    call$1: function(target) {
      var t1, t2, _null = null;
      if (N._isLocalCreationLocation(target)) {
        t1 = this.nodes;
        t2 = target.get$widget().toStringShort$0();
        N._getCreationLocation(target);
        t2 += " null";
        t1.push(Y.DiagnosticsBlock$(false, H.setRuntimeTypeInfo([new U.ErrorDescription(_null, false, true, _null, _null, _null, false, [t2], _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7)], type$.JSArray_DiagnosticsNode), "The relevant error-causing widget was", C.List_empty2, true, C.DiagnosticsTreeStyle_6, _null));
        t1.push(new U.ErrorSpacer("", false, true, _null, _null, _null, false, _null, C.C__NoDefaultValue, C.DiagnosticLevel_3, "", true, false, _null, C.DiagnosticsTreeStyle_8));
        return false;
      }
      return true;
    }
  };
  K.BenchBuildMaterialCheckbox.prototype = {
    createWidget$0: function() {
      var _null = null;
      return new T.Directionality(C.TextDirection_1, M.Material$(C.Duration_200000, true, T.Column$(P.List_List$generate(10, new K.BenchBuildMaterialCheckbox_createWidget_closure(this), true, type$.Widget), C.CrossAxisAlignment_2, C.MainAxisAlignment_0), C.Clip_0, _null, 0, _null, C.Color_4278190080, _null, _null, C.MaterialType_0), _null);
    },
    _buildRow$0: function() {
      var t1 = $.BenchBuildMaterialCheckbox__isChecked;
      if (t1 == null)
        $.BenchBuildMaterialCheckbox__isChecked = true;
      else if (t1)
        $.BenchBuildMaterialCheckbox__isChecked = false;
      else
        $.BenchBuildMaterialCheckbox__isChecked = null;
      return T.Row$(P.List_List$generate(10, new K.BenchBuildMaterialCheckbox__buildRow_closure(), true, type$.Widget), C.CrossAxisAlignment_2, C.MainAxisAlignment_0, C.MainAxisSize_1);
    }
  };
  K.BenchBuildMaterialCheckbox_createWidget_closure.prototype = {
    call$1: function(i) {
      return this.$this._buildRow$0();
    }
  };
  K.BenchBuildMaterialCheckbox__buildRow_closure.prototype = {
    call$1: function(i) {
      return T.Expanded$(new K.Checkbox($.BenchBuildMaterialCheckbox__isChecked, new K.BenchBuildMaterialCheckbox__buildRow__closure(), true, null));
    }
  };
  K.BenchBuildMaterialCheckbox__buildRow__closure.prototype = {
    call$1: function(newValue) {
    }
  };
  T.BenchCardInfiniteScroll.prototype = {
    createWidget$0: function() {
      return C.MaterialApp_WrR;
    }
  };
  T._InfiniteScrollCards.prototype = {
    createState$0: function() {
      return new T._InfiniteScrollCardsState(C._StateLifecycle_0);
    }
  };
  T._InfiniteScrollCardsState.prototype = {
    initState$0: function() {
      var _this = this;
      _this.super$State$initState();
      _this.scrollController = new F.ScrollController(0, H.setRuntimeTypeInfo([], type$.JSArray_ScrollPosition), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      _this.offset = 0;
      P.Timer_Timer(C.Duration_0, new T._InfiniteScrollCardsState_initState_closure(_this));
    },
    build$1: function(context) {
      return B.ListView$builder(this.scrollController, new T._InfiniteScrollCardsState_build_closure(), null);
    }
  };
  T._InfiniteScrollCardsState_initState_closure.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
            case 2:
              // for condition
              // trivial condition
              $async$goto = 4;
              return P._asyncAwait(t1.scrollController.animateTo$3$curve$duration(t1.offset + 1000, C.C__Linear, C.Duration_1000000), $async$call$0);
            case 4:
              // returning from await.
              t1.offset = t1.offset + 1000;
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 21
  };
  T._InfiniteScrollCardsState_build_closure.prototype = {
    call$2: function(context, index) {
      var _null = null,
        t1 = $.$get$lipsum();
      return new T.SizedBox(_null, 100, new V.Card(16, L.Text$(t1[C.JSInt_methods.$mod(index, t1.length)], _null, _null, _null, C.TextAlign_2), _null), _null);
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  G.BenchDrawRect.prototype = {
    onDrawFrame$1: function(sceneBuilder) {
      var windowSize, t1, t2, rectSize, t3, t4, row, col, t5, picture,
        pictureRecorder = P.PictureRecorder_PictureRecorder(),
        canvas = P.Canvas_Canvas(pictureRecorder, null),
        paint = new H.SurfacePaint(new H.SurfacePaintData());
      paint.set$color(0, C.Color_4294901760);
      windowSize = $.$get$window().get$physicalSize();
      t1 = windowSize._dx / 40;
      t2 = windowSize._dy / 25;
      rectSize = new P.Size(t1, t2).$mul(0, 0.8);
      for (t3 = rectSize._dx, t4 = rectSize._dy, row = 0; row < 25; ++row) {
        canvas.save$0(0);
        for (col = 0; col < 40; ++col) {
          t5 = Math.abs(this.wobbleCounter - 5);
          canvas.drawRect$2(new P.Rect(t5, 0, t5 + t3, 0 + t4), paint);
          canvas.translate$2(0, t1, 0);
        }
        canvas.restore$0(0);
        canvas.translate$2(0, 0, t2);
      }
      this.wobbleCounter = ++this.wobbleCounter % 10;
      picture = pictureRecorder.endRecording$0();
      sceneBuilder.pushOffset$2(0, 0);
      sceneBuilder.addPicture$2(C.Offset_0_0, picture);
      sceneBuilder.pop$0();
    }
  };
  M.BenchDynamicClipOnStaticPicture.prototype = {
    BenchDynamicClipOnStaticPicture$0: function() {
      var cellWidth, paragraphs, paragraphCounter, yOffset, row, yOffset0, column, left,
        pictureRecorder = P.PictureRecorder_PictureRecorder(),
        canvas = P.Canvas_Canvas(pictureRecorder, null),
        t1 = $.$get$window(),
        t2 = t1.get$physicalSize();
      t1 = t1._debugDevicePixelRatio;
      t1 = this.screenSize = t2.$div(0, t1 != null ? t1 : H.EngineWindow_browserDevicePixelRatio());
      t2 = t1._dx;
      this.clipSize = new P.Size(t2 / 2, t1._dy / 5);
      cellWidth = t2 / 10;
      paragraphs = O.generateLaidOutParagraphs(C.Color_4278190080, 3, 3, 500, cellWidth);
      for (paragraphCounter = 0, yOffset = 0, row = 0; row < 100; ++row, yOffset = yOffset0)
        for (yOffset0 = yOffset + 20, column = 0; column < 10; ++column) {
          left = cellWidth * column;
          canvas.save$0(0);
          canvas.clipRect$1(new P.Rect(left, yOffset, left + cellWidth, yOffset0));
          canvas.drawParagraph$2(paragraphs[C.JSInt_methods.$mod(paragraphCounter, paragraphs.length)], new P.Offset(left, yOffset));
          canvas.restore$0(0);
          ++paragraphCounter;
        }
      this.picture = pictureRecorder.endRecording$0();
    },
    onDrawFrame$1: function(sceneBuilder) {
      var _this = this,
        t1 = _this.clipSize;
      sceneBuilder.pushClipRect$1(new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy));
      sceneBuilder.pushOffset$2(0, _this.pictureVerticalOffset);
      sceneBuilder.addPicture$2(C.Offset_0_0, _this.picture);
      sceneBuilder.pop$0();
      sceneBuilder.pop$0();
      _this.pictureVerticalOffset -= 2;
    }
  };
  A.BenchPictureRecording.prototype = {
    setUpAll$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$setUpAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.paint = new H.SurfacePaint(new H.SurfacePaintData());
              t1 = P.ParagraphBuilder_ParagraphBuilder(P.ParagraphStyle_ParagraphStyle(null, null, null, null, null, null, null, null, null, null, null, null));
              t1.addText$1("abcd edfh ijkl mnop qrst uvwx yz");
              t1 = t1.build$0();
              t1.layout$1(C.ParagraphConstraints_50);
              $async$self.paragraph = t1;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$setUpAll$0, $async$completer);
    },
    body$1: function(_, profile) {
      var recorder = P.PictureRecorder_PictureRecorder();
      profile.record$3$reported("recordPaintCommands", new A.BenchPictureRecording_body_closure(this, P.Canvas_Canvas(recorder, null)), true);
      profile.record$3$reported("estimatePaintBounds", new A.BenchPictureRecording_body_closure0(recorder), true);
    }
  };
  A.BenchPictureRecording_body_closure.prototype = {
    call$0: function() {
      var t1, t2, i, t3, j;
      for (t1 = this.canvas, t2 = this.$this, i = 1; i <= 100; ++i) {
        t3 = 10 + i;
        t1.translate$2(0, t3, t3);
        t1.save$0(0);
        for (j = 0; j < 10; ++j) {
          t1.drawRect$2(C.Rect_10_10_20_20, t2.paint);
          t1.drawCircle$3(C.Offset_50_50, 50, t2.paint);
          t1.rotate$1(0, 1);
        }
        t1.restore$0(0);
        t1.save$0(0);
        for (t3 = 20 + 40 / i, j = 0; j < 10; ++j) {
          t1.translate$2(0, 1, 1);
          t1.clipRect$1(new P.Rect(20, 20, t3, 60));
          t1.drawRRect$2(P.RRect$fromRectAndRadius(C.Rect_10_10_20_20, C.Radius_2_2), t2.paint);
          t1.drawParagraph$2(t2.paragraph, C.Offset_0_0);
        }
        t1.restore$0(0);
      }
    },
    $signature: 0
  };
  A.BenchPictureRecording_body_closure0.prototype = {
    call$0: function() {
      this.recorder.endRecording$0();
    },
    $signature: 0
  };
  Q.BenchSimpleLazyTextScroll.prototype = {
    createWidget$0: function() {
      return new T.Directionality(C.TextDirection_1, T.Row$(C.List_xyN, C.CrossAxisAlignment_2, C.MainAxisAlignment_0, C.MainAxisSize_1), null);
    }
  };
  Q._TestScrollingWidget.prototype = {
    createState$0: function() {
      return new Q._TestScrollingWidgetState(C._StateLifecycle_0);
    }
  };
  Q._TestScrollingWidgetState.prototype = {
    initState$0: function() {
      var _this = this;
      _this.super$State$initState();
      _this.scrollController = new F.ScrollController(_this._widget.initialScrollOffset, H.setRuntimeTypeInfo([], type$.JSArray_ScrollPosition), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      P.Timer_Timer(C.Duration_0, new Q._TestScrollingWidgetState_initState_closure(_this));
    },
    build$1: function(context) {
      return B.ListView$builder(this.scrollController, new Q._TestScrollingWidgetState_build_closure(), 10000);
    }
  };
  Q._TestScrollingWidgetState_initState_closure.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, $forward, t2, t3, t4;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this, $forward = true;
            case 2:
              // for condition
              // trivial condition
              t2 = t1.scrollController;
              t3 = t1._widget;
              t4 = $forward ? t3.initialScrollOffset + t3.scrollDistance : t3.initialScrollOffset;
              $async$goto = 4;
              return P._asyncAwait(t2.animateTo$3$curve$duration(t4, C.C__Linear, t3.scrollDuration), $async$call$0);
            case 4:
              // returning from await.
              $forward = !$forward;
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 21
  };
  Q._TestScrollingWidgetState_build_closure.prototype = {
    call$2: function(context, index) {
      var _null = null,
        t1 = $.$get$lipsum();
      return L.Text$(t1[C.JSInt_methods.$mod(index, t1.length)], _null, _null, _null, _null);
    },
    "call*": "call$2",
    $requiredArgCount: 2
  };
  Q._randomize_closure.prototype = {
    call$1: function(_) {
      var t1 = P._Random$(0);
      return '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#%^&()[]{}<>,./?;:"`~-_=+|'[t1.nextInt$1(90)];
    }
  };
  Q.ParagraphGenerator.prototype = {
    generate$3$hasEllipsis$maxLines: function(text, hasEllipsis, maxLines) {
      var _null = null,
        builder = P.ParagraphBuilder_ParagraphBuilder(P.ParagraphStyle_ParagraphStyle(hasEllipsis ? "..." : _null, "sans-serif", _null, _null, _null, _null, _null, maxLines, _null, _null, _null, _null));
      builder.pushStyle$1(P.TextStyle_TextStyle(_null, _null, _null, _null, _null, _null, _null, _null, _null, 8 + this._counter * 0.01, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      builder.addText$1(Q._randomize(text));
      ++this._counter;
      return builder.build$0();
    },
    generate$1: function(text) {
      return this.generate$3$hasEllipsis$maxLines(text, false, null);
    },
    generate$2$maxLines: function(text, maxLines) {
      return this.generate$3$hasEllipsis$maxLines(text, false, maxLines);
    },
    generate$2$hasEllipsis: function(text, hasEllipsis) {
      return this.generate$3$hasEllipsis$maxLines(text, hasEllipsis, null);
    }
  };
  Q.BenchTextLayout.prototype = {
    body$1: function(_, profile) {
      var _this = this,
        _s11_ = "*** ** ****",
        _s137_ = "*** ****** **** *** ******** * *** ******* **** ********** *** ******* **** ***** *** ******** *** ********* ** * *** ******* ***********",
        t1 = window;
      t1._flutter_internal_update_experiment.apply(t1, ["useCanvasText", _this.useCanvas]);
      t1 = _this.generator;
      _this.recordParagraphOperations$5$keyPrefix$maxWidth$paragraph$profile$text("single_line", 800, t1.generate$1(_s11_), profile, _s11_);
      _this.recordParagraphOperations$5$keyPrefix$maxWidth$paragraph$profile$text("multi_line", 200, t1.generate$1(_s137_), profile, _s137_);
      _this.recordParagraphOperations$5$keyPrefix$maxWidth$paragraph$profile$text("max_lines", 200, t1.generate$2$maxLines(_s137_, 2), profile, _s137_);
      _this.recordParagraphOperations$5$keyPrefix$maxWidth$paragraph$profile$text("ellipsis", 200, t1.generate$2$hasEllipsis(_s137_, true), profile, _s137_);
      t1 = window;
      t1._flutter_internal_update_experiment.apply(t1, ["useCanvasText", null]);
    },
    recordParagraphOperations$5$keyPrefix$maxWidth$paragraph$profile$text: function(keyPrefix, maxWidth, paragraph, profile, text) {
      profile.record$3$reported(keyPrefix + ".layout", new Q.BenchTextLayout_recordParagraphOperations_closure(paragraph, maxWidth), true);
      profile.record$3$reported(keyPrefix + ".getBoxesForRange", new Q.BenchTextLayout_recordParagraphOperations_closure0(text, paragraph), true);
      profile.record$3$reported(keyPrefix + ".getPositionForOffset", new Q.BenchTextLayout_recordParagraphOperations_closure1(paragraph), true);
    }
  };
  Q.BenchTextLayout_recordParagraphOperations_closure.prototype = {
    call$0: function() {
      this.paragraph.layout$1(new P.ParagraphConstraints(this.maxWidth));
    },
    $signature: 0
  };
  Q.BenchTextLayout_recordParagraphOperations_closure0.prototype = {
    call$0: function() {
      var t1, t2, start, end;
      for (t1 = this.text.length, t2 = this.paragraph, start = 0; start < t1; start += 3)
        for (end = start + 1; end < t1; end *= 2)
          t2.getBoxesForRange$2(start, end);
    },
    $signature: 0
  };
  Q.BenchTextLayout_recordParagraphOperations_closure1.prototype = {
    call$0: function() {
      var t1, dx, dy;
      for (t1 = this.paragraph, dx = 0; dx < t1.get$width(t1); dx += 10)
        for (dy = 0; dy < t1.get$height(t1); dy += 10)
          t1.getPositionForOffset$1(new P.Offset(dx, dy));
    },
    $signature: 0
  };
  Q.BenchTextCachedLayout.prototype = {
    body$1: function(_, profile) {
      var t1 = window;
      t1._flutter_internal_update_experiment.apply(t1, ["useCanvasText", this.useCanvas]);
      profile.record$3$reported("layout", new Q.BenchTextCachedLayout_body_closure(this.builder.build$0()), true);
      t1 = window;
      t1._flutter_internal_update_experiment.apply(t1, ["useCanvasText", null]);
    }
  };
  Q.BenchTextCachedLayout_body_closure.prototype = {
    call$0: function() {
      this.paragraph.layout$1(C.ParagraphConstraints_C5f);
    },
    $signature: 0
  };
  Q._TestMode.prototype = {
    toString$0: function(_) {
      return this._bench_text_layout$_name;
    }
  };
  Q.BenchBuildColorsGrid.prototype = {
    get$isTracingEnabled: function() {
      return false;
    },
    setUpAll$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, t1;
      var $async$setUpAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.mode;
              if (t1 === C._TestMode_0) {
                t2 = window;
                t2._flutter_internal_update_experiment.apply(t2, ["useCanvasText", true]);
              }
              if (t1 === C._TestMode_1) {
                t1 = window;
                t1._flutter_internal_update_experiment.apply(t1, ["useCanvasText", false]);
              }
              V.registerEngineBenchmarkValueListener("text_layout", new Q.BenchBuildColorsGrid_setUpAll_closure($async$self));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$setUpAll$0, $async$completer);
    },
    tearDownAll$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        t1;
      var $async$tearDownAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = window;
              t1._flutter_internal_update_experiment.apply(t1, ["useCanvasText", null]);
              V.stopListeningToEngineBenchmarkValues("text_layout");
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$tearDownAll$0, $async$completer);
    },
    frameWillDraw$0: function() {
      this.super$WidgetBuildRecorder$frameWillDraw();
      this._textLayoutMicros = 0;
    },
    frameDidDraw$0: function() {
      var _this = this;
      if (_this.showWidget && _this.mode !== C._TestMode_2)
        _this.profile.addDataPoint$3$reported("text_layout", P.Duration$(C.JSNumber_methods.toInt$0(_this._textLayoutMicros), 0), true);
      _this.super$WidgetBuildRecorder$frameDidDraw();
    },
    createWidget$0: function() {
      $._counter = $._counter + 1;
      return new S.MaterialApp(new Q.ColorsDemo(null), "", null);
    }
  };
  Q.BenchBuildColorsGrid_setUpAll_closure.prototype = {
    call$1: function(value) {
      var t1 = this.$this;
      t1._textLayoutMicros = t1._textLayoutMicros + value;
    },
    $signature: 25
  };
  Q.Palette.prototype = {
    get$name: function(receiver) {
      return this.name;
    }
  };
  Q.ColorItem.prototype = {
    build$1: function(context) {
      var _null = null,
        t1 = this.color;
      return T.Semantics$(_null, M.Container$(_null, Q.SafeArea$(false, T.Row$(H.setRuntimeTypeInfo([L.Text$("" + $._counter + ":" + this.prefix + this.index, _null, _null, _null, _null), L.Text$("" + $._counter + ":#" + C.JSString_methods.padLeft$2(C.JSInt_methods.toRadixString$1(t1.value, 16), 8, "0").toUpperCase(), _null, _null, _null, _null)], type$.JSArray_Widget), C.CrossAxisAlignment_2, C.MainAxisAlignment_3, C.MainAxisSize_1), false), t1, _null, _null, 48, _null, C.EdgeInsets_16_0_16_0, _null), true, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  Q.PaletteTabView.prototype = {
    build$1: function(context) {
      var t2, t3, _null = null,
        t1 = K.Theme_of(context).textTheme.bodyText2,
        whiteTextStyle = t1.copyWith$1$color(C.Color_4294967295),
        blackTextStyle = t1.copyWith$1$color(C.Color_4278190080);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_Widget);
      for (t2 = type$.MappedListIterable_int_Widget, t3 = new H.MappedListIterable(C.List_JNA, new Q.PaletteTabView_build_closure(this, whiteTextStyle, blackTextStyle), t2), t3 = new H.ListIterator(t3, t3.get$length(t3)); t3.moveNext$0();)
        t1.push(t3.__internal$_current);
      if (this.colors.accent != null)
        for (t2 = new H.MappedListIterable(C.List_100_200_400_700, new Q.PaletteTabView_build_closure0(this, whiteTextStyle, blackTextStyle), t2), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();)
          t1.push(t2.__internal$_current);
      t2 = G.SliverChildListDelegate$(t1, true, true, true);
      t1 = t1.length;
      return new E.Scrollbar(new B.ListView(48, t2, _null, C.Axis_1, false, _null, true, C.AlwaysScrollableScrollPhysics_null, false, _null, t1, C.DragStartBehavior_1, C.ScrollViewKeyboardDismissBehavior_0, _null), _null);
    }
  };
  Q.PaletteTabView_build_closure.prototype = {
    call$1: function(index) {
      var t1 = this.$this.colors,
        t2 = index > t1.threshold ? this.whiteTextStyle : this.blackTextStyle;
      return L.DefaultTextStyle$(Q.ColorItem$(t1.primary._swatch.$index(0, index), index, ""), null, C.TextOverflow_0, true, t2, null, null, C.TextWidthBasis_0);
    }
  };
  Q.PaletteTabView_build_closure0.prototype = {
    call$1: function(index) {
      var t1 = this.$this.colors,
        t2 = index > t1.threshold ? this.whiteTextStyle : this.blackTextStyle;
      return L.DefaultTextStyle$(Q.ColorItem$(t1.accent._swatch.$index(0, index), index, "A"), null, C.TextOverflow_0, true, t2, null, null, C.TextWidthBasis_0);
    }
  };
  Q.ColorsDemo.prototype = {
    build$1: function(context) {
      var _null = null,
        t1 = $.$get$allPalettes(),
        t2 = H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Widget>"),
        t3 = new E.TabBar(new H.MappedListIterable(t1, new Q.ColorsDemo_build_closure(), t2).toList$0(0), true, _null),
        t4 = t3.get$preferredSize();
      t4 = t4._dy;
      if (t4 == null)
        t4 = 0;
      return new U.DefaultTabController(19, new M.Scaffold(new E.AppBar(C.Text_Lhf, t3, 0, new P.Size(1 / 0, 56 + t4), _null), new E.TabBarView(new H.MappedListIterable(t1, new Q.ColorsDemo_build_closure0(), t2).toList$0(0), _null), _null), _null);
    }
  };
  Q.ColorsDemo_build_closure.prototype = {
    call$1: function(swatch) {
      return new E.Tab("" + $._counter + ":" + swatch.name, null);
    }
  };
  Q.ColorsDemo_build_closure0.prototype = {
    call$1: function(colors) {
      return new Q.PaletteTabView(colors, null);
    }
  };
  A.BenchTextOutOfPictureBounds.prototype = {
    onDrawFrame$1: function(sceneBuilder) {
      var row, col, t3, picture,
        pictureRecorder = P.PictureRecorder_PictureRecorder(),
        canvas = P.Canvas_Canvas(pictureRecorder, null),
        screenSize = $.$get$window().get$physicalSize(),
        fillCellWithText = new A.BenchTextOutOfPictureBounds_onDrawFrame_fillCellWithText(canvas, screenSize),
        t1 = screenSize._dx,
        t2 = screenSize._dy;
      canvas.translate$2(0, -t1, -t2);
      for (row = 0; row < 3; ++row) {
        canvas.save$0(0);
        for (col = 0; col < 3; ++col) {
          t3 = new H.SurfacePaint(new H.SurfacePaintData());
          t3.set$style(0, C.PaintingStyle_1);
          t3.set$strokeWidth(2);
          canvas.drawRect$2(new P.Rect(0, 0, 0 + t1, 0 + t2), t3);
          fillCellWithText.call$1(this.singleLineParagraphs);
          canvas.save$0(0);
          canvas.translate$2(0, t1 / 2, 0);
          fillCellWithText.call$1(this.multiLineParagraphs);
          canvas.restore$0(0);
          canvas.translate$2(0, t1, 0);
        }
        canvas.restore$0(0);
        canvas.translate$2(0, 0, t2);
      }
      picture = pictureRecorder.endRecording$0();
      sceneBuilder.pushOffset$2(0, 0);
      sceneBuilder.addPicture$2(C.Offset_0_0, picture);
      sceneBuilder.pop$0();
    }
  };
  A.BenchTextOutOfPictureBounds_onDrawFrame_fillCellWithText.prototype = {
    call$1: function(textSource) {
      var t2, t3, topOffset, paragraph,
        t1 = this.canvas;
      t1.save$0(0);
      for (t2 = this.screenSize, t3 = t2._dy, topOffset = 0; topOffset < t3;) {
        paragraph = textSource[$.$get$BenchTextOutOfPictureBounds__random().nextInt$1(textSource.length)];
        paragraph.layout$1(new P.ParagraphConstraints(t2._dx / 2));
        t1.drawParagraph$2(paragraph, C.Offset_0_0);
        t1.translate$2(0, 0, paragraph.get$height(paragraph) + 10);
        topOffset += paragraph.get$height(paragraph) + 10;
      }
      t1.restore$0(0);
    }
  };
  V.Runner.prototype = {
    run$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Profile),
        $async$returnValue, $async$self = this, profile, t1;
      var $async$run$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.recorder;
              $async$goto = 3;
              return P._asyncAwait(t1.setUpAll$0(), $async$run$0);
            case 3:
              // returning from await.
              $async$goto = 4;
              return P._asyncAwait($async$self.setUpAllDidRun.call$0(), $async$run$0);
            case 4:
              // returning from await.
              $async$goto = 5;
              return P._asyncAwait(t1.run$0(), $async$run$0);
            case 5:
              // returning from await.
              profile = $async$result;
              $async$goto = 6;
              return P._asyncAwait($async$self.tearDownAllWillRun.call$0(), $async$run$0);
            case 6:
              // returning from await.
              $async$goto = 7;
              return P._asyncAwait(t1.tearDownAll$0(), $async$run$0);
            case 7:
              // returning from await.
              $async$returnValue = profile;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$run$0, $async$completer);
    }
  };
  V.Recorder.prototype = {
    setUpAll$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$setUpAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$setUpAll$0, $async$completer);
    },
    tearDownAll$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$tearDownAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$tearDownAll$0, $async$completer);
    },
    get$isTracingEnabled: function() {
      return this.isTracingEnabled;
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  V.RawRecorder.prototype = {
    run$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Profile),
        $async$returnValue, $async$self = this, t1, profile;
      var $async$run$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.String;
              profile = new V.Profile($async$self.name, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Timeseries), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.dynamic));
              t1 = type$.void;
            case 3:
              // do body
              $async$goto = 6;
              return P._asyncAwait(P.Future_Future$delayed(C.Duration_0, t1), $async$run$0);
            case 6:
              // returning from await.
              $async$self.body$1(0, profile);
            case 4:
              // do condition
              if (profile.shouldContinue$0()) {
                // goto do body
                $async$goto = 3;
                break;
              }
            case 5:
              // after do
              $async$returnValue = profile;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$run$0, $async$completer);
    }
  };
  V.SceneBuilderRecorder.prototype = {
    run$0: function() {
      var t1 = $.Zone__current,
        t2 = new P._Future(t1, type$._Future_Profile),
        profileCompleter = new P._AsyncCompleter(t2, type$._AsyncCompleter_Profile),
        t3 = type$.String,
        t4 = $.$get$window();
      t4._onBeginFrame = new V.SceneBuilderRecorder_run_closure(this, profileCompleter);
      t4._onBeginFrameZone = t1;
      t4._onDrawFrame = new V.SceneBuilderRecorder_run_closure0(this, new V.Profile(this.name, P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Timeseries), P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.dynamic)), profileCompleter);
      t4._onDrawFrameZone = t1;
      t4.scheduleFrame$0();
      return t2;
    }
  };
  V.SceneBuilderRecorder_run_closure.prototype = {
    call$1: function(_) {
      var error, stackTrace, exception;
      try {
        window.performance.mark("measured_frame_start#" + $._currentFrameNumber);
      } catch (exception) {
        error = H.unwrapException(exception);
        stackTrace = H.getTraceFromException(exception);
        this.profileCompleter.completeError$2(error, stackTrace);
        throw exception;
      }
    },
    $signature: 6
  };
  V.SceneBuilderRecorder_run_closure0.prototype = {
    call$0: function() {
      var error, stackTrace, t1, exception, _this = this;
      try {
        t1 = _this.profile;
        t1.record$3$reported("drawFrameDuration", new V.SceneBuilderRecorder_run__closure(_this.$this, t1), true);
        V.endMeasureFrame();
        if (t1.shouldContinue$0())
          $.$get$window().scheduleFrame$0();
        else
          _this.profileCompleter.complete$1(0, t1);
      } catch (exception) {
        error = H.unwrapException(exception);
        stackTrace = H.getTraceFromException(exception);
        _this.profileCompleter.completeError$2(error, stackTrace);
        throw exception;
      }
    },
    $signature: 0
  };
  V.SceneBuilderRecorder_run__closure.prototype = {
    call$0: function() {
      var t1,
        sceneBuilder = P.SceneBuilder_SceneBuilder();
      this.$this.onDrawFrame$1(sceneBuilder);
      t1 = this.profile;
      t1.record$3$reported("sceneBuildDuration", new V.SceneBuilderRecorder_run___closure(sceneBuilder, t1), false);
    },
    $signature: 0
  };
  V.SceneBuilderRecorder_run___closure.prototype = {
    call$0: function() {
      var scene = this.sceneBuilder.build$0();
      this.profile.record$3$reported("windowRenderDuration", new V.SceneBuilderRecorder_run____closure(scene), false);
    },
    $signature: 0
  };
  V.SceneBuilderRecorder_run____closure.prototype = {
    call$0: function() {
      $.$get$window().render$1(this.scene);
    },
    $signature: 0
  };
  V.WidgetRecorder.prototype = {
    frameWillDraw$0: function() {
      window.performance.mark("measured_frame_start#" + $._currentFrameNumber);
      var t1 = new P.Stopwatch();
      if ($.Stopwatch__frequency == null) {
        H.Primitives_initTicker();
        $.Stopwatch__frequency = $.Primitives_timerFrequency;
      }
      t1.start$0(0);
      this._drawFrameStopwatch = t1;
    },
    frameDidDraw$0: function() {
      var _this = this;
      V.endMeasureFrame();
      _this.profile.addDataPoint$3$reported("drawFrameDuration", P.Duration$(_this._drawFrameStopwatch.get$elapsedMicroseconds(), 0), true);
      if (_this.profile.shouldContinue$0())
        $.$get$window().scheduleFrame$0();
      else {
        _this.didStop.call$0();
        _this._runCompleter.complete$0(0);
      }
    },
    _onError$2: function(error, stackTrace) {
      this._runCompleter.completeError$2(error, stackTrace);
    },
    run$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Profile),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, localProfile, t3, localProfile0, t4, binding, widget, t1, t2;
      var $async$run$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$._Future_void;
              t2 = type$._AsyncCompleter_void;
              $async$self._runCompleter = new P._AsyncCompleter(new P._Future($.Zone__current, t1), t2);
              t3 = type$.String;
              localProfile0 = new V.Profile($async$self.name, P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Timeseries), P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.dynamic));
              $async$self.profile = localProfile0;
              localProfile = localProfile0;
              if ($.WidgetsBinding__instance == null) {
                t3 = type$.int;
                t4 = type$.JSArray_of_void_Function_Duration;
                new V._RecordingWidgetsBinding(null, H.setRuntimeTypeInfo([], type$.JSArray_WidgetsBindingObserver), true, new P._AsyncCompleter(new P._Future($.Zone__current, t1), t2), false, null, false, null, null, null, 0, false, null, null, new N._SystemFontsNotifier(P.LinkedHashSet_LinkedHashSet$_empty(type$.void_Function)), null, H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_List_FrameTiming), null, N.binding__defaultSchedulingStrategy$closure(), Y.HeapPriorityQueue$(N.binding_SchedulerBinding__taskSorter$closure(), type$._TaskEntry_dynamic), false, 0, P.LinkedHashMap_LinkedHashMap$_empty(t3, type$._FrameCallbackEntry), P.HashSet_HashSet(t3), H.setRuntimeTypeInfo([], t4), H.setRuntimeTypeInfo([], t4), null, false, C.SchedulerPhase_0, true, false, null, C.Duration_0, C.Duration_0, null, 0, null, false, P.ListQueue$(null, type$.PointerEvent), new O.PointerRouter(P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Map_of_void_Function_PointerEvent_and_Matrix4), P.LinkedHashMap_LinkedHashMap$_empty(type$.void_Function_PointerEvent, type$.Matrix4)), new D.GestureArenaManager(P.LinkedHashMap_LinkedHashMap$_empty(t3, type$._GestureArena)), new G.PointerSignalResolver(), P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.HitTestResult)).BindingBase$0();
              }
              binding = type$._RecordingWidgetsBinding._as($.WidgetsBinding__instance);
              widget = $async$self.createWidget$0();
              V.registerEngineBenchmarkValueListener("preroll_frame", new V.WidgetRecorder_run_closure(localProfile));
              V.registerEngineBenchmarkValueListener("apply_frame", new V.WidgetRecorder_run_closure0(localProfile));
              binding._beginRecording$2($async$self, widget);
              $async$handler = 3;
              $async$goto = 6;
              return P._asyncAwait($async$self._runCompleter.future, $async$run$0);
            case 6:
              // returning from await.
              $async$returnValue = localProfile;
              $async$next = [1];
              // goto finally
              $async$goto = 4;
              break;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              V.stopListeningToEngineBenchmarkValues("preroll_frame");
              V.stopListeningToEngineBenchmarkValues("apply_frame");
              $async$self.profile = $async$self._runCompleter = null;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$run$0, $async$completer);
    },
    set$didStop: function(val) {
      return this.didStop = val;
    }
  };
  V.WidgetRecorder_run_closure.prototype = {
    call$1: function(value) {
      this.localProfile.addDataPoint$3$reported("preroll_frame", P.Duration$(J.toInt$0$n(value), 0), false);
    },
    $signature: 25
  };
  V.WidgetRecorder_run_closure0.prototype = {
    call$1: function(value) {
      this.localProfile.addDataPoint$3$reported("apply_frame", P.Duration$(J.toInt$0$n(value), 0), false);
    },
    $signature: 25
  };
  V.WidgetBuildRecorder.prototype = {
    _getWidgetForFrame$0: function() {
      if (this.showWidget)
        return this.createWidget$0();
      else
        return null;
    },
    frameWillDraw$0: function() {
      if (this.showWidget) {
        window.performance.mark("measured_frame_start#" + $._currentFrameNumber);
        var t1 = new P.Stopwatch();
        if ($.Stopwatch__frequency == null) {
          H.Primitives_initTicker();
          $.Stopwatch__frequency = $.Primitives_timerFrequency;
        }
        t1.start$0(0);
        this._drawFrameStopwatch = t1;
      }
    },
    frameDidDraw$0: function() {
      var _this = this;
      if (_this.showWidget) {
        V.endMeasureFrame();
        _this.profile.addDataPoint$3$reported("drawFrameDuration", P.Duration$(_this._drawFrameStopwatch.get$elapsedMicroseconds(), 0), true);
      }
      if (_this.profile.shouldContinue$0()) {
        _this.showWidget = !_this.showWidget;
        _this._hostState._setStateTrampoline$0();
      } else {
        _this.didStop.call$0();
        _this._runCompleter.complete$0(0);
      }
    },
    _onError$2: function(error, stackTrace) {
      this._runCompleter.completeError$2(error, stackTrace);
    },
    run$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Profile),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, localProfile, t3, localProfile0, t4, t1, t2;
      var $async$run$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$._Future_void;
              t2 = type$._AsyncCompleter_void;
              $async$self._runCompleter = new P._AsyncCompleter(new P._Future($.Zone__current, t1), t2);
              t3 = type$.String;
              localProfile0 = new V.Profile($async$self.name, P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Timeseries), P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.dynamic));
              $async$self.profile = localProfile0;
              localProfile = localProfile0;
              if ($.WidgetsBinding__instance == null) {
                t3 = type$.int;
                t4 = type$.JSArray_of_void_Function_Duration;
                new V._RecordingWidgetsBinding(null, H.setRuntimeTypeInfo([], type$.JSArray_WidgetsBindingObserver), true, new P._AsyncCompleter(new P._Future($.Zone__current, t1), t2), false, null, false, null, null, null, 0, false, null, null, new N._SystemFontsNotifier(P.LinkedHashSet_LinkedHashSet$_empty(type$.void_Function)), null, H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_List_FrameTiming), null, N.binding__defaultSchedulingStrategy$closure(), Y.HeapPriorityQueue$(N.binding_SchedulerBinding__taskSorter$closure(), type$._TaskEntry_dynamic), false, 0, P.LinkedHashMap_LinkedHashMap$_empty(t3, type$._FrameCallbackEntry), P.HashSet_HashSet(t3), H.setRuntimeTypeInfo([], t4), H.setRuntimeTypeInfo([], t4), null, false, C.SchedulerPhase_0, true, false, null, C.Duration_0, C.Duration_0, null, 0, null, false, P.ListQueue$(null, type$.PointerEvent), new O.PointerRouter(P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Map_of_void_Function_PointerEvent_and_Matrix4), P.LinkedHashMap_LinkedHashMap$_empty(type$.void_Function_PointerEvent, type$.Matrix4)), new D.GestureArenaManager(P.LinkedHashMap_LinkedHashMap$_empty(t3, type$._GestureArena)), new G.PointerSignalResolver(), P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.HitTestResult)).BindingBase$0();
              }
              type$._RecordingWidgetsBinding._as($.WidgetsBinding__instance)._beginRecording$2($async$self, new V._WidgetBuildRecorderHost($async$self, null));
              $async$handler = 3;
              $async$goto = 6;
              return P._asyncAwait($async$self._runCompleter.future, $async$run$0);
            case 6:
              // returning from await.
              $async$returnValue = localProfile;
              $async$next = [1];
              // goto finally
              $async$goto = 4;
              break;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              $async$self.profile = $async$self._runCompleter = null;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$run$0, $async$completer);
    },
    set$didStop: function(val) {
      return this.didStop = val;
    }
  };
  V._WidgetBuildRecorderHost.prototype = {
    createState$0: function() {
      return this.recorder._hostState = new V._WidgetBuildRecorderHostState(C._StateLifecycle_0);
    }
  };
  V._WidgetBuildRecorderHostState.prototype = {
    _setStateTrampoline$0: function() {
      this.setState$1(new V._WidgetBuildRecorderHostState__setStateTrampoline_closure());
    },
    build$1: function(context) {
      return new T.SizedBox(1 / 0, 1 / 0, this._widget.recorder._getWidgetForFrame$0(), null);
    }
  };
  V._WidgetBuildRecorderHostState__setStateTrampoline_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  V.Timeseries.prototype = {
    computeStats$0: function() {
      var outlierCutOff, t2, cleanValues, outliers, cleanAverage, standardDeviation, noise, outlierAverage, t3, _i, warmUpValue, candidate,
        t1 = this._allValues,
        warmUpValues = C.JSArray_methods.sublist$2(t1, 0, t1.length - 100),
        candidateValues = C.JSArray_methods.sublist$1(t1, t1.length - 100);
      t1 = this.name;
      outlierCutOff = V._computeAverage(t1, candidateValues) + V._computeStandardDeviationForPopulation(t1, candidateValues);
      t2 = H._arrayInstanceType(candidateValues)._eval$1("WhereIterable<1>");
      cleanValues = new H.WhereIterable(candidateValues, new V.Timeseries_computeStats_closure(outlierCutOff), t2);
      outliers = new H.WhereIterable(candidateValues, new V.Timeseries_computeStats_closure0(outlierCutOff), t2);
      cleanAverage = V._computeAverage(t1, cleanValues);
      standardDeviation = V._computeStandardDeviationForPopulation(t1, cleanValues);
      noise = cleanAverage > 0 ? standardDeviation / cleanAverage : 0;
      outlierAverage = !outliers.get$isEmpty(outliers) ? V._computeAverage(t1, outliers) : cleanAverage;
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_AnnotatedSample);
      for (t3 = warmUpValues.length, _i = 0; _i < warmUpValues.length; warmUpValues.length === t3 || (0, H.throwConcurrentModificationError)(warmUpValues), ++_i) {
        warmUpValue = warmUpValues[_i];
        t2.push(new V.AnnotatedSample(warmUpValue, warmUpValue > outlierCutOff, true));
      }
      for (t3 = candidateValues.length, _i = 0; _i < candidateValues.length; candidateValues.length === t3 || (0, H.throwConcurrentModificationError)(candidateValues), ++_i) {
        candidate = candidateValues[_i];
        t2.push(new V.AnnotatedSample(candidate, candidate > outlierCutOff, false));
      }
      return new V.TimeseriesStats(t1, cleanAverage, noise, outlierCutOff, outlierAverage, cleanValues.get$length(cleanValues), outliers.get$length(outliers), t2);
    },
    add$1: function(_, value) {
      if (value < 0)
        throw H.wrapException(P.StateError$("Timeseries " + this.name + ": negative metric values are not supported. Got: " + H.S(value)));
      this._allValues.push(value);
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  V.Timeseries_computeStats_closure.prototype = {
    call$1: function(value) {
      return value <= this.outlierCutOff;
    }
  };
  V.Timeseries_computeStats_closure0.prototype = {
    call$1: function(value) {
      return value > this.outlierCutOff;
    }
  };
  V.TimeseriesStats.prototype = {
    get$outlierRatio: function() {
      var t1 = this.average;
      return t1 > 0 ? this.outlierAverage / t1 : 1;
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this.cleanSampleCount,
        t2 = _this.outlierSampleCount;
      t2 = _this.name + ": (samples: " + t1 + " clean/" + t2 + " outliers/" + (t1 + t2) + " measured/" + _this.samples.length + " total)\n" + (" | average: " + H.S(_this.average) + " \u03bcs\n") + (" | outlier average: " + H.S(_this.outlierAverage) + " \u03bcs\n") + (" | outlier/clean ratio: " + H.S(_this.get$outlierRatio()) + "x\n") + (" | noise: " + (C.JSNumber_methods.toStringAsFixed$1(_this.noise * 100, 2) + "%") + "\n");
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  V.AnnotatedSample.prototype = {};
  V.Profile.prototype = {
    record$3$reported: function(key, callback, reported) {
      var duration,
        stopwatch = new P.Stopwatch();
      if ($.Stopwatch__frequency == null) {
        H.Primitives_initTicker();
        $.Stopwatch__frequency = $.Primitives_timerFrequency;
      }
      stopwatch.start$0(0);
      callback.call$0();
      stopwatch.stop$0(0);
      duration = P.Duration$(stopwatch.get$elapsedMicroseconds(), 0);
      this.addDataPoint$3$reported(key, duration, reported);
      return duration;
    },
    addDataPoint$3$reported: function(key, duration, reported) {
      J.add$1$ax(this.scoreData.putIfAbsent$2(0, key, new V.Profile_addDataPoint_closure(key, reported)), duration._duration);
    },
    shouldContinue$0: function() {
      var t1 = this.scoreData;
      if (t1.get$isEmpty(t1))
        return true;
      return !t1.get$keys(t1).every$1(0, new V.Profile_shouldContinue_closure(this));
    },
    toJson$0: function() {
      var t1, t2, t3, timeseries, stats, t4, t5, t6,
        scoreKeys = H.setRuntimeTypeInfo([], type$.JSArray_String),
        json = P.LinkedHashMap_LinkedHashMap$_literal(["name", this.name, "scoreKeys", scoreKeys], type$.String, type$.dynamic);
      for (t1 = this.scoreData, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        timeseries = t1.$index(0, t3);
        if (timeseries.isReported) {
          scoreKeys.push(H.S(t3) + ".average");
          scoreKeys.push(H.S(t3) + ".outlierRatio");
        }
        stats = timeseries.computeStats$0();
        t4 = stats.average;
        json.$indexSet(0, H.S(t3) + ".average", t4);
        t5 = stats.outlierAverage;
        json.$indexSet(0, H.S(t3) + ".outlierAverage", t5);
        t6 = H.S(t3) + ".outlierRatio";
        json.$indexSet(0, t6, t4 > 0 ? t5 / t4 : 1);
        json.$indexSet(0, H.S(t3) + ".noise", stats.noise);
      }
      json.addAll$1(0, this.extraData);
      return json;
    },
    toString$0: function(_) {
      var t2, t3, t4, t5, value,
        t1 = "name: " + this.name + "\n";
      for (t2 = this.scoreData, t3 = t2.get$keys(t2), t3 = t3.get$iterator(t3); t3.moveNext$0();)
        t1 += t2.$index(0, t3.get$current(t3)).computeStats$0().toString$0(0) + "\n";
      for (t2 = this.extraData, t3 = t2.get$keys(t2), t3 = t3.get$iterator(t3), t4 = type$.List_dynamic; t3.moveNext$0();) {
        t5 = t3.get$current(t3);
        value = t2.$index(0, t5);
        if (t4._is(value)) {
          t1 += H.S(t5) + ":\n";
          for (t5 = value.get$iterator(value); t5.moveNext$0();)
            t1 += " - " + H.S(t5.get$current(t5)) + "\n";
        } else
          t1 += H.S(t5) + ": " + H.S(value) + "\n";
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  V.Profile_addDataPoint_closure.prototype = {
    call$0: function() {
      return new V.Timeseries(this.key, this.reported, H.setRuntimeTypeInfo([], type$.JSArray_double));
    },
    $signature: 154
  };
  V.Profile_shouldContinue_closure.prototype = {
    call$1: function(key) {
      return this.$this.scoreData.$index(0, key)._allValues.length >= 300;
    }
  };
  V._computeAverage_closure.prototype = {
    call$2: function(a, b) {
      return a + b;
    }
  };
  V._computeStandardDeviationForPopulation_closure.prototype = {
    call$2: function(previous, value) {
      return previous + Math.pow(value - this.mean, 2);
    }
  };
  V._RecordingWidgetsBinding.prototype = {
    _beginRecording$2: function(recorder, widget) {
      var originalOnError, t1, t2, t3, t4, t5, t6, _this = this, _null = null;
      if (_this._recorder != null)
        throw H.wrapException(P.Exception_Exception("Cannot call _RecordingWidgetsBinding._beginRecording more than once"));
      originalOnError = $.$get$FlutterError_onError();
      recorder.set$didStop(new V._RecordingWidgetsBinding__beginRecording_closure(_this));
      $.FlutterError_onError = new V._RecordingWidgetsBinding__beginRecording_closure0(_this, originalOnError);
      _this._recorder = recorder;
      if ($.WidgetsBinding__instance == null) {
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_WidgetsBindingObserver);
        t2 = $.Zone__current;
        t3 = H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_List_FrameTiming);
        t4 = new Array(7);
        t4.fixed$length = Array;
        t4 = H.setRuntimeTypeInfo(t4, type$.JSArray__TaskEntry_dynamic);
        t5 = type$.int;
        t6 = type$.JSArray_of_void_Function_Duration;
        new N.WidgetsFlutterBinding(_null, t1, true, new P._AsyncCompleter(new P._Future(t2, type$._Future_void), type$._AsyncCompleter_void), false, _null, false, _null, _null, _null, 0, false, _null, _null, new N._SystemFontsNotifier(P.LinkedHashSet_LinkedHashSet$_empty(type$.void_Function)), _null, t3, _null, N.binding__defaultSchedulingStrategy$closure(), new Y.HeapPriorityQueue(N.binding_SchedulerBinding__taskSorter$closure(), t4, type$.HeapPriorityQueue__TaskEntry_dynamic), false, 0, P.LinkedHashMap_LinkedHashMap$_empty(t5, type$._FrameCallbackEntry), P.HashSet_HashSet(t5), H.setRuntimeTypeInfo([], t6), H.setRuntimeTypeInfo([], t6), _null, false, C.SchedulerPhase_0, true, false, _null, C.Duration_0, C.Duration_0, _null, 0, _null, false, P.ListQueue$(_null, type$.PointerEvent), new O.PointerRouter(P.LinkedHashMap_LinkedHashMap$_empty(t5, type$.Map_of_void_Function_PointerEvent_and_Matrix4), P.LinkedHashMap_LinkedHashMap$_empty(type$.void_Function_PointerEvent, type$.Matrix4)), new D.GestureArenaManager(P.LinkedHashMap_LinkedHashMap$_empty(t5, type$._GestureArena)), new G.PointerSignalResolver(), P.LinkedHashMap_LinkedHashMap$_empty(t5, type$.HitTestResult)).BindingBase$0();
      }
      t1 = $.WidgetsBinding__instance;
      t1.scheduleAttachRootWidget$1(widget);
      t1.scheduleWarmUpFrame$0();
    },
    _haltBenchmarkWithError$2: function(error, stackTrace) {
      if (this._hasErrored)
        return;
      this._recorder._onError$2(error, stackTrace);
      this._hasErrored = true;
    },
    handleBeginFrame$1: function(rawTimeStamp) {
      var error, stackTrace, exception, _this = this;
      if (_this._hasErrored || _this._benchmarkStopped)
        return;
      try {
        _this.super$SchedulerBinding$handleBeginFrame(rawTimeStamp);
      } catch (exception) {
        error = H.unwrapException(exception);
        stackTrace = H.getTraceFromException(exception);
        _this._haltBenchmarkWithError$2(error, stackTrace);
        throw exception;
      }
    },
    scheduleFrame$0: function() {
      if (this._hasErrored || this._benchmarkStopped)
        return;
      this.super$SchedulerBinding$scheduleFrame();
    },
    handleDrawFrame$0: function() {
      var error, stackTrace, exception, _this = this;
      if (_this._hasErrored || _this._benchmarkStopped)
        return;
      try {
        _this._recorder.frameWillDraw$0();
        _this.super$SchedulerBinding$handleDrawFrame();
        _this._recorder.frameDidDraw$0();
      } catch (exception) {
        error = H.unwrapException(exception);
        stackTrace = H.getTraceFromException(exception);
        _this._haltBenchmarkWithError$2(error, stackTrace);
        throw exception;
      }
    }
  };
  V._RecordingWidgetsBinding__beginRecording_closure.prototype = {
    call$0: function() {
      this.$this._benchmarkStopped = true;
    },
    $signature: 0
  };
  V._RecordingWidgetsBinding__beginRecording_closure0.prototype = {
    call$1: function(details) {
      this.$this._haltBenchmarkWithError$2(details.exception, details.stack);
      this.originalOnError.call$1(details);
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure.prototype = {
    call$0: function() {
      N.debugDumpRenderTree();
      return D.debugPrintDone();
    },
    $signature: 5
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0.prototype = {
    call$0: function() {
      N.debugDumpSemanticsTree(C.DebugSemanticsDumpOrder_1);
      return D.debugPrintDone();
    },
    $signature: 5
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1.prototype = {
    call$0: function() {
      N.debugDumpSemanticsTree(C.DebugSemanticsDumpOrder_0);
      return D.debugPrintDone();
    },
    $signature: 5
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure.prototype = {
    call$1: function(timings) {
      var t1, t2, t3, t4;
      for (t1 = J.get$iterator$ax(timings), t2 = this._box_0, t3 = this.$this; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        t3._profileFramePostEvent$2(++t2.frameNumber, t4);
      }
    },
    $signature: 24
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.double),
        $async$returnValue;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $._timeDilation;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 58
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0.prototype = {
    call$1: function(value) {
      return this.$call$body$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure(value);
    },
    $call$body$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure: function(value) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null);
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              N.timeDilation(value);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure.prototype = {
    call$0: function() {
      N.debugDumpApp();
      return D.debugPrintDone();
    },
    $signature: 5
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0.prototype = {
    call$1: function(_) {
      return this.$call$body$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(_);
    },
    $call$body$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2: function(_) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["enabled", $async$self.$this.WidgetsBinding__needToReportFirstFrame ? "false" : "true"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1.prototype = {
    call$1: function(_) {
      return this.$call$body$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(_);
    },
    $call$body$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1: function(_) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["enabled", $async$self.$this.WidgetsBinding__firstFrameCompleter.future._state !== 0 ? "true" : "false"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2.prototype = {
    call$1: function(params) {
      return this.$call$body$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(params);
    },
    $call$body$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0: function(params) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_String),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty(H._asStringS(J.$index$asx(params, "class"))).call$1($async$self.$this.WidgetsBinding__renderViewElement);
              t1 = type$.String;
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["Success", "true"], t1, t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty.prototype = {
    call$1: function(element) {
      var t1;
      if (element == null)
        return;
      t1 = element.get$widget();
      t1 = t1 == null ? null : H.getRuntimeType(t1);
      t1 = t1 == null ? null : t1.toString$0(0);
      t1 = t1 == null ? null : C.JSString_methods.startsWith$1(t1, this.className);
      if (t1 === true)
        element.markNeedsBuild$0();
      element.visitChildren$1(this);
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.debugProfileBuildsEnabled;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 52
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4.prototype = {
    call$1: function(value) {
      return this.$call$body$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure(value);
    },
    $call$body$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure: function(value) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null);
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($.debugProfileBuildsEnabled !== value)
                $.debugProfileBuildsEnabled = value;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure.prototype = {
    call$1: function(timings) {
      var t1;
      P.Timeline_instantSync("Rasterized first useful frame", null);
      P.postEvent("Flutter.FirstFrame", P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic));
      t1 = this._box_0;
      $.SchedulerBinding__instance.removeTimingsCallback$1(t1.firstFrameCallback);
      t1.firstFrameCallback = null;
      this.$this.WidgetsBinding__firstFrameCompleter.complete$0(0);
    },
    $signature: 24
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding.prototype = {
    initInstances$0: function() {
      this.super$BindingBase$initInstances();
      $.GestureBinding__instance = this;
      var t1 = $.$get$window();
      t1._onPointerDataPacket = this.get$_handlePointerDataPacket();
      t1._onPointerDataPacketZone = $.Zone__current;
    },
    unlocked$0: function() {
      this.super$BindingBase$unlocked();
      this._flushPointerEventQueue$0();
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding.prototype = {
    initInstances$0: function() {
      var _this = this, t1 = {};
      _this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding$initInstances();
      $.SchedulerBinding__instance = _this;
      t1.frameNumber = 0;
      _this.addTimingsCallback$1(new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure(t1, _this));
    },
    initServiceExtensions$0: function() {
      this.super$BindingBase$initServiceExtensions();
      this.registerNumericServiceExtension$3$getter$name$setter(new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure(), "timeDilation", new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0());
    },
    unlocked$0: function() {
      this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding$unlocked();
      if (this.SchedulerBinding__taskQueue._priority_queue$_length !== 0)
        this._ensureEventLoopCallback$0();
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding.prototype = {
    initInstances$0: function() {
      var _this = this;
      _this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding$initInstances();
      $.ServicesBinding__instance = _this;
      _this.ServicesBinding__defaultBinaryMessenger = C.C__DefaultBinaryMessenger;
      $.$get$window().set$onPlatformMessage(C.C__DefaultBinaryMessenger.get$handlePlatformMessage());
      F.LicenseRegistry_addLicense(_this.get$_addLicenses());
      C.BasicMessageChannel_Qma.setMessageHandler$1(_this.get$handleSystemMessage());
      C.BasicMessageChannel_No7.setMessageHandler$1(_this.get$_handleLifecycleMessage());
      _this.readInitialLifecycleStateFromNativeWindow$0();
    },
    initServiceExtensions$0: function() {
      this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding$initServiceExtensions();
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype = {
    initInstances$0: function() {
      this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initInstances();
      $.PaintingBinding__instance = this;
      var t1 = type$.Object;
      this.PaintingBinding__imageCache = new E.ImageCache(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._PendingImage), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._CachedImage), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._LiveImage));
      C.C_DefaultShaderWarmUp.execute$0();
    },
    handleMemoryPressure$0: function() {
      this.super$ServicesBinding$handleMemoryPressure();
      this.PaintingBinding__imageCache.clear$0(0);
    },
    handleSystemMessage$1: function(systemMessage) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$handleSystemMessage$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.super$ServicesBinding$handleSystemMessage(systemMessage), $async$handleSystemMessage$1);
            case 3:
              // returning from await.
              switch (H._asStringS(J.$index$asx(type$.Map_String_dynamic._as(systemMessage), "type"))) {
                case "fontsChange":
                  $async$self.PaintingBinding__systemFonts.notifyListeners$0();
                  break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$handleSystemMessage$1, $async$completer);
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding.prototype = {
    initInstances$0: function() {
      this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$initInstances();
      $.SemanticsBinding__instance = this;
      this.SemanticsBinding__accessibilityFeatures = $.$get$window()._accessibilityFeatures;
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding.prototype = {
    initInstances$0: function() {
      var t1, t2, _this = this;
      _this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding$initInstances();
      $.RendererBinding__instance = _this;
      t1 = type$.JSArray_RenderObject;
      _this.RendererBinding__pipelineOwner = new K.PipelineOwner(_this.get$ensureVisualUpdate(), _this.get$_handleSemanticsOwnerCreated(), _this.get$_handleSemanticsOwnerDisposed(), H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1), P.LinkedHashSet_LinkedHashSet$_empty(type$.RenderObject));
      t1 = $.$get$window();
      t1._onMetricsChanged = _this.get$handleMetricsChanged();
      t2 = t1._onMetricsChangedZone = $.Zone__current;
      t1._onPlatformBrightnessChanged = _this.get$handlePlatformBrightnessChanged();
      t1._onPlatformBrightnessChangedZone = t2;
      t1._onSemanticsEnabledChanged = _this.get$_handleSemanticsEnabledChanged();
      t1._onSemanticsEnabledChangedZone = t2;
      t1._onSemanticsAction = _this.get$_handleSemanticsAction();
      t1._onSemanticsActionZone = t2;
      _this.initRenderView$0();
      _this.setSemanticsEnabled$1(H.EngineSemanticsOwner_instance()._semanticsEnabled);
      _this.SchedulerBinding__persistentCallbacks.push(_this.get$_handlePersistentFrameCallback());
      _this.initMouseTracker$0();
    },
    initServiceExtensions$0: function() {
      var _this = this;
      _this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initServiceExtensions();
      _this.registerSignalServiceExtension$2$callback$name(new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure(), "debugDumpRenderTree");
      _this.registerSignalServiceExtension$2$callback$name(new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0(), "debugDumpSemanticsTreeInTraversalOrder");
      _this.registerSignalServiceExtension$2$callback$name(new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1(), "debugDumpSemanticsTreeInInverseHitTestOrder");
    },
    hitTest$2: function(result, position) {
      this.RendererBinding__pipelineOwner._rootNode.hitTest$2$position(result, position);
      this.super$GestureBinding$hitTest(result, position);
    }
  };
  V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding.prototype = {
    initInstances$0: function() {
      var t1, _this = this;
      _this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initInstances();
      $.WidgetsBinding__instance = _this;
      t1 = new N.BuildOwner(new N._InactiveElements(P.HashSet_HashSet(type$.Element_2)), H.setRuntimeTypeInfo([], type$.JSArray_Element_2), O.FocusManager$());
      _this.WidgetsBinding__buildOwner = t1;
      t1.onBuildScheduled = _this.get$_handleBuildScheduled();
      $.$get$window().toString;
      C.MethodChannel_gc6.setMethodCallHandler$1(_this.get$_handleNavigationInvocation());
      $.FlutterErrorDetails_propertiesTransformers.push(N.widget_inspector__transformDebugCreator$closure());
    },
    initServiceExtensions$0: function() {
      var _this = this;
      _this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initServiceExtensions();
      _this.registerSignalServiceExtension$2$callback$name(new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure(), "debugDumpApp");
      _this.registerServiceExtension$2$callback$name(new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(_this), "didSendFirstFrameEvent");
      _this.registerServiceExtension$2$callback$name(new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(_this), "didSendFirstFrameRasterizedEvent");
      _this.registerServiceExtension$2$callback$name(new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(_this), "fastReassemble");
      _this.registerBoolServiceExtension$3$getter$name$setter(new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3(), "profileWidgetBuilds", new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4());
    },
    handleMetricsChanged$0: function() {
      var t1, t2, _i;
      this.super$RendererBinding$handleMetricsChanged();
      for (t1 = this.WidgetsBinding__observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].didChangeMetrics$0();
    },
    handlePlatformBrightnessChanged$0: function() {
      var t1, t2, _i;
      this.super$RendererBinding$handlePlatformBrightnessChanged();
      for (t1 = this.WidgetsBinding__observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].didChangePlatformBrightness$0();
    },
    handleAppLifecycleStateChanged$1: function(state) {
      var t1, _i;
      this.super$SchedulerBinding$handleAppLifecycleStateChanged(state);
      for (t1 = this.WidgetsBinding__observers.length, _i = 0; _i < t1; ++_i)
        ;
    },
    handleMemoryPressure$0: function() {
      var t1, _i;
      this.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$handleMemoryPressure();
      for (t1 = this.WidgetsBinding__observers.length, _i = 0; _i < t1; ++_i)
        ;
    },
    drawFrame$0: function() {
      var firstFrameCallback, t2, _this = this, t1 = {};
      t1.firstFrameCallback = null;
      if (_this.WidgetsBinding__needToReportFirstFrame) {
        firstFrameCallback = new V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure(t1, _this);
        t1.firstFrameCallback = firstFrameCallback;
        $.SchedulerBinding__instance.addTimingsCallback$1(firstFrameCallback);
      }
      try {
        t2 = _this.WidgetsBinding__renderViewElement;
        if (t2 != null)
          _this.WidgetsBinding__buildOwner.buildScope$1(t2);
        _this.super$RendererBinding$drawFrame();
        _this.WidgetsBinding__buildOwner.finalizeTree$0();
      } finally {
      }
      if (_this.WidgetsBinding__needToReportFirstFrame)
        t2 = _this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0;
      else
        t2 = false;
      if (t2)
        P.Timeline_instantSync("Widgets built first useful frame", null);
      t2 = _this.WidgetsBinding__needToReportFirstFrame = false;
      t1 = t1.firstFrameCallback;
      if (t1 != null)
        t2 = !(_this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0);
      if (t2)
        $.SchedulerBinding__instance.removeTimingsCallback$1(t1);
    },
    get$framesEnabled: function() {
      return N.SchedulerBinding.prototype.get$framesEnabled.call(this) && this.WidgetsBinding__readyToProduceFrames;
    }
  };
  Z.closure.prototype = {
    call$0: function() {
      return new T.BenchCardInfiniteScroll(true, "bench_card_infinite_scroll");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 155
  };
  Z.closure0.prototype = {
    call$0: function() {
      return new G.BenchDrawRect(true, "draw_rect");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 156
  };
  Z.closure1.prototype = {
    call$0: function() {
      var t1 = new A.BenchTextOutOfPictureBounds(true, "text_out_of_picture_bounds"),
        t2 = $.$get$window();
      t1.singleLineParagraphs = O.generateLaidOutParagraphs(C.Color_4294901760, 4, 2, 500, t2.get$physicalSize()._dx / 2);
      t1.multiLineParagraphs = O.generateLaidOutParagraphs(C.Color_4278255360, 49, 30, 50, t2.get$physicalSize()._dx / 2);
      return t1;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 157
  };
  Z.closure2.prototype = {
    call$0: function() {
      return new Q.BenchSimpleLazyTextScroll(true, "bench_simple_lazy_text_scroll");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 158
  };
  Z.closure3.prototype = {
    call$0: function() {
      return new K.BenchBuildMaterialCheckbox(true, "build_material_checkbox");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 159
  };
  Z.closure4.prototype = {
    call$0: function() {
      return M.BenchDynamicClipOnStaticPicture$();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 160
  };
  Z.closure5.prototype = {
    call$0: function() {
      return new A.BenchPictureRecording(false, "bench_picture_recording");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 161
  };
  Z.closure6.prototype = {
    call$0: function() {
      return new Q.BenchTextLayout(new Q.ParagraphGenerator(), false, false, "text_dom_layout");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 47
  };
  Z.closure7.prototype = {
    call$0: function() {
      return new Q.BenchTextLayout(new Q.ParagraphGenerator(), true, false, "text_canvas_layout");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 47
  };
  Z.closure8.prototype = {
    call$0: function() {
      var _null = null,
        t1 = P.ParagraphBuilder_ParagraphBuilder(P.ParagraphStyle_ParagraphStyle(_null, "sans-serif", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      t1.pushStyle$1(P.TextStyle_TextStyle(_null, _null, _null, _null, _null, _null, _null, _null, _null, 12, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      t1.addText$1("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.");
      return new Q.BenchTextCachedLayout(false, t1, false, "text_dom_cached_layout");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 46
  };
  Z.closure9.prototype = {
    call$0: function() {
      var _null = null,
        t1 = P.ParagraphBuilder_ParagraphBuilder(P.ParagraphStyle_ParagraphStyle(_null, "sans-serif", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      t1.pushStyle$1(P.TextStyle_TextStyle(_null, _null, _null, _null, _null, _null, _null, _null, _null, 12, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      t1.addText$1("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.");
      return new Q.BenchTextCachedLayout(true, t1, false, "text_canvas_cached_layout");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 46
  };
  Z.closure10.prototype = {
    call$0: function() {
      return new Q.BenchBuildColorsGrid(C._TestMode_1, true, "text_dom_color_grid");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 55
  };
  Z.closure11.prototype = {
    call$0: function() {
      return new Q.BenchBuildColorsGrid(C._TestMode_0, true, "text_canvas_color_grid");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 55
  };
  Z._runBenchmark_closure.prototype = {
    call$0: function() {
      return $.$get$_client().startPerformanceTracing$1(this.benchmarkName);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 5
  };
  Z._fallbackToManual_closure.prototype = {
    call$1: function($name) {
      return '<li><button id="' + H.S($name) + '">' + H.S($name) + "</button></li>";
    }
  };
  Z._fallbackToManual_closure0.prototype = {
    call$1: function(_) {
      var manualPanel = document.querySelector("#manual-panel");
      if (manualPanel != null)
        J.remove$0$ax(manualPanel);
      Z._runBenchmark(this.benchmarkName);
    },
    $signature: 2
  };
  Z._printResultsToScreen_closure.prototype = {
    call$2: function(scoreKey, timeseries) {
      var _null = null,
        _s9_ = "beforeend",
        t1 = document,
        t2 = t1.body,
        t3 = "<h2>" + H.S(scoreKey) + "</h2>";
      t2.toString;
      C.BodyElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t2, _s9_, t3, _null, _null);
      t3 = t1.body;
      t2 = "<pre>" + timeseries.computeStats$0().toString$0(0) + "</pre>";
      t3.toString;
      C.BodyElement_methods.insertAdjacentHtml$4$treeSanitizer$validator(t3, _s9_, t2, _null, _null);
      t1.body.appendChild(Z.TimeseriesVisualization$(timeseries).render$0());
    },
    $signature: 165
  };
  Z.TimeseriesVisualization.prototype = {
    TimeseriesVisualization$1: function(_timeseries) {
      var t1, t2, _this = this;
      _this._stats = _this._timeseries.computeStats$0();
      t1 = W.CanvasElement_CanvasElement(null, null);
      _this._canvas = t1;
      t2 = window.screen.width;
      _this._screenWidth = t2;
      t1.width = t2;
      _this._canvas.height = C.JSNumber_methods.round$0(200 * window.devicePixelRatio);
      t2 = _this._canvas.style;
      t2.width = "100%";
      t2.height = "200px";
      t2.outline = "1px solid green";
      _this._ctx = _this._canvas.getContext("2d");
      t1 = _this._stats.samples;
      t2 = H._arrayInstanceType(t1);
      _this._maxValueChartRange = 1.5 * new H.MappedIterable(new H.WhereIterable(t1, new Z.TimeseriesVisualization_closure(), t2._eval$1("WhereIterable<1>")), new Z.TimeseriesVisualization_closure0(), t2._eval$1("MappedIterable<1,double>")).fold$2(0, 0, H.instantiate1(P.math__max$closure(), type$.double));
    },
    drawLine$4: function(x1, y1, x2, y2) {
      var _this = this;
      _this._ctx.beginPath();
      _this._ctx.moveTo(x1, y1);
      _this._ctx.lineTo(x2, y2);
      _this._ctx.stroke();
    },
    render$0: function() {
      var barWidth, t1, xOffset, i, t2, sample, t3, t4, _this = this;
      _this._ctx.translate(0, 200 * window.devicePixelRatio);
      _this._ctx.scale(1, -window.devicePixelRatio);
      barWidth = _this._screenWidth / _this._stats.samples.length;
      for (t1 = barWidth - 1, xOffset = 0, i = 0; t2 = _this._stats.samples, i < t2.length; ++i) {
        sample = t2[i];
        if (sample.isWarmUpValue) {
          _this._ctx.fillStyle = "rgba(200,200,200,1)";
          t2 = _this._ctx;
          t3 = _this._maxValueChartRange;
          t2.fillRect(xOffset, 0, barWidth, 200 * t3 / t3);
        }
        t2 = sample.magnitude;
        if (t2 > _this._maxValueChartRange)
          _this._ctx.fillStyle = "rgba(100,50,100,0.8)";
        else {
          t3 = _this._ctx;
          if (sample.isOutlier)
            t3.fillStyle = "rgba(255,50,50,0.6)";
          else
            t3.fillStyle = "rgba(50,50,255,0.6)";
        }
        _this._ctx.fillRect(xOffset, 0, t1, 200 * t2 / _this._maxValueChartRange);
        xOffset += barWidth;
      }
      _this._ctx.lineWidth = 1;
      t1 = 200 * _this._stats.average / _this._maxValueChartRange;
      _this.drawLine$4(0, t1, _this._screenWidth, t1);
      t1 = _this._ctx;
      t2 = H.setRuntimeTypeInfo([5, 5], type$.JSArray_num);
      if (!!t1.setLineDash)
        t1.setLineDash(t2);
      else if (!!t1.webkitLineDash)
        t1.webkitLineDash = t2;
      t1 = 200 * _this._stats.outlierCutOff / _this._maxValueChartRange;
      _this.drawLine$4(0, t1, _this._screenWidth, t1);
      _this._ctx.fillStyle = "rgba(255,50,50,0.3)";
      t1 = _this._ctx;
      t2 = _this._stats;
      t3 = t2.average;
      t2 = t2.noise;
      t4 = _this._maxValueChartRange;
      t1.fillRect(0, 200 * (t3 * (1 - t2)) / t4, _this._screenWidth, 200 * (2 * t3 * t2) / t4);
      return _this._canvas;
    }
  };
  Z.TimeseriesVisualization_closure.prototype = {
    call$1: function(sample) {
      return !sample.isOutlier;
    }
  };
  Z.TimeseriesVisualization_closure0.prototype = {
    call$1: function(sample) {
      return sample.magnitude;
    }
  };
  Z.LocalBenchmarkServerClient.prototype = {
    requestNextBenchmark$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, request, t1;
      var $async$requestNextBenchmark$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$benchmarks();
              t1 = t1.get$keys(t1);
              $async$goto = 3;
              return P._asyncAwait($async$self._requestXhr$4$method$mimeType$sendData("/next-benchmark", "POST", "application/json", C.C_JsonCodec.encode$1(P.List_List$from(t1, true, H._instanceType(t1)._eval$1("Iterable.E")))), $async$requestNextBenchmark$0);
            case 3:
              // returning from await.
              request = $async$result;
              if (request.status === 404) {
                $async$self.isInManualMode = true;
                $async$returnValue = "__manual_fallback__";
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.isInManualMode = false;
              $async$returnValue = request.responseText;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$requestNextBenchmark$0, $async$completer);
    },
    startPerformanceTracing$1: function(benchmarkName) {
      return this.startPerformanceTracing$body$LocalBenchmarkServerClient(benchmarkName);
    },
    startPerformanceTracing$body$LocalBenchmarkServerClient: function(benchmarkName) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$startPerformanceTracing$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self.isInManualMode)
                H.throwExpression(P.StateError$("Operation not supported in manual fallback mode."));
              $async$goto = 2;
              return P._asyncAwait(W.HttpRequest_request("/start-performance-tracing?label=" + H.S(benchmarkName), "POST", "application/json", null, null), $async$startPerformanceTracing$1);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$startPerformanceTracing$1, $async$completer);
    },
    stopPerformanceTracing$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$stopPerformanceTracing$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self.isInManualMode)
                H.throwExpression(P.StateError$("Operation not supported in manual fallback mode."));
              $async$goto = 2;
              return P._asyncAwait(W.HttpRequest_request("/stop-performance-tracing", "POST", "application/json", null, null), $async$stopPerformanceTracing$0);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$stopPerformanceTracing$0, $async$completer);
    },
    sendProfileData$1: function(profile) {
      return this.sendProfileData$body$LocalBenchmarkServerClient(profile);
    },
    sendProfileData$body$LocalBenchmarkServerClient: function(profile) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$sendProfileData$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self.isInManualMode)
                H.throwExpression(P.StateError$("Operation not supported in manual fallback mode."));
              $async$goto = 2;
              return P._asyncAwait(W.HttpRequest_request("/profile-data", "POST", "application/json", null, C.C_JsonCodec.encode$1(profile.toJson$0())), $async$sendProfileData$1);
            case 2:
              // returning from await.
              t1 = $async$result.status;
              if (t1 !== 200)
                throw H.wrapException(P.Exception_Exception("Failed to report profile data to benchmark server. The server responded with status code " + H.S(t1) + "."));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$sendProfileData$1, $async$completer);
    },
    reportError$2: function(error, stackTrace) {
      return this.reportError$body$LocalBenchmarkServerClient(error, stackTrace);
    },
    reportError$body$LocalBenchmarkServerClient: function(error, stackTrace) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$reportError$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self.isInManualMode)
                H.throwExpression(P.StateError$("Operation not supported in manual fallback mode."));
              $async$goto = 2;
              return P._asyncAwait(W.HttpRequest_request("/on-error", "POST", "application/json", null, C.C_JsonCodec.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["error", H.S(error), "stackTrace", H.S(stackTrace)], type$.String, type$.dynamic))), $async$reportError$2);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$reportError$2, $async$completer);
    },
    _requestXhr$4$method$mimeType$sendData: function(url, method, mimeType, sendData) {
      var t2,
        t1 = new P._Future($.Zone__current, type$._Future_HttpRequest),
        completer = new P._AsyncCompleter(t1, type$._AsyncCompleter_HttpRequest),
        xhr = new XMLHttpRequest();
      C.HttpRequest_methods.open$3$async(xhr, method, url, true);
      xhr.overrideMimeType(mimeType);
      t2 = type$.ProgressEvent;
      W._EventStreamSubscription$(xhr, "load", new Z.LocalBenchmarkServerClient__requestXhr_closure(completer, xhr), false, t2);
      W._EventStreamSubscription$(xhr, "error", completer.get$completeError(), false, t2);
      xhr.send(sendData);
      return t1;
    }
  };
  Z.LocalBenchmarkServerClient__requestXhr_closure.prototype = {
    call$1: function(e) {
      this.completer.complete$1(0, this.xhr);
    }
  };
  N._TypedDataBuffer0.prototype = {
    get$length: function(_) {
      return this._typed_buffers$_length;
    },
    $index: function(_, index) {
      if (index >= this._typed_buffers$_length)
        throw H.wrapException(P.IndexError$(index, this, null, null, null));
      return this._typed_buffers$_buffer[index];
    },
    $indexSet: function(_, index, value) {
      if (index >= this._typed_buffers$_length)
        throw H.wrapException(P.IndexError$(index, this, null, null, null));
      this._typed_buffers$_buffer[index] = value;
    },
    set$length: function(_, newLength) {
      var t2, i, newBuffer, _this = this,
        t1 = _this._typed_buffers$_length;
      if (newLength < t1)
        for (t2 = _this._typed_buffers$_buffer, i = newLength; i < t1; ++i)
          t2[i] = 0;
      else {
        t1 = _this._typed_buffers$_buffer.length;
        if (newLength > t1) {
          if (t1 === 0)
            newBuffer = new Uint8Array(newLength);
          else
            newBuffer = _this._typed_buffers$_createBiggerBuffer$1(newLength);
          C.NativeUint8List_methods.setRange$3(newBuffer, 0, _this._typed_buffers$_length, _this._typed_buffers$_buffer);
          _this._typed_buffers$_buffer = newBuffer;
        }
      }
      _this._typed_buffers$_length = newLength;
    },
    _typed_buffers$_add$1: function(_, value) {
      var _this = this,
        t1 = _this._typed_buffers$_length;
      if (t1 === _this._typed_buffers$_buffer.length)
        _this._typed_buffers$_grow$1(t1);
      _this._typed_buffers$_buffer[_this._typed_buffers$_length++] = value;
    },
    add$1: function(_, value) {
      var _this = this,
        t1 = _this._typed_buffers$_length;
      if (t1 === _this._typed_buffers$_buffer.length)
        _this._typed_buffers$_grow$1(t1);
      _this._typed_buffers$_buffer[_this._typed_buffers$_length++] = value;
    },
    addAll$3: function(_, values, start, end) {
      P.RangeError_checkNotNegative(start, "start");
      if (end != null && start > end)
        throw H.wrapException(P.RangeError$range(end, start, null, "end", null));
      this._typed_buffers$_addAll$3(values, start, end);
    },
    addAll$1: function($receiver, values) {
      return this.addAll$3($receiver, values, 0, null);
    },
    _typed_buffers$_addAll$3: function(values, start, end) {
      var t1, i, value;
      if (type$.List_dynamic._is(values))
        end = end == null ? values.length : end;
      if (end != null) {
        this._typed_buffers$_insertKnownLength$4(this._typed_buffers$_length, values, start, end);
        return;
      }
      for (t1 = J.get$iterator$ax(values), i = 0; t1.moveNext$0();) {
        value = t1.get$current(t1);
        if (i >= start)
          this._typed_buffers$_add$1(0, value);
        ++i;
      }
      if (i < start)
        throw H.wrapException(P.StateError$("Too few elements"));
    },
    _typed_buffers$_insertKnownLength$4: function(index, values, start, end) {
      var t1, valuesLength, newLength, t2, _this = this;
      if (type$.List_dynamic._is(values)) {
        t1 = values.length;
        if (start > t1 || end > t1)
          throw H.wrapException(P.StateError$("Too few elements"));
      }
      valuesLength = end - start;
      newLength = _this._typed_buffers$_length + valuesLength;
      _this._typed_buffers$_ensureCapacity$1(newLength);
      t1 = _this._typed_buffers$_buffer;
      t2 = index + valuesLength;
      C.NativeUint8List_methods.setRange$4(t1, t2, _this._typed_buffers$_length + valuesLength, t1, index);
      C.NativeUint8List_methods.setRange$4(_this._typed_buffers$_buffer, index, t2, values, start);
      _this._typed_buffers$_length = newLength;
    },
    _typed_buffers$_ensureCapacity$1: function(requiredCapacity) {
      var newBuffer, _this = this;
      if (requiredCapacity <= _this._typed_buffers$_buffer.length)
        return;
      newBuffer = _this._typed_buffers$_createBiggerBuffer$1(requiredCapacity);
      C.NativeUint8List_methods.setRange$3(newBuffer, 0, _this._typed_buffers$_length, _this._typed_buffers$_buffer);
      _this._typed_buffers$_buffer = newBuffer;
    },
    _typed_buffers$_createBiggerBuffer$1: function(requiredCapacity) {
      var t1,
        newLength = this._typed_buffers$_buffer.length * 2;
      if (requiredCapacity != null && newLength < requiredCapacity)
        newLength = requiredCapacity;
      else if (newLength < 8)
        newLength = 8;
      t1 = H._isInt(newLength) ? newLength : H.throwExpression(P.ArgumentError$("Invalid length " + H.S(newLength)));
      return new Uint8Array(t1);
    },
    _typed_buffers$_grow$1: function($length) {
      var t1 = this._typed_buffers$_createBiggerBuffer$1(null);
      C.NativeUint8List_methods.setRange$3(t1, 0, $length, this._typed_buffers$_buffer);
      this._typed_buffers$_buffer = t1;
    }
  };
  N._IntBuffer0.prototype = {};
  N.Uint8Buffer0.prototype = {};
  A.hashObjects_closure.prototype = {
    call$2: function(h, i) {
      var hash = 536870911 & h + J.get$hashCode$(i);
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    $signature: 166
  };
  E.Matrix4.prototype = {
    setFrom$1: function(arg) {
      var argStorage = arg._m4storage,
        t1 = this._m4storage;
      t1[15] = argStorage[15];
      t1[14] = argStorage[14];
      t1[13] = argStorage[13];
      t1[12] = argStorage[12];
      t1[11] = argStorage[11];
      t1[10] = argStorage[10];
      t1[9] = argStorage[9];
      t1[8] = argStorage[8];
      t1[7] = argStorage[7];
      t1[6] = argStorage[6];
      t1[5] = argStorage[5];
      t1[4] = argStorage[4];
      t1[3] = argStorage[3];
      t1[2] = argStorage[2];
      t1[1] = argStorage[1];
      t1[0] = argStorage[0];
    },
    toString$0: function(_) {
      var _this = this;
      return "[0] " + _this.getRow$1(0).toString$0(0) + "\n[1] " + _this.getRow$1(1).toString$0(0) + "\n[2] " + _this.getRow$1(2).toString$0(0) + "\n[3] " + _this.getRow$1(3).toString$0(0) + "\n";
    },
    $index: function(_, i) {
      return this._m4storage[i];
    },
    $eq: function(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof E.Matrix4) {
        t1 = this._m4storage;
        t2 = t1[0];
        t3 = other._m4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3] && t1[4] === t3[4] && t1[5] === t3[5] && t1[6] === t3[6] && t1[7] === t3[7] && t1[8] === t3[8] && t1[9] === t3[9] && t1[10] === t3[10] && t1[11] === t3[11] && t1[12] === t3[12] && t1[13] === t3[13] && t1[14] === t3[14] && t1[15] === t3[15];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return A.hashObjects(this._m4storage);
    },
    setRow$2: function(row, arg) {
      var argStorage = arg._v4storage,
        t1 = this._m4storage;
      t1[row] = argStorage[0];
      t1[4 + row] = argStorage[1];
      t1[8 + row] = argStorage[2];
      t1[12 + row] = argStorage[3];
    },
    getRow$1: function(row) {
      var t1 = new Float64Array(4),
        t2 = this._m4storage;
      t1[0] = t2[row];
      t1[1] = t2[4 + row];
      t1[2] = t2[8 + row];
      t1[3] = t2[12 + row];
      return new E.Vector4(t1);
    },
    $mul: function(_, arg) {
      var t1;
      if (typeof arg == "number") {
        t1 = new E.Matrix4(new Float64Array(16));
        t1.setFrom$1(this);
        t1.scale$3(0, arg, null, null);
        return t1;
      }
      if (arg instanceof E.Matrix4) {
        t1 = new E.Matrix4(new Float64Array(16));
        t1.setFrom$1(this);
        t1.multiply$1(0, arg);
        return t1;
      }
      throw H.wrapException(P.ArgumentError$(arg));
    },
    $add: function(_, arg) {
      var t1 = new E.Matrix4(new Float64Array(16));
      t1.setFrom$1(this);
      t1.add$1(0, arg);
      return t1;
    },
    $sub: function(_, arg) {
      var oStorage,
        t1 = new Float64Array(16),
        t2 = new E.Matrix4(t1);
      t2.setFrom$1(this);
      oStorage = arg._m4storage;
      t1[0] = t1[0] - oStorage[0];
      t1[1] = t1[1] - oStorage[1];
      t1[2] = t1[2] - oStorage[2];
      t1[3] = t1[3] - oStorage[3];
      t1[4] = t1[4] - oStorage[4];
      t1[5] = t1[5] - oStorage[5];
      t1[6] = t1[6] - oStorage[6];
      t1[7] = t1[7] - oStorage[7];
      t1[8] = t1[8] - oStorage[8];
      t1[9] = t1[9] - oStorage[9];
      t1[10] = t1[10] - oStorage[10];
      t1[11] = t1[11] - oStorage[11];
      t1[12] = t1[12] - oStorage[12];
      t1[13] = t1[13] - oStorage[13];
      t1[14] = t1[14] - oStorage[14];
      t1[15] = t1[15] - oStorage[15];
      return t2;
    },
    translate$2: function(_, x, y) {
      var ty, tx, tz, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
      if (typeof x == "number") {
        ty = y;
        tx = x;
        tz = 0;
      } else {
        tx = null;
        ty = null;
        tz = null;
      }
      t1 = this._m4storage;
      t2 = t1[0];
      t3 = t1[4];
      t4 = t1[8];
      t5 = t1[12];
      t6 = t1[1];
      t7 = t1[5];
      t8 = t1[9];
      t9 = t1[13];
      t10 = t1[2];
      t11 = t1[6];
      t12 = t1[10];
      t13 = t1[14];
      t14 = t1[3];
      t15 = t1[7];
      t16 = t1[11];
      t17 = t1[15];
      t1[12] = t2 * tx + t3 * ty + t4 * tz + t5;
      t1[13] = t6 * tx + t7 * ty + t8 * tz + t9;
      t1[14] = t10 * tx + t11 * ty + t12 * tz + t13;
      t1[15] = t14 * tx + t15 * ty + t16 * tz + t17;
    },
    scale$3: function(_, x, y, z) {
      var sy, sz, sx, t1;
      if (typeof x == "number") {
        sy = y == null ? x : y;
        sz = z == null ? x : z;
        sx = x;
      } else {
        sx = null;
        sy = null;
        sz = null;
      }
      t1 = this._m4storage;
      t1[0] = t1[0] * sx;
      t1[1] = t1[1] * sx;
      t1[2] = t1[2] * sx;
      t1[3] = t1[3] * sx;
      t1[4] = t1[4] * sy;
      t1[5] = t1[5] * sy;
      t1[6] = t1[6] * sy;
      t1[7] = t1[7] * sy;
      t1[8] = t1[8] * sz;
      t1[9] = t1[9] * sz;
      t1[10] = t1[10] * sz;
      t1[11] = t1[11] * sz;
      t1[12] = t1[12];
      t1[13] = t1[13];
      t1[14] = t1[14];
      t1[15] = t1[15];
    },
    setIdentity$0: function() {
      var t1 = this._m4storage;
      t1[0] = 1;
      t1[1] = 0;
      t1[2] = 0;
      t1[3] = 0;
      t1[4] = 0;
      t1[5] = 1;
      t1[6] = 0;
      t1[7] = 0;
      t1[8] = 0;
      t1[9] = 0;
      t1[10] = 1;
      t1[11] = 0;
      t1[12] = 0;
      t1[13] = 0;
      t1[14] = 0;
      t1[15] = 1;
    },
    copyInverse$1: function(arg) {
      var invDet, t1, t2, t3,
        argStorage = arg._m4storage,
        a00 = argStorage[0],
        a01 = argStorage[1],
        a02 = argStorage[2],
        a03 = argStorage[3],
        a10 = argStorage[4],
        a11 = argStorage[5],
        a12 = argStorage[6],
        a13 = argStorage[7],
        a20 = argStorage[8],
        a21 = argStorage[9],
        a22 = argStorage[10],
        a23 = argStorage[11],
        a30 = argStorage[12],
        a31 = argStorage[13],
        a32 = argStorage[14],
        a33 = argStorage[15],
        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32,
        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det === 0) {
        this.setFrom$1(arg);
        return 0;
      }
      invDet = 1 / det;
      t1 = this._m4storage;
      t1[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
      t1[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
      t1[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
      t1[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
      t2 = -a10;
      t1[4] = (t2 * b11 + a12 * b08 - a13 * b07) * invDet;
      t1[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
      t3 = -a30;
      t1[6] = (t3 * b05 + a32 * b02 - a33 * b01) * invDet;
      t1[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
      t1[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
      t1[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
      t1[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
      t1[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
      t1[12] = (t2 * b09 + a11 * b07 - a12 * b06) * invDet;
      t1[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
      t1[14] = (t3 * b03 + a31 * b01 - a32 * b00) * invDet;
      t1[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
      return det;
    },
    add$1: function(_, o) {
      var oStorage = o._m4storage,
        t1 = this._m4storage;
      t1[0] = t1[0] + oStorage[0];
      t1[1] = t1[1] + oStorage[1];
      t1[2] = t1[2] + oStorage[2];
      t1[3] = t1[3] + oStorage[3];
      t1[4] = t1[4] + oStorage[4];
      t1[5] = t1[5] + oStorage[5];
      t1[6] = t1[6] + oStorage[6];
      t1[7] = t1[7] + oStorage[7];
      t1[8] = t1[8] + oStorage[8];
      t1[9] = t1[9] + oStorage[9];
      t1[10] = t1[10] + oStorage[10];
      t1[11] = t1[11] + oStorage[11];
      t1[12] = t1[12] + oStorage[12];
      t1[13] = t1[13] + oStorage[13];
      t1[14] = t1[14] + oStorage[14];
      t1[15] = t1[15] + oStorage[15];
    },
    multiply$1: function(_, arg) {
      var t1 = this._m4storage,
        m00 = t1[0],
        m01 = t1[4],
        m02 = t1[8],
        m03 = t1[12],
        m10 = t1[1],
        m11 = t1[5],
        m12 = t1[9],
        m13 = t1[13],
        m20 = t1[2],
        m21 = t1[6],
        m22 = t1[10],
        m23 = t1[14],
        m30 = t1[3],
        m31 = t1[7],
        m32 = t1[11],
        m33 = t1[15],
        argStorage = arg._m4storage,
        n00 = argStorage[0],
        n01 = argStorage[4],
        n02 = argStorage[8],
        n03 = argStorage[12],
        n10 = argStorage[1],
        n11 = argStorage[5],
        n12 = argStorage[9],
        n13 = argStorage[13],
        n20 = argStorage[2],
        n21 = argStorage[6],
        n22 = argStorage[10],
        n23 = argStorage[14],
        n30 = argStorage[3],
        n31 = argStorage[7],
        n32 = argStorage[11],
        n33 = argStorage[15];
      t1[0] = m00 * n00 + m01 * n10 + m02 * n20 + m03 * n30;
      t1[4] = m00 * n01 + m01 * n11 + m02 * n21 + m03 * n31;
      t1[8] = m00 * n02 + m01 * n12 + m02 * n22 + m03 * n32;
      t1[12] = m00 * n03 + m01 * n13 + m02 * n23 + m03 * n33;
      t1[1] = m10 * n00 + m11 * n10 + m12 * n20 + m13 * n30;
      t1[5] = m10 * n01 + m11 * n11 + m12 * n21 + m13 * n31;
      t1[9] = m10 * n02 + m11 * n12 + m12 * n22 + m13 * n32;
      t1[13] = m10 * n03 + m11 * n13 + m12 * n23 + m13 * n33;
      t1[2] = m20 * n00 + m21 * n10 + m22 * n20 + m23 * n30;
      t1[6] = m20 * n01 + m21 * n11 + m22 * n21 + m23 * n31;
      t1[10] = m20 * n02 + m21 * n12 + m22 * n22 + m23 * n32;
      t1[14] = m20 * n03 + m21 * n13 + m22 * n23 + m23 * n33;
      t1[3] = m30 * n00 + m31 * n10 + m32 * n20 + m33 * n30;
      t1[7] = m30 * n01 + m31 * n11 + m32 * n21 + m33 * n31;
      t1[11] = m30 * n02 + m31 * n12 + m32 * n22 + m33 * n32;
      t1[15] = m30 * n03 + m31 * n13 + m32 * n23 + m33 * n33;
    },
    transform3$1: function(arg) {
      var argStorage = arg._v3storage,
        t1 = this._m4storage,
        t2 = t1[0],
        t3 = argStorage[0],
        t4 = t1[4],
        t5 = argStorage[1],
        t6 = t1[8],
        t7 = argStorage[2],
        t8 = t1[12],
        t9 = t1[1],
        t10 = t1[5],
        t11 = t1[9],
        t12 = t1[13],
        t13 = t1[2],
        t14 = t1[6],
        t15 = t1[10];
      t1 = t1[14];
      argStorage[0] = t2 * t3 + t4 * t5 + t6 * t7 + t8;
      argStorage[1] = t9 * t3 + t10 * t5 + t11 * t7 + t12;
      argStorage[2] = t13 * t3 + t14 * t5 + t15 * t7 + t1;
      return arg;
    },
    perspectiveTransform$1: function(arg) {
      var argStorage = arg._v3storage,
        t1 = this._m4storage,
        t2 = t1[0],
        t3 = argStorage[0],
        t4 = t1[4],
        t5 = argStorage[1],
        t6 = t1[8],
        t7 = argStorage[2],
        t8 = t1[12],
        t9 = t1[1],
        t10 = t1[5],
        t11 = t1[9],
        t12 = t1[13],
        t13 = t1[2],
        t14 = t1[6],
        t15 = t1[10],
        t16 = t1[14],
        w_ = 1 / (t1[3] * t3 + t1[7] * t5 + t1[11] * t7 + t1[15]);
      argStorage[0] = (t2 * t3 + t4 * t5 + t6 * t7 + t8) * w_;
      argStorage[1] = (t9 * t3 + t10 * t5 + t11 * t7 + t12) * w_;
      argStorage[2] = (t13 * t3 + t14 * t5 + t15 * t7 + t16) * w_;
      return arg;
    }
  };
  E.Vector3.prototype = {
    setValues$3: function(x_, y_, z_) {
      var t1 = this._v3storage;
      t1[0] = x_;
      t1[1] = y_;
      t1[2] = z_;
    },
    setFrom$1: function(other) {
      var otherStorage = other._v3storage,
        t1 = this._v3storage;
      t1[0] = otherStorage[0];
      t1[1] = otherStorage[1];
      t1[2] = otherStorage[2];
    },
    toString$0: function(_) {
      var t1 = this._v3storage;
      return "[" + H.S(t1[0]) + "," + H.S(t1[1]) + "," + H.S(t1[2]) + "]";
    },
    $eq: function(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof E.Vector3) {
        t1 = this._v3storage;
        t2 = t1[0];
        t3 = other._v3storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return A.hashObjects(this._v3storage);
    },
    $sub: function(_, other) {
      var argStorage,
        t1 = new Float64Array(3),
        t2 = new E.Vector3(t1);
      t2.setFrom$1(this);
      argStorage = other._v3storage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      return t2;
    },
    $add: function(_, other) {
      var t1 = new E.Vector3(new Float64Array(3));
      t1.setFrom$1(this);
      t1.add$1(0, other);
      return t1;
    },
    $mul: function(_, scale) {
      var t1 = new Float64Array(3),
        t2 = new E.Vector3(t1);
      t2.setFrom$1(this);
      t1[2] = t1[2] * scale;
      t1[1] = t1[1] * scale;
      t1[0] = t1[0] * scale;
      return t2;
    },
    $index: function(_, i) {
      return this._v3storage[i];
    },
    get$length: function(_) {
      var t1 = this._v3storage,
        t2 = t1[0],
        t3 = t1[1];
      t1 = t1[2];
      return Math.sqrt(t2 * t2 + t3 * t3 + t1 * t1);
    },
    dot$1: function(other) {
      var otherStorage = other._v3storage,
        t1 = this._v3storage;
      return t1[0] * otherStorage[0] + t1[1] * otherStorage[1] + t1[2] * otherStorage[2];
    },
    add$1: function(_, arg) {
      var argStorage = arg._v3storage,
        t1 = this._v3storage;
      t1[0] = t1[0] + argStorage[0];
      t1[1] = t1[1] + argStorage[1];
      t1[2] = t1[2] + argStorage[2];
    },
    scaled$1: function(arg) {
      var t1 = new Float64Array(3),
        t2 = new E.Vector3(t1);
      t2.setFrom$1(this);
      t1[2] = t1[2] * arg;
      t1[1] = t1[1] * arg;
      t1[0] = t1[0] * arg;
      return t2;
    }
  };
  E.Vector4.prototype = {
    setValues$4: function(x_, y_, z_, w_) {
      var t1 = this._v4storage;
      t1[3] = w_;
      t1[2] = z_;
      t1[1] = y_;
      t1[0] = x_;
    },
    setFrom$1: function(other) {
      var otherStorage = other._v4storage,
        t1 = this._v4storage;
      t1[3] = otherStorage[3];
      t1[2] = otherStorage[2];
      t1[1] = otherStorage[1];
      t1[0] = otherStorage[0];
    },
    toString$0: function(_) {
      var t1 = this._v4storage;
      return H.S(t1[0]) + "," + H.S(t1[1]) + "," + H.S(t1[2]) + "," + H.S(t1[3]);
    },
    $eq: function(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof E.Vector4) {
        t1 = this._v4storage;
        t2 = t1[0];
        t3 = other._v4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return A.hashObjects(this._v4storage);
    },
    $sub: function(_, other) {
      var argStorage,
        t1 = new Float64Array(4),
        t2 = new E.Vector4(t1);
      t2.setFrom$1(this);
      argStorage = other._v4storage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      t1[3] = t1[3] - argStorage[3];
      return t2;
    },
    $add: function(_, other) {
      var t1 = new E.Vector4(new Float64Array(4));
      t1.setFrom$1(this);
      t1.add$1(0, other);
      return t1;
    },
    $mul: function(_, scale) {
      var t1 = new Float64Array(4),
        t2 = new E.Vector4(t1);
      t2.setFrom$1(this);
      t1[0] = t1[0] * scale;
      t1[1] = t1[1] * scale;
      t1[2] = t1[2] * scale;
      t1[3] = t1[3] * scale;
      return t2;
    },
    $index: function(_, i) {
      return this._v4storage[i];
    },
    get$length: function(_) {
      var t1 = this._v4storage,
        t2 = t1[0],
        t3 = t1[1],
        t4 = t1[2];
      t1 = t1[3];
      return Math.sqrt(t2 * t2 + t3 * t3 + t4 * t4 + t1 * t1);
    },
    add$1: function(_, arg) {
      var argStorage = arg._v4storage,
        t1 = this._v4storage;
      t1[0] = t1[0] + argStorage[0];
      t1[1] = t1[1] + argStorage[1];
      t1[2] = t1[2] + argStorage[2];
      t1[3] = t1[3] + argStorage[3];
    }
  };
  (function aliases() {
    var _ = H._SaveStackTracking.prototype;
    _.super$_SaveStackTracking$clear = _.clear$0;
    _.super$_SaveStackTracking$save = _.save$0;
    _.super$_SaveStackTracking$restore = _.restore$0;
    _.super$_SaveStackTracking$translate = _.translate$2;
    _.super$_SaveStackTracking$scale = _.scale$2;
    _.super$_SaveStackTracking$rotate = _.rotate$1;
    _.super$_SaveStackTracking$transform = _.transform$1;
    _.super$_SaveStackTracking$clipRect = _.clipRect$1;
    _.super$_SaveStackTracking$clipRRect = _.clipRRect$1;
    _.super$_SaveStackTracking$clipPath = _.clipPath$1;
    _ = H.SaveElementStackTracking.prototype;
    _.super$SaveElementStackTracking$clear = _.clear$0;
    _ = H._DomClip.prototype;
    _.super$_DomClip$createElement = _.createElement$0;
    _ = H.PersistedSurface.prototype;
    _.super$PersistedSurface$revive = _.revive$0;
    _.super$PersistedSurface$build = _.build$0;
    _.super$PersistedSurface$adoptElements = _.adoptElements$1;
    _.super$PersistedSurface$update = _.update$1;
    _.super$PersistedSurface$retain = _.retain$0;
    _.super$PersistedSurface$discard = _.discard$0;
    _.super$PersistedSurface$preroll = _.preroll$0;
    _ = H.PersistedContainerSurface.prototype;
    _.super$PersistedContainerSurface$recomputeTransformAndClip = _.recomputeTransformAndClip$0;
    _.super$PersistedContainerSurface$update = _.update$1;
    _.super$PersistedContainerSurface$discard = _.discard$0;
    _ = H.DefaultTextEditingStrategy.prototype;
    _.super$DefaultTextEditingStrategy$initializeTextEditing = _.initializeTextEditing$3$onAction$onChange;
    _.super$DefaultTextEditingStrategy$disable = _.disable$0;
    _.super$DefaultTextEditingStrategy$setEditingState = _.setEditingState$1;
    _.super$DefaultTextEditingStrategy$placeElement = _.placeElement$0;
    _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _.super$Interceptor$noSuchMethod = _.noSuchMethod$1;
    _ = J.JavaScriptObject.prototype;
    _.super$JavaScriptObject$toString = _.toString$0;
    _ = P.ListMixin.prototype;
    _.super$ListMixin$setRange = _.setRange$4;
    _ = P.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _.super$Iterable$skipWhile = _.skipWhile$1;
    _ = P.Object.prototype;
    _.super$Object$$eq = _.$eq;
    _.super$Object$toString = _.toString$0;
    _ = W.Element0.prototype;
    _.super$Element$createFragment = _.createFragment$3$treeSanitizer$validator;
    _ = W.EventTarget.prototype;
    _.super$EventTarget$addEventListener = _.addEventListener$3;
    _ = W._SimpleNodeValidator.prototype;
    _.super$_SimpleNodeValidator$allowsAttribute = _.allowsAttribute$3;
    _ = P.JsObject.prototype;
    _.super$JsObject$$index = _.$index;
    _.super$JsObject$$indexSet = _.$indexSet;
    _ = P.Color.prototype;
    _.super$Color$$eq = _.$eq;
    _.super$Color$toString = _.toString$0;
    _ = X.Animation0.prototype;
    _.super$Animation$toStringDetails = _.toStringDetails$0;
    _ = S.AnimationWithParentMixin.prototype;
    _.super$AnimationWithParentMixin$removeListener = _.removeListener$1;
    _.super$AnimationWithParentMixin$removeStatusListener = _.removeStatusListener$1;
    _ = Z.ParametricCurve.prototype;
    _.super$ParametricCurve$transform = _.transform$1;
    _ = S.AnimationEagerListenerMixin.prototype;
    _.super$AnimationEagerListenerMixin$dispose = _.dispose$0;
    _ = E.__CupertinoScrollbarState_State_TickerProviderStateMixin.prototype;
    _.super$__CupertinoScrollbarState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _.super$__CupertinoScrollbarState_State_TickerProviderStateMixin$didChangeDependencies = _.didChangeDependencies$0;
    _ = N.BindingBase.prototype;
    _.super$BindingBase$initInstances = _.initInstances$0;
    _.super$BindingBase$initServiceExtensions = _.initServiceExtensions$0;
    _.super$BindingBase$unlocked = _.unlocked$0;
    _ = B.ChangeNotifier.prototype;
    _.super$ChangeNotifier$dispose = _.dispose$0;
    _.super$ChangeNotifier$notifyListeners = _.notifyListeners$0;
    _ = Y.Diagnosticable.prototype;
    _.super$Diagnosticable$toStringShort = _.toStringShort$0;
    _.super$Diagnosticable$debugFillProperties = _.debugFillProperties$1;
    _ = Y.DiagnosticableTreeMixin.prototype;
    _.super$DiagnosticableTreeMixin$toStringDeep = _.toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines;
    _.super$DiagnosticableTreeMixin$toStringShort = _.toStringShort$0;
    _ = B.AbstractNode.prototype;
    _.super$AbstractNode$attach = _.attach$1;
    _.super$AbstractNode$detach = _.detach$0;
    _.super$AbstractNode$adoptChild = _.adoptChild$1;
    _.super$AbstractNode$dropChild = _.dropChild$1;
    _ = N.GestureBinding.prototype;
    _.super$GestureBinding$hitTest = _.hitTest$2;
    _ = T.LongPressGestureRecognizer.prototype;
    _.super$LongPressGestureRecognizer$isPointerAllowed = _.isPointerAllowed$1;
    _ = S.GestureRecognizer.prototype;
    _.super$GestureRecognizer$isPointerAllowed = _.isPointerAllowed$1;
    _.super$GestureRecognizer$dispose = _.dispose$0;
    _ = S.OneSequenceGestureRecognizer.prototype;
    _.super$OneSequenceGestureRecognizer$resolve = _.resolve$1;
    _.super$OneSequenceGestureRecognizer$dispose = _.dispose$0;
    _.super$OneSequenceGestureRecognizer$startTrackingPointer = _.startTrackingPointer$2;
    _ = S.PrimaryPointerGestureRecognizer.prototype;
    _.super$PrimaryPointerGestureRecognizer$addAllowedPointer = _.addAllowedPointer$1;
    _.super$PrimaryPointerGestureRecognizer$acceptGesture = _.acceptGesture$1;
    _.super$PrimaryPointerGestureRecognizer$rejectGesture = _.rejectGesture$1;
    _ = R.__InkResponseState_State_AutomaticKeepAliveClientMixin.prototype;
    _.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$initState = _.initState$0;
    _.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$deactivate = _.deactivate$0;
    _ = M.InkFeature.prototype;
    _.super$InkFeature$dispose = _.dispose$0;
    _ = M._ScaffoldState_State_TickerProviderStateMixin.prototype;
    _.super$_ScaffoldState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _.super$_ScaffoldState_State_TickerProviderStateMixin$didChangeDependencies = _.didChangeDependencies$0;
    _ = M.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin.prototype;
    _.super$__FloatingActionButtonTransitionState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = E.__ScrollbarState_State_TickerProviderStateMixin.prototype;
    _.super$__ScrollbarState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _.super$__ScrollbarState_State_TickerProviderStateMixin$didChangeDependencies = _.didChangeDependencies$0;
    _ = U.__DefaultTabControllerState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__DefaultTabControllerState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = F.RenderToggleable.prototype;
    _.super$RenderToggleable$value = _.set$value;
    _.super$RenderToggleable$describeSemanticsConfiguration = _.describeSemanticsConfiguration$1;
    _ = S.__TooltipState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__TooltipState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = K.BorderRadiusGeometry.prototype;
    _.super$BorderRadiusGeometry$subtract = _.subtract$1;
    _.super$BorderRadiusGeometry$add = _.add$1;
    _ = Y.ShapeBorder.prototype;
    _.super$ShapeBorder$lerpFrom = _.lerpFrom$2;
    _.super$ShapeBorder$lerpTo = _.lerpTo$2;
    _ = Z.Decoration.prototype;
    _.super$Decoration$lerpFrom = _.lerpFrom$2;
    _.super$Decoration$lerpTo = _.lerpTo$2;
    _ = Z.BoxPainter.prototype;
    _.super$BoxPainter$dispose = _.dispose$0;
    _ = V.EdgeInsetsGeometry.prototype;
    _.super$EdgeInsetsGeometry$add = _.add$1;
    _ = G.InlineSpan.prototype;
    _.super$InlineSpan$$eq = _.$eq;
    _ = M.SpringSimulation.prototype;
    _.super$SpringSimulation$x = _.x$1;
    _ = N.RendererBinding.prototype;
    _.super$RendererBinding$handleMetricsChanged = _.handleMetricsChanged$0;
    _.super$RendererBinding$handlePlatformBrightnessChanged = _.handlePlatformBrightnessChanged$0;
    _.super$RendererBinding$drawFrame = _.drawFrame$0;
    _ = S.BoxConstraints.prototype;
    _.super$BoxConstraints$$eq = _.$eq;
    _ = S.BoxParentData.prototype;
    _.super$BoxParentData$toString = _.toString$0;
    _ = S.RenderBox.prototype;
    _.super$RenderBox$computeDistanceToActualBaseline = _.computeDistanceToActualBaseline$1;
    _.super$RenderBox$hitTest = _.hitTest$2$position;
    _ = B._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = F.RenderFlex.prototype;
    _.super$RenderFlex$performLayout = _.performLayout$0;
    _ = T.Layer.prototype;
    _.super$Layer$updateSubtreeNeedsAddToScene = _.updateSubtreeNeedsAddToScene$0;
    _ = T.ContainerLayer.prototype;
    _.super$ContainerLayer$findAnnotations = _.findAnnotations$1$3$onlyFirst;
    _ = T.OffsetLayer.prototype;
    _.super$OffsetLayer$findAnnotations = _.findAnnotations$1$3$onlyFirst;
    _ = K.ParentData.prototype;
    _.super$ParentData$detach = _.detach$0;
    _ = K.RenderObject.prototype;
    _.super$RenderObject$adoptChild = _.adoptChild$1;
    _.super$RenderObject$attach = _.attach$1;
    _.super$RenderObject$markNeedsLayout = _.markNeedsLayout$0;
    _.super$RenderObject$applyPaintTransform = _.applyPaintTransform$2;
    _.super$RenderObject$describeSemanticsConfiguration = _.describeSemanticsConfiguration$1;
    _.super$RenderObject$clearSemantics = _.clearSemantics$0;
    _.super$RenderObject$visitChildrenForSemantics = _.visitChildrenForSemantics$1;
    _.super$RenderObject$assembleSemanticsNode = _.assembleSemanticsNode$3;
    _.super$RenderObject$handleEvent = _.handleEvent$2;
    _.super$RenderObject$toStringShort = _.toStringShort$0;
    _.super$RenderObject$showOnScreen = _.showOnScreen$4$curve$descendant$duration$rect;
    _ = K.ContainerRenderObjectMixin.prototype;
    _.super$ContainerRenderObjectMixin$insert = _.insert$2$after;
    _.super$ContainerRenderObjectMixin$remove = _.remove$1;
    _.super$ContainerRenderObjectMixin$move = _.move$2$after;
    _.super$ContainerRenderObjectMixin$redepthChildren = _.redepthChildren$0;
    _.super$ContainerRenderObjectMixin$visitChildren = _.visitChildren$1;
    _ = K.RelayoutWhenSystemFontsChangeMixin.prototype;
    _.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange = _.systemFontsDidChange$0;
    _ = Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = E.RenderProxyBoxMixin.prototype;
    _.super$RenderProxyBoxMixin$performLayout = _.performLayout$0;
    _.super$RenderProxyBoxMixin$hitTestChildren = _.hitTestChildren$2$position;
    _.super$RenderProxyBoxMixin$paint = _.paint$2;
    _ = E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin.prototype;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach = _.attach$1;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach = _.detach$0;
    _ = E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin.prototype;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline = _.computeDistanceToActualBaseline$1;
    _ = T._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin.prototype;
    _.super$_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin$attach = _.attach$1;
    _.super$_RenderShiftedBox_RenderBox_RenderObjectWithChildMixin$detach = _.detach$0;
    _ = G.SliverLogicalParentData.prototype;
    _.super$SliverLogicalParentData$toString = _.toString$0;
    _ = F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin.prototype;
    _.super$_RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = T.RenderSliverEdgeInsetsPadding.prototype;
    _.super$RenderSliverEdgeInsetsPadding$performLayout = _.performLayout$0;
    _ = Q._RenderViewportBase_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$_RenderViewportBase_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderViewportBase_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = N.ViewportOffset.prototype;
    _.super$ViewportOffset$moveTo = _.moveTo$3$curve$duration;
    _.super$ViewportOffset$debugFillDescription = _.debugFillDescription$1;
    _ = N.SchedulerBinding.prototype;
    _.super$SchedulerBinding$handleAppLifecycleStateChanged = _.handleAppLifecycleStateChanged$1;
    _.super$SchedulerBinding$scheduleFrame = _.scheduleFrame$0;
    _.super$SchedulerBinding$handleBeginFrame = _.handleBeginFrame$1;
    _.super$SchedulerBinding$handleDrawFrame = _.handleDrawFrame$0;
    _ = M.Ticker.prototype;
    _.super$Ticker$dispose = _.dispose$0;
    _ = Q.AssetBundle.prototype;
    _.super$AssetBundle$loadString = _.loadString$2$cache;
    _ = N.ServicesBinding.prototype;
    _.super$ServicesBinding$handleMemoryPressure = _.handleMemoryPressure$0;
    _.super$ServicesBinding$handleSystemMessage = _.handleSystemMessage$1;
    _ = A.MethodChannel.prototype;
    _.super$MethodChannel$_invokeMethod = _._invokeMethod$1$3$arguments$missingOk;
    _ = L.AutomaticKeepAliveClientMixin.prototype;
    _.super$AutomaticKeepAliveClientMixin$build = _.build$1;
    _ = T.Flex.prototype;
    _.super$Flex$updateRenderObject = _.updateRenderObject$2;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$unlocked = _.unlocked$0;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$handleMemoryPressure = _.handleMemoryPressure$0;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding$initInstances = _.initInstances$0;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = U.FocusTraversalPolicy.prototype;
    _.super$FocusTraversalPolicy$invalidateScopeData = _.invalidateScopeData$1;
    _.super$FocusTraversalPolicy$changedScope = _.changedScope$2$node$oldScope;
    _ = N.State.prototype;
    _.super$State$initState = _.initState$0;
    _.super$State$didUpdateWidget = _.didUpdateWidget$1;
    _.super$State$deactivate = _.deactivate$0;
    _.super$State$dispose = _.dispose$0;
    _.super$State$didChangeDependencies = _.didChangeDependencies$0;
    _ = N.Element.prototype;
    _.super$Element$updateChild = _.updateChild$3;
    _.super$Element$mount = _.mount$2;
    _.super$Element$update = _.update$1;
    _.super$Element$_updateSlot = _._updateSlot$1;
    _.super$Element$forgetChild = _.forgetChild$1;
    _.super$Element$activate = _.activate$0;
    _.super$Element$deactivate = _.deactivate$0;
    _.super$Element$unmount = _.unmount$0;
    _.super$Element$dependOnInheritedElement = _.dependOnInheritedElement$2$aspect;
    _.super$Element$didChangeDependencies = _.didChangeDependencies$0;
    _ = N.ComponentElement.prototype;
    _.super$ComponentElement$_firstBuild = _._firstBuild$0;
    _.super$ComponentElement$performRebuild = _.performRebuild$0;
    _ = N.ProxyElement.prototype;
    _.super$ProxyElement$build = _.build$0;
    _.super$ProxyElement$update = _.update$1;
    _.super$ProxyElement$updated = _.updated$1;
    _ = N.InheritedElement.prototype;
    _.super$InheritedElement$notifyClients = _.notifyClients$1;
    _ = N.RenderObjectElement.prototype;
    _.super$RenderObjectElement$mount = _.mount$2;
    _.super$RenderObjectElement$update = _.update$1;
    _.super$RenderObjectElement$performRebuild = _.performRebuild$0;
    _ = N.RootRenderObjectElement.prototype;
    _.super$RootRenderObjectElement$mount = _.mount$2;
    _ = N.MultiChildRenderObjectElement.prototype;
    _.super$MultiChildRenderObjectElement$mount = _.mount$2;
    _.super$MultiChildRenderObjectElement$update = _.update$1;
    _ = G.ImplicitlyAnimatedWidgetState.prototype;
    _.super$ImplicitlyAnimatedWidgetState$initState = _.initState$0;
    _ = G._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin.prototype;
    _.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = K.Route.prototype;
    _.super$Route$install = _.install$0;
    _.super$Route$didPush = _.didPush$0;
    _.super$Route$didAdd = _.didAdd$0;
    _.super$Route$didReplace = _.didReplace$1;
    _.super$Route$willPop = _.willPop$0;
    _.super$Route$didPop = _.didPop$1;
    _.super$Route$didPopNext = _.didPopNext$1;
    _.super$Route$didChangeNext = _.didChangeNext$1;
    _.super$Route$didChangePrevious = _.didChangePrevious$1;
    _.super$Route$changedInternalState = _.changedInternalState$0;
    _.super$Route$changedExternalState = _.changedExternalState$0;
    _.super$Route$dispose = _.dispose$0;
    _ = K._NavigatorState_State_TickerProviderStateMixin.prototype;
    _.super$_NavigatorState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = U.Notification0.prototype;
    _.super$Notification$visitAncestor = _.visitAncestor$1;
    _.super$Notification$debugFillDescription = _.debugFillDescription$1;
    _ = L._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin.prototype;
    _.super$_OverscrollIndicatorNotification_Notification_ViewportNotificationMixin$debugFillDescription = _.debugFillDescription$1;
    _ = L.__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin.prototype;
    _.super$__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = T.OverlayRoute.prototype;
    _.super$OverlayRoute$install = _.install$0;
    _.super$OverlayRoute$didPop = _.didPop$1;
    _.super$OverlayRoute$dispose = _.dispose$0;
    _ = T.TransitionRoute.prototype;
    _.super$TransitionRoute$install = _.install$0;
    _.super$TransitionRoute$didPush = _.didPush$0;
    _.super$TransitionRoute$didAdd = _.didAdd$0;
    _.super$TransitionRoute$didPop = _.didPop$1;
    _ = T._ModalRoute_TransitionRoute_LocalHistoryRoute.prototype;
    _.super$_ModalRoute_TransitionRoute_LocalHistoryRoute$willPop = _.willPop$0;
    _ = M.ScrollActivity.prototype;
    _.super$ScrollActivity$dispose = _.dispose$0;
    _ = F.ScrollController.prototype;
    _.super$ScrollController$attach = _.attach$1;
    _ = G.ScrollNotification.prototype;
    _.super$ScrollNotification$debugFillDescription = _.debugFillDescription$1;
    _ = G._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin.prototype;
    _.super$_ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin$debugFillDescription = _.debugFillDescription$1;
    _ = L.ScrollPhysics.prototype;
    _.super$ScrollPhysics$createBallisticSimulation = _.createBallisticSimulation$2;
    _ = A.ScrollPosition.prototype;
    _.super$ScrollPosition$absorb = _.absorb$1;
    _.super$ScrollPosition$setPixels = _.setPixels$1;
    _.super$ScrollPosition$applyViewportDimension = _.applyViewportDimension$1;
    _.super$ScrollPosition$applyContentDimensions = _.applyContentDimensions$2;
    _.super$ScrollPosition$applyNewDimensions = _.applyNewDimensions$0;
    _.super$ScrollPosition$beginActivity = _.beginActivity$1;
    _.super$ScrollPosition$dispose = _.dispose$0;
    _.super$ScrollPosition$debugFillDescription = _.debugFillDescription$1;
    _ = F._ScrollableState_State_TickerProviderStateMixin.prototype;
    _.super$_ScrollableState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _.super$_ScrollableState_State_TickerProviderStateMixin$didChangeDependencies = _.didChangeDependencies$0;
    _ = E.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin.prototype;
    _.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$attach = _.attach$1;
    _.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$detach = _.detach$0;
    _ = V.WidgetBuildRecorder.prototype;
    _.super$WidgetBuildRecorder$frameWillDraw = _.frameWillDraw$0;
    _.super$WidgetBuildRecorder$frameDidDraw = _.frameDidDraw$0;
    _ = V.__RecordingWidgetsBinding_BindingBase_GestureBinding.prototype;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding$initInstances = _.initInstances$0;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding$unlocked = _.unlocked$0;
    _ = V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding.prototype;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding$initInstances = _.initInstances$0;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding.prototype;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initInstances = _.initInstances$0;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$initInstances = _.initInstances$0;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$handleMemoryPressure = _.handleMemoryPressure$0;
    _ = V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding.prototype;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding$initInstances = _.initInstances$0;
    _ = V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding.prototype;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initInstances = _.initInstances$0;
    _.super$__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initServiceExtensions = _.initServiceExtensions$0;
  })();
  (function installTearOffs() {
    var _static_0 = hunkHelpers._static_0,
      _static_1 = hunkHelpers._static_1,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_2_u = hunkHelpers._instance_2u,
      _static_2 = hunkHelpers._static_2,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance = hunkHelpers.installInstanceTearOff,
      _static = hunkHelpers.installStaticTearOff,
      _instance_0_i = hunkHelpers._instance_0i;
    _static_0(H, "_engine_SkiaObjects_postFrameCleanUp$closure", "SkiaObjects_postFrameCleanUp", 1);
    _static_1(H, "_engine___noopCallback$closure", "_noopCallback", 168);
    _static_1(H, "_engine___whitespacePredicate$closure", "_whitespacePredicate", 64);
    _static_1(H, "_engine___newlinePredicate$closure", "_newlinePredicate", 64);
    _static_1(H, "_engine___emptyCallback$closure", "_emptyCallback", 15);
    _instance_0_u(H.AlarmClock.prototype, "get$_timerDidFire", "_timerDidFire$0", 1);
    _instance_1_u(H.DomRenderer.prototype, "get$_metricsDidChange", "_metricsDidChange$1", 59);
    _instance_1_u(H.BrowserHistory.prototype, "get$_popStateListener", "_popStateListener$1", 39);
    _instance_1_u(H.PointerBinding.prototype, "get$_onPointerData", "_onPointerData$1", 141);
    _instance_0_u(H.RulerManager.prototype, "get$dispose", "dispose$0", 1);
    var _;
    _instance_1_u(_ = H.DefaultTextEditingStrategy.prototype, "get$_handleChange", "_handleChange$1", 59);
    _instance_1_u(_, "get$_maybeSendAction", "_maybeSendAction$1", 125);
    _instance_2_u(H.WebExperiments.prototype, "get$updateExperiment", "updateExperiment$2", 130);
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 63);
    _instance_1_i(H._CastIterableBase.prototype, "get$contains", "contains$1", 12);
    _static_0(H, "_js_helper_Primitives_dateNow$closure", "Primitives_dateNow", 48);
    _static_1(H, "_js_helper___stringIdentity$closure", "_stringIdentity", 61);
    _instance_1_i(H.JsLinkedHashMap.prototype, "get$remove", "remove$1", "2(Object)");
    _static_1(P, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 27);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 27);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 27);
    _static_0(P, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 1);
    _instance(P._Completer.prototype, "get$completeError", 0, 1, null, ["call$2", "call$1"], ["completeError$2", "completeError$1"], 40, 0);
    _instance(P._Future.prototype, "get$_completeError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["_completeError$2", "_completeError$1"], 40, 0);
    _instance_1_i(_ = P._StreamController.prototype, "get$_async$_add", "_async$_add$1", 39);
    _instance_2_u(_, "get$_addError", "_addError$2", 146);
    _instance_0_u(_, "get$_close", "_close$0", 1);
    _instance_0_u(_ = P._ControllerSubscription.prototype, "get$_onPause", "_onPause$0", 1);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 1);
    _instance_0_u(_ = P._BufferingStreamSubscription.prototype, "get$_onPause", "_onPause$0", 1);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 1);
    _static_2(P, "collection___dynamicCompare$closure", "_dynamicCompare", 63);
    _instance_1_i(P._HashSet.prototype, "get$contains", "contains$1", 12);
    _instance_1_i(P._LinkedHashSet.prototype, "get$contains", "contains$1", 12);
    _instance_1_i(P.IterableMixin.prototype, "get$contains", "contains$1", 12);
    _instance_1_i(P._UnmodifiableSet.prototype, "get$contains", "contains$1", 12);
    _instance_1_i(P.SplayTreeSet.prototype, "get$contains", "contains$1", 12);
    _static_1(P, "convert___defaultToEncodable$closure", "_defaultToEncodable", 8);
    _static_2(P, "core_Comparable_compare$closure", "Comparable_compare", 173);
    _static_1(P, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 61);
    _instance_1_i(P.Iterable.prototype, "get$contains", "contains$1", 12);
    _static(W, "html__Html5NodeValidator__standardAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__standardAttributeValidator"], 67, 0);
    _static(W, "html__Html5NodeValidator__uriAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__uriAttributeValidator"], 67, 0);
    _instance_0_i(_ = W._Clipboard.prototype, "get$readText", "readText$0", 128);
    _instance_1_i(_, "get$writeText", "writeText$1", 123);
    _static_1(P, "js___convertToJS$closure", "_convertToJS", 8);
    _static_1(P, "js___convertToDart$closure", "_convertToDart", 175);
    _static(P, "math__max$closure", 2, null, ["call$1$2", "call$2"], ["max", function(a, b) {
      return P.max(a, b, type$.num);
    }], 176, 1);
    _instance_1_u(P.ChannelBuffers.prototype, "get$_onDropItem", "_onDropItem$1", 95);
    _instance(_ = G.AnimationController.prototype, "get$reverse", 1, 0, null, ["call$1$from", "call$0"], ["reverse$1$from", "reverse$0"], 94, 0);
    _instance_1_u(_, "get$_animation_controller$_tick", "_animation_controller$_tick$1", 16);
    _instance_1_u(S.ReverseAnimation.prototype, "get$_statusChangeHandler", "_statusChangeHandler$1", 4);
    _instance_1_u(S.CurvedAnimation.prototype, "get$_updateCurveDirection", "_updateCurveDirection$1", 4);
    _instance_1_u(_ = S.TrainHoppingAnimation.prototype, "get$_statusChangeHandler", "_statusChangeHandler$1", 4);
    _instance_0_u(_, "get$_valueChangeHandler", "_valueChangeHandler$0", 1);
    _instance_1_u(_ = S.CompoundAnimation.prototype, "get$_maybeNotifyStatusListeners", "_maybeNotifyStatusListeners$1", 4);
    _instance_0_u(_, "get$_maybeNotifyListeners", "_maybeNotifyListeners$0", 1);
    _instance_0_u(S.AnimationLocalListenersMixin.prototype, "get$notifyListeners", "notifyListeners$0", 1);
    _instance_1_u(S.AnimationLocalStatusListenersMixin.prototype, "get$notifyStatusListeners", "notifyStatusListeners$1", 4);
    _instance_1_u(_ = D._CupertinoBackGestureDetectorState.prototype, "get$_handleDragStart", "_handleDragStart$1", 42);
    _instance_1_u(_, "get$_handleDragUpdate", "_handleDragUpdate$1", 38);
    _instance_1_u(_, "get$_handleDragEnd", "_handleDragEnd$1", 44);
    _instance_0_u(_, "get$_handleDragCancel", "_handleDragCancel$0", 1);
    _instance_1_u(_, "get$_route$_handlePointerDown", "_route$_handlePointerDown$1", 33);
    _instance_1_u(_ = E._CupertinoScrollbarState.prototype, "get$_handleLongPressStart", "_handleLongPressStart$1", 88);
    _instance_0_u(_, "get$_scrollbar0$_handleLongPress", "_scrollbar0$_handleLongPress$0", 1);
    _instance_1_u(_, "get$_handleLongPressMoveUpdate", "_handleLongPressMoveUpdate$1", 69);
    _instance_1_u(_, "get$_handleLongPressEnd", "_handleLongPressEnd$1", 70);
    _instance_1_u(_, "get$_scrollbar0$_handleScrollNotification", "_scrollbar0$_handleScrollNotification$1", 19);
    _static(U, "assertions_FlutterError_dumpErrorToConsole$closure", 1, null, ["call$2$forceReport", "call$1"], ["FlutterError_dumpErrorToConsole", function(details) {
      return U.FlutterError_dumpErrorToConsole(details, false);
    }], 177, 0);
    _static_1(U, "assertions_DiagnosticsStackTrace__createStackFrame$closure", "DiagnosticsStackTrace__createStackFrame", 178);
    _instance_0_u(B.ChangeNotifier.prototype, "get$notifyListeners", "notifyListeners$0", 1);
    _instance_1_i(Y.DiagnosticPropertiesBuilder.prototype, "get$add", "add$1", 78);
    _instance_1_u(B.AbstractNode.prototype, "get$redepthChild", "redepthChild$1", 79);
    _static_1(R, "stack_frame_StackFrame_fromStackTraceLine$closure", "StackFrame_fromStackTraceLine", 179);
    _instance_1_u(_ = N.GestureBinding.prototype, "get$_handlePointerDataPacket", "_handlePointerDataPacket$1", 81);
    _instance_1_u(_, "get$cancelPointer", "cancelPointer$1", 82);
    _instance_0_u(_, "get$_flushPointerEventQueue", "_flushPointerEventQueue$0", 1);
    _instance_1_u(O.DragGestureRecognizer.prototype, "get$handleEvent", "handleEvent$1", 9);
    _instance_0_u(F._CountdownZoned.prototype, "get$_onTimeout", "_onTimeout$0", 1);
    _instance_1_u(_ = F.DoubleTapGestureRecognizer.prototype, "get$_handleEvent", "_handleEvent$1", 9);
    _instance_1_u(_, "get$_reject", "_reject$1", 84);
    _instance_0_u(_, "get$_multitap$_reset", "_multitap$_reset$0", 1);
    _instance_1_u(S.PrimaryPointerGestureRecognizer.prototype, "get$handleEvent", "handleEvent$1", 9);
    _instance_2_u(S._MaterialAppState.prototype, "get$_createRectTween", "_createRectTween$2", 87);
    _instance_0_u(_ = E._AppBarState.prototype, "get$_handleDrawerButton", "_handleDrawerButton$0", 1);
    _instance_0_u(_, "get$_handleDrawerButtonEnd", "_handleDrawerButtonEnd$0", 1);
    _instance_1_u(_ = Z._RawMaterialButtonState.prototype, "get$_handleHighlightChanged", "_handleHighlightChanged$1", 10);
    _instance_1_u(_, "get$_handleHoveredChanged", "_handleHoveredChanged$1", 10);
    _instance_1_u(_, "get$_handleFocusedChanged", "_handleFocusedChanged$1", 10);
    _instance_1_u(_ = K._CheckboxState.prototype, "get$_actionHandler", "_actionHandler$1", 66);
    _instance_1_u(_, "get$_handleFocusHighlightChanged", "_handleFocusHighlightChanged$1", 10);
    _instance_1_u(_, "get$_handleHoverChanged", "_handleHoverChanged$1", 10);
    _instance_1_u(Y.InkHighlight.prototype, "get$_handleAlphaStatusChanged", "_handleAlphaStatusChanged$1", 4);
    _instance_1_u(U.InkSplash.prototype, "get$_ink_splash$_handleAlphaStatusChanged", "_ink_splash$_handleAlphaStatusChanged$1", 4);
    _instance_1_u(_ = R._InkResponseState.prototype, "get$_handleAction", "_handleAction$1", 66);
    _instance_1_u(_, "get$_handleFocusHighlightModeChange", "_handleFocusHighlightModeChange$1", 62);
    _instance_1_u(_, "get$_handleFocusUpdate", "_handleFocusUpdate$1", 10);
    _instance_1_u(_, "get$_handleTapDown", "_handleTapDown$1", 60);
    _instance_0_u(_, "get$_handleTapCancel", "_handleTapCancel$0", 1);
    _instance_1_u(_, "get$_handleMouseEnter", "_handleMouseEnter$1", 29);
    _instance_1_u(_, "get$_handleMouseExit", "_handleMouseExit$1", 22);
    _instance_1_u(_ = M._FloatingActionButtonTransitionState.prototype, "get$_handlePreviousAnimationStatusChanged", "_handlePreviousAnimationStatusChanged$1", 4);
    _instance_0_u(_, "get$_onProgressChanged", "_onProgressChanged$0", 1);
    _instance_0_u(M.ScaffoldState.prototype, "get$_handleStatusBarTap", "_handleStatusBarTap$0", 1);
    _instance_1_u(E._ScrollbarState.prototype, "get$_scrollbar$_handleScrollNotification", "_scrollbar$_handleScrollNotification$1", 19);
    _instance_0_u(E._IndicatorPainter.prototype, "get$markNeedsPaint", "markNeedsPaint$0", 1);
    _instance_0_u(_ = E._TabBarState.prototype, "get$_handleTabControllerAnimationTick", "_handleTabControllerAnimationTick$0", 1);
    _instance_0_u(_, "get$_handleTabControllerTick", "_handleTabControllerTick$0", 1);
    _instance(_, "get$_saveTabOffsets", 0, 3, null, ["call$3"], ["_saveTabOffsets$3"], 99, 0);
    _instance_0_u(_ = E._TabBarViewState.prototype, "get$_handleTabControllerAnimationTick", "_handleTabControllerAnimationTick$0", 1);
    _instance_1_u(_, "get$_handleScrollNotification", "_handleScrollNotification$1", 19);
    _instance_1_u(_ = F.RenderToggleable.prototype, "get$_toggleable$_handleTapDown", "_toggleable$_handleTapDown$1", 60);
    _instance_0_u(_, "get$_toggleable$_handleTap", "_toggleable$_handleTap$0", 1);
    _instance_1_u(_, "get$_handleTapUp", "_handleTapUp$1", 102);
    _instance_0_u(_, "get$_toggleable$_handleTapCancel", "_toggleable$_handleTapCancel$0", 1);
    _instance_0_u(_ = S._TooltipState.prototype, "get$_handleMouseTrackerChange", "_handleMouseTrackerChange$0", 1);
    _instance_1_u(_, "get$_tooltip$_handleStatusChanged", "_tooltip$_handleStatusChanged$1", 4);
    _instance_0_u(_, "get$ensureTooltipVisible", "ensureTooltipVisible$0", 26);
    _instance_1_u(_, "get$_handlePointerEvent", "_handlePointerEvent$1", 9);
    _instance_0_u(_, "get$_handleLongPress", "_handleLongPress$0", 1);
    _instance_0_u(_ = N.RendererBinding.prototype, "get$_handleSemanticsEnabledChanged", "_handleSemanticsEnabledChanged$0", 1);
    _instance(_, "get$_handleSemanticsAction", 0, 3, null, ["call$3"], ["_handleSemanticsAction$3"], 103, 0);
    _instance_0_u(_, "get$_handleSemanticsOwnerCreated", "_handleSemanticsOwnerCreated$0", 1);
    _instance_0_u(_, "get$_handleSemanticsOwnerDisposed", "_handleSemanticsOwnerDisposed$0", 1);
    _instance_1_u(_, "get$_handlePersistentFrameCallback", "_handlePersistentFrameCallback$1", 16);
    _instance_0_u(S.RenderBox.prototype, "get$markNeedsLayout", "markNeedsLayout$0", 1);
    _instance_2_u(S.RenderBoxContainerDefaultsMixin.prototype, "get$defaultPaint", "defaultPaint$2", 14);
    _instance_1_u(Y.MouseTracker.prototype, "get$_mouse_tracking$_handleEvent", "_mouse_tracking$_handleEvent$1", 9);
    _static_1(K, "object_RenderObject__cleanChildRelayoutBoundary$closure", "RenderObject__cleanChildRelayoutBoundary", 180);
    _instance_0_u(_ = K.RenderObject.prototype, "get$markNeedsPaint", "markNeedsPaint$0", 1);
    _instance_0_u(_, "get$markNeedsSemanticsUpdate", "markNeedsSemanticsUpdate$0", 1);
    _instance(_, "get$showOnScreen", 0, 0, null, ["call$4$curve$descendant$duration$rect", "call$0"], ["showOnScreen$4$curve$descendant$duration$rect", "showOnScreen$0"], 32, 0);
    _instance_1_u(_ = K.ContainerRenderObjectMixin.prototype, "get$childBefore", "childBefore$1", "ContainerRenderObjectMixin.0(Object)");
    _instance_1_u(_, "get$childAfter", "childAfter$1", "ContainerRenderObjectMixin.0(Object)");
    _instance_0_u(Q.RenderParagraph.prototype, "get$systemFontsDidChange", "systemFontsDidChange$0", 1);
    _instance_2_u(E.RenderProxyBoxMixin.prototype, "get$paint", "paint$2", 14);
    _instance_0_u(E.RenderAnimatedOpacityMixin.prototype, "get$_updateOpacity", "_updateOpacity$0", 1);
    _instance_1_u(_ = E.RenderMouseRegion.prototype, "get$_handleEnter", "_handleEnter$1", 29);
    _instance_1_u(_, "get$_handleHover", "_handleHover$1", 110);
    _instance_1_u(_, "get$_handleExit", "_handleExit$1", 22);
    _instance_0_u(_, "get$_handleUpdatedMouseIsConnected", "_handleUpdatedMouseIsConnected$0", 1);
    _instance_0_u(_ = E.RenderSemanticsGestureHandler.prototype, "get$_performSemanticScrollLeft", "_performSemanticScrollLeft$0", 1);
    _instance_0_u(_, "get$_performSemanticScrollRight", "_performSemanticScrollRight$0", 1);
    _instance_0_u(_, "get$_performSemanticScrollUp", "_performSemanticScrollUp$0", 1);
    _instance_0_u(_, "get$_performSemanticScrollDown", "_performSemanticScrollDown$0", 1);
    _instance_0_u(E.RenderSemanticsAnnotations.prototype, "get$_performDismiss", "_performDismiss$0", 1);
    _instance(G.RenderSliver.prototype, "get$hitTest", 0, 1, null, ["call$3$crossAxisPosition$mainAxisPosition", "call$1"], ["hitTest$3$crossAxisPosition$mainAxisPosition", "hitTest$1"], 111, 0);
    _instance_2_u(K.RenderStack.prototype, "get$paintStack", "paintStack$2", 14);
    _instance_1_u(A.RenderView.prototype, "get$hitTestMouseTrackers", "hitTestMouseTrackers$1", 112);
    _instance_2_u(_ = Q.RenderViewportBase.prototype, "get$_paintContents", "_paintContents$2", 14);
    _instance(_, "get$showOnScreen", 0, 0, null, ["call$4$curve$descendant$duration$rect", "call$0"], ["showOnScreen$4$curve$descendant$duration$rect", "showOnScreen$0"], 32, 0);
    _static_2(N, "binding_SchedulerBinding__taskSorter$closure", "SchedulerBinding__taskSorter", 181);
    _static(N, "binding__defaultSchedulingStrategy$closure", 0, null, ["call$2$priority$scheduler", "call$0"], ["defaultSchedulingStrategy", function() {
      return N.defaultSchedulingStrategy(null, null);
    }], 182, 0);
    _instance_1_u(_ = N.SchedulerBinding.prototype, "get$_executeTimingsCallbacks", "_executeTimingsCallbacks$1", 113);
    _instance_0_u(_, "get$_runTasks", "_runTasks$0", 1);
    _instance_0_u(_, "get$ensureVisualUpdate", "ensureVisualUpdate$0", 1);
    _instance_1_u(_, "get$_handleBeginFrame", "_handleBeginFrame$1", 16);
    _instance_0_u(_, "get$_handleDrawFrame", "_handleDrawFrame$0", 1);
    _instance_1_u(M.Ticker.prototype, "get$_ticker$_tick", "_ticker$_tick$1", 16);
    _static_1(Q, "asset_bundle_AssetBundle__utf8decode$closure", "AssetBundle__utf8decode", 183);
    _static_1(N, "binding0_ServicesBinding__parseLicenses$closure", "ServicesBinding__parseLicenses", 184);
    _instance_0_u(_ = N.ServicesBinding.prototype, "get$_addLicenses", "_addLicenses$0", 117);
    _instance_1_u(_, "get$_handleLifecycleMessage", "_handleLifecycleMessage$1", 118);
    _instance(N._DefaultBinaryMessenger.prototype, "get$handlePlatformMessage", 0, 3, null, ["call$3"], ["handlePlatformMessage$3"], 119, 0);
    _instance_1_u(B.RawKeyboard.prototype, "get$_handleKeyEvent", "_handleKeyEvent$1", 121);
    _instance_1_u(U._ActionsState.prototype, "get$_handleActionChanged", "_handleActionChanged$1", 122);
    _instance_1_u(_ = U._FocusableActionDetectorState.prototype, "get$_actions$_handleFocusHighlightModeChange", "_actions$_handleFocusHighlightModeChange$1", 62);
    _instance_1_u(_, "get$_actions$_handleMouseEnter", "_actions$_handleMouseEnter$1", 29);
    _instance_1_u(_, "get$_actions$_handleMouseExit", "_actions$_handleMouseExit$1", 22);
    _instance_1_u(_, "get$_handleFocusChange", "_handleFocusChange$1", 10);
    _instance_1_u(_ = S._WidgetsAppState.prototype, "get$_onGenerateRoute", "_onGenerateRoute$1", 53);
    _instance_1_u(_, "get$_onUnknownRoute", "_onUnknownRoute$1", 53);
    _instance_1_u(L._AutomaticKeepAliveState.prototype, "get$_addClient", "_addClient$1", 124);
    _instance_1_u(T._MouseRegionState.prototype, "get$handleExit", "handleExit$1", 22);
    _instance_1_u(_ = N.WidgetsBinding.prototype, "get$_handleNavigationInvocation", "_handleNavigationInvocation$1", 127);
    _instance_0_u(_, "get$_handleBuildScheduled", "_handleBuildScheduled$0", 1);
    _instance_1_u(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype, "get$handleSystemMessage", "handleSystemMessage$1", 65);
    _instance_0_u(_ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding.prototype, "get$handleMetricsChanged", "handleMetricsChanged$0", 1);
    _instance_0_u(_, "get$handlePlatformBrightnessChanged", "handlePlatformBrightnessChanged$0", 1);
    _instance_1_u(_ = O.FocusManager.prototype, "get$_focus_manager$_handlePointerEvent", "_focus_manager$_handlePointerEvent$1", 9);
    _instance_1_u(_, "get$_handleRawKeyEvent", "_handleRawKeyEvent$1", 129);
    _instance_0_u(_, "get$_applyFocusChange", "_applyFocusChange$0", 1);
    _instance_0_u(L._FocusState.prototype, "get$_handleFocusChanged", "_handleFocusChanged$0", 1);
    _static_1(N, "framework__InactiveElements__deactivateRecursively$closure", "_InactiveElements__deactivateRecursively", 35);
    _static_2(N, "framework_Element__sort$closure", "Element__sort", 185);
    _static_1(N, "framework_Element__activateRecursively$closure", "Element__activateRecursively", 35);
    _instance_1_u(N._InactiveElements.prototype, "get$_unmount", "_unmount$1", 35);
    _instance_1_u(_ = D.RawGestureDetectorState.prototype, "get$_gesture_detector$_handlePointerDown", "_gesture_detector$_handlePointerDown$1", 33);
    _instance_1_u(_, "get$_updateSemanticsForRenderObject", "_updateSemanticsForRenderObject$1", 140);
    _instance_1_u(_ = T._HeroFlight.prototype, "get$_buildOverlay", "_buildOverlay$1", 36);
    _instance_1_u(_, "get$_handleAnimationUpdate", "_handleAnimationUpdate$1", 4);
    _instance_1_u(T.HeroController.prototype, "get$_handleFlightEnded", "_handleFlightEnded$1", 142);
    _instance_0_u(G.AnimatedWidgetBaseState.prototype, "get$_handleAnimationChanged", "_handleAnimationChanged$0", 1);
    _instance_0_u(S._InheritedNotifierElement.prototype, "get$_handleUpdate", "_handleUpdate$0", 1);
    _static_2(K, "navigator_Navigator_defaultGenerateInitialRoutes$closure", "Navigator_defaultGenerateInitialRoutes", 186);
    _instance_1_u(_ = K.NavigatorState.prototype, "get$_handlePointerDown", "_handlePointerDown$1", 33);
    _instance_1_u(_, "get$_handlePointerUpOrCancel", "_handlePointerUpOrCancel$1", 9);
    _instance_1_u(U.Notification0.prototype, "get$visitAncestor", "visitAncestor$1", 28);
    _instance_2_u(X._RenderTheatre.prototype, "get$paintStack", "paintStack$2", 14);
    _instance_1_u(L._GlowingOverscrollIndicatorState.prototype, "get$_overscroll_indicator$_handleScrollNotification", "_overscroll_indicator$_handleScrollNotification$1", 19);
    _instance_1_u(_ = L._GlowController.prototype, "get$_changePhase", "_changePhase$1", 4);
    _instance_1_u(_, "get$_tickDisplacement", "_tickDisplacement$1", 16);
    _instance_1_u(L._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin.prototype, "get$visitAncestor", "visitAncestor$1", 28);
    _instance_1_u(T.TransitionRoute.prototype, "get$_handleStatusChanged", "_handleStatusChanged$1", 4);
    _instance_1_u(_ = T.ModalRoute.prototype, "get$_buildModalBarrier", "_buildModalBarrier$1", 36);
    _instance_1_u(_, "get$_buildModalScope", "_buildModalScope$1", 36);
    _instance_0_u(_ = M.BallisticScrollActivity.prototype, "get$_scroll_activity$_tick", "_scroll_activity$_tick$0", 1);
    _instance_0_u(_, "get$_scroll_activity$_end", "_scroll_activity$_end$0", 1);
    _instance_0_u(_ = M.DrivenScrollActivity.prototype, "get$_scroll_activity$_tick", "_scroll_activity$_tick$0", 1);
    _instance_0_u(_, "get$_scroll_activity$_end", "_scroll_activity$_end$0", 1);
    _static_1(G, "scroll_notification__defaultScrollNotificationPredicate$closure", "defaultScrollNotificationPredicate", 19);
    _instance_1_u(G._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin.prototype, "get$visitAncestor", "visitAncestor$1", 28);
    _instance_0_u(R.ScrollPositionWithSingleContext.prototype, "get$dispose", "dispose$0", 1);
    _instance_1_u(_ = F.ScrollableState.prototype, "get$_handleDragDown", "_handleDragDown$1", 148);
    _instance_1_u(_, "get$_scrollable$_handleDragStart", "_scrollable$_handleDragStart$1", 42);
    _instance_1_u(_, "get$_scrollable$_handleDragUpdate", "_scrollable$_handleDragUpdate$1", 38);
    _instance_1_u(_, "get$_scrollable$_handleDragEnd", "_scrollable$_handleDragEnd$1", 44);
    _instance_0_u(_, "get$_scrollable$_handleDragCancel", "_scrollable$_handleDragCancel$0", 1);
    _instance_0_u(_, "get$_disposeHold", "_disposeHold$0", 1);
    _instance_0_u(_, "get$_disposeDrag", "_disposeDrag$0", 1);
    _instance_1_u(_, "get$_receivedPointerSignal", "_receivedPointerSignal$1", 149);
    _instance_1_u(_, "get$_handlePointerScroll", "_handlePointerScroll$1", 9);
    _instance_2_u(X._ShortcutsState.prototype, "get$_handleOnKey", "_handleOnKey$2", 150);
    _instance_0_u(_ = E._RenderSingleChildViewport.prototype, "get$_hasScrolled", "_hasScrolled$0", 1);
    _instance(_, "get$showOnScreen", 0, 0, null, ["call$4$curve$descendant$duration$rect", "call$0"], ["showOnScreen$4$curve$descendant$duration$rect", "showOnScreen$0"], 32, 0);
    _static_2(G, "sliver0___kDefaultSemanticIndexCallback$closure", "_kDefaultSemanticIndexCallback", 187);
    _instance_1_u(G.SliverMultiBoxAdaptorElement.prototype, "get$removeChild", "removeChild$1", 151);
    _instance_0_u(K._AnimatedState.prototype, "get$_transitions$_handleChange", "_transitions$_handleChange$0", 1);
    _static_1(N, "widget_inspector__transformDebugCreator$closure", "transformDebugCreator", 188);
    _static_0(V, "recorder___dummyAsyncVoidCallback$closure", "_dummyAsyncVoidCallback", 5);
    _static_2(V, "recorder___dispatchEngineBenchmarkValue$closure", "_dispatchEngineBenchmarkValue", 139);
    _instance_1_u(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype, "get$handleSystemMessage", "handleSystemMessage$1", 65);
    _instance_0_u(_ = V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding.prototype, "get$handleMetricsChanged", "handleMetricsChanged$0", 1);
    _instance_0_u(_, "get$handlePlatformBrightnessChanged", "handlePlatformBrightnessChanged$0", 1);
    _instance_0_u(Z.LocalBenchmarkServerClient.prototype, "get$stopPerformanceTracing", "stopPerformanceTracing$0", 5);
    _static(D, "print__debugPrintThrottled$closure", 1, null, ["call$2$wrapWidth", "call$1"], ["debugPrintThrottled", function(message) {
      return D.debugPrintThrottled(message, null);
    }], 126, 0);
    _static_0(D, "print___debugPrintTask$closure", "_debugPrintTask", 1);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(P.Object, null);
    _inheritMany(P.Object, [H.Closure, H._NullTreeSanitizer, H.AlarmClock, H.AssetManager, H.AssetManagerException, H.EngineCanvas, H.BrowserEngine, H.OperatingSystem, H.LocationStrategy, H.PlatformLocation, H._SaveStackTracking, H.ContextStateHandle, H.ClipboardMessageHandler, H.ClipboardAPICopyStrategy, H.ClipboardAPIPasteStrategy, H.ExecCommandCopyStrategy, H.ExecCommandPasteStrategy, H.CanvasKitCanvas, H._RegisteredFont, H.SkiaObject, H.SkPath, H.SkParagraphStyle, H.DomRenderer, H._SaveStackEntry, H._SaveClipEntry, H.BrowserHistory, H._SaveElementStackEntry, H.SaveElementStackTracking, H.HtmlImage, H.Keyboard, H.EnginePictureRecorder, H.EnginePicture, H.PlatformViewRegistry, H.PointerBinding, H.PointerSupportDetector, H._BaseAdapter, H._WheelEventListenerMixin, H._SanitizedDetails, H._ButtonSanitizer, H._PointerState, H.PointerDataConverter, H.Profiler, H._RRectRenderer, H.AccessibilityAnnouncements, H._CheckableKind, H.RoleManager, H.SemanticsUpdate, H.SemanticsNodeUpdate, H.Role, H.SemanticsObject, H.AccessibilityMode, H.GestureMode, H.EngineSemanticsOwner, H.SemanticsHelper, H.SemanticsEnabler, H.DefaultTextEditingStrategy, P._ListBase_Object_ListMixin, H.MethodCall, H.StringCodec, H.JSONMessageCodec, H.JSONMethodCodec, H.StandardMessageCodec, H.StandardMethodCodec, H.WriteBuffer, H.ReadBuffer, H.EngineGradient, H.SurfaceShadowData, H._DomClip, H.PersistedSurface, H.SurfacePaint, H.SurfacePaintData, H.SurfacePath, H._PaintRequest, H.RecordingCanvas, H.PaintCommand, H.Subpath, H.PathCommand, H._PaintBounds, H.SurfaceScene, H.SurfaceSceneBuilder, H.FrameReference, H.PersistedSurfaceState, H._PersistedSurfaceMatch, H.FontCollection, H.FontManager, H.LineBreakType, H.LineBreakResult, H.RulerManager, H.TextMeasurementService, H.LinesCalculator, H.MaxIntrinsicCalculator, H.EngineLineMetrics, H.EngineParagraph, H.EngineParagraphStyle, H.EngineTextStyle, H.EngineParagraphBuilder, H.ParagraphGeometricStyle, H.TextDimensions, H.ParagraphRuler, H.MeasurementResult, H.EngineInputType, H.EditingState, H.InputConfiguration, H.TextEditingChannel, H.HybridTextEditing, H.EditableTextStyle, H.EditableTextGeometry, H.TransformKind, H.Matrix40, H.Vector30, H.WebExperiments, P.Window0, H.JS_CONST, J.Interceptor, J.JSObject, J.ArrayIterator, P.Iterable, H.CastIterator, P.MapMixin, H.ListIterator, P.Iterator, H.ExpandIterator, H.EmptyIterator, H.WhereTypeIterator, H.FixedLengthListMixin, H.UnmodifiableListMixin, H.Symbol, P.MapView, H.ConstantMap, H.JSInvocationMirror, H.TypeErrorDecoder, P.Error, H.ExceptionAndStackTrace, H._StackTrace, H.LinkedHashMapCell, H.LinkedHashMapKeyIterator, H.JSSyntaxRegExp, H._MatchImplementation, H.StringMatch, H._StringAllMatchesIterator, H.Rti, H._FunctionParameters, H._Type, P._TimerImpl, P._AsyncAwaitCompleter, P._AsyncStarStreamController, P._IterationMarker, P._SyncStarIterator, P.Future, P._Completer, P._FutureListener, P._Future, P._AsyncCallbackEntry, P.Stream, P.StreamSubscription, P.StreamTransformerBase, P._StreamController, P._AsyncStreamControllerDispatch, P._BufferingStreamSubscription, P._AddStreamState, P._PendingEvents, P._DelayedEvent, P._DelayedDone, P._StreamIterator, P.Timer, P.AsyncError, P._Zone, P._HashMapKeyIterator, P._SetBase, P._HashSetIterator, P._LinkedHashSetCell, P._LinkedHashSetIterator, P.IterableMixin, P.LinkedHashSet, P.ListMixin, P._MapBaseValueIterator, P._UnmodifiableMapMixin, P._ListQueueIterator, P.SetMixin, P._SplayTreeNode, P._SplayTree, P._SplayTreeIterator, P.Codec, P._JsonStringifier, P._Utf8Encoder, P._Utf8Decoder, P.bool, P.Comparable, P.DateTime, P.num, P.Duration, P.OutOfMemoryError, P.StackOverflowError, P._Exception, P.FormatException, P.Function, P.List, P.Map, P.MapEntry, P.Null, P.Match, P.StackTrace, P._StringStackTrace, P.Stopwatch, P.String, P.StringBuffer, P.Symbol0, P.Type, P._Uri, P.UriData, P._SimpleUri, P.ServiceExtensionResponse, P.TimelineTask, P._AsyncBlock, P._SyncBlock, W.CssStyleDeclarationBase, W.EventStreamProvider, W._Html5NodeValidator, W.ImmutableListMixin, W.NodeValidatorBuilder, W._SimpleNodeValidator, W._SvgNodeValidator, W.FixedSizeListIterator, W._DOMWindowCrossFrame, W.NodeValidator, W._SameOriginUriPolicy, W._ValidatingTreeSanitizer, P._StructuredClone, P._AcceptStructuredClone, P.JsObject, P._Random, P.Point, P._RectangleBase, P.ByteBuffer, P.Endian, P.ByteData, P.Int8List, P.Uint8List, P.Uint8ClampedList, P.Int16List, P.Uint16List, P.Int32List, P.Uint32List, P.Float32List, P.Float64List, P.ClipOp, P.Canvas, P.PathFillType, P._StoredMessage, P._RingBuffer, P.ChannelBuffers, P.OffsetBase, P.Rect, P.Radius, P.RRect, P._HashEnd, P.Color, P.StrokeCap, P.StrokeJoin, P.PaintingStyle, P.BlendMode, P.Clip, P.Paint, P.Image, P.BlurStyle, P.MaskFilter, P.Shadow, P.Path, P.PointerChange, P.PointerDeviceKind, P.PointerSignalKind, P.PointerData, P.PointerDataPacket, P.SemanticsAction, P.SemanticsFlag, P.SemanticsUpdateBuilder, P.PlaceholderAlignment, P.FontWeight, P.TextAlign, P.TextBaseline, P.TextDecoration, P.TextDecorationStyle, P.TextDirection, P.TextBox, P.TextAffinity, P.TextPosition, P.TextRange, P.ParagraphConstraints, P.BoxHeightStyle, P.BoxWidthStyle, P.Paragraph, P.TileMode, P.AppLifecycleState, P.WindowPadding, P.Locale, P.AccessibilityFeatures, P.Brightness, P.FramePhase, P.FrameTiming, Y.HeapPriorityQueue, X.AnimationStatus, B.Listenable, G._AnimationDirection, G.AnimationBehavior, T.Simulation, S.AnimationWithParentMixin, S._TrainHoppingMode, Z.ParametricCurve, S.AnimationLazyListenerMixin, S.AnimationEagerListenerMixin, S.AnimationLocalListenersMixin, S.AnimationLocalStatusListenersMixin, R.Animatable, T._IconThemeData_Object_Diagnosticable, K.CupertinoUserInterfaceLevelData, Y._DiagnosticableTree_Object_Diagnosticable, L.CupertinoLocalizations, L.LocalizationsDelegate, L.DefaultCupertinoLocalizations, N._State_Object_Diagnosticable, D._CupertinoBackGestureController, Z._Decoration_Object_Diagnosticable, Z.BoxPainter, D.GestureArenaMember, K._CupertinoThemeData_Object_Diagnosticable, K._CupertinoThemeDefaults, K._CupertinoTextThemeDefaults, U.StackFilter, Y.DiagnosticsNode, U._FlutterErrorDetails_Object_Diagnosticable, N.BindingBase, B.ChangeNotifier, Y.DiagnosticLevel, Y.DiagnosticsTreeStyle, Y.TextTreeConfiguration, Y._WordWrapParseMode, Y._PrefixedStringBuilder, Y._NoDefaultValue, Y.TextTreeRenderer, Y.DiagnosticPropertiesBuilder, Y.Diagnosticable, Y.DiagnosticableTreeMixin, D.Key, D._TypeLiteral, F.LicenseEntry, B.AbstractNode, T.TargetPlatform, G.WriteBuffer0, G.ReadBuffer0, R.StackFrame, O.SynchronousFuture, D.GestureDisposition, D.GestureArenaEntry, D._GestureArena, D.GestureArenaManager, N.GestureBinding, O.DragDownDetails, O.DragStartDetails, O.DragUpdateDetails, O.DragEndDetails, F._PointerEvent_Object_Diagnosticable, O.HitTestTarget, O.HitTestEntry, O.HitTestResult, T.LongPressStartDetails, T.LongPressMoveUpdateDetails, T.LongPressEndDetails, B._Vector, B._Matrix, B.PolynomialFit, B.LeastSquaresSolver, O._DragState, F._CountdownZoned, F._TapTracker, O.PointerRouter, G.PointerSignalResolver, S.DragStartBehavior, S.GestureRecognizerState, S.OffsetPair, N.TapDownDetails, N.TapUpDetails, R.Velocity, R.VelocityEstimate, R._PointAtTime, R.VelocityTracker, S.ThemeMode, K.ScrollBehavior, T.SingleChildLayoutDelegate, V._AppBarTheme_Object_Diagnosticable, D._CornerId, D._Diagonal, Q._MaterialBannerThemeData_Object_Diagnosticable, D._BottomAppBarTheme_Object_Diagnosticable, M._BottomNavigationBarThemeData_Object_Diagnosticable, X._BottomSheetThemeData_Object_Diagnosticable, M._ButtonBarThemeData_Object_Diagnosticable, M.ButtonTextTheme, M.ButtonBarLayoutBehavior, M._ButtonThemeData_Object_Diagnosticable, A._CardTheme_Object_Diagnosticable, K._ChipThemeData_Object_Diagnosticable, A._ColorScheme_Object_Diagnosticable, Y._DialogTheme_Object_Diagnosticable, G._DividerThemeData_Object_Diagnosticable, E._DefaultHeroTag, A.FloatingActionButtonLocation, A.FabFloatOffsetY, A.FabEndOffsetX, A.FloatingActionButtonAnimator, S._FloatingActionButtonThemeData_Object_Diagnosticable, M.InkFeature, R.InteractiveInkFeatureFactory, R._HighlightType, L.FloatingLabelBehavior, L._InputDecorationTheme_Object_Diagnosticable, M.MaterialType, U.MaterialLocalizations, U.DefaultMaterialLocalizations, V.MaterialState, E._NavigationRailThemeData_Object_Diagnosticable, K.Route, K.PageTransitionsBuilder, K._PageTransitionsTheme_Object_Diagnosticable, R._PopupMenuThemeData_Object_Diagnosticable, M._ScaffoldSlot, M.ScaffoldPrelayoutGeometry, M.ScaffoldGeometry, K.Constraints, B.MultiChildLayoutDelegate, M.ScaffoldFeatureController, Q._SliderThemeData_Object_Diagnosticable, N.SnackBarClosedReason, K._SnackBarThemeData_Object_Diagnosticable, U._TabBarTheme_Object_Diagnosticable, R._TextTheme_Object_Diagnosticable, X.MaterialTapTargetSize, X._ThemeData_Object_Diagnosticable, X._IdentityThemeDataCacheKey, X._FifoCache, X._VisualDensity_Object_Diagnosticable, S._ToggleButtonsThemeData_Object_Diagnosticable, T._TooltipThemeData_Object_Diagnosticable, U.ScriptCategory, U._Typography_Object_Diagnosticable, K.AlignmentGeometry, G.RenderComparison, G.Axis, G.VerticalDirection, G.AxisDirection, N.PaintingBinding, K.BorderRadiusGeometry, Y.BorderStyle, Y.BorderSide, Y.ShapeBorder, F.BoxShape, Z.ClipContext, V.EdgeInsetsGeometry, T._ColorsAndStops, T.Gradient, E.ImageCache, E._CachedImage, E._PendingImage, M.ImageConfiguration, G.Accumulator, G.InlineSpanSemanticsInformation, D.ShaderWarmUp, U.PlaceholderDimensions, U.TextWidthBasis, U.TextPainter, A._TextStyle_Object_Diagnosticable, M.SpringDescription, M.SpringType, M._CriticalSolution, M._OverdampedSolution, M._UnderdampedSolution, N.Tolerance, N.RendererBinding, K.ParentData, S.RenderBoxContainerDefaultsMixin, V.CustomPainterSemantics, T.DebugOverflowIndicatorMixin, F.FlexFit, F.MainAxisSize, F.MainAxisAlignment, F.CrossAxisAlignment, T.AnnotationEntry, T.AnnotationResult, Y._MouseTrackerAnnotation_Object_Diagnosticable, Y._MouseState, K.SemanticsHandle, K.PipelineOwner, K.RenderObjectWithChildMixin, K.ContainerParentDataMixin, K.ContainerRenderObjectMixin, K.RelayoutWhenSystemFontsChangeMixin, K._SemanticsFragment, K._SemanticsGeometry, Q.TextOverflow, E.RenderProxyBoxMixin, E.HitTestBehavior, E.RenderAnimatedOpacityMixin, E.CustomClipper, E.DecorationPosition, G.GrowthDirection, G._SliverGeometry_Object_Diagnosticable, G.RenderSliverHelpers, F.KeepAliveParentDataMixin, F.RenderSliverWithKeepAliveMixin, K.RelativeRect, K.StackFit, K.Overflow, A.ViewConfiguration, Q.CacheExtentStyle, Q.RevealedOffset, N.ScrollDirection, N._TaskEntry, N._FrameCallbackEntry, N.SchedulerPhase, N.SchedulerBinding, V.Priority, M.Ticker, M.TickerFuture, M.TickerCanceled, N.SemanticsBinding, A.SemanticsTag, A.CustomSemanticsAction, A._SemanticsData_Object_Diagnosticable, A._BoxEdge, A._TraversalSortNode, A.SemanticsConfiguration, A.DebugSemanticsDumpOrder, A._SemanticsSortKey_Object_Diagnosticable, E.SemanticsEvent, Q.AssetBundle, Q.BinaryMessenger, N.ServicesBinding, G._KeyboardKey_Object_Diagnosticable, F.MethodCall0, F.PlatformException, F.MissingPluginException, U.StringCodec0, U.JSONMessageCodec0, U.JSONMethodCodec0, U.StandardMessageCodec0, A.BasicMessageChannel, A.MethodChannel, B.KeyboardSide, B.ModifierKey, B.RawKeyEventData, B._RawKeyEvent_Object_Diagnosticable, B.RawKeyboard, B._ModifierSidePair, O.KeyHelper, O._GLFWKeyHelper_Object_KeyHelper, X.ApplicationSwitcherDescription, X.SystemUiOverlayStyle, V.SystemSoundType, U._Intent_Object_Diagnosticable, U._Action_Object_Diagnosticable, U._ActionDispatcher_Object_Diagnosticable, U.Notification0, L.AutomaticKeepAliveClientMixin, N.WidgetsBindingObserver, N.WidgetsBinding, O.FocusAttachment, O.UnfocusDisposition, O._FocusNode_Object_DiagnosticableTreeMixin, O.FocusHighlightMode, O.FocusHighlightStrategy, O._FocusManager_Object_DiagnosticableTreeMixin, U._FocusTraversalGroupInfo, U.TraversalDirection, U._FocusTraversalPolicy_Object_Diagnosticable, U._DirectionalPolicyDataEntry, U._DirectionalPolicyData, U.DirectionalFocusTraversalPolicyMixin, U.__ReadingOrderSortData_Object_Diagnosticable, U.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, N._StateLifecycle, N._ElementLifecycle, N._InactiveElements, N.BuildContext, N.BuildOwner, N.DebugCreator, N.IndexedSlot, D.GestureRecognizerFactory, D.SemanticsGestureDelegate, T.HeroFlightDirection, T._HeroFlightManifest, T._HeroFlight, K.NavigatorObserver, X.IconData, L._Pending, L.WidgetsLocalizations, L.DefaultWidgetsLocalizations, F.MediaQueryData, E._ToolbarSlot, K.RoutePopDisposition, K.RouteSettings, K.RouteTransitionRecord, K.TransitionDelegate, K._RouteLifecycle, X.OverlayEntry, L._GlowState, S._StorageEntryIdentifier, S.PageStorageBucket, M.ScrollMetrics, L.ScrollPhysics, T.LocalHistoryRoute, M.ScrollActivity, M.ScrollDragController, G.ViewportNotificationMixin, A.ScrollPositionAlignmentPolicy, B.ScrollViewKeyboardDismissBehavior, F.ScrollIncrementType, X.KeySet, G.SliverChildDelegate, U.SingleTickerProviderStateMixin, U.TickerProviderStateMixin, N._InspectorReferenceData, N._WidgetInspectorService, N.WidgetInspectorService, N._LocationCount, N._ElementLocationStatsTracker, N.InspectorSelection, V.Recorder, Q.ParagraphGenerator, Q._TestMode, Q.Palette, V.Runner, V.Timeseries, V.TimeseriesStats, V.AnnotatedSample, V.Profile, Z.TimeseriesVisualization, Z.LocalBenchmarkServerClient, E.Matrix4, E.Vector3, E.Vector4]);
    _inheritMany(H.Closure, [H.webOnlyInitializeEngine_closure, H.webOnlyInitializeEngine_closure0, H.webOnlyInitializeEngine__closure, H.AssetManager__baseUrl_closure, H.AssetManager__baseUrl_closure0, H.HashLocationStrategy_onPopState_closure, H.HashLocationStrategy__waitForPopState_closure, H.ClipboardMessageHandler_setDataMethodCall_closure, H.ClipboardMessageHandler_setDataMethodCall_closure0, H.ClipboardMessageHandler_getDataMethodCall_closure, H.ClipboardMessageHandler_getDataMethodCall_closure0, H.SkiaObjects_closure, H.closure12, H.DomRenderer_reset_closure, H.BrowserHistory__popStateListener_closure, H.BrowserHistory__popStateListener_closure0, H.Keyboard$__closure, H.Keyboard$__closure0, H.Keyboard$__closure1, H.Keyboard__handleHtmlEvent_closure, H._BaseAdapter_addEventListener_closure, H._WheelEventListenerMixin__addWheelEventListener_closure, H._PointerAdapter__ensureSanitizer_closure, H._PointerAdapter__addPointerEventListener_closure, H._PointerAdapter_setup_closure, H._PointerAdapter_setup_closure0, H._PointerAdapter_setup__closure, H._PointerAdapter_setup_closure1, H._PointerAdapter_setup_closure2, H._PointerAdapter_setup_closure3, H._TouchAdapter__addTouchEventListener_closure, H._TouchAdapter_setup_closure, H._TouchAdapter_setup_closure0, H._TouchAdapter_setup_closure1, H._TouchAdapter_setup_closure2, H._MouseAdapter__addMouseEventListener_closure, H._MouseAdapter_setup_closure, H._MouseAdapter_setup_closure0, H._MouseAdapter_setup_closure1, H._MouseAdapter_setup_closure2, H.PointerDataConverter__ensureStateForPointer_closure, H.AccessibilityAnnouncements$__closure, H.AccessibilityAnnouncements_handleMessage_closure, H.Incrementable_closure, H.Incrementable_closure0, H.Scrollable_update_closure, H.Scrollable_update_closure0, H.Scrollable_update_closure1, H.closure13, H.closure14, H.closure15, H.closure16, H.closure17, H.closure18, H.closure19, H.closure20, H.EngineSemanticsOwner$__closure, H.EngineSemanticsOwner_closure, H.EngineSemanticsOwner__getGestureModeClock_closure, H.DesktopSemanticsEnabler_tryEnableSemantics_closure, H.DesktopSemanticsEnabler_prepareAccesibilityPlaceholder_closure, H.MobileSemanticsEnabler_tryEnableSemantics_closure, H.MobileSemanticsEnabler_prepareAccesibilityPlaceholder_closure, H.Tappable_update_closure, H.TextField__initializeForBlink_closure, H.TextField__initializeForWebkit_closure, H.TextField__initializeForWebkit_closure0, H.StandardMessageCodec_writeValue_closure, H.PersistedStandardPicture__applyBitmapPaint_closure, H.SurfaceSceneBuilder_build_closure, H.SurfaceSceneBuilder_build_closure0, H.commitScene_closure, H.PersistedContainerSurface__updateManyToMany_insertDomNodeIfMoved, H.PersistedContainerSurface__matchChildren_closure, H.FontManager__loadFontFace_closure, H.FontManager__loadFontFace_closure0, H._PolyfillFontManager_registerAsset__watchWidth, H._PolyfillFontManager_registerAsset_closure, H.RulerManager__scheduleRulerCacheCleanup_closure, H.RulerManager__evictAllRulers_closure, H.RulerManager_cleanUpRulerCache_closure, H.EngineParagraphBuilder__buildRichText_currentElement, H.DefaultTextEditingStrategy_addEventHandlers_closure, H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure, H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0, H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1, H.IOSTextEditingStrategy_addEventHandlers_closure, H.IOSTextEditingStrategy_addEventHandlers_closure0, H.IOSTextEditingStrategy__addTapListener_closure, H.IOSTextEditingStrategy__schedulePlacement_closure, H.AndroidTextEditingStrategy_addEventHandlers_closure, H.FirefoxTextEditingStrategy_addEventHandlers_closure, H.FirefoxTextEditingStrategy_addEventHandlers_closure0, H.HybridTextEditing__startEditing_closure0, H.HybridTextEditing__startEditing_closure, H.WebExperiments$__closure, H.EngineWindow__zonedPlatformMessageResponseCallback_closure, H.EngineWindow__sendPlatformMessage_closure, H.EngineWindow__sendPlatformMessage_closure0, H.EngineWindow__sendPlatformMessage_closure1, H.EngineWindow__replyToPlatformMessage_closure, H.EngineWindow__addBrightnessMediaQueryListener_closure, H.EngineWindow__addBrightnessMediaQueryListener_closure0, H._invoke3_closure, H.CastMap_forEach_closure, H.ConstantStringMap_values_closure, H.Instantiation, H.Primitives_initTicker_closure, H.Primitives_functionNoSuchMethod_closure, H.unwrapException_saveStackTrace, H.TearOffClosure, H.JsLinkedHashMap_values_closure, H.JsLinkedHashMap_addAll_closure, H.initHooks_closure, H.initHooks_closure0, H.initHooks_closure1, P._AsyncRun__initializeScheduleImmediate_internalCallback, P._AsyncRun__initializeScheduleImmediate_closure, P._AsyncRun__scheduleImmediateJsOverride_internalCallback, P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, P._TimerImpl_internalCallback, P._TimerImpl$periodic_closure, P._awaitOnObject_closure, P._awaitOnObject_closure0, P._wrapJsFunctionForAsync_closure, P._asyncStarHelper_closure, P._asyncStarHelper_closure0, P._AsyncStarStreamController__resumeBody, P._AsyncStarStreamController__resumeBody_closure, P._AsyncStarStreamController_closure, P._AsyncStarStreamController_closure0, P._AsyncStarStreamController_closure1, P._AsyncStarStreamController__closure, P.Future_Future$delayed_closure, P.Future_wait_handleError, P.Future_wait_closure, P._Future__addListener_closure, P._Future__prependListeners_closure, P._Future__chainForeignFuture_closure, P._Future__chainForeignFuture_closure0, P._Future__chainForeignFuture_closure1, P._Future__asyncCompleteWithValue_closure, P._Future__chainFuture_closure, P._Future__asyncCompleteError_closure, P._Future__propagateToListeners_handleWhenCompleteCallback, P._Future__propagateToListeners_handleWhenCompleteCallback_closure, P._Future__propagateToListeners_handleValueCallback, P._Future__propagateToListeners_handleError, P.Stream_Stream$fromIterable_closure, P.Stream_length_closure, P.Stream_length_closure0, P._StreamController__subscribe_closure, P._StreamController__recordCancel_complete, P._AddStreamState_cancel_closure, P._BufferingStreamSubscription__sendError_sendError, P._BufferingStreamSubscription__sendDone_sendDone, P._PendingEvents_schedule_closure, P._rootHandleUncaughtError_closure, P._RootZone_bindCallback_closure, P._RootZone_bindCallbackGuarded_closure, P._RootZone_bindUnaryCallbackGuarded_closure, P._HashMap_values_closure, P.HashMap_HashMap$from_closure, P.LinkedHashMap_LinkedHashMap$from_closure, P.MapBase_mapToString_closure, P.MapMixin_entries_closure, P.SplayTreeMap_closure, P.SplayTreeSet_closure, P._JsonMap_values_closure, P._JsonStringifier_writeMap_closure, P.NoSuchMethodError_toString_closure, P.Duration_toString_sixDigits, P.Duration_toString_twoDigits, P.Uri__parseIPv4Address_error, P.Uri_parseIPv6Address_error, P.Uri_parseIPv6Address_parseHex, P._Uri__Uri$notSimple_closure, P._Uri__makePath_closure, P._createTables_closure, P._createTables_build, P._createTables_setChars, P._createTables_setRange, W.Element_Element$html_closure, W.HttpRequest_request_closure, W.MidiInputMap_keys_closure, W.MidiInputMap_values_closure, W.MidiOutputMap_keys_closure, W.MidiOutputMap_values_closure, W.RtcStatsReport_keys_closure, W.RtcStatsReport_values_closure, W.Storage_keys_closure, W.Storage_values_closure, W._EventStreamSubscription_closure, W.NodeValidatorBuilder_allowsElement_closure, W.NodeValidatorBuilder_allowsAttribute_closure, W._SimpleNodeValidator_closure, W._SimpleNodeValidator_closure0, W._TemplatingNodeValidator_closure, W._ValidatingTreeSanitizer_sanitizeTree_walk, P._StructuredClone_walk_closure, P._StructuredClone_walk_closure0, P._AcceptStructuredClone_walk_closure, P.convertDartToNative_Dictionary_closure, P.JsObject__convertDataTree__convert, P._convertToJS_closure, P._convertToJS_closure0, P._wrapToDart_closure, P._wrapToDart_closure0, P._wrapToDart_closure1, P.promiseToFuture_closure, P.promiseToFuture_closure0, P.AudioParamMap_keys_closure, P.AudioParamMap_values_closure, E.CupertinoDynamicColor_toString_toString, D.CupertinoPageRoute_buildPageTransitions_closure, D.CupertinoPageRoute_buildPageTransitions_closure0, D._CupertinoBackGestureController_dragEnd_closure, E._CupertinoScrollbarState_initState_closure, E._CupertinoScrollbarState_didChangeDependencies_closure, E._CupertinoScrollbarState__dragScrollbar_closure, E._CupertinoScrollbarState__startFadeoutTimer_closure, E._CupertinoScrollbarState__handleLongPress_closure, E._CupertinoScrollbarState__gestures_closure, E._CupertinoScrollbarState__gestures_closure0, U.FlutterErrorDetails_summary_formatException, U.FlutterErrorDetails_summary_closure, U.FlutterErrorDetails_summary_closure0, U.FlutterErrorDetails_debugFillProperties_closure, U.FlutterError_FlutterError_closure, U.FlutterError_closure, U.FlutterError_toString_closure, N.BindingBase_lockEvents_closure, N.BindingBase_registerSignalServiceExtension_closure, N.BindingBase_registerBoolServiceExtension_closure, N.BindingBase_registerNumericServiceExtension_closure, N.BindingBase_registerServiceExtension_closure, N.BindingBase_registerServiceExtension__closure, B.ChangeNotifier_notifyListeners_closure, Y._PrefixedStringBuilder__wordWrapLine_noWrap, Y.TextTreeRenderer__debugRender_visitor, Y.TextTreeRenderer__debugRender_closure, R.StackFrame_fromStackString_closure, O.SynchronousFuture_whenComplete_closure, D._GestureArena_toString_closure, D.GestureArenaManager_add_closure, D.GestureArenaManager__tryToResolveArena_closure, N.GestureBinding_dispatchEvent_closure, N.GestureBinding_dispatchEvent_closure0, T.LongPressGestureRecognizer__checkLongPressStart_closure, T.LongPressGestureRecognizer__checkLongPressMoveUpdate_closure, T.LongPressGestureRecognizer__checkLongPressEnd_closure, O.DragGestureRecognizer__checkDown_closure, O.DragGestureRecognizer__checkStart_closure, O.DragGestureRecognizer__checkUpdate_closure, O.DragGestureRecognizer__checkEnd_closure, O.DragGestureRecognizer__checkEnd_closure0, O.DragGestureRecognizer__checkEnd_closure1, O.PointerRouter_addRoute_closure, O.PointerRouter__dispatchEventToRoutes_closure, S.PrimaryPointerGestureRecognizer_addAllowedPointer_closure, N.TapGestureRecognizer_handleTapDown_closure, N.TapGestureRecognizer_handleTapUp_closure, S._MaterialAppState_build_closure, S._MaterialAppState_build_closure0, S._MaterialAppState_build_closure1, D.MaterialPointArcTween__initialize_sweepAngle, D.MaterialRectArcTween__initialize_closure, R.BackButton_build_closure, Z._RawMaterialButtonState__handleHighlightChanged_closure, Z._RawMaterialButtonState__handleHoveredChanged_closure, Z._RawMaterialButtonState__handleFocusedChanged_closure, Z._RenderInputPadding_hitTest_closure, K._CheckboxState__handleFocusHighlightChanged_closure, K._CheckboxState__handleHoverChanged_closure, K._CheckboxState_build_closure, U._getClipCallback_closure, R._InkResponseState_highlightsExist_closure, R._InkResponseState_updateHighlight_handleInkRemoval, R._InkResponseState__createInkFeature_onRemoved, R._InkResponseState__handleFocusHighlightModeChange_closure, R._InkResponseState_build_closure, M._MaterialState_build_closure, M._MaterialInteriorState_forEachTween_closure, M._MaterialInteriorState_forEachTween_closure0, M._MaterialInteriorState_forEachTween_closure1, K.PageTransitionsTheme__all_closure, M._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure, M.ScaffoldState_hideCurrentSnackBar_closure, M.ScaffoldState_build_closure, E._ScrollbarState_didChangeDependencies_closure, E._ScrollbarState__handleScrollNotification_closure, U.TabController__changeIndex_closure, E._TabBarState_initState_closure, E._TabBarState_didUpdateWidget_closure, E._TabBarState__handleTabControllerTick_closure, E._TabBarState_build_closure, E._TabBarViewState__warpToCurrentIndex_closure, E._TabBarViewState__warpToCurrentIndex_closure0, K._AnimatedThemeState_forEachTween_closure, X.ThemeData_localize_closure, S._TooltipState__handleMouseTrackerChange_closure, S._TooltipState__createNewEntry_closure, S._TooltipState_build_closure, S._TooltipState_build_closure0, Y._CompoundBorder_dimensions_closure, Y._CompoundBorder_scale_closure, Y._CompoundBorder_toString_closure, Z.ClipContext_clipPathAndPaint_closure, Z.ClipContext_clipRectAndPaint_closure, T._sample_closure, T._interpolateColorsAndStops_closure, T.LinearGradient_scale_closure, G.InlineSpan_getSpanForPosition_closure, Q.TextSpan_debugDescribeChildren_closure, S.BoxConstraints_toString_describe, S.RenderBox_getDistanceToActualBaseline_closure, S.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure, Y._MouseState_toString_describeEvent, Y.MouseTracker__handleEvent_closure, Y.MouseTracker__updateAllDevices_closure, Y.MouseTracker__dispatchDeviceCallbacks_closure, Y.MouseTracker_schedulePostFrameCheck_closure, K.PaintingContext_pushClipRect_closure, K.PaintingContext_pushClipPath_closure, K.PipelineOwner_flushLayout_closure, K.PipelineOwner_flushCompositingBits_closure, K.PipelineOwner_flushPaint_closure, K.PipelineOwner_flushSemantics_closure, K.RenderObject__debugReportException_closure, K.RenderObject_invokeLayoutCallback_closure, K.RenderObject__updateCompositingBits_closure, K.RenderObject_clearSemantics_closure, K.RenderObject__getSemanticsForParent_closure, K._RootSemanticsFragment_compileChildren_closure, K._SwitchableSemanticsFragment_compileChildren_closure, Q.RenderParagraph__extractPlaceholderSpans_closure, Q.RenderParagraph_hitTestChildren_closure, Q.RenderParagraph_paint_closure, Q.RenderParagraph_describeSemanticsConfiguration_closure, E.RenderTransform_hitTestChildren_closure, E.RenderFractionalTranslation_hitTestChildren_closure, T.RenderShiftedBox_hitTestChildren_closure, G.RenderSliverHelpers_hitTestBoxChild_closure, U.RenderSliverList_performLayout_advance, F.RenderSliverMultiBoxAdaptor__createOrObtainChild_closure, F.RenderSliverMultiBoxAdaptor_collectGarbage_closure, F.RenderSliverMultiBoxAdaptor_collectGarbage__closure, Q.RenderViewportBase_visitChildrenForSemantics_closure, Q.RenderViewportBase_hitTestChildren_closure, N._TaskEntry_run_closure, N.SchedulerBinding_endOfFrame_closure, N.SchedulerBinding_scheduleWarmUpFrame_closure, N.SchedulerBinding_scheduleWarmUpFrame_closure0, N.SchedulerBinding_scheduleWarmUpFrame_closure1, N.SchedulerBinding_handleBeginFrame_closure, M.TickerFuture_whenCompleteOrCancel_thunk, A.SemanticsNode_getSemanticsData_closure, A.SemanticsNode__childrenInTraversalOrder_closure, A.SemanticsNode_debugDescribeChildren_closure, A._SemanticsSortGroup_sortedWithinVerticalGroup_closure, A._SemanticsSortGroup_sortedWithinKnot_closure, A._SemanticsSortGroup_sortedWithinKnot_search, A._SemanticsSortGroup_sortedWithinKnot_closure0, A._SemanticsSortGroup_sortedWithinKnot_closure1, A._childrenInDefaultOrder_closure, A.SemanticsOwner_sendSemanticsUpdate_closure, A.SemanticsOwner_sendSemanticsUpdate_closure0, A.SemanticsOwner_sendSemanticsUpdate_closure1, A.SemanticsOwner__getSemanticsActionHandlerForId_closure, A.SemanticsConfiguration__addArgumentlessAction_closure, A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure, A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure, A.SemanticsConfiguration_onMoveCursorForwardByWord_closure, A.SemanticsConfiguration_onMoveCursorBackwardByWord_closure, A.SemanticsConfiguration_onSetSelection_closure, N.ServicesBinding__addLicenses_closure, N.ServicesBinding__addLicenses_closure0, N._DefaultBinaryMessenger__sendPlatformMessage_closure, N._DefaultBinaryMessenger_setMessageHandler_closure, U.StandardMessageCodec_writeValue_closure0, A.BasicMessageChannel_setMessageHandler_closure, A.MethodChannel_setMethodCallHandler_closure, Q.RawKeyEventDataAndroid_getModifierSide_findSide, Q.RawKeyEventDataFuchsia_getModifierSide_findSide, B.RawKeyEventDataMacOs_getModifierSide_findSide, R.RawKeyEventDataWindows_getModifierSide_findSide, X.SystemChrome_setSystemUIOverlayStyle_closure, U._getParent_closure, U.Actions__findDispatcher_closure, U.Actions_invoke_closure, U._ActionsState__handleActionChanged_closure, U._FocusableActionDetectorState_initState_closure, U._FocusableActionDetectorState__updateHighlightMode_closure, U._FocusableActionDetectorState__handleMouseEnter_closure, U._FocusableActionDetectorState__handleMouseExit_closure, U._FocusableActionDetectorState__handleFocusChange_closure, U._FocusableActionDetectorState__mayTriggerCallback_shouldShowHoverHighlight, U._FocusableActionDetectorState__mayTriggerCallback_shouldShowFocusHighlight, U._FocusableActionDetectorState_didUpdateWidget_closure, S._WidgetsAppState__onGenerateRoute_closure, S._WidgetsAppState_build_closure, S._MediaQueryFromWindowsState_didChangeMetrics_closure, S._MediaQueryFromWindowsState_didChangePlatformBrightness_closure, L._AutomaticKeepAliveState__addClient_closure, L._AutomaticKeepAliveState__getChildElement_closure, L._AutomaticKeepAliveState__createCallback_closure, L._AutomaticKeepAliveState__createCallback__closure, L._AutomaticKeepAliveState__createCallback__closure0, L._AutomaticKeepAliveState__createCallback___closure, T.RichText__extractChildren_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure, N.WidgetsBinding_scheduleAttachRootWidget_closure, N.RenderObjectToWidgetAdapter_attachToRenderTree_closure, N.RenderObjectToWidgetAdapter_attachToRenderTree_closure0, O.FocusNode_traversalDescendants_closure, O.FocusNode_enclosingScope_closure, O.FocusNode_enclosingScope_closure0, O.FocusNode_debugDescribeChildren_closure, L._FocusState__handleFocusChanged_closure, L._FocusState__handleFocusChanged_closure0, U._getAncestor_closure, U.FocusTraversalPolicy__sortAllDescendants_visitGroups, U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure, U.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1, U.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate, U.DirectionalFocusTraversalPolicyMixin_inDirection_closure, U.DirectionalFocusTraversalPolicyMixin_inDirection_closure0, U.DirectionalFocusTraversalPolicyMixin_inDirection_closure1, U.DirectionalFocusTraversalPolicyMixin_inDirection_closure2, U.DirectionalFocusTraversalPolicyMixin_inDirection_closure3, U.DirectionalFocusTraversalPolicyMixin_inDirection_closure4, U._ReadingOrderSortData_commonDirectionalityOf_closure, U._ReadingOrderSortData_sortWithDirectionality_closure, U._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors, U._ReadingOrderDirectionalGroupData_rect_closure, U._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure, U.ReadingOrderTraversalPolicy__pickNext_closure, U.ReadingOrderTraversalPolicy__pickNext_inBand, U.ReadingOrderTraversalPolicy__pickNext_inBand_closure, N._InactiveElements__unmount_closure, N.BuildOwner_buildScope_closure, N.BuildOwner_finalizeTree_closure, N.Element_renderObject_visit, N.Element_updateSlotForChild_visit, N.Element__updateDepth_closure, N.Element_detachRenderObject_closure, N.Element_attachRenderObject_closure, N.Element_debugDescribeChildren_closure, N.ComponentElement_performRebuild_closure, N.ComponentElement_performRebuild_closure0, N.ParentDataElement__applyParentData_applyParentDataToChild, N.RenderObjectElement_updateChildren_replaceWithNullIfForgotten, N.MultiChildRenderObjectElement_children_closure, D.GestureDetector_build_closure, D.GestureDetector_build_closure0, D.GestureDetector_build_closure1, D.GestureDetector_build_closure2, D.GestureDetector_build_closure3, D.GestureDetector_build_closure4, D.GestureDetector_build_closure5, D.GestureDetector_build_closure6, D.GestureDetector_build_closure7, D.GestureDetector_build_closure8, D.GestureDetector_build_closure9, D.GestureDetector_build_closure10, D._DefaultSemanticsGestureDelegate__getTapHandler_closure, D._DefaultSemanticsGestureDelegate__getLongPressHandler_closure, D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure, D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0, D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1, D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure, D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0, D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1, T.Hero__allHeroesFor_inviteHero, T.Hero__allHeroesFor_visitor, T._HeroState_startFlight_closure, T._HeroState_ensurePlaceholderIsHidden_closure, T._HeroFlight__buildOverlay_closure, T.HeroController_didStopUserGesture_isInvalidFlight, T.HeroController__maybeStartHeroTransition_closure, T.HeroController_closure, Y.IconTheme_merge_closure, G.ImplicitlyAnimatedWidgetState_initState_closure, G.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure, G.ImplicitlyAnimatedWidgetState__constructTweens_closure, G.AnimatedWidgetBaseState__handleAnimationChanged_closure, G._AnimatedDefaultTextStyleState_forEachTween_closure, G._AnimatedPhysicalModelState_forEachTween_closure, G._AnimatedPhysicalModelState_forEachTween_closure0, G._AnimatedPhysicalModelState_forEachTween_closure1, G._AnimatedPhysicalModelState_forEachTween_closure2, L._loadAll_closure, L._loadAll_closure0, L._loadAll_closure1, L._LocalizationsState_load_closure, L._LocalizationsState_load_closure0, L._LocalizationsState_load__closure, X.ModalBarrier_build_closure, K.Route_didPush_closure, K.Route_didAdd_closure, K.Route_isCurrent_closure, K.Route_isFirst_closure, K.Route_isActive_closure, K.Navigator_defaultGenerateInitialRoutes_closure, K._RouteEntry_handlePush_closure, K._RouteEntry_closure1, K._RouteEntry_closure, K._RouteEntry_closure0, K._RouteEntry_isRoutePredicate_closure, K.NavigatorState_initState_closure, K.NavigatorState__flushHistoryUpdates_closure, K.NavigatorState_maybePop_closure, K.NavigatorState_maybePop_closure0, K.NavigatorState__cancelActivePointers_closure, X.OverlayEntry_remove_closure, X._OverlayEntryWidgetState__markNeedsBuild_closure, X.OverlayState_insert_closure, X.OverlayState_insertAll_closure, X.OverlayState_rearrange_closure, X.OverlayState__remove_closure, X.OverlayState__didChangeEntryOpacity_closure, X._RenderTheatre_hitTestChildren_closure, L._GlowController_pull_closure, S.PageStorageBucket__allKeys_closure, D._PageViewState_build_closure0, D._PageViewState_build_closure, T.TransitionRoute__updateSecondaryAnimation__jumpOnAnimationEnd, T.TransitionRoute__updateSecondaryAnimation_closure, T.TransitionRoute__updateSecondaryAnimation_closure0, T.TransitionRoute__setSecondaryAnimation_closure, T._ModalScopeState__forceRebuildPage_closure, T._ModalScopeState_build_closure0, T._ModalScopeState_build__closure, T._ModalScopeState_build_closure, T.ModalRoute_offstage_closure, T.ModalRoute_changedInternalState_closure, F.ScrollController_animateTo_closure, B.ScrollView_build_closure, B.ScrollView_build_closure0, F.ScrollableState_setCanDrag_closure, F.ScrollableState_setCanDrag_closure0, F.ScrollableState_setCanDrag_closure1, F.ScrollableState_setCanDrag_closure2, E.SingleChildScrollView_build_closure, E._RenderSingleChildViewport_paint_paintContents, E._RenderSingleChildViewport_hitTestChildren_closure, G.SliverMultiBoxAdaptorElement_performRebuild_processElement, G.SliverMultiBoxAdaptorElement_performRebuild_closure, G.SliverMultiBoxAdaptorElement_performRebuild_closure0, G.SliverMultiBoxAdaptorElement__build_closure, G.SliverMultiBoxAdaptorElement_createChild_closure, G.SliverMultiBoxAdaptorElement_removeChild_closure, K._AnimatedState__handleChange_closure, N._describeRelevantUserCode_processElement, K.BenchBuildMaterialCheckbox_createWidget_closure, K.BenchBuildMaterialCheckbox__buildRow_closure, K.BenchBuildMaterialCheckbox__buildRow__closure, T._InfiniteScrollCardsState_initState_closure, T._InfiniteScrollCardsState_build_closure, A.BenchPictureRecording_body_closure, A.BenchPictureRecording_body_closure0, Q._TestScrollingWidgetState_initState_closure, Q._TestScrollingWidgetState_build_closure, Q._randomize_closure, Q.BenchTextLayout_recordParagraphOperations_closure, Q.BenchTextLayout_recordParagraphOperations_closure0, Q.BenchTextLayout_recordParagraphOperations_closure1, Q.BenchTextCachedLayout_body_closure, Q.BenchBuildColorsGrid_setUpAll_closure, Q.PaletteTabView_build_closure, Q.PaletteTabView_build_closure0, Q.ColorsDemo_build_closure, Q.ColorsDemo_build_closure0, A.BenchTextOutOfPictureBounds_onDrawFrame_fillCellWithText, V.SceneBuilderRecorder_run_closure, V.SceneBuilderRecorder_run_closure0, V.SceneBuilderRecorder_run__closure, V.SceneBuilderRecorder_run___closure, V.SceneBuilderRecorder_run____closure, V.WidgetRecorder_run_closure, V.WidgetRecorder_run_closure0, V._WidgetBuildRecorderHostState__setStateTrampoline_closure, V.Timeseries_computeStats_closure, V.Timeseries_computeStats_closure0, V.Profile_addDataPoint_closure, V.Profile_shouldContinue_closure, V._computeAverage_closure, V._computeStandardDeviationForPopulation_closure, V._RecordingWidgetsBinding__beginRecording_closure, V._RecordingWidgetsBinding__beginRecording_closure0, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure, Z.closure, Z.closure0, Z.closure1, Z.closure2, Z.closure3, Z.closure4, Z.closure5, Z.closure6, Z.closure7, Z.closure8, Z.closure9, Z.closure10, Z.closure11, Z._runBenchmark_closure, Z._fallbackToManual_closure, Z._fallbackToManual_closure0, Z._printResultsToScreen_closure, Z.TimeseriesVisualization_closure, Z.TimeseriesVisualization_closure0, Z.LocalBenchmarkServerClient__requestXhr_closure, A.hashObjects_closure]);
    _inheritMany(H.EngineCanvas, [H.BitmapCanvas, H._DomCanvas_EngineCanvas_SaveElementStackTracking]);
    _inherit(H.HashLocationStrategy, H.LocationStrategy);
    _inherit(H.BrowserPlatformLocation, H.PlatformLocation);
    _inherit(H._CanvasPool, H._SaveStackTracking);
    _inherit(H.SkPaint, H.SkiaObject);
    _inherit(H.DomCanvas, H._DomCanvas_EngineCanvas_SaveElementStackTracking);
    _inheritMany(H._BaseAdapter, [H.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, H._TouchAdapter, H.__MouseAdapter__BaseAdapter__WheelEventListenerMixin]);
    _inherit(H._PointerAdapter, H.__PointerAdapter__BaseAdapter__WheelEventListenerMixin);
    _inherit(H._MouseAdapter, H.__MouseAdapter__BaseAdapter__WheelEventListenerMixin);
    _inherit(H._RRectToCanvasRenderer, H._RRectRenderer);
    _inheritMany(H.RoleManager, [H.Checkable, H.ImageRoleManager, H.Incrementable, H.LabelAndValue, H.LiveRegion, H.Scrollable0, H.Tappable, H.TextField]);
    _inheritMany(H.SemanticsEnabler, [H.DesktopSemanticsEnabler, H.MobileSemanticsEnabler]);
    _inheritMany(H.DefaultTextEditingStrategy, [H.SemanticsTextEditingStrategy, H.GloballyPositionedTextEditingStrategy]);
    _inherit(P.ListBase, P._ListBase_Object_ListMixin);
    _inheritMany(P.ListBase, [H._TypedDataBuffer, H.UnmodifiableListBase, W._FrozenElementList, W._ChildNodeListLazy, N._TypedDataBuffer0]);
    _inherit(H._IntBuffer, H._TypedDataBuffer);
    _inherit(H.Uint8Buffer, H._IntBuffer);
    _inherit(H.GradientLinear, H.EngineGradient);
    _inheritMany(H.PersistedSurface, [H.PersistedContainerSurface, H.PersistedLeafSurface]);
    _inheritMany(H.PersistedContainerSurface, [H._PersistedClipRect_PersistedContainerSurface__DomClip, H._PersistedPhysicalShape_PersistedContainerSurface__DomClip, H.PersistedClipPath, H.PersistedOffset, H.PersistedOpacity, H.PersistedScene, H.PersistedTransform]);
    _inherit(H.PersistedClipRect, H._PersistedClipRect_PersistedContainerSurface__DomClip);
    _inherit(H.PersistedPhysicalShape, H._PersistedPhysicalShape_PersistedContainerSurface__DomClip);
    _inherit(H.PersistedPicture, H.PersistedLeafSurface);
    _inherit(H.PersistedStandardPicture, H.PersistedPicture);
    _inheritMany(H.PaintCommand, [H.DrawCommand, H.PaintSave, H.PaintRestore, H.PaintTranslate, H.PaintScale, H.PaintRotate, H.PaintTransform]);
    _inheritMany(H.DrawCommand, [H.PaintClipRect, H.PaintClipRRect, H.PaintClipPath, H.PaintDrawLine, H.PaintDrawRect, H.PaintDrawRRect, H.PaintDrawDRRect, H.PaintDrawCircle, H.PaintDrawPath, H.PaintDrawShadow, H.PaintDrawParagraph]);
    _inheritMany(H.PathCommand, [H.MoveTo, H.LineTo, H.Ellipse, H.QuadraticCurveTo, H.RectCommand, H.RRectCommand, H.CloseCommand]);
    _inherit(H._PolyfillFontManager, H.FontManager);
    _inheritMany(H.TextMeasurementService, [H.DomTextMeasurementService, H.CanvasTextMeasurementService]);
    _inheritMany(H.EngineInputType, [H.TextInputType, H.NumberInputType, H.PhoneInputType, H.EmailInputType, H.UrlInputType, H.MultilineInputType]);
    _inheritMany(H.GloballyPositionedTextEditingStrategy, [H.IOSTextEditingStrategy, H.AndroidTextEditingStrategy, H.FirefoxTextEditingStrategy]);
    _inherit(H.EngineWindow, P.Window0);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, H.NativeByteBuffer, H.NativeTypedData, W.EventTarget, W.AccessibleNodeList, W.Event, W.Blob, W.CanvasRenderingContext2D, W.Credential, W.CredentialUserData, W.CssRule, W.CssTransformComponent, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.CssStyleValue, W.DataTransferItemList, W.ReportBody, W.DomError, W.DomException, W._DomRectList_Interceptor_ListMixin, W.DomRectReadOnly, W._DomStringList_Interceptor_ListMixin, W.DomTokenList, W.Entry, W._FileList_Interceptor_ListMixin, W.FileSystem, W.FontFace, W.Gamepad, W.History, W._HtmlCollection_Interceptor_ListMixin, W.ImageData, W.Location, W.MediaError, W.MediaList, W._MidiInputMap_Interceptor_MapMixin, W._MidiOutputMap_Interceptor_MapMixin, W.MimeType, W._MimeTypeArray_Interceptor_ListMixin, W.NavigatorUserMediaError, W._NodeList_Interceptor_ListMixin, W.OverconstrainedError, W.PerformanceEntry, W.PerformanceServerTiming, W.Plugin, W._PluginArray_Interceptor_ListMixin, W.PositionError, W._RtcStatsReport_Interceptor_MapMixin, W.SpeechGrammar, W._SpeechGrammarList_Interceptor_ListMixin, W.SpeechRecognitionResult, W.SpeechSynthesisVoice, W._Storage_Interceptor_MapMixin, W.StyleSheet, W._TextTrackCueList_Interceptor_ListMixin, W.TimeRanges, W.Touch, W._TouchList_Interceptor_ListMixin, W.TrackDefaultList, W.Url, W.__CssRuleList_Interceptor_ListMixin, W.__GamepadList_Interceptor_ListMixin, W.__NamedNodeMap_Interceptor_ListMixin, W.__SpeechRecognitionResultList_Interceptor_ListMixin, W.__StyleSheetList_Interceptor_ListMixin, P.Index, P.KeyRange, P.ObjectStore, P.Length, P._LengthList_Interceptor_ListMixin, P.Number, P._NumberList_Interceptor_ListMixin, P.PointList, P._StringList_Interceptor_ListMixin, P.Transform0, P._TransformList_Interceptor_ListMixin, P.AudioBuffer, P._AudioParamMap_Interceptor_MapMixin, P.ActiveInfo, P.SqlError, P._SqlResultSetRowList_Interceptor_ListMixin]);
    _inheritMany(J.JavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSDouble]);
    _inheritMany(P.Iterable, [H._CastIterableBase, H.EfficientLengthIterable, H.MappedIterable, H.WhereIterable, H.ExpandIterable, H.TakeIterable, H.SkipIterable, H.SkipWhileIterable, H.WhereTypeIterable, H._ConstantMapKeyIterable, H._StringAllMatchesIterable, P.IterableBase, R.ObserverList, R.HashedObserverList]);
    _inheritMany(H._CastIterableBase, [H.CastIterable, H.__CastListBase__CastIterableBase_ListMixin]);
    _inherit(H._EfficientLengthCastIterable, H.CastIterable);
    _inherit(H._CastListBase, H.__CastListBase__CastIterableBase_ListMixin);
    _inherit(H.CastList, H._CastListBase);
    _inherit(P.MapBase, P.MapMixin);
    _inheritMany(P.MapBase, [H.CastMap, H.JsLinkedHashMap, P._HashMap, P._JsonMap, W._AttributeMap]);
    _inherit(H.CodeUnits, H.UnmodifiableListBase);
    _inheritMany(H.EfficientLengthIterable, [H.ListIterable, H.EmptyIterable, H.LinkedHashMapKeyIterable, P._HashMapKeyIterable, P._MapBaseValueIterable, P._SplayTreeKeyIterable, P._SplayTreeValueIterable, P.Set]);
    _inheritMany(H.ListIterable, [H.SubListIterable, H.MappedListIterable, H.ReversedListIterable, P.ListQueue, P._JsonMapKeyIterable]);
    _inherit(H.EfficientLengthMappedIterable, H.MappedIterable);
    _inheritMany(P.Iterator, [H.MappedIterator, H.WhereIterator, H.TakeIterator, H.SkipIterator, H.SkipWhileIterator]);
    _inherit(H.EfficientLengthTakeIterable, H.TakeIterable);
    _inherit(H.EfficientLengthSkipIterable, H.SkipIterable);
    _inherit(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P.MapView);
    _inherit(P.UnmodifiableMapView, P._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(H.ConstantMapView, P.UnmodifiableMapView);
    _inheritMany(H.ConstantMap, [H.ConstantStringMap, H.GeneralConstantMap]);
    _inherit(H.Instantiation1, H.Instantiation);
    _inheritMany(P.Error, [H.NullError, H.JsNoSuchMethodError, H.UnknownJsTypeError, H.RuntimeError, H._Error, P.JsonUnsupportedObjectError, P.AssertionError, P.NullThrownError, P.ArgumentError, P.NoSuchMethodError, P.UnsupportedError, P.UnimplementedError, P.StateError, P.ConcurrentModificationError, P.CyclicInitializationError, U._FlutterError_Error_DiagnosticableTreeMixin]);
    _inheritMany(H.TearOffClosure, [H.StaticClosure, H.BoundClosure]);
    _inheritMany(H.NativeTypedData, [H.NativeByteData, H.NativeTypedArray]);
    _inheritMany(H.NativeTypedArray, [H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfDouble, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfInt, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(H.NativeTypedArrayOfDouble, [H.NativeFloat32List, H.NativeFloat64List]);
    _inheritMany(H.NativeTypedArrayOfInt, [H.NativeInt16List, H.NativeInt32List, H.NativeInt8List, H.NativeUint16List, H.NativeUint32List, H.NativeUint8ClampedList, H.NativeUint8List]);
    _inherit(H._TypeError, H._Error);
    _inherit(P._SyncStarIterable, P.IterableBase);
    _inherit(P._AsyncCompleter, P._Completer);
    _inherit(P._AsyncStreamController, P._StreamController);
    _inheritMany(P.Stream, [P._StreamImpl, W._EventStream]);
    _inheritMany(P._StreamImpl, [P._ControllerStream, P._GeneratedStreamImpl]);
    _inherit(P._ControllerSubscription, P._BufferingStreamSubscription);
    _inherit(P._StreamControllerAddStreamState, P._AddStreamState);
    _inheritMany(P._PendingEvents, [P._IterablePendingEvents, P._StreamImplEvents]);
    _inheritMany(P._DelayedEvent, [P._DelayedData, P._DelayedError]);
    _inherit(P._RootZone, P._Zone);
    _inherit(P._IdentityHashMap, P._HashMap);
    _inherit(P._LinkedIdentityHashMap, H.JsLinkedHashMap);
    _inheritMany(P._SetBase, [P._HashSet, P._LinkedHashSet, P._UnmodifiableSet]);
    _inherit(P._SplayTreeMapNode, P._SplayTreeNode);
    _inheritMany(P._SplayTree, [P._SplayTreeMap__SplayTree_MapMixin, P._SplayTreeSet__SplayTree_IterableMixin]);
    _inherit(P.SplayTreeMap, P._SplayTreeMap__SplayTree_MapMixin);
    _inheritMany(P._SplayTreeIterator, [P._SplayTreeKeyIterator, P._SplayTreeValueIterator, P._SplayTreeNodeIterator]);
    _inherit(P._SplayTreeSet__SplayTree_IterableMixin_SetMixin, P._SplayTreeSet__SplayTree_IterableMixin);
    _inherit(P.SplayTreeSet, P._SplayTreeSet__SplayTree_IterableMixin_SetMixin);
    _inheritMany(P.Codec, [P.Base64Codec, P.Encoding, P.JsonCodec]);
    _inherit(P.Converter, P.StreamTransformerBase);
    _inheritMany(P.Converter, [P.Base64Encoder, P.JsonEncoder, P.JsonDecoder, P.Utf8Encoder, P.Utf8Decoder]);
    _inherit(P.JsonCyclicError, P.JsonUnsupportedObjectError);
    _inherit(P._JsonStringStringifier, P._JsonStringifier);
    _inherit(P.Utf8Codec, P.Encoding);
    _inheritMany(P.num, [P.double, P.int]);
    _inheritMany(P.ArgumentError, [P.RangeError, P.IndexError]);
    _inherit(P._DataUri, P._Uri);
    _inheritMany(W.EventTarget, [W.Node, W.BroadcastChannel, W.FileWriter, W.HttpRequestEventTarget, W.MediaQueryList, W.MessagePort, W.MidiPort, W.WorkerGlobalScope, W.SourceBuffer, W._SourceBufferList_EventTarget_ListMixin, W.TextTrack, W.TextTrackCue, W._TextTrackList_EventTarget_ListMixin, W.VideoTrackList, W.Window, W._Clipboard, P.Database, P.AudioTrackList, P.BaseAudioContext]);
    _inheritMany(W.Node, [W.Element0, W.CharacterData, W.Document, W._Attr]);
    _inheritMany(W.Element0, [W.HtmlElement, P.SvgElement]);
    _inheritMany(W.HtmlElement, [W.AnchorElement, W.AreaElement, W.BodyElement, W.ButtonElement, W.CanvasElement, W.DivElement, W.EmbedElement, W.FieldSetElement, W.FormElement, W.IFrameElement, W.InputElement, W.LabelElement, W.MapElement, W.MetaElement, W.ObjectElement, W.OutputElement, W.ParagraphElement, W.ParamElement, W.SelectElement, W.SlotElement, W.StyleElement, W.TableElement, W.TableRowElement, W.TableSectionElement, W.TemplateElement, W.TextAreaElement]);
    _inheritMany(W.Event, [W.ApplicationCacheErrorEvent, W.ErrorEvent, W.UIEvent, W.MediaKeyMessageEvent, W.PresentationConnectionCloseEvent, W.ProgressEvent, W.SpeechRecognitionError, W.SpeechSynthesisEvent, P.VersionChangeEvent]);
    _inherit(W.CssKeyframesRule, W.CssRule);
    _inherit(W.CssPerspective, W.CssTransformComponent);
    _inherit(W.CssStyleDeclaration, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase);
    _inheritMany(W.CssStyleValue, [W.CssTransformValue, W.CssUnparsedValue]);
    _inheritMany(W.ReportBody, [W.DeprecationReport, W.InterventionReport]);
    _inherit(W._DomRectList_Interceptor_ListMixin_ImmutableListMixin, W._DomRectList_Interceptor_ListMixin);
    _inherit(W.DomRectList, W._DomRectList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._DomStringList_Interceptor_ListMixin_ImmutableListMixin, W._DomStringList_Interceptor_ListMixin);
    _inherit(W.DomStringList, W._DomStringList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W.Credential, [W.FederatedCredential, W.PasswordCredential]);
    _inherit(W.File, W.Blob);
    _inherit(W._FileList_Interceptor_ListMixin_ImmutableListMixin, W._FileList_Interceptor_ListMixin);
    _inherit(W.FileList, W._FileList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W._HtmlCollection_Interceptor_ListMixin);
    _inherit(W.HtmlCollection, W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.HttpRequest, W.HttpRequestEventTarget);
    _inheritMany(W.UIEvent, [W.KeyboardEvent, W.MouseEvent, W.TouchEvent]);
    _inherit(W.MidiInputMap, W._MidiInputMap_Interceptor_MapMixin);
    _inherit(W.MidiOutputMap, W._MidiOutputMap_Interceptor_MapMixin);
    _inherit(W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin, W._MimeTypeArray_Interceptor_ListMixin);
    _inherit(W.MimeTypeArray, W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W._NodeList_Interceptor_ListMixin);
    _inherit(W.NodeList, W._NodeList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._PluginArray_Interceptor_ListMixin_ImmutableListMixin, W._PluginArray_Interceptor_ListMixin);
    _inherit(W.PluginArray, W._PluginArray_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W.MouseEvent, [W.PointerEvent, W.WheelEvent]);
    _inherit(W.RtcStatsReport, W._RtcStatsReport_Interceptor_MapMixin);
    _inherit(W.SharedWorkerGlobalScope, W.WorkerGlobalScope);
    _inherit(W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, W._SourceBufferList_EventTarget_ListMixin);
    _inherit(W.SourceBufferList, W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin, W._SpeechGrammarList_Interceptor_ListMixin);
    _inherit(W.SpeechGrammarList, W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.Storage, W._Storage_Interceptor_MapMixin);
    _inherit(W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin, W._TextTrackCueList_Interceptor_ListMixin);
    _inherit(W.TextTrackCueList, W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, W._TextTrackList_EventTarget_ListMixin);
    _inherit(W.TextTrackList, W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W._TouchList_Interceptor_ListMixin);
    _inherit(W.TouchList, W._TouchList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin, W.__CssRuleList_Interceptor_ListMixin);
    _inherit(W._CssRuleList, W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._DomRect, W.DomRectReadOnly);
    _inherit(W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin, W.__GamepadList_Interceptor_ListMixin);
    _inherit(W._GamepadList, W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.__NamedNodeMap_Interceptor_ListMixin);
    _inherit(W._NamedNodeMap, W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin, W.__SpeechRecognitionResultList_Interceptor_ListMixin);
    _inherit(W._SpeechRecognitionResultList, W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin, W.__StyleSheetList_Interceptor_ListMixin);
    _inherit(W._StyleSheetList, W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._ElementAttributeMap, W._AttributeMap);
    _inherit(W._ElementEventStreamImpl, W._EventStream);
    _inherit(W._EventStreamSubscription, P.StreamSubscription);
    _inherit(W._TemplatingNodeValidator, W._SimpleNodeValidator);
    _inherit(P._StructuredCloneDart2Js, P._StructuredClone);
    _inherit(P._AcceptStructuredCloneDart2Js, P._AcceptStructuredClone);
    _inheritMany(P.JsObject, [P.JsFunction, P._JsArray_JsObject_ListMixin]);
    _inherit(P.JsArray, P._JsArray_JsObject_ListMixin);
    _inherit(P.Rectangle, P._RectangleBase);
    _inherit(P._LengthList_Interceptor_ListMixin_ImmutableListMixin, P._LengthList_Interceptor_ListMixin);
    _inherit(P.LengthList, P._LengthList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P._NumberList_Interceptor_ListMixin_ImmutableListMixin, P._NumberList_Interceptor_ListMixin);
    _inherit(P.NumberList, P._NumberList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P.ScriptElement0, P.SvgElement);
    _inherit(P._StringList_Interceptor_ListMixin_ImmutableListMixin, P._StringList_Interceptor_ListMixin);
    _inherit(P.StringList, P._StringList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P._TransformList_Interceptor_ListMixin_ImmutableListMixin, P._TransformList_Interceptor_ListMixin);
    _inherit(P.TransformList, P._TransformList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P.RawRecordingCanvas, H.BitmapCanvas);
    _inheritMany(P.OffsetBase, [P.Offset, P.Size]);
    _inherit(P.AudioParamMap, P._AudioParamMap_Interceptor_MapMixin);
    _inherit(P.OfflineAudioContext, P.BaseAudioContext);
    _inherit(P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin, P._SqlResultSetRowList_Interceptor_ListMixin);
    _inherit(P.SqlResultSetRowList, P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(B.Listenable, [X.Animation0, B._MergingListenable, V.CustomPainter, N._SystemFontsNotifier]);
    _inheritMany(X.Animation0, [G._AnimationController_Animation_AnimationEagerListenerMixin, S._AlwaysCompleteAnimation, S._AlwaysDismissedAnimation, S._ProxyAnimation_Animation_AnimationLazyListenerMixin, S._ReverseAnimation_Animation_AnimationLazyListenerMixin, S._CurvedAnimation_Animation_AnimationWithParentMixin, S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin, S._CompoundAnimation_Animation_AnimationLazyListenerMixin, R.__AnimatedEvaluation_Animation_AnimationWithParentMixin, E.__ChangeAnimation_Animation_AnimationWithParentMixin, E.__DragAnimation_Animation_AnimationWithParentMixin]);
    _inherit(G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, G._AnimationController_Animation_AnimationEagerListenerMixin);
    _inherit(G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin);
    _inherit(G.AnimationController, G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inheritMany(T.Simulation, [G._InterpolationSimulation, D.FrictionSimulation, M.SpringSimulation, Y.BouncingScrollSimulation, Y.ClampingScrollSimulation]);
    _inherit(S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, S._ProxyAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin);
    _inherit(S.ProxyAnimation, S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inherit(S._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin, S._ReverseAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(S.ReverseAnimation, S._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin);
    _inherit(S.CurvedAnimation, S._CurvedAnimation_Animation_AnimationWithParentMixin);
    _inherit(S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin);
    _inherit(S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin);
    _inherit(S.TrainHoppingAnimation, S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inherit(S._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, S._CompoundAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(S._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin);
    _inherit(S.CompoundAnimation, S._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inheritMany(S.CompoundAnimation, [S.AnimationMin, A._AnimationSwap]);
    _inherit(Z.Curve, Z.ParametricCurve);
    _inheritMany(Z.Curve, [Z._Linear, Z.Interval, Z.Threshold, Z.Cubic, Z.FlippedCurve, Z._DecelerateCurve]);
    _inherit(R._AnimatedEvaluation, R.__AnimatedEvaluation_Animation_AnimationWithParentMixin);
    _inheritMany(R.Animatable, [R._ChainedEvaluation, R.Tween, R.CurveTween]);
    _inheritMany(R.Tween, [R.ReverseTween, R.ColorTween, R.RectTween, R.IntTween, D.MaterialPointArcTween, M.ShapeBorderTween, K.ThemeDataTween, G.DecorationTween, G.BorderRadiusTween, G.TextStyleTween]);
    _inheritMany(P.Color, [E._CupertinoDynamicColor_Color_Diagnosticable, E.ColorSwatch]);
    _inherit(E.CupertinoDynamicColor, E._CupertinoDynamicColor_Color_Diagnosticable);
    _inherit(T.IconThemeData, T._IconThemeData_Object_Diagnosticable);
    _inherit(T._CupertinoIconThemeData_IconThemeData_Diagnosticable, T.IconThemeData);
    _inherit(T.CupertinoIconThemeData, T._CupertinoIconThemeData_IconThemeData_Diagnosticable);
    _inherit(Y.DiagnosticableTree, Y._DiagnosticableTree_Object_Diagnosticable);
    _inheritMany(Y.DiagnosticableTree, [N.Widget, G.InlineSpan, A.SemanticsProperties, N.Element]);
    _inheritMany(N.Widget, [N.ProxyWidget, N.StatelessWidget, N.StatefulWidget, N.RenderObjectWidget]);
    _inheritMany(N.ProxyWidget, [N.InheritedWidget, N.ParentDataWidget]);
    _inheritMany(N.InheritedWidget, [K.CupertinoUserInterfaceLevel, K._InheritedCupertinoTheme, Z.FlexibleSpaceBarSettings, M._ScaffoldScope, U._TabControllerScope, M.InheritedTheme, U._ActionsMarker, T.Directionality, T.DefaultAssetBundle, S.InheritedNotifier, U._FocusTraversalGroupMarker, L._LocalizationsScope, F.MediaQuery, E.PrimaryScrollController, T._ModalScopeStatus, K.ScrollConfiguration, F._ScrollableScope, U._EffectiveTickerMode]);
    _inheritMany(L.LocalizationsDelegate, [L._CupertinoLocalizationsDelegate, U._MaterialLocalizationsDelegate, L._WidgetsLocalizationsDelegate]);
    _inheritMany(N.StatelessWidget, [D.CupertinoPageTransition, K.CupertinoTheme, R.BackButtonIcon, R.BackButton, V.Card, E.FloatingActionButton, B.IconButton, M._ShapeBorderPaint, K._FadeUpwardsPageTransition, M._BodyBuilder, E.Tab, K.Theme, S._TooltipOverlay, T.PositionedDirectional, T.Listener, T.KeyedSubtree, T.Builder, M.Container, D.GestureDetector, L.Icon, X.ModalBarrier, X._ModalBarrierGestureDetector, E.NavigationToolbar, U.NotificationListener, S.PageStorage, Q.SafeArea, B.ScrollView, E.SingleChildScrollView, A.SliverFillViewport, L.Text, U.TickerMode, U.Title, Q.ColorItem, Q.PaletteTabView, Q.ColorsDemo]);
    _inheritMany(N.StatefulWidget, [D._CupertinoBackGestureDetector, E.CupertinoScrollbar, S.MaterialApp, E.AppBar, Z.RawMaterialButton, K.Checkbox, Z.DrawerController, R.InkResponse, M.Material, G.ImplicitlyAnimatedWidget, M._FloatingActionButtonTransition, M.Scaffold, M._StandardBottomSheet, E.Scrollbar, N.SnackBar, U.DefaultTabController, K.AnimatedWidget, E.TabBar, E.TabBarView, S.Tooltip, U.Actions, U.FocusableActionDetector, S.WidgetsApp, S._MediaQueryFromWindow, L.AutomaticKeepAlive, T.MouseRegion, L.Focus, U.FocusTraversalGroup, D.RawGestureDetector, T.Hero, L.Localizations, K.Navigator, X._OverlayEntryWidget, X.Overlay, L.GlowingOverscrollIndicator, D.PageView, T._ModalScope, F.Scrollable, X.Shortcuts, T._InfiniteScrollCards, Q._TestScrollingWidget, V._WidgetBuildRecorderHost]);
    _inherit(N.State, N._State_Object_Diagnosticable);
    _inheritMany(N.State, [D._CupertinoBackGestureDetectorState, E.__CupertinoScrollbarState_State_TickerProviderStateMixin, S._MaterialAppState, E._AppBarState, Z._RawMaterialButtonState, K.__CheckboxState_State_TickerProviderStateMixin, Z._DrawerControllerState_State_SingleTickerProviderStateMixin, R.__InkResponseState_State_AutomaticKeepAliveClientMixin, M.__MaterialState_State_TickerProviderStateMixin, G._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin, M.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin, M._ScaffoldState_State_TickerProviderStateMixin, E.__ScrollbarState_State_TickerProviderStateMixin, U.__DefaultTabControllerState_State_SingleTickerProviderStateMixin, E._TabBarState, E._TabBarViewState, S.__TooltipState_State_SingleTickerProviderStateMixin, U._ActionsState, U._FocusableActionDetectorState, S.__WidgetsAppState_State_WidgetsBindingObserver, S.__MediaQueryFromWindowsState_State_WidgetsBindingObserver, L._AutomaticKeepAliveState, T._MouseRegionState, L._FocusState, U._FocusTraversalGroupState, D.RawGestureDetectorState, T._HeroState, L._LocalizationsState, K._NavigatorState_State_TickerProviderStateMixin, X._OverlayEntryWidgetState, X._OverlayState_State_TickerProviderStateMixin, L.__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin, D._PageViewState, T._ModalScopeState, F._ScrollableState_State_TickerProviderStateMixin, X._ShortcutsState, K._AnimatedState, T._InfiniteScrollCardsState, Q._TestScrollingWidgetState, V._WidgetBuildRecorderHostState]);
    _inherit(Z.Decoration, Z._Decoration_Object_Diagnosticable);
    _inheritMany(Z.Decoration, [D._CupertinoEdgeShadowDecoration, T.UnderlineTabIndicator, S.BoxDecoration]);
    _inheritMany(Z.BoxPainter, [D._CupertinoEdgeShadowPainter, T._UnderlinePainter, S._BoxDecorationPainter]);
    _inherit(E._CupertinoScrollbarState, E.__CupertinoScrollbarState_State_TickerProviderStateMixin);
    _inherit(S._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin, D.GestureArenaMember);
    _inherit(S.GestureRecognizer, S._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin);
    _inheritMany(S.GestureRecognizer, [S.OneSequenceGestureRecognizer, F.DoubleTapGestureRecognizer]);
    _inheritMany(S.OneSequenceGestureRecognizer, [S.PrimaryPointerGestureRecognizer, O.DragGestureRecognizer]);
    _inheritMany(S.PrimaryPointerGestureRecognizer, [T.LongPressGestureRecognizer, N.BaseTapGestureRecognizer]);
    _inherit(E._ThumbPressGestureRecognizer, T.LongPressGestureRecognizer);
    _inherit(K.CupertinoThemeData, K._CupertinoThemeData_Object_Diagnosticable);
    _inheritMany(K.CupertinoThemeData, [K._NoDefaultCupertinoThemeData, X.MaterialBasedCupertinoThemeData]);
    _inheritMany(Y.DiagnosticsNode, [Y.DiagnosticsProperty, Y.DiagnosticsBlock, Y.DiagnosticableNode]);
    _inheritMany(Y.DiagnosticsProperty, [U._ErrorDiagnostic, U.ErrorSpacer, K.DiagnosticsDebugCreator]);
    _inheritMany(U._ErrorDiagnostic, [U.ErrorDescription, U.ErrorSummary, U.ErrorHint]);
    _inherit(U.FlutterErrorDetails, U._FlutterErrorDetails_Object_Diagnosticable);
    _inherit(U.FlutterError, U._FlutterError_Error_DiagnosticableTreeMixin);
    _inherit(U.DiagnosticsStackTrace, Y.DiagnosticsBlock);
    _inheritMany(Y.DiagnosticableNode, [U._FlutterErrorDetailsNode, Y.DiagnosticableTreeNode, A._SemanticsDiagnosticableNode]);
    _inheritMany(B.ChangeNotifier, [B.ValueNotifier, M._ScaffoldGeometryNotifier, U.TabController, N.ViewportOffset, F.ScrollController, Y.MouseTracker, A.SemanticsOwner, L.KeepAliveHandle, L._GlowController, E.ScrollbarPainter, X._ShortcutManager_ChangeNotifier_Diagnosticable]);
    _inheritMany(D.Key, [D.LocalKey, N.GlobalKey]);
    _inheritMany(D.LocalKey, [D.ValueKey, N.UniqueKey]);
    _inherit(F.LicenseEntryWithLineBreaks, F.LicenseEntry);
    _inheritMany(U.FlutterErrorDetails, [N.FlutterErrorDetailsForPointerEventDispatcher, O.FlutterErrorDetailsForPointerRouter, K.FlutterErrorDetailsForRendering]);
    _inherit(F.PointerEvent0, F._PointerEvent_Object_Diagnosticable);
    _inheritMany(F.PointerEvent0, [F.PointerAddedEvent, F.PointerRemovedEvent, F.PointerHoverEvent, F.PointerEnterEvent, F.PointerExitEvent, F.PointerDownEvent, F.PointerMoveEvent, F.PointerUpEvent, F.PointerSignalEvent, F.PointerCancelEvent]);
    _inherit(F.PointerScrollEvent, F.PointerSignalEvent);
    _inheritMany(O.DragGestureRecognizer, [O.VerticalDragGestureRecognizer, O.HorizontalDragGestureRecognizer, O.PanGestureRecognizer]);
    _inheritMany(N.BaseTapGestureRecognizer, [N.TapGestureRecognizer, X._AnyTapGestureRecognizer]);
    _inherit(S._MaterialScrollBehavior, K.ScrollBehavior);
    _inheritMany(T.SingleChildLayoutDelegate, [E._ToolbarContainerLayout, S._TooltipPositionDelegate]);
    _inheritMany(N.RenderObjectWidget, [N.SingleChildRenderObjectWidget, N.LeafRenderObjectWidget, N.MultiChildRenderObjectWidget, N.RenderObjectToWidgetAdapter, G.SliverWithKeepAliveWidget]);
    _inheritMany(N.SingleChildRenderObjectWidget, [E._AppBarTitleBox, Z._InputPadding, M._InkFeatures, X.AnnotatedRegion, T.Opacity, T.CustomPaint, T.ClipRect, T.ClipPath, T.PhysicalModel, T.PhysicalShape, T.Transform, T.FractionalTranslation, T.Padding, T.Align, T.CustomSingleChildLayout, T.SizedBox, T.ConstrainedBox, T.LimitedBox, T.Offstage, T.SliverPadding, T._PointerListener, T._RawMouseRegion, T.RepaintBoundary, T.IgnorePointer, T.AbsorbPointer, T.Semantics, T.MergeSemantics, T.BlockSemantics, T.ExcludeSemantics, T.IndexedSemantics, T.ColoredBox, M.DecoratedBox, D._GestureSemantics, F._ScrollSemantics, E._SingleChildViewport, A._SliverFractionalPadding, K.FadeTransition]);
    _inheritMany(B.AbstractNode, [K._RenderObject_AbstractNode_DiagnosticableTreeMixin, T._Layer_AbstractNode_DiagnosticableTreeMixin, A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin]);
    _inherit(K.RenderObject, K._RenderObject_AbstractNode_DiagnosticableTreeMixin);
    _inheritMany(K.RenderObject, [S.RenderBox, G.RenderSliver, A._RenderView_RenderObject_RenderObjectWithChildMixin]);
    _inheritMany(S.RenderBox, [T._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin, E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin, F._RenderFlex_RenderBox_ContainerRenderObjectMixin, B._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin, V.RenderErrorBox, Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin, L.RenderPerformanceOverlay, K._RenderStack_RenderBox_ContainerRenderObjectMixin, Q._RenderViewportBase_RenderBox_ContainerRenderObjectMixin, X.__RenderTheatre_RenderBox_ContainerRenderObjectMixin, E.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin]);
    _inherit(T.RenderShiftedBox, T._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin);
    _inheritMany(T.RenderShiftedBox, [T.RenderAligningShiftedBox, Z._RenderInputPadding, T.RenderPadding, T.RenderCustomSingleChildLayoutBox]);
    _inheritMany(T.RenderAligningShiftedBox, [E._RenderAppBarTitleBox, T.RenderPositionedBox]);
    _inherit(V.AppBarTheme, V._AppBarTheme_Object_Diagnosticable);
    _inherit(D.MaterialRectArcTween, R.RectTween);
    _inherit(Q.MaterialBannerThemeData, Q._MaterialBannerThemeData_Object_Diagnosticable);
    _inherit(D.BottomAppBarTheme, D._BottomAppBarTheme_Object_Diagnosticable);
    _inherit(M.BottomNavigationBarThemeData, M._BottomNavigationBarThemeData_Object_Diagnosticable);
    _inherit(X.BottomSheetThemeData, X._BottomSheetThemeData_Object_Diagnosticable);
    _inherit(M.ButtonBarThemeData, M._ButtonBarThemeData_Object_Diagnosticable);
    _inherit(M.ButtonThemeData, M._ButtonThemeData_Object_Diagnosticable);
    _inherit(A.CardTheme, A._CardTheme_Object_Diagnosticable);
    _inherit(K._CheckboxState, K.__CheckboxState_State_TickerProviderStateMixin);
    _inheritMany(N.LeafRenderObjectWidget, [K._CheckboxRenderObjectWidget, N.ErrorWidget, L.PerformanceOverlay]);
    _inherit(E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin, E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin);
    _inherit(E.RenderProxyBox, E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin);
    _inheritMany(E.RenderProxyBox, [E.RenderConstrainedBox, M._RenderInkFeatures, V.RenderCustomPaint, E.RenderProxyBoxWithHitTestBehavior, E.RenderLimitedBox, E.RenderOpacity, E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin, E._RenderCustomClip, E.RenderDecoratedBox, E.RenderTransform, E.RenderFractionalTranslation, E.RenderMouseRegion, E.RenderRepaintBoundary, E.RenderIgnorePointer, E.RenderOffstage, E.RenderAbsorbPointer, E.RenderSemanticsGestureHandler, E.RenderSemanticsAnnotations, E.RenderBlockSemantics, E.RenderMergeSemantics, E.RenderExcludeSemantics, E.RenderIndexedSemantics, E.RenderAnnotatedRegion, F._RenderScrollSemantics]);
    _inherit(F.RenderToggleable, E.RenderConstrainedBox);
    _inherit(K._RenderCheckbox, F.RenderToggleable);
    _inherit(K.ChipThemeData, K._ChipThemeData_Object_Diagnosticable);
    _inherit(A.ColorScheme, A._ColorScheme_Object_Diagnosticable);
    _inheritMany(E.ColorSwatch, [E.MaterialColor, E.MaterialAccentColor]);
    _inherit(Y.DialogTheme, Y._DialogTheme_Object_Diagnosticable);
    _inherit(G.DividerThemeData, G._DividerThemeData_Object_Diagnosticable);
    _inherit(Z.DrawerControllerState, Z._DrawerControllerState_State_SingleTickerProviderStateMixin);
    _inherit(A.StandardFabLocation, A.FloatingActionButtonLocation);
    _inherit(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX, A.StandardFabLocation);
    _inherit(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY, A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX);
    _inherit(A._EndFloatFabLocation, A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY);
    _inherit(A._ScalingFabMotionAnimator, A.FloatingActionButtonAnimator);
    _inherit(S.FloatingActionButtonThemeData, S._FloatingActionButtonThemeData_Object_Diagnosticable);
    _inherit(R.InteractiveInkFeature, M.InkFeature);
    _inheritMany(R.InteractiveInkFeature, [Y.InkHighlight, U.InkSplash]);
    _inherit(U._InkSplashFactory, R.InteractiveInkFeatureFactory);
    _inherit(R._InkResponseState, R.__InkResponseState_State_AutomaticKeepAliveClientMixin);
    _inherit(R.InkWell, R.InkResponse);
    _inherit(L.InputDecorationTheme, L._InputDecorationTheme_Object_Diagnosticable);
    _inherit(M._MaterialState, M.__MaterialState_State_TickerProviderStateMixin);
    _inheritMany(G.ImplicitlyAnimatedWidget, [M._MaterialInterior, K.AnimatedTheme, G.AnimatedDefaultTextStyle, G.AnimatedPhysicalModel]);
    _inherit(G.ImplicitlyAnimatedWidgetState, G._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin);
    _inherit(G.AnimatedWidgetBaseState, G.ImplicitlyAnimatedWidgetState);
    _inheritMany(G.AnimatedWidgetBaseState, [M._MaterialInteriorState, K._AnimatedThemeState, G._AnimatedDefaultTextStyleState, G._AnimatedPhysicalModelState]);
    _inheritMany(V.CustomPainter, [M._ShapeBorderPainter, E._IndicatorPainter, L._GlowingOverscrollIndicatorPainter]);
    _inherit(E.NavigationRailThemeData, E._NavigationRailThemeData_Object_Diagnosticable);
    _inherit(T.OverlayRoute, K.Route);
    _inherit(T.TransitionRoute, T.OverlayRoute);
    _inherit(T._ModalRoute_TransitionRoute_LocalHistoryRoute, T.TransitionRoute);
    _inherit(T.ModalRoute, T._ModalRoute_TransitionRoute_LocalHistoryRoute);
    _inherit(V.PageRoute, T.ModalRoute);
    _inherit(V.MaterialPageRoute, V.PageRoute);
    _inheritMany(K.PageTransitionsBuilder, [K.FadeUpwardsPageTransitionsBuilder, K.CupertinoPageTransitionsBuilder]);
    _inherit(K.PageTransitionsTheme, K._PageTransitionsTheme_Object_Diagnosticable);
    _inherit(R.PopupMenuThemeData, R._PopupMenuThemeData_Object_Diagnosticable);
    _inheritMany(K.Constraints, [S.BoxConstraints, G.SliverConstraints]);
    _inherit(M._BodyBoxConstraints, S.BoxConstraints);
    _inheritMany(B.MultiChildLayoutDelegate, [M._ScaffoldLayout, E._ToolbarLayout]);
    _inherit(M._FloatingActionButtonTransitionState, M.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin);
    _inherit(M.ScaffoldState, M._ScaffoldState_State_TickerProviderStateMixin);
    _inherit(E._ScrollbarState, E.__ScrollbarState_State_TickerProviderStateMixin);
    _inherit(Q.SliderThemeData, Q._SliderThemeData_Object_Diagnosticable);
    _inherit(K.SnackBarThemeData, K._SnackBarThemeData_Object_Diagnosticable);
    _inherit(U.TabBarTheme, U._TabBarTheme_Object_Diagnosticable);
    _inherit(U._DefaultTabControllerState, U.__DefaultTabControllerState_State_SingleTickerProviderStateMixin);
    _inheritMany(K.AnimatedWidget, [E._TabStyle, K.SlideTransition, K.ScaleTransition, K.RotationTransition, K.DecoratedBoxTransition, K.AnimatedBuilder]);
    _inherit(F._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, F._RenderFlex_RenderBox_ContainerRenderObjectMixin);
    _inherit(F._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, F._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(F.RenderFlex, F._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin);
    _inherit(E._TabLabelBarRenderer, F.RenderFlex);
    _inheritMany(N.MultiChildRenderObjectWidget, [T.Flex, T.CustomMultiChildLayout, T.Stack, T.RichText, X._Theatre, Q.Viewport]);
    _inheritMany(T.Flex, [E._TabLabelBar, T.Row, T.Column]);
    _inherit(E._ChangeAnimation, E.__ChangeAnimation_Animation_AnimationWithParentMixin);
    _inherit(E._DragAnimation, E.__DragAnimation_Animation_AnimationWithParentMixin);
    _inherit(A._ScrollPosition_ViewportOffset_ScrollMetrics, N.ViewportOffset);
    _inherit(A.ScrollPosition, A._ScrollPosition_ViewportOffset_ScrollMetrics);
    _inherit(R.ScrollPositionWithSingleContext, A.ScrollPosition);
    _inheritMany(R.ScrollPositionWithSingleContext, [E._TabBarScrollPosition, D._PagePosition]);
    _inheritMany(F.ScrollController, [E._TabBarScrollController, D.PageController]);
    _inherit(R.TextTheme, R._TextTheme_Object_Diagnosticable);
    _inheritMany(M.InheritedTheme, [K._InheritedTheme, T.TooltipTheme, Y.IconTheme, L.DefaultTextStyle]);
    _inherit(X.ThemeData, X._ThemeData_Object_Diagnosticable);
    _inherit(X.VisualDensity, X._VisualDensity_Object_Diagnosticable);
    _inherit(S.ToggleButtonsThemeData, S._ToggleButtonsThemeData_Object_Diagnosticable);
    _inherit(S._TooltipState, S.__TooltipState_State_SingleTickerProviderStateMixin);
    _inherit(T.TooltipThemeData, T._TooltipThemeData_Object_Diagnosticable);
    _inherit(U.Typography, U._Typography_Object_Diagnosticable);
    _inheritMany(K.AlignmentGeometry, [K.Alignment, K.AlignmentDirectional, K._MixedAlignment]);
    _inheritMany(K.BorderRadiusGeometry, [K.BorderRadius, K._MixedBorderRadius]);
    _inheritMany(Y.ShapeBorder, [Y._CompoundBorder, F.BoxBorder, X.CircleBorder, X.RoundedRectangleBorder, X._RoundedRectangleToCircleBorder, S.StadiumBorder, S._StadiumToCircleBorder, S._StadiumToRoundedRectangleBorder]);
    _inheritMany(F.BoxBorder, [F.Border, F.BorderDirectional]);
    _inherit(O.BoxShadow, P.Shadow);
    _inheritMany(V.EdgeInsetsGeometry, [V.EdgeInsets, V.EdgeInsetsDirectional, V._MixedEdgeInsets]);
    _inherit(T.LinearGradient, T.Gradient);
    _inherit(E._LiveImage, E._CachedImage);
    _inheritMany(G.InlineSpan, [S.PlaceholderSpan, Q.TextSpan]);
    _inherit(D.DefaultShaderWarmUp, D.ShaderWarmUp);
    _inherit(A.TextStyle, A._TextStyle_Object_Diagnosticable);
    _inherit(M.ScrollSpringSimulation, M.SpringSimulation);
    _inheritMany(O.HitTestResult, [S.BoxHitTestResult, G.SliverHitTestResult]);
    _inheritMany(O.HitTestEntry, [S.BoxHitTestEntry, G.SliverHitTestEntry]);
    _inheritMany(K.ParentData, [S.BoxParentData, G.SliverLogicalParentData, G.SliverPhysicalParentData]);
    _inherit(S._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin, S.BoxParentData);
    _inherit(S.ContainerBoxParentData, S._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin);
    _inheritMany(S.ContainerBoxParentData, [B.MultiChildLayoutParentData, F.FlexParentData, Q.TextParentData, K.StackParentData]);
    _inherit(B._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, B._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin);
    _inherit(B.RenderCustomMultiChildLayoutBox, B._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(T.Layer, T._Layer_AbstractNode_DiagnosticableTreeMixin);
    _inheritMany(T.Layer, [T.PictureLayer, T.PerformanceOverlayLayer, T.ContainerLayer]);
    _inheritMany(T.ContainerLayer, [T.OffsetLayer, T.ClipRectLayer, T.ClipPathLayer, T.OpacityLayer, T.PhysicalModelLayer, T.AnnotatedRegionLayer]);
    _inherit(T.TransformLayer, T.OffsetLayer);
    _inherit(Y.MouseTrackerAnnotation, Y._MouseTrackerAnnotation_Object_Diagnosticable);
    _inherit(K.PaintingContext, Z.ClipContext);
    _inheritMany(K._SemanticsFragment, [K._ContainerSemanticsFragment, K._InterestingSemanticsFragment]);
    _inheritMany(K._InterestingSemanticsFragment, [K._RootSemanticsFragment, K._SwitchableSemanticsFragment, K._AbortingSemanticsFragment]);
    _inherit(Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin);
    _inherit(Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin, Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(Q.RenderParagraph, Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin);
    _inherit(E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin, E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin);
    _inherit(E.RenderAnimatedOpacity, E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin);
    _inherit(E.ShapeBorderClipper, E.CustomClipper);
    _inheritMany(E._RenderCustomClip, [E.RenderClipRect, E.RenderClipPath, E._RenderPhysicalModelBase]);
    _inheritMany(E._RenderPhysicalModelBase, [E.RenderPhysicalModel, E.RenderPhysicalShape]);
    _inheritMany(E.RenderProxyBoxWithHitTestBehavior, [E.RenderPointerListener, T._RenderColoredBox]);
    _inherit(G.SliverGeometry, G._SliverGeometry_Object_Diagnosticable);
    _inherit(G._SliverPhysicalContainerParentData_SliverPhysicalParentData_ContainerParentDataMixin, G.SliverPhysicalParentData);
    _inherit(G.SliverPhysicalContainerParentData, G._SliverPhysicalContainerParentData_SliverPhysicalParentData_ContainerParentDataMixin);
    _inheritMany(G.RenderSliver, [F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin, T._RenderSliverEdgeInsetsPadding_RenderSliver_RenderObjectWithChildMixin]);
    _inherit(F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers, F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin);
    _inherit(F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers_RenderSliverWithKeepAliveMixin, F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers);
    _inherit(F.RenderSliverMultiBoxAdaptor, F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers_RenderSliverWithKeepAliveMixin);
    _inheritMany(F.RenderSliverMultiBoxAdaptor, [X.RenderSliverFixedExtentBoxAdaptor, U.RenderSliverList]);
    _inheritMany(X.RenderSliverFixedExtentBoxAdaptor, [A.RenderSliverFillViewport, X.RenderSliverFixedExtentList]);
    _inherit(F._SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin, G.SliverLogicalParentData);
    _inherit(F._SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin_KeepAliveParentDataMixin, F._SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin);
    _inherit(F.SliverMultiBoxAdaptorParentData, F._SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin_KeepAliveParentDataMixin);
    _inherit(T.RenderSliverEdgeInsetsPadding, T._RenderSliverEdgeInsetsPadding_RenderSliver_RenderObjectWithChildMixin);
    _inheritMany(T.RenderSliverEdgeInsetsPadding, [T.RenderSliverPadding, A._RenderSliverFractionalPadding]);
    _inherit(K._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, K._RenderStack_RenderBox_ContainerRenderObjectMixin);
    _inherit(K.RenderStack, K._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.RenderView, A._RenderView_RenderObject_RenderObjectWithChildMixin);
    _inherit(Q.RenderViewportBase, Q._RenderViewportBase_RenderBox_ContainerRenderObjectMixin);
    _inherit(Q.RenderViewport, Q.RenderViewportBase);
    _inherit(A.SemanticsData, A._SemanticsData_Object_Diagnosticable);
    _inherit(A.SemanticsNode, A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin);
    _inherit(A._SemanticsSortGroup, P.Comparable);
    _inherit(A.SemanticsSortKey, A._SemanticsSortKey_Object_Diagnosticable);
    _inherit(A.OrdinalSortKey, A.SemanticsSortKey);
    _inheritMany(E.SemanticsEvent, [E.TooltipSemanticsEvent, E.LongPressSemanticsEvent, E.TapSemanticEvent]);
    _inherit(Q.CachingAssetBundle, Q.AssetBundle);
    _inherit(Q.PlatformAssetBundle, Q.CachingAssetBundle);
    _inherit(N._DefaultBinaryMessenger, Q.BinaryMessenger);
    _inherit(G.KeyboardKey, G._KeyboardKey_Object_Diagnosticable);
    _inheritMany(G.KeyboardKey, [G.LogicalKeyboardKey, G.PhysicalKeyboardKey]);
    _inherit(A.OptionalMethodChannel, A.MethodChannel);
    _inherit(B.RawKeyEvent, B._RawKeyEvent_Object_Diagnosticable);
    _inheritMany(B.RawKeyEvent, [B.RawKeyDownEvent, B.RawKeyUpEvent]);
    _inheritMany(B.RawKeyEventData, [Q.RawKeyEventDataAndroid, Q.RawKeyEventDataFuchsia, O.RawKeyEventDataLinux, B.RawKeyEventDataMacOs, A.RawKeyEventDataWeb, R.RawKeyEventDataWindows]);
    _inherit(O.GLFWKeyHelper, O._GLFWKeyHelper_Object_KeyHelper);
    _inherit(X.TextSelection, P.TextRange);
    _inherit(U.Intent, U._Intent_Object_Diagnosticable);
    _inherit(U.Action, U._Action_Object_Diagnosticable);
    _inheritMany(U.Action, [U.ContextAction, U.CallbackAction, U.DoNothingAction, U.RequestFocusAction, U.NextFocusAction, U.PreviousFocusAction, U.DirectionalFocusAction, F.ScrollAction]);
    _inherit(U.ActionDispatcher, U._ActionDispatcher_Object_Diagnosticable);
    _inheritMany(U.Intent, [U.DoNothingIntent, U.ActivateIntent, U.RequestFocusIntent, U.NextFocusIntent, U.PreviousFocusIntent, U.DirectionalFocusIntent, F.ScrollIntent]);
    _inherit(S._WidgetsAppState, S.__WidgetsAppState_State_WidgetsBindingObserver);
    _inherit(S._MediaQueryFromWindowsState, S.__MediaQueryFromWindowsState_State_WidgetsBindingObserver);
    _inheritMany(U.Notification0, [L.KeepAliveNotification, U.LayoutChangedNotification, L._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin]);
    _inherit(T.Center, T.Align);
    _inheritMany(N.ParentDataWidget, [T.LayoutId, T.Positioned, T.Flexible, G.KeepAlive]);
    _inheritMany(N.Element, [N.RenderObjectElement, N.ComponentElement]);
    _inheritMany(N.RenderObjectElement, [N.SingleChildRenderObjectElement, N.RootRenderObjectElement, N.LeafRenderObjectElement, N.MultiChildRenderObjectElement, G.SliverMultiBoxAdaptorElement]);
    _inherit(T._OffstageElement, N.SingleChildRenderObjectElement);
    _inherit(T.Expanded, T.Flexible);
    _inherit(N.RenderObjectToWidgetElement, N.RootRenderObjectElement);
    _inheritMany(N.BindingBase, [N._WidgetsFlutterBinding_BindingBase_GestureBinding, V.__RecordingWidgetsBinding_BindingBase_GestureBinding]);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding);
    _inherit(N.WidgetsFlutterBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding);
    _inherit(O._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier, O._FocusNode_Object_DiagnosticableTreeMixin);
    _inherit(O.FocusNode, O._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier);
    _inherit(O.FocusScopeNode, O.FocusNode);
    _inherit(O._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier, O._FocusManager_Object_DiagnosticableTreeMixin);
    _inherit(O.FocusManager, O._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier);
    _inherit(L.FocusScope, L.Focus);
    _inherit(L._FocusScopeState, L._FocusState);
    _inheritMany(S.InheritedNotifier, [L._FocusMarker, X._ShortcutsMarker]);
    _inherit(U.FocusTraversalPolicy, U._FocusTraversalPolicy_Object_Diagnosticable);
    _inherit(U._ReadingOrderSortData, U.__ReadingOrderSortData_Object_Diagnosticable);
    _inherit(U._ReadingOrderDirectionalGroupData, U.__ReadingOrderDirectionalGroupData_Object_Diagnosticable);
    _inherit(U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, U.FocusTraversalPolicy);
    _inherit(U.ReadingOrderTraversalPolicy, U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin);
    _inheritMany(N.GlobalKey, [N.LabeledGlobalKey, N.GlobalObjectKey]);
    _inherit(N._ElementDiagnosticableTreeNode, Y.DiagnosticableTreeNode);
    _inheritMany(N.ComponentElement, [N.StatelessElement, N.StatefulElement, N.ProxyElement]);
    _inheritMany(N.ProxyElement, [N.ParentDataElement, N.InheritedElement]);
    _inheritMany(D.GestureRecognizerFactory, [D.GestureRecognizerFactoryWithHandlers, X._AnyTapGestureRecognizerFactory]);
    _inheritMany(D.SemanticsGestureDelegate, [D._DefaultSemanticsGestureDelegate, X._ModalBarrierSemanticsDelegate]);
    _inherit(T.HeroController, K.NavigatorObserver);
    _inherit(S._InheritedNotifierElement, N.InheritedElement);
    _inherit(K.Page, K.RouteSettings);
    _inherit(K.DefaultTransitionDelegate, K.TransitionDelegate);
    _inherit(K._RouteEntry, K.RouteTransitionRecord);
    _inherit(K.NavigatorState, K._NavigatorState_State_TickerProviderStateMixin);
    _inherit(X.OverlayState, X._OverlayState_State_TickerProviderStateMixin);
    _inheritMany(N.MultiChildRenderObjectElement, [X._TheatreElement, Q._ViewportElement]);
    _inherit(X._RenderTheatre, X.__RenderTheatre_RenderBox_ContainerRenderObjectMixin);
    _inherit(L._GlowingOverscrollIndicatorState, L.__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin);
    _inherit(L.OverscrollIndicatorNotification, L._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin);
    _inheritMany(D.ValueKey, [S.PageStorageKey, G._SaltedValueKey]);
    _inherit(M.FixedScrollMetrics, M.ScrollMetrics);
    _inherit(D.PageMetrics, M.FixedScrollMetrics);
    _inheritMany(L.ScrollPhysics, [D._ForceImplicitScrollPhysics, D.PageScrollPhysics, L.BouncingScrollPhysics, L.ClampingScrollPhysics, L.AlwaysScrollableScrollPhysics]);
    _inheritMany(M.ScrollActivity, [M.IdleScrollActivity, M.HoldScrollActivity, M.DragScrollActivity, M.BallisticScrollActivity, M.DrivenScrollActivity]);
    _inherit(G._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin, U.LayoutChangedNotification);
    _inherit(G.ScrollNotification, G._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin);
    _inheritMany(G.ScrollNotification, [G.ScrollStartNotification, G.ScrollUpdateNotification, G.OverscrollNotification, G.ScrollEndNotification, G.UserScrollNotification]);
    _inherit(B.BoxScrollView, B.ScrollView);
    _inherit(B.ListView, B.BoxScrollView);
    _inherit(F.ScrollableState, F._ScrollableState_State_TickerProviderStateMixin);
    _inherit(X._LogicalKeySet_KeySet_Diagnosticable, X.KeySet);
    _inherit(X.LogicalKeySet, X._LogicalKeySet_KeySet_Diagnosticable);
    _inherit(X.ShortcutManager, X._ShortcutManager_ChangeNotifier_Diagnosticable);
    _inherit(E._RenderSingleChildViewport, E.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin);
    _inheritMany(G.SliverChildDelegate, [G.SliverChildBuilderDelegate, G.SliverChildListDelegate]);
    _inherit(G.SliverMultiBoxAdaptorWidget, G.SliverWithKeepAliveWidget);
    _inheritMany(G.SliverMultiBoxAdaptorWidget, [G.SliverList, G.SliverFixedExtentList, A._SliverFillViewportRenderObjectWidget]);
    _inherit(U._WidgetTicker, M.Ticker);
    _inheritMany(V.Recorder, [V.WidgetBuildRecorder, V.WidgetRecorder, V.SceneBuilderRecorder, V.RawRecorder]);
    _inheritMany(V.WidgetBuildRecorder, [K.BenchBuildMaterialCheckbox, Q.BenchBuildColorsGrid]);
    _inheritMany(V.WidgetRecorder, [T.BenchCardInfiniteScroll, Q.BenchSimpleLazyTextScroll]);
    _inheritMany(V.SceneBuilderRecorder, [G.BenchDrawRect, M.BenchDynamicClipOnStaticPicture, A.BenchTextOutOfPictureBounds]);
    _inheritMany(V.RawRecorder, [A.BenchPictureRecording, Q.BenchTextLayout, Q.BenchTextCachedLayout]);
    _inherit(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding, V.__RecordingWidgetsBinding_BindingBase_GestureBinding);
    _inherit(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding);
    _inherit(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding);
    _inherit(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding);
    _inherit(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding);
    _inherit(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding);
    _inherit(V._RecordingWidgetsBinding, V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding);
    _inherit(N._IntBuffer0, N._TypedDataBuffer0);
    _inherit(N.Uint8Buffer0, N._IntBuffer0);
    _mixin(H._DomCanvas_EngineCanvas_SaveElementStackTracking, H.SaveElementStackTracking);
    _mixin(H._PersistedClipRect_PersistedContainerSurface__DomClip, H._DomClip);
    _mixin(H._PersistedPhysicalShape_PersistedContainerSurface__DomClip, H._DomClip);
    _mixin(H.__MouseAdapter__BaseAdapter__WheelEventListenerMixin, H._WheelEventListenerMixin);
    _mixin(H.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, H._WheelEventListenerMixin);
    _mixin(H.UnmodifiableListBase, H.UnmodifiableListMixin);
    _mixin(H.__CastListBase__CastIterableBase_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(P._AsyncStreamController, P._AsyncStreamControllerDispatch);
    _mixin(P._ListBase_Object_ListMixin, P.ListMixin);
    _mixin(P._SplayTreeMap__SplayTree_MapMixin, P.MapMixin);
    _mixin(P._SplayTreeSet__SplayTree_IterableMixin, P.IterableMixin);
    _mixin(P._SplayTreeSet__SplayTree_IterableMixin_SetMixin, P.SetMixin);
    _mixin(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P._UnmodifiableMapMixin);
    _mixin(W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.CssStyleDeclarationBase);
    _mixin(W._DomRectList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._DomRectList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._DomStringList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._DomStringList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._FileList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._FileList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._MidiInputMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._MidiOutputMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._MimeTypeArray_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._PluginArray_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._PluginArray_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._RtcStatsReport_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._SourceBufferList_EventTarget_ListMixin, P.ListMixin);
    _mixin(W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._SpeechGrammarList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._Storage_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._TextTrackCueList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._TextTrackList_EventTarget_ListMixin, P.ListMixin);
    _mixin(W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._TouchList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__CssRuleList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__GamepadList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__NamedNodeMap_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__SpeechRecognitionResultList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__StyleSheetList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._JsArray_JsObject_ListMixin, P.ListMixin);
    _mixin(P._LengthList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._LengthList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._NumberList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._NumberList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._StringList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._StringList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._TransformList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._TransformList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._AudioParamMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(P._SqlResultSetRowList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(G._AnimationController_Animation_AnimationEagerListenerMixin, S.AnimationEagerListenerMixin);
    _mixin(G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, S.AnimationLocalListenersMixin);
    _mixin(G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S.AnimationLocalStatusListenersMixin);
    _mixin(S._CompoundAnimation_Animation_AnimationLazyListenerMixin, S.AnimationLazyListenerMixin);
    _mixin(S._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, S.AnimationLocalListenersMixin);
    _mixin(S._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S.AnimationLocalStatusListenersMixin);
    _mixin(S._CurvedAnimation_Animation_AnimationWithParentMixin, S.AnimationWithParentMixin);
    _mixin(S._ProxyAnimation_Animation_AnimationLazyListenerMixin, S.AnimationLazyListenerMixin);
    _mixin(S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, S.AnimationLocalListenersMixin);
    _mixin(S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S.AnimationLocalStatusListenersMixin);
    _mixin(S._ReverseAnimation_Animation_AnimationLazyListenerMixin, S.AnimationLazyListenerMixin);
    _mixin(S._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin, S.AnimationLocalStatusListenersMixin);
    _mixin(S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin, S.AnimationEagerListenerMixin);
    _mixin(S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, S.AnimationLocalListenersMixin);
    _mixin(S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S.AnimationLocalStatusListenersMixin);
    _mixin(R.__AnimatedEvaluation_Animation_AnimationWithParentMixin, S.AnimationWithParentMixin);
    _mixin(E._CupertinoDynamicColor_Color_Diagnosticable, Y.Diagnosticable);
    _mixin(T._CupertinoIconThemeData_IconThemeData_Diagnosticable, Y.Diagnosticable);
    _mixin(E.__CupertinoScrollbarState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(K._CupertinoThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._FlutterError_Error_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(U._FlutterErrorDetails_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(Y._DiagnosticableTree_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(F._PointerEvent_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(S._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(V._AppBarTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(Q._MaterialBannerThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(D._BottomAppBarTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(M._BottomNavigationBarThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(X._BottomSheetThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(M._ButtonBarThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(M._ButtonThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._CardTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(K.__CheckboxState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(K._ChipThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._ColorScheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(Y._DialogTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(G._DividerThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX, A.FabEndOffsetX);
    _mixin(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY, A.FabFloatOffsetY);
    _mixin(S._FloatingActionButtonThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(R.__InkResponseState_State_AutomaticKeepAliveClientMixin, L.AutomaticKeepAliveClientMixin);
    _mixin(L._InputDecorationTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(M.__MaterialState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(E._NavigationRailThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(K._PageTransitionsTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(R._PopupMenuThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(M._ScaffoldState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(M.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(E.__ScrollbarState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(Q._SliderThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(K._SnackBarThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._TabBarTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U.__DefaultTabControllerState_State_SingleTickerProviderStateMixin, U.SingleTickerProviderStateMixin);
    _mixin(E.__ChangeAnimation_Animation_AnimationWithParentMixin, S.AnimationWithParentMixin);
    _mixin(E.__DragAnimation_Animation_AnimationWithParentMixin, S.AnimationWithParentMixin);
    _mixin(R._TextTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(X._ThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(X._VisualDensity_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(S._ToggleButtonsThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(S.__TooltipState_State_SingleTickerProviderStateMixin, U.SingleTickerProviderStateMixin);
    _mixin(T._TooltipThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._Typography_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(Z._Decoration_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._TextStyle_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(S._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin, K.ContainerParentDataMixin);
    _mixin(B._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin, K.ContainerRenderObjectMixin);
    _mixin(B._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, S.RenderBoxContainerDefaultsMixin);
    _mixin(F._RenderFlex_RenderBox_ContainerRenderObjectMixin, K.ContainerRenderObjectMixin);
    _mixin(F._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, S.RenderBoxContainerDefaultsMixin);
    _mixin(F._RenderFlex_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, T.DebugOverflowIndicatorMixin);
    _mixin(T._Layer_AbstractNode_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(Y._MouseTrackerAnnotation_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(K._RenderObject_AbstractNode_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin, K.ContainerRenderObjectMixin);
    _mixin(Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, S.RenderBoxContainerDefaultsMixin);
    _mixin(Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin, K.RelayoutWhenSystemFontsChangeMixin);
    _mixin(E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin, E.RenderProxyBoxMixin);
    _mixin(E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin, E.RenderAnimatedOpacityMixin);
    _mixin(E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin, K.RenderObjectWithChildMixin);
    _mixin(E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin, E.RenderProxyBoxMixin);
    _mixin(T._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin, K.RenderObjectWithChildMixin);
    _mixin(G._SliverGeometry_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(G._SliverPhysicalContainerParentData_SliverPhysicalParentData_ContainerParentDataMixin, K.ContainerParentDataMixin);
    _mixin(F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin, K.ContainerRenderObjectMixin);
    _mixin(F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers, G.RenderSliverHelpers);
    _mixin(F._RenderSliverMultiBoxAdaptor_RenderSliver_ContainerRenderObjectMixin_RenderSliverHelpers_RenderSliverWithKeepAliveMixin, F.RenderSliverWithKeepAliveMixin);
    _mixin(F._SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin, K.ContainerParentDataMixin);
    _mixin(F._SliverMultiBoxAdaptorParentData_SliverLogicalParentData_ContainerParentDataMixin_KeepAliveParentDataMixin, F.KeepAliveParentDataMixin);
    _mixin(T._RenderSliverEdgeInsetsPadding_RenderSliver_RenderObjectWithChildMixin, K.RenderObjectWithChildMixin);
    _mixin(K._RenderStack_RenderBox_ContainerRenderObjectMixin, K.ContainerRenderObjectMixin);
    _mixin(K._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, S.RenderBoxContainerDefaultsMixin);
    _mixin(A._RenderView_RenderObject_RenderObjectWithChildMixin, K.RenderObjectWithChildMixin);
    _mixin(Q._RenderViewportBase_RenderBox_ContainerRenderObjectMixin, K.ContainerRenderObjectMixin);
    _mixin(A._SemanticsData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(A._SemanticsSortKey_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(G._KeyboardKey_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(B._RawKeyEvent_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(O._GLFWKeyHelper_Object_KeyHelper, O.KeyHelper);
    _mixin(U._Action_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._ActionDispatcher_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._Intent_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(S.__MediaQueryFromWindowsState_State_WidgetsBindingObserver, N.WidgetsBindingObserver);
    _mixin(S.__WidgetsAppState_State_WidgetsBindingObserver, N.WidgetsBindingObserver);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding, N.GestureBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding, N.SchedulerBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding, N.ServicesBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding, N.PaintingBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding, N.SemanticsBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding, N.RendererBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding, N.WidgetsBinding);
    _mixin(O._FocusManager_Object_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(O._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier, B.ChangeNotifier);
    _mixin(O._FocusNode_Object_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(O._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier, B.ChangeNotifier);
    _mixin(U._FocusTraversalPolicy_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, U.DirectionalFocusTraversalPolicyMixin);
    _mixin(U.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U.__ReadingOrderSortData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(N._State_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(T._IconThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(G._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin, U.SingleTickerProviderStateMixin);
    _mixin(K._NavigatorState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(X._OverlayState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(X.__RenderTheatre_RenderBox_ContainerRenderObjectMixin, K.ContainerRenderObjectMixin);
    _mixin(L._OverscrollIndicatorNotification_Notification_ViewportNotificationMixin, G.ViewportNotificationMixin);
    _mixin(L.__GlowingOverscrollIndicatorState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(T._ModalRoute_TransitionRoute_LocalHistoryRoute, T.LocalHistoryRoute);
    _mixin(G._ScrollNotification_LayoutChangedNotification_ViewportNotificationMixin, G.ViewportNotificationMixin);
    _mixin(A._ScrollPosition_ViewportOffset_ScrollMetrics, M.ScrollMetrics);
    _mixin(F._ScrollableState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(X._LogicalKeySet_KeySet_Diagnosticable, Y.Diagnosticable);
    _mixin(X._ShortcutManager_ChangeNotifier_Diagnosticable, Y.Diagnosticable);
    _mixin(E.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin, K.RenderObjectWithChildMixin);
    _mixin(N._WidgetInspectorService, N.WidgetInspectorService);
    _mixin(V.__RecordingWidgetsBinding_BindingBase_GestureBinding, N.GestureBinding);
    _mixin(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding, N.SchedulerBinding);
    _mixin(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding, N.ServicesBinding);
    _mixin(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding, N.PaintingBinding);
    _mixin(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding, N.SemanticsBinding);
    _mixin(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding, N.RendererBinding);
    _mixin(V.__RecordingWidgetsBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding, N.WidgetsBinding);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    getTypeFromName: getGlobalFromName,
    metadata: [],
    types: ["Null()", "~()", "Null(Event)", "Null(@)", "~(AnimationStatus)", "Future<~>()", "Null(Duration)", "Null(@,@)", "@(@)", "~(PointerEvent0)", "~(bool)", "Iterable<DiagnosticsNode>()", "bool(Object)", "Null(~)", "~(PaintingContext,Offset)", "~(@)", "~(Duration)", "Null(ByteData)", "@(Event)", "bool(ScrollNotification)", "int(FocusNode,FocusNode)", "Future<Null>()", "~(PointerExitEvent)", "int(RenderObject,RenderObject)", "Null(List<FrameTiming>)", "Null(num)", "bool()", "~(~())", "bool(Element)", "~(PointerEnterEvent)", "ColorTween(@)", "bool(@)", "~({curve:Curve,descendant:RenderObject,duration:Duration,rect:Rect})", "~(PointerDownEvent)", "int(SemanticsNode,SemanticsNode)", "~(Element)", "Widget(BuildContext)", "String()", "~(DragUpdateDetails)", "~(Object)", "~(Object[StackTrace])", "Null(GestureMode)", "~(DragStartDetails)", "Future<ServiceExtensionResponse>(String,Map<String,String>)", "~(DragEndDetails)", "Null(AnimationStatus)", "BenchTextCachedLayout()", "BenchTextLayout()", "int()", "HorizontalDragGestureRecognizer()", "VerticalDragGestureRecognizer()", "int(_ReadingOrderSortData,_ReadingOrderSortData)", "Future<bool>()", "Route<@>(RouteSettings)", "Future<ByteData>(ByteData)", "BenchBuildColorsGrid()", "Null(_MouseState,LinkedHashSet<MouseTrackerAnnotation>)", "Tween<double>(@)", "Future<double>()", "~(Event)", "~(TapDownDetails)", "String(String)", "~(FocusHighlightMode)", "int(@,@)", "bool(int)", "Future<~>(Object)", "~(ActivateIntent)", "bool(Element0,String,String,_Html5NodeValidator)", "double()", "~(LongPressMoveUpdateDetails)", "~(LongPressEndDetails)", "LabelAndValue(SemanticsObject)", "Tappable(SemanticsObject)", "Future<~>(~)", "_ThumbPressGestureRecognizer()", "TextField(SemanticsObject)", "Checkable(SemanticsObject)", "ImageRoleManager(SemanticsObject)", "~(DiagnosticsNode)", "~(AbstractNode)", "_GestureArena()", "~(PointerDataPacket)", "~(int)", "LiveRegion(SemanticsObject)", "~(_TapTracker)", "Map<~(PointerEvent0),Matrix4>()", "Null(~(PointerEvent0),Matrix4)", "RectTween(Rect,Rect)", "~(LongPressStartDetails)", "JsArray<double>()", "Scrollable0(SemanticsObject)", "Rect()", "Incrementable(SemanticsObject)", "_PointerState()", "TickerFuture({from:double})", "~(_StoredMessage)", "JsObject(@)", "SurfaceScene()", "ShapeBorderTween(@)", "~(List<double>,TextDirection,double)", "ThemeDataTween(@)", "ThemeData()", "~(TapUpDetails)", "~(int,SemanticsAction,ByteData)", "int(_PaintRequest,_PaintRequest)", "String(PointerEvent0)", "JsArray<@>(@)", "int(_PersistedSurfaceMatch,_PersistedSurfaceMatch)", "Null(ParagraphGeometricStyle,ParagraphRuler)", "Null(PaintingContext,Offset)", "~(PointerHoverEvent)", "bool(SliverHitTestResult{crossAxisPosition:double,mainAxisPosition:double})", "Iterable<MouseTrackerAnnotation>(Offset)", "~(List<FrameTiming>)", "JsFunction(@)", "Null(int,_FrameCallbackEntry)", "@()", "Stream<LicenseEntry>()", "Future<String>(String)", "Future<~>(String,ByteData,~(ByteData))", "@(@,@)", "Future<@>(@)", "~(Action<Intent>)", "Future<@>(String)", "bool(KeepAliveNotification)", "~(KeyboardEvent)", "~(String{wrapWidth:int})", "Future<@>(MethodCall0)", "Future<String>()", "~(RawKeyEvent)", "~(String,bool)", "Uint8List(@,@)", "int(_ReadingOrderDirectionalGroupData,_ReadingOrderDirectionalGroupData)", "List<SkiaObject>()", "TapGestureRecognizer()", "DoubleTapGestureRecognizer()", "LongPressGestureRecognizer()", "int(int,int)", "Null(Symbol0,@)", "~(String,double)", "~(RenderSemanticsGestureHandler)", "~(Iterable<PointerData>)", "~(_HeroFlight)", "TextStyleTween(@)", "BorderRadiusTween(@)", "Map<Type,@>(List<@>)", "~(Object,StackTrace)", "Null(List<~>)", "~(DragDownDetails)", "~(PointerSignalEvent)", "bool(FocusNode,RawKeyEvent)", "~(RenderBox)", "Element()", "Widget()", "Timeseries()", "BenchCardInfiniteScroll()", "BenchDrawRect()", "BenchTextOutOfPictureBounds()", "BenchSimpleLazyTextScroll()", "BenchBuildMaterialCheckbox()", "BenchDynamicClipOnStaticPicture()", "BenchPictureRecording()", "_Future<@>(@)", "Null(@[StackTrace])", "PanGestureRecognizer()", "Null(String,Timeseries)", "int(int,Object)", "Null(Object,StackTrace)", "~(ByteData)", "_Future<@>()", "Null(int,@)", "Null(@,StackTrace)", "Null(String,@)", "int(Comparable<@>,Comparable<@>)", "_ButtonSanitizer()", "Object(@)", "0^(0^,0^)<num>", "~(FlutterErrorDetails{forceReport:bool})", "DiagnosticsNode(String)", "StackFrame(String)", "~(RenderObject)", "int(_TaskEntry<@>,_TaskEntry<@>)", "bool({priority:int,scheduler:SchedulerBinding})", "String(ByteData)", "List<LicenseEntry>(String)", "int(Element,Element)", "List<Route<@>>(NavigatorState,String)", "int(Widget,int)", "Iterable<DiagnosticsNode>(Iterable<DiagnosticsNode>)", "DateTime()", "int(ParagraphRuler,ParagraphRuler)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: typeof Symbol == "function" && typeof Symbol() == "symbol" ? Symbol("$ti") : "$ti"
  };
  H._Universe_addRules(init.typeUniverse, JSON.parse('{"JavaScriptFunction":"JavaScriptObject","PlainJavaScriptObject":"JavaScriptObject","UnknownJavaScriptObject":"JavaScriptObject","AbortPaymentEvent":"Event","ExtendableEvent":"Event","AElement":"SvgElement","GraphicsElement":"SvgElement","_ResourceProgressEvent":"ProgressEvent","AudioElement":"HtmlElement","MediaElement":"HtmlElement","ShadowRoot":"Node","DocumentFragment":"Node","HtmlDocument":"Document","VttCue":"TextTrackCue","CompositionEvent":"UIEvent","DedicatedWorkerGlobalScope":"WorkerGlobalScope","CDataSection":"CharacterData","Text0":"CharacterData","HtmlFormControlsCollection":"HtmlCollection","CssCharsetRule":"CssRule","CssStyleSheet":"StyleSheet","AssetManagerException":{"Exception":[]},"SkPaint":{"SkiaObject":[],"Paint":[]},"SkPath":{"Path":[]},"HtmlImage":{"Image":[]},"_TypedDataBuffer":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_IntBuffer":{"_TypedDataBuffer":["int"],"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8Buffer":{"_TypedDataBuffer":["int"],"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"PersistedClipRect":{"PersistedContainerSurface":[],"ClipRectEngineLayer":[],"PersistedSurface":[]},"PersistedPhysicalShape":{"PersistedContainerSurface":[],"PhysicalShapeEngineLayer":[],"PersistedSurface":[]},"PersistedClipPath":{"PersistedContainerSurface":[],"ClipPathEngineLayer":[],"PersistedSurface":[]},"PersistedOffset":{"PersistedContainerSurface":[],"OffsetEngineLayer":[],"PersistedSurface":[]},"PersistedOpacity":{"PersistedContainerSurface":[],"OpacityEngineLayer":[],"PersistedSurface":[]},"SurfacePaint":{"Paint":[]},"SurfacePath":{"Path":[]},"PersistedStandardPicture":{"PersistedSurface":[]},"PersistedPicture":{"PersistedSurface":[]},"DrawCommand":{"PaintCommand":[]},"PaintSave":{"PaintCommand":[]},"PaintRestore":{"PaintCommand":[]},"PaintTranslate":{"PaintCommand":[]},"PaintScale":{"PaintCommand":[]},"PaintRotate":{"PaintCommand":[]},"PaintTransform":{"PaintCommand":[]},"PaintClipRect":{"PaintCommand":[]},"PaintClipRRect":{"PaintCommand":[]},"PaintClipPath":{"PaintCommand":[]},"PaintDrawLine":{"PaintCommand":[]},"PaintDrawRect":{"PaintCommand":[]},"PaintDrawRRect":{"PaintCommand":[]},"PaintDrawDRRect":{"PaintCommand":[]},"PaintDrawCircle":{"PaintCommand":[]},"PaintDrawPath":{"PaintCommand":[]},"PaintDrawShadow":{"PaintCommand":[]},"PaintDrawParagraph":{"PaintCommand":[]},"MoveTo":{"PathCommand":[]},"LineTo":{"PathCommand":[]},"Ellipse":{"PathCommand":[]},"QuadraticCurveTo":{"PathCommand":[]},"RectCommand":{"PathCommand":[]},"RRectCommand":{"PathCommand":[]},"CloseCommand":{"PathCommand":[]},"PersistedScene":{"PersistedContainerSurface":[],"PersistedSurface":[]},"PersistedLeafSurface":{"PersistedSurface":[]},"PersistedContainerSurface":{"PersistedSurface":[]},"PersistedTransform":{"PersistedContainerSurface":[],"TransformEngineLayer":[],"PersistedSurface":[]},"EngineParagraph":{"Paragraph":[]},"JSBool":{"bool":[]},"JSNull":{"Null":[]},"JavaScriptObject":{"JSObject":[],"Function":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"JSIndexable":["@"],"Iterable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"JSIndexable":["@"],"Iterable":["1"]},"JSNumber":{"double":[],"num":[],"Comparable":["num"]},"JSInt":{"int":[],"double":[],"num":[],"Comparable":["num"]},"JSDouble":{"double":[],"num":[],"Comparable":["num"]},"JSString":{"String":[],"JSIndexable":["@"],"Comparable":["String"]},"_CastIterableBase":{"Iterable":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"EfficientLengthIterable":["2"],"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListMixin.E":"2"},"CastMap":{"MapMixin":["3","4"],"Map":["3","4"],"MapMixin.K":"3","MapMixin.V":"4"},"CodeUnits":{"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListIterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"ExpandIterable":{"Iterable":["2"],"Iterable.E":"2"},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipWhileIterable":{"Iterable":["1"],"Iterable.E":"1"},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"UnmodifiableListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"Symbol":{"Symbol0":[]},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_ConstantMapKeyIterable":{"Iterable":["1"],"Iterable.E":"1"},"GeneralConstantMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"Instantiation":{"Function":[]},"Instantiation1":{"Function":[]},"NullError":{"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"JSSyntaxRegExp":{"RegExp":[]},"_MatchImplementation":{"Match":[]},"StringMatch":{"Match":[]},"_StringAllMatchesIterable":{"Iterable":["Match"],"Iterable.E":"Match"},"NativeTypedData":{"TypedData":[]},"NativeByteData":{"NativeTypedData":[],"ByteData":[],"TypedData":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"TypedData":[],"JSIndexable":["@"]},"NativeTypedArrayOfDouble":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["@"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"TypedData":[],"JSIndexable":["@"],"Iterable":["double"]},"NativeTypedArrayOfInt":{"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"]},"NativeFloat32List":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["@"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"TypedData":[],"JSIndexable":["@"],"Iterable":["double"],"ListMixin.E":"double"},"NativeFloat64List":{"Float64List":[],"ListMixin":["double"],"JavaScriptIndexingBehavior":["@"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"TypedData":[],"JSIndexable":["@"],"Iterable":["double"],"ListMixin.E":"double"},"NativeInt16List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int"},"NativeInt32List":{"NativeTypedArrayOfInt":[],"Int32List":[],"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int"},"NativeInt8List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint16List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint32List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint8ClampedList":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint8List":{"NativeTypedArrayOfInt":[],"Uint8List":[],"ListMixin":["int"],"List":["int"],"JavaScriptIndexingBehavior":["@"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["@"],"Iterable":["int"],"ListMixin.E":"int"},"_Type":{"Type":[]},"_Error":{"Error":[]},"_TypeError":{"Error":[]},"_TimerImpl":{"Timer":[]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"_AsyncCompleter":{"_Completer":["1"]},"_Future":{"Future":["1"]},"_AsyncStreamController":{"_StreamController":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"]},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"]},"_BufferingStreamSubscription":{"StreamSubscription":["1"]},"_StreamImpl":{"Stream":["1"]},"_GeneratedStreamImpl":{"_StreamImpl":["1"],"Stream":["1"]},"AsyncError":{"Error":[]},"_HashMap":{"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_IdentityHashMap":{"_HashMap":["1","2"],"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_LinkedIdentityHashMap":{"JsLinkedHashMap":["1","2"],"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_HashSet":{"_SetBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_LinkedHashSet":{"_SetBase":["1"],"LinkedHashSet":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"IterableBase":{"Iterable":["1"]},"LinkedHashSet":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"ListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"_MapBaseValueIterable":{"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"ListQueue":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"_SetBase":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"_UnmodifiableSet":{"_SetBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SplayTreeMapNode":{"_SplayTreeNode":["1"]},"SplayTreeMap":{"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_SplayTreeKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_SplayTreeValueIterable":{"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_SplayTreeKeyIterator":{"_SplayTreeIterator":["1","1"]},"_SplayTreeValueIterator":{"_SplayTreeIterator":["1","2"]},"_SplayTreeNodeIterator":{"_SplayTreeIterator":["1","_SplayTreeNode<1>"]},"SplayTreeSet":{"SetMixin":["1"],"IterableMixin":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"SetMixin.E":"1"},"_JsonMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"Iterable.E":"String","ListIterable.E":"String"},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"DateTime":{"Comparable":["DateTime"]},"double":{"num":[],"Comparable":["num"]},"Duration":{"Comparable":["Duration"]},"AssertionError":{"Error":[]},"NullThrownError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"NoSuchMethodError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"int":{"num":[],"Comparable":["num"]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"num":{"Comparable":["num"]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"_StringStackTrace":{"StackTrace":[]},"String":{"Comparable":["String"]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"HtmlElement":{"Element0":[],"Node":[]},"AnchorElement":{"Element0":[],"Node":[]},"ApplicationCacheErrorEvent":{"Event":[]},"AreaElement":{"Element0":[],"Node":[]},"BodyElement":{"Element0":[],"Node":[]},"ButtonElement":{"Element0":[],"Node":[]},"CanvasElement":{"Element0":[],"Node":[]},"CharacterData":{"Node":[]},"CssKeyframesRule":{"CssRule":[]},"DivElement":{"Element0":[],"Node":[]},"Document":{"Node":[]},"DomRectList":{"ListMixin":["Rectangle<num>"],"JavaScriptIndexingBehavior":["Rectangle<num>"],"List":["Rectangle<num>"],"EfficientLengthIterable":["Rectangle<num>"],"Iterable":["Rectangle<num>"],"JSIndexable":["Rectangle<num>"],"ListMixin.E":"Rectangle<num>"},"DomRectReadOnly":{"Rectangle":["num"]},"DomStringList":{"ListMixin":["String"],"List":["String"],"JavaScriptIndexingBehavior":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"JSIndexable":["String"],"ListMixin.E":"String"},"_FrozenElementList":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1"},"Element0":{"Node":[]},"EmbedElement":{"Element0":[],"Node":[]},"ErrorEvent":{"Event":[]},"FieldSetElement":{"Element0":[],"Node":[]},"File":{"Blob":[]},"FileList":{"ListMixin":["File"],"JavaScriptIndexingBehavior":["File"],"List":["File"],"EfficientLengthIterable":["File"],"Iterable":["File"],"JSIndexable":["File"],"ListMixin.E":"File"},"FormElement":{"Element0":[],"Node":[]},"HtmlCollection":{"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ListMixin.E":"Node"},"IFrameElement":{"Element0":[],"Node":[]},"InputElement":{"Element0":[],"Node":[]},"KeyboardEvent":{"Event":[]},"LabelElement":{"Element0":[],"Node":[]},"MapElement":{"Element0":[],"Node":[]},"MediaKeyMessageEvent":{"Event":[]},"MetaElement":{"Element0":[],"Node":[]},"MidiInputMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"MidiOutputMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"MimeTypeArray":{"ListMixin":["MimeType"],"JavaScriptIndexingBehavior":["MimeType"],"List":["MimeType"],"EfficientLengthIterable":["MimeType"],"Iterable":["MimeType"],"JSIndexable":["MimeType"],"ListMixin.E":"MimeType"},"MouseEvent":{"Event":[]},"_ChildNodeListLazy":{"ListMixin":["Node"],"List":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListMixin.E":"Node"},"NodeList":{"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ListMixin.E":"Node"},"ObjectElement":{"Element0":[],"Node":[]},"OutputElement":{"Element0":[],"Node":[]},"ParagraphElement":{"Element0":[],"Node":[]},"ParamElement":{"Element0":[],"Node":[]},"PluginArray":{"ListMixin":["Plugin"],"List":["Plugin"],"JavaScriptIndexingBehavior":["Plugin"],"EfficientLengthIterable":["Plugin"],"Iterable":["Plugin"],"JSIndexable":["Plugin"],"ListMixin.E":"Plugin"},"PointerEvent":{"MouseEvent":[],"Event":[]},"PresentationConnectionCloseEvent":{"Event":[]},"ProgressEvent":{"Event":[]},"RtcStatsReport":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"SelectElement":{"Element0":[],"Node":[]},"SharedWorkerGlobalScope":{"WorkerGlobalScope":[]},"SlotElement":{"Element0":[],"Node":[]},"SourceBufferList":{"ListMixin":["SourceBuffer"],"List":["SourceBuffer"],"JavaScriptIndexingBehavior":["SourceBuffer"],"EfficientLengthIterable":["SourceBuffer"],"Iterable":["SourceBuffer"],"JSIndexable":["SourceBuffer"],"ListMixin.E":"SourceBuffer"},"SpeechGrammarList":{"ListMixin":["SpeechGrammar"],"List":["SpeechGrammar"],"JavaScriptIndexingBehavior":["SpeechGrammar"],"EfficientLengthIterable":["SpeechGrammar"],"Iterable":["SpeechGrammar"],"JSIndexable":["SpeechGrammar"],"ListMixin.E":"SpeechGrammar"},"SpeechRecognitionError":{"Event":[]},"SpeechSynthesisEvent":{"Event":[]},"Storage":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.K":"String","MapMixin.V":"String"},"StyleElement":{"Element0":[],"Node":[]},"TableElement":{"Element0":[],"Node":[]},"TableRowElement":{"Element0":[],"Node":[]},"TableSectionElement":{"Element0":[],"Node":[]},"TemplateElement":{"Element0":[],"Node":[]},"TextAreaElement":{"Element0":[],"Node":[]},"TextTrackCueList":{"ListMixin":["TextTrackCue"],"JavaScriptIndexingBehavior":["TextTrackCue"],"List":["TextTrackCue"],"EfficientLengthIterable":["TextTrackCue"],"Iterable":["TextTrackCue"],"JSIndexable":["TextTrackCue"],"ListMixin.E":"TextTrackCue"},"TextTrackList":{"ListMixin":["TextTrack"],"JavaScriptIndexingBehavior":["TextTrack"],"List":["TextTrack"],"EfficientLengthIterable":["TextTrack"],"Iterable":["TextTrack"],"JSIndexable":["TextTrack"],"ListMixin.E":"TextTrack"},"TouchEvent":{"Event":[]},"TouchList":{"ListMixin":["Touch"],"List":["Touch"],"JavaScriptIndexingBehavior":["Touch"],"EfficientLengthIterable":["Touch"],"Iterable":["Touch"],"JSIndexable":["Touch"],"ListMixin.E":"Touch"},"UIEvent":{"Event":[]},"WheelEvent":{"MouseEvent":[],"Event":[]},"_Attr":{"Node":[]},"_CssRuleList":{"ListMixin":["CssRule"],"List":["CssRule"],"JavaScriptIndexingBehavior":["CssRule"],"EfficientLengthIterable":["CssRule"],"Iterable":["CssRule"],"JSIndexable":["CssRule"],"ListMixin.E":"CssRule"},"_DomRect":{"Rectangle":["num"]},"_GamepadList":{"ListMixin":["Gamepad"],"JavaScriptIndexingBehavior":["Gamepad"],"List":["Gamepad"],"EfficientLengthIterable":["Gamepad"],"Iterable":["Gamepad"],"JSIndexable":["Gamepad"],"ListMixin.E":"Gamepad"},"_NamedNodeMap":{"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ListMixin.E":"Node"},"_SpeechRecognitionResultList":{"ListMixin":["SpeechRecognitionResult"],"List":["SpeechRecognitionResult"],"JavaScriptIndexingBehavior":["SpeechRecognitionResult"],"EfficientLengthIterable":["SpeechRecognitionResult"],"Iterable":["SpeechRecognitionResult"],"JSIndexable":["SpeechRecognitionResult"],"ListMixin.E":"SpeechRecognitionResult"},"_StyleSheetList":{"ListMixin":["StyleSheet"],"JavaScriptIndexingBehavior":["StyleSheet"],"List":["StyleSheet"],"EfficientLengthIterable":["StyleSheet"],"Iterable":["StyleSheet"],"JSIndexable":["StyleSheet"],"ListMixin.E":"StyleSheet"},"_AttributeMap":{"MapMixin":["String","String"],"Map":["String","String"]},"_ElementAttributeMap":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.K":"String","MapMixin.V":"String"},"_EventStream":{"Stream":["1"]},"_ElementEventStreamImpl":{"_EventStream":["1"],"Stream":["1"]},"_EventStreamSubscription":{"StreamSubscription":["1"]},"_Html5NodeValidator":{"NodeValidator":[]},"NodeValidatorBuilder":{"NodeValidator":[]},"_SimpleNodeValidator":{"NodeValidator":[]},"_TemplatingNodeValidator":{"NodeValidator":[]},"_SvgNodeValidator":{"NodeValidator":[]},"VersionChangeEvent":{"Event":[]},"JsFunction":{"JsObject":[]},"JsArray":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"JsObject":[],"Iterable":["1"],"ListMixin.E":"1"},"Rectangle":{"_RectangleBase":["1"]},"LengthList":{"ListMixin":["Length"],"List":["Length"],"EfficientLengthIterable":["Length"],"Iterable":["Length"],"ListMixin.E":"Length"},"NumberList":{"ListMixin":["Number"],"List":["Number"],"EfficientLengthIterable":["Number"],"Iterable":["Number"],"ListMixin.E":"Number"},"ScriptElement0":{"SvgElement":[],"Element0":[],"Node":[]},"StringList":{"ListMixin":["String"],"List":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListMixin.E":"String"},"SvgElement":{"Element0":[],"Node":[]},"TransformList":{"ListMixin":["Transform0"],"List":["Transform0"],"EfficientLengthIterable":["Transform0"],"Iterable":["Transform0"],"ListMixin.E":"Transform0"},"ByteData":{"TypedData":[]},"Int8List":{"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Uint8List":{"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Uint8ClampedList":{"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Int16List":{"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Uint16List":{"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Int32List":{"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Uint32List":{"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"Iterable":["int"]},"Float32List":{"List":["double"],"EfficientLengthIterable":["double"],"TypedData":[],"Iterable":["double"]},"Float64List":{"List":["double"],"EfficientLengthIterable":["double"],"TypedData":[],"Iterable":["double"]},"RawRecordingCanvas":{"BitmapCanvas":[]},"AudioParamMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"SqlResultSetRowList":{"ListMixin":["Map<@,@>"],"List":["Map<@,@>"],"EfficientLengthIterable":["Map<@,@>"],"Iterable":["Map<@,@>"],"ListMixin.E":"Map<@,@>"},"Animation0":{"Listenable":[]},"AnimationController":{"Animation0":["double"],"Listenable":[]},"_AlwaysCompleteAnimation":{"Animation0":["double"],"Listenable":[]},"_AlwaysDismissedAnimation":{"Animation0":["double"],"Listenable":[]},"ProxyAnimation":{"Animation0":["double"],"Listenable":[]},"ReverseAnimation":{"Animation0":["double"],"Listenable":[]},"CurvedAnimation":{"Animation0":["double"],"Listenable":[]},"TrainHoppingAnimation":{"Animation0":["double"],"Listenable":[]},"CompoundAnimation":{"Animation0":["1"],"Listenable":[]},"AnimationMin":{"Animation0":["1"],"Listenable":[]},"_Linear":{"Curve":[]},"Interval":{"Curve":[]},"Threshold":{"Curve":[]},"Cubic":{"Curve":[]},"FlippedCurve":{"Curve":[]},"_DecelerateCurve":{"Curve":[]},"_AnimatedEvaluation":{"Animation0":["1"],"Listenable":[]},"_ChainedEvaluation":{"Animatable":["1"],"Animatable.T":"1"},"Tween":{"Animatable":["1"],"Tween.T":"1","Animatable.T":"1"},"ReverseTween":{"Tween":["1"],"Animatable":["1"],"Tween.T":"1","Animatable.T":"1"},"ColorTween":{"Tween":["Color"],"Animatable":["Color"],"Tween.T":"Color","Animatable.T":"Color"},"RectTween":{"Tween":["Rect"],"Animatable":["Rect"],"Tween.T":"Rect","Animatable.T":"Rect"},"IntTween":{"Tween":["int"],"Animatable":["int"],"Tween.T":"int","Animatable.T":"int"},"CurveTween":{"Animatable":["double"],"Animatable.T":"double"},"CupertinoDynamicColor":{"Color":[]},"CupertinoUserInterfaceLevel":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CupertinoLocalizationsDelegate":{"LocalizationsDelegate":["CupertinoLocalizations"],"LocalizationsDelegate.T":"CupertinoLocalizations"},"DefaultCupertinoLocalizations":{"CupertinoLocalizations":[]},"CupertinoPageTransition":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CupertinoBackGestureDetector":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CupertinoBackGestureDetectorState":{"State":["_CupertinoBackGestureDetector<1>"]},"_CupertinoEdgeShadowDecoration":{"Decoration":[]},"CupertinoScrollbar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CupertinoScrollbarState":{"State":["CupertinoScrollbar"]},"_ThumbPressGestureRecognizer":{"LongPressGestureRecognizer":[],"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"CupertinoTheme":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InheritedCupertinoTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ErrorDiagnostic":{"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorDescription":{"_ErrorDiagnostic":[],"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorSummary":{"_ErrorDiagnostic":[],"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorHint":{"_ErrorDiagnostic":[],"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorSpacer":{"DiagnosticsProperty":["~"],"DiagnosticsNode":[]},"FlutterError":{"DiagnosticableTree":[],"AssertionError":[],"Error":[]},"DiagnosticsStackTrace":{"DiagnosticsNode":[]},"_FlutterErrorDetailsNode":{"DiagnosticsNode":[]},"ChangeNotifier":{"Listenable":[]},"_MergingListenable":{"Listenable":[]},"ValueNotifier":{"Listenable":[]},"DiagnosticsProperty":{"DiagnosticsNode":[]},"DiagnosticableNode":{"DiagnosticsNode":[]},"DiagnosticableTreeNode":{"DiagnosticsNode":[]},"DiagnosticsBlock":{"DiagnosticsNode":[]},"LocalKey":{"Key":[]},"ValueKey":{"Key":[],"ValueKey.T":"1"},"LicenseEntryWithLineBreaks":{"LicenseEntry":[]},"ObserverList":{"Iterable":["1"],"Iterable.E":"1"},"HashedObserverList":{"Iterable":["1"],"Iterable.E":"1"},"SynchronousFuture":{"Future":["1"]},"FlutterErrorDetailsForPointerEventDispatcher":{"FlutterErrorDetails":[]},"PointerAddedEvent":{"PointerEvent0":[]},"PointerRemovedEvent":{"PointerEvent0":[]},"PointerHoverEvent":{"PointerEvent0":[]},"PointerEnterEvent":{"PointerEvent0":[]},"PointerExitEvent":{"PointerEvent0":[]},"PointerDownEvent":{"PointerEvent0":[]},"PointerMoveEvent":{"PointerEvent0":[]},"PointerUpEvent":{"PointerEvent0":[]},"PointerSignalEvent":{"PointerEvent0":[]},"PointerScrollEvent":{"PointerSignalEvent":[],"PointerEvent0":[]},"PointerCancelEvent":{"PointerEvent0":[]},"LongPressGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"DragGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"VerticalDragGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"HorizontalDragGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"PanGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"DoubleTapGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"FlutterErrorDetailsForPointerRouter":{"FlutterErrorDetails":[]},"GestureRecognizer":{"DiagnosticableTree":[],"GestureArenaMember":[]},"OneSequenceGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"PrimaryPointerGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"BaseTapGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"TapGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"MaterialApp":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MaterialAppState":{"State":["MaterialApp"]},"AppBar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AppBarState":{"State":["AppBar"]},"_AppBarTitleBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderAppBarTitleBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"MaterialPointArcTween":{"Tween":["Offset"],"Animatable":["Offset"],"Tween.T":"Offset","Animatable.T":"Offset"},"MaterialRectArcTween":{"Tween":["Rect"],"Animatable":["Rect"],"Tween.T":"Rect","Animatable.T":"Rect"},"BackButtonIcon":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"BackButton":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"RawMaterialButton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RawMaterialButtonState":{"State":["RawMaterialButton"]},"_InputPadding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderInputPadding":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"Card":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Checkbox":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CheckboxState":{"State":["Checkbox"]},"_CheckboxRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderCheckbox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"MaterialColor":{"ColorSwatch":["int"],"Color":[],"ColorSwatch.T":"int"},"MaterialAccentColor":{"ColorSwatch":["int"],"Color":[],"ColorSwatch.T":"int"},"DrawerController":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"DrawerControllerState":{"State":["DrawerController"]},"FlexibleSpaceBarSettings":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"FloatingActionButton":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnimationSwap":{"Animation0":["1"],"Listenable":[]},"IconButton":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"InkHighlight":{"InteractiveInkFeature":[],"InkFeature":[]},"InkSplash":{"InteractiveInkFeature":[],"InkFeature":[]},"InteractiveInkFeature":{"InkFeature":[]},"InkResponse":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InkResponseState":{"State":["1"]},"InkWell":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"Material":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MaterialState":{"State":["Material"]},"_RenderInkFeatures":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"_InkFeatures":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ShapeBorderTween":{"Tween":["ShapeBorder"],"Animatable":["ShapeBorder"],"Tween.T":"ShapeBorder","Animatable.T":"ShapeBorder"},"_MaterialInterior":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MaterialInteriorState":{"State":["_MaterialInterior"]},"_ShapeBorderPaint":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ShapeBorderPainter":{"Listenable":[]},"_MaterialLocalizationsDelegate":{"LocalizationsDelegate":["MaterialLocalizations"],"LocalizationsDelegate.T":"MaterialLocalizations"},"DefaultMaterialLocalizations":{"MaterialLocalizations":[]},"MaterialPageRoute":{"ModalRoute":["1"],"TransitionRoute":["1"],"Route":["1"]},"_FadeUpwardsPageTransition":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"FadeUpwardsPageTransitionsBuilder":{"PageTransitionsBuilder":[]},"CupertinoPageTransitionsBuilder":{"PageTransitionsBuilder":[]},"_ScaffoldGeometryNotifier":{"Listenable":[]},"_BodyBoxConstraints":{"BoxConstraints":[]},"_BodyBuilder":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FloatingActionButtonTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FloatingActionButtonTransitionState":{"State":["_FloatingActionButtonTransition"]},"Scaffold":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScaffoldState":{"State":["Scaffold"]},"_StandardBottomSheet":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ScaffoldScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Scrollbar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ScrollbarState":{"State":["Scrollbar"]},"SnackBar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"TabController":{"Listenable":[]},"_TabControllerScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"DefaultTabController":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_DefaultTabControllerState":{"State":["DefaultTabController"]},"UnderlineTabIndicator":{"Decoration":[]},"Tab":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TabStyle":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TabLabelBarRenderer":{"RenderBoxContainerDefaultsMixin":["RenderBox","FlexParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","FlexParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"ContainerRenderObjectMixin.1":"FlexParentData","RenderBoxContainerDefaultsMixin.1":"FlexParentData","ContainerRenderObjectMixin.0":"RenderBox"},"_TabLabelBar":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_IndicatorPainter":{"Listenable":[]},"_ChangeAnimation":{"Animation0":["double"],"Listenable":[]},"_DragAnimation":{"Animation0":["double"],"Listenable":[]},"_TabBarScrollPosition":{"ScrollPosition":[],"ViewportOffset":[],"Listenable":[]},"_TabBarScrollController":{"Listenable":[]},"TabBar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TabBarState":{"State":["TabBar"]},"TabBarView":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TabBarViewState":{"State":["TabBarView"]},"Theme":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InheritedTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"ThemeDataTween":{"Tween":["ThemeData"],"Animatable":["ThemeData"],"Tween.T":"ThemeData","Animatable.T":"ThemeData"},"AnimatedTheme":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnimatedThemeState":{"State":["AnimatedTheme"]},"RenderToggleable":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"Tooltip":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TooltipState":{"State":["Tooltip"]},"_TooltipOverlay":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"TooltipTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SystemFontsNotifier":{"Listenable":[]},"_CompoundBorder":{"ShapeBorder":[]},"BoxBorder":{"ShapeBorder":[]},"Border":{"ShapeBorder":[]},"BorderDirectional":{"ShapeBorder":[]},"BoxDecoration":{"Decoration":[]},"CircleBorder":{"ShapeBorder":[]},"ColorSwatch":{"Color":[]},"EdgeInsets":{"EdgeInsetsGeometry":[]},"EdgeInsetsDirectional":{"EdgeInsetsGeometry":[]},"_MixedEdgeInsets":{"EdgeInsetsGeometry":[]},"InlineSpan":{"DiagnosticableTree":[]},"PlaceholderSpan":{"InlineSpan":[],"DiagnosticableTree":[]},"RoundedRectangleBorder":{"ShapeBorder":[]},"_RoundedRectangleToCircleBorder":{"ShapeBorder":[]},"StadiumBorder":{"ShapeBorder":[]},"_StadiumToCircleBorder":{"ShapeBorder":[]},"_StadiumToRoundedRectangleBorder":{"ShapeBorder":[]},"TextSpan":{"InlineSpan":[],"DiagnosticableTree":[]},"BoxHitTestEntry":{"HitTestEntry":[]},"ContainerBoxParentData":{"BoxParentData":[],"ContainerParentDataMixin":["1"]},"RenderBox":{"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"MultiChildLayoutParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"]},"RenderCustomMultiChildLayoutBox":{"RenderBoxContainerDefaultsMixin":["RenderBox","MultiChildLayoutParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","MultiChildLayoutParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"ContainerRenderObjectMixin.1":"MultiChildLayoutParentData","RenderBoxContainerDefaultsMixin.1":"MultiChildLayoutParentData","ContainerRenderObjectMixin.0":"RenderBox"},"CustomPainter":{"Listenable":[]},"RenderCustomPaint":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderErrorBox":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"FlexParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"]},"RenderFlex":{"RenderBoxContainerDefaultsMixin":["RenderBox","FlexParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","FlexParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"ContainerRenderObjectMixin.1":"FlexParentData","RenderBoxContainerDefaultsMixin.1":"FlexParentData","ContainerRenderObjectMixin.0":"RenderBox"},"Layer":{"DiagnosticableTree":[],"AbstractNode":[]},"PictureLayer":{"DiagnosticableTree":[],"AbstractNode":[]},"PerformanceOverlayLayer":{"DiagnosticableTree":[],"AbstractNode":[]},"ContainerLayer":{"DiagnosticableTree":[],"AbstractNode":[]},"OffsetLayer":{"ContainerLayer":[],"DiagnosticableTree":[],"AbstractNode":[]},"ClipRectLayer":{"ContainerLayer":[],"DiagnosticableTree":[],"AbstractNode":[]},"ClipPathLayer":{"ContainerLayer":[],"DiagnosticableTree":[],"AbstractNode":[]},"TransformLayer":{"OffsetLayer":[],"ContainerLayer":[],"DiagnosticableTree":[],"AbstractNode":[]},"OpacityLayer":{"ContainerLayer":[],"DiagnosticableTree":[],"AbstractNode":[]},"PhysicalModelLayer":{"ContainerLayer":[],"DiagnosticableTree":[],"AbstractNode":[]},"AnnotatedRegionLayer":{"ContainerLayer":[],"DiagnosticableTree":[],"AbstractNode":[]},"MouseTracker":{"Listenable":[]},"RenderObject":{"DiagnosticableTree":[],"AbstractNode":[]},"FlutterErrorDetailsForRendering":{"FlutterErrorDetails":[]},"_RootSemanticsFragment":{"_InterestingSemanticsFragment":[]},"_SwitchableSemanticsFragment":{"_InterestingSemanticsFragment":[]},"_AbortingSemanticsFragment":{"_InterestingSemanticsFragment":[]},"DiagnosticsDebugCreator":{"DiagnosticsProperty":["Object"],"DiagnosticsNode":[]},"TextParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"]},"RenderParagraph":{"RenderBoxContainerDefaultsMixin":["RenderBox","TextParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","TextParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"ContainerRenderObjectMixin.1":"TextParentData","RenderBoxContainerDefaultsMixin.1":"TextParentData","ContainerRenderObjectMixin.0":"RenderBox"},"RenderPerformanceOverlay":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderProxyBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderProxyBoxWithHitTestBehavior":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderConstrainedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderLimitedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderOpacity":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderAnimatedOpacity":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"_RenderCustomClip":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderClipRect":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderClipPath":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"_RenderPhysicalModelBase":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderPhysicalModel":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderPhysicalShape":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderDecoratedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderTransform":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderFractionalTranslation":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderPointerListener":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderMouseRegion":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderRepaintBoundary":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderIgnorePointer":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderOffstage":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderAbsorbPointer":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderSemanticsGestureHandler":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderSemanticsAnnotations":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderBlockSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderMergeSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderExcludeSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderIndexedSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderAnnotatedRegion":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderShiftedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderPadding":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderAligningShiftedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderPositionedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderCustomSingleChildLayoutBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"SliverHitTestEntry":{"HitTestEntry":[]},"SliverPhysicalContainerParentData":{"SliverPhysicalParentData":[],"ContainerParentDataMixin":["RenderSliver"]},"RenderSliver":{"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderSliverFillViewport":{"RenderSliverMultiBoxAdaptor":[],"RenderSliver":[],"ContainerRenderObjectMixin":["RenderBox","SliverMultiBoxAdaptorParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"ContainerRenderObjectMixin.1":"SliverMultiBoxAdaptorParentData","ContainerRenderObjectMixin.0":"RenderBox"},"RenderSliverFixedExtentBoxAdaptor":{"RenderSliverMultiBoxAdaptor":[],"RenderSliver":[],"ContainerRenderObjectMixin":["RenderBox","SliverMultiBoxAdaptorParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderSliverFixedExtentList":{"RenderSliverMultiBoxAdaptor":[],"RenderSliver":[],"ContainerRenderObjectMixin":["RenderBox","SliverMultiBoxAdaptorParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"ContainerRenderObjectMixin.1":"SliverMultiBoxAdaptorParentData","ContainerRenderObjectMixin.0":"RenderBox"},"RenderSliverList":{"RenderSliverMultiBoxAdaptor":[],"RenderSliver":[],"ContainerRenderObjectMixin":["RenderBox","SliverMultiBoxAdaptorParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"ContainerRenderObjectMixin.1":"SliverMultiBoxAdaptorParentData","ContainerRenderObjectMixin.0":"RenderBox"},"SliverMultiBoxAdaptorParentData":{"KeepAliveParentDataMixin":[],"ContainerParentDataMixin":["RenderBox"]},"RenderSliverMultiBoxAdaptor":{"RenderSliver":[],"ContainerRenderObjectMixin":["RenderBox","SliverMultiBoxAdaptorParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderSliverEdgeInsetsPadding":{"RenderSliver":[],"RenderObjectWithChildMixin":["RenderSliver"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderSliverPadding":{"RenderSliver":[],"RenderObjectWithChildMixin":["RenderSliver"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"StackParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"]},"RenderStack":{"RenderBoxContainerDefaultsMixin":["RenderBox","StackParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"ContainerRenderObjectMixin.1":"StackParentData","RenderBoxContainerDefaultsMixin.1":"StackParentData","ContainerRenderObjectMixin.0":"RenderBox"},"RenderView":{"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderViewportBase":{"_RenderViewportBase_RenderBox_ContainerRenderObjectMixin":["1"],"RenderAbstractViewport":[],"RenderBox":[],"ContainerRenderObjectMixin":["RenderSliver","1"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderViewport":{"_RenderViewportBase_RenderBox_ContainerRenderObjectMixin":["SliverPhysicalContainerParentData"],"RenderAbstractViewport":[],"RenderBox":[],"ContainerRenderObjectMixin":["RenderSliver","SliverPhysicalContainerParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"ContainerRenderObjectMixin.1":"SliverPhysicalContainerParentData","_RenderViewportBase_RenderBox_ContainerRenderObjectMixin.0":"SliverPhysicalContainerParentData","ContainerRenderObjectMixin.0":"RenderSliver"},"ViewportOffset":{"Listenable":[]},"TickerFuture":{"Future":["~"]},"TickerCanceled":{"Exception":[]},"_SemanticsDiagnosticableNode":{"DiagnosticsNode":[]},"SemanticsProperties":{"DiagnosticableTree":[]},"SemanticsNode":{"DiagnosticableTree":[],"AbstractNode":[]},"_BoxEdge":{"Comparable":["_BoxEdge"]},"_SemanticsSortGroup":{"Comparable":["_SemanticsSortGroup"]},"_TraversalSortNode":{"Comparable":["_TraversalSortNode"]},"SemanticsOwner":{"Listenable":[]},"SemanticsSortKey":{"Comparable":["SemanticsSortKey"]},"OrdinalSortKey":{"Comparable":["SemanticsSortKey"]},"PlatformException":{"Exception":[]},"MissingPluginException":{"Exception":[]},"RawKeyDownEvent":{"RawKeyEvent":[]},"RawKeyUpEvent":{"RawKeyEvent":[]},"ContextAction":{"Action":["1"]},"CallbackAction":{"Action":["1"]},"Actions":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ActionsState":{"State":["Actions"]},"_ActionsMarker":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"FocusableActionDetector":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FocusableActionDetectorState":{"State":["FocusableActionDetector"]},"DoNothingIntent":{"Intent":[]},"DoNothingAction":{"Action":["Intent"]},"ActivateIntent":{"Intent":[]},"AnnotatedRegion":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"WidgetsApp":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_WidgetsAppState":{"State":["WidgetsApp"],"WidgetsBindingObserver":[]},"_MediaQueryFromWindow":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MediaQueryFromWindowsState":{"State":["_MediaQueryFromWindow"],"WidgetsBindingObserver":[]},"AutomaticKeepAlive":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AutomaticKeepAliveState":{"State":["AutomaticKeepAlive"]},"KeepAliveHandle":{"Listenable":[]},"Directionality":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Opacity":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"CustomPaint":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ClipRect":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ClipPath":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"PhysicalModel":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"PhysicalShape":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Transform":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"FractionalTranslation":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Padding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Align":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Center":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"CustomSingleChildLayout":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"LayoutId":{"ParentDataWidget":["MultiChildLayoutParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"MultiChildLayoutParentData"},"CustomMultiChildLayout":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"SizedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ConstrainedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"LimitedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Offstage":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_OffstageElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"SliverPadding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Stack":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Positioned":{"ParentDataWidget":["StackParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"StackParentData"},"PositionedDirectional":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Flex":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Row":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Column":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Flexible":{"ParentDataWidget":["FlexParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"FlexParentData"},"Expanded":{"ParentDataWidget":["FlexParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"FlexParentData"},"RichText":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"DefaultAssetBundle":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Listener":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_PointerListener":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"MouseRegion":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MouseRegionState":{"State":["MouseRegion"]},"_RawMouseRegion":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RepaintBoundary":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"IgnorePointer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"AbsorbPointer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Semantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"MergeSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"BlockSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ExcludeSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"IndexedSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"KeyedSubtree":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Builder":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ColoredBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderColoredBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"RenderObjectToWidgetAdapter":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderObjectToWidgetElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"WidgetsFlutterBinding":{"SchedulerBinding":[]},"DecoratedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Container":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"FocusNode":{"DiagnosticableTree":[],"Listenable":[]},"FocusScopeNode":{"FocusNode":[],"DiagnosticableTree":[],"Listenable":[]},"FocusManager":{"DiagnosticableTree":[],"Listenable":[]},"Focus":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FocusState":{"State":["Focus"]},"FocusScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FocusScopeState":{"State":["Focus"]},"_FocusMarker":{"InheritedNotifier":["FocusNode"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"InheritedNotifier.T":"FocusNode"},"FocusTraversalGroup":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FocusTraversalGroupState":{"State":["FocusTraversalGroup"]},"_FocusTraversalGroupMarker":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"RequestFocusIntent":{"Intent":[]},"RequestFocusAction":{"Action":["RequestFocusIntent"]},"NextFocusIntent":{"Intent":[]},"NextFocusAction":{"Action":["NextFocusIntent"]},"PreviousFocusIntent":{"Intent":[]},"PreviousFocusAction":{"Action":["PreviousFocusIntent"]},"DirectionalFocusIntent":{"Intent":[]},"DirectionalFocusAction":{"Action":["DirectionalFocusIntent"]},"UniqueKey":{"Key":[]},"GlobalKey":{"Key":[]},"LabeledGlobalKey":{"GlobalKey":["1"],"Key":[]},"GlobalObjectKey":{"GlobalKey":["1"],"Key":[]},"Widget":{"DiagnosticableTree":[]},"StatelessWidget":{"Widget":[],"DiagnosticableTree":[]},"StatefulWidget":{"Widget":[],"DiagnosticableTree":[]},"ProxyWidget":{"Widget":[],"DiagnosticableTree":[]},"ParentDataWidget":{"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"InheritedWidget":{"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderObjectWidget":{"Widget":[],"DiagnosticableTree":[]},"LeafRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"SingleChildRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"MultiChildRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Element":{"DiagnosticableTree":[],"BuildContext":[]},"_ElementDiagnosticableTreeNode":{"DiagnosticsNode":[]},"ErrorWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ComponentElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"StatelessElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"StatefulElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"ProxyElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"ParentDataElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"InheritedElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"RenderObjectElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"RootRenderObjectElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"LeafRenderObjectElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"SingleChildRenderObjectElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"MultiChildRenderObjectElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"GestureRecognizerFactoryWithHandlers":{"GestureRecognizerFactory":["1"]},"GestureDetector":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"RawGestureDetector":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"RawGestureDetectorState":{"State":["RawGestureDetector"]},"_GestureSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Hero":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_HeroState":{"State":["Hero"]},"HeroController":{"NavigatorObserver":[]},"Icon":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"IconTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"DecorationTween":{"Tween":["Decoration"],"Animatable":["Decoration"],"Tween.T":"Decoration","Animatable.T":"Decoration"},"BorderRadiusTween":{"Tween":["BorderRadius"],"Animatable":["BorderRadius"],"Tween.T":"BorderRadius","Animatable.T":"BorderRadius"},"TextStyleTween":{"Tween":["TextStyle"],"Animatable":["TextStyle"],"Tween.T":"TextStyle","Animatable.T":"TextStyle"},"ImplicitlyAnimatedWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ImplicitlyAnimatedWidgetState":{"State":["1"]},"AnimatedWidgetBaseState":{"State":["1"]},"AnimatedDefaultTextStyle":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnimatedDefaultTextStyleState":{"State":["AnimatedDefaultTextStyle"]},"AnimatedPhysicalModel":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnimatedPhysicalModelState":{"State":["AnimatedPhysicalModel"]},"InheritedNotifier":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InheritedNotifierElement":{"InheritedElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"InheritedTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_WidgetsLocalizationsDelegate":{"LocalizationsDelegate":["WidgetsLocalizations"],"LocalizationsDelegate.T":"WidgetsLocalizations"},"DefaultWidgetsLocalizations":{"WidgetsLocalizations":[]},"_LocalizationsScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Localizations":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_LocalizationsState":{"State":["Localizations"]},"MediaQuery":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"ModalBarrier":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnyTapGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"_AnyTapGestureRecognizerFactory":{"GestureRecognizerFactory":["_AnyTapGestureRecognizer"]},"_ModalBarrierGestureDetector":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"NavigationToolbar":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Page":{"RouteSettings":[]},"Navigator":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"NavigatorState":{"State":["Navigator"]},"NotificationListener":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_OverlayEntryWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_OverlayEntryWidgetState":{"State":["_OverlayEntryWidget"]},"Overlay":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"OverlayState":{"State":["Overlay"]},"_Theatre":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TheatreElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"_RenderTheatre":{"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"ContainerRenderObjectMixin.1":"StackParentData","ContainerRenderObjectMixin.0":"RenderBox"},"GlowingOverscrollIndicator":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_GlowingOverscrollIndicatorState":{"State":["GlowingOverscrollIndicator"]},"_GlowController":{"Listenable":[]},"_GlowingOverscrollIndicatorPainter":{"Listenable":[]},"PageStorageKey":{"ValueKey":["1"],"Key":[]},"PageStorage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"PageController":{"Listenable":[]},"_PagePosition":{"ScrollPosition":[],"ViewportOffset":[],"Listenable":[]},"PageView":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_PageViewState":{"State":["PageView"]},"PageRoute":{"ModalRoute":["1"],"TransitionRoute":["1"],"Route":["1"]},"PerformanceOverlay":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"PrimaryScrollController":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"OverlayRoute":{"Route":["1"]},"TransitionRoute":{"Route":["1"]},"_ModalScopeStatus":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ModalScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ModalScopeState":{"State":["_ModalScope<1>"]},"ModalRoute":{"TransitionRoute":["1"],"Route":["1"]},"SafeArea":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScrollConfiguration":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScrollController":{"Listenable":[]},"ScrollNotification":{"LayoutChangedNotification":[]},"ScrollStartNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"ScrollUpdateNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"OverscrollNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"ScrollEndNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"UserScrollNotification":{"ScrollNotification":[],"LayoutChangedNotification":[]},"ScrollPosition":{"ViewportOffset":[],"Listenable":[]},"ScrollPositionWithSingleContext":{"ScrollPosition":[],"ViewportOffset":[],"Listenable":[]},"ScrollView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"BoxScrollView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ListView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Scrollable":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ScrollableScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScrollableState":{"State":["Scrollable"]},"_ScrollSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderScrollSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"ScrollIntent":{"Intent":[]},"ScrollAction":{"Action":["ScrollIntent"]},"ScrollbarPainter":{"Listenable":[]},"LogicalKeySet":{"KeySet":["LogicalKeyboardKey"],"KeySet.T":"LogicalKeyboardKey"},"ShortcutManager":{"Listenable":[]},"Shortcuts":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ShortcutsState":{"State":["Shortcuts"]},"_ShortcutsMarker":{"InheritedNotifier":["ShortcutManager"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"InheritedNotifier.T":"ShortcutManager"},"SingleChildScrollView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SingleChildViewport":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderSingleChildViewport":{"RenderAbstractViewport":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"_SaltedValueKey":{"ValueKey":["Key"],"Key":[],"ValueKey.T":"Key"},"SliverWithKeepAliveWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"SliverMultiBoxAdaptorWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"SliverList":{"SliverMultiBoxAdaptorWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"SliverFixedExtentList":{"SliverMultiBoxAdaptorWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"SliverMultiBoxAdaptorElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"KeepAlive":{"ParentDataWidget":["KeepAliveParentDataMixin"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"KeepAliveParentDataMixin"},"SliverFillViewport":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SliverFillViewportRenderObjectWidget":{"SliverMultiBoxAdaptorWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SliverFractionalPadding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderSliverFractionalPadding":{"RenderSliver":[],"RenderObjectWithChildMixin":["RenderSliver"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[]},"DefaultTextStyle":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Text":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"TickerMode":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_EffectiveTickerMode":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Title":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"AnimatedWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnimatedState":{"State":["AnimatedWidget"]},"SlideTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScaleTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"RotationTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"FadeTransition":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"DecoratedBoxTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"AnimatedBuilder":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"Viewport":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ViewportElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"_InfiniteScrollCards":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InfiniteScrollCardsState":{"State":["_InfiniteScrollCards"]},"_TestScrollingWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TestScrollingWidgetState":{"State":["_TestScrollingWidget"]},"ColorItem":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"PaletteTabView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ColorsDemo":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_WidgetBuildRecorderHost":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_WidgetBuildRecorderHostState":{"State":["_WidgetBuildRecorderHost"]},"_RecordingWidgetsBinding":{"SchedulerBinding":[]},"_TypedDataBuffer0":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_IntBuffer0":{"_TypedDataBuffer0":["int"],"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8Buffer0":{"_TypedDataBuffer0":["int"],"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"}}'));
  H._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"FrameReference":1,"ArrayIterator":1,"ListIterator":1,"MappedIterator":2,"WhereIterator":1,"ExpandIterator":2,"TakeIterator":1,"SkipIterator":1,"SkipWhileIterator":1,"EmptyIterator":1,"FixedLengthListMixin":1,"UnmodifiableListMixin":1,"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"LinkedHashMapKeyIterator":1,"_SyncStarIterator":1,"_FutureListener":2,"StreamTransformerBase":2,"_AsyncStreamControllerDispatch":1,"_AddStreamState":1,"_StreamControllerAddStreamState":1,"_IterablePendingEvents":1,"_DelayedEvent":1,"_DelayedData":1,"_PendingEvents":1,"_StreamImplEvents":1,"_StreamIterator":1,"_HashMapKeyIterator":1,"_HashSetIterator":1,"_LinkedHashSetIterator":1,"IterableBase":1,"ListBase":1,"MapBase":2,"_MapBaseValueIterator":2,"_ListQueueIterator":1,"_SplayTree":2,"_ListBase_Object_ListMixin":1,"_SplayTreeMap__SplayTree_MapMixin":2,"_SplayTreeSet__SplayTree_IterableMixin":1,"_SplayTreeSet__SplayTree_IterableMixin_SetMixin":1,"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":2,"Codec":2,"Converter":2,"Comparable":1,"Iterator":1,"ImmutableListMixin":1,"FixedSizeListIterator":1,"_JsArray_JsObject_ListMixin":1,"AnimationWithParentMixin":1,"CompoundAnimation":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin":1,"ParametricCurve":1,"__AnimatedEvaluation_Animation_AnimationWithParentMixin":1,"_CupertinoBackGestureController":1,"ValueNotifier":1,"DiagnosticableNode":1,"__InkResponseState_State_AutomaticKeepAliveClientMixin":1,"ContainerBoxParentData":1,"_ContainerBoxParentData_BoxParentData_ContainerParentDataMixin":1,"ContainerParentDataMixin":1,"RenderProxyBoxMixin":1,"RenderAnimatedOpacityMixin":1,"CustomClipper":1,"_RenderCustomClip":1,"_RenderPhysicalModelBase":1,"RenderViewportBase":1,"AutomaticKeepAliveClientMixin":1,"ImplicitlyAnimatedWidgetState":1,"AnimatedWidgetBaseState":1,"_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin":1,"Page":1,"TransitionDelegate":1,"DefaultTransitionDelegate":1,"PageStorageKey":1,"PageRoute":1,"OverlayRoute":1,"LocalHistoryRoute":1,"_ModalRoute_TransitionRoute_LocalHistoryRoute":1,"SingleTickerProviderStateMixin":1,"TickerProviderStateMixin":1}'));
  var type$ = (function rtii() {
    var findType = H.findType;
    return {
      Action_Intent: findType("Action<Intent>"),
      AnimationMin_double: findType("AnimationMin<double>"),
      Animation_Offset: findType("Animation0<Offset>"),
      Animation_double: findType("Animation0<double>"),
      AnnotatedRegion_SystemUiOverlayStyle: findType("AnnotatedRegion<SystemUiOverlayStyle>"),
      AnnotationResult_MouseTrackerAnnotation: findType("AnnotationResult<MouseTrackerAnnotation>"),
      AssertionError: findType("AssertionError"),
      BasicMessageChannel_dynamic: findType("BasicMessageChannel<@>"),
      Blob: findType("Blob"),
      BodyElement: findType("BodyElement"),
      Border: findType("Border"),
      BorderDirectional: findType("BorderDirectional"),
      BorderRadius: findType("BorderRadius"),
      BorderRadiusTween: findType("BorderRadiusTween"),
      BoxConstraints: findType("BoxConstraints"),
      BoxParentData: findType("BoxParentData"),
      ByteData: findType("ByteData"),
      CallbackAction_ActivateIntent: findType("CallbackAction<ActivateIntent>"),
      ChangeNotifier: findType("ChangeNotifier"),
      ClipPathEngineLayer: findType("ClipPathEngineLayer"),
      ClipPathLayer: findType("ClipPathLayer"),
      ClipRectEngineLayer: findType("ClipRectEngineLayer"),
      ClipRectLayer: findType("ClipRectLayer"),
      Color: findType("Color"),
      ColorTween: findType("ColorTween"),
      ConstantMapView_Symbol_dynamic: findType("ConstantMapView<Symbol0,@>"),
      ConstantStringMap_String_LogicalKeyboardKey: findType("ConstantStringMap<String,LogicalKeyboardKey>"),
      ConstantStringMap_String_Null: findType("ConstantStringMap<String,Null>"),
      ContainerLayer: findType("ContainerLayer"),
      ContainerRenderObjectMixin_of_RenderObject_and_ContainerParentDataMixin_RenderObject: findType("ContainerRenderObjectMixin<RenderObject,ContainerParentDataMixin<RenderObject>>"),
      CupertinoUserInterfaceLevel: findType("CupertinoUserInterfaceLevel"),
      CurveTween: findType("CurveTween"),
      CustomPaint: findType("CustomPaint"),
      CustomSemanticsAction: findType("CustomSemanticsAction"),
      DebugCreator: findType("DebugCreator"),
      DefaultAssetBundle: findType("DefaultAssetBundle"),
      DefaultTextStyle: findType("DefaultTextStyle"),
      DiagnosticableTree: findType("DiagnosticableTree"),
      DiagnosticsNode: findType("DiagnosticsNode"),
      Directionality: findType("Directionality"),
      Document: findType("Document"),
      DragStartDetails: findType("DragStartDetails"),
      DragUpdateDetails: findType("DragUpdateDetails"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element0"),
      Element_2: findType("Element"),
      Error: findType("Error"),
      Event: findType("Event"),
      Exception: findType("Exception"),
      ExpandIterable__SemanticsSortGroup_SemanticsNode: findType("ExpandIterable<_SemanticsSortGroup,SemanticsNode>"),
      File: findType("File"),
      FileList: findType("FileList"),
      FlexParentData: findType("FlexParentData"),
      Float64List: findType("Float64List"),
      FlutterError: findType("FlutterError"),
      FocusNode: findType("FocusNode"),
      FocusScopeNode: findType("FocusScopeNode"),
      FontFace: findType("FontFace"),
      Function: findType("Function"),
      Future_Null: findType("Future<Null>"),
      Future_bool_Function: findType("Future<bool>()"),
      Future_dynamic: findType("Future<@>"),
      GeneralConstantMap_int_Color: findType("GeneralConstantMap<int,Color>"),
      GeneralConstantMap_int_LogicalKeyboardKey: findType("GeneralConstantMap<int,LogicalKeyboardKey>"),
      GeneralConstantMap_int_PhysicalKeyboardKey: findType("GeneralConstantMap<int,PhysicalKeyboardKey>"),
      GestureArenaEntry: findType("GestureArenaEntry"),
      GestureRecognizer: findType("GestureRecognizer"),
      GestureRecognizerFactoryWithHandlers_DoubleTapGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<DoubleTapGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_HorizontalDragGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<HorizontalDragGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_LongPressGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<LongPressGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_PanGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<PanGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_TapGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<TapGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_VerticalDragGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<VerticalDragGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers__ThumbPressGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<_ThumbPressGestureRecognizer>"),
      GestureRecognizerFactory_GestureRecognizer: findType("GestureRecognizerFactory<GestureRecognizer>"),
      GlobalKey_State_StatefulWidget: findType("GlobalKey<State<StatefulWidget>>"),
      GlobalObjectKey_NavigatorState: findType("GlobalObjectKey<NavigatorState>"),
      GlobalObjectKey_State_StatefulWidget: findType("GlobalObjectKey<State<StatefulWidget>>"),
      HashedObserverList_of_void_Function_FocusHighlightMode: findType("HashedObserverList<~(FocusHighlightMode)>"),
      HeapPriorityQueue__TaskEntry_dynamic: findType("HeapPriorityQueue<_TaskEntry<@>>"),
      Hero: findType("Hero"),
      HitTestResult: findType("HitTestResult"),
      HitTestTarget: findType("HitTestTarget"),
      HorizontalDragGestureRecognizer: findType("HorizontalDragGestureRecognizer"),
      HttpRequest: findType("HttpRequest"),
      IconTheme: findType("IconTheme"),
      Image: findType("Image"),
      ImageData: findType("ImageData"),
      IndexedSlot_Element: findType("IndexedSlot<Element>"),
      InheritedElement: findType("InheritedElement"),
      InheritedWidget: findType("InheritedWidget"),
      InkHighlight: findType("InkHighlight"),
      InputElement: findType("InputElement"),
      Int32List: findType("Int32List"),
      IntTween: findType("IntTween"),
      Intent: findType("Intent"),
      InteractiveInkFeature: findType("InteractiveInkFeature"),
      Iterable_dynamic: findType("Iterable<@>"),
      JSArray_AnnotatedSample: findType("JSArray<AnnotatedSample>"),
      JSArray_AnnotationEntry_MouseTrackerAnnotation: findType("JSArray<AnnotationEntry<MouseTrackerAnnotation>>"),
      JSArray_BoxShadow: findType("JSArray<BoxShadow>"),
      JSArray_CanvasElement: findType("JSArray<CanvasElement>"),
      JSArray_Color: findType("JSArray<Color>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_Directionality: findType("JSArray<Directionality>"),
      JSArray_Element: findType("JSArray<Element0>"),
      JSArray_Element_2: findType("JSArray<Element>"),
      JSArray_EngineLineMetrics: findType("JSArray<EngineLineMetrics>"),
      JSArray_FocusNode: findType("JSArray<FocusNode>"),
      JSArray_FrameReference_dynamic: findType("JSArray<FrameReference<@>>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_GestureArenaMember: findType("JSArray<GestureArenaMember>"),
      JSArray_HitTestEntry: findType("JSArray<HitTestEntry>"),
      JSArray_InkFeature: findType("JSArray<InkFeature>"),
      JSArray_InlineSpanSemanticsInformation: findType("JSArray<InlineSpanSemanticsInformation>"),
      JSArray_JsArray_double: findType("JSArray<JsArray<double>>"),
      JSArray_JsObject: findType("JSArray<JsObject>"),
      JSArray_LayoutId: findType("JSArray<LayoutId>"),
      JSArray_LicenseEntry: findType("JSArray<LicenseEntry>"),
      JSArray_Listenable: findType("JSArray<Listenable>"),
      JSArray_LocalizationsDelegate_dynamic: findType("JSArray<LocalizationsDelegate<@>>"),
      JSArray_Map_dynamic_dynamic: findType("JSArray<Map<@,@>>"),
      JSArray_Matrix4: findType("JSArray<Matrix40>"),
      JSArray_MeasurementResult: findType("JSArray<MeasurementResult>"),
      JSArray_Node: findType("JSArray<Node>"),
      JSArray_NodeValidator: findType("JSArray<NodeValidator>"),
      JSArray_OverlayEntry: findType("JSArray<OverlayEntry>"),
      JSArray_PageStorageKey_dynamic: findType("JSArray<PageStorageKey<@>>"),
      JSArray_PaintCommand: findType("JSArray<PaintCommand>"),
      JSArray_Paragraph: findType("JSArray<Paragraph>"),
      JSArray_PathCommand: findType("JSArray<PathCommand>"),
      JSArray_PersistedContainerSurface: findType("JSArray<PersistedContainerSurface>"),
      JSArray_PersistedSurface: findType("JSArray<PersistedSurface>"),
      JSArray_PlaceholderDimensions: findType("JSArray<PlaceholderDimensions>"),
      JSArray_PlaceholderSpan: findType("JSArray<PlaceholderSpan>"),
      JSArray_PointerData: findType("JSArray<PointerData>"),
      JSArray_PointerEvent: findType("JSArray<PointerEvent>"),
      JSArray_Rect: findType("JSArray<Rect>"),
      JSArray_RenderObject: findType("JSArray<RenderObject>"),
      JSArray_Route_dynamic: findType("JSArray<Route<@>>"),
      JSArray_ScrollPosition: findType("JSArray<ScrollPosition>"),
      JSArray_SemanticsNode: findType("JSArray<SemanticsNode>"),
      JSArray_SemanticsNodeUpdate: findType("JSArray<SemanticsNodeUpdate>"),
      JSArray_SemanticsObject: findType("JSArray<SemanticsObject>"),
      JSArray_ShapeBorder: findType("JSArray<ShapeBorder>"),
      JSArray_SkiaObject: findType("JSArray<SkiaObject>"),
      JSArray_StreamSubscription_Event: findType("JSArray<StreamSubscription<Event>>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_Subpath: findType("JSArray<Subpath>"),
      JSArray_TextBox: findType("JSArray<TextBox>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray_WidgetsBindingObserver: findType("JSArray<WidgetsBindingObserver>"),
      JSArray__AsyncBlock: findType("JSArray<_AsyncBlock>"),
      JSArray__BoxEdge: findType("JSArray<_BoxEdge>"),
      JSArray__DirectionalPolicyDataEntry: findType("JSArray<_DirectionalPolicyDataEntry>"),
      JSArray__InterestingSemanticsFragment: findType("JSArray<_InterestingSemanticsFragment>"),
      JSArray__LocationCount: findType("JSArray<_LocationCount>"),
      JSArray__MouseState: findType("JSArray<_MouseState>"),
      JSArray__PaintRequest: findType("JSArray<_PaintRequest>"),
      JSArray__Pending: findType("JSArray<_Pending>"),
      JSArray__PersistedSurfaceMatch: findType("JSArray<_PersistedSurfaceMatch>"),
      JSArray__PointAtTime: findType("JSArray<_PointAtTime>"),
      JSArray__ReadingOrderDirectionalGroupData: findType("JSArray<_ReadingOrderDirectionalGroupData>"),
      JSArray__ReadingOrderSortData: findType("JSArray<_ReadingOrderSortData>"),
      JSArray__RouteEntry: findType("JSArray<_RouteEntry>"),
      JSArray__SaveClipEntry: findType("JSArray<_SaveClipEntry>"),
      JSArray__SaveElementStackEntry: findType("JSArray<_SaveElementStackEntry>"),
      JSArray__SaveStackEntry: findType("JSArray<_SaveStackEntry>"),
      JSArray__SemanticsSortGroup: findType("JSArray<_SemanticsSortGroup>"),
      JSArray__StandardBottomSheet: findType("JSArray<_StandardBottomSheet>"),
      JSArray__TaskEntry_dynamic: findType("JSArray<_TaskEntry<@>>"),
      JSArray__TraversalSortNode: findType("JSArray<_TraversalSortNode>"),
      JSArray_bool: findType("JSArray<bool>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_num: findType("JSArray<num>"),
      JSArray_of_Future_bool_Function: findType("JSArray<Future<bool>()>"),
      JSArray_of_Stream_LicenseEntry_Function: findType("JSArray<Stream<LicenseEntry>()>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_Action_Intent: findType("JSArray<~(Action<Intent>)>"),
      JSArray_of_void_Function_AnimationStatus: findType("JSArray<~(AnimationStatus)>"),
      JSArray_of_void_Function_Duration: findType("JSArray<~(Duration)>"),
      JSArray_of_void_Function_GestureMode: findType("JSArray<~(GestureMode)>"),
      JSArray_of_void_Function_List_FrameTiming: findType("JSArray<~(List<FrameTiming>)>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSObject: findType("JSObject"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JsArray_double: findType("JsArray<double>"),
      JsArray_dynamic: findType("JsArray<@>"),
      JsArray_num: findType("JsArray<num>"),
      JsLinkedHashMap_Symbol_dynamic: findType("JsLinkedHashMap<Symbol0,@>"),
      KeepAliveNotification: findType("KeepAliveNotification"),
      KeepAliveParentDataMixin: findType("KeepAliveParentDataMixin"),
      Key: findType("Key"),
      KeyRange: findType("KeyRange"),
      KeyboardSide: findType("KeyboardSide"),
      LabeledGlobalKey_DrawerControllerState: findType("LabeledGlobalKey<DrawerControllerState>"),
      LabeledGlobalKey_OverlayState: findType("LabeledGlobalKey<OverlayState>"),
      LabeledGlobalKey_RawGestureDetectorState: findType("LabeledGlobalKey<RawGestureDetectorState>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      LabeledGlobalKey__OverlayEntryWidgetState: findType("LabeledGlobalKey<_OverlayEntryWidgetState>"),
      LayoutChangedNotification: findType("LayoutChangedNotification"),
      LicenseEntry: findType("LicenseEntry"),
      LinkedHashSet_MouseTrackerAnnotation: findType("LinkedHashSet<MouseTrackerAnnotation>"),
      List_LicenseEntry: findType("List<LicenseEntry>"),
      List_MeasurementResult: findType("List<MeasurementResult>"),
      List_OverlayEntry: findType("List<OverlayEntry>"),
      List_SemanticsNode: findType("List<SemanticsNode>"),
      List_dynamic: findType("List<@>"),
      Listenable: findType("Listenable"),
      Locale: findType("Locale"),
      LocalizationsDelegate_dynamic: findType("LocalizationsDelegate<@>"),
      LogicalKeyboardKey: findType("LogicalKeyboardKey"),
      LongPressGestureRecognizer: findType("LongPressGestureRecognizer"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_Type_dynamic: findType("Map<Type,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_void_Function_PointerEvent_and_Matrix4: findType("Map<~(PointerEvent0),Matrix4>"),
      MappedListIterable_String_StackFrame: findType("MappedListIterable<String,StackFrame>"),
      MappedListIterable_String_String: findType("MappedListIterable<String,String>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      MappedListIterable_TargetPlatform_PageTransitionsBuilder: findType("MappedListIterable<TargetPlatform,PageTransitionsBuilder>"),
      MappedListIterable__TraversalSortNode_SemanticsNode: findType("MappedListIterable<_TraversalSortNode,SemanticsNode>"),
      MappedListIterable_int_SemanticsNode: findType("MappedListIterable<int,SemanticsNode>"),
      MappedListIterable_int_Widget: findType("MappedListIterable<int,Widget>"),
      MaterialLocalizations: findType("MaterialLocalizations"),
      MaterialState: findType("MaterialState"),
      Matrix4: findType("Matrix4"),
      MediaQuery: findType("MediaQuery"),
      MessagePort: findType("MessagePort"),
      ModifierKey: findType("ModifierKey"),
      MouseTrackerAnnotation: findType("MouseTrackerAnnotation"),
      MultiChildLayoutParentData: findType("MultiChildLayoutParentData"),
      MultiChildRenderObjectWidget: findType("MultiChildRenderObjectWidget"),
      NativeByteBuffer: findType("NativeByteBuffer"),
      NativeTypedArrayOfInt: findType("NativeTypedArrayOfInt"),
      NativeTypedData: findType("NativeTypedData"),
      NativeUint8List: findType("NativeUint8List"),
      NavigatorObserver: findType("NavigatorObserver"),
      NavigatorState: findType("NavigatorState"),
      Node: findType("Node"),
      Null: findType("Null"),
      Object: findType("Object"),
      ObserverList_of_void_Function: findType("ObserverList<~()>"),
      ObserverList_of_void_Function_Action_Intent: findType("ObserverList<~(Action<Intent>)>"),
      ObserverList_of_void_Function_AnimationStatus: findType("ObserverList<~(AnimationStatus)>"),
      Offset: findType("Offset"),
      OffsetEngineLayer: findType("OffsetEngineLayer"),
      OffsetLayer: findType("OffsetLayer"),
      Offstage: findType("Offstage"),
      OpacityEngineLayer: findType("OpacityEngineLayer"),
      OpacityLayer: findType("OpacityLayer"),
      OverlayEntry: findType("OverlayEntry"),
      OverlayState: findType("OverlayState"),
      PageStorage: findType("PageStorage"),
      PanGestureRecognizer: findType("PanGestureRecognizer"),
      ParagraphGeometricStyle: findType("ParagraphGeometricStyle"),
      ParagraphRuler: findType("ParagraphRuler"),
      ParentDataElement_KeepAliveParentDataMixin: findType("ParentDataElement<KeepAliveParentDataMixin>"),
      ParentDataWidget_KeepAliveParentDataMixin: findType("ParentDataWidget<KeepAliveParentDataMixin>"),
      PersistedSurface: findType("PersistedSurface"),
      PhysicalKeyboardKey: findType("PhysicalKeyboardKey"),
      PhysicalModelLayer: findType("PhysicalModelLayer"),
      PhysicalShapeEngineLayer: findType("PhysicalShapeEngineLayer"),
      PipelineOwner: findType("PipelineOwner"),
      Point_num: findType("Point<num>"),
      PointerAddedEvent: findType("PointerAddedEvent"),
      PointerCancelEvent: findType("PointerCancelEvent"),
      PointerDeviceKind: findType("PointerDeviceKind"),
      PointerDownEvent: findType("PointerDownEvent"),
      PointerEnterEvent: findType("PointerEnterEvent"),
      PointerEvent: findType("PointerEvent0"),
      PointerEvent_2: findType("PointerEvent"),
      PointerExitEvent: findType("PointerExitEvent"),
      PointerHoverEvent: findType("PointerHoverEvent"),
      PointerMoveEvent: findType("PointerMoveEvent"),
      PointerRemovedEvent: findType("PointerRemovedEvent"),
      PointerScrollEvent: findType("PointerScrollEvent"),
      PointerUpEvent: findType("PointerUpEvent"),
      PrimaryScrollController: findType("PrimaryScrollController"),
      Profile: findType("Profile"),
      ProgressEvent: findType("ProgressEvent"),
      ProxyWidget: findType("ProxyWidget"),
      Rectangle_num: findType("Rectangle<num>"),
      RegExp: findType("RegExp"),
      RenderAbsorbPointer: findType("RenderAbsorbPointer"),
      RenderAbstractViewport: findType("RenderAbstractViewport"),
      RenderBox: findType("RenderBox"),
      RenderIgnorePointer: findType("RenderIgnorePointer"),
      RenderObject: findType("RenderObject"),
      RenderObjectElement: findType("RenderObjectElement"),
      RenderObjectToWidgetAdapter_RenderBox: findType("RenderObjectToWidgetAdapter<RenderBox>"),
      RenderObjectToWidgetElement_RenderBox: findType("RenderObjectToWidgetElement<RenderBox>"),
      RenderObjectWidget: findType("RenderObjectWidget"),
      RenderObjectWithChildMixin_RenderObject: findType("RenderObjectWithChildMixin<RenderObject>"),
      RenderSemanticsGestureHandler: findType("RenderSemanticsGestureHandler"),
      RenderSliver: findType("RenderSliver"),
      RenderSliverMultiBoxAdaptor: findType("RenderSliverMultiBoxAdaptor"),
      RenderViewport: findType("RenderViewport"),
      ReverseTween_Rect: findType("ReverseTween<Rect>"),
      ReversedListIterable_Widget: findType("ReversedListIterable<Widget>"),
      ReversedListIterable__SemanticsSortGroup: findType("ReversedListIterable<_SemanticsSortGroup>"),
      Role: findType("Role"),
      RoleManager: findType("RoleManager"),
      RoutePopDisposition: findType("RoutePopDisposition"),
      ScaffoldFeatureController_SnackBar_SnackBarClosedReason: findType("ScaffoldFeatureController<SnackBar,SnackBarClosedReason>"),
      ScaffoldState: findType("ScaffoldState"),
      ScriptElement: findType("ScriptElement0"),
      ScrollConfiguration: findType("ScrollConfiguration"),
      ScrollNotification: findType("ScrollNotification"),
      ScrollPosition: findType("ScrollPosition"),
      ScrollUpdateNotification: findType("ScrollUpdateNotification"),
      ScrollbarPainter: findType("ScrollbarPainter"),
      SemanticsAction: findType("SemanticsAction"),
      SemanticsNode: findType("SemanticsNode"),
      SemanticsObject: findType("SemanticsObject"),
      SemanticsOwner: findType("SemanticsOwner"),
      SemanticsTag: findType("SemanticsTag"),
      ServiceExtensionResponse: findType("ServiceExtensionResponse"),
      ShapeBorder: findType("ShapeBorder"),
      ShapeBorderClipper: findType("ShapeBorderClipper"),
      ShapeBorderTween: findType("ShapeBorderTween"),
      SingleChildRenderObjectWidget: findType("SingleChildRenderObjectWidget"),
      SliverConstraints: findType("SliverConstraints"),
      SliverMultiBoxAdaptorElement: findType("SliverMultiBoxAdaptorElement"),
      SliverMultiBoxAdaptorParentData: findType("SliverMultiBoxAdaptorParentData"),
      SliverMultiBoxAdaptorWidget: findType("SliverMultiBoxAdaptorWidget"),
      SliverPhysicalParentData: findType("SliverPhysicalParentData"),
      StackParentData: findType("StackParentData"),
      StatefulElement: findType("StatefulElement"),
      StatefulWidget: findType("StatefulWidget"),
      StatelessWidget: findType("StatelessWidget"),
      String: findType("String"),
      Subpath: findType("Subpath"),
      SvgElement: findType("SvgElement"),
      SynchronousFuture_CupertinoLocalizations: findType("SynchronousFuture<CupertinoLocalizations>"),
      SynchronousFuture_Map_Type_dynamic: findType("SynchronousFuture<Map<Type,@>>"),
      SynchronousFuture_MaterialLocalizations: findType("SynchronousFuture<MaterialLocalizations>"),
      SynchronousFuture_WidgetsLocalizations: findType("SynchronousFuture<WidgetsLocalizations>"),
      SystemUiOverlayStyle: findType("SystemUiOverlayStyle"),
      TapGestureRecognizer: findType("TapGestureRecognizer"),
      TemplateElement: findType("TemplateElement"),
      TextAreaElement: findType("TextAreaElement"),
      TextBaseline: findType("TextBaseline"),
      TextPainter: findType("TextPainter"),
      TextParentData: findType("TextParentData"),
      TextStyle: findType("TextStyle"),
      TextStyleTween: findType("TextStyleTween"),
      ThemeData: findType("ThemeData"),
      ThemeDataTween: findType("ThemeDataTween"),
      Timer: findType("Timer"),
      Timeseries: findType("Timeseries"),
      TooltipTheme: findType("TooltipTheme"),
      TransformEngineLayer: findType("TransformEngineLayer"),
      TransformLayer: findType("TransformLayer"),
      Tween_double: findType("Tween<double>"),
      Type: findType("Type"),
      TypedData: findType("TypedData"),
      Uint8List: findType("Uint8List"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      Uri: findType("Uri"),
      ValueKey_Key: findType("ValueKey<Key>"),
      ValueKey_Object: findType("ValueKey<Object>"),
      ValueKey_int: findType("ValueKey<int>"),
      VelocityTracker: findType("VelocityTracker"),
      VerticalDragGestureRecognizer: findType("VerticalDragGestureRecognizer"),
      Viewport: findType("Viewport"),
      WhereTypeIterable_MetaElement: findType("WhereTypeIterable<MetaElement>"),
      WhereTypeIterator_FocusScopeNode: findType("WhereTypeIterator<FocusScopeNode>"),
      Widget: findType("Widget"),
      WidgetsBindingObserver: findType("WidgetsBindingObserver"),
      WidgetsLocalizations: findType("WidgetsLocalizations"),
      Window: findType("Window"),
      WorkerGlobalScope: findType("WorkerGlobalScope"),
      _ActionsMarker: findType("_ActionsMarker"),
      _AnimationSwap_double: findType("_AnimationSwap<double>"),
      _AsyncCompleter_ByteData: findType("_AsyncCompleter<ByteData>"),
      _AsyncCompleter_HttpRequest: findType("_AsyncCompleter<HttpRequest>"),
      _AsyncCompleter_List_LicenseEntry: findType("_AsyncCompleter<List<LicenseEntry>>"),
      _AsyncCompleter_Profile: findType("_AsyncCompleter<Profile>"),
      _AsyncCompleter_String: findType("_AsyncCompleter<String>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _ButtonSanitizer: findType("_ButtonSanitizer"),
      _CachedImage: findType("_CachedImage"),
      _ChildNodeListLazy: findType("_ChildNodeListLazy"),
      _DirectionalPolicyData: findType("_DirectionalPolicyData"),
      _EffectiveTickerMode: findType("_EffectiveTickerMode"),
      _ElementEventStreamImpl_Event: findType("_ElementEventStreamImpl<Event>"),
      _ElementEventStreamImpl_KeyboardEvent: findType("_ElementEventStreamImpl<KeyboardEvent>"),
      _ElementEventStreamImpl_MouseEvent: findType("_ElementEventStreamImpl<MouseEvent>"),
      _FocusMarker: findType("_FocusMarker"),
      _FocusTraversalGroupInfo: findType("_FocusTraversalGroupInfo"),
      _FocusTraversalGroupMarker: findType("_FocusTraversalGroupMarker"),
      _FrameCallbackEntry: findType("_FrameCallbackEntry"),
      _FrozenElementList_Element: findType("_FrozenElementList<Element0>"),
      _Future_ByteData: findType("_Future<ByteData>"),
      _Future_HttpRequest: findType("_Future<HttpRequest>"),
      _Future_List_LicenseEntry: findType("_Future<List<LicenseEntry>>"),
      _Future_Profile: findType("_Future<Profile>"),
      _Future_ServiceExtensionResponse: findType("_Future<ServiceExtensionResponse>"),
      _Future_String: findType("_Future<String>"),
      _Future_bool: findType("_Future<bool>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_void: findType("_Future<~>"),
      _GestureArena: findType("_GestureArena"),
      _HeroFlight: findType("_HeroFlight"),
      _HeroState: findType("_HeroState"),
      _HighlightType: findType("_HighlightType"),
      _IdentityHashMap_dynamic_dynamic: findType("_IdentityHashMap<@,@>"),
      _InheritedCupertinoTheme: findType("_InheritedCupertinoTheme"),
      _InheritedTheme: findType("_InheritedTheme"),
      _InkResponseState_InkResponse: findType("_InkResponseState<InkResponse>"),
      _InterestingSemanticsFragment: findType("_InterestingSemanticsFragment"),
      _LiveImage: findType("_LiveImage"),
      _LocalizationsScope: findType("_LocalizationsScope"),
      _ModalScopeStatus: findType("_ModalScopeStatus"),
      _MouseState: findType("_MouseState"),
      _PagePosition: findType("_PagePosition"),
      _PendingImage: findType("_PendingImage"),
      _PointerState: findType("_PointerState"),
      _ReadingOrderDirectionalGroupData: findType("_ReadingOrderDirectionalGroupData"),
      _ReadingOrderSortData: findType("_ReadingOrderSortData"),
      _RecordingWidgetsBinding: findType("_RecordingWidgetsBinding"),
      _RenderInkFeatures: findType("_RenderInkFeatures"),
      _RenderTheatre: findType("_RenderTheatre"),
      _RingBuffer__StoredMessage: findType("_RingBuffer<_StoredMessage>"),
      _RouteEntry: findType("_RouteEntry"),
      _SanitizedDetails: findType("_SanitizedDetails"),
      _SaveClipEntry: findType("_SaveClipEntry"),
      _ScrollableScope: findType("_ScrollableScope"),
      _StoredMessage: findType("_StoredMessage"),
      _TabControllerScope: findType("_TabControllerScope"),
      _TapTracker: findType("_TapTracker"),
      _TaskEntry_dynamic: findType("_TaskEntry<@>"),
      _Theatre: findType("_Theatre"),
      _UnmodifiableSet_String: findType("_UnmodifiableSet<String>"),
      _WidgetTicker: findType("_WidgetTicker"),
      bool: findType("bool"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      int: findType("int"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_AnimationStatus: findType("~(AnimationStatus)"),
      void_Function_Duration: findType("~(Duration)"),
      void_Function_FocusHighlightMode: findType("~(FocusHighlightMode)"),
      void_Function_List_FrameTiming: findType("~(List<FrameTiming>)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_PointerEvent: findType("~(PointerEvent0)"),
      void_Function_RawKeyEvent: findType("~(RawKeyEvent)"),
      void_Function_dynamic: findType("~(@)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    C.BodyElement_methods = W.BodyElement.prototype;
    C.CanvasRenderingContext2D_methods = W.CanvasRenderingContext2D.prototype;
    C.CssStyleDeclaration_methods = W.CssStyleDeclaration.prototype;
    C.DivElement_methods = W.DivElement.prototype;
    C.HttpRequest_methods = W.HttpRequest.prototype;
    C.InputElement_methods = W.InputElement.prototype;
    C.Interceptor_methods = J.Interceptor.prototype;
    C.JSArray_methods = J.JSArray.prototype;
    C.JSBool_methods = J.JSBool.prototype;
    C.JSDouble_methods = J.JSDouble.prototype;
    C.JSInt_methods = J.JSInt.prototype;
    C.JSNull_methods = J.JSNull.prototype;
    C.JSNumber_methods = J.JSNumber.prototype;
    C.JSString_methods = J.JSString.prototype;
    C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    C.LabelElement_methods = W.LabelElement.prototype;
    C.MediaQueryList_methods = W.MediaQueryList.prototype;
    C.MetaElement_methods = W.MetaElement.prototype;
    C.NativeByteBuffer_methods = H.NativeByteBuffer.prototype;
    C.NativeByteData_methods = H.NativeByteData.prototype;
    C.NativeFloat64List_methods = H.NativeFloat64List.prototype;
    C.NativeInt32List_methods = H.NativeInt32List.prototype;
    C.NativeUint8List_methods = H.NativeUint8List.prototype;
    C.ParagraphElement_methods = W.ParagraphElement.prototype;
    C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    C.StyleElement_methods = W.StyleElement.prototype;
    C.TableElement_methods = W.TableElement.prototype;
    C.TouchList_methods = W.TouchList.prototype;
    C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    C.WheelEvent_methods = W.WheelEvent.prototype;
    C.Window_methods = W.Window.prototype;
    C._Clipboard_methods = W._Clipboard.prototype;
    C.AccessibilityMode_0 = new H.AccessibilityMode("AccessibilityMode.unknown");
    C.AlignmentDirectional_m1_m1 = new K.AlignmentDirectional(-1, -1);
    C.Alignment_0_0 = new K.Alignment(0, 0);
    C.Alignment_0_1 = new K.Alignment(0, 1);
    C.Alignment_0_m1 = new K.Alignment(0, -1);
    C.Alignment_1_0 = new K.Alignment(1, 0);
    C.Alignment_m1_0 = new K.Alignment(-1, 0);
    C.AlwaysScrollableScrollPhysics_null = new L.AlwaysScrollableScrollPhysics(null);
    C.AnimationBehavior_0 = new G.AnimationBehavior("AnimationBehavior.normal");
    C.AnimationBehavior_1 = new G.AnimationBehavior("AnimationBehavior.preserve");
    C.AnimationStatus_0 = new X.AnimationStatus("AnimationStatus.dismissed");
    C.AnimationStatus_1 = new X.AnimationStatus("AnimationStatus.forward");
    C.AnimationStatus_2 = new X.AnimationStatus("AnimationStatus.reverse");
    C.AnimationStatus_3 = new X.AnimationStatus("AnimationStatus.completed");
    C.AppBarTheme_ccN = new V.AppBarTheme(null, null, null, null, null, null);
    C.AppLifecycleState_0 = new P.AppLifecycleState("AppLifecycleState.resumed");
    C.AppLifecycleState_1 = new P.AppLifecycleState("AppLifecycleState.inactive");
    C.AppLifecycleState_2 = new P.AppLifecycleState("AppLifecycleState.paused");
    C.AppLifecycleState_3 = new P.AppLifecycleState("AppLifecycleState.detached");
    C.AxisDirection_0 = new G.AxisDirection("AxisDirection.up");
    C.AxisDirection_1 = new G.AxisDirection("AxisDirection.right");
    C.AxisDirection_2 = new G.AxisDirection("AxisDirection.down");
    C.AxisDirection_3 = new G.AxisDirection("AxisDirection.left");
    C.Axis_0 = new G.Axis("Axis.horizontal");
    C.Axis_1 = new G.Axis("Axis.vertical");
    C.BackButtonIcon_null = new R.BackButtonIcon(null);
    C.BackButton_null = new R.BackButton(null);
    C.C_StandardMessageCodec0 = new U.StandardMessageCodec0();
    C.BasicMessageChannel_8hp = new A.BasicMessageChannel("flutter/accessibility", C.C_StandardMessageCodec0, type$.BasicMessageChannel_dynamic);
    C.C_JSONMessageCodec = new U.JSONMessageCodec0();
    C.BasicMessageChannel_Cfi = new A.BasicMessageChannel("flutter/keyevent", C.C_JSONMessageCodec, type$.BasicMessageChannel_dynamic);
    C.C_StringCodec = new U.StringCodec0();
    C.BasicMessageChannel_No7 = new A.BasicMessageChannel("flutter/lifecycle", C.C_StringCodec, H.findType("BasicMessageChannel<String>"));
    C.BasicMessageChannel_Qma = new A.BasicMessageChannel("flutter/system", C.C_JSONMessageCodec, type$.BasicMessageChannel_dynamic);
    C.BlendMode_0 = new P.BlendMode("BlendMode.clear");
    C.BlendMode_1 = new P.BlendMode("BlendMode.src");
    C.BlendMode_10 = new P.BlendMode("BlendMode.dstATop");
    C.BlendMode_11 = new P.BlendMode("BlendMode.xor");
    C.BlendMode_12 = new P.BlendMode("BlendMode.plus");
    C.BlendMode_13 = new P.BlendMode("BlendMode.modulate");
    C.BlendMode_14 = new P.BlendMode("BlendMode.screen");
    C.BlendMode_15 = new P.BlendMode("BlendMode.overlay");
    C.BlendMode_16 = new P.BlendMode("BlendMode.darken");
    C.BlendMode_17 = new P.BlendMode("BlendMode.lighten");
    C.BlendMode_18 = new P.BlendMode("BlendMode.colorDodge");
    C.BlendMode_19 = new P.BlendMode("BlendMode.colorBurn");
    C.BlendMode_2 = new P.BlendMode("BlendMode.dst");
    C.BlendMode_20 = new P.BlendMode("BlendMode.hardLight");
    C.BlendMode_21 = new P.BlendMode("BlendMode.softLight");
    C.BlendMode_22 = new P.BlendMode("BlendMode.difference");
    C.BlendMode_23 = new P.BlendMode("BlendMode.exclusion");
    C.BlendMode_24 = new P.BlendMode("BlendMode.multiply");
    C.BlendMode_25 = new P.BlendMode("BlendMode.hue");
    C.BlendMode_26 = new P.BlendMode("BlendMode.saturation");
    C.BlendMode_27 = new P.BlendMode("BlendMode.color");
    C.BlendMode_28 = new P.BlendMode("BlendMode.luminosity");
    C.BlendMode_3 = new P.BlendMode("BlendMode.srcOver");
    C.BlendMode_4 = new P.BlendMode("BlendMode.dstOver");
    C.BlendMode_5 = new P.BlendMode("BlendMode.srcIn");
    C.BlendMode_6 = new P.BlendMode("BlendMode.dstIn");
    C.BlendMode_7 = new P.BlendMode("BlendMode.srcOut");
    C.BlendMode_8 = new P.BlendMode("BlendMode.dstOut");
    C.BlendMode_9 = new P.BlendMode("BlendMode.srcATop");
    C.BlurStyle_0 = new P.BlurStyle("BlurStyle.normal");
    C.BlurStyle_1 = new P.BlurStyle("BlurStyle.solid");
    C.BlurStyle_2 = new P.BlurStyle("BlurStyle.outer");
    C.BlurStyle_3 = new P.BlurStyle("BlurStyle.inner");
    C.Radius_0_0 = new P.Radius(0, 0);
    C.BorderRadius_tLn = new K.BorderRadius(C.Radius_0_0, C.Radius_0_0, C.Radius_0_0, C.Radius_0_0);
    C.Radius_4_4 = new P.Radius(4, 4);
    C.BorderRadius_tLn0 = new K.BorderRadius(C.Radius_4_4, C.Radius_4_4, C.Radius_4_4, C.Radius_4_4);
    C.Color_4278190080 = new P.Color(4278190080);
    C.BorderStyle_0 = new Y.BorderStyle("BorderStyle.none");
    C.BorderSide_m7u = new Y.BorderSide(C.Color_4278190080, 0, C.BorderStyle_0);
    C.BorderStyle_1 = new Y.BorderStyle("BorderStyle.solid");
    C.BottomAppBarTheme_null_null_null = new D.BottomAppBarTheme(null, null, null);
    C.BottomNavigationBarThemeData_ABh = new M.BottomNavigationBarThemeData(null, null, null, null, null, null, null, null, null, null, null);
    C.BottomSheetThemeData_M2D = new X.BottomSheetThemeData(null, null, null, null, null, null);
    C.BouncingScrollPhysics_null = new L.BouncingScrollPhysics(null);
    C.BoxConstraints_40_40_40_40 = new S.BoxConstraints(40, 40, 40, 40);
    C.BoxConstraints_ALM = new S.BoxConstraints(1 / 0, 1 / 0, 1 / 0, 1 / 0);
    C.BoxConstraints_CWG = new S.BoxConstraints(0, 1 / 0, 0, 56);
    C.BoxConstraints_EcO = new S.BoxConstraints(56, 56, 0, 1 / 0);
    C.BoxConstraints_mlX0 = new S.BoxConstraints(0, 1 / 0, 0, 1 / 0);
    C.BoxConstraints_mlX = new S.BoxConstraints(48, 1 / 0, 48, 1 / 0);
    C.BoxHeightStyle_0 = new P.BoxHeightStyle("BoxHeightStyle.tight");
    C.BoxShape_0 = new F.BoxShape("BoxShape.rectangle");
    C.BoxShape_1 = new F.BoxShape("BoxShape.circle");
    C.BoxWidthStyle_0 = new P.BoxWidthStyle("BoxWidthStyle.tight");
    C.Brightness_0 = new P.Brightness("Brightness.dark");
    C.Brightness_1 = new P.Brightness("Brightness.light");
    C.BrowserEngine_0 = new H.BrowserEngine("BrowserEngine.blink");
    C.BrowserEngine_1 = new H.BrowserEngine("BrowserEngine.webkit");
    C.BrowserEngine_2 = new H.BrowserEngine("BrowserEngine.firefox");
    C.BrowserEngine_3 = new H.BrowserEngine("BrowserEngine.edge");
    C.BrowserEngine_4 = new H.BrowserEngine("BrowserEngine.ie11");
    C.BrowserEngine_5 = new H.BrowserEngine("BrowserEngine.unknown");
    C.ButtonBarLayoutBehavior_1 = new M.ButtonBarLayoutBehavior("ButtonBarLayoutBehavior.padded");
    C.ButtonBarThemeData_A0t = new M.ButtonBarThemeData(null, null, null, null, null, null, null, null, null);
    C.ButtonTextTheme_0 = new M.ButtonTextTheme("ButtonTextTheme.normal");
    C.ButtonTextTheme_1 = new M.ButtonTextTheme("ButtonTextTheme.accent");
    C.ButtonTextTheme_2 = new M.ButtonTextTheme("ButtonTextTheme.primary");
    C.C_ActionDispatcher = new U.ActionDispatcher();
    C.C_ActivateIntent = new U.ActivateIntent();
    C.C_AssetManager = new H.AssetManager();
    C.C_Base64Encoder = new P.Base64Encoder();
    C.C_Base64Codec = new P.Base64Codec();
    C.C_BrowserPlatformLocation = new H.BrowserPlatformLocation();
    C.C_DefaultCupertinoLocalizations = new L.DefaultCupertinoLocalizations();
    C.C_DefaultMaterialLocalizations = new U.DefaultMaterialLocalizations();
    C.Size_100_100 = new P.Size(100, 100);
    C.C_DefaultShaderWarmUp = new D.DefaultShaderWarmUp();
    C.C_DefaultTransitionDelegate = new K.DefaultTransitionDelegate();
    C.C_DefaultWidgetsLocalizations = new L.DefaultWidgetsLocalizations();
    C.C_EmailInputType = new H.EmailInputType();
    C.C_EmptyIterator = new H.EmptyIterator();
    C.C_Endian0 = new P.Endian();
    C.C_Endian = new P.Endian();
    C.C_FadeUpwardsPageTransitionsBuilder = new K.FadeUpwardsPageTransitionsBuilder();
    C.C_HashLocationStrategy = new H.HashLocationStrategy();
    C.FloatingLabelBehavior_1 = new L.FloatingLabelBehavior();
    C.C_InputDecorationTheme = new L.InputDecorationTheme();
    C.C_JSONMessageCodec0 = new H.JSONMessageCodec();
    C.C_JSONMethodCodec0 = new H.JSONMethodCodec();
    C.C_JSONMethodCodec = new U.JSONMethodCodec0();
    C.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    C.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    C.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    C.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    C.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    C.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    C.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    C.C_JS_CONST3 = function(hooks) { return hooks; }
;
    C.C_JsonCodec = new P.JsonCodec();
    C.C_MultilineInputType = new H.MultilineInputType();
    C.C_NextFocusIntent = new U.NextFocusIntent();
    C.C_NumberInputType = new H.NumberInputType();
    C.C_Object = new P.Object();
    C.C_OutOfMemoryError = new P.OutOfMemoryError();
    C.C_PageTransitionsTheme = new K.PageTransitionsTheme();
    C.C_PaintRestore = new H.PaintRestore();
    C.C_PaintSave = new H.PaintSave();
    C.C_PhoneInputType = new H.PhoneInputType();
    C.C_PointerSupportDetector = new H.PointerSupportDetector();
    C.C_PreviousFocusIntent = new U.PreviousFocusIntent();
    C.C_ScrollBehavior = new K.ScrollBehavior();
    C.C_StandardMessageCodec = new H.StandardMessageCodec();
    C.C_StandardMethodCodec = new H.StandardMethodCodec();
    C.C_StringCodec0 = new H.StringCodec();
    C.C_TextInputType = new H.TextInputType();
    C.C_Threshold = new Z.Threshold();
    C.C_UrlInputType = new H.UrlInputType();
    C.C_Utf8Codec = new P.Utf8Codec();
    C.C_Utf8Encoder = new P.Utf8Encoder();
    C.C_WindowPadding = new P.WindowPadding();
    C.C__AlwaysCompleteAnimation = new S._AlwaysCompleteAnimation();
    C.C__AlwaysDismissedAnimation = new S._AlwaysDismissedAnimation();
    C.C__CupertinoLocalizationsDelegate = new L._CupertinoLocalizationsDelegate();
    C.Color_4294967295 = new P.Color(4294967295);
    C.CupertinoDynamicColor_qQo = new E.CupertinoDynamicColor(C.Color_4278190080, "label", null, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, 0);
    C.Color_4288256409 = new P.Color(4288256409);
    C.Color_4285887861 = new P.Color(4285887861);
    C.CupertinoDynamicColor_YIZ = new E.CupertinoDynamicColor(C.Color_4288256409, "inactiveGray", null, C.Color_4288256409, C.Color_4285887861, C.Color_4288256409, C.Color_4285887861, C.Color_4288256409, C.Color_4285887861, C.Color_4288256409, C.Color_4285887861, 0);
    C.C__CupertinoTextThemeDefaults = new K._CupertinoTextThemeDefaults();
    C.Color_4278221567 = new P.Color(4278221567);
    C.Color_4278879487 = new P.Color(4278879487);
    C.Color_4278206685 = new P.Color(4278206685);
    C.Color_4282424575 = new P.Color(4282424575);
    C.CupertinoDynamicColor_948 = new E.CupertinoDynamicColor(C.Color_4278221567, "systemBlue", null, C.Color_4278221567, C.Color_4278879487, C.Color_4278206685, C.Color_4282424575, C.Color_4278221567, C.Color_4278879487, C.Color_4278206685, C.Color_4282424575, 0);
    C.Color_4280032286 = new P.Color(4280032286);
    C.Color_4280558630 = new P.Color(4280558630);
    C.CupertinoDynamicColor_k0n = new E.CupertinoDynamicColor(C.Color_4294967295, "systemBackground", null, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4280032286, C.Color_4294967295, C.Color_4280558630, 0);
    C.Color_4042914297 = new P.Color(4042914297);
    C.Color_4028439837 = new P.Color(4028439837);
    C.CupertinoDynamicColor_wEo = new E.CupertinoDynamicColor(C.Color_4042914297, null, null, C.Color_4042914297, C.Color_4028439837, C.Color_4042914297, C.Color_4028439837, C.Color_4042914297, C.Color_4028439837, C.Color_4042914297, C.Color_4028439837, 0);
    C.C__CupertinoThemeDefaults = new K._CupertinoThemeDefaults();
    C.C__DecelerateCurve = new Z._DecelerateCurve();
    C.C__DefaultBinaryMessenger = new N._DefaultBinaryMessenger();
    C.C__DefaultHeroTag = new E._DefaultHeroTag();
    C.C__DelayedDone = new P._DelayedDone();
    C.C__EndFloatFabLocation = new A._EndFloatFabLocation();
    C.C__HashEnd = new P._HashEnd();
    C.C__InkSplashFactory = new U._InkSplashFactory();
    C.C__Linear = new Z._Linear();
    C.C__MaterialLocalizationsDelegate = new U._MaterialLocalizationsDelegate();
    C.C__NoDefaultValue = new Y._NoDefaultValue();
    C.C__RootZone = new P._RootZone();
    C.C__ScalingFabMotionAnimator = new A._ScalingFabMotionAnimator();
    C.C__StringStackTrace = new P._StringStackTrace();
    C.C__ToolbarContainerLayout = new E._ToolbarContainerLayout();
    C.C__WidgetsLocalizationsDelegate = new L._WidgetsLocalizationsDelegate();
    C.CacheExtentStyle_0 = new Q.CacheExtentStyle("CacheExtentStyle.pixel");
    C.CacheExtentStyle_1 = new Q.CacheExtentStyle("CacheExtentStyle.viewport");
    C.CardTheme_hKX = new A.CardTheme(null, null, null, null, null, null);
    C.CircleBorder_61T = new X.CircleBorder(C.BorderSide_m7u);
    C.ClampingScrollPhysics_null = new L.ClampingScrollPhysics(null);
    C.ClipOp_0 = new P.ClipOp("ClipOp.difference");
    C.ClipOp_1 = new P.ClipOp("ClipOp.intersect");
    C.Clip_0 = new P.Clip("Clip.none");
    C.Clip_1 = new P.Clip("Clip.hardEdge");
    C.Clip_2 = new P.Clip("Clip.antiAlias");
    C.Clip_3 = new P.Clip("Clip.antiAliasWithSaveLayer");
    C.CloseCommand_3 = new H.CloseCommand(3);
    C.Color_0 = new P.Color(0);
    C.Color_1087163596 = new P.Color(1087163596);
    C.Color_1627389952 = new P.Color(1627389952);
    C.Color_1660944383 = new P.Color(1660944383);
    C.Color_16777215 = new P.Color(16777215);
    C.Color_1723645116 = new P.Color(1723645116);
    C.Color_1724434632 = new P.Color(1724434632);
    C.Color_2164260863 = new P.Color(2164260863);
    C.Color_2315255808 = new P.Color(2315255808);
    C.Color_3019898879 = new P.Color(3019898879);
    C.Color_4039164096 = new P.Color(4039164096);
    C.Color_4278255360 = new P.Color(4278255360);
    C.Color_4281348144 = new P.Color(4281348144);
    C.Color_4282549748 = new P.Color(4282549748);
    C.Color_4294901760 = new P.Color(4294901760);
    C.Color_520093696 = new P.Color(520093696);
    C.Color_536870911 = new P.Color(536870911);
    C.CrossAxisAlignment_0 = new F.CrossAxisAlignment("CrossAxisAlignment.start");
    C.CrossAxisAlignment_1 = new F.CrossAxisAlignment("CrossAxisAlignment.end");
    C.CrossAxisAlignment_2 = new F.CrossAxisAlignment("CrossAxisAlignment.center");
    C.CrossAxisAlignment_3 = new F.CrossAxisAlignment("CrossAxisAlignment.stretch");
    C.CrossAxisAlignment_4 = new F.CrossAxisAlignment("CrossAxisAlignment.baseline");
    C.Cubic_2Vk = new Z.Cubic(0.18, 1, 0.04, 1);
    C.Cubic_JUR = new Z.Cubic(0.25, 0.1, 0.25, 1);
    C.Cubic_JUR0 = new Z.Cubic(0.42, 0, 1, 1);
    C.Cubic_OcD = new Z.Cubic(0.67, 0.03, 0.65, 0.09);
    C.Cubic_ifx = new Z.Cubic(0.4, 0, 0.2, 1);
    C.Cubic_izR = new Z.Cubic(0.35, 0.91, 0.33, 0.97);
    C.Cubic_xDo0 = new Z.Cubic(0, 0, 0.58, 1);
    C.Cubic_xDo = new Z.Cubic(0.42, 0, 0.58, 1);
    C.Color_1493172224 = new P.Color(1493172224);
    C.CupertinoDynamicColor_zPV = new E.CupertinoDynamicColor(C.Color_1493172224, null, null, C.Color_1493172224, C.Color_2164260863, C.Color_1493172224, C.Color_2164260863, C.Color_1493172224, C.Color_2164260863, C.Color_1493172224, C.Color_2164260863, 0);
    C.CupertinoUserInterfaceLevelData_0 = new K.CupertinoUserInterfaceLevelData("CupertinoUserInterfaceLevelData.base");
    C.CupertinoUserInterfaceLevelData_1 = new K.CupertinoUserInterfaceLevelData("CupertinoUserInterfaceLevelData.elevated");
    C.DebugSemanticsDumpOrder_0 = new A.DebugSemanticsDumpOrder("DebugSemanticsDumpOrder.inverseHitTest");
    C.DebugSemanticsDumpOrder_1 = new A.DebugSemanticsDumpOrder("DebugSemanticsDumpOrder.traversalOrder");
    C.DecorationPosition_0 = new E.DecorationPosition("DecorationPosition.background");
    C.DecorationPosition_1 = new E.DecorationPosition("DecorationPosition.foreground");
    C.TextStyle_swQ = new A.TextStyle(true, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TextOverflow_0 = new Q.TextOverflow("TextOverflow.clip");
    C.TextWidthBasis_0 = new U.TextWidthBasis("TextWidthBasis.parent");
    C.DefaultTextStyle_PnK = new L.DefaultTextStyle(C.TextStyle_swQ, null, true, C.TextOverflow_0, null, C.TextWidthBasis_0, null, null, null);
    C.DiagnosticLevel_0 = new Y.DiagnosticLevel(0, "DiagnosticLevel.hidden");
    C.DiagnosticLevel_1 = new Y.DiagnosticLevel(1, "DiagnosticLevel.fine");
    C.DiagnosticLevel_2 = new Y.DiagnosticLevel(2, "DiagnosticLevel.debug");
    C.DiagnosticLevel_3 = new Y.DiagnosticLevel(3, "DiagnosticLevel.info");
    C.DiagnosticLevel_4 = new Y.DiagnosticLevel(4, "DiagnosticLevel.warning");
    C.DiagnosticLevel_5 = new Y.DiagnosticLevel(5, "DiagnosticLevel.hint");
    C.DiagnosticLevel_6 = new Y.DiagnosticLevel(6, "DiagnosticLevel.summary");
    C.DiagnosticLevel_7 = new Y.DiagnosticLevel(7, "DiagnosticLevel.error");
    C.DiagnosticsTreeStyle_0 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.none");
    C.DiagnosticsTreeStyle_1 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.sparse");
    C.DiagnosticsTreeStyle_10 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.shallow");
    C.DiagnosticsTreeStyle_11 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.truncateChildren");
    C.DiagnosticsTreeStyle_2 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.offstage");
    C.DiagnosticsTreeStyle_3 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.dense");
    C.DiagnosticsTreeStyle_4 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.transition");
    C.DiagnosticsTreeStyle_5 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.error");
    C.DiagnosticsTreeStyle_6 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.whitespace");
    C.DiagnosticsTreeStyle_7 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.flat");
    C.DiagnosticsTreeStyle_8 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.singleLine");
    C.DiagnosticsTreeStyle_9 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.errorProperty");
    C.DialogTheme_maI = new Y.DialogTheme(null, null, null, null, null);
    C.DividerThemeData_Tnu = new G.DividerThemeData(null, null, null, null, null);
    C.DragStartBehavior_0 = new S.DragStartBehavior("DragStartBehavior.down");
    C.DragStartBehavior_1 = new S.DragStartBehavior("DragStartBehavior.start");
    C.Duration_0 = new P.Duration(0);
    C.Duration_100000 = new P.Duration(100000);
    C.Duration_1000000 = new P.Duration(1000000);
    C.Duration_1200000 = new P.Duration(1200000);
    C.Duration_150000 = new P.Duration(150000);
    C.Duration_1500000 = new P.Duration(1500000);
    C.Duration_167000 = new P.Duration(167000);
    C.Duration_200000 = new P.Duration(200000);
    C.Duration_2000000 = new P.Duration(2000000);
    C.Duration_250000 = new P.Duration(250000);
    C.Duration_300000 = new P.Duration(300000);
    C.Duration_40000 = new P.Duration(40000);
    C.Duration_50000 = new P.Duration(50000);
    C.Duration_500000 = new P.Duration(500000);
    C.Duration_5000000 = new P.Duration(5000000);
    C.Duration_600000 = new P.Duration(600000);
    C.Duration_75000 = new P.Duration(75000);
    C.EdgeInsets_0_0_0_0 = new V.EdgeInsets(0, 0, 0, 0);
    C.EdgeInsets_0_0_0_10 = new V.EdgeInsets(0, 0, 0, 10);
    C.EdgeInsets_16_0_16_0 = new V.EdgeInsets(16, 0, 16, 0);
    C.EdgeInsets_24_0_24_0 = new V.EdgeInsets(24, 0, 24, 0);
    C.EdgeInsets_4_4_4_4 = new V.EdgeInsets(4, 4, 4, 4);
    C.EdgeInsets_8_0_8_0 = new V.EdgeInsets(8, 0, 8, 0);
    C.EdgeInsets_8_8_8_8 = new V.EdgeInsets(8, 8, 8, 8);
    C.FlexFit_0 = new F.FlexFit("FlexFit.tight");
    C.FlexFit_1 = new F.FlexFit("FlexFit.loose");
    C.FloatingActionButtonThemeData_IWY = new S.FloatingActionButtonThemeData(null, null, null, null, null, null, null, null, null, null, null);
    C.FocusHighlightMode_0 = new O.FocusHighlightMode("FocusHighlightMode.touch");
    C.FocusHighlightMode_1 = new O.FocusHighlightMode("FocusHighlightMode.traditional");
    C.FocusHighlightStrategy_0 = new O.FocusHighlightStrategy("FocusHighlightStrategy.automatic");
    C.FocusHighlightStrategy_1 = new O.FocusHighlightStrategy("FocusHighlightStrategy.alwaysTouch");
    C.FocusHighlightStrategy_2 = new O.FocusHighlightStrategy("FocusHighlightStrategy.alwaysTraditional");
    C.FormatException_Qi2 = new P.FormatException("Invalid method call", null, null);
    C.FormatException_oCg = new P.FormatException("Message corrupted", null, null);
    C.FramePhase_0 = new P.FramePhase();
    C.GestureDisposition_0 = new D.GestureDisposition("GestureDisposition.accepted");
    C.GestureDisposition_1 = new D.GestureDisposition("GestureDisposition.rejected");
    C.GestureMode_0 = new H.GestureMode("GestureMode.pointerEvents");
    C.GestureMode_1 = new H.GestureMode("GestureMode.browserGestures");
    C.GestureRecognizerState_0 = new S.GestureRecognizerState("GestureRecognizerState.ready");
    C.GestureRecognizerState_1 = new S.GestureRecognizerState("GestureRecognizerState.possible");
    C.GestureRecognizerState_2 = new S.GestureRecognizerState("GestureRecognizerState.defunct");
    C.GrowthDirection_0 = new G.GrowthDirection("GrowthDirection.forward");
    C.GrowthDirection_1 = new G.GrowthDirection("GrowthDirection.reverse");
    C.HeroFlightDirection_0 = new T.HeroFlightDirection("HeroFlightDirection.push");
    C.HeroFlightDirection_1 = new T.HeroFlightDirection("HeroFlightDirection.pop");
    C.HitTestBehavior_0 = new E.HitTestBehavior("HitTestBehavior.deferToChild");
    C.HitTestBehavior_1 = new E.HitTestBehavior("HitTestBehavior.opaque");
    C.HitTestBehavior_2 = new E.HitTestBehavior("HitTestBehavior.translucent");
    C.IconData_58820_true = new X.IconData(58820, true);
    C.IconData_58848_true = new X.IconData(58848, true);
    C.Color_3707764736 = new P.Color(3707764736);
    C.IconThemeData_Color_3707764736_null_null = new T.IconThemeData(C.Color_3707764736, null, null);
    C.IconThemeData_Color_4278190080_1_24 = new T.IconThemeData(C.Color_4278190080, 1, 24);
    C.IconThemeData_Color_4278190080_null_null = new T.IconThemeData(C.Color_4278190080, null, null);
    C.IconThemeData_Color_4294967295_null_null = new T.IconThemeData(C.Color_4294967295, null, null);
    C.IconData_58834_false = new X.IconData(58834, false);
    C.Icon_IconData_58834_false_null = new L.Icon(C.IconData_58834_false, null);
    C.IconData_59574_false = new X.IconData(59574, false);
    C.Icon_IconData_59574_false_null = new L.Icon(C.IconData_59574_false, null);
    C.Interval_75R = new Z.Interval(0, 0.1, C.C__Linear);
    C.Interval_E4y = new Z.Interval(0.5, 1, C.Cubic_JUR);
    C.JsonDecoder_null = new P.JsonDecoder(null);
    C.JsonEncoder_null = new P.JsonEncoder(null);
    C.KeyboardSide_0 = new B.KeyboardSide("KeyboardSide.any");
    C.KeyboardSide_1 = new B.KeyboardSide("KeyboardSide.left");
    C.KeyboardSide_2 = new B.KeyboardSide("KeyboardSide.right");
    C.KeyboardSide_3 = new B.KeyboardSide("KeyboardSide.all");
    C.LineBreakType_0 = new H.LineBreakType("LineBreakType.opportunity");
    C.LineBreakType_1 = new H.LineBreakType("LineBreakType.mandatory");
    C.LineBreakType_2 = new H.LineBreakType("LineBreakType.endOfText");
    C.ModifierKey_0 = new B.ModifierKey("ModifierKey.controlModifier");
    C.ModifierKey_1 = new B.ModifierKey("ModifierKey.shiftModifier");
    C.ModifierKey_2 = new B.ModifierKey("ModifierKey.altModifier");
    C.ModifierKey_3 = new B.ModifierKey("ModifierKey.metaModifier");
    C.ModifierKey_4 = new B.ModifierKey("ModifierKey.capsLockModifier");
    C.ModifierKey_5 = new B.ModifierKey("ModifierKey.numLockModifier");
    C.ModifierKey_6 = new B.ModifierKey("ModifierKey.scrollLockModifier");
    C.ModifierKey_7 = new B.ModifierKey("ModifierKey.functionModifier");
    C.ModifierKey_8 = new B.ModifierKey("ModifierKey.symbolModifier");
    C.List_0 = H.setRuntimeTypeInfo(makeConstList([C.ModifierKey_0, C.ModifierKey_1, C.ModifierKey_2, C.ModifierKey_3, C.ModifierKey_4, C.ModifierKey_5, C.ModifierKey_6, C.ModifierKey_7, C.ModifierKey_8]), H.findType("JSArray<ModifierKey>"));
    C.List_100_200_400_700 = H.setRuntimeTypeInfo(makeConstList([100, 200, 400, 700]), type$.JSArray_int);
    C.List_127_2047_65535_1114111 = H.setRuntimeTypeInfo(makeConstList([127, 2047, 65535, 1114111]), type$.JSArray_int);
    C.FontWeight_0 = new P.FontWeight(0);
    C.FontWeight_1 = new P.FontWeight(1);
    C.FontWeight_2 = new P.FontWeight(2);
    C.FontWeight_3 = new P.FontWeight(3);
    C.FontWeight_4 = new P.FontWeight(4);
    C.FontWeight_5 = new P.FontWeight(5);
    C.FontWeight_6 = new P.FontWeight(6);
    C.FontWeight_7 = new P.FontWeight(7);
    C.FontWeight_8 = new P.FontWeight(8);
    C.List_27p = H.setRuntimeTypeInfo(makeConstList([C.FontWeight_0, C.FontWeight_1, C.FontWeight_2, C.FontWeight_3, C.FontWeight_4, C.FontWeight_5, C.FontWeight_6, C.FontWeight_7, C.FontWeight_8]), H.findType("JSArray<FontWeight>"));
    C.List_2Vk = H.setRuntimeTypeInfo(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_int);
    C.List_2Zi = H.setRuntimeTypeInfo(makeConstList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::autofocus", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), type$.JSArray_String);
    C.TextAlign_0 = new P.TextAlign("TextAlign.left");
    C.TextAlign_1 = new P.TextAlign("TextAlign.right");
    C.TextAlign_2 = new P.TextAlign("TextAlign.center");
    C.TextAlign_3 = new P.TextAlign("TextAlign.justify");
    C.TextAlign_4 = new P.TextAlign("TextAlign.start");
    C.TextAlign_5 = new P.TextAlign("TextAlign.end");
    C.List_Agv = H.setRuntimeTypeInfo(makeConstList([C.TextAlign_0, C.TextAlign_1, C.TextAlign_2, C.TextAlign_3, C.TextAlign_4, C.TextAlign_5]), H.findType("JSArray<TextAlign>"));
    C.List_CVk = H.setRuntimeTypeInfo(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_Cg9 = H.setRuntimeTypeInfo(makeConstList(["pointerdown", "pointermove", "pointerup", "pointercancel", "touchstart", "touchend", "touchmove", "touchcancel", "mousedown", "mousemove", "mouseup", "keyup", "keydown"]), type$.JSArray_String);
    C.List_JNA = H.setRuntimeTypeInfo(makeConstList([50, 100, 200, 300, 400, 500, 600, 700, 800, 900]), type$.JSArray_int);
    C.List_JYB = H.setRuntimeTypeInfo(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_int);
    C.C_Locale = new P.Locale();
    C.List_Locale = H.setRuntimeTypeInfo(makeConstList([C.C_Locale]), H.findType("JSArray<Locale>"));
    C.TextDirection_0 = new P.TextDirection(0, "TextDirection.rtl");
    C.TextDirection_1 = new P.TextDirection(1, "TextDirection.ltr");
    C.List_TextDirection_0_TextDirection_1 = H.setRuntimeTypeInfo(makeConstList([C.TextDirection_0, C.TextDirection_1]), H.findType("JSArray<TextDirection>"));
    C.List_click_scroll = H.setRuntimeTypeInfo(makeConstList(["click", "scroll"]), type$.JSArray_String);
    C.List_ego = H.setRuntimeTypeInfo(makeConstList(["HEAD", "AREA", "BASE", "BASEFONT", "BR", "COL", "COLGROUP", "EMBED", "FRAME", "FRAMESET", "HR", "IMAGE", "IMG", "INPUT", "ISINDEX", "LINK", "META", "PARAM", "SOURCE", "STYLE", "TITLE", "WBR"]), type$.JSArray_String);
    C.List_empty7 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<CustomPainterSemantics>"));
    C.List_empty2 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_DiagnosticsNode);
    C.List_empty4 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<NavigatorObserver>"));
    C.List_empty1 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<Null>"));
    C.List_empty3 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_OverlayEntry);
    C.List_empty8 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<Page<@>>"));
    C.List_empty6 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_SemanticsNode);
    C.List_empty = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_String);
    C.List_empty5 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_TextBox);
    C.List_empty9 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_Widget);
    C.List_empty0 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_dynamic);
    C.List_gRj = H.setRuntimeTypeInfo(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_gnE = H.setRuntimeTypeInfo(makeConstList([0, 0, 65498, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_nxB = H.setRuntimeTypeInfo(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_qNA = H.setRuntimeTypeInfo(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_qg40 = H.setRuntimeTypeInfo(makeConstList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_qg4 = H.setRuntimeTypeInfo(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.TargetPlatform_0 = new T.TargetPlatform("TargetPlatform.android");
    C.TargetPlatform_1 = new T.TargetPlatform("TargetPlatform.fuchsia");
    C.TargetPlatform_2 = new T.TargetPlatform("TargetPlatform.iOS");
    C.TargetPlatform_3 = new T.TargetPlatform("TargetPlatform.linux");
    C.TargetPlatform_4 = new T.TargetPlatform("TargetPlatform.macOS");
    C.TargetPlatform_5 = new T.TargetPlatform("TargetPlatform.windows");
    C.List_uDp = H.setRuntimeTypeInfo(makeConstList([C.TargetPlatform_0, C.TargetPlatform_1, C.TargetPlatform_2, C.TargetPlatform_3, C.TargetPlatform_4, C.TargetPlatform_5]), H.findType("JSArray<TargetPlatform>"));
    C.List_wSV = H.setRuntimeTypeInfo(makeConstList(["bind", "if", "ref", "repeat", "syntax"]), type$.JSArray_String);
    C._TestScrollingWidget_eZ8 = new Q._TestScrollingWidget(0, 300, C.Duration_1000000, null);
    C.Flexible_tNn = new T.Flexible(1, C.FlexFit_1, C._TestScrollingWidget_eZ8, null);
    C._TestScrollingWidget_L6o = new Q._TestScrollingWidget(1000, 500, C.Duration_1500000, null);
    C.Flexible_89P = new T.Flexible(1, C.FlexFit_1, C._TestScrollingWidget_L6o, null);
    C._TestScrollingWidget_Yiq = new Q._TestScrollingWidget(2000, 700, C.Duration_2000000, null);
    C.Flexible_yjx = new T.Flexible(1, C.FlexFit_1, C._TestScrollingWidget_Yiq, null);
    C.List_xyN = H.setRuntimeTypeInfo(makeConstList([C.Flexible_tNn, C.Flexible_89P, C.Flexible_yjx]), type$.JSArray_Widget);
    C.List_yXZ = H.setRuntimeTypeInfo(makeConstList([0, 4, 12, 1, 5, 13, 3, 7, 15]), type$.JSArray_int);
    C.List_yrN = H.setRuntimeTypeInfo(makeConstList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), type$.JSArray_String);
    C._CornerId_0 = new D._CornerId("_CornerId.topLeft");
    C._CornerId_3 = new D._CornerId("_CornerId.bottomRight");
    C._Diagonal__CornerId_0__CornerId_3 = new D._Diagonal(C._CornerId_0, C._CornerId_3);
    C._Diagonal__CornerId_3__CornerId_0 = new D._Diagonal(C._CornerId_3, C._CornerId_0);
    C._CornerId_1 = new D._CornerId("_CornerId.topRight");
    C._CornerId_2 = new D._CornerId("_CornerId.bottomLeft");
    C._Diagonal__CornerId_1__CornerId_2 = new D._Diagonal(C._CornerId_1, C._CornerId_2);
    C._Diagonal__CornerId_2__CornerId_1 = new D._Diagonal(C._CornerId_2, C._CornerId_1);
    C.List_yvP = H.setRuntimeTypeInfo(makeConstList([C._Diagonal__CornerId_0__CornerId_3, C._Diagonal__CornerId_3__CornerId_0, C._Diagonal__CornerId_1__CornerId_2, C._Diagonal__CornerId_2__CornerId_1]), H.findType("JSArray<_Diagonal>"));
    C.LogicalKeyboardKey_2203318681824_Control_null = new G.LogicalKeyboardKey(2203318681824, "Control", null);
    C.LogicalKeyboardKey_2203318681825_Shift_null = new G.LogicalKeyboardKey(2203318681825, "Shift", null);
    C.LogicalKeyboardKey_2203318681826_Alt_null = new G.LogicalKeyboardKey(2203318681826, "Alt", null);
    C.LogicalKeyboardKey_2203318681827_Meta_null = new G.LogicalKeyboardKey(2203318681827, "Meta", null);
    C.LogicalKeyboardKey_4294967314_Fn_null = new G.LogicalKeyboardKey(4294967314, "Fn", null);
    C.LogicalKeyboardKey_4295426091_Tab_null = new G.LogicalKeyboardKey(4295426091, "Tab", null);
    C.LogicalKeyboardKey_CzM = new G.LogicalKeyboardKey(4295426127, "Arrow Right", null);
    C.LogicalKeyboardKey_D0U = new G.LogicalKeyboardKey(4295426275, "Meta Left", null);
    C.LogicalKeyboardKey_EtP = new G.LogicalKeyboardKey(4295426278, "Alt Right", null);
    C.LogicalKeyboardKey_O1c = new G.LogicalKeyboardKey(4295426279, "Meta Right", null);
    C.LogicalKeyboardKey_O7X = new G.LogicalKeyboardKey(4295426129, "Arrow Down", null);
    C.LogicalKeyboardKey_OWF = new G.LogicalKeyboardKey(4295426105, "Caps Lock", null);
    C.LogicalKeyboardKey_PD9 = new G.LogicalKeyboardKey(4295426274, "Alt Left", null);
    C.LogicalKeyboardKey_QOu = new G.LogicalKeyboardKey(4295426277, "Shift Right", null);
    C.LogicalKeyboardKey_YdN = new G.LogicalKeyboardKey(32, "Space", " ");
    C.LogicalKeyboardKey_gCR = new G.LogicalKeyboardKey(4295426130, "Arrow Up", null);
    C.LogicalKeyboardKey_ijl = new G.LogicalKeyboardKey(4295426276, "Control Right", null);
    C.LogicalKeyboardKey_mgB = new G.LogicalKeyboardKey(4295426123, "Page Up", null);
    C.LogicalKeyboardKey_muk = new G.LogicalKeyboardKey(4295426128, "Arrow Left", null);
    C.LogicalKeyboardKey_p6t = new G.LogicalKeyboardKey(4295426272, "Control Left", null);
    C.LogicalKeyboardKey_uHn = new G.LogicalKeyboardKey(4295426131, "Num Lock", null);
    C.LogicalKeyboardKey_ujM = new G.LogicalKeyboardKey(4295426119, "Scroll Lock", null);
    C.LogicalKeyboardKey_wYn = new G.LogicalKeyboardKey(4295426126, "Page Down", null);
    C.LogicalKeyboardKey_xok = new G.LogicalKeyboardKey(4295426273, "Shift Left", null);
    C.Offset_0_0 = new P.Offset(0, 0);
    C.Velocity_Offset_0_0 = new R.Velocity(C.Offset_0_0);
    C.LongPressEndDetails_aB0 = new T.LongPressEndDetails(C.Offset_0_0, C.Velocity_Offset_0_0);
    C.LongPressSemanticsEvent_longPress = new E.LongPressSemanticsEvent("longPress");
    C.LongPressStartDetails_Offset_0_0 = new T.LongPressStartDetails(C.Offset_0_0);
    C.MainAxisAlignment_0 = new F.MainAxisAlignment("MainAxisAlignment.start");
    C.MainAxisAlignment_1 = new F.MainAxisAlignment("MainAxisAlignment.end");
    C.MainAxisAlignment_2 = new F.MainAxisAlignment("MainAxisAlignment.center");
    C.MainAxisAlignment_3 = new F.MainAxisAlignment("MainAxisAlignment.spaceBetween");
    C.MainAxisAlignment_4 = new F.MainAxisAlignment("MainAxisAlignment.spaceAround");
    C.MainAxisAlignment_5 = new F.MainAxisAlignment("MainAxisAlignment.spaceEvenly");
    C.MainAxisSize_1 = new F.MainAxisSize("MainAxisSize.max");
    C.C_CupertinoPageTransitionsBuilder = new K.CupertinoPageTransitionsBuilder();
    C.Map_23gMT = new H.GeneralConstantMap([C.TargetPlatform_0, C.C_FadeUpwardsPageTransitionsBuilder, C.TargetPlatform_2, C.C_CupertinoPageTransitionsBuilder, C.TargetPlatform_3, C.C_FadeUpwardsPageTransitionsBuilder, C.TargetPlatform_4, C.C_CupertinoPageTransitionsBuilder, C.TargetPlatform_5, C.C_FadeUpwardsPageTransitionsBuilder], H.findType("GeneralConstantMap<TargetPlatform,PageTransitionsBuilder>"));
    C.LogicalKeyboardKey_4294967296_None_null = new G.LogicalKeyboardKey(4294967296, "None", null);
    C.LogicalKeyboardKey_4294967312_Hyper_null = new G.LogicalKeyboardKey(4294967312, "Hyper", null);
    C.LogicalKeyboardKey_No3 = new G.LogicalKeyboardKey(4294967313, "Super Key", null);
    C.LogicalKeyboardKey_wz6 = new G.LogicalKeyboardKey(4294967315, "Fn Lock", null);
    C.LogicalKeyboardKey_4294967316_Suspend_null = new G.LogicalKeyboardKey(4294967316, "Suspend", null);
    C.LogicalKeyboardKey_4294967317_Resume_null = new G.LogicalKeyboardKey(4294967317, "Resume", null);
    C.LogicalKeyboardKey_4294967318_Turbo_null = new G.LogicalKeyboardKey(4294967318, "Turbo", null);
    C.LogicalKeyboardKey_8aB = new G.LogicalKeyboardKey(4294967319, "Privacy Screen Toggle", null);
    C.LogicalKeyboardKey_4295032962_Sleep_null = new G.LogicalKeyboardKey(4295032962, "Sleep", null);
    C.LogicalKeyboardKey_owA = new G.LogicalKeyboardKey(4295032963, "Wake Up", null);
    C.LogicalKeyboardKey_M6i = new G.LogicalKeyboardKey(4295033013, "Display Toggle Int Ext", null);
    C.LogicalKeyboardKey_8uL = new G.LogicalKeyboardKey(4295426048, "Usb Reserved", null);
    C.LogicalKeyboardKey_2nn = new G.LogicalKeyboardKey(4295426049, "Usb Error Roll Over", null);
    C.LogicalKeyboardKey_2bx = new G.LogicalKeyboardKey(4295426050, "Usb Post Fail", null);
    C.LogicalKeyboardKey_FYo = new G.LogicalKeyboardKey(4295426051, "Usb Error Undefined", null);
    C.LogicalKeyboardKey_7G2 = new G.LogicalKeyboardKey(97, "Key A", "a");
    C.LogicalKeyboardKey_jjv = new G.LogicalKeyboardKey(98, "Key B", "b");
    C.LogicalKeyboardKey_mF8 = new G.LogicalKeyboardKey(99, "Key C", "c");
    C.LogicalKeyboardKey_ICU = new G.LogicalKeyboardKey(100, "Key D", "d");
    C.LogicalKeyboardKey_AaU = new G.LogicalKeyboardKey(101, "Key E", "e");
    C.LogicalKeyboardKey_2jN = new G.LogicalKeyboardKey(102, "Key F", "f");
    C.LogicalKeyboardKey_cKo = new G.LogicalKeyboardKey(103, "Key G", "g");
    C.LogicalKeyboardKey_QhK = new G.LogicalKeyboardKey(104, "Key H", "h");
    C.LogicalKeyboardKey_swi = new G.LogicalKeyboardKey(105, "Key I", "i");
    C.LogicalKeyboardKey_CG7 = new G.LogicalKeyboardKey(106, "Key J", "j");
    C.LogicalKeyboardKey_3jH = new G.LogicalKeyboardKey(107, "Key K", "k");
    C.LogicalKeyboardKey_4iU = new G.LogicalKeyboardKey(108, "Key L", "l");
    C.LogicalKeyboardKey_oe4 = new G.LogicalKeyboardKey(109, "Key M", "m");
    C.LogicalKeyboardKey_OLv = new G.LogicalKeyboardKey(110, "Key N", "n");
    C.LogicalKeyboardKey_sav = new G.LogicalKeyboardKey(111, "Key O", "o");
    C.LogicalKeyboardKey_M6L = new G.LogicalKeyboardKey(112, "Key P", "p");
    C.LogicalKeyboardKey_Ods = new G.LogicalKeyboardKey(113, "Key Q", "q");
    C.LogicalKeyboardKey_qsN = new G.LogicalKeyboardKey(114, "Key R", "r");
    C.LogicalKeyboardKey_fLj = new G.LogicalKeyboardKey(115, "Key S", "s");
    C.LogicalKeyboardKey_V86 = new G.LogicalKeyboardKey(116, "Key T", "t");
    C.LogicalKeyboardKey_Tng = new G.LogicalKeyboardKey(117, "Key U", "u");
    C.LogicalKeyboardKey_6Ng = new G.LogicalKeyboardKey(118, "Key V", "v");
    C.LogicalKeyboardKey_XaR = new G.LogicalKeyboardKey(119, "Key W", "w");
    C.LogicalKeyboardKey_ifx = new G.LogicalKeyboardKey(120, "Key X", "x");
    C.LogicalKeyboardKey_kQR = new G.LogicalKeyboardKey(121, "Key Y", "y");
    C.LogicalKeyboardKey_W2D = new G.LogicalKeyboardKey(122, "Key Z", "z");
    C.LogicalKeyboardKey_4AN = new G.LogicalKeyboardKey(49, "Digit 1", "1");
    C.LogicalKeyboardKey_mmo = new G.LogicalKeyboardKey(50, "Digit 2", "2");
    C.LogicalKeyboardKey_a7X = new G.LogicalKeyboardKey(51, "Digit 3", "3");
    C.LogicalKeyboardKey_e9s = new G.LogicalKeyboardKey(52, "Digit 4", "4");
    C.LogicalKeyboardKey_43h = new G.LogicalKeyboardKey(53, "Digit 5", "5");
    C.LogicalKeyboardKey_CmI = new G.LogicalKeyboardKey(54, "Digit 6", "6");
    C.LogicalKeyboardKey_Db0 = new G.LogicalKeyboardKey(55, "Digit 7", "7");
    C.LogicalKeyboardKey_GZG = new G.LogicalKeyboardKey(56, "Digit 8", "8");
    C.LogicalKeyboardKey_86y = new G.LogicalKeyboardKey(57, "Digit 9", "9");
    C.LogicalKeyboardKey_0 = new G.LogicalKeyboardKey(48, "Digit 0", "0");
    C.LogicalKeyboardKey_4295426088_Enter_null = new G.LogicalKeyboardKey(4295426088, "Enter", null);
    C.LogicalKeyboardKey_4295426089_Escape_null = new G.LogicalKeyboardKey(4295426089, "Escape", null);
    C.LogicalKeyboardKey_4295426090_Backspace_null = new G.LogicalKeyboardKey(4295426090, "Backspace", null);
    C.LogicalKeyboardKey_oEN = new G.LogicalKeyboardKey(45, "Minus", "-");
    C.LogicalKeyboardKey_wrE = new G.LogicalKeyboardKey(61, "Equal", "=");
    C.LogicalKeyboardKey_TLI = new G.LogicalKeyboardKey(91, "Bracket Left", "[");
    C.LogicalKeyboardKey_awJ = new G.LogicalKeyboardKey(93, "Bracket Right", "]");
    C.LogicalKeyboardKey_cdS = new G.LogicalKeyboardKey(92, "Backslash", "\\");
    C.LogicalKeyboardKey_atK = new G.LogicalKeyboardKey(59, "Semicolon", ";");
    C.LogicalKeyboardKey_Qo8 = new G.LogicalKeyboardKey(39, "Quote", "'");
    C.LogicalKeyboardKey_7FR = new G.LogicalKeyboardKey(96, "Backquote", "`");
    C.LogicalKeyboardKey_71T = new G.LogicalKeyboardKey(44, "Comma", ",");
    C.LogicalKeyboardKey_h8g = new G.LogicalKeyboardKey(46, "Period", ".");
    C.LogicalKeyboardKey_ouN = new G.LogicalKeyboardKey(47, "Slash", "/");
    C.LogicalKeyboardKey_4295426106_F1_null = new G.LogicalKeyboardKey(4295426106, "F1", null);
    C.LogicalKeyboardKey_4295426107_F2_null = new G.LogicalKeyboardKey(4295426107, "F2", null);
    C.LogicalKeyboardKey_4295426108_F3_null = new G.LogicalKeyboardKey(4295426108, "F3", null);
    C.LogicalKeyboardKey_4295426109_F4_null = new G.LogicalKeyboardKey(4295426109, "F4", null);
    C.LogicalKeyboardKey_4295426110_F5_null = new G.LogicalKeyboardKey(4295426110, "F5", null);
    C.LogicalKeyboardKey_4295426111_F6_null = new G.LogicalKeyboardKey(4295426111, "F6", null);
    C.LogicalKeyboardKey_4295426112_F7_null = new G.LogicalKeyboardKey(4295426112, "F7", null);
    C.LogicalKeyboardKey_4295426113_F8_null = new G.LogicalKeyboardKey(4295426113, "F8", null);
    C.LogicalKeyboardKey_4295426114_F9_null = new G.LogicalKeyboardKey(4295426114, "F9", null);
    C.LogicalKeyboardKey_4295426115_F10_null = new G.LogicalKeyboardKey(4295426115, "F10", null);
    C.LogicalKeyboardKey_4295426116_F11_null = new G.LogicalKeyboardKey(4295426116, "F11", null);
    C.LogicalKeyboardKey_4295426117_F12_null = new G.LogicalKeyboardKey(4295426117, "F12", null);
    C.LogicalKeyboardKey_wAl = new G.LogicalKeyboardKey(4295426118, "Print Screen", null);
    C.LogicalKeyboardKey_4295426120_Pause_null = new G.LogicalKeyboardKey(4295426120, "Pause", null);
    C.LogicalKeyboardKey_4295426121_Insert_null = new G.LogicalKeyboardKey(4295426121, "Insert", null);
    C.LogicalKeyboardKey_4295426122_Home_null = new G.LogicalKeyboardKey(4295426122, "Home", null);
    C.LogicalKeyboardKey_4295426124_Delete_null = new G.LogicalKeyboardKey(4295426124, "Delete", null);
    C.LogicalKeyboardKey_4295426125_End_null = new G.LogicalKeyboardKey(4295426125, "End", null);
    C.LogicalKeyboardKey_Npb = new G.LogicalKeyboardKey(4295426132, "Numpad Divide", "/");
    C.LogicalKeyboardKey_iOn = new G.LogicalKeyboardKey(4295426133, "Numpad Multiply", "*");
    C.LogicalKeyboardKey_7xV = new G.LogicalKeyboardKey(4295426134, "Numpad Subtract", "-");
    C.LogicalKeyboardKey_YaH = new G.LogicalKeyboardKey(4295426135, "Numpad Add", "+");
    C.LogicalKeyboardKey_U2J = new G.LogicalKeyboardKey(4295426136, "Numpad Enter", null);
    C.LogicalKeyboardKey_qsT = new G.LogicalKeyboardKey(4295426137, "Numpad 1", "1");
    C.LogicalKeyboardKey_ka2 = new G.LogicalKeyboardKey(4295426138, "Numpad 2", "2");
    C.LogicalKeyboardKey_Ddz = new G.LogicalKeyboardKey(4295426139, "Numpad 3", "3");
    C.LogicalKeyboardKey_YGD = new G.LogicalKeyboardKey(4295426140, "Numpad 4", "4");
    C.LogicalKeyboardKey_s0r = new G.LogicalKeyboardKey(4295426141, "Numpad 5", "5");
    C.LogicalKeyboardKey_atK0 = new G.LogicalKeyboardKey(4295426142, "Numpad 6", "6");
    C.LogicalKeyboardKey_3bB = new G.LogicalKeyboardKey(4295426143, "Numpad 7", "7");
    C.LogicalKeyboardKey_sx4 = new G.LogicalKeyboardKey(4295426144, "Numpad 8", "8");
    C.LogicalKeyboardKey_4IJ = new G.LogicalKeyboardKey(4295426145, "Numpad 9", "9");
    C.LogicalKeyboardKey_KQb = new G.LogicalKeyboardKey(4295426146, "Numpad 0", "0");
    C.LogicalKeyboardKey_iXq = new G.LogicalKeyboardKey(4295426147, "Numpad Decimal", ".");
    C.LogicalKeyboardKey_6vi = new G.LogicalKeyboardKey(4295426148, "Intl Backslash", null);
    C.LogicalKeyboardKey_nDU = new G.LogicalKeyboardKey(4295426149, "Context Menu", null);
    C.LogicalKeyboardKey_4295426150_Power_null = new G.LogicalKeyboardKey(4295426150, "Power", null);
    C.LogicalKeyboardKey_G2v = new G.LogicalKeyboardKey(4295426151, "Numpad Equal", "=");
    C.LogicalKeyboardKey_4295426152_F13_null = new G.LogicalKeyboardKey(4295426152, "F13", null);
    C.LogicalKeyboardKey_4295426153_F14_null = new G.LogicalKeyboardKey(4295426153, "F14", null);
    C.LogicalKeyboardKey_4295426154_F15_null = new G.LogicalKeyboardKey(4295426154, "F15", null);
    C.LogicalKeyboardKey_4295426155_F16_null = new G.LogicalKeyboardKey(4295426155, "F16", null);
    C.LogicalKeyboardKey_4295426156_F17_null = new G.LogicalKeyboardKey(4295426156, "F17", null);
    C.LogicalKeyboardKey_4295426157_F18_null = new G.LogicalKeyboardKey(4295426157, "F18", null);
    C.LogicalKeyboardKey_4295426158_F19_null = new G.LogicalKeyboardKey(4295426158, "F19", null);
    C.LogicalKeyboardKey_4295426159_F20_null = new G.LogicalKeyboardKey(4295426159, "F20", null);
    C.LogicalKeyboardKey_4295426160_F21_null = new G.LogicalKeyboardKey(4295426160, "F21", null);
    C.LogicalKeyboardKey_4295426161_F22_null = new G.LogicalKeyboardKey(4295426161, "F22", null);
    C.LogicalKeyboardKey_4295426162_F23_null = new G.LogicalKeyboardKey(4295426162, "F23", null);
    C.LogicalKeyboardKey_4295426163_F24_null = new G.LogicalKeyboardKey(4295426163, "F24", null);
    C.LogicalKeyboardKey_4295426164_Open_null = new G.LogicalKeyboardKey(4295426164, "Open", null);
    C.LogicalKeyboardKey_4295426165_Help_null = new G.LogicalKeyboardKey(4295426165, "Help", null);
    C.LogicalKeyboardKey_4295426167_Select_null = new G.LogicalKeyboardKey(4295426167, "Select", null);
    C.LogicalKeyboardKey_4295426169_Again_null = new G.LogicalKeyboardKey(4295426169, "Again", null);
    C.LogicalKeyboardKey_4295426170_Undo_null = new G.LogicalKeyboardKey(4295426170, "Undo", null);
    C.LogicalKeyboardKey_4295426171_Cut_null = new G.LogicalKeyboardKey(4295426171, "Cut", null);
    C.LogicalKeyboardKey_4295426172_Copy_null = new G.LogicalKeyboardKey(4295426172, "Copy", null);
    C.LogicalKeyboardKey_4295426173_Paste_null = new G.LogicalKeyboardKey(4295426173, "Paste", null);
    C.LogicalKeyboardKey_4295426174_Find_null = new G.LogicalKeyboardKey(4295426174, "Find", null);
    C.LogicalKeyboardKey_MjO = new G.LogicalKeyboardKey(4295426175, "Audio Volume Mute", null);
    C.LogicalKeyboardKey_gap = new G.LogicalKeyboardKey(4295426176, "Audio Volume Up", null);
    C.LogicalKeyboardKey_c9P = new G.LogicalKeyboardKey(4295426177, "Audio Volume Down", null);
    C.LogicalKeyboardKey_CLo = new G.LogicalKeyboardKey(4295426181, "Numpad Comma", ",");
    C.LogicalKeyboardKey_iDZ = new G.LogicalKeyboardKey(4295426183, "Intl Ro", null);
    C.LogicalKeyboardKey_aBa = new G.LogicalKeyboardKey(4295426184, "Kana Mode", null);
    C.LogicalKeyboardKey_c0h = new G.LogicalKeyboardKey(4295426185, "Intl Yen", null);
    C.LogicalKeyboardKey_4295426186_Convert_null = new G.LogicalKeyboardKey(4295426186, "Convert", null);
    C.LogicalKeyboardKey_sBE = new G.LogicalKeyboardKey(4295426187, "Non Convert", null);
    C.LogicalKeyboardKey_nx9 = new G.LogicalKeyboardKey(4295426192, "Lang 1", null);
    C.LogicalKeyboardKey_nx90 = new G.LogicalKeyboardKey(4295426193, "Lang 2", null);
    C.LogicalKeyboardKey_nx91 = new G.LogicalKeyboardKey(4295426194, "Lang 3", null);
    C.LogicalKeyboardKey_nx92 = new G.LogicalKeyboardKey(4295426195, "Lang 4", null);
    C.LogicalKeyboardKey_nx93 = new G.LogicalKeyboardKey(4295426196, "Lang 5", null);
    C.LogicalKeyboardKey_4295426203_Abort_null = new G.LogicalKeyboardKey(4295426203, "Abort", null);
    C.LogicalKeyboardKey_4295426211_Props_null = new G.LogicalKeyboardKey(4295426211, "Props", null);
    C.LogicalKeyboardKey_wEo = new G.LogicalKeyboardKey(4295426230, "Numpad Paren Left", "(");
    C.LogicalKeyboardKey_8Nr = new G.LogicalKeyboardKey(4295426231, "Numpad Paren Right", ")");
    C.LogicalKeyboardKey_MUx = new G.LogicalKeyboardKey(4295426235, "Numpad Backspace", null);
    C.LogicalKeyboardKey_2Zx = new G.LogicalKeyboardKey(4295426256, "Numpad Memory Store", null);
    C.LogicalKeyboardKey_qqh = new G.LogicalKeyboardKey(4295426257, "Numpad Memory Recall", null);
    C.LogicalKeyboardKey_CxF = new G.LogicalKeyboardKey(4295426258, "Numpad Memory Clear", null);
    C.LogicalKeyboardKey_I9f = new G.LogicalKeyboardKey(4295426259, "Numpad Memory Add", null);
    C.LogicalKeyboardKey_YQd = new G.LogicalKeyboardKey(4295426260, "Numpad Memory Subtract", null);
    C.LogicalKeyboardKey_75N = new G.LogicalKeyboardKey(4295426263, "Numpad Sign Change", null);
    C.LogicalKeyboardKey_U86 = new G.LogicalKeyboardKey(4295426264, "Numpad Clear", null);
    C.LogicalKeyboardKey_OBv = new G.LogicalKeyboardKey(4295426265, "Numpad Clear Entry", null);
    C.LogicalKeyboardKey_4295753824_Info_null = new G.LogicalKeyboardKey(4295753824, "Info", null);
    C.LogicalKeyboardKey_ccN = new G.LogicalKeyboardKey(4295753825, "Closed Caption Toggle", null);
    C.LogicalKeyboardKey_Djg = new G.LogicalKeyboardKey(4295753839, "Brightness Up", null);
    C.LogicalKeyboardKey_ECL = new G.LogicalKeyboardKey(4295753840, "Brightness Down", null);
    C.LogicalKeyboardKey_B8J = new G.LogicalKeyboardKey(4295753842, "Brightness Toggle", null);
    C.LogicalKeyboardKey_kc1 = new G.LogicalKeyboardKey(4295753843, "Brightness Minimum", null);
    C.LogicalKeyboardKey_kc10 = new G.LogicalKeyboardKey(4295753844, "Brightness Maximum", null);
    C.LogicalKeyboardKey_HDR = new G.LogicalKeyboardKey(4295753845, "Brightness Auto", null);
    C.LogicalKeyboardKey_Pz5 = new G.LogicalKeyboardKey(4295753859, "Media Last", null);
    C.LogicalKeyboardKey_Ak1 = new G.LogicalKeyboardKey(4295753868, "Launch Phone", null);
    C.LogicalKeyboardKey_wg3 = new G.LogicalKeyboardKey(4295753869, "Program Guide", null);
    C.LogicalKeyboardKey_4295753876_Exit_null = new G.LogicalKeyboardKey(4295753876, "Exit", null);
    C.LogicalKeyboardKey_6QF = new G.LogicalKeyboardKey(4295753884, "Channel Up", null);
    C.LogicalKeyboardKey_3J4 = new G.LogicalKeyboardKey(4295753885, "Channel Down", null);
    C.LogicalKeyboardKey_Azp = new G.LogicalKeyboardKey(4295753904, "Media Play", null);
    C.LogicalKeyboardKey_qsO = new G.LogicalKeyboardKey(4295753905, "Media Pause", null);
    C.LogicalKeyboardKey_8eb = new G.LogicalKeyboardKey(4295753906, "Media Record", null);
    C.LogicalKeyboardKey_eEX = new G.LogicalKeyboardKey(4295753907, "Media Fast Forward", null);
    C.LogicalKeyboardKey_kQR0 = new G.LogicalKeyboardKey(4295753908, "Media Rewind", null);
    C.LogicalKeyboardKey_n7o = new G.LogicalKeyboardKey(4295753909, "Media Track Next", null);
    C.LogicalKeyboardKey_kHV = new G.LogicalKeyboardKey(4295753910, "Media Track Previous", null);
    C.LogicalKeyboardKey_wfl = new G.LogicalKeyboardKey(4295753911, "Media Stop", null);
    C.LogicalKeyboardKey_4295753912_Eject_null = new G.LogicalKeyboardKey(4295753912, "Eject", null);
    C.LogicalKeyboardKey_Cu4 = new G.LogicalKeyboardKey(4295753933, "Media Play Pause", null);
    C.LogicalKeyboardKey_Q5s = new G.LogicalKeyboardKey(4295753935, "Speech Input Toggle", null);
    C.LogicalKeyboardKey_qNA = new G.LogicalKeyboardKey(4295753957, "Bass Boost", null);
    C.LogicalKeyboardKey_oPr = new G.LogicalKeyboardKey(4295754115, "Media Select", null);
    C.LogicalKeyboardKey_2Ly = new G.LogicalKeyboardKey(4295754116, "Launch Word Processor", null);
    C.LogicalKeyboardKey_8Gl = new G.LogicalKeyboardKey(4295754118, "Launch Spreadsheet", null);
    C.LogicalKeyboardKey_9gS = new G.LogicalKeyboardKey(4295754122, "Launch Mail", null);
    C.LogicalKeyboardKey_mqK = new G.LogicalKeyboardKey(4295754125, "Launch Contacts", null);
    C.LogicalKeyboardKey_k44 = new G.LogicalKeyboardKey(4295754126, "Launch Calendar", null);
    C.LogicalKeyboardKey_00 = new G.LogicalKeyboardKey(4295754130, "Launch App2", null);
    C.LogicalKeyboardKey_01 = new G.LogicalKeyboardKey(4295754132, "Launch App1", null);
    C.LogicalKeyboardKey_zvr = new G.LogicalKeyboardKey(4295754134, "Launch Internet Browser", null);
    C.LogicalKeyboardKey_D6Y = new G.LogicalKeyboardKey(4295754140, "Log Off", null);
    C.LogicalKeyboardKey_jmM = new G.LogicalKeyboardKey(4295754142, "Lock Screen", null);
    C.LogicalKeyboardKey_9hT = new G.LogicalKeyboardKey(4295754143, "Launch Control Panel", null);
    C.LogicalKeyboardKey_Dns = new G.LogicalKeyboardKey(4295754146, "Select Task", null);
    C.LogicalKeyboardKey_MIo = new G.LogicalKeyboardKey(4295754151, "Launch Documents", null);
    C.LogicalKeyboardKey_oCX = new G.LogicalKeyboardKey(4295754155, "Spell Check", null);
    C.LogicalKeyboardKey_lCr = new G.LogicalKeyboardKey(4295754158, "Launch Keyboard Layout", null);
    C.LogicalKeyboardKey_MYz = new G.LogicalKeyboardKey(4295754161, "Launch Screen Saver", null);
    C.LogicalKeyboardKey_IQp = new G.LogicalKeyboardKey(4295754187, "Launch Assistant", null);
    C.LogicalKeyboardKey_1oF = new G.LogicalKeyboardKey(4295754167, "Launch Audio Browser", null);
    C.LogicalKeyboardKey_YSm = new G.LogicalKeyboardKey(4295754241, "New Key", null);
    C.LogicalKeyboardKey_4295754243_Close_null = new G.LogicalKeyboardKey(4295754243, "Close", null);
    C.LogicalKeyboardKey_4295754247_Save_null = new G.LogicalKeyboardKey(4295754247, "Save", null);
    C.LogicalKeyboardKey_4295754248_Print_null = new G.LogicalKeyboardKey(4295754248, "Print", null);
    C.LogicalKeyboardKey_EWB = new G.LogicalKeyboardKey(4295754273, "Browser Search", null);
    C.LogicalKeyboardKey_cEy = new G.LogicalKeyboardKey(4295754275, "Browser Home", null);
    C.LogicalKeyboardKey_kKc = new G.LogicalKeyboardKey(4295754276, "Browser Back", null);
    C.LogicalKeyboardKey_8pc = new G.LogicalKeyboardKey(4295754277, "Browser Forward", null);
    C.LogicalKeyboardKey_MYu = new G.LogicalKeyboardKey(4295754278, "Browser Stop", null);
    C.LogicalKeyboardKey_Un6 = new G.LogicalKeyboardKey(4295754279, "Browser Refresh", null);
    C.LogicalKeyboardKey_46S = new G.LogicalKeyboardKey(4295754282, "Browser Favorites", null);
    C.LogicalKeyboardKey_0Rr = new G.LogicalKeyboardKey(4295754285, "Zoom In", null);
    C.LogicalKeyboardKey_wIk = new G.LogicalKeyboardKey(4295754286, "Zoom Out", null);
    C.LogicalKeyboardKey_ijl0 = new G.LogicalKeyboardKey(4295754290, "Zoom Toggle", null);
    C.LogicalKeyboardKey_4295754361_Redo_null = new G.LogicalKeyboardKey(4295754361, "Redo", null);
    C.LogicalKeyboardKey_XHd = new G.LogicalKeyboardKey(4295754377, "Mail Reply", null);
    C.LogicalKeyboardKey_WpI = new G.LogicalKeyboardKey(4295754379, "Mail Forward", null);
    C.LogicalKeyboardKey_7aa = new G.LogicalKeyboardKey(4295754380, "Mail Send", null);
    C.LogicalKeyboardKey_JfL = new G.LogicalKeyboardKey(4295754397, "Keyboard Layout Select", null);
    C.LogicalKeyboardKey_7eO = new G.LogicalKeyboardKey(4295754399, "Show All Windows", null);
    C.LogicalKeyboardKey_BFs = new G.LogicalKeyboardKey(4295360257, "Game Button 1", null);
    C.LogicalKeyboardKey_BFs0 = new G.LogicalKeyboardKey(4295360258, "Game Button 2", null);
    C.LogicalKeyboardKey_BFs1 = new G.LogicalKeyboardKey(4295360259, "Game Button 3", null);
    C.LogicalKeyboardKey_BFs2 = new G.LogicalKeyboardKey(4295360260, "Game Button 4", null);
    C.LogicalKeyboardKey_BFs3 = new G.LogicalKeyboardKey(4295360261, "Game Button 5", null);
    C.LogicalKeyboardKey_BFs4 = new G.LogicalKeyboardKey(4295360262, "Game Button 6", null);
    C.LogicalKeyboardKey_BFs5 = new G.LogicalKeyboardKey(4295360263, "Game Button 7", null);
    C.LogicalKeyboardKey_mbT = new G.LogicalKeyboardKey(4295360264, "Game Button 8", null);
    C.LogicalKeyboardKey_mbT0 = new G.LogicalKeyboardKey(4295360265, "Game Button 9", null);
    C.LogicalKeyboardKey_Aci = new G.LogicalKeyboardKey(4295360266, "Game Button 10", null);
    C.LogicalKeyboardKey_Aci0 = new G.LogicalKeyboardKey(4295360267, "Game Button 11", null);
    C.LogicalKeyboardKey_Aci1 = new G.LogicalKeyboardKey(4295360268, "Game Button 12", null);
    C.LogicalKeyboardKey_Aci2 = new G.LogicalKeyboardKey(4295360269, "Game Button 13", null);
    C.LogicalKeyboardKey_Aci3 = new G.LogicalKeyboardKey(4295360270, "Game Button 14", null);
    C.LogicalKeyboardKey_Aci4 = new G.LogicalKeyboardKey(4295360271, "Game Button 15", null);
    C.LogicalKeyboardKey_bti = new G.LogicalKeyboardKey(4295360272, "Game Button 16", null);
    C.LogicalKeyboardKey_vfp = new G.LogicalKeyboardKey(4295360273, "Game Button A", null);
    C.LogicalKeyboardKey_vfp0 = new G.LogicalKeyboardKey(4295360274, "Game Button B", null);
    C.LogicalKeyboardKey_vfp1 = new G.LogicalKeyboardKey(4295360275, "Game Button C", null);
    C.LogicalKeyboardKey_mi2 = new G.LogicalKeyboardKey(4295360276, "Game Button Left 1", null);
    C.LogicalKeyboardKey_mi20 = new G.LogicalKeyboardKey(4295360277, "Game Button Left 2", null);
    C.LogicalKeyboardKey_9sL = new G.LogicalKeyboardKey(4295360278, "Game Button Mode", null);
    C.LogicalKeyboardKey_Pzp = new G.LogicalKeyboardKey(4295360279, "Game Button Right 1", null);
    C.LogicalKeyboardKey_GZG0 = new G.LogicalKeyboardKey(4295360280, "Game Button Right 2", null);
    C.LogicalKeyboardKey_Ktd = new G.LogicalKeyboardKey(4295360281, "Game Button Select", null);
    C.LogicalKeyboardKey_yzJ = new G.LogicalKeyboardKey(4295360282, "Game Button Start", null);
    C.LogicalKeyboardKey_8D4 = new G.LogicalKeyboardKey(4295360283, "Game Button Thumb Left", null);
    C.LogicalKeyboardKey_Xrv = new G.LogicalKeyboardKey(4295360284, "Game Button Thumb Right", null);
    C.LogicalKeyboardKey_pMi = new G.LogicalKeyboardKey(4295360285, "Game Button X", null);
    C.LogicalKeyboardKey_pMi0 = new G.LogicalKeyboardKey(4295360286, "Game Button Y", null);
    C.LogicalKeyboardKey_pMi1 = new G.LogicalKeyboardKey(4295360287, "Game Button Z", null);
    C.Map_6xZKG = new H.GeneralConstantMap([4294967296, C.LogicalKeyboardKey_4294967296_None_null, 4294967312, C.LogicalKeyboardKey_4294967312_Hyper_null, 4294967313, C.LogicalKeyboardKey_No3, 4294967315, C.LogicalKeyboardKey_wz6, 4294967316, C.LogicalKeyboardKey_4294967316_Suspend_null, 4294967317, C.LogicalKeyboardKey_4294967317_Resume_null, 4294967318, C.LogicalKeyboardKey_4294967318_Turbo_null, 4294967319, C.LogicalKeyboardKey_8aB, 4295032962, C.LogicalKeyboardKey_4295032962_Sleep_null, 4295032963, C.LogicalKeyboardKey_owA, 4295033013, C.LogicalKeyboardKey_M6i, 4295426048, C.LogicalKeyboardKey_8uL, 4295426049, C.LogicalKeyboardKey_2nn, 4295426050, C.LogicalKeyboardKey_2bx, 4295426051, C.LogicalKeyboardKey_FYo, 97, C.LogicalKeyboardKey_7G2, 98, C.LogicalKeyboardKey_jjv, 99, C.LogicalKeyboardKey_mF8, 100, C.LogicalKeyboardKey_ICU, 101, C.LogicalKeyboardKey_AaU, 102, C.LogicalKeyboardKey_2jN, 103, C.LogicalKeyboardKey_cKo, 104, C.LogicalKeyboardKey_QhK, 105, C.LogicalKeyboardKey_swi, 106, C.LogicalKeyboardKey_CG7, 107, C.LogicalKeyboardKey_3jH, 108, C.LogicalKeyboardKey_4iU, 109, C.LogicalKeyboardKey_oe4, 110, C.LogicalKeyboardKey_OLv, 111, C.LogicalKeyboardKey_sav, 112, C.LogicalKeyboardKey_M6L, 113, C.LogicalKeyboardKey_Ods, 114, C.LogicalKeyboardKey_qsN, 115, C.LogicalKeyboardKey_fLj, 116, C.LogicalKeyboardKey_V86, 117, C.LogicalKeyboardKey_Tng, 118, C.LogicalKeyboardKey_6Ng, 119, C.LogicalKeyboardKey_XaR, 120, C.LogicalKeyboardKey_ifx, 121, C.LogicalKeyboardKey_kQR, 122, C.LogicalKeyboardKey_W2D, 49, C.LogicalKeyboardKey_4AN, 50, C.LogicalKeyboardKey_mmo, 51, C.LogicalKeyboardKey_a7X, 52, C.LogicalKeyboardKey_e9s, 53, C.LogicalKeyboardKey_43h, 54, C.LogicalKeyboardKey_CmI, 55, C.LogicalKeyboardKey_Db0, 56, C.LogicalKeyboardKey_GZG, 57, C.LogicalKeyboardKey_86y, 48, C.LogicalKeyboardKey_0, 4295426088, C.LogicalKeyboardKey_4295426088_Enter_null, 4295426089, C.LogicalKeyboardKey_4295426089_Escape_null, 4295426090, C.LogicalKeyboardKey_4295426090_Backspace_null, 4295426091, C.LogicalKeyboardKey_4295426091_Tab_null, 32, C.LogicalKeyboardKey_YdN, 45, C.LogicalKeyboardKey_oEN, 61, C.LogicalKeyboardKey_wrE, 91, C.LogicalKeyboardKey_TLI, 93, C.LogicalKeyboardKey_awJ, 92, C.LogicalKeyboardKey_cdS, 59, C.LogicalKeyboardKey_atK, 39, C.LogicalKeyboardKey_Qo8, 96, C.LogicalKeyboardKey_7FR, 44, C.LogicalKeyboardKey_71T, 46, C.LogicalKeyboardKey_h8g, 47, C.LogicalKeyboardKey_ouN, 4295426105, C.LogicalKeyboardKey_OWF, 4295426106, C.LogicalKeyboardKey_4295426106_F1_null, 4295426107, C.LogicalKeyboardKey_4295426107_F2_null, 4295426108, C.LogicalKeyboardKey_4295426108_F3_null, 4295426109, C.LogicalKeyboardKey_4295426109_F4_null, 4295426110, C.LogicalKeyboardKey_4295426110_F5_null, 4295426111, C.LogicalKeyboardKey_4295426111_F6_null, 4295426112, C.LogicalKeyboardKey_4295426112_F7_null, 4295426113, C.LogicalKeyboardKey_4295426113_F8_null, 4295426114, C.LogicalKeyboardKey_4295426114_F9_null, 4295426115, C.LogicalKeyboardKey_4295426115_F10_null, 4295426116, C.LogicalKeyboardKey_4295426116_F11_null, 4295426117, C.LogicalKeyboardKey_4295426117_F12_null, 4295426118, C.LogicalKeyboardKey_wAl, 4295426119, C.LogicalKeyboardKey_ujM, 4295426120, C.LogicalKeyboardKey_4295426120_Pause_null, 4295426121, C.LogicalKeyboardKey_4295426121_Insert_null, 4295426122, C.LogicalKeyboardKey_4295426122_Home_null, 4295426123, C.LogicalKeyboardKey_mgB, 4295426124, C.LogicalKeyboardKey_4295426124_Delete_null, 4295426125, C.LogicalKeyboardKey_4295426125_End_null, 4295426126, C.LogicalKeyboardKey_wYn, 4295426127, C.LogicalKeyboardKey_CzM, 4295426128, C.LogicalKeyboardKey_muk, 4295426129, C.LogicalKeyboardKey_O7X, 4295426130, C.LogicalKeyboardKey_gCR, 4295426131, C.LogicalKeyboardKey_uHn, 4295426132, C.LogicalKeyboardKey_Npb, 4295426133, C.LogicalKeyboardKey_iOn, 4295426134, C.LogicalKeyboardKey_7xV, 4295426135, C.LogicalKeyboardKey_YaH, 4295426136, C.LogicalKeyboardKey_U2J, 4295426137, C.LogicalKeyboardKey_qsT, 4295426138, C.LogicalKeyboardKey_ka2, 4295426139, C.LogicalKeyboardKey_Ddz, 4295426140, C.LogicalKeyboardKey_YGD, 4295426141, C.LogicalKeyboardKey_s0r, 4295426142, C.LogicalKeyboardKey_atK0, 4295426143, C.LogicalKeyboardKey_3bB, 4295426144, C.LogicalKeyboardKey_sx4, 4295426145, C.LogicalKeyboardKey_4IJ, 4295426146, C.LogicalKeyboardKey_KQb, 4295426147, C.LogicalKeyboardKey_iXq, 4295426148, C.LogicalKeyboardKey_6vi, 4295426149, C.LogicalKeyboardKey_nDU, 4295426150, C.LogicalKeyboardKey_4295426150_Power_null, 4295426151, C.LogicalKeyboardKey_G2v, 4295426152, C.LogicalKeyboardKey_4295426152_F13_null, 4295426153, C.LogicalKeyboardKey_4295426153_F14_null, 4295426154, C.LogicalKeyboardKey_4295426154_F15_null, 4295426155, C.LogicalKeyboardKey_4295426155_F16_null, 4295426156, C.LogicalKeyboardKey_4295426156_F17_null, 4295426157, C.LogicalKeyboardKey_4295426157_F18_null, 4295426158, C.LogicalKeyboardKey_4295426158_F19_null, 4295426159, C.LogicalKeyboardKey_4295426159_F20_null, 4295426160, C.LogicalKeyboardKey_4295426160_F21_null, 4295426161, C.LogicalKeyboardKey_4295426161_F22_null, 4295426162, C.LogicalKeyboardKey_4295426162_F23_null, 4295426163, C.LogicalKeyboardKey_4295426163_F24_null, 4295426164, C.LogicalKeyboardKey_4295426164_Open_null, 4295426165, C.LogicalKeyboardKey_4295426165_Help_null, 4295426167, C.LogicalKeyboardKey_4295426167_Select_null, 4295426169, C.LogicalKeyboardKey_4295426169_Again_null, 4295426170, C.LogicalKeyboardKey_4295426170_Undo_null, 4295426171, C.LogicalKeyboardKey_4295426171_Cut_null, 4295426172, C.LogicalKeyboardKey_4295426172_Copy_null, 4295426173, C.LogicalKeyboardKey_4295426173_Paste_null, 4295426174, C.LogicalKeyboardKey_4295426174_Find_null, 4295426175, C.LogicalKeyboardKey_MjO, 4295426176, C.LogicalKeyboardKey_gap, 4295426177, C.LogicalKeyboardKey_c9P, 4295426181, C.LogicalKeyboardKey_CLo, 4295426183, C.LogicalKeyboardKey_iDZ, 4295426184, C.LogicalKeyboardKey_aBa, 4295426185, C.LogicalKeyboardKey_c0h, 4295426186, C.LogicalKeyboardKey_4295426186_Convert_null, 4295426187, C.LogicalKeyboardKey_sBE, 4295426192, C.LogicalKeyboardKey_nx9, 4295426193, C.LogicalKeyboardKey_nx90, 4295426194, C.LogicalKeyboardKey_nx91, 4295426195, C.LogicalKeyboardKey_nx92, 4295426196, C.LogicalKeyboardKey_nx93, 4295426203, C.LogicalKeyboardKey_4295426203_Abort_null, 4295426211, C.LogicalKeyboardKey_4295426211_Props_null, 4295426230, C.LogicalKeyboardKey_wEo, 4295426231, C.LogicalKeyboardKey_8Nr, 4295426235, C.LogicalKeyboardKey_MUx, 4295426256, C.LogicalKeyboardKey_2Zx, 4295426257, C.LogicalKeyboardKey_qqh, 4295426258, C.LogicalKeyboardKey_CxF, 4295426259, C.LogicalKeyboardKey_I9f, 4295426260, C.LogicalKeyboardKey_YQd, 4295426263, C.LogicalKeyboardKey_75N, 4295426264, C.LogicalKeyboardKey_U86, 4295426265, C.LogicalKeyboardKey_OBv, 4295426272, C.LogicalKeyboardKey_p6t, 4295426273, C.LogicalKeyboardKey_xok, 4295426274, C.LogicalKeyboardKey_PD9, 4295426275, C.LogicalKeyboardKey_D0U, 4295426276, C.LogicalKeyboardKey_ijl, 4295426277, C.LogicalKeyboardKey_QOu, 4295426278, C.LogicalKeyboardKey_EtP, 4295426279, C.LogicalKeyboardKey_O1c, 4295753824, C.LogicalKeyboardKey_4295753824_Info_null, 4295753825, C.LogicalKeyboardKey_ccN, 4295753839, C.LogicalKeyboardKey_Djg, 4295753840, C.LogicalKeyboardKey_ECL, 4295753842, C.LogicalKeyboardKey_B8J, 4295753843, C.LogicalKeyboardKey_kc1, 4295753844, C.LogicalKeyboardKey_kc10, 4295753845, C.LogicalKeyboardKey_HDR, 4295753859, C.LogicalKeyboardKey_Pz5, 4295753868, C.LogicalKeyboardKey_Ak1, 4295753869, C.LogicalKeyboardKey_wg3, 4295753876, C.LogicalKeyboardKey_4295753876_Exit_null, 4295753884, C.LogicalKeyboardKey_6QF, 4295753885, C.LogicalKeyboardKey_3J4, 4295753904, C.LogicalKeyboardKey_Azp, 4295753905, C.LogicalKeyboardKey_qsO, 4295753906, C.LogicalKeyboardKey_8eb, 4295753907, C.LogicalKeyboardKey_eEX, 4295753908, C.LogicalKeyboardKey_kQR0, 4295753909, C.LogicalKeyboardKey_n7o, 4295753910, C.LogicalKeyboardKey_kHV, 4295753911, C.LogicalKeyboardKey_wfl, 4295753912, C.LogicalKeyboardKey_4295753912_Eject_null, 4295753933, C.LogicalKeyboardKey_Cu4, 4295753935, C.LogicalKeyboardKey_Q5s, 4295753957, C.LogicalKeyboardKey_qNA, 4295754115, C.LogicalKeyboardKey_oPr, 4295754116, C.LogicalKeyboardKey_2Ly, 4295754118, C.LogicalKeyboardKey_8Gl, 4295754122, C.LogicalKeyboardKey_9gS, 4295754125, C.LogicalKeyboardKey_mqK, 4295754126, C.LogicalKeyboardKey_k44, 4295754130, C.LogicalKeyboardKey_00, 4295754132, C.LogicalKeyboardKey_01, 4295754134, C.LogicalKeyboardKey_zvr, 4295754140, C.LogicalKeyboardKey_D6Y, 4295754142, C.LogicalKeyboardKey_jmM, 4295754143, C.LogicalKeyboardKey_9hT, 4295754146, C.LogicalKeyboardKey_Dns, 4295754151, C.LogicalKeyboardKey_MIo, 4295754155, C.LogicalKeyboardKey_oCX, 4295754158, C.LogicalKeyboardKey_lCr, 4295754161, C.LogicalKeyboardKey_MYz, 4295754187, C.LogicalKeyboardKey_IQp, 4295754167, C.LogicalKeyboardKey_1oF, 4295754241, C.LogicalKeyboardKey_YSm, 4295754243, C.LogicalKeyboardKey_4295754243_Close_null, 4295754247, C.LogicalKeyboardKey_4295754247_Save_null, 4295754248, C.LogicalKeyboardKey_4295754248_Print_null, 4295754273, C.LogicalKeyboardKey_EWB, 4295754275, C.LogicalKeyboardKey_cEy, 4295754276, C.LogicalKeyboardKey_kKc, 4295754277, C.LogicalKeyboardKey_8pc, 4295754278, C.LogicalKeyboardKey_MYu, 4295754279, C.LogicalKeyboardKey_Un6, 4295754282, C.LogicalKeyboardKey_46S, 4295754285, C.LogicalKeyboardKey_0Rr, 4295754286, C.LogicalKeyboardKey_wIk, 4295754290, C.LogicalKeyboardKey_ijl0, 4295754361, C.LogicalKeyboardKey_4295754361_Redo_null, 4295754377, C.LogicalKeyboardKey_XHd, 4295754379, C.LogicalKeyboardKey_WpI, 4295754380, C.LogicalKeyboardKey_7aa, 4295754397, C.LogicalKeyboardKey_JfL, 4295754399, C.LogicalKeyboardKey_7eO, 4295360257, C.LogicalKeyboardKey_BFs, 4295360258, C.LogicalKeyboardKey_BFs0, 4295360259, C.LogicalKeyboardKey_BFs1, 4295360260, C.LogicalKeyboardKey_BFs2, 4295360261, C.LogicalKeyboardKey_BFs3, 4295360262, C.LogicalKeyboardKey_BFs4, 4295360263, C.LogicalKeyboardKey_BFs5, 4295360264, C.LogicalKeyboardKey_mbT, 4295360265, C.LogicalKeyboardKey_mbT0, 4295360266, C.LogicalKeyboardKey_Aci, 4295360267, C.LogicalKeyboardKey_Aci0, 4295360268, C.LogicalKeyboardKey_Aci1, 4295360269, C.LogicalKeyboardKey_Aci2, 4295360270, C.LogicalKeyboardKey_Aci3, 4295360271, C.LogicalKeyboardKey_Aci4, 4295360272, C.LogicalKeyboardKey_bti, 4295360273, C.LogicalKeyboardKey_vfp, 4295360274, C.LogicalKeyboardKey_vfp0, 4295360275, C.LogicalKeyboardKey_vfp1, 4295360276, C.LogicalKeyboardKey_mi2, 4295360277, C.LogicalKeyboardKey_mi20, 4295360278, C.LogicalKeyboardKey_9sL, 4295360279, C.LogicalKeyboardKey_Pzp, 4295360280, C.LogicalKeyboardKey_GZG0, 4295360281, C.LogicalKeyboardKey_Ktd, 4295360282, C.LogicalKeyboardKey_yzJ, 4295360283, C.LogicalKeyboardKey_8D4, 4295360284, C.LogicalKeyboardKey_Xrv, 4295360285, C.LogicalKeyboardKey_pMi, 4295360286, C.LogicalKeyboardKey_pMi0, 4295360287, C.LogicalKeyboardKey_pMi1, 4294967314, C.LogicalKeyboardKey_4294967314_Fn_null], type$.GeneralConstantMap_int_LogicalKeyboardKey);
    C.List_mode = H.setRuntimeTypeInfo(makeConstList(["mode"]), type$.JSArray_String);
    C.Map_9aZ6I = new H.ConstantStringMap(1, {mode: "basic"}, C.List_mode, H.findType("ConstantStringMap<String,String>"));
    C.PhysicalKeyboardKey_c4y = new G.PhysicalKeyboardKey(458756, "Key A");
    C.PhysicalKeyboardKey_Ui9 = new G.PhysicalKeyboardKey(458757, "Key B");
    C.PhysicalKeyboardKey_oqy = new G.PhysicalKeyboardKey(458758, "Key C");
    C.PhysicalKeyboardKey_Aec = new G.PhysicalKeyboardKey(458759, "Key D");
    C.PhysicalKeyboardKey_e7M = new G.PhysicalKeyboardKey(458760, "Key E");
    C.PhysicalKeyboardKey_WjS = new G.PhysicalKeyboardKey(458761, "Key F");
    C.PhysicalKeyboardKey_cgs = new G.PhysicalKeyboardKey(458762, "Key G");
    C.PhysicalKeyboardKey_O9K = new G.PhysicalKeyboardKey(458763, "Key H");
    C.PhysicalKeyboardKey_ATp = new G.PhysicalKeyboardKey(458764, "Key I");
    C.PhysicalKeyboardKey_8Qj = new G.PhysicalKeyboardKey(458765, "Key J");
    C.PhysicalKeyboardKey_02V = new G.PhysicalKeyboardKey(458766, "Key K");
    C.PhysicalKeyboardKey_2jN = new G.PhysicalKeyboardKey(458767, "Key L");
    C.PhysicalKeyboardKey_Pdn = new G.PhysicalKeyboardKey(458768, "Key M");
    C.PhysicalKeyboardKey_sQd = new G.PhysicalKeyboardKey(458769, "Key N");
    C.PhysicalKeyboardKey_oYc = new G.PhysicalKeyboardKey(458770, "Key O");
    C.PhysicalKeyboardKey_ClL = new G.PhysicalKeyboardKey(458771, "Key P");
    C.PhysicalKeyboardKey_ON8 = new G.PhysicalKeyboardKey(458772, "Key Q");
    C.PhysicalKeyboardKey_kfn = new G.PhysicalKeyboardKey(458773, "Key R");
    C.PhysicalKeyboardKey_yXI = new G.PhysicalKeyboardKey(458774, "Key S");
    C.PhysicalKeyboardKey_86y = new G.PhysicalKeyboardKey(458775, "Key T");
    C.PhysicalKeyboardKey_3NL = new G.PhysicalKeyboardKey(458776, "Key U");
    C.PhysicalKeyboardKey_Sof = new G.PhysicalKeyboardKey(458777, "Key V");
    C.PhysicalKeyboardKey_gc6 = new G.PhysicalKeyboardKey(458778, "Key W");
    C.PhysicalKeyboardKey_XTH = new G.PhysicalKeyboardKey(458779, "Key X");
    C.PhysicalKeyboardKey_699 = new G.PhysicalKeyboardKey(458780, "Key Y");
    C.PhysicalKeyboardKey_geL = new G.PhysicalKeyboardKey(458781, "Key Z");
    C.PhysicalKeyboardKey_9kk = new G.PhysicalKeyboardKey(458782, "Digit 1");
    C.PhysicalKeyboardKey_gEY = new G.PhysicalKeyboardKey(458783, "Digit 2");
    C.PhysicalKeyboardKey_Ddv = new G.PhysicalKeyboardKey(458784, "Digit 3");
    C.PhysicalKeyboardKey_aNU = new G.PhysicalKeyboardKey(458785, "Digit 4");
    C.PhysicalKeyboardKey_gc60 = new G.PhysicalKeyboardKey(458786, "Digit 5");
    C.PhysicalKeyboardKey_wg4 = new G.PhysicalKeyboardKey(458787, "Digit 6");
    C.PhysicalKeyboardKey_Tkj = new G.PhysicalKeyboardKey(458788, "Digit 7");
    C.PhysicalKeyboardKey_GRf = new G.PhysicalKeyboardKey(458789, "Digit 8");
    C.PhysicalKeyboardKey_C4W = new G.PhysicalKeyboardKey(458790, "Digit 9");
    C.PhysicalKeyboardKey_eYS = new G.PhysicalKeyboardKey(458791, "Digit 0");
    C.PhysicalKeyboardKey_458792_Enter = new G.PhysicalKeyboardKey(458792, "Enter");
    C.PhysicalKeyboardKey_458793_Escape = new G.PhysicalKeyboardKey(458793, "Escape");
    C.PhysicalKeyboardKey_458794_Backspace = new G.PhysicalKeyboardKey(458794, "Backspace");
    C.PhysicalKeyboardKey_458795_Tab = new G.PhysicalKeyboardKey(458795, "Tab");
    C.PhysicalKeyboardKey_458796_Space = new G.PhysicalKeyboardKey(458796, "Space");
    C.PhysicalKeyboardKey_458797_Minus = new G.PhysicalKeyboardKey(458797, "Minus");
    C.PhysicalKeyboardKey_458798_Equal = new G.PhysicalKeyboardKey(458798, "Equal");
    C.PhysicalKeyboardKey_Dx1 = new G.PhysicalKeyboardKey(458799, "Bracket Left");
    C.PhysicalKeyboardKey_YIZ = new G.PhysicalKeyboardKey(458800, "Bracket Right");
    C.PhysicalKeyboardKey_458801_Backslash = new G.PhysicalKeyboardKey(458801, "Backslash");
    C.PhysicalKeyboardKey_458803_Semicolon = new G.PhysicalKeyboardKey(458803, "Semicolon");
    C.PhysicalKeyboardKey_458804_Quote = new G.PhysicalKeyboardKey(458804, "Quote");
    C.PhysicalKeyboardKey_458805_Backquote = new G.PhysicalKeyboardKey(458805, "Backquote");
    C.PhysicalKeyboardKey_458806_Comma = new G.PhysicalKeyboardKey(458806, "Comma");
    C.PhysicalKeyboardKey_458807_Period = new G.PhysicalKeyboardKey(458807, "Period");
    C.PhysicalKeyboardKey_458808_Slash = new G.PhysicalKeyboardKey(458808, "Slash");
    C.PhysicalKeyboardKey_eAf = new G.PhysicalKeyboardKey(458809, "Caps Lock");
    C.PhysicalKeyboardKey_458810_F1 = new G.PhysicalKeyboardKey(458810, "F1");
    C.PhysicalKeyboardKey_458811_F2 = new G.PhysicalKeyboardKey(458811, "F2");
    C.PhysicalKeyboardKey_458812_F3 = new G.PhysicalKeyboardKey(458812, "F3");
    C.PhysicalKeyboardKey_458813_F4 = new G.PhysicalKeyboardKey(458813, "F4");
    C.PhysicalKeyboardKey_458814_F5 = new G.PhysicalKeyboardKey(458814, "F5");
    C.PhysicalKeyboardKey_458815_F6 = new G.PhysicalKeyboardKey(458815, "F6");
    C.PhysicalKeyboardKey_458816_F7 = new G.PhysicalKeyboardKey(458816, "F7");
    C.PhysicalKeyboardKey_458817_F8 = new G.PhysicalKeyboardKey(458817, "F8");
    C.PhysicalKeyboardKey_458818_F9 = new G.PhysicalKeyboardKey(458818, "F9");
    C.PhysicalKeyboardKey_458819_F10 = new G.PhysicalKeyboardKey(458819, "F10");
    C.PhysicalKeyboardKey_458820_F11 = new G.PhysicalKeyboardKey(458820, "F11");
    C.PhysicalKeyboardKey_458821_F12 = new G.PhysicalKeyboardKey(458821, "F12");
    C.PhysicalKeyboardKey_458825_Insert = new G.PhysicalKeyboardKey(458825, "Insert");
    C.PhysicalKeyboardKey_458826_Home = new G.PhysicalKeyboardKey(458826, "Home");
    C.PhysicalKeyboardKey_gg90 = new G.PhysicalKeyboardKey(458827, "Page Up");
    C.PhysicalKeyboardKey_458828_Delete = new G.PhysicalKeyboardKey(458828, "Delete");
    C.PhysicalKeyboardKey_458829_End = new G.PhysicalKeyboardKey(458829, "End");
    C.PhysicalKeyboardKey_UCG = new G.PhysicalKeyboardKey(458830, "Page Down");
    C.PhysicalKeyboardKey_Q8r = new G.PhysicalKeyboardKey(458831, "Arrow Right");
    C.PhysicalKeyboardKey_4iW = new G.PhysicalKeyboardKey(458832, "Arrow Left");
    C.PhysicalKeyboardKey_G79 = new G.PhysicalKeyboardKey(458833, "Arrow Down");
    C.PhysicalKeyboardKey_ytW = new G.PhysicalKeyboardKey(458834, "Arrow Up");
    C.PhysicalKeyboardKey_A3V = new G.PhysicalKeyboardKey(458835, "Num Lock");
    C.PhysicalKeyboardKey_A4L = new G.PhysicalKeyboardKey(458836, "Numpad Divide");
    C.PhysicalKeyboardKey_cgN = new G.PhysicalKeyboardKey(458837, "Numpad Multiply");
    C.PhysicalKeyboardKey_43h = new G.PhysicalKeyboardKey(458838, "Numpad Subtract");
    C.PhysicalKeyboardKey_OGx = new G.PhysicalKeyboardKey(458839, "Numpad Add");
    C.PhysicalKeyboardKey_6dA = new G.PhysicalKeyboardKey(458840, "Numpad Enter");
    C.PhysicalKeyboardKey_si2 = new G.PhysicalKeyboardKey(458841, "Numpad 1");
    C.PhysicalKeyboardKey_si20 = new G.PhysicalKeyboardKey(458842, "Numpad 2");
    C.PhysicalKeyboardKey_si21 = new G.PhysicalKeyboardKey(458843, "Numpad 3");
    C.PhysicalKeyboardKey_si22 = new G.PhysicalKeyboardKey(458844, "Numpad 4");
    C.PhysicalKeyboardKey_CtV = new G.PhysicalKeyboardKey(458845, "Numpad 5");
    C.PhysicalKeyboardKey_CtV0 = new G.PhysicalKeyboardKey(458846, "Numpad 6");
    C.PhysicalKeyboardKey_CtV1 = new G.PhysicalKeyboardKey(458847, "Numpad 7");
    C.PhysicalKeyboardKey_U44 = new G.PhysicalKeyboardKey(458848, "Numpad 8");
    C.PhysicalKeyboardKey_U440 = new G.PhysicalKeyboardKey(458849, "Numpad 9");
    C.PhysicalKeyboardKey_U441 = new G.PhysicalKeyboardKey(458850, "Numpad 0");
    C.PhysicalKeyboardKey_s0y = new G.PhysicalKeyboardKey(458851, "Numpad Decimal");
    C.PhysicalKeyboardKey_jrj = new G.PhysicalKeyboardKey(458852, "Intl Backslash");
    C.PhysicalKeyboardKey_m5d = new G.PhysicalKeyboardKey(458853, "Context Menu");
    C.PhysicalKeyboardKey_izR = new G.PhysicalKeyboardKey(458855, "Numpad Equal");
    C.PhysicalKeyboardKey_458856_F13 = new G.PhysicalKeyboardKey(458856, "F13");
    C.PhysicalKeyboardKey_458857_F14 = new G.PhysicalKeyboardKey(458857, "F14");
    C.PhysicalKeyboardKey_458858_F15 = new G.PhysicalKeyboardKey(458858, "F15");
    C.PhysicalKeyboardKey_458859_F16 = new G.PhysicalKeyboardKey(458859, "F16");
    C.PhysicalKeyboardKey_458860_F17 = new G.PhysicalKeyboardKey(458860, "F17");
    C.PhysicalKeyboardKey_458861_F18 = new G.PhysicalKeyboardKey(458861, "F18");
    C.PhysicalKeyboardKey_458862_F19 = new G.PhysicalKeyboardKey(458862, "F19");
    C.PhysicalKeyboardKey_458863_F20 = new G.PhysicalKeyboardKey(458863, "F20");
    C.PhysicalKeyboardKey_042 = new G.PhysicalKeyboardKey(458879, "Audio Volume Mute");
    C.PhysicalKeyboardKey_yjH = new G.PhysicalKeyboardKey(458880, "Audio Volume Up");
    C.PhysicalKeyboardKey_2nP = new G.PhysicalKeyboardKey(458881, "Audio Volume Down");
    C.PhysicalKeyboardKey_AoG = new G.PhysicalKeyboardKey(458885, "Numpad Comma");
    C.PhysicalKeyboardKey_4OV = new G.PhysicalKeyboardKey(458887, "Intl Ro");
    C.PhysicalKeyboardKey_y47 = new G.PhysicalKeyboardKey(458889, "Intl Yen");
    C.PhysicalKeyboardKey_Cni = new G.PhysicalKeyboardKey(458896, "Lang 1");
    C.PhysicalKeyboardKey_Cni0 = new G.PhysicalKeyboardKey(458897, "Lang 2");
    C.PhysicalKeyboardKey_wEo = new G.PhysicalKeyboardKey(458976, "Control Left");
    C.PhysicalKeyboardKey_Y3m = new G.PhysicalKeyboardKey(458977, "Shift Left");
    C.PhysicalKeyboardKey_CNh = new G.PhysicalKeyboardKey(458978, "Alt Left");
    C.PhysicalKeyboardKey_gg9 = new G.PhysicalKeyboardKey(458979, "Meta Left");
    C.PhysicalKeyboardKey_Q4j = new G.PhysicalKeyboardKey(458980, "Control Right");
    C.PhysicalKeyboardKey_fBD = new G.PhysicalKeyboardKey(458981, "Shift Right");
    C.PhysicalKeyboardKey_7FR = new G.PhysicalKeyboardKey(458982, "Alt Right");
    C.PhysicalKeyboardKey_INA = new G.PhysicalKeyboardKey(458983, "Meta Right");
    C.PhysicalKeyboardKey_18_Fn = new G.PhysicalKeyboardKey(18, "Fn");
    C.Map_AY14u = new H.GeneralConstantMap([0, C.PhysicalKeyboardKey_c4y, 11, C.PhysicalKeyboardKey_Ui9, 8, C.PhysicalKeyboardKey_oqy, 2, C.PhysicalKeyboardKey_Aec, 14, C.PhysicalKeyboardKey_e7M, 3, C.PhysicalKeyboardKey_WjS, 5, C.PhysicalKeyboardKey_cgs, 4, C.PhysicalKeyboardKey_O9K, 34, C.PhysicalKeyboardKey_ATp, 38, C.PhysicalKeyboardKey_8Qj, 40, C.PhysicalKeyboardKey_02V, 37, C.PhysicalKeyboardKey_2jN, 46, C.PhysicalKeyboardKey_Pdn, 45, C.PhysicalKeyboardKey_sQd, 31, C.PhysicalKeyboardKey_oYc, 35, C.PhysicalKeyboardKey_ClL, 12, C.PhysicalKeyboardKey_ON8, 15, C.PhysicalKeyboardKey_kfn, 1, C.PhysicalKeyboardKey_yXI, 17, C.PhysicalKeyboardKey_86y, 32, C.PhysicalKeyboardKey_3NL, 9, C.PhysicalKeyboardKey_Sof, 13, C.PhysicalKeyboardKey_gc6, 7, C.PhysicalKeyboardKey_XTH, 16, C.PhysicalKeyboardKey_699, 6, C.PhysicalKeyboardKey_geL, 18, C.PhysicalKeyboardKey_9kk, 19, C.PhysicalKeyboardKey_gEY, 20, C.PhysicalKeyboardKey_Ddv, 21, C.PhysicalKeyboardKey_aNU, 23, C.PhysicalKeyboardKey_gc60, 22, C.PhysicalKeyboardKey_wg4, 26, C.PhysicalKeyboardKey_Tkj, 28, C.PhysicalKeyboardKey_GRf, 25, C.PhysicalKeyboardKey_C4W, 29, C.PhysicalKeyboardKey_eYS, 36, C.PhysicalKeyboardKey_458792_Enter, 53, C.PhysicalKeyboardKey_458793_Escape, 51, C.PhysicalKeyboardKey_458794_Backspace, 48, C.PhysicalKeyboardKey_458795_Tab, 49, C.PhysicalKeyboardKey_458796_Space, 27, C.PhysicalKeyboardKey_458797_Minus, 24, C.PhysicalKeyboardKey_458798_Equal, 33, C.PhysicalKeyboardKey_Dx1, 30, C.PhysicalKeyboardKey_YIZ, 42, C.PhysicalKeyboardKey_458801_Backslash, 41, C.PhysicalKeyboardKey_458803_Semicolon, 39, C.PhysicalKeyboardKey_458804_Quote, 50, C.PhysicalKeyboardKey_458805_Backquote, 43, C.PhysicalKeyboardKey_458806_Comma, 47, C.PhysicalKeyboardKey_458807_Period, 44, C.PhysicalKeyboardKey_458808_Slash, 57, C.PhysicalKeyboardKey_eAf, 122, C.PhysicalKeyboardKey_458810_F1, 120, C.PhysicalKeyboardKey_458811_F2, 99, C.PhysicalKeyboardKey_458812_F3, 118, C.PhysicalKeyboardKey_458813_F4, 96, C.PhysicalKeyboardKey_458814_F5, 97, C.PhysicalKeyboardKey_458815_F6, 98, C.PhysicalKeyboardKey_458816_F7, 100, C.PhysicalKeyboardKey_458817_F8, 101, C.PhysicalKeyboardKey_458818_F9, 109, C.PhysicalKeyboardKey_458819_F10, 103, C.PhysicalKeyboardKey_458820_F11, 111, C.PhysicalKeyboardKey_458821_F12, 114, C.PhysicalKeyboardKey_458825_Insert, 115, C.PhysicalKeyboardKey_458826_Home, 116, C.PhysicalKeyboardKey_gg90, 117, C.PhysicalKeyboardKey_458828_Delete, 119, C.PhysicalKeyboardKey_458829_End, 121, C.PhysicalKeyboardKey_UCG, 124, C.PhysicalKeyboardKey_Q8r, 123, C.PhysicalKeyboardKey_4iW, 125, C.PhysicalKeyboardKey_G79, 126, C.PhysicalKeyboardKey_ytW, 71, C.PhysicalKeyboardKey_A3V, 75, C.PhysicalKeyboardKey_A4L, 67, C.PhysicalKeyboardKey_cgN, 78, C.PhysicalKeyboardKey_43h, 69, C.PhysicalKeyboardKey_OGx, 76, C.PhysicalKeyboardKey_6dA, 83, C.PhysicalKeyboardKey_si2, 84, C.PhysicalKeyboardKey_si20, 85, C.PhysicalKeyboardKey_si21, 86, C.PhysicalKeyboardKey_si22, 87, C.PhysicalKeyboardKey_CtV, 88, C.PhysicalKeyboardKey_CtV0, 89, C.PhysicalKeyboardKey_CtV1, 91, C.PhysicalKeyboardKey_U44, 92, C.PhysicalKeyboardKey_U440, 82, C.PhysicalKeyboardKey_U441, 65, C.PhysicalKeyboardKey_s0y, 10, C.PhysicalKeyboardKey_jrj, 110, C.PhysicalKeyboardKey_m5d, 81, C.PhysicalKeyboardKey_izR, 105, C.PhysicalKeyboardKey_458856_F13, 107, C.PhysicalKeyboardKey_458857_F14, 113, C.PhysicalKeyboardKey_458858_F15, 106, C.PhysicalKeyboardKey_458859_F16, 64, C.PhysicalKeyboardKey_458860_F17, 79, C.PhysicalKeyboardKey_458861_F18, 80, C.PhysicalKeyboardKey_458862_F19, 90, C.PhysicalKeyboardKey_458863_F20, 74, C.PhysicalKeyboardKey_042, 72, C.PhysicalKeyboardKey_yjH, 73, C.PhysicalKeyboardKey_2nP, 95, C.PhysicalKeyboardKey_AoG, 94, C.PhysicalKeyboardKey_4OV, 93, C.PhysicalKeyboardKey_y47, 104, C.PhysicalKeyboardKey_Cni, 102, C.PhysicalKeyboardKey_Cni0, 59, C.PhysicalKeyboardKey_wEo, 56, C.PhysicalKeyboardKey_Y3m, 58, C.PhysicalKeyboardKey_CNh, 55, C.PhysicalKeyboardKey_gg9, 62, C.PhysicalKeyboardKey_Q4j, 60, C.PhysicalKeyboardKey_fBD, 61, C.PhysicalKeyboardKey_7FR, 54, C.PhysicalKeyboardKey_INA, 63, C.PhysicalKeyboardKey_18_Fn], type$.GeneralConstantMap_int_PhysicalKeyboardKey);
    C.Map_Eyiil = new H.GeneralConstantMap([0, C.LogicalKeyboardKey_4294967296_None_null, 223, C.LogicalKeyboardKey_4295032962_Sleep_null, 224, C.LogicalKeyboardKey_owA, 29, C.LogicalKeyboardKey_7G2, 30, C.LogicalKeyboardKey_jjv, 31, C.LogicalKeyboardKey_mF8, 32, C.LogicalKeyboardKey_ICU, 33, C.LogicalKeyboardKey_AaU, 34, C.LogicalKeyboardKey_2jN, 35, C.LogicalKeyboardKey_cKo, 36, C.LogicalKeyboardKey_QhK, 37, C.LogicalKeyboardKey_swi, 38, C.LogicalKeyboardKey_CG7, 39, C.LogicalKeyboardKey_3jH, 40, C.LogicalKeyboardKey_4iU, 41, C.LogicalKeyboardKey_oe4, 42, C.LogicalKeyboardKey_OLv, 43, C.LogicalKeyboardKey_sav, 44, C.LogicalKeyboardKey_M6L, 45, C.LogicalKeyboardKey_Ods, 46, C.LogicalKeyboardKey_qsN, 47, C.LogicalKeyboardKey_fLj, 48, C.LogicalKeyboardKey_V86, 49, C.LogicalKeyboardKey_Tng, 50, C.LogicalKeyboardKey_6Ng, 51, C.LogicalKeyboardKey_XaR, 52, C.LogicalKeyboardKey_ifx, 53, C.LogicalKeyboardKey_kQR, 54, C.LogicalKeyboardKey_W2D, 8, C.LogicalKeyboardKey_4AN, 9, C.LogicalKeyboardKey_mmo, 10, C.LogicalKeyboardKey_a7X, 11, C.LogicalKeyboardKey_e9s, 12, C.LogicalKeyboardKey_43h, 13, C.LogicalKeyboardKey_CmI, 14, C.LogicalKeyboardKey_Db0, 15, C.LogicalKeyboardKey_GZG, 16, C.LogicalKeyboardKey_86y, 7, C.LogicalKeyboardKey_0, 66, C.LogicalKeyboardKey_4295426088_Enter_null, 111, C.LogicalKeyboardKey_4295426089_Escape_null, 67, C.LogicalKeyboardKey_4295426090_Backspace_null, 61, C.LogicalKeyboardKey_4295426091_Tab_null, 62, C.LogicalKeyboardKey_YdN, 69, C.LogicalKeyboardKey_oEN, 70, C.LogicalKeyboardKey_wrE, 71, C.LogicalKeyboardKey_TLI, 72, C.LogicalKeyboardKey_awJ, 73, C.LogicalKeyboardKey_cdS, 74, C.LogicalKeyboardKey_atK, 75, C.LogicalKeyboardKey_Qo8, 68, C.LogicalKeyboardKey_7FR, 55, C.LogicalKeyboardKey_71T, 56, C.LogicalKeyboardKey_h8g, 76, C.LogicalKeyboardKey_ouN, 115, C.LogicalKeyboardKey_OWF, 131, C.LogicalKeyboardKey_4295426106_F1_null, 132, C.LogicalKeyboardKey_4295426107_F2_null, 133, C.LogicalKeyboardKey_4295426108_F3_null, 134, C.LogicalKeyboardKey_4295426109_F4_null, 135, C.LogicalKeyboardKey_4295426110_F5_null, 136, C.LogicalKeyboardKey_4295426111_F6_null, 137, C.LogicalKeyboardKey_4295426112_F7_null, 138, C.LogicalKeyboardKey_4295426113_F8_null, 139, C.LogicalKeyboardKey_4295426114_F9_null, 140, C.LogicalKeyboardKey_4295426115_F10_null, 141, C.LogicalKeyboardKey_4295426116_F11_null, 142, C.LogicalKeyboardKey_4295426117_F12_null, 120, C.LogicalKeyboardKey_wAl, 116, C.LogicalKeyboardKey_ujM, 121, C.LogicalKeyboardKey_4295426120_Pause_null, 124, C.LogicalKeyboardKey_4295426121_Insert_null, 122, C.LogicalKeyboardKey_4295426122_Home_null, 92, C.LogicalKeyboardKey_mgB, 112, C.LogicalKeyboardKey_4295426124_Delete_null, 123, C.LogicalKeyboardKey_4295426125_End_null, 93, C.LogicalKeyboardKey_wYn, 22, C.LogicalKeyboardKey_CzM, 21, C.LogicalKeyboardKey_muk, 20, C.LogicalKeyboardKey_O7X, 19, C.LogicalKeyboardKey_gCR, 143, C.LogicalKeyboardKey_uHn, 154, C.LogicalKeyboardKey_Npb, 155, C.LogicalKeyboardKey_iOn, 156, C.LogicalKeyboardKey_7xV, 157, C.LogicalKeyboardKey_YaH, 160, C.LogicalKeyboardKey_U2J, 145, C.LogicalKeyboardKey_qsT, 146, C.LogicalKeyboardKey_ka2, 147, C.LogicalKeyboardKey_Ddz, 148, C.LogicalKeyboardKey_YGD, 149, C.LogicalKeyboardKey_s0r, 150, C.LogicalKeyboardKey_atK0, 151, C.LogicalKeyboardKey_3bB, 152, C.LogicalKeyboardKey_sx4, 153, C.LogicalKeyboardKey_4IJ, 144, C.LogicalKeyboardKey_KQb, 158, C.LogicalKeyboardKey_iXq, 82, C.LogicalKeyboardKey_nDU, 26, C.LogicalKeyboardKey_4295426150_Power_null, 161, C.LogicalKeyboardKey_G2v, 259, C.LogicalKeyboardKey_4295426165_Help_null, 23, C.LogicalKeyboardKey_4295426167_Select_null, 277, C.LogicalKeyboardKey_4295426171_Cut_null, 278, C.LogicalKeyboardKey_4295426172_Copy_null, 279, C.LogicalKeyboardKey_4295426173_Paste_null, 164, C.LogicalKeyboardKey_MjO, 24, C.LogicalKeyboardKey_gap, 25, C.LogicalKeyboardKey_c9P, 159, C.LogicalKeyboardKey_CLo, 214, C.LogicalKeyboardKey_4295426186_Convert_null, 213, C.LogicalKeyboardKey_sBE, 162, C.LogicalKeyboardKey_wEo, 163, C.LogicalKeyboardKey_8Nr, 113, C.LogicalKeyboardKey_p6t, 59, C.LogicalKeyboardKey_xok, 57, C.LogicalKeyboardKey_PD9, 117, C.LogicalKeyboardKey_D0U, 114, C.LogicalKeyboardKey_ijl, 60, C.LogicalKeyboardKey_QOu, 58, C.LogicalKeyboardKey_EtP, 118, C.LogicalKeyboardKey_O1c, 165, C.LogicalKeyboardKey_4295753824_Info_null, 175, C.LogicalKeyboardKey_ccN, 221, C.LogicalKeyboardKey_Djg, 220, C.LogicalKeyboardKey_ECL, 229, C.LogicalKeyboardKey_Pz5, 166, C.LogicalKeyboardKey_6QF, 167, C.LogicalKeyboardKey_3J4, 126, C.LogicalKeyboardKey_Azp, 127, C.LogicalKeyboardKey_qsO, 130, C.LogicalKeyboardKey_8eb, 90, C.LogicalKeyboardKey_eEX, 89, C.LogicalKeyboardKey_kQR0, 87, C.LogicalKeyboardKey_n7o, 88, C.LogicalKeyboardKey_kHV, 86, C.LogicalKeyboardKey_wfl, 129, C.LogicalKeyboardKey_4295753912_Eject_null, 85, C.LogicalKeyboardKey_Cu4, 65, C.LogicalKeyboardKey_9gS, 207, C.LogicalKeyboardKey_mqK, 208, C.LogicalKeyboardKey_k44, 219, C.LogicalKeyboardKey_IQp, 128, C.LogicalKeyboardKey_4295754243_Close_null, 84, C.LogicalKeyboardKey_EWB, 125, C.LogicalKeyboardKey_8pc, 174, C.LogicalKeyboardKey_46S, 168, C.LogicalKeyboardKey_0Rr, 169, C.LogicalKeyboardKey_wIk, 255, C.LogicalKeyboardKey_ijl0, 188, C.LogicalKeyboardKey_BFs, 189, C.LogicalKeyboardKey_BFs0, 190, C.LogicalKeyboardKey_BFs1, 191, C.LogicalKeyboardKey_BFs2, 192, C.LogicalKeyboardKey_BFs3, 193, C.LogicalKeyboardKey_BFs4, 194, C.LogicalKeyboardKey_BFs5, 195, C.LogicalKeyboardKey_mbT, 196, C.LogicalKeyboardKey_mbT0, 197, C.LogicalKeyboardKey_Aci, 198, C.LogicalKeyboardKey_Aci0, 199, C.LogicalKeyboardKey_Aci1, 200, C.LogicalKeyboardKey_Aci2, 201, C.LogicalKeyboardKey_Aci3, 202, C.LogicalKeyboardKey_Aci4, 203, C.LogicalKeyboardKey_bti, 96, C.LogicalKeyboardKey_vfp, 97, C.LogicalKeyboardKey_vfp0, 98, C.LogicalKeyboardKey_vfp1, 102, C.LogicalKeyboardKey_mi2, 104, C.LogicalKeyboardKey_mi20, 110, C.LogicalKeyboardKey_9sL, 103, C.LogicalKeyboardKey_Pzp, 105, C.LogicalKeyboardKey_GZG0, 109, C.LogicalKeyboardKey_Ktd, 108, C.LogicalKeyboardKey_yzJ, 106, C.LogicalKeyboardKey_8D4, 107, C.LogicalKeyboardKey_Xrv, 99, C.LogicalKeyboardKey_pMi, 100, C.LogicalKeyboardKey_pMi0, 101, C.LogicalKeyboardKey_pMi1, 119, C.LogicalKeyboardKey_4294967314_Fn_null], type$.GeneralConstantMap_int_LogicalKeyboardKey);
    C.Map_F1QoB = new H.GeneralConstantMap([75, C.LogicalKeyboardKey_Npb, 67, C.LogicalKeyboardKey_iOn, 78, C.LogicalKeyboardKey_7xV, 69, C.LogicalKeyboardKey_YaH, 83, C.LogicalKeyboardKey_qsT, 84, C.LogicalKeyboardKey_ka2, 85, C.LogicalKeyboardKey_Ddz, 86, C.LogicalKeyboardKey_YGD, 87, C.LogicalKeyboardKey_s0r, 88, C.LogicalKeyboardKey_atK0, 89, C.LogicalKeyboardKey_3bB, 91, C.LogicalKeyboardKey_sx4, 92, C.LogicalKeyboardKey_4IJ, 82, C.LogicalKeyboardKey_KQb, 65, C.LogicalKeyboardKey_iXq, 81, C.LogicalKeyboardKey_G2v, 95, C.LogicalKeyboardKey_CLo], type$.GeneralConstantMap_int_LogicalKeyboardKey);
    C.PhysicalKeyboardKey_20_Suspend = new G.PhysicalKeyboardKey(20, "Suspend");
    C.PhysicalKeyboardKey_65666_Sleep = new G.PhysicalKeyboardKey(65666, "Sleep");
    C.PhysicalKeyboardKey_XLl = new G.PhysicalKeyboardKey(65667, "Wake Up");
    C.PhysicalKeyboardKey_DNn = new G.PhysicalKeyboardKey(458822, "Print Screen");
    C.PhysicalKeyboardKey_DpI = new G.PhysicalKeyboardKey(458823, "Scroll Lock");
    C.PhysicalKeyboardKey_458824_Pause = new G.PhysicalKeyboardKey(458824, "Pause");
    C.PhysicalKeyboardKey_458854_Power = new G.PhysicalKeyboardKey(458854, "Power");
    C.PhysicalKeyboardKey_458864_F21 = new G.PhysicalKeyboardKey(458864, "F21");
    C.PhysicalKeyboardKey_458865_F22 = new G.PhysicalKeyboardKey(458865, "F22");
    C.PhysicalKeyboardKey_458866_F23 = new G.PhysicalKeyboardKey(458866, "F23");
    C.PhysicalKeyboardKey_458867_F24 = new G.PhysicalKeyboardKey(458867, "F24");
    C.PhysicalKeyboardKey_458868_Open = new G.PhysicalKeyboardKey(458868, "Open");
    C.PhysicalKeyboardKey_458869_Help = new G.PhysicalKeyboardKey(458869, "Help");
    C.PhysicalKeyboardKey_458871_Select = new G.PhysicalKeyboardKey(458871, "Select");
    C.PhysicalKeyboardKey_458873_Again = new G.PhysicalKeyboardKey(458873, "Again");
    C.PhysicalKeyboardKey_458874_Undo = new G.PhysicalKeyboardKey(458874, "Undo");
    C.PhysicalKeyboardKey_458875_Cut = new G.PhysicalKeyboardKey(458875, "Cut");
    C.PhysicalKeyboardKey_458876_Copy = new G.PhysicalKeyboardKey(458876, "Copy");
    C.PhysicalKeyboardKey_458877_Paste = new G.PhysicalKeyboardKey(458877, "Paste");
    C.PhysicalKeyboardKey_458878_Find = new G.PhysicalKeyboardKey(458878, "Find");
    C.PhysicalKeyboardKey_458890_Convert = new G.PhysicalKeyboardKey(458890, "Convert");
    C.PhysicalKeyboardKey_Mys = new G.PhysicalKeyboardKey(458891, "Non Convert");
    C.PhysicalKeyboardKey_AJU = new G.PhysicalKeyboardKey(458898, "Lang 3");
    C.PhysicalKeyboardKey_AJU0 = new G.PhysicalKeyboardKey(458899, "Lang 4");
    C.PhysicalKeyboardKey_458915_Props = new G.PhysicalKeyboardKey(458915, "Props");
    C.PhysicalKeyboardKey_Ga7 = new G.PhysicalKeyboardKey(458934, "Numpad Paren Left");
    C.PhysicalKeyboardKey_9we = new G.PhysicalKeyboardKey(458935, "Numpad Paren Right");
    C.PhysicalKeyboardKey_786528_Info = new G.PhysicalKeyboardKey(786528, "Info");
    C.PhysicalKeyboardKey_UwG = new G.PhysicalKeyboardKey(786543, "Brightness Up");
    C.PhysicalKeyboardKey_6hp = new G.PhysicalKeyboardKey(786544, "Brightness Down");
    C.PhysicalKeyboardKey_786580_Exit = new G.PhysicalKeyboardKey(786580, "Exit");
    C.PhysicalKeyboardKey_F3v = new G.PhysicalKeyboardKey(786588, "Channel Up");
    C.PhysicalKeyboardKey_0Hm = new G.PhysicalKeyboardKey(786589, "Channel Down");
    C.PhysicalKeyboardKey_bHn = new G.PhysicalKeyboardKey(786608, "Media Play");
    C.PhysicalKeyboardKey_mc1 = new G.PhysicalKeyboardKey(786609, "Media Pause");
    C.PhysicalKeyboardKey_4Nv = new G.PhysicalKeyboardKey(786610, "Media Record");
    C.PhysicalKeyboardKey_ibp = new G.PhysicalKeyboardKey(786611, "Media Fast Forward");
    C.PhysicalKeyboardKey_3GJ = new G.PhysicalKeyboardKey(786612, "Media Rewind");
    C.PhysicalKeyboardKey_e8P = new G.PhysicalKeyboardKey(786613, "Media Track Next");
    C.PhysicalKeyboardKey_Sv6 = new G.PhysicalKeyboardKey(786614, "Media Track Previous");
    C.PhysicalKeyboardKey_8Gl = new G.PhysicalKeyboardKey(786615, "Media Stop");
    C.PhysicalKeyboardKey_786616_Eject = new G.PhysicalKeyboardKey(786616, "Eject");
    C.PhysicalKeyboardKey_tgd = new G.PhysicalKeyboardKey(786637, "Media Play Pause");
    C.PhysicalKeyboardKey_PDJ = new G.PhysicalKeyboardKey(786661, "Bass Boost");
    C.PhysicalKeyboardKey_cEx = new G.PhysicalKeyboardKey(786826, "Launch Mail");
    C.PhysicalKeyboardKey_n9b = new G.PhysicalKeyboardKey(786829, "Launch Contacts");
    C.PhysicalKeyboardKey_iGv = new G.PhysicalKeyboardKey(786830, "Launch Calendar");
    C.PhysicalKeyboardKey_XAC = new G.PhysicalKeyboardKey(786945, "New Key");
    C.PhysicalKeyboardKey_786947_Close = new G.PhysicalKeyboardKey(786947, "Close");
    C.PhysicalKeyboardKey_786952_Print = new G.PhysicalKeyboardKey(786952, "Print");
    C.PhysicalKeyboardKey_QkZ = new G.PhysicalKeyboardKey(786977, "Browser Search");
    C.PhysicalKeyboardKey_p6a = new G.PhysicalKeyboardKey(786981, "Browser Forward");
    C.PhysicalKeyboardKey_sHU = new G.PhysicalKeyboardKey(786986, "Browser Favorites");
    C.PhysicalKeyboardKey_787065_Redo = new G.PhysicalKeyboardKey(787065, "Redo");
    C.PhysicalKeyboardKey_ihV = new G.PhysicalKeyboardKey(392961, "Game Button 1");
    C.PhysicalKeyboardKey_qhE = new G.PhysicalKeyboardKey(392962, "Game Button 2");
    C.PhysicalKeyboardKey_eXH = new G.PhysicalKeyboardKey(392963, "Game Button 3");
    C.PhysicalKeyboardKey_lm1 = new G.PhysicalKeyboardKey(392964, "Game Button 4");
    C.PhysicalKeyboardKey_kxd = new G.PhysicalKeyboardKey(392965, "Game Button 5");
    C.PhysicalKeyboardKey_PDz = new G.PhysicalKeyboardKey(392966, "Game Button 6");
    C.PhysicalKeyboardKey_m5H = new G.PhysicalKeyboardKey(392967, "Game Button 7");
    C.PhysicalKeyboardKey_ihV0 = new G.PhysicalKeyboardKey(392968, "Game Button 8");
    C.PhysicalKeyboardKey_FNx = new G.PhysicalKeyboardKey(392969, "Game Button 9");
    C.PhysicalKeyboardKey_9k7 = new G.PhysicalKeyboardKey(392970, "Game Button 10");
    C.PhysicalKeyboardKey_adS = new G.PhysicalKeyboardKey(392971, "Game Button 11");
    C.PhysicalKeyboardKey_Kl9 = new G.PhysicalKeyboardKey(392972, "Game Button 12");
    C.PhysicalKeyboardKey_Ct3 = new G.PhysicalKeyboardKey(392973, "Game Button 13");
    C.PhysicalKeyboardKey_1ga = new G.PhysicalKeyboardKey(392974, "Game Button 14");
    C.PhysicalKeyboardKey_2jN0 = new G.PhysicalKeyboardKey(392975, "Game Button 15");
    C.PhysicalKeyboardKey_vpC = new G.PhysicalKeyboardKey(392976, "Game Button 16");
    C.PhysicalKeyboardKey_CBZ = new G.PhysicalKeyboardKey(392977, "Game Button A");
    C.PhysicalKeyboardKey_o0c = new G.PhysicalKeyboardKey(392978, "Game Button B");
    C.PhysicalKeyboardKey_6CK = new G.PhysicalKeyboardKey(392979, "Game Button C");
    C.PhysicalKeyboardKey_QvW = new G.PhysicalKeyboardKey(392980, "Game Button Left 1");
    C.PhysicalKeyboardKey_nfu = new G.PhysicalKeyboardKey(392981, "Game Button Left 2");
    C.PhysicalKeyboardKey_O1c = new G.PhysicalKeyboardKey(392982, "Game Button Mode");
    C.PhysicalKeyboardKey_EKW = new G.PhysicalKeyboardKey(392983, "Game Button Right 1");
    C.PhysicalKeyboardKey_W1o = new G.PhysicalKeyboardKey(392984, "Game Button Right 2");
    C.PhysicalKeyboardKey_ASA = new G.PhysicalKeyboardKey(392985, "Game Button Select");
    C.PhysicalKeyboardKey_kbd = new G.PhysicalKeyboardKey(392986, "Game Button Start");
    C.PhysicalKeyboardKey_wEo0 = new G.PhysicalKeyboardKey(392987, "Game Button Thumb Left");
    C.PhysicalKeyboardKey_f7r = new G.PhysicalKeyboardKey(392988, "Game Button Thumb Right");
    C.PhysicalKeyboardKey_Ohs = new G.PhysicalKeyboardKey(392989, "Game Button X");
    C.PhysicalKeyboardKey_M6L = new G.PhysicalKeyboardKey(392990, "Game Button Y");
    C.PhysicalKeyboardKey_yHf = new G.PhysicalKeyboardKey(392991, "Game Button Z");
    C.Map_FYU44 = new H.GeneralConstantMap([205, C.PhysicalKeyboardKey_20_Suspend, 142, C.PhysicalKeyboardKey_65666_Sleep, 143, C.PhysicalKeyboardKey_XLl, 30, C.PhysicalKeyboardKey_c4y, 48, C.PhysicalKeyboardKey_Ui9, 46, C.PhysicalKeyboardKey_oqy, 32, C.PhysicalKeyboardKey_Aec, 18, C.PhysicalKeyboardKey_e7M, 33, C.PhysicalKeyboardKey_WjS, 34, C.PhysicalKeyboardKey_cgs, 35, C.PhysicalKeyboardKey_O9K, 23, C.PhysicalKeyboardKey_ATp, 36, C.PhysicalKeyboardKey_8Qj, 37, C.PhysicalKeyboardKey_02V, 38, C.PhysicalKeyboardKey_2jN, 50, C.PhysicalKeyboardKey_Pdn, 49, C.PhysicalKeyboardKey_sQd, 24, C.PhysicalKeyboardKey_oYc, 25, C.PhysicalKeyboardKey_ClL, 16, C.PhysicalKeyboardKey_ON8, 19, C.PhysicalKeyboardKey_kfn, 31, C.PhysicalKeyboardKey_yXI, 20, C.PhysicalKeyboardKey_86y, 22, C.PhysicalKeyboardKey_3NL, 47, C.PhysicalKeyboardKey_Sof, 17, C.PhysicalKeyboardKey_gc6, 45, C.PhysicalKeyboardKey_XTH, 21, C.PhysicalKeyboardKey_699, 44, C.PhysicalKeyboardKey_geL, 2, C.PhysicalKeyboardKey_9kk, 3, C.PhysicalKeyboardKey_gEY, 4, C.PhysicalKeyboardKey_Ddv, 5, C.PhysicalKeyboardKey_aNU, 6, C.PhysicalKeyboardKey_gc60, 7, C.PhysicalKeyboardKey_wg4, 8, C.PhysicalKeyboardKey_Tkj, 9, C.PhysicalKeyboardKey_GRf, 10, C.PhysicalKeyboardKey_C4W, 11, C.PhysicalKeyboardKey_eYS, 28, C.PhysicalKeyboardKey_458792_Enter, 1, C.PhysicalKeyboardKey_458793_Escape, 14, C.PhysicalKeyboardKey_458794_Backspace, 15, C.PhysicalKeyboardKey_458795_Tab, 57, C.PhysicalKeyboardKey_458796_Space, 12, C.PhysicalKeyboardKey_458797_Minus, 13, C.PhysicalKeyboardKey_458798_Equal, 26, C.PhysicalKeyboardKey_Dx1, 27, C.PhysicalKeyboardKey_YIZ, 43, C.PhysicalKeyboardKey_458801_Backslash, 86, C.PhysicalKeyboardKey_458801_Backslash, 39, C.PhysicalKeyboardKey_458803_Semicolon, 40, C.PhysicalKeyboardKey_458804_Quote, 41, C.PhysicalKeyboardKey_458805_Backquote, 51, C.PhysicalKeyboardKey_458806_Comma, 52, C.PhysicalKeyboardKey_458807_Period, 53, C.PhysicalKeyboardKey_458808_Slash, 58, C.PhysicalKeyboardKey_eAf, 59, C.PhysicalKeyboardKey_458810_F1, 60, C.PhysicalKeyboardKey_458811_F2, 61, C.PhysicalKeyboardKey_458812_F3, 62, C.PhysicalKeyboardKey_458813_F4, 63, C.PhysicalKeyboardKey_458814_F5, 64, C.PhysicalKeyboardKey_458815_F6, 65, C.PhysicalKeyboardKey_458816_F7, 66, C.PhysicalKeyboardKey_458817_F8, 67, C.PhysicalKeyboardKey_458818_F9, 68, C.PhysicalKeyboardKey_458819_F10, 87, C.PhysicalKeyboardKey_458820_F11, 88, C.PhysicalKeyboardKey_458821_F12, 99, C.PhysicalKeyboardKey_DNn, 70, C.PhysicalKeyboardKey_DpI, 119, C.PhysicalKeyboardKey_458824_Pause, 411, C.PhysicalKeyboardKey_458824_Pause, 110, C.PhysicalKeyboardKey_458825_Insert, 102, C.PhysicalKeyboardKey_458826_Home, 104, C.PhysicalKeyboardKey_gg90, 177, C.PhysicalKeyboardKey_gg90, 111, C.PhysicalKeyboardKey_458828_Delete, 107, C.PhysicalKeyboardKey_458829_End, 109, C.PhysicalKeyboardKey_UCG, 178, C.PhysicalKeyboardKey_UCG, 106, C.PhysicalKeyboardKey_Q8r, 105, C.PhysicalKeyboardKey_4iW, 108, C.PhysicalKeyboardKey_G79, 103, C.PhysicalKeyboardKey_ytW, 69, C.PhysicalKeyboardKey_A3V, 98, C.PhysicalKeyboardKey_A4L, 55, C.PhysicalKeyboardKey_cgN, 74, C.PhysicalKeyboardKey_43h, 78, C.PhysicalKeyboardKey_OGx, 96, C.PhysicalKeyboardKey_6dA, 79, C.PhysicalKeyboardKey_si2, 80, C.PhysicalKeyboardKey_si20, 81, C.PhysicalKeyboardKey_si21, 75, C.PhysicalKeyboardKey_si22, 76, C.PhysicalKeyboardKey_CtV, 77, C.PhysicalKeyboardKey_CtV0, 71, C.PhysicalKeyboardKey_CtV1, 72, C.PhysicalKeyboardKey_U44, 73, C.PhysicalKeyboardKey_U440, 82, C.PhysicalKeyboardKey_U441, 83, C.PhysicalKeyboardKey_s0y, 127, C.PhysicalKeyboardKey_m5d, 139, C.PhysicalKeyboardKey_m5d, 116, C.PhysicalKeyboardKey_458854_Power, 152, C.PhysicalKeyboardKey_458854_Power, 117, C.PhysicalKeyboardKey_izR, 183, C.PhysicalKeyboardKey_458856_F13, 184, C.PhysicalKeyboardKey_458857_F14, 185, C.PhysicalKeyboardKey_458858_F15, 186, C.PhysicalKeyboardKey_458859_F16, 187, C.PhysicalKeyboardKey_458860_F17, 188, C.PhysicalKeyboardKey_458861_F18, 189, C.PhysicalKeyboardKey_458862_F19, 190, C.PhysicalKeyboardKey_458863_F20, 191, C.PhysicalKeyboardKey_458864_F21, 192, C.PhysicalKeyboardKey_458865_F22, 193, C.PhysicalKeyboardKey_458866_F23, 194, C.PhysicalKeyboardKey_458867_F24, 134, C.PhysicalKeyboardKey_458868_Open, 138, C.PhysicalKeyboardKey_458869_Help, 353, C.PhysicalKeyboardKey_458871_Select, 129, C.PhysicalKeyboardKey_458873_Again, 131, C.PhysicalKeyboardKey_458874_Undo, 137, C.PhysicalKeyboardKey_458875_Cut, 133, C.PhysicalKeyboardKey_458876_Copy, 135, C.PhysicalKeyboardKey_458877_Paste, 136, C.PhysicalKeyboardKey_458878_Find, 113, C.PhysicalKeyboardKey_042, 115, C.PhysicalKeyboardKey_yjH, 114, C.PhysicalKeyboardKey_2nP, 95, C.PhysicalKeyboardKey_AoG, 121, C.PhysicalKeyboardKey_AoG, 92, C.PhysicalKeyboardKey_458890_Convert, 94, C.PhysicalKeyboardKey_Mys, 90, C.PhysicalKeyboardKey_AJU, 91, C.PhysicalKeyboardKey_AJU0, 130, C.PhysicalKeyboardKey_458915_Props, 179, C.PhysicalKeyboardKey_Ga7, 180, C.PhysicalKeyboardKey_9we, 29, C.PhysicalKeyboardKey_wEo, 42, C.PhysicalKeyboardKey_Y3m, 56, C.PhysicalKeyboardKey_CNh, 125, C.PhysicalKeyboardKey_gg9, 97, C.PhysicalKeyboardKey_Q4j, 54, C.PhysicalKeyboardKey_fBD, 100, C.PhysicalKeyboardKey_7FR, 126, C.PhysicalKeyboardKey_INA, 358, C.PhysicalKeyboardKey_786528_Info, 225, C.PhysicalKeyboardKey_UwG, 224, C.PhysicalKeyboardKey_6hp, 174, C.PhysicalKeyboardKey_786580_Exit, 402, C.PhysicalKeyboardKey_F3v, 403, C.PhysicalKeyboardKey_0Hm, 200, C.PhysicalKeyboardKey_bHn, 207, C.PhysicalKeyboardKey_bHn, 201, C.PhysicalKeyboardKey_mc1, 167, C.PhysicalKeyboardKey_4Nv, 208, C.PhysicalKeyboardKey_ibp, 168, C.PhysicalKeyboardKey_3GJ, 163, C.PhysicalKeyboardKey_e8P, 165, C.PhysicalKeyboardKey_Sv6, 128, C.PhysicalKeyboardKey_8Gl, 166, C.PhysicalKeyboardKey_8Gl, 161, C.PhysicalKeyboardKey_786616_Eject, 162, C.PhysicalKeyboardKey_786616_Eject, 164, C.PhysicalKeyboardKey_tgd, 209, C.PhysicalKeyboardKey_PDJ, 155, C.PhysicalKeyboardKey_cEx, 215, C.PhysicalKeyboardKey_cEx, 429, C.PhysicalKeyboardKey_n9b, 397, C.PhysicalKeyboardKey_iGv, 181, C.PhysicalKeyboardKey_XAC, 160, C.PhysicalKeyboardKey_786947_Close, 206, C.PhysicalKeyboardKey_786947_Close, 210, C.PhysicalKeyboardKey_786952_Print, 217, C.PhysicalKeyboardKey_QkZ, 159, C.PhysicalKeyboardKey_p6a, 156, C.PhysicalKeyboardKey_sHU, 182, C.PhysicalKeyboardKey_787065_Redo, 256, C.PhysicalKeyboardKey_ihV, 288, C.PhysicalKeyboardKey_ihV, 257, C.PhysicalKeyboardKey_qhE, 289, C.PhysicalKeyboardKey_qhE, 258, C.PhysicalKeyboardKey_eXH, 290, C.PhysicalKeyboardKey_eXH, 259, C.PhysicalKeyboardKey_lm1, 291, C.PhysicalKeyboardKey_lm1, 260, C.PhysicalKeyboardKey_kxd, 292, C.PhysicalKeyboardKey_kxd, 261, C.PhysicalKeyboardKey_PDz, 293, C.PhysicalKeyboardKey_PDz, 262, C.PhysicalKeyboardKey_m5H, 294, C.PhysicalKeyboardKey_m5H, 263, C.PhysicalKeyboardKey_ihV0, 295, C.PhysicalKeyboardKey_ihV0, 264, C.PhysicalKeyboardKey_FNx, 296, C.PhysicalKeyboardKey_FNx, 265, C.PhysicalKeyboardKey_9k7, 297, C.PhysicalKeyboardKey_9k7, 266, C.PhysicalKeyboardKey_adS, 298, C.PhysicalKeyboardKey_adS, 267, C.PhysicalKeyboardKey_Kl9, 299, C.PhysicalKeyboardKey_Kl9, 268, C.PhysicalKeyboardKey_Ct3, 300, C.PhysicalKeyboardKey_Ct3, 269, C.PhysicalKeyboardKey_1ga, 301, C.PhysicalKeyboardKey_1ga, 270, C.PhysicalKeyboardKey_2jN0, 302, C.PhysicalKeyboardKey_2jN0, 271, C.PhysicalKeyboardKey_vpC, 303, C.PhysicalKeyboardKey_vpC, 304, C.PhysicalKeyboardKey_CBZ, 305, C.PhysicalKeyboardKey_o0c, 306, C.PhysicalKeyboardKey_6CK, 310, C.PhysicalKeyboardKey_QvW, 312, C.PhysicalKeyboardKey_nfu, 316, C.PhysicalKeyboardKey_O1c, 311, C.PhysicalKeyboardKey_EKW, 313, C.PhysicalKeyboardKey_W1o, 314, C.PhysicalKeyboardKey_ASA, 315, C.PhysicalKeyboardKey_kbd, 317, C.PhysicalKeyboardKey_wEo0, 318, C.PhysicalKeyboardKey_f7r, 307, C.PhysicalKeyboardKey_Ohs, 308, C.PhysicalKeyboardKey_M6L, 309, C.PhysicalKeyboardKey_yHf, 464, C.PhysicalKeyboardKey_18_Fn], type$.GeneralConstantMap_int_PhysicalKeyboardKey);
    C.Color_4294638330 = new P.Color(4294638330);
    C.Color_4294309365 = new P.Color(4294309365);
    C.Color_4293848814 = new P.Color(4293848814);
    C.Color_4292927712 = new P.Color(4292927712);
    C.Color_4292269782 = new P.Color(4292269782);
    C.Color_4290624957 = new P.Color(4290624957);
    C.Color_4288585374 = new P.Color(4288585374);
    C.Color_4284572001 = new P.Color(4284572001);
    C.Color_4282532418 = new P.Color(4282532418);
    C.Color_4280361249 = new P.Color(4280361249);
    C.Map_HFpTk = new H.GeneralConstantMap([50, C.Color_4294638330, 100, C.Color_4294309365, 200, C.Color_4293848814, 300, C.Color_4292927712, 350, C.Color_4292269782, 400, C.Color_4290624957, 500, C.Color_4288585374, 600, C.Color_4285887861, 700, C.Color_4284572001, 800, C.Color_4282532418, 850, C.Color_4281348144, 900, C.Color_4280361249], type$.GeneralConstantMap_int_Color);
    C.Color_4294962158 = new P.Color(4294962158);
    C.Color_4294954450 = new P.Color(4294954450);
    C.Color_4293892762 = new P.Color(4293892762);
    C.Color_4293227379 = new P.Color(4293227379);
    C.Color_4293874512 = new P.Color(4293874512);
    C.Color_4294198070 = new P.Color(4294198070);
    C.Color_4293212469 = new P.Color(4293212469);
    C.Color_4292030255 = new P.Color(4292030255);
    C.Color_4291176488 = new P.Color(4291176488);
    C.Color_4290190364 = new P.Color(4290190364);
    C.Map_JNc9P = new H.GeneralConstantMap([50, C.Color_4294962158, 100, C.Color_4294954450, 200, C.Color_4293892762, 300, C.Color_4293227379, 400, C.Color_4293874512, 500, C.Color_4294198070, 600, C.Color_4293212469, 700, C.Color_4292030255, 800, C.Color_4291176488, 900, C.Color_4290190364], type$.GeneralConstantMap_int_Color);
    C.Color_4293128957 = new P.Color(4293128957);
    C.Color_4290502395 = new P.Color(4290502395);
    C.Color_4287679225 = new P.Color(4287679225);
    C.Color_4284790262 = new P.Color(4284790262);
    C.Color_4282557941 = new P.Color(4282557941);
    C.Color_4280391411 = new P.Color(4280391411);
    C.Color_4280191205 = new P.Color(4280191205);
    C.Color_4279858898 = new P.Color(4279858898);
    C.Color_4279592384 = new P.Color(4279592384);
    C.Color_4279060385 = new P.Color(4279060385);
    C.Map_JNwaj = new H.GeneralConstantMap([50, C.Color_4293128957, 100, C.Color_4290502395, 200, C.Color_4287679225, 300, C.Color_4284790262, 400, C.Color_4282557941, 500, C.Color_4280391411, 600, C.Color_4280191205, 700, C.Color_4279858898, 800, C.Color_4279592384, 900, C.Color_4279060385], type$.GeneralConstantMap_int_Color);
    C.PhysicalKeyboardKey_S35 = new G.PhysicalKeyboardKey(23, "Privacy Screen Toggle");
    C.PhysicalKeyboardKey_Co2 = new G.PhysicalKeyboardKey(65717, "Display Toggle Int Ext");
    C.PhysicalKeyboardKey_Yqx = new G.PhysicalKeyboardKey(458888, "Kana Mode");
    C.PhysicalKeyboardKey_AJU1 = new G.PhysicalKeyboardKey(458900, "Lang 5");
    C.PhysicalKeyboardKey_KpS = new G.PhysicalKeyboardKey(458967, "Numpad Sign Change");
    C.PhysicalKeyboardKey_64z = new G.PhysicalKeyboardKey(786529, "Closed Caption Toggle");
    C.PhysicalKeyboardKey_idk = new G.PhysicalKeyboardKey(786546, "Brightness Toggle");
    C.PhysicalKeyboardKey_VGp = new G.PhysicalKeyboardKey(786547, "Brightness Minimum");
    C.PhysicalKeyboardKey_VGp0 = new G.PhysicalKeyboardKey(786548, "Brightness Maximum");
    C.PhysicalKeyboardKey_b1n = new G.PhysicalKeyboardKey(786549, "Brightness Auto");
    C.PhysicalKeyboardKey_szR = new G.PhysicalKeyboardKey(786563, "Media Last");
    C.PhysicalKeyboardKey_yzp = new G.PhysicalKeyboardKey(786572, "Launch Phone");
    C.PhysicalKeyboardKey_6Pd = new G.PhysicalKeyboardKey(786573, "Program Guide");
    C.PhysicalKeyboardKey_MAi = new G.PhysicalKeyboardKey(786639, "Speech Input Toggle");
    C.PhysicalKeyboardKey_sJO = new G.PhysicalKeyboardKey(786819, "Media Select");
    C.PhysicalKeyboardKey_eAf0 = new G.PhysicalKeyboardKey(786820, "Launch Word Processor");
    C.PhysicalKeyboardKey_4eY = new G.PhysicalKeyboardKey(786822, "Launch Spreadsheet");
    C.PhysicalKeyboardKey_q48 = new G.PhysicalKeyboardKey(786834, "Launch App2");
    C.PhysicalKeyboardKey_q480 = new G.PhysicalKeyboardKey(786836, "Launch App1");
    C.PhysicalKeyboardKey_Y9N = new G.PhysicalKeyboardKey(786838, "Launch Internet Browser");
    C.PhysicalKeyboardKey_kqj = new G.PhysicalKeyboardKey(786844, "Log Off");
    C.PhysicalKeyboardKey_9aX = new G.PhysicalKeyboardKey(786846, "Lock Screen");
    C.PhysicalKeyboardKey_7FR0 = new G.PhysicalKeyboardKey(786847, "Launch Control Panel");
    C.PhysicalKeyboardKey_yDH = new G.PhysicalKeyboardKey(786850, "Select Task");
    C.PhysicalKeyboardKey_sor = new G.PhysicalKeyboardKey(786855, "Launch Documents");
    C.PhysicalKeyboardKey_P16 = new G.PhysicalKeyboardKey(786859, "Spell Check");
    C.PhysicalKeyboardKey_CNR = new G.PhysicalKeyboardKey(786862, "Launch Keyboard Layout");
    C.PhysicalKeyboardKey_359 = new G.PhysicalKeyboardKey(786865, "Launch Screen Saver");
    C.PhysicalKeyboardKey_1QK = new G.PhysicalKeyboardKey(786891, "Launch Assistant");
    C.PhysicalKeyboardKey_Ugm = new G.PhysicalKeyboardKey(786871, "Launch Audio Browser");
    C.PhysicalKeyboardKey_786951_Save = new G.PhysicalKeyboardKey(786951, "Save");
    C.PhysicalKeyboardKey_X7N = new G.PhysicalKeyboardKey(786979, "Browser Home");
    C.PhysicalKeyboardKey_ACk = new G.PhysicalKeyboardKey(786980, "Browser Back");
    C.PhysicalKeyboardKey_3Vk = new G.PhysicalKeyboardKey(786982, "Browser Stop");
    C.PhysicalKeyboardKey_2Vk = new G.PhysicalKeyboardKey(786983, "Browser Refresh");
    C.PhysicalKeyboardKey_Up3 = new G.PhysicalKeyboardKey(786989, "Zoom In");
    C.PhysicalKeyboardKey_JVk = new G.PhysicalKeyboardKey(786990, "Zoom Out");
    C.PhysicalKeyboardKey_uLS = new G.PhysicalKeyboardKey(786994, "Zoom Toggle");
    C.PhysicalKeyboardKey_bVa = new G.PhysicalKeyboardKey(787081, "Mail Reply");
    C.PhysicalKeyboardKey_YqA = new G.PhysicalKeyboardKey(787083, "Mail Forward");
    C.PhysicalKeyboardKey_V4w = new G.PhysicalKeyboardKey(787084, "Mail Send");
    C.PhysicalKeyboardKey_YOq = new G.PhysicalKeyboardKey(787101, "Keyboard Layout Select");
    C.PhysicalKeyboardKey_vAr = new G.PhysicalKeyboardKey(787103, "Show All Windows");
    C.Map_NUnnN = new H.GeneralConstantMap([641, C.PhysicalKeyboardKey_S35, 150, C.PhysicalKeyboardKey_65666_Sleep, 151, C.PhysicalKeyboardKey_XLl, 235, C.PhysicalKeyboardKey_Co2, 38, C.PhysicalKeyboardKey_c4y, 56, C.PhysicalKeyboardKey_Ui9, 54, C.PhysicalKeyboardKey_oqy, 40, C.PhysicalKeyboardKey_Aec, 26, C.PhysicalKeyboardKey_e7M, 41, C.PhysicalKeyboardKey_WjS, 42, C.PhysicalKeyboardKey_cgs, 43, C.PhysicalKeyboardKey_O9K, 31, C.PhysicalKeyboardKey_ATp, 44, C.PhysicalKeyboardKey_8Qj, 45, C.PhysicalKeyboardKey_02V, 46, C.PhysicalKeyboardKey_2jN, 58, C.PhysicalKeyboardKey_Pdn, 57, C.PhysicalKeyboardKey_sQd, 32, C.PhysicalKeyboardKey_oYc, 33, C.PhysicalKeyboardKey_ClL, 24, C.PhysicalKeyboardKey_ON8, 27, C.PhysicalKeyboardKey_kfn, 39, C.PhysicalKeyboardKey_yXI, 28, C.PhysicalKeyboardKey_86y, 30, C.PhysicalKeyboardKey_3NL, 55, C.PhysicalKeyboardKey_Sof, 25, C.PhysicalKeyboardKey_gc6, 53, C.PhysicalKeyboardKey_XTH, 29, C.PhysicalKeyboardKey_699, 52, C.PhysicalKeyboardKey_geL, 10, C.PhysicalKeyboardKey_9kk, 11, C.PhysicalKeyboardKey_gEY, 12, C.PhysicalKeyboardKey_Ddv, 13, C.PhysicalKeyboardKey_aNU, 14, C.PhysicalKeyboardKey_gc60, 15, C.PhysicalKeyboardKey_wg4, 16, C.PhysicalKeyboardKey_Tkj, 17, C.PhysicalKeyboardKey_GRf, 18, C.PhysicalKeyboardKey_C4W, 19, C.PhysicalKeyboardKey_eYS, 36, C.PhysicalKeyboardKey_458792_Enter, 9, C.PhysicalKeyboardKey_458793_Escape, 22, C.PhysicalKeyboardKey_458794_Backspace, 23, C.PhysicalKeyboardKey_458795_Tab, 65, C.PhysicalKeyboardKey_458796_Space, 20, C.PhysicalKeyboardKey_458797_Minus, 21, C.PhysicalKeyboardKey_458798_Equal, 34, C.PhysicalKeyboardKey_Dx1, 35, C.PhysicalKeyboardKey_YIZ, 51, C.PhysicalKeyboardKey_458801_Backslash, 47, C.PhysicalKeyboardKey_458803_Semicolon, 48, C.PhysicalKeyboardKey_458804_Quote, 49, C.PhysicalKeyboardKey_458805_Backquote, 59, C.PhysicalKeyboardKey_458806_Comma, 60, C.PhysicalKeyboardKey_458807_Period, 61, C.PhysicalKeyboardKey_458808_Slash, 66, C.PhysicalKeyboardKey_eAf, 67, C.PhysicalKeyboardKey_458810_F1, 68, C.PhysicalKeyboardKey_458811_F2, 69, C.PhysicalKeyboardKey_458812_F3, 70, C.PhysicalKeyboardKey_458813_F4, 71, C.PhysicalKeyboardKey_458814_F5, 72, C.PhysicalKeyboardKey_458815_F6, 73, C.PhysicalKeyboardKey_458816_F7, 74, C.PhysicalKeyboardKey_458817_F8, 75, C.PhysicalKeyboardKey_458818_F9, 76, C.PhysicalKeyboardKey_458819_F10, 95, C.PhysicalKeyboardKey_458820_F11, 96, C.PhysicalKeyboardKey_458821_F12, 107, C.PhysicalKeyboardKey_DNn, 78, C.PhysicalKeyboardKey_DpI, 127, C.PhysicalKeyboardKey_458824_Pause, 118, C.PhysicalKeyboardKey_458825_Insert, 110, C.PhysicalKeyboardKey_458826_Home, 112, C.PhysicalKeyboardKey_gg90, 119, C.PhysicalKeyboardKey_458828_Delete, 115, C.PhysicalKeyboardKey_458829_End, 117, C.PhysicalKeyboardKey_UCG, 114, C.PhysicalKeyboardKey_Q8r, 113, C.PhysicalKeyboardKey_4iW, 116, C.PhysicalKeyboardKey_G79, 111, C.PhysicalKeyboardKey_ytW, 77, C.PhysicalKeyboardKey_A3V, 106, C.PhysicalKeyboardKey_A4L, 63, C.PhysicalKeyboardKey_cgN, 82, C.PhysicalKeyboardKey_43h, 86, C.PhysicalKeyboardKey_OGx, 104, C.PhysicalKeyboardKey_6dA, 87, C.PhysicalKeyboardKey_si2, 88, C.PhysicalKeyboardKey_si20, 89, C.PhysicalKeyboardKey_si21, 83, C.PhysicalKeyboardKey_si22, 84, C.PhysicalKeyboardKey_CtV, 85, C.PhysicalKeyboardKey_CtV0, 79, C.PhysicalKeyboardKey_CtV1, 80, C.PhysicalKeyboardKey_U44, 81, C.PhysicalKeyboardKey_U440, 90, C.PhysicalKeyboardKey_U441, 91, C.PhysicalKeyboardKey_s0y, 94, C.PhysicalKeyboardKey_jrj, 135, C.PhysicalKeyboardKey_m5d, 124, C.PhysicalKeyboardKey_458854_Power, 125, C.PhysicalKeyboardKey_izR, 191, C.PhysicalKeyboardKey_458856_F13, 192, C.PhysicalKeyboardKey_458857_F14, 193, C.PhysicalKeyboardKey_458858_F15, 194, C.PhysicalKeyboardKey_458859_F16, 195, C.PhysicalKeyboardKey_458860_F17, 196, C.PhysicalKeyboardKey_458861_F18, 197, C.PhysicalKeyboardKey_458862_F19, 198, C.PhysicalKeyboardKey_458863_F20, 199, C.PhysicalKeyboardKey_458864_F21, 200, C.PhysicalKeyboardKey_458865_F22, 201, C.PhysicalKeyboardKey_458866_F23, 202, C.PhysicalKeyboardKey_458867_F24, 142, C.PhysicalKeyboardKey_458868_Open, 146, C.PhysicalKeyboardKey_458869_Help, 140, C.PhysicalKeyboardKey_458871_Select, 137, C.PhysicalKeyboardKey_458873_Again, 139, C.PhysicalKeyboardKey_458874_Undo, 145, C.PhysicalKeyboardKey_458875_Cut, 141, C.PhysicalKeyboardKey_458876_Copy, 143, C.PhysicalKeyboardKey_458877_Paste, 144, C.PhysicalKeyboardKey_458878_Find, 121, C.PhysicalKeyboardKey_042, 123, C.PhysicalKeyboardKey_yjH, 122, C.PhysicalKeyboardKey_2nP, 129, C.PhysicalKeyboardKey_AoG, 97, C.PhysicalKeyboardKey_4OV, 101, C.PhysicalKeyboardKey_Yqx, 132, C.PhysicalKeyboardKey_y47, 100, C.PhysicalKeyboardKey_458890_Convert, 102, C.PhysicalKeyboardKey_Mys, 130, C.PhysicalKeyboardKey_Cni, 131, C.PhysicalKeyboardKey_Cni0, 98, C.PhysicalKeyboardKey_AJU, 99, C.PhysicalKeyboardKey_AJU0, 93, C.PhysicalKeyboardKey_AJU1, 187, C.PhysicalKeyboardKey_Ga7, 188, C.PhysicalKeyboardKey_9we, 126, C.PhysicalKeyboardKey_KpS, 37, C.PhysicalKeyboardKey_wEo, 50, C.PhysicalKeyboardKey_Y3m, 64, C.PhysicalKeyboardKey_CNh, 133, C.PhysicalKeyboardKey_gg9, 105, C.PhysicalKeyboardKey_Q4j, 62, C.PhysicalKeyboardKey_fBD, 108, C.PhysicalKeyboardKey_7FR, 134, C.PhysicalKeyboardKey_INA, 366, C.PhysicalKeyboardKey_786528_Info, 378, C.PhysicalKeyboardKey_64z, 233, C.PhysicalKeyboardKey_UwG, 232, C.PhysicalKeyboardKey_6hp, 439, C.PhysicalKeyboardKey_idk, 600, C.PhysicalKeyboardKey_VGp, 601, C.PhysicalKeyboardKey_VGp0, 252, C.PhysicalKeyboardKey_b1n, 413, C.PhysicalKeyboardKey_szR, 177, C.PhysicalKeyboardKey_yzp, 370, C.PhysicalKeyboardKey_6Pd, 182, C.PhysicalKeyboardKey_786580_Exit, 418, C.PhysicalKeyboardKey_F3v, 419, C.PhysicalKeyboardKey_0Hm, 215, C.PhysicalKeyboardKey_bHn, 209, C.PhysicalKeyboardKey_mc1, 175, C.PhysicalKeyboardKey_4Nv, 216, C.PhysicalKeyboardKey_ibp, 176, C.PhysicalKeyboardKey_3GJ, 171, C.PhysicalKeyboardKey_e8P, 173, C.PhysicalKeyboardKey_Sv6, 174, C.PhysicalKeyboardKey_8Gl, 169, C.PhysicalKeyboardKey_786616_Eject, 172, C.PhysicalKeyboardKey_tgd, 590, C.PhysicalKeyboardKey_MAi, 217, C.PhysicalKeyboardKey_PDJ, 179, C.PhysicalKeyboardKey_sJO, 429, C.PhysicalKeyboardKey_eAf0, 431, C.PhysicalKeyboardKey_4eY, 163, C.PhysicalKeyboardKey_cEx, 437, C.PhysicalKeyboardKey_n9b, 405, C.PhysicalKeyboardKey_iGv, 148, C.PhysicalKeyboardKey_q48, 152, C.PhysicalKeyboardKey_q480, 158, C.PhysicalKeyboardKey_Y9N, 441, C.PhysicalKeyboardKey_kqj, 160, C.PhysicalKeyboardKey_9aX, 587, C.PhysicalKeyboardKey_7FR0, 588, C.PhysicalKeyboardKey_yDH, 243, C.PhysicalKeyboardKey_sor, 440, C.PhysicalKeyboardKey_P16, 382, C.PhysicalKeyboardKey_CNR, 589, C.PhysicalKeyboardKey_359, 591, C.PhysicalKeyboardKey_1QK, 400, C.PhysicalKeyboardKey_Ugm, 189, C.PhysicalKeyboardKey_XAC, 214, C.PhysicalKeyboardKey_786947_Close, 242, C.PhysicalKeyboardKey_786951_Save, 218, C.PhysicalKeyboardKey_786952_Print, 225, C.PhysicalKeyboardKey_QkZ, 180, C.PhysicalKeyboardKey_X7N, 166, C.PhysicalKeyboardKey_ACk, 167, C.PhysicalKeyboardKey_p6a, 136, C.PhysicalKeyboardKey_3Vk, 181, C.PhysicalKeyboardKey_2Vk, 164, C.PhysicalKeyboardKey_sHU, 426, C.PhysicalKeyboardKey_Up3, 427, C.PhysicalKeyboardKey_JVk, 380, C.PhysicalKeyboardKey_uLS, 190, C.PhysicalKeyboardKey_787065_Redo, 240, C.PhysicalKeyboardKey_bVa, 241, C.PhysicalKeyboardKey_YqA, 239, C.PhysicalKeyboardKey_V4w, 592, C.PhysicalKeyboardKey_YOq, 128, C.PhysicalKeyboardKey_vAr], type$.GeneralConstantMap_int_PhysicalKeyboardKey);
    C.List_YVI = H.setRuntimeTypeInfo(makeConstList(["None", "Hyper", "Super", "FnLock", "Suspend", "Resume", "Turbo", "PrivacyScreenToggle", "Sleep", "WakeUp", "DisplayToggleIntExt", "KeyA", "KeyB", "KeyC", "KeyD", "KeyE", "KeyF", "KeyG", "KeyH", "KeyI", "KeyJ", "KeyK", "KeyL", "KeyM", "KeyN", "KeyO", "KeyP", "KeyQ", "KeyR", "KeyS", "KeyT", "KeyU", "KeyV", "KeyW", "KeyX", "KeyY", "KeyZ", "Digit1", "Digit2", "Digit3", "Digit4", "Digit5", "Digit6", "Digit7", "Digit8", "Digit9", "Digit0", "Enter", "Escape", "Backspace", "Tab", "Space", "Minus", "Equal", "BracketLeft", "BracketRight", "Backslash", "Semicolon", "Quote", "Backquote", "Comma", "Period", "Slash", "CapsLock", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "PrintScreen", "ScrollLock", "Pause", "Insert", "Home", "PageUp", "Delete", "End", "PageDown", "ArrowRight", "ArrowLeft", "ArrowDown", "ArrowUp", "NumLock", "NumpadDivide", "NumpadMultiply", "NumpadSubtract", "NumpadAdd", "NumpadEnter", "Numpad1", "Numpad2", "Numpad3", "Numpad4", "Numpad5", "Numpad6", "Numpad7", "Numpad8", "Numpad9", "Numpad0", "NumpadDecimal", "IntlBackslash", "ContextMenu", "Power", "NumpadEqual", "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", "F21", "F22", "F23", "F24", "Open", "Help", "Select", "Again", "Undo", "Cut", "Copy", "Paste", "Find", "AudioVolumeMute", "AudioVolumeUp", "AudioVolumeDown", "NumpadComma", "IntlRo", "KanaMode", "IntlYen", "Convert", "NonConvert", "Lang1", "Lang2", "Lang3", "Lang4", "Lang5", "Abort", "Props", "NumpadParenLeft", "NumpadParenRight", "NumpadBackspace", "NumpadMemoryStore", "NumpadMemoryRecall", "NumpadMemoryClear", "NumpadMemoryAdd", "NumpadMemorySubtract", "NumpadClear", "NumpadClearEntry", "ControlLeft", "ShiftLeft", "AltLeft", "MetaLeft", "ControlRight", "ShiftRight", "AltRight", "MetaRight", "BrightnessUp", "BrightnessDown", "MediaPlay", "MediaPause", "MediaRecord", "MediaFastForward", "MediaRewind", "MediaTrackNext", "MediaTrackPrevious", "MediaStop", "Eject", "MediaPlayPause", "MediaSelect", "LaunchMail", "LaunchApp2", "LaunchApp1", "LaunchControlPanel", "SelectTask", "LaunchScreenSaver", "LaunchAssistant", "BrowserSearch", "BrowserHome", "BrowserBack", "BrowserForward", "BrowserStop", "BrowserRefresh", "BrowserFavorites", "ZoomToggle", "MailReply", "MailForward", "MailSend", "KeyboardLayoutSelect", "ShowAllWindows", "GameButton1", "GameButton2", "GameButton3", "GameButton4", "GameButton5", "GameButton6", "GameButton7", "GameButton8", "GameButton9", "GameButton10", "GameButton11", "GameButton12", "GameButton13", "GameButton14", "GameButton15", "GameButton16", "GameButtonA", "GameButtonB", "GameButtonC", "GameButtonLeft1", "GameButtonLeft2", "GameButtonMode", "GameButtonRight1", "GameButtonRight2", "GameButtonSelect", "GameButtonStart", "GameButtonThumbLeft", "GameButtonThumbRight", "GameButtonX", "GameButtonY", "GameButtonZ", "Fn"]), type$.JSArray_String);
    C.Map_YVkOG = new H.ConstantStringMap(230, {None: C.LogicalKeyboardKey_4294967296_None_null, Hyper: C.LogicalKeyboardKey_4294967312_Hyper_null, Super: C.LogicalKeyboardKey_No3, FnLock: C.LogicalKeyboardKey_wz6, Suspend: C.LogicalKeyboardKey_4294967316_Suspend_null, Resume: C.LogicalKeyboardKey_4294967317_Resume_null, Turbo: C.LogicalKeyboardKey_4294967318_Turbo_null, PrivacyScreenToggle: C.LogicalKeyboardKey_8aB, Sleep: C.LogicalKeyboardKey_4295032962_Sleep_null, WakeUp: C.LogicalKeyboardKey_owA, DisplayToggleIntExt: C.LogicalKeyboardKey_M6i, KeyA: C.LogicalKeyboardKey_7G2, KeyB: C.LogicalKeyboardKey_jjv, KeyC: C.LogicalKeyboardKey_mF8, KeyD: C.LogicalKeyboardKey_ICU, KeyE: C.LogicalKeyboardKey_AaU, KeyF: C.LogicalKeyboardKey_2jN, KeyG: C.LogicalKeyboardKey_cKo, KeyH: C.LogicalKeyboardKey_QhK, KeyI: C.LogicalKeyboardKey_swi, KeyJ: C.LogicalKeyboardKey_CG7, KeyK: C.LogicalKeyboardKey_3jH, KeyL: C.LogicalKeyboardKey_4iU, KeyM: C.LogicalKeyboardKey_oe4, KeyN: C.LogicalKeyboardKey_OLv, KeyO: C.LogicalKeyboardKey_sav, KeyP: C.LogicalKeyboardKey_M6L, KeyQ: C.LogicalKeyboardKey_Ods, KeyR: C.LogicalKeyboardKey_qsN, KeyS: C.LogicalKeyboardKey_fLj, KeyT: C.LogicalKeyboardKey_V86, KeyU: C.LogicalKeyboardKey_Tng, KeyV: C.LogicalKeyboardKey_6Ng, KeyW: C.LogicalKeyboardKey_XaR, KeyX: C.LogicalKeyboardKey_ifx, KeyY: C.LogicalKeyboardKey_kQR, KeyZ: C.LogicalKeyboardKey_W2D, Digit1: C.LogicalKeyboardKey_4AN, Digit2: C.LogicalKeyboardKey_mmo, Digit3: C.LogicalKeyboardKey_a7X, Digit4: C.LogicalKeyboardKey_e9s, Digit5: C.LogicalKeyboardKey_43h, Digit6: C.LogicalKeyboardKey_CmI, Digit7: C.LogicalKeyboardKey_Db0, Digit8: C.LogicalKeyboardKey_GZG, Digit9: C.LogicalKeyboardKey_86y, Digit0: C.LogicalKeyboardKey_0, Enter: C.LogicalKeyboardKey_4295426088_Enter_null, Escape: C.LogicalKeyboardKey_4295426089_Escape_null, Backspace: C.LogicalKeyboardKey_4295426090_Backspace_null, Tab: C.LogicalKeyboardKey_4295426091_Tab_null, Space: C.LogicalKeyboardKey_YdN, Minus: C.LogicalKeyboardKey_oEN, Equal: C.LogicalKeyboardKey_wrE, BracketLeft: C.LogicalKeyboardKey_TLI, BracketRight: C.LogicalKeyboardKey_awJ, Backslash: C.LogicalKeyboardKey_cdS, Semicolon: C.LogicalKeyboardKey_atK, Quote: C.LogicalKeyboardKey_Qo8, Backquote: C.LogicalKeyboardKey_7FR, Comma: C.LogicalKeyboardKey_71T, Period: C.LogicalKeyboardKey_h8g, Slash: C.LogicalKeyboardKey_ouN, CapsLock: C.LogicalKeyboardKey_OWF, F1: C.LogicalKeyboardKey_4295426106_F1_null, F2: C.LogicalKeyboardKey_4295426107_F2_null, F3: C.LogicalKeyboardKey_4295426108_F3_null, F4: C.LogicalKeyboardKey_4295426109_F4_null, F5: C.LogicalKeyboardKey_4295426110_F5_null, F6: C.LogicalKeyboardKey_4295426111_F6_null, F7: C.LogicalKeyboardKey_4295426112_F7_null, F8: C.LogicalKeyboardKey_4295426113_F8_null, F9: C.LogicalKeyboardKey_4295426114_F9_null, F10: C.LogicalKeyboardKey_4295426115_F10_null, F11: C.LogicalKeyboardKey_4295426116_F11_null, F12: C.LogicalKeyboardKey_4295426117_F12_null, PrintScreen: C.LogicalKeyboardKey_wAl, ScrollLock: C.LogicalKeyboardKey_ujM, Pause: C.LogicalKeyboardKey_4295426120_Pause_null, Insert: C.LogicalKeyboardKey_4295426121_Insert_null, Home: C.LogicalKeyboardKey_4295426122_Home_null, PageUp: C.LogicalKeyboardKey_mgB, Delete: C.LogicalKeyboardKey_4295426124_Delete_null, End: C.LogicalKeyboardKey_4295426125_End_null, PageDown: C.LogicalKeyboardKey_wYn, ArrowRight: C.LogicalKeyboardKey_CzM, ArrowLeft: C.LogicalKeyboardKey_muk, ArrowDown: C.LogicalKeyboardKey_O7X, ArrowUp: C.LogicalKeyboardKey_gCR, NumLock: C.LogicalKeyboardKey_uHn, NumpadDivide: C.LogicalKeyboardKey_Npb, NumpadMultiply: C.LogicalKeyboardKey_iOn, NumpadSubtract: C.LogicalKeyboardKey_7xV, NumpadAdd: C.LogicalKeyboardKey_YaH, NumpadEnter: C.LogicalKeyboardKey_U2J, Numpad1: C.LogicalKeyboardKey_qsT, Numpad2: C.LogicalKeyboardKey_ka2, Numpad3: C.LogicalKeyboardKey_Ddz, Numpad4: C.LogicalKeyboardKey_YGD, Numpad5: C.LogicalKeyboardKey_s0r, Numpad6: C.LogicalKeyboardKey_atK0, Numpad7: C.LogicalKeyboardKey_3bB, Numpad8: C.LogicalKeyboardKey_sx4, Numpad9: C.LogicalKeyboardKey_4IJ, Numpad0: C.LogicalKeyboardKey_KQb, NumpadDecimal: C.LogicalKeyboardKey_iXq, IntlBackslash: C.LogicalKeyboardKey_6vi, ContextMenu: C.LogicalKeyboardKey_nDU, Power: C.LogicalKeyboardKey_4295426150_Power_null, NumpadEqual: C.LogicalKeyboardKey_G2v, F13: C.LogicalKeyboardKey_4295426152_F13_null, F14: C.LogicalKeyboardKey_4295426153_F14_null, F15: C.LogicalKeyboardKey_4295426154_F15_null, F16: C.LogicalKeyboardKey_4295426155_F16_null, F17: C.LogicalKeyboardKey_4295426156_F17_null, F18: C.LogicalKeyboardKey_4295426157_F18_null, F19: C.LogicalKeyboardKey_4295426158_F19_null, F20: C.LogicalKeyboardKey_4295426159_F20_null, F21: C.LogicalKeyboardKey_4295426160_F21_null, F22: C.LogicalKeyboardKey_4295426161_F22_null, F23: C.LogicalKeyboardKey_4295426162_F23_null, F24: C.LogicalKeyboardKey_4295426163_F24_null, Open: C.LogicalKeyboardKey_4295426164_Open_null, Help: C.LogicalKeyboardKey_4295426165_Help_null, Select: C.LogicalKeyboardKey_4295426167_Select_null, Again: C.LogicalKeyboardKey_4295426169_Again_null, Undo: C.LogicalKeyboardKey_4295426170_Undo_null, Cut: C.LogicalKeyboardKey_4295426171_Cut_null, Copy: C.LogicalKeyboardKey_4295426172_Copy_null, Paste: C.LogicalKeyboardKey_4295426173_Paste_null, Find: C.LogicalKeyboardKey_4295426174_Find_null, AudioVolumeMute: C.LogicalKeyboardKey_MjO, AudioVolumeUp: C.LogicalKeyboardKey_gap, AudioVolumeDown: C.LogicalKeyboardKey_c9P, NumpadComma: C.LogicalKeyboardKey_CLo, IntlRo: C.LogicalKeyboardKey_iDZ, KanaMode: C.LogicalKeyboardKey_aBa, IntlYen: C.LogicalKeyboardKey_c0h, Convert: C.LogicalKeyboardKey_4295426186_Convert_null, NonConvert: C.LogicalKeyboardKey_sBE, Lang1: C.LogicalKeyboardKey_nx9, Lang2: C.LogicalKeyboardKey_nx90, Lang3: C.LogicalKeyboardKey_nx91, Lang4: C.LogicalKeyboardKey_nx92, Lang5: C.LogicalKeyboardKey_nx93, Abort: C.LogicalKeyboardKey_4295426203_Abort_null, Props: C.LogicalKeyboardKey_4295426211_Props_null, NumpadParenLeft: C.LogicalKeyboardKey_wEo, NumpadParenRight: C.LogicalKeyboardKey_8Nr, NumpadBackspace: C.LogicalKeyboardKey_MUx, NumpadMemoryStore: C.LogicalKeyboardKey_2Zx, NumpadMemoryRecall: C.LogicalKeyboardKey_qqh, NumpadMemoryClear: C.LogicalKeyboardKey_CxF, NumpadMemoryAdd: C.LogicalKeyboardKey_I9f, NumpadMemorySubtract: C.LogicalKeyboardKey_YQd, NumpadClear: C.LogicalKeyboardKey_U86, NumpadClearEntry: C.LogicalKeyboardKey_OBv, ControlLeft: C.LogicalKeyboardKey_p6t, ShiftLeft: C.LogicalKeyboardKey_xok, AltLeft: C.LogicalKeyboardKey_PD9, MetaLeft: C.LogicalKeyboardKey_D0U, ControlRight: C.LogicalKeyboardKey_ijl, ShiftRight: C.LogicalKeyboardKey_QOu, AltRight: C.LogicalKeyboardKey_EtP, MetaRight: C.LogicalKeyboardKey_O1c, BrightnessUp: C.LogicalKeyboardKey_Djg, BrightnessDown: C.LogicalKeyboardKey_ECL, MediaPlay: C.LogicalKeyboardKey_Azp, MediaPause: C.LogicalKeyboardKey_qsO, MediaRecord: C.LogicalKeyboardKey_8eb, MediaFastForward: C.LogicalKeyboardKey_eEX, MediaRewind: C.LogicalKeyboardKey_kQR0, MediaTrackNext: C.LogicalKeyboardKey_n7o, MediaTrackPrevious: C.LogicalKeyboardKey_kHV, MediaStop: C.LogicalKeyboardKey_wfl, Eject: C.LogicalKeyboardKey_4295753912_Eject_null, MediaPlayPause: C.LogicalKeyboardKey_Cu4, MediaSelect: C.LogicalKeyboardKey_oPr, LaunchMail: C.LogicalKeyboardKey_9gS, LaunchApp2: C.LogicalKeyboardKey_00, LaunchApp1: C.LogicalKeyboardKey_01, LaunchControlPanel: C.LogicalKeyboardKey_9hT, SelectTask: C.LogicalKeyboardKey_Dns, LaunchScreenSaver: C.LogicalKeyboardKey_MYz, LaunchAssistant: C.LogicalKeyboardKey_IQp, BrowserSearch: C.LogicalKeyboardKey_EWB, BrowserHome: C.LogicalKeyboardKey_cEy, BrowserBack: C.LogicalKeyboardKey_kKc, BrowserForward: C.LogicalKeyboardKey_8pc, BrowserStop: C.LogicalKeyboardKey_MYu, BrowserRefresh: C.LogicalKeyboardKey_Un6, BrowserFavorites: C.LogicalKeyboardKey_46S, ZoomToggle: C.LogicalKeyboardKey_ijl0, MailReply: C.LogicalKeyboardKey_XHd, MailForward: C.LogicalKeyboardKey_WpI, MailSend: C.LogicalKeyboardKey_7aa, KeyboardLayoutSelect: C.LogicalKeyboardKey_JfL, ShowAllWindows: C.LogicalKeyboardKey_7eO, GameButton1: C.LogicalKeyboardKey_BFs, GameButton2: C.LogicalKeyboardKey_BFs0, GameButton3: C.LogicalKeyboardKey_BFs1, GameButton4: C.LogicalKeyboardKey_BFs2, GameButton5: C.LogicalKeyboardKey_BFs3, GameButton6: C.LogicalKeyboardKey_BFs4, GameButton7: C.LogicalKeyboardKey_BFs5, GameButton8: C.LogicalKeyboardKey_mbT, GameButton9: C.LogicalKeyboardKey_mbT0, GameButton10: C.LogicalKeyboardKey_Aci, GameButton11: C.LogicalKeyboardKey_Aci0, GameButton12: C.LogicalKeyboardKey_Aci1, GameButton13: C.LogicalKeyboardKey_Aci2, GameButton14: C.LogicalKeyboardKey_Aci3, GameButton15: C.LogicalKeyboardKey_Aci4, GameButton16: C.LogicalKeyboardKey_bti, GameButtonA: C.LogicalKeyboardKey_vfp, GameButtonB: C.LogicalKeyboardKey_vfp0, GameButtonC: C.LogicalKeyboardKey_vfp1, GameButtonLeft1: C.LogicalKeyboardKey_mi2, GameButtonLeft2: C.LogicalKeyboardKey_mi20, GameButtonMode: C.LogicalKeyboardKey_9sL, GameButtonRight1: C.LogicalKeyboardKey_Pzp, GameButtonRight2: C.LogicalKeyboardKey_GZG0, GameButtonSelect: C.LogicalKeyboardKey_Ktd, GameButtonStart: C.LogicalKeyboardKey_yzJ, GameButtonThumbLeft: C.LogicalKeyboardKey_8D4, GameButtonThumbRight: C.LogicalKeyboardKey_Xrv, GameButtonX: C.LogicalKeyboardKey_pMi, GameButtonY: C.LogicalKeyboardKey_pMi0, GameButtonZ: C.LogicalKeyboardKey_pMi1, Fn: C.LogicalKeyboardKey_4294967314_Fn_null}, C.List_YVI, type$.ConstantStringMap_String_LogicalKeyboardKey);
    C.PhysicalKeyboardKey_0_None = new G.PhysicalKeyboardKey(0, "None");
    C.PhysicalKeyboardKey_16_Hyper = new G.PhysicalKeyboardKey(16, "Hyper");
    C.PhysicalKeyboardKey_usy = new G.PhysicalKeyboardKey(17, "Super Key");
    C.PhysicalKeyboardKey_ijl = new G.PhysicalKeyboardKey(19, "Fn Lock");
    C.PhysicalKeyboardKey_21_Resume = new G.PhysicalKeyboardKey(21, "Resume");
    C.PhysicalKeyboardKey_22_Turbo = new G.PhysicalKeyboardKey(22, "Turbo");
    C.PhysicalKeyboardKey_458907_Abort = new G.PhysicalKeyboardKey(458907, "Abort");
    C.PhysicalKeyboardKey_yPV = new G.PhysicalKeyboardKey(458939, "Numpad Backspace");
    C.PhysicalKeyboardKey_yrK = new G.PhysicalKeyboardKey(458960, "Numpad Memory Store");
    C.PhysicalKeyboardKey_F6b = new G.PhysicalKeyboardKey(458961, "Numpad Memory Recall");
    C.PhysicalKeyboardKey_RsV = new G.PhysicalKeyboardKey(458962, "Numpad Memory Clear");
    C.PhysicalKeyboardKey_twZ = new G.PhysicalKeyboardKey(458963, "Numpad Memory Add");
    C.PhysicalKeyboardKey_gEE = new G.PhysicalKeyboardKey(458964, "Numpad Memory Subtract");
    C.PhysicalKeyboardKey_int = new G.PhysicalKeyboardKey(458968, "Numpad Clear");
    C.PhysicalKeyboardKey_efb = new G.PhysicalKeyboardKey(458969, "Numpad Clear Entry");
    C.Map_YVo3E = new H.ConstantStringMap(230, {None: C.PhysicalKeyboardKey_0_None, Hyper: C.PhysicalKeyboardKey_16_Hyper, Super: C.PhysicalKeyboardKey_usy, FnLock: C.PhysicalKeyboardKey_ijl, Suspend: C.PhysicalKeyboardKey_20_Suspend, Resume: C.PhysicalKeyboardKey_21_Resume, Turbo: C.PhysicalKeyboardKey_22_Turbo, PrivacyScreenToggle: C.PhysicalKeyboardKey_S35, Sleep: C.PhysicalKeyboardKey_65666_Sleep, WakeUp: C.PhysicalKeyboardKey_XLl, DisplayToggleIntExt: C.PhysicalKeyboardKey_Co2, KeyA: C.PhysicalKeyboardKey_c4y, KeyB: C.PhysicalKeyboardKey_Ui9, KeyC: C.PhysicalKeyboardKey_oqy, KeyD: C.PhysicalKeyboardKey_Aec, KeyE: C.PhysicalKeyboardKey_e7M, KeyF: C.PhysicalKeyboardKey_WjS, KeyG: C.PhysicalKeyboardKey_cgs, KeyH: C.PhysicalKeyboardKey_O9K, KeyI: C.PhysicalKeyboardKey_ATp, KeyJ: C.PhysicalKeyboardKey_8Qj, KeyK: C.PhysicalKeyboardKey_02V, KeyL: C.PhysicalKeyboardKey_2jN, KeyM: C.PhysicalKeyboardKey_Pdn, KeyN: C.PhysicalKeyboardKey_sQd, KeyO: C.PhysicalKeyboardKey_oYc, KeyP: C.PhysicalKeyboardKey_ClL, KeyQ: C.PhysicalKeyboardKey_ON8, KeyR: C.PhysicalKeyboardKey_kfn, KeyS: C.PhysicalKeyboardKey_yXI, KeyT: C.PhysicalKeyboardKey_86y, KeyU: C.PhysicalKeyboardKey_3NL, KeyV: C.PhysicalKeyboardKey_Sof, KeyW: C.PhysicalKeyboardKey_gc6, KeyX: C.PhysicalKeyboardKey_XTH, KeyY: C.PhysicalKeyboardKey_699, KeyZ: C.PhysicalKeyboardKey_geL, Digit1: C.PhysicalKeyboardKey_9kk, Digit2: C.PhysicalKeyboardKey_gEY, Digit3: C.PhysicalKeyboardKey_Ddv, Digit4: C.PhysicalKeyboardKey_aNU, Digit5: C.PhysicalKeyboardKey_gc60, Digit6: C.PhysicalKeyboardKey_wg4, Digit7: C.PhysicalKeyboardKey_Tkj, Digit8: C.PhysicalKeyboardKey_GRf, Digit9: C.PhysicalKeyboardKey_C4W, Digit0: C.PhysicalKeyboardKey_eYS, Enter: C.PhysicalKeyboardKey_458792_Enter, Escape: C.PhysicalKeyboardKey_458793_Escape, Backspace: C.PhysicalKeyboardKey_458794_Backspace, Tab: C.PhysicalKeyboardKey_458795_Tab, Space: C.PhysicalKeyboardKey_458796_Space, Minus: C.PhysicalKeyboardKey_458797_Minus, Equal: C.PhysicalKeyboardKey_458798_Equal, BracketLeft: C.PhysicalKeyboardKey_Dx1, BracketRight: C.PhysicalKeyboardKey_YIZ, Backslash: C.PhysicalKeyboardKey_458801_Backslash, Semicolon: C.PhysicalKeyboardKey_458803_Semicolon, Quote: C.PhysicalKeyboardKey_458804_Quote, Backquote: C.PhysicalKeyboardKey_458805_Backquote, Comma: C.PhysicalKeyboardKey_458806_Comma, Period: C.PhysicalKeyboardKey_458807_Period, Slash: C.PhysicalKeyboardKey_458808_Slash, CapsLock: C.PhysicalKeyboardKey_eAf, F1: C.PhysicalKeyboardKey_458810_F1, F2: C.PhysicalKeyboardKey_458811_F2, F3: C.PhysicalKeyboardKey_458812_F3, F4: C.PhysicalKeyboardKey_458813_F4, F5: C.PhysicalKeyboardKey_458814_F5, F6: C.PhysicalKeyboardKey_458815_F6, F7: C.PhysicalKeyboardKey_458816_F7, F8: C.PhysicalKeyboardKey_458817_F8, F9: C.PhysicalKeyboardKey_458818_F9, F10: C.PhysicalKeyboardKey_458819_F10, F11: C.PhysicalKeyboardKey_458820_F11, F12: C.PhysicalKeyboardKey_458821_F12, PrintScreen: C.PhysicalKeyboardKey_DNn, ScrollLock: C.PhysicalKeyboardKey_DpI, Pause: C.PhysicalKeyboardKey_458824_Pause, Insert: C.PhysicalKeyboardKey_458825_Insert, Home: C.PhysicalKeyboardKey_458826_Home, PageUp: C.PhysicalKeyboardKey_gg90, Delete: C.PhysicalKeyboardKey_458828_Delete, End: C.PhysicalKeyboardKey_458829_End, PageDown: C.PhysicalKeyboardKey_UCG, ArrowRight: C.PhysicalKeyboardKey_Q8r, ArrowLeft: C.PhysicalKeyboardKey_4iW, ArrowDown: C.PhysicalKeyboardKey_G79, ArrowUp: C.PhysicalKeyboardKey_ytW, NumLock: C.PhysicalKeyboardKey_A3V, NumpadDivide: C.PhysicalKeyboardKey_A4L, NumpadMultiply: C.PhysicalKeyboardKey_cgN, NumpadSubtract: C.PhysicalKeyboardKey_43h, NumpadAdd: C.PhysicalKeyboardKey_OGx, NumpadEnter: C.PhysicalKeyboardKey_6dA, Numpad1: C.PhysicalKeyboardKey_si2, Numpad2: C.PhysicalKeyboardKey_si20, Numpad3: C.PhysicalKeyboardKey_si21, Numpad4: C.PhysicalKeyboardKey_si22, Numpad5: C.PhysicalKeyboardKey_CtV, Numpad6: C.PhysicalKeyboardKey_CtV0, Numpad7: C.PhysicalKeyboardKey_CtV1, Numpad8: C.PhysicalKeyboardKey_U44, Numpad9: C.PhysicalKeyboardKey_U440, Numpad0: C.PhysicalKeyboardKey_U441, NumpadDecimal: C.PhysicalKeyboardKey_s0y, IntlBackslash: C.PhysicalKeyboardKey_jrj, ContextMenu: C.PhysicalKeyboardKey_m5d, Power: C.PhysicalKeyboardKey_458854_Power, NumpadEqual: C.PhysicalKeyboardKey_izR, F13: C.PhysicalKeyboardKey_458856_F13, F14: C.PhysicalKeyboardKey_458857_F14, F15: C.PhysicalKeyboardKey_458858_F15, F16: C.PhysicalKeyboardKey_458859_F16, F17: C.PhysicalKeyboardKey_458860_F17, F18: C.PhysicalKeyboardKey_458861_F18, F19: C.PhysicalKeyboardKey_458862_F19, F20: C.PhysicalKeyboardKey_458863_F20, F21: C.PhysicalKeyboardKey_458864_F21, F22: C.PhysicalKeyboardKey_458865_F22, F23: C.PhysicalKeyboardKey_458866_F23, F24: C.PhysicalKeyboardKey_458867_F24, Open: C.PhysicalKeyboardKey_458868_Open, Help: C.PhysicalKeyboardKey_458869_Help, Select: C.PhysicalKeyboardKey_458871_Select, Again: C.PhysicalKeyboardKey_458873_Again, Undo: C.PhysicalKeyboardKey_458874_Undo, Cut: C.PhysicalKeyboardKey_458875_Cut, Copy: C.PhysicalKeyboardKey_458876_Copy, Paste: C.PhysicalKeyboardKey_458877_Paste, Find: C.PhysicalKeyboardKey_458878_Find, AudioVolumeMute: C.PhysicalKeyboardKey_042, AudioVolumeUp: C.PhysicalKeyboardKey_yjH, AudioVolumeDown: C.PhysicalKeyboardKey_2nP, NumpadComma: C.PhysicalKeyboardKey_AoG, IntlRo: C.PhysicalKeyboardKey_4OV, KanaMode: C.PhysicalKeyboardKey_Yqx, IntlYen: C.PhysicalKeyboardKey_y47, Convert: C.PhysicalKeyboardKey_458890_Convert, NonConvert: C.PhysicalKeyboardKey_Mys, Lang1: C.PhysicalKeyboardKey_Cni, Lang2: C.PhysicalKeyboardKey_Cni0, Lang3: C.PhysicalKeyboardKey_AJU, Lang4: C.PhysicalKeyboardKey_AJU0, Lang5: C.PhysicalKeyboardKey_AJU1, Abort: C.PhysicalKeyboardKey_458907_Abort, Props: C.PhysicalKeyboardKey_458915_Props, NumpadParenLeft: C.PhysicalKeyboardKey_Ga7, NumpadParenRight: C.PhysicalKeyboardKey_9we, NumpadBackspace: C.PhysicalKeyboardKey_yPV, NumpadMemoryStore: C.PhysicalKeyboardKey_yrK, NumpadMemoryRecall: C.PhysicalKeyboardKey_F6b, NumpadMemoryClear: C.PhysicalKeyboardKey_RsV, NumpadMemoryAdd: C.PhysicalKeyboardKey_twZ, NumpadMemorySubtract: C.PhysicalKeyboardKey_gEE, NumpadClear: C.PhysicalKeyboardKey_int, NumpadClearEntry: C.PhysicalKeyboardKey_efb, ControlLeft: C.PhysicalKeyboardKey_wEo, ShiftLeft: C.PhysicalKeyboardKey_Y3m, AltLeft: C.PhysicalKeyboardKey_CNh, MetaLeft: C.PhysicalKeyboardKey_gg9, ControlRight: C.PhysicalKeyboardKey_Q4j, ShiftRight: C.PhysicalKeyboardKey_fBD, AltRight: C.PhysicalKeyboardKey_7FR, MetaRight: C.PhysicalKeyboardKey_INA, BrightnessUp: C.PhysicalKeyboardKey_UwG, BrightnessDown: C.PhysicalKeyboardKey_6hp, MediaPlay: C.PhysicalKeyboardKey_bHn, MediaPause: C.PhysicalKeyboardKey_mc1, MediaRecord: C.PhysicalKeyboardKey_4Nv, MediaFastForward: C.PhysicalKeyboardKey_ibp, MediaRewind: C.PhysicalKeyboardKey_3GJ, MediaTrackNext: C.PhysicalKeyboardKey_e8P, MediaTrackPrevious: C.PhysicalKeyboardKey_Sv6, MediaStop: C.PhysicalKeyboardKey_8Gl, Eject: C.PhysicalKeyboardKey_786616_Eject, MediaPlayPause: C.PhysicalKeyboardKey_tgd, MediaSelect: C.PhysicalKeyboardKey_sJO, LaunchMail: C.PhysicalKeyboardKey_cEx, LaunchApp2: C.PhysicalKeyboardKey_q48, LaunchApp1: C.PhysicalKeyboardKey_q480, LaunchControlPanel: C.PhysicalKeyboardKey_7FR0, SelectTask: C.PhysicalKeyboardKey_yDH, LaunchScreenSaver: C.PhysicalKeyboardKey_359, LaunchAssistant: C.PhysicalKeyboardKey_1QK, BrowserSearch: C.PhysicalKeyboardKey_QkZ, BrowserHome: C.PhysicalKeyboardKey_X7N, BrowserBack: C.PhysicalKeyboardKey_ACk, BrowserForward: C.PhysicalKeyboardKey_p6a, BrowserStop: C.PhysicalKeyboardKey_3Vk, BrowserRefresh: C.PhysicalKeyboardKey_2Vk, BrowserFavorites: C.PhysicalKeyboardKey_sHU, ZoomToggle: C.PhysicalKeyboardKey_uLS, MailReply: C.PhysicalKeyboardKey_bVa, MailForward: C.PhysicalKeyboardKey_YqA, MailSend: C.PhysicalKeyboardKey_V4w, KeyboardLayoutSelect: C.PhysicalKeyboardKey_YOq, ShowAllWindows: C.PhysicalKeyboardKey_vAr, GameButton1: C.PhysicalKeyboardKey_ihV, GameButton2: C.PhysicalKeyboardKey_qhE, GameButton3: C.PhysicalKeyboardKey_eXH, GameButton4: C.PhysicalKeyboardKey_lm1, GameButton5: C.PhysicalKeyboardKey_kxd, GameButton6: C.PhysicalKeyboardKey_PDz, GameButton7: C.PhysicalKeyboardKey_m5H, GameButton8: C.PhysicalKeyboardKey_ihV0, GameButton9: C.PhysicalKeyboardKey_FNx, GameButton10: C.PhysicalKeyboardKey_9k7, GameButton11: C.PhysicalKeyboardKey_adS, GameButton12: C.PhysicalKeyboardKey_Kl9, GameButton13: C.PhysicalKeyboardKey_Ct3, GameButton14: C.PhysicalKeyboardKey_1ga, GameButton15: C.PhysicalKeyboardKey_2jN0, GameButton16: C.PhysicalKeyboardKey_vpC, GameButtonA: C.PhysicalKeyboardKey_CBZ, GameButtonB: C.PhysicalKeyboardKey_o0c, GameButtonC: C.PhysicalKeyboardKey_6CK, GameButtonLeft1: C.PhysicalKeyboardKey_QvW, GameButtonLeft2: C.PhysicalKeyboardKey_nfu, GameButtonMode: C.PhysicalKeyboardKey_O1c, GameButtonRight1: C.PhysicalKeyboardKey_EKW, GameButtonRight2: C.PhysicalKeyboardKey_W1o, GameButtonSelect: C.PhysicalKeyboardKey_ASA, GameButtonStart: C.PhysicalKeyboardKey_kbd, GameButtonThumbLeft: C.PhysicalKeyboardKey_wEo0, GameButtonThumbRight: C.PhysicalKeyboardKey_f7r, GameButtonX: C.PhysicalKeyboardKey_Ohs, GameButtonY: C.PhysicalKeyboardKey_M6L, GameButtonZ: C.PhysicalKeyboardKey_yHf, Fn: C.PhysicalKeyboardKey_18_Fn}, C.List_YVI, H.findType("ConstantStringMap<String,PhysicalKeyboardKey>"));
    C.PhysicalKeyboardKey_gHg = new G.PhysicalKeyboardKey(458752, "Usb Reserved");
    C.PhysicalKeyboardKey_9pp = new G.PhysicalKeyboardKey(458753, "Usb Error Roll Over");
    C.PhysicalKeyboardKey_QG0 = new G.PhysicalKeyboardKey(458754, "Usb Post Fail");
    C.PhysicalKeyboardKey_CSD = new G.PhysicalKeyboardKey(458755, "Usb Error Undefined");
    C.Map_aOo1R = new H.GeneralConstantMap([0, C.PhysicalKeyboardKey_0_None, 16, C.PhysicalKeyboardKey_16_Hyper, 17, C.PhysicalKeyboardKey_usy, 19, C.PhysicalKeyboardKey_ijl, 20, C.PhysicalKeyboardKey_20_Suspend, 21, C.PhysicalKeyboardKey_21_Resume, 22, C.PhysicalKeyboardKey_22_Turbo, 23, C.PhysicalKeyboardKey_S35, 65666, C.PhysicalKeyboardKey_65666_Sleep, 65667, C.PhysicalKeyboardKey_XLl, 65717, C.PhysicalKeyboardKey_Co2, 458752, C.PhysicalKeyboardKey_gHg, 458753, C.PhysicalKeyboardKey_9pp, 458754, C.PhysicalKeyboardKey_QG0, 458755, C.PhysicalKeyboardKey_CSD, 458756, C.PhysicalKeyboardKey_c4y, 458757, C.PhysicalKeyboardKey_Ui9, 458758, C.PhysicalKeyboardKey_oqy, 458759, C.PhysicalKeyboardKey_Aec, 458760, C.PhysicalKeyboardKey_e7M, 458761, C.PhysicalKeyboardKey_WjS, 458762, C.PhysicalKeyboardKey_cgs, 458763, C.PhysicalKeyboardKey_O9K, 458764, C.PhysicalKeyboardKey_ATp, 458765, C.PhysicalKeyboardKey_8Qj, 458766, C.PhysicalKeyboardKey_02V, 458767, C.PhysicalKeyboardKey_2jN, 458768, C.PhysicalKeyboardKey_Pdn, 458769, C.PhysicalKeyboardKey_sQd, 458770, C.PhysicalKeyboardKey_oYc, 458771, C.PhysicalKeyboardKey_ClL, 458772, C.PhysicalKeyboardKey_ON8, 458773, C.PhysicalKeyboardKey_kfn, 458774, C.PhysicalKeyboardKey_yXI, 458775, C.PhysicalKeyboardKey_86y, 458776, C.PhysicalKeyboardKey_3NL, 458777, C.PhysicalKeyboardKey_Sof, 458778, C.PhysicalKeyboardKey_gc6, 458779, C.PhysicalKeyboardKey_XTH, 458780, C.PhysicalKeyboardKey_699, 458781, C.PhysicalKeyboardKey_geL, 458782, C.PhysicalKeyboardKey_9kk, 458783, C.PhysicalKeyboardKey_gEY, 458784, C.PhysicalKeyboardKey_Ddv, 458785, C.PhysicalKeyboardKey_aNU, 458786, C.PhysicalKeyboardKey_gc60, 458787, C.PhysicalKeyboardKey_wg4, 458788, C.PhysicalKeyboardKey_Tkj, 458789, C.PhysicalKeyboardKey_GRf, 458790, C.PhysicalKeyboardKey_C4W, 458791, C.PhysicalKeyboardKey_eYS, 458792, C.PhysicalKeyboardKey_458792_Enter, 458793, C.PhysicalKeyboardKey_458793_Escape, 458794, C.PhysicalKeyboardKey_458794_Backspace, 458795, C.PhysicalKeyboardKey_458795_Tab, 458796, C.PhysicalKeyboardKey_458796_Space, 458797, C.PhysicalKeyboardKey_458797_Minus, 458798, C.PhysicalKeyboardKey_458798_Equal, 458799, C.PhysicalKeyboardKey_Dx1, 458800, C.PhysicalKeyboardKey_YIZ, 458801, C.PhysicalKeyboardKey_458801_Backslash, 458803, C.PhysicalKeyboardKey_458803_Semicolon, 458804, C.PhysicalKeyboardKey_458804_Quote, 458805, C.PhysicalKeyboardKey_458805_Backquote, 458806, C.PhysicalKeyboardKey_458806_Comma, 458807, C.PhysicalKeyboardKey_458807_Period, 458808, C.PhysicalKeyboardKey_458808_Slash, 458809, C.PhysicalKeyboardKey_eAf, 458810, C.PhysicalKeyboardKey_458810_F1, 458811, C.PhysicalKeyboardKey_458811_F2, 458812, C.PhysicalKeyboardKey_458812_F3, 458813, C.PhysicalKeyboardKey_458813_F4, 458814, C.PhysicalKeyboardKey_458814_F5, 458815, C.PhysicalKeyboardKey_458815_F6, 458816, C.PhysicalKeyboardKey_458816_F7, 458817, C.PhysicalKeyboardKey_458817_F8, 458818, C.PhysicalKeyboardKey_458818_F9, 458819, C.PhysicalKeyboardKey_458819_F10, 458820, C.PhysicalKeyboardKey_458820_F11, 458821, C.PhysicalKeyboardKey_458821_F12, 458822, C.PhysicalKeyboardKey_DNn, 458823, C.PhysicalKeyboardKey_DpI, 458824, C.PhysicalKeyboardKey_458824_Pause, 458825, C.PhysicalKeyboardKey_458825_Insert, 458826, C.PhysicalKeyboardKey_458826_Home, 458827, C.PhysicalKeyboardKey_gg90, 458828, C.PhysicalKeyboardKey_458828_Delete, 458829, C.PhysicalKeyboardKey_458829_End, 458830, C.PhysicalKeyboardKey_UCG, 458831, C.PhysicalKeyboardKey_Q8r, 458832, C.PhysicalKeyboardKey_4iW, 458833, C.PhysicalKeyboardKey_G79, 458834, C.PhysicalKeyboardKey_ytW, 458835, C.PhysicalKeyboardKey_A3V, 458836, C.PhysicalKeyboardKey_A4L, 458837, C.PhysicalKeyboardKey_cgN, 458838, C.PhysicalKeyboardKey_43h, 458839, C.PhysicalKeyboardKey_OGx, 458840, C.PhysicalKeyboardKey_6dA, 458841, C.PhysicalKeyboardKey_si2, 458842, C.PhysicalKeyboardKey_si20, 458843, C.PhysicalKeyboardKey_si21, 458844, C.PhysicalKeyboardKey_si22, 458845, C.PhysicalKeyboardKey_CtV, 458846, C.PhysicalKeyboardKey_CtV0, 458847, C.PhysicalKeyboardKey_CtV1, 458848, C.PhysicalKeyboardKey_U44, 458849, C.PhysicalKeyboardKey_U440, 458850, C.PhysicalKeyboardKey_U441, 458851, C.PhysicalKeyboardKey_s0y, 458852, C.PhysicalKeyboardKey_jrj, 458853, C.PhysicalKeyboardKey_m5d, 458854, C.PhysicalKeyboardKey_458854_Power, 458855, C.PhysicalKeyboardKey_izR, 458856, C.PhysicalKeyboardKey_458856_F13, 458857, C.PhysicalKeyboardKey_458857_F14, 458858, C.PhysicalKeyboardKey_458858_F15, 458859, C.PhysicalKeyboardKey_458859_F16, 458860, C.PhysicalKeyboardKey_458860_F17, 458861, C.PhysicalKeyboardKey_458861_F18, 458862, C.PhysicalKeyboardKey_458862_F19, 458863, C.PhysicalKeyboardKey_458863_F20, 458864, C.PhysicalKeyboardKey_458864_F21, 458865, C.PhysicalKeyboardKey_458865_F22, 458866, C.PhysicalKeyboardKey_458866_F23, 458867, C.PhysicalKeyboardKey_458867_F24, 458868, C.PhysicalKeyboardKey_458868_Open, 458869, C.PhysicalKeyboardKey_458869_Help, 458871, C.PhysicalKeyboardKey_458871_Select, 458873, C.PhysicalKeyboardKey_458873_Again, 458874, C.PhysicalKeyboardKey_458874_Undo, 458875, C.PhysicalKeyboardKey_458875_Cut, 458876, C.PhysicalKeyboardKey_458876_Copy, 458877, C.PhysicalKeyboardKey_458877_Paste, 458878, C.PhysicalKeyboardKey_458878_Find, 458879, C.PhysicalKeyboardKey_042, 458880, C.PhysicalKeyboardKey_yjH, 458881, C.PhysicalKeyboardKey_2nP, 458885, C.PhysicalKeyboardKey_AoG, 458887, C.PhysicalKeyboardKey_4OV, 458888, C.PhysicalKeyboardKey_Yqx, 458889, C.PhysicalKeyboardKey_y47, 458890, C.PhysicalKeyboardKey_458890_Convert, 458891, C.PhysicalKeyboardKey_Mys, 458896, C.PhysicalKeyboardKey_Cni, 458897, C.PhysicalKeyboardKey_Cni0, 458898, C.PhysicalKeyboardKey_AJU, 458899, C.PhysicalKeyboardKey_AJU0, 458900, C.PhysicalKeyboardKey_AJU1, 458907, C.PhysicalKeyboardKey_458907_Abort, 458915, C.PhysicalKeyboardKey_458915_Props, 458934, C.PhysicalKeyboardKey_Ga7, 458935, C.PhysicalKeyboardKey_9we, 458939, C.PhysicalKeyboardKey_yPV, 458960, C.PhysicalKeyboardKey_yrK, 458961, C.PhysicalKeyboardKey_F6b, 458962, C.PhysicalKeyboardKey_RsV, 458963, C.PhysicalKeyboardKey_twZ, 458964, C.PhysicalKeyboardKey_gEE, 458967, C.PhysicalKeyboardKey_KpS, 458968, C.PhysicalKeyboardKey_int, 458969, C.PhysicalKeyboardKey_efb, 458976, C.PhysicalKeyboardKey_wEo, 458977, C.PhysicalKeyboardKey_Y3m, 458978, C.PhysicalKeyboardKey_CNh, 458979, C.PhysicalKeyboardKey_gg9, 458980, C.PhysicalKeyboardKey_Q4j, 458981, C.PhysicalKeyboardKey_fBD, 458982, C.PhysicalKeyboardKey_7FR, 458983, C.PhysicalKeyboardKey_INA, 786528, C.PhysicalKeyboardKey_786528_Info, 786529, C.PhysicalKeyboardKey_64z, 786543, C.PhysicalKeyboardKey_UwG, 786544, C.PhysicalKeyboardKey_6hp, 786546, C.PhysicalKeyboardKey_idk, 786547, C.PhysicalKeyboardKey_VGp, 786548, C.PhysicalKeyboardKey_VGp0, 786549, C.PhysicalKeyboardKey_b1n, 786563, C.PhysicalKeyboardKey_szR, 786572, C.PhysicalKeyboardKey_yzp, 786573, C.PhysicalKeyboardKey_6Pd, 786580, C.PhysicalKeyboardKey_786580_Exit, 786588, C.PhysicalKeyboardKey_F3v, 786589, C.PhysicalKeyboardKey_0Hm, 786608, C.PhysicalKeyboardKey_bHn, 786609, C.PhysicalKeyboardKey_mc1, 786610, C.PhysicalKeyboardKey_4Nv, 786611, C.PhysicalKeyboardKey_ibp, 786612, C.PhysicalKeyboardKey_3GJ, 786613, C.PhysicalKeyboardKey_e8P, 786614, C.PhysicalKeyboardKey_Sv6, 786615, C.PhysicalKeyboardKey_8Gl, 786616, C.PhysicalKeyboardKey_786616_Eject, 786637, C.PhysicalKeyboardKey_tgd, 786639, C.PhysicalKeyboardKey_MAi, 786661, C.PhysicalKeyboardKey_PDJ, 786819, C.PhysicalKeyboardKey_sJO, 786820, C.PhysicalKeyboardKey_eAf0, 786822, C.PhysicalKeyboardKey_4eY, 786826, C.PhysicalKeyboardKey_cEx, 786829, C.PhysicalKeyboardKey_n9b, 786830, C.PhysicalKeyboardKey_iGv, 786834, C.PhysicalKeyboardKey_q48, 786836, C.PhysicalKeyboardKey_q480, 786838, C.PhysicalKeyboardKey_Y9N, 786844, C.PhysicalKeyboardKey_kqj, 786846, C.PhysicalKeyboardKey_9aX, 786847, C.PhysicalKeyboardKey_7FR0, 786850, C.PhysicalKeyboardKey_yDH, 786855, C.PhysicalKeyboardKey_sor, 786859, C.PhysicalKeyboardKey_P16, 786862, C.PhysicalKeyboardKey_CNR, 786865, C.PhysicalKeyboardKey_359, 786891, C.PhysicalKeyboardKey_1QK, 786871, C.PhysicalKeyboardKey_Ugm, 786945, C.PhysicalKeyboardKey_XAC, 786947, C.PhysicalKeyboardKey_786947_Close, 786951, C.PhysicalKeyboardKey_786951_Save, 786952, C.PhysicalKeyboardKey_786952_Print, 786977, C.PhysicalKeyboardKey_QkZ, 786979, C.PhysicalKeyboardKey_X7N, 786980, C.PhysicalKeyboardKey_ACk, 786981, C.PhysicalKeyboardKey_p6a, 786982, C.PhysicalKeyboardKey_3Vk, 786983, C.PhysicalKeyboardKey_2Vk, 786986, C.PhysicalKeyboardKey_sHU, 786989, C.PhysicalKeyboardKey_Up3, 786990, C.PhysicalKeyboardKey_JVk, 786994, C.PhysicalKeyboardKey_uLS, 787065, C.PhysicalKeyboardKey_787065_Redo, 787081, C.PhysicalKeyboardKey_bVa, 787083, C.PhysicalKeyboardKey_YqA, 787084, C.PhysicalKeyboardKey_V4w, 787101, C.PhysicalKeyboardKey_YOq, 787103, C.PhysicalKeyboardKey_vAr, 392961, C.PhysicalKeyboardKey_ihV, 392962, C.PhysicalKeyboardKey_qhE, 392963, C.PhysicalKeyboardKey_eXH, 392964, C.PhysicalKeyboardKey_lm1, 392965, C.PhysicalKeyboardKey_kxd, 392966, C.PhysicalKeyboardKey_PDz, 392967, C.PhysicalKeyboardKey_m5H, 392968, C.PhysicalKeyboardKey_ihV0, 392969, C.PhysicalKeyboardKey_FNx, 392970, C.PhysicalKeyboardKey_9k7, 392971, C.PhysicalKeyboardKey_adS, 392972, C.PhysicalKeyboardKey_Kl9, 392973, C.PhysicalKeyboardKey_Ct3, 392974, C.PhysicalKeyboardKey_1ga, 392975, C.PhysicalKeyboardKey_2jN0, 392976, C.PhysicalKeyboardKey_vpC, 392977, C.PhysicalKeyboardKey_CBZ, 392978, C.PhysicalKeyboardKey_o0c, 392979, C.PhysicalKeyboardKey_6CK, 392980, C.PhysicalKeyboardKey_QvW, 392981, C.PhysicalKeyboardKey_nfu, 392982, C.PhysicalKeyboardKey_O1c, 392983, C.PhysicalKeyboardKey_EKW, 392984, C.PhysicalKeyboardKey_W1o, 392985, C.PhysicalKeyboardKey_ASA, 392986, C.PhysicalKeyboardKey_kbd, 392987, C.PhysicalKeyboardKey_wEo0, 392988, C.PhysicalKeyboardKey_f7r, 392989, C.PhysicalKeyboardKey_Ohs, 392990, C.PhysicalKeyboardKey_M6L, 392991, C.PhysicalKeyboardKey_yHf, 18, C.PhysicalKeyboardKey_18_Fn], type$.GeneralConstantMap_int_PhysicalKeyboardKey);
    C.Map_cG43h = new H.GeneralConstantMap([111, C.LogicalKeyboardKey_Npb, 106, C.LogicalKeyboardKey_iOn, 109, C.LogicalKeyboardKey_7xV, 107, C.LogicalKeyboardKey_YaH, 97, C.LogicalKeyboardKey_qsT, 98, C.LogicalKeyboardKey_ka2, 99, C.LogicalKeyboardKey_Ddz, 100, C.LogicalKeyboardKey_YGD, 101, C.LogicalKeyboardKey_s0r, 102, C.LogicalKeyboardKey_atK0, 103, C.LogicalKeyboardKey_3bB, 104, C.LogicalKeyboardKey_sx4, 105, C.LogicalKeyboardKey_4IJ, 96, C.LogicalKeyboardKey_KQb, 110, C.LogicalKeyboardKey_iXq, 146, C.LogicalKeyboardKey_G2v], type$.GeneralConstantMap_int_LogicalKeyboardKey);
    C.List_empty10 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<LogicalKeySet>"));
    C.Map_empty1 = new H.ConstantStringMap(0, {}, C.List_empty10, H.findType("ConstantStringMap<LogicalKeySet,Intent>"));
    C.List_empty11 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_PersistedSurface);
    C.Map_empty5 = new H.ConstantStringMap(0, {}, C.List_empty11, H.findType("ConstantStringMap<PersistedSurface,PersistedSurface>"));
    C.Map_empty0 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType("ConstantStringMap<String,Widget(BuildContext)>"));
    C.Map_empty3 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType("ConstantStringMap<String,@>"));
    C.List_empty12 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<Symbol0>"));
    C.Map_empty = new H.ConstantStringMap(0, {}, C.List_empty12, H.findType("ConstantStringMap<Symbol0,@>"));
    C.List_empty13 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<Type>"));
    C.Map_empty2 = new H.ConstantStringMap(0, {}, C.List_empty13, H.findType("ConstantStringMap<Type,GestureRecognizer>"));
    C.Map_empty4 = new H.ConstantStringMap(0, {}, C.List_empty13, H.findType("ConstantStringMap<Type,GestureRecognizerFactory<GestureRecognizer>>"));
    C.Map_hyDV7 = new H.GeneralConstantMap([4294967296, C.LogicalKeyboardKey_4294967296_None_null, 4294967312, C.LogicalKeyboardKey_4294967312_Hyper_null, 4294967313, C.LogicalKeyboardKey_No3, 4294967315, C.LogicalKeyboardKey_wz6, 4294967316, C.LogicalKeyboardKey_4294967316_Suspend_null, 4294967317, C.LogicalKeyboardKey_4294967317_Resume_null, 4294967318, C.LogicalKeyboardKey_4294967318_Turbo_null, 4294967319, C.LogicalKeyboardKey_8aB, 4295032962, C.LogicalKeyboardKey_4295032962_Sleep_null, 4295032963, C.LogicalKeyboardKey_owA, 4295033013, C.LogicalKeyboardKey_M6i, 4295426048, C.LogicalKeyboardKey_8uL, 4295426049, C.LogicalKeyboardKey_2nn, 4295426050, C.LogicalKeyboardKey_2bx, 4295426051, C.LogicalKeyboardKey_FYo, 97, C.LogicalKeyboardKey_7G2, 98, C.LogicalKeyboardKey_jjv, 99, C.LogicalKeyboardKey_mF8, 100, C.LogicalKeyboardKey_ICU, 101, C.LogicalKeyboardKey_AaU, 102, C.LogicalKeyboardKey_2jN, 103, C.LogicalKeyboardKey_cKo, 104, C.LogicalKeyboardKey_QhK, 105, C.LogicalKeyboardKey_swi, 106, C.LogicalKeyboardKey_CG7, 107, C.LogicalKeyboardKey_3jH, 108, C.LogicalKeyboardKey_4iU, 109, C.LogicalKeyboardKey_oe4, 110, C.LogicalKeyboardKey_OLv, 111, C.LogicalKeyboardKey_sav, 112, C.LogicalKeyboardKey_M6L, 113, C.LogicalKeyboardKey_Ods, 114, C.LogicalKeyboardKey_qsN, 115, C.LogicalKeyboardKey_fLj, 116, C.LogicalKeyboardKey_V86, 117, C.LogicalKeyboardKey_Tng, 118, C.LogicalKeyboardKey_6Ng, 119, C.LogicalKeyboardKey_XaR, 120, C.LogicalKeyboardKey_ifx, 121, C.LogicalKeyboardKey_kQR, 122, C.LogicalKeyboardKey_W2D, 49, C.LogicalKeyboardKey_4AN, 50, C.LogicalKeyboardKey_mmo, 51, C.LogicalKeyboardKey_a7X, 52, C.LogicalKeyboardKey_e9s, 53, C.LogicalKeyboardKey_43h, 54, C.LogicalKeyboardKey_CmI, 55, C.LogicalKeyboardKey_Db0, 56, C.LogicalKeyboardKey_GZG, 57, C.LogicalKeyboardKey_86y, 48, C.LogicalKeyboardKey_0, 4295426088, C.LogicalKeyboardKey_4295426088_Enter_null, 4295426089, C.LogicalKeyboardKey_4295426089_Escape_null, 4295426090, C.LogicalKeyboardKey_4295426090_Backspace_null, 4295426091, C.LogicalKeyboardKey_4295426091_Tab_null, 32, C.LogicalKeyboardKey_YdN, 45, C.LogicalKeyboardKey_oEN, 61, C.LogicalKeyboardKey_wrE, 91, C.LogicalKeyboardKey_TLI, 93, C.LogicalKeyboardKey_awJ, 92, C.LogicalKeyboardKey_cdS, 59, C.LogicalKeyboardKey_atK, 39, C.LogicalKeyboardKey_Qo8, 96, C.LogicalKeyboardKey_7FR, 44, C.LogicalKeyboardKey_71T, 46, C.LogicalKeyboardKey_h8g, 47, C.LogicalKeyboardKey_ouN, 4295426105, C.LogicalKeyboardKey_OWF, 4295426106, C.LogicalKeyboardKey_4295426106_F1_null, 4295426107, C.LogicalKeyboardKey_4295426107_F2_null, 4295426108, C.LogicalKeyboardKey_4295426108_F3_null, 4295426109, C.LogicalKeyboardKey_4295426109_F4_null, 4295426110, C.LogicalKeyboardKey_4295426110_F5_null, 4295426111, C.LogicalKeyboardKey_4295426111_F6_null, 4295426112, C.LogicalKeyboardKey_4295426112_F7_null, 4295426113, C.LogicalKeyboardKey_4295426113_F8_null, 4295426114, C.LogicalKeyboardKey_4295426114_F9_null, 4295426115, C.LogicalKeyboardKey_4295426115_F10_null, 4295426116, C.LogicalKeyboardKey_4295426116_F11_null, 4295426117, C.LogicalKeyboardKey_4295426117_F12_null, 4295426118, C.LogicalKeyboardKey_wAl, 4295426119, C.LogicalKeyboardKey_ujM, 4295426120, C.LogicalKeyboardKey_4295426120_Pause_null, 4295426121, C.LogicalKeyboardKey_4295426121_Insert_null, 4295426122, C.LogicalKeyboardKey_4295426122_Home_null, 4295426123, C.LogicalKeyboardKey_mgB, 4295426124, C.LogicalKeyboardKey_4295426124_Delete_null, 4295426125, C.LogicalKeyboardKey_4295426125_End_null, 4295426126, C.LogicalKeyboardKey_wYn, 4295426127, C.LogicalKeyboardKey_CzM, 4295426128, C.LogicalKeyboardKey_muk, 4295426129, C.LogicalKeyboardKey_O7X, 4295426130, C.LogicalKeyboardKey_gCR, 4295426131, C.LogicalKeyboardKey_uHn, 4295426132, C.LogicalKeyboardKey_Npb, 4295426133, C.LogicalKeyboardKey_iOn, 4295426134, C.LogicalKeyboardKey_7xV, 4295426135, C.LogicalKeyboardKey_YaH, 4295426136, C.LogicalKeyboardKey_U2J, 4295426137, C.LogicalKeyboardKey_qsT, 4295426138, C.LogicalKeyboardKey_ka2, 4295426139, C.LogicalKeyboardKey_Ddz, 4295426140, C.LogicalKeyboardKey_YGD, 4295426141, C.LogicalKeyboardKey_s0r, 4295426142, C.LogicalKeyboardKey_atK0, 4295426143, C.LogicalKeyboardKey_3bB, 4295426144, C.LogicalKeyboardKey_sx4, 4295426145, C.LogicalKeyboardKey_4IJ, 4295426146, C.LogicalKeyboardKey_KQb, 4295426147, C.LogicalKeyboardKey_iXq, 4295426148, C.LogicalKeyboardKey_6vi, 4295426149, C.LogicalKeyboardKey_nDU, 4295426150, C.LogicalKeyboardKey_4295426150_Power_null, 4295426151, C.LogicalKeyboardKey_G2v, 4295426152, C.LogicalKeyboardKey_4295426152_F13_null, 4295426153, C.LogicalKeyboardKey_4295426153_F14_null, 4295426154, C.LogicalKeyboardKey_4295426154_F15_null, 4295426155, C.LogicalKeyboardKey_4295426155_F16_null, 4295426156, C.LogicalKeyboardKey_4295426156_F17_null, 4295426157, C.LogicalKeyboardKey_4295426157_F18_null, 4295426158, C.LogicalKeyboardKey_4295426158_F19_null, 4295426159, C.LogicalKeyboardKey_4295426159_F20_null, 4295426160, C.LogicalKeyboardKey_4295426160_F21_null, 4295426161, C.LogicalKeyboardKey_4295426161_F22_null, 4295426162, C.LogicalKeyboardKey_4295426162_F23_null, 4295426163, C.LogicalKeyboardKey_4295426163_F24_null, 4295426164, C.LogicalKeyboardKey_4295426164_Open_null, 4295426165, C.LogicalKeyboardKey_4295426165_Help_null, 4295426167, C.LogicalKeyboardKey_4295426167_Select_null, 4295426169, C.LogicalKeyboardKey_4295426169_Again_null, 4295426170, C.LogicalKeyboardKey_4295426170_Undo_null, 4295426171, C.LogicalKeyboardKey_4295426171_Cut_null, 4295426172, C.LogicalKeyboardKey_4295426172_Copy_null, 4295426173, C.LogicalKeyboardKey_4295426173_Paste_null, 4295426174, C.LogicalKeyboardKey_4295426174_Find_null, 4295426175, C.LogicalKeyboardKey_MjO, 4295426176, C.LogicalKeyboardKey_gap, 4295426177, C.LogicalKeyboardKey_c9P, 4295426181, C.LogicalKeyboardKey_CLo, 4295426183, C.LogicalKeyboardKey_iDZ, 4295426184, C.LogicalKeyboardKey_aBa, 4295426185, C.LogicalKeyboardKey_c0h, 4295426186, C.LogicalKeyboardKey_4295426186_Convert_null, 4295426187, C.LogicalKeyboardKey_sBE, 4295426192, C.LogicalKeyboardKey_nx9, 4295426193, C.LogicalKeyboardKey_nx90, 4295426194, C.LogicalKeyboardKey_nx91, 4295426195, C.LogicalKeyboardKey_nx92, 4295426196, C.LogicalKeyboardKey_nx93, 4295426203, C.LogicalKeyboardKey_4295426203_Abort_null, 4295426211, C.LogicalKeyboardKey_4295426211_Props_null, 4295426230, C.LogicalKeyboardKey_wEo, 4295426231, C.LogicalKeyboardKey_8Nr, 4295426235, C.LogicalKeyboardKey_MUx, 4295426256, C.LogicalKeyboardKey_2Zx, 4295426257, C.LogicalKeyboardKey_qqh, 4295426258, C.LogicalKeyboardKey_CxF, 4295426259, C.LogicalKeyboardKey_I9f, 4295426260, C.LogicalKeyboardKey_YQd, 4295426263, C.LogicalKeyboardKey_75N, 4295426264, C.LogicalKeyboardKey_U86, 4295426265, C.LogicalKeyboardKey_OBv, 4295426272, C.LogicalKeyboardKey_p6t, 4295426273, C.LogicalKeyboardKey_xok, 4295426274, C.LogicalKeyboardKey_PD9, 4295426275, C.LogicalKeyboardKey_D0U, 4295426276, C.LogicalKeyboardKey_ijl, 4295426277, C.LogicalKeyboardKey_QOu, 4295426278, C.LogicalKeyboardKey_EtP, 4295426279, C.LogicalKeyboardKey_O1c, 4295753824, C.LogicalKeyboardKey_4295753824_Info_null, 4295753825, C.LogicalKeyboardKey_ccN, 4295753839, C.LogicalKeyboardKey_Djg, 4295753840, C.LogicalKeyboardKey_ECL, 4295753842, C.LogicalKeyboardKey_B8J, 4295753843, C.LogicalKeyboardKey_kc1, 4295753844, C.LogicalKeyboardKey_kc10, 4295753845, C.LogicalKeyboardKey_HDR, 4295753859, C.LogicalKeyboardKey_Pz5, 4295753868, C.LogicalKeyboardKey_Ak1, 4295753869, C.LogicalKeyboardKey_wg3, 4295753876, C.LogicalKeyboardKey_4295753876_Exit_null, 4295753884, C.LogicalKeyboardKey_6QF, 4295753885, C.LogicalKeyboardKey_3J4, 4295753904, C.LogicalKeyboardKey_Azp, 4295753905, C.LogicalKeyboardKey_qsO, 4295753906, C.LogicalKeyboardKey_8eb, 4295753907, C.LogicalKeyboardKey_eEX, 4295753908, C.LogicalKeyboardKey_kQR0, 4295753909, C.LogicalKeyboardKey_n7o, 4295753910, C.LogicalKeyboardKey_kHV, 4295753911, C.LogicalKeyboardKey_wfl, 4295753912, C.LogicalKeyboardKey_4295753912_Eject_null, 4295753933, C.LogicalKeyboardKey_Cu4, 4295753935, C.LogicalKeyboardKey_Q5s, 4295753957, C.LogicalKeyboardKey_qNA, 4295754115, C.LogicalKeyboardKey_oPr, 4295754116, C.LogicalKeyboardKey_2Ly, 4295754118, C.LogicalKeyboardKey_8Gl, 4295754122, C.LogicalKeyboardKey_9gS, 4295754125, C.LogicalKeyboardKey_mqK, 4295754126, C.LogicalKeyboardKey_k44, 4295754130, C.LogicalKeyboardKey_00, 4295754132, C.LogicalKeyboardKey_01, 4295754134, C.LogicalKeyboardKey_zvr, 4295754140, C.LogicalKeyboardKey_D6Y, 4295754142, C.LogicalKeyboardKey_jmM, 4295754143, C.LogicalKeyboardKey_9hT, 4295754146, C.LogicalKeyboardKey_Dns, 4295754151, C.LogicalKeyboardKey_MIo, 4295754155, C.LogicalKeyboardKey_oCX, 4295754158, C.LogicalKeyboardKey_lCr, 4295754161, C.LogicalKeyboardKey_MYz, 4295754187, C.LogicalKeyboardKey_IQp, 4295754167, C.LogicalKeyboardKey_1oF, 4295754241, C.LogicalKeyboardKey_YSm, 4295754243, C.LogicalKeyboardKey_4295754243_Close_null, 4295754247, C.LogicalKeyboardKey_4295754247_Save_null, 4295754248, C.LogicalKeyboardKey_4295754248_Print_null, 4295754273, C.LogicalKeyboardKey_EWB, 4295754275, C.LogicalKeyboardKey_cEy, 4295754276, C.LogicalKeyboardKey_kKc, 4295754277, C.LogicalKeyboardKey_8pc, 4295754278, C.LogicalKeyboardKey_MYu, 4295754279, C.LogicalKeyboardKey_Un6, 4295754282, C.LogicalKeyboardKey_46S, 4295754285, C.LogicalKeyboardKey_0Rr, 4295754286, C.LogicalKeyboardKey_wIk, 4295754290, C.LogicalKeyboardKey_ijl0, 4295754361, C.LogicalKeyboardKey_4295754361_Redo_null, 4295754377, C.LogicalKeyboardKey_XHd, 4295754379, C.LogicalKeyboardKey_WpI, 4295754380, C.LogicalKeyboardKey_7aa, 4295754397, C.LogicalKeyboardKey_JfL, 4295754399, C.LogicalKeyboardKey_7eO, 4295360257, C.LogicalKeyboardKey_BFs, 4295360258, C.LogicalKeyboardKey_BFs0, 4295360259, C.LogicalKeyboardKey_BFs1, 4295360260, C.LogicalKeyboardKey_BFs2, 4295360261, C.LogicalKeyboardKey_BFs3, 4295360262, C.LogicalKeyboardKey_BFs4, 4295360263, C.LogicalKeyboardKey_BFs5, 4295360264, C.LogicalKeyboardKey_mbT, 4295360265, C.LogicalKeyboardKey_mbT0, 4295360266, C.LogicalKeyboardKey_Aci, 4295360267, C.LogicalKeyboardKey_Aci0, 4295360268, C.LogicalKeyboardKey_Aci1, 4295360269, C.LogicalKeyboardKey_Aci2, 4295360270, C.LogicalKeyboardKey_Aci3, 4295360271, C.LogicalKeyboardKey_Aci4, 4295360272, C.LogicalKeyboardKey_bti, 4295360273, C.LogicalKeyboardKey_vfp, 4295360274, C.LogicalKeyboardKey_vfp0, 4295360275, C.LogicalKeyboardKey_vfp1, 4295360276, C.LogicalKeyboardKey_mi2, 4295360277, C.LogicalKeyboardKey_mi20, 4295360278, C.LogicalKeyboardKey_9sL, 4295360279, C.LogicalKeyboardKey_Pzp, 4295360280, C.LogicalKeyboardKey_GZG0, 4295360281, C.LogicalKeyboardKey_Ktd, 4295360282, C.LogicalKeyboardKey_yzJ, 4295360283, C.LogicalKeyboardKey_8D4, 4295360284, C.LogicalKeyboardKey_Xrv, 4295360285, C.LogicalKeyboardKey_pMi, 4295360286, C.LogicalKeyboardKey_pMi0, 4295360287, C.LogicalKeyboardKey_pMi1, 4294967314, C.LogicalKeyboardKey_4294967314_Fn_null, 2203318681825, C.LogicalKeyboardKey_2203318681825_Shift_null, 2203318681827, C.LogicalKeyboardKey_2203318681827_Meta_null, 2203318681826, C.LogicalKeyboardKey_2203318681826_Alt_null, 2203318681824, C.LogicalKeyboardKey_2203318681824_Control_null], type$.GeneralConstantMap_int_LogicalKeyboardKey);
    C.Color_4289200107 = new P.Color(4289200107);
    C.Color_4284809178 = new P.Color(4284809178);
    C.Color_4280150454 = new P.Color(4280150454);
    C.Color_4278239141 = new P.Color(4278239141);
    C.Map_iTYZn = new H.GeneralConstantMap([100, C.Color_4289200107, 200, C.Color_4284809178, 400, C.Color_4280150454, 700, C.Color_4278239141], type$.GeneralConstantMap_int_Color);
    C.Map_kvIFE = new H.GeneralConstantMap([65, C.LogicalKeyboardKey_7G2, 66, C.LogicalKeyboardKey_jjv, 67, C.LogicalKeyboardKey_mF8, 68, C.LogicalKeyboardKey_ICU, 69, C.LogicalKeyboardKey_AaU, 70, C.LogicalKeyboardKey_2jN, 71, C.LogicalKeyboardKey_cKo, 72, C.LogicalKeyboardKey_QhK, 73, C.LogicalKeyboardKey_swi, 74, C.LogicalKeyboardKey_CG7, 75, C.LogicalKeyboardKey_3jH, 76, C.LogicalKeyboardKey_4iU, 77, C.LogicalKeyboardKey_oe4, 78, C.LogicalKeyboardKey_OLv, 79, C.LogicalKeyboardKey_sav, 80, C.LogicalKeyboardKey_M6L, 81, C.LogicalKeyboardKey_Ods, 82, C.LogicalKeyboardKey_qsN, 83, C.LogicalKeyboardKey_fLj, 84, C.LogicalKeyboardKey_V86, 85, C.LogicalKeyboardKey_Tng, 86, C.LogicalKeyboardKey_6Ng, 87, C.LogicalKeyboardKey_XaR, 88, C.LogicalKeyboardKey_ifx, 89, C.LogicalKeyboardKey_kQR, 90, C.LogicalKeyboardKey_W2D, 49, C.LogicalKeyboardKey_4AN, 50, C.LogicalKeyboardKey_mmo, 51, C.LogicalKeyboardKey_a7X, 52, C.LogicalKeyboardKey_e9s, 53, C.LogicalKeyboardKey_43h, 54, C.LogicalKeyboardKey_CmI, 55, C.LogicalKeyboardKey_Db0, 56, C.LogicalKeyboardKey_GZG, 57, C.LogicalKeyboardKey_86y, 48, C.LogicalKeyboardKey_0, 257, C.LogicalKeyboardKey_4295426088_Enter_null, 256, C.LogicalKeyboardKey_4295426089_Escape_null, 259, C.LogicalKeyboardKey_4295426090_Backspace_null, 258, C.LogicalKeyboardKey_4295426091_Tab_null, 32, C.LogicalKeyboardKey_YdN, 45, C.LogicalKeyboardKey_oEN, 61, C.LogicalKeyboardKey_wrE, 91, C.LogicalKeyboardKey_TLI, 93, C.LogicalKeyboardKey_awJ, 92, C.LogicalKeyboardKey_cdS, 59, C.LogicalKeyboardKey_atK, 39, C.LogicalKeyboardKey_Qo8, 96, C.LogicalKeyboardKey_7FR, 44, C.LogicalKeyboardKey_71T, 46, C.LogicalKeyboardKey_h8g, 47, C.LogicalKeyboardKey_ouN, 280, C.LogicalKeyboardKey_OWF, 290, C.LogicalKeyboardKey_4295426106_F1_null, 291, C.LogicalKeyboardKey_4295426107_F2_null, 292, C.LogicalKeyboardKey_4295426108_F3_null, 293, C.LogicalKeyboardKey_4295426109_F4_null, 294, C.LogicalKeyboardKey_4295426110_F5_null, 295, C.LogicalKeyboardKey_4295426111_F6_null, 296, C.LogicalKeyboardKey_4295426112_F7_null, 297, C.LogicalKeyboardKey_4295426113_F8_null, 298, C.LogicalKeyboardKey_4295426114_F9_null, 299, C.LogicalKeyboardKey_4295426115_F10_null, 300, C.LogicalKeyboardKey_4295426116_F11_null, 301, C.LogicalKeyboardKey_4295426117_F12_null, 283, C.LogicalKeyboardKey_wAl, 284, C.LogicalKeyboardKey_4295426120_Pause_null, 260, C.LogicalKeyboardKey_4295426121_Insert_null, 268, C.LogicalKeyboardKey_4295426122_Home_null, 266, C.LogicalKeyboardKey_mgB, 261, C.LogicalKeyboardKey_4295426124_Delete_null, 269, C.LogicalKeyboardKey_4295426125_End_null, 267, C.LogicalKeyboardKey_wYn, 262, C.LogicalKeyboardKey_CzM, 263, C.LogicalKeyboardKey_muk, 264, C.LogicalKeyboardKey_O7X, 265, C.LogicalKeyboardKey_gCR, 282, C.LogicalKeyboardKey_uHn, 331, C.LogicalKeyboardKey_Npb, 332, C.LogicalKeyboardKey_iOn, 334, C.LogicalKeyboardKey_YaH, 335, C.LogicalKeyboardKey_U2J, 321, C.LogicalKeyboardKey_qsT, 322, C.LogicalKeyboardKey_ka2, 323, C.LogicalKeyboardKey_Ddz, 324, C.LogicalKeyboardKey_YGD, 325, C.LogicalKeyboardKey_s0r, 326, C.LogicalKeyboardKey_atK0, 327, C.LogicalKeyboardKey_3bB, 328, C.LogicalKeyboardKey_sx4, 329, C.LogicalKeyboardKey_4IJ, 320, C.LogicalKeyboardKey_KQb, 330, C.LogicalKeyboardKey_iXq, 348, C.LogicalKeyboardKey_nDU, 336, C.LogicalKeyboardKey_G2v, 302, C.LogicalKeyboardKey_4295426152_F13_null, 303, C.LogicalKeyboardKey_4295426153_F14_null, 304, C.LogicalKeyboardKey_4295426154_F15_null, 305, C.LogicalKeyboardKey_4295426155_F16_null, 306, C.LogicalKeyboardKey_4295426156_F17_null, 307, C.LogicalKeyboardKey_4295426157_F18_null, 308, C.LogicalKeyboardKey_4295426158_F19_null, 309, C.LogicalKeyboardKey_4295426159_F20_null, 310, C.LogicalKeyboardKey_4295426160_F21_null, 311, C.LogicalKeyboardKey_4295426161_F22_null, 312, C.LogicalKeyboardKey_4295426162_F23_null, 341, C.LogicalKeyboardKey_p6t, 340, C.LogicalKeyboardKey_xok, 342, C.LogicalKeyboardKey_PD9, 343, C.LogicalKeyboardKey_D0U, 345, C.LogicalKeyboardKey_ijl, 344, C.LogicalKeyboardKey_QOu, 346, C.LogicalKeyboardKey_EtP, 347, C.LogicalKeyboardKey_O1c], type$.GeneralConstantMap_int_LogicalKeyboardKey);
    C.Map_mDkQW = new H.GeneralConstantMap([57439, C.PhysicalKeyboardKey_65666_Sleep, 57443, C.PhysicalKeyboardKey_XLl, 255, C.PhysicalKeyboardKey_9pp, 252, C.PhysicalKeyboardKey_QG0, 30, C.PhysicalKeyboardKey_c4y, 48, C.PhysicalKeyboardKey_Ui9, 46, C.PhysicalKeyboardKey_oqy, 32, C.PhysicalKeyboardKey_Aec, 18, C.PhysicalKeyboardKey_e7M, 33, C.PhysicalKeyboardKey_WjS, 34, C.PhysicalKeyboardKey_cgs, 35, C.PhysicalKeyboardKey_O9K, 23, C.PhysicalKeyboardKey_ATp, 36, C.PhysicalKeyboardKey_8Qj, 37, C.PhysicalKeyboardKey_02V, 38, C.PhysicalKeyboardKey_2jN, 50, C.PhysicalKeyboardKey_Pdn, 49, C.PhysicalKeyboardKey_sQd, 24, C.PhysicalKeyboardKey_oYc, 25, C.PhysicalKeyboardKey_ClL, 16, C.PhysicalKeyboardKey_ON8, 19, C.PhysicalKeyboardKey_kfn, 31, C.PhysicalKeyboardKey_yXI, 20, C.PhysicalKeyboardKey_86y, 22, C.PhysicalKeyboardKey_3NL, 47, C.PhysicalKeyboardKey_Sof, 17, C.PhysicalKeyboardKey_gc6, 45, C.PhysicalKeyboardKey_XTH, 21, C.PhysicalKeyboardKey_699, 44, C.PhysicalKeyboardKey_geL, 2, C.PhysicalKeyboardKey_9kk, 3, C.PhysicalKeyboardKey_gEY, 4, C.PhysicalKeyboardKey_Ddv, 5, C.PhysicalKeyboardKey_aNU, 6, C.PhysicalKeyboardKey_gc60, 7, C.PhysicalKeyboardKey_wg4, 8, C.PhysicalKeyboardKey_Tkj, 9, C.PhysicalKeyboardKey_GRf, 10, C.PhysicalKeyboardKey_C4W, 11, C.PhysicalKeyboardKey_eYS, 28, C.PhysicalKeyboardKey_458792_Enter, 1, C.PhysicalKeyboardKey_458793_Escape, 14, C.PhysicalKeyboardKey_458794_Backspace, 15, C.PhysicalKeyboardKey_458795_Tab, 57, C.PhysicalKeyboardKey_458796_Space, 12, C.PhysicalKeyboardKey_458797_Minus, 13, C.PhysicalKeyboardKey_458798_Equal, 26, C.PhysicalKeyboardKey_Dx1, 27, C.PhysicalKeyboardKey_YIZ, 43, C.PhysicalKeyboardKey_458801_Backslash, 39, C.PhysicalKeyboardKey_458803_Semicolon, 40, C.PhysicalKeyboardKey_458804_Quote, 41, C.PhysicalKeyboardKey_458805_Backquote, 51, C.PhysicalKeyboardKey_458806_Comma, 52, C.PhysicalKeyboardKey_458807_Period, 53, C.PhysicalKeyboardKey_458808_Slash, 58, C.PhysicalKeyboardKey_eAf, 59, C.PhysicalKeyboardKey_458810_F1, 60, C.PhysicalKeyboardKey_458811_F2, 61, C.PhysicalKeyboardKey_458812_F3, 62, C.PhysicalKeyboardKey_458813_F4, 63, C.PhysicalKeyboardKey_458814_F5, 64, C.PhysicalKeyboardKey_458815_F6, 65, C.PhysicalKeyboardKey_458816_F7, 66, C.PhysicalKeyboardKey_458817_F8, 67, C.PhysicalKeyboardKey_458818_F9, 68, C.PhysicalKeyboardKey_458819_F10, 87, C.PhysicalKeyboardKey_458820_F11, 88, C.PhysicalKeyboardKey_458821_F12, 57399, C.PhysicalKeyboardKey_DNn, 70, C.PhysicalKeyboardKey_DpI, 69, C.PhysicalKeyboardKey_458824_Pause, 57426, C.PhysicalKeyboardKey_458825_Insert, 57415, C.PhysicalKeyboardKey_458826_Home, 57417, C.PhysicalKeyboardKey_gg90, 57427, C.PhysicalKeyboardKey_458828_Delete, 57423, C.PhysicalKeyboardKey_458829_End, 57425, C.PhysicalKeyboardKey_UCG, 57421, C.PhysicalKeyboardKey_Q8r, 57419, C.PhysicalKeyboardKey_4iW, 57424, C.PhysicalKeyboardKey_G79, 57416, C.PhysicalKeyboardKey_ytW, 57413, C.PhysicalKeyboardKey_A3V, 57397, C.PhysicalKeyboardKey_A4L, 55, C.PhysicalKeyboardKey_cgN, 74, C.PhysicalKeyboardKey_43h, 78, C.PhysicalKeyboardKey_OGx, 57372, C.PhysicalKeyboardKey_6dA, 79, C.PhysicalKeyboardKey_si2, 80, C.PhysicalKeyboardKey_si20, 81, C.PhysicalKeyboardKey_si21, 75, C.PhysicalKeyboardKey_si22, 76, C.PhysicalKeyboardKey_CtV, 77, C.PhysicalKeyboardKey_CtV0, 71, C.PhysicalKeyboardKey_CtV1, 72, C.PhysicalKeyboardKey_U44, 73, C.PhysicalKeyboardKey_U440, 82, C.PhysicalKeyboardKey_U441, 83, C.PhysicalKeyboardKey_s0y, 86, C.PhysicalKeyboardKey_jrj, 57437, C.PhysicalKeyboardKey_m5d, 57438, C.PhysicalKeyboardKey_458854_Power, 89, C.PhysicalKeyboardKey_izR, 100, C.PhysicalKeyboardKey_458856_F13, 101, C.PhysicalKeyboardKey_458857_F14, 102, C.PhysicalKeyboardKey_458858_F15, 103, C.PhysicalKeyboardKey_458859_F16, 104, C.PhysicalKeyboardKey_458860_F17, 105, C.PhysicalKeyboardKey_458861_F18, 106, C.PhysicalKeyboardKey_458862_F19, 107, C.PhysicalKeyboardKey_458863_F20, 108, C.PhysicalKeyboardKey_458864_F21, 109, C.PhysicalKeyboardKey_458865_F22, 110, C.PhysicalKeyboardKey_458866_F23, 118, C.PhysicalKeyboardKey_458867_F24, 57403, C.PhysicalKeyboardKey_458869_Help, 57352, C.PhysicalKeyboardKey_458874_Undo, 57367, C.PhysicalKeyboardKey_458875_Cut, 57368, C.PhysicalKeyboardKey_458876_Copy, 57354, C.PhysicalKeyboardKey_458877_Paste, 57376, C.PhysicalKeyboardKey_042, 57392, C.PhysicalKeyboardKey_yjH, 57390, C.PhysicalKeyboardKey_2nP, 126, C.PhysicalKeyboardKey_AoG, 115, C.PhysicalKeyboardKey_4OV, 112, C.PhysicalKeyboardKey_Yqx, 125, C.PhysicalKeyboardKey_y47, 121, C.PhysicalKeyboardKey_458890_Convert, 123, C.PhysicalKeyboardKey_Mys, 114, C.PhysicalKeyboardKey_Cni, 113, C.PhysicalKeyboardKey_Cni0, 120, C.PhysicalKeyboardKey_AJU, 119, C.PhysicalKeyboardKey_AJU0, 29, C.PhysicalKeyboardKey_wEo, 42, C.PhysicalKeyboardKey_Y3m, 56, C.PhysicalKeyboardKey_CNh, 57435, C.PhysicalKeyboardKey_gg9, 57373, C.PhysicalKeyboardKey_Q4j, 54, C.PhysicalKeyboardKey_fBD, 57400, C.PhysicalKeyboardKey_7FR, 57436, C.PhysicalKeyboardKey_INA, 57369, C.PhysicalKeyboardKey_e8P, 57360, C.PhysicalKeyboardKey_Sv6, 57380, C.PhysicalKeyboardKey_8Gl, 57388, C.PhysicalKeyboardKey_786616_Eject, 57378, C.PhysicalKeyboardKey_tgd, 57453, C.PhysicalKeyboardKey_sJO, 57452, C.PhysicalKeyboardKey_cEx, 57377, C.PhysicalKeyboardKey_q48, 57451, C.PhysicalKeyboardKey_q480, 57445, C.PhysicalKeyboardKey_QkZ, 57394, C.PhysicalKeyboardKey_X7N, 57450, C.PhysicalKeyboardKey_ACk, 57449, C.PhysicalKeyboardKey_p6a, 57448, C.PhysicalKeyboardKey_3Vk, 57447, C.PhysicalKeyboardKey_2Vk, 57446, C.PhysicalKeyboardKey_sHU], type$.GeneralConstantMap_int_PhysicalKeyboardKey);
    C.List_oWp = H.setRuntimeTypeInfo(makeConstList(["NumpadDivide", "NumpadMultiply", "NumpadSubtract", "NumpadAdd", "Numpad1", "Numpad2", "Numpad3", "Numpad4", "Numpad5", "Numpad6", "Numpad7", "Numpad8", "Numpad9", "Numpad0", "NumpadDecimal", "NumpadEqual", "NumpadComma", "NumpadParenLeft", "NumpadParenRight"]), type$.JSArray_String);
    C.Map_oWD5f = new H.ConstantStringMap(19, {NumpadDivide: C.LogicalKeyboardKey_Npb, NumpadMultiply: C.LogicalKeyboardKey_iOn, NumpadSubtract: C.LogicalKeyboardKey_7xV, NumpadAdd: C.LogicalKeyboardKey_YaH, Numpad1: C.LogicalKeyboardKey_qsT, Numpad2: C.LogicalKeyboardKey_ka2, Numpad3: C.LogicalKeyboardKey_Ddz, Numpad4: C.LogicalKeyboardKey_YGD, Numpad5: C.LogicalKeyboardKey_s0r, Numpad6: C.LogicalKeyboardKey_atK0, Numpad7: C.LogicalKeyboardKey_3bB, Numpad8: C.LogicalKeyboardKey_sx4, Numpad9: C.LogicalKeyboardKey_4IJ, Numpad0: C.LogicalKeyboardKey_KQb, NumpadDecimal: C.LogicalKeyboardKey_iXq, NumpadEqual: C.LogicalKeyboardKey_G2v, NumpadComma: C.LogicalKeyboardKey_CLo, NumpadParenLeft: C.LogicalKeyboardKey_wEo, NumpadParenRight: C.LogicalKeyboardKey_8Nr}, C.List_oWp, type$.ConstantStringMap_String_LogicalKeyboardKey);
    C.Map_rjjB5 = new H.GeneralConstantMap([95, C.LogicalKeyboardKey_4295032962_Sleep_null, 65, C.LogicalKeyboardKey_7G2, 66, C.LogicalKeyboardKey_jjv, 67, C.LogicalKeyboardKey_mF8, 68, C.LogicalKeyboardKey_ICU, 69, C.LogicalKeyboardKey_AaU, 70, C.LogicalKeyboardKey_2jN, 71, C.LogicalKeyboardKey_cKo, 72, C.LogicalKeyboardKey_QhK, 73, C.LogicalKeyboardKey_swi, 74, C.LogicalKeyboardKey_CG7, 75, C.LogicalKeyboardKey_3jH, 76, C.LogicalKeyboardKey_4iU, 77, C.LogicalKeyboardKey_oe4, 78, C.LogicalKeyboardKey_OLv, 79, C.LogicalKeyboardKey_sav, 80, C.LogicalKeyboardKey_M6L, 81, C.LogicalKeyboardKey_Ods, 82, C.LogicalKeyboardKey_qsN, 83, C.LogicalKeyboardKey_fLj, 84, C.LogicalKeyboardKey_V86, 85, C.LogicalKeyboardKey_Tng, 86, C.LogicalKeyboardKey_6Ng, 87, C.LogicalKeyboardKey_XaR, 88, C.LogicalKeyboardKey_ifx, 89, C.LogicalKeyboardKey_kQR, 90, C.LogicalKeyboardKey_W2D, 13, C.LogicalKeyboardKey_4295426088_Enter_null, 27, C.LogicalKeyboardKey_4295426089_Escape_null, 8, C.LogicalKeyboardKey_4295426090_Backspace_null, 9, C.LogicalKeyboardKey_4295426091_Tab_null, 32, C.LogicalKeyboardKey_YdN, 189, C.LogicalKeyboardKey_oEN, 187, C.LogicalKeyboardKey_wrE, 219, C.LogicalKeyboardKey_TLI, 221, C.LogicalKeyboardKey_awJ, 220, C.LogicalKeyboardKey_cdS, 186, C.LogicalKeyboardKey_atK, 222, C.LogicalKeyboardKey_Qo8, 188, C.LogicalKeyboardKey_71T, 190, C.LogicalKeyboardKey_h8g, 191, C.LogicalKeyboardKey_ouN, 20, C.LogicalKeyboardKey_OWF, 112, C.LogicalKeyboardKey_4295426106_F1_null, 113, C.LogicalKeyboardKey_4295426107_F2_null, 114, C.LogicalKeyboardKey_4295426108_F3_null, 115, C.LogicalKeyboardKey_4295426109_F4_null, 116, C.LogicalKeyboardKey_4295426110_F5_null, 117, C.LogicalKeyboardKey_4295426111_F6_null, 118, C.LogicalKeyboardKey_4295426112_F7_null, 119, C.LogicalKeyboardKey_4295426113_F8_null, 120, C.LogicalKeyboardKey_4295426114_F9_null, 121, C.LogicalKeyboardKey_4295426115_F10_null, 122, C.LogicalKeyboardKey_4295426116_F11_null, 123, C.LogicalKeyboardKey_4295426117_F12_null, 19, C.LogicalKeyboardKey_4295426120_Pause_null, 45, C.LogicalKeyboardKey_4295426121_Insert_null, 36, C.LogicalKeyboardKey_4295426122_Home_null, 46, C.LogicalKeyboardKey_4295426124_Delete_null, 35, C.LogicalKeyboardKey_4295426125_End_null, 39, C.LogicalKeyboardKey_CzM, 37, C.LogicalKeyboardKey_muk, 40, C.LogicalKeyboardKey_O7X, 38, C.LogicalKeyboardKey_gCR, 111, C.LogicalKeyboardKey_Npb, 106, C.LogicalKeyboardKey_iOn, 109, C.LogicalKeyboardKey_7xV, 107, C.LogicalKeyboardKey_YaH, 97, C.LogicalKeyboardKey_qsT, 98, C.LogicalKeyboardKey_ka2, 99, C.LogicalKeyboardKey_Ddz, 100, C.LogicalKeyboardKey_YGD, 101, C.LogicalKeyboardKey_s0r, 102, C.LogicalKeyboardKey_atK0, 103, C.LogicalKeyboardKey_3bB, 104, C.LogicalKeyboardKey_sx4, 105, C.LogicalKeyboardKey_4IJ, 96, C.LogicalKeyboardKey_KQb, 110, C.LogicalKeyboardKey_iXq, 146, C.LogicalKeyboardKey_G2v, 124, C.LogicalKeyboardKey_4295426152_F13_null, 125, C.LogicalKeyboardKey_4295426153_F14_null, 126, C.LogicalKeyboardKey_4295426154_F15_null, 127, C.LogicalKeyboardKey_4295426155_F16_null, 128, C.LogicalKeyboardKey_4295426156_F17_null, 129, C.LogicalKeyboardKey_4295426157_F18_null, 130, C.LogicalKeyboardKey_4295426158_F19_null, 131, C.LogicalKeyboardKey_4295426159_F20_null, 132, C.LogicalKeyboardKey_4295426160_F21_null, 133, C.LogicalKeyboardKey_4295426161_F22_null, 134, C.LogicalKeyboardKey_4295426162_F23_null, 135, C.LogicalKeyboardKey_4295426163_F24_null, 47, C.LogicalKeyboardKey_4295426165_Help_null, 41, C.LogicalKeyboardKey_4295426167_Select_null, 28, C.LogicalKeyboardKey_4295426186_Convert_null, 162, C.LogicalKeyboardKey_p6t, 160, C.LogicalKeyboardKey_xok, 164, C.LogicalKeyboardKey_PD9, 91, C.LogicalKeyboardKey_D0U, 163, C.LogicalKeyboardKey_ijl, 161, C.LogicalKeyboardKey_QOu, 165, C.LogicalKeyboardKey_EtP, 92, C.LogicalKeyboardKey_O1c, 178, C.LogicalKeyboardKey_wfl, 179, C.LogicalKeyboardKey_Cu4, 180, C.LogicalKeyboardKey_9gS, 183, C.LogicalKeyboardKey_00, 182, C.LogicalKeyboardKey_01, 42, C.LogicalKeyboardKey_4295754248_Print_null, 170, C.LogicalKeyboardKey_EWB, 172, C.LogicalKeyboardKey_cEy, 166, C.LogicalKeyboardKey_kKc, 167, C.LogicalKeyboardKey_8pc, 169, C.LogicalKeyboardKey_MYu, 168, C.LogicalKeyboardKey_Un6, 171, C.LogicalKeyboardKey_46S], type$.GeneralConstantMap_int_LogicalKeyboardKey);
    C.Map_s3kmC = new H.GeneralConstantMap([331, C.LogicalKeyboardKey_Npb, 332, C.LogicalKeyboardKey_iOn, 334, C.LogicalKeyboardKey_YaH, 321, C.LogicalKeyboardKey_qsT, 322, C.LogicalKeyboardKey_ka2, 323, C.LogicalKeyboardKey_Ddz, 324, C.LogicalKeyboardKey_YGD, 325, C.LogicalKeyboardKey_s0r, 326, C.LogicalKeyboardKey_atK0, 327, C.LogicalKeyboardKey_3bB, 328, C.LogicalKeyboardKey_sx4, 329, C.LogicalKeyboardKey_4IJ, 320, C.LogicalKeyboardKey_KQb, 330, C.LogicalKeyboardKey_iXq, 336, C.LogicalKeyboardKey_G2v], type$.GeneralConstantMap_int_LogicalKeyboardKey);
    C.Map_uS2jN = new H.GeneralConstantMap([154, C.LogicalKeyboardKey_Npb, 155, C.LogicalKeyboardKey_iOn, 156, C.LogicalKeyboardKey_7xV, 157, C.LogicalKeyboardKey_YaH, 145, C.LogicalKeyboardKey_qsT, 146, C.LogicalKeyboardKey_ka2, 147, C.LogicalKeyboardKey_Ddz, 148, C.LogicalKeyboardKey_YGD, 149, C.LogicalKeyboardKey_s0r, 150, C.LogicalKeyboardKey_atK0, 151, C.LogicalKeyboardKey_3bB, 152, C.LogicalKeyboardKey_sx4, 153, C.LogicalKeyboardKey_4IJ, 144, C.LogicalKeyboardKey_KQb, 158, C.LogicalKeyboardKey_iXq, 161, C.LogicalKeyboardKey_G2v, 159, C.LogicalKeyboardKey_CLo, 162, C.LogicalKeyboardKey_wEo, 163, C.LogicalKeyboardKey_8Nr], type$.GeneralConstantMap_int_LogicalKeyboardKey);
    C.Map_yXAeS = new H.GeneralConstantMap([0, "FontWeight.w100", 1, "FontWeight.w200", 2, "FontWeight.w300", 3, "FontWeight.w400", 4, "FontWeight.w500", 5, "FontWeight.w600", 6, "FontWeight.w700", 7, "FontWeight.w800", 8, "FontWeight.w900"], H.findType("GeneralConstantMap<int,String>"));
    C.Color_4289956095 = new P.Color(4289956095);
    C.Color_4286336511 = new P.Color(4286336511);
    C.Color_4284817407 = new P.Color(4284817407);
    C.Color_4284612842 = new P.Color(4284612842);
    C.Map_iT0Z9 = new H.GeneralConstantMap([100, C.Color_4289956095, 200, C.Color_4286336511, 400, C.Color_4284817407, 700, C.Color_4284612842], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iT0Z9_4286336511 = new E.MaterialAccentColor(C.Map_iT0Z9, 4286336511);
    C.Color_4293558524 = new P.Color(4293558524);
    C.Color_4292886779 = new P.Color(4292886779);
    C.Color_4292149497 = new P.Color(4292149497);
    C.Color_4289331455 = new P.Color(4289331455);
    C.Map_iT2jN = new H.GeneralConstantMap([100, C.Color_4293558524, 200, C.Color_4292886779, 400, C.Color_4292149497, 700, C.Color_4289331455], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iT2jN_4292886779 = new E.MaterialAccentColor(C.Map_iT2jN, 4292886779);
    C.Color_4294960511 = new P.Color(4294960511);
    C.Color_4294956864 = new P.Color(4294956864);
    C.Color_4294951936 = new P.Color(4294951936);
    C.Color_4294945536 = new P.Color(4294945536);
    C.Map_iT4UX = new H.GeneralConstantMap([100, C.Color_4294960511, 200, C.Color_4294956864, 400, C.Color_4294951936, 700, C.Color_4294945536], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iT4UX_4294956864 = new E.MaterialAccentColor(C.Map_iT4UX, 4294956864);
    C.Color_4287405823 = new P.Color(4287405823);
    C.Color_4283657726 = new P.Color(4283657726);
    C.Color_4282211070 = new P.Color(4282211070);
    C.Color_4281356286 = new P.Color(4281356286);
    C.Map_iT7xV = new H.GeneralConstantMap([100, C.Color_4287405823, 200, C.Color_4283657726, 400, C.Color_4282211070, 700, C.Color_4281356286], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iT7xV_4283657726 = new E.MaterialAccentColor(C.Map_iT7xV, 4283657726);
    C.Color_4286755327 = new P.Color(4286755327);
    C.Color_4282682111 = new P.Color(4282682111);
    C.Color_4280908287 = new P.Color(4280908287);
    C.Color_4280902399 = new P.Color(4280902399);
    C.Map_iTCd2 = new H.GeneralConstantMap([100, C.Color_4286755327, 200, C.Color_4282682111, 400, C.Color_4280908287, 700, C.Color_4280902399], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTCd2_4282682111 = new E.MaterialAccentColor(C.Map_iTCd2, 4282682111);
    C.Color_4294937216 = new P.Color(4294937216);
    C.Color_4294922834 = new P.Color(4294922834);
    C.Color_4294907716 = new P.Color(4294907716);
    C.Color_4292149248 = new P.Color(4292149248);
    C.Map_iTECn = new H.GeneralConstantMap([100, C.Color_4294937216, 200, C.Color_4294922834, 400, C.Color_4294907716, 700, C.Color_4292149248], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTECn_4294922834 = new E.MaterialAccentColor(C.Map_iTECn, 4294922834);
    C.Color_4291624848 = new P.Color(4291624848);
    C.Color_4289920857 = new P.Color(4289920857);
    C.Color_4285988611 = new P.Color(4285988611);
    C.Color_4284800279 = new P.Color(4284800279);
    C.Map_iTSpr = new H.GeneralConstantMap([100, C.Color_4291624848, 200, C.Color_4289920857, 400, C.Color_4285988611, 700, C.Color_4284800279], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTSpr_4289920857 = new E.MaterialAccentColor(C.Map_iTSpr, 4289920857);
    C.Color_4286906367 = new P.Color(4286906367);
    C.Color_4279828479 = new P.Color(4279828479);
    C.Color_4278248959 = new P.Color(4278248959);
    C.Color_4278237396 = new P.Color(4278237396);
    C.Map_iTWCn = new H.GeneralConstantMap([100, C.Color_4286906367, 200, C.Color_4279828479, 400, C.Color_4278248959, 700, C.Color_4278237396], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTWCn_4279828479 = new E.MaterialAccentColor(C.Map_iTWCn, 4279828479);
    C.Color_4294942336 = new P.Color(4294942336);
    C.Color_4294929984 = new P.Color(4294929984);
    C.Color_4294917376 = new P.Color(4294917376);
    C.Color_4292684800 = new P.Color(4292684800);
    C.Map_iTYUJ = new H.GeneralConstantMap([100, C.Color_4294942336, 200, C.Color_4294929984, 400, C.Color_4294917376, 700, C.Color_4292684800], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTYUJ_4294929984 = new E.MaterialAccentColor(C.Map_iTYUJ, 4294929984);
    C.MaterialAccentColor_Map_iTYZn_4284809178 = new E.MaterialAccentColor(C.Map_iTYZn, 4284809178);
    C.Color_4290377418 = new P.Color(4290377418);
    C.Color_4285132974 = new P.Color(4285132974);
    C.Color_4278249078 = new P.Color(4278249078);
    C.Color_4278241363 = new P.Color(4278241363);
    C.Map_iTc0J = new H.GeneralConstantMap([100, C.Color_4290377418, 200, C.Color_4285132974, 400, C.Color_4278249078, 700, C.Color_4278241363], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTc0J_4285132974 = new E.MaterialAccentColor(C.Map_iTc0J, 4285132974);
    C.Color_4294934699 = new P.Color(4294934699);
    C.Color_4294918273 = new P.Color(4294918273);
    C.Color_4294246487 = new P.Color(4294246487);
    C.Color_4291105122 = new P.Color(4291105122);
    C.Map_iTouf = new H.GeneralConstantMap([100, C.Color_4294934699, 200, C.Color_4294918273, 400, C.Color_4294246487, 700, C.Color_4291105122], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTouf_4294918273 = new E.MaterialAccentColor(C.Map_iTouf, 4294918273);
    C.Color_4294955392 = new P.Color(4294955392);
    C.Color_4294945600 = new P.Color(4294945600);
    C.Color_4294938880 = new P.Color(4294938880);
    C.Color_4294929664 = new P.Color(4294929664);
    C.Map_iTsEs = new H.GeneralConstantMap([100, C.Color_4294955392, 200, C.Color_4294945600, 400, C.Color_4294938880, 700, C.Color_4294929664], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTsEs_4294945600 = new E.MaterialAccentColor(C.Map_iTsEs, 4294945600);
    C.Color_4294246273 = new P.Color(4294246273);
    C.Color_4293852993 = new P.Color(4293852993);
    C.Color_4291231488 = new P.Color(4291231488);
    C.Color_4289653248 = new P.Color(4289653248);
    C.Map_iTuSA = new H.GeneralConstantMap([100, C.Color_4294246273, 200, C.Color_4293852993, 400, C.Color_4291231488, 700, C.Color_4289653248], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTuSA_4293852993 = new E.MaterialAccentColor(C.Map_iTuSA, 4293852993);
    C.Color_4294967181 = new P.Color(4294967181);
    C.Color_4294967040 = new P.Color(4294967040);
    C.Color_4294961664 = new P.Color(4294961664);
    C.Color_4294956544 = new P.Color(4294956544);
    C.Map_iTwHq = new H.GeneralConstantMap([100, C.Color_4294967181, 200, C.Color_4294967040, 400, C.Color_4294961664, 700, C.Color_4294956544], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTwHq_4294967040 = new E.MaterialAccentColor(C.Map_iTwHq, 4294967040);
    C.Color_4286634239 = new P.Color(4286634239);
    C.Color_4282434815 = new P.Color(4282434815);
    C.Color_4278235391 = new P.Color(4278235391);
    C.Color_4278227434 = new P.Color(4278227434);
    C.Map_iTyLX = new H.GeneralConstantMap([100, C.Color_4286634239, 200, C.Color_4282434815, 400, C.Color_4278235391, 700, C.Color_4278227434], type$.GeneralConstantMap_int_Color);
    C.MaterialAccentColor_Map_iTyLX_4282434815 = new E.MaterialAccentColor(C.Map_iTyLX, 4282434815);
    C._InfiniteScrollCards_null = new T._InfiniteScrollCards(null);
    C.ThemeMode_0 = new S.ThemeMode("ThemeMode.system");
    C.MaterialApp_WrR = new S.MaterialApp(C._InfiniteScrollCards_null, "Infinite Card Scroll Benchmark", null);
    C.MaterialBannerThemeData_null_null_null_null = new Q.MaterialBannerThemeData(null, null, null, null);
    C.MaterialColor_Map_HFpTk_4288585374 = new E.MaterialColor(C.Map_HFpTk, 4288585374);
    C.Color_4292932337 = new P.Color(4292932337);
    C.Color_4289912795 = new P.Color(4289912795);
    C.Color_4286630852 = new P.Color(4286630852);
    C.Color_4283283116 = new P.Color(4283283116);
    C.Color_4280723098 = new P.Color(4280723098);
    C.Color_4278228616 = new P.Color(4278228616);
    C.Color_4278225275 = new P.Color(4278225275);
    C.Color_4278221163 = new P.Color(4278221163);
    C.Color_4278217052 = new P.Color(4278217052);
    C.Color_4278209856 = new P.Color(4278209856);
    C.Map_JN0Sr = new H.GeneralConstantMap([50, C.Color_4292932337, 100, C.Color_4289912795, 200, C.Color_4286630852, 300, C.Color_4283283116, 400, C.Color_4280723098, 500, C.Color_4278228616, 600, C.Color_4278225275, 700, C.Color_4278221163, 800, C.Color_4278217052, 900, C.Color_4278209856], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JN0Sr_4278228616 = new E.MaterialColor(C.Map_JN0Sr, 4278228616);
    C.Color_4294763756 = new P.Color(4294763756);
    C.Color_4294491088 = new P.Color(4294491088);
    C.Color_4294217649 = new P.Color(4294217649);
    C.Color_4293943954 = new P.Color(4293943954);
    C.Color_4293673082 = new P.Color(4293673082);
    C.Color_4293467747 = new P.Color(4293467747);
    C.Color_4292352864 = new P.Color(4292352864);
    C.Color_4290910299 = new P.Color(4290910299);
    C.Color_4289533015 = new P.Color(4289533015);
    C.Color_4287106639 = new P.Color(4287106639);
    C.Map_JN0o6 = new H.GeneralConstantMap([50, C.Color_4294763756, 100, C.Color_4294491088, 200, C.Color_4294217649, 300, C.Color_4293943954, 400, C.Color_4293673082, 500, C.Color_4293467747, 600, C.Color_4292352864, 700, C.Color_4290910299, 800, C.Color_4289533015, 900, C.Color_4287106639], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JN0o6_4293467747 = new E.MaterialColor(C.Map_JN0o6, 4293467747);
    C.Color_4292998654 = new P.Color(4292998654);
    C.Color_4289979900 = new P.Color(4289979900);
    C.Color_4286698746 = new P.Color(4286698746);
    C.Color_4283417591 = new P.Color(4283417591);
    C.Color_4280923894 = new P.Color(4280923894);
    C.Color_4278430196 = new P.Color(4278430196);
    C.Color_4278426597 = new P.Color(4278426597);
    C.Color_4278356177 = new P.Color(4278356177);
    C.Color_4278351805 = new P.Color(4278351805);
    C.Color_4278278043 = new P.Color(4278278043);
    C.Map_JN3Gf = new H.GeneralConstantMap([50, C.Color_4292998654, 100, C.Color_4289979900, 200, C.Color_4286698746, 300, C.Color_4283417591, 400, C.Color_4280923894, 500, C.Color_4278430196, 600, C.Color_4278426597, 700, C.Color_4278356177, 800, C.Color_4278351805, 900, C.Color_4278278043], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JN3Gf_4278430196 = new E.MaterialColor(C.Map_JN3Gf, 4278430196);
    C.Color_4293454582 = new P.Color(4293454582);
    C.Color_4291152617 = new P.Color(4291152617);
    C.Color_4288653530 = new P.Color(4288653530);
    C.Color_4286154443 = new P.Color(4286154443);
    C.Color_4284246976 = new P.Color(4284246976);
    C.Color_4282339765 = new P.Color(4282339765);
    C.Color_4281944491 = new P.Color(4281944491);
    C.Color_4281352095 = new P.Color(4281352095);
    C.Color_4280825235 = new P.Color(4280825235);
    C.Color_4279903102 = new P.Color(4279903102);
    C.Map_JN8qN = new H.GeneralConstantMap([50, C.Color_4293454582, 100, C.Color_4291152617, 200, C.Color_4288653530, 300, C.Color_4286154443, 400, C.Color_4284246976, 500, C.Color_4282339765, 600, C.Color_4281944491, 700, C.Color_4281352095, 800, C.Color_4280825235, 900, C.Color_4279903102], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JN8qN_4282339765 = new E.MaterialColor(C.Map_JN8qN, 4282339765);
    C.Color_4292933626 = new P.Color(4292933626);
    C.Color_4289915890 = new P.Color(4289915890);
    C.Color_4286635754 = new P.Color(4286635754);
    C.Color_4283289825 = new P.Color(4283289825);
    C.Color_4280731354 = new P.Color(4280731354);
    C.Color_4278238420 = new P.Color(4278238420);
    C.Color_4278234305 = new P.Color(4278234305);
    C.Color_4278228903 = new P.Color(4278228903);
    C.Color_4278223759 = new P.Color(4278223759);
    C.Color_4278214756 = new P.Color(4278214756);
    C.Map_JN94k = new H.GeneralConstantMap([50, C.Color_4292933626, 100, C.Color_4289915890, 200, C.Color_4286635754, 300, C.Color_4283289825, 400, C.Color_4280731354, 500, C.Color_4278238420, 600, C.Color_4278234305, 700, C.Color_4278228903, 800, C.Color_4278223759, 900, C.Color_4278214756], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JN94k_4278238420 = new E.MaterialColor(C.Map_JN94k, 4278238420);
    C.Color_4293457385 = new P.Color(4293457385);
    C.Color_4291356361 = new P.Color(4291356361);
    C.Color_4289058471 = new P.Color(4289058471);
    C.Color_4286695300 = new P.Color(4286695300);
    C.Color_4284922730 = new P.Color(4284922730);
    C.Color_4283215696 = new P.Color(4283215696);
    C.Color_4282622023 = new P.Color(4282622023);
    C.Color_4281896508 = new P.Color(4281896508);
    C.Color_4281236786 = new P.Color(4281236786);
    C.Color_4279983648 = new P.Color(4279983648);
    C.Map_JNEaM = new H.GeneralConstantMap([50, C.Color_4293457385, 100, C.Color_4291356361, 200, C.Color_4289058471, 300, C.Color_4286695300, 400, C.Color_4284922730, 500, C.Color_4283215696, 600, C.Color_4282622023, 700, C.Color_4281896508, 800, C.Color_4281236786, 900, C.Color_4279983648], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNEaM_4283215696 = new E.MaterialColor(C.Map_JNEaM, 4283215696);
    C.Color_4293781494 = new P.Color(4293781494);
    C.Color_4291937513 = new P.Color(4291937513);
    C.Color_4289961435 = new P.Color(4289961435);
    C.Color_4287985101 = new P.Color(4287985101);
    C.Color_4286470082 = new P.Color(4286470082);
    C.Color_4284955319 = new P.Color(4284955319);
    C.Color_4284364209 = new P.Color(4284364209);
    C.Color_4283510184 = new P.Color(4283510184);
    C.Color_4282722208 = new P.Color(4282722208);
    C.Color_4281408402 = new P.Color(4281408402);
    C.Map_JNEyN = new H.GeneralConstantMap([50, C.Color_4293781494, 100, C.Color_4291937513, 200, C.Color_4289961435, 300, C.Color_4287985101, 400, C.Color_4286470082, 500, C.Color_4284955319, 600, C.Color_4284364209, 700, C.Color_4283510184, 800, C.Color_4282722208, 900, C.Color_4281408402], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNEyN_4284955319 = new E.MaterialColor(C.Map_JNEyN, 4284955319);
    C.Color_4294966759 = new P.Color(4294966759);
    C.Color_4294965700 = new P.Color(4294965700);
    C.Color_4294964637 = new P.Color(4294964637);
    C.Color_4294963574 = new P.Color(4294963574);
    C.Color_4294962776 = new P.Color(4294962776);
    C.Color_4294961979 = new P.Color(4294961979);
    C.Color_4294826037 = new P.Color(4294826037);
    C.Color_4294688813 = new P.Color(4294688813);
    C.Color_4294551589 = new P.Color(4294551589);
    C.Color_4294278935 = new P.Color(4294278935);
    C.Map_JNHRl = new H.GeneralConstantMap([50, C.Color_4294966759, 100, C.Color_4294965700, 200, C.Color_4294964637, 300, C.Color_4294963574, 400, C.Color_4294962776, 500, C.Color_4294961979, 600, C.Color_4294826037, 700, C.Color_4294688813, 800, C.Color_4294551589, 900, C.Color_4294278935], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNHRl_4294961979 = new E.MaterialColor(C.Map_JNHRl, 4294961979);
    C.Color_4294047977 = new P.Color(4294047977);
    C.Color_4292668872 = new P.Color(4292668872);
    C.Color_4291158437 = new P.Color(4291158437);
    C.Color_4289648001 = new P.Color(4289648001);
    C.Color_4288466021 = new P.Color(4288466021);
    C.Color_4287349578 = new P.Color(4287349578);
    C.Color_4286362434 = new P.Color(4286362434);
    C.Color_4285046584 = new P.Color(4285046584);
    C.Color_4283796271 = new P.Color(4283796271);
    C.Color_4281559326 = new P.Color(4281559326);
    C.Map_JNJAl = new H.GeneralConstantMap([50, C.Color_4294047977, 100, C.Color_4292668872, 200, C.Color_4291158437, 300, C.Color_4289648001, 400, C.Color_4288466021, 500, C.Color_4287349578, 600, C.Color_4286362434, 700, C.Color_4285046584, 800, C.Color_4283796271, 900, C.Color_4281559326], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNJAl_4287349578 = new E.MaterialColor(C.Map_JNJAl, 4287349578);
    C.Color_4294174197 = new P.Color(4294174197);
    C.Color_4292984551 = new P.Color(4292984551);
    C.Color_4291728344 = new P.Color(4291728344);
    C.Color_4290406600 = new P.Color(4290406600);
    C.Color_4289415100 = new P.Color(4289415100);
    C.Color_4288423856 = new P.Color(4288423856);
    C.Color_4287505578 = new P.Color(4287505578);
    C.Color_4286259106 = new P.Color(4286259106);
    C.Color_4285143962 = new P.Color(4285143962);
    C.Color_4283045004 = new P.Color(4283045004);
    C.Map_JNNS7 = new H.GeneralConstantMap([50, C.Color_4294174197, 100, C.Color_4292984551, 200, C.Color_4291728344, 300, C.Color_4290406600, 400, C.Color_4289415100, 500, C.Color_4288423856, 600, C.Color_4287505578, 700, C.Color_4286259106, 800, C.Color_4285143962, 900, C.Color_4283045004], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNNS7_4288423856 = new E.MaterialColor(C.Map_JNNS7, 4288423856);
    C.Color_4294573031 = new P.Color(4294573031);
    C.Color_4293981379 = new P.Color(4293981379);
    C.Color_4293324444 = new P.Color(4293324444);
    C.Color_4292667253 = new P.Color(4292667253);
    C.Color_4292141399 = new P.Color(4292141399);
    C.Color_4291681337 = new P.Color(4291681337);
    C.Color_4290824755 = new P.Color(4290824755);
    C.Color_4289705003 = new P.Color(4289705003);
    C.Color_4288584996 = new P.Color(4288584996);
    C.Color_4286740247 = new P.Color(4286740247);
    C.Map_JNQQJ = new H.GeneralConstantMap([50, C.Color_4294573031, 100, C.Color_4293981379, 200, C.Color_4293324444, 300, C.Color_4292667253, 400, C.Color_4292141399, 500, C.Color_4291681337, 600, C.Color_4290824755, 700, C.Color_4289705003, 800, C.Color_4288584996, 900, C.Color_4286740247], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNQQJ_4291681337 = new E.MaterialColor(C.Map_JNQQJ, 4291681337);
    C.Color_4293913577 = new P.Color(4293913577);
    C.Color_4292332744 = new P.Color(4292332744);
    C.Color_4290554532 = new P.Color(4290554532);
    C.Color_4288776319 = new P.Color(4288776319);
    C.Color_4287458915 = new P.Color(4287458915);
    C.Color_4286141768 = new P.Color(4286141768);
    C.Color_4285353025 = new P.Color(4285353025);
    C.Color_4284301367 = new P.Color(4284301367);
    C.Color_4283315246 = new P.Color(4283315246);
    C.Color_4282263331 = new P.Color(4282263331);
    C.Map_JNUEV = new H.GeneralConstantMap([50, C.Color_4293913577, 100, C.Color_4292332744, 200, C.Color_4290554532, 300, C.Color_4288776319, 400, C.Color_4287458915, 500, C.Color_4286141768, 600, C.Color_4285353025, 700, C.Color_4284301367, 800, C.Color_4283315246, 900, C.Color_4282263331], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNUEV_4286141768 = new E.MaterialColor(C.Map_JNUEV, 4286141768);
    C.Color_4294699495 = new P.Color(4294699495);
    C.Color_4294954172 = new P.Color(4294954172);
    C.Color_4294945681 = new P.Color(4294945681);
    C.Color_4294937189 = new P.Color(4294937189);
    C.Color_4294930499 = new P.Color(4294930499);
    C.Color_4294924066 = new P.Color(4294924066);
    C.Color_4294201630 = new P.Color(4294201630);
    C.Color_4293282329 = new P.Color(4293282329);
    C.Color_4292363029 = new P.Color(4292363029);
    C.Color_4290721292 = new P.Color(4290721292);
    C.Map_JNUn6 = new H.GeneralConstantMap([50, C.Color_4294699495, 100, C.Color_4294954172, 200, C.Color_4294945681, 300, C.Color_4294937189, 400, C.Color_4294930499, 500, C.Color_4294924066, 600, C.Color_4294201630, 700, C.Color_4293282329, 800, C.Color_4292363029, 900, C.Color_4290721292], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNUn6_4294924066 = new E.MaterialColor(C.Map_JNUn6, 4294924066);
    C.Color_4294964192 = new P.Color(4294964192);
    C.Color_4294959282 = new P.Color(4294959282);
    C.Color_4294954112 = new P.Color(4294954112);
    C.Color_4294948685 = new P.Color(4294948685);
    C.Color_4294944550 = new P.Color(4294944550);
    C.Color_4294940672 = new P.Color(4294940672);
    C.Color_4294675456 = new P.Color(4294675456);
    C.Color_4294278144 = new P.Color(4294278144);
    C.Color_4293880832 = new P.Color(4293880832);
    C.Color_4293284096 = new P.Color(4293284096);
    C.Map_JNZaB = new H.GeneralConstantMap([50, C.Color_4294964192, 100, C.Color_4294959282, 200, C.Color_4294954112, 300, C.Color_4294948685, 400, C.Color_4294944550, 500, C.Color_4294940672, 600, C.Color_4294675456, 700, C.Color_4294278144, 800, C.Color_4293880832, 900, C.Color_4293284096], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNZaB_4294940672 = new E.MaterialColor(C.Map_JNZaB, 4294940672);
    C.MaterialColor_Map_JNc9P_4294198070 = new E.MaterialColor(C.Map_JNc9P, 4294198070);
    C.Color_4294965473 = new P.Color(4294965473);
    C.Color_4294962355 = new P.Color(4294962355);
    C.Color_4294959234 = new P.Color(4294959234);
    C.Color_4294956367 = new P.Color(4294956367);
    C.Color_4294953512 = new P.Color(4294953512);
    C.Color_4294951175 = new P.Color(4294951175);
    C.Color_4294947584 = new P.Color(4294947584);
    C.Color_4294942720 = new P.Color(4294942720);
    C.Color_4294938368 = new P.Color(4294938368);
    C.Color_4294930176 = new P.Color(4294930176);
    C.Map_JNsy5 = new H.GeneralConstantMap([50, C.Color_4294965473, 100, C.Color_4294962355, 200, C.Color_4294959234, 300, C.Color_4294956367, 400, C.Color_4294953512, 500, C.Color_4294951175, 600, C.Color_4294947584, 700, C.Color_4294942720, 800, C.Color_4294938368, 900, C.Color_4294930176], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNsy5_4294951175 = new E.MaterialColor(C.Map_JNsy5, 4294951175);
    C.MaterialColor_Map_JNwaj_4280391411 = new E.MaterialColor(C.Map_JNwaj, 4280391411);
    C.Color_4293718001 = new P.Color(4293718001);
    C.Color_4291811548 = new P.Color(4291811548);
    C.Color_4289773253 = new P.Color(4289773253);
    C.Color_4287669422 = new P.Color(4287669422);
    C.Color_4286091420 = new P.Color(4286091420);
    C.Color_4284513675 = new P.Color(4284513675);
    C.Color_4283723386 = new P.Color(4283723386);
    C.Color_4282735204 = new P.Color(4282735204);
    C.Color_4281812815 = new P.Color(4281812815);
    C.Color_4280693304 = new P.Color(4280693304);
    C.Map_JNy8A = new H.GeneralConstantMap([50, C.Color_4293718001, 100, C.Color_4291811548, 200, C.Color_4289773253, 300, C.Color_4287669422, 400, C.Color_4286091420, 500, C.Color_4284513675, 600, C.Color_4283723386, 700, C.Color_4282735204, 800, C.Color_4281812815, 900, C.Color_4280693304], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNy8A_4284513675 = new E.MaterialColor(C.Map_JNy8A, 4284513675);
    C.MaterialState_0 = new V.MaterialState("MaterialState.hovered");
    C.MaterialState_1 = new V.MaterialState("MaterialState.focused");
    C.MaterialState_2 = new V.MaterialState("MaterialState.pressed");
    C.MaterialState_5 = new V.MaterialState("MaterialState.disabled");
    C.MaterialTapTargetSize_0 = new X.MaterialTapTargetSize("MaterialTapTargetSize.padded");
    C.MaterialTapTargetSize_1 = new X.MaterialTapTargetSize("MaterialTapTargetSize.shrinkWrap");
    C.MaterialType_0 = new M.MaterialType("MaterialType.canvas");
    C.MaterialType_1 = new M.MaterialType("MaterialType.card");
    C.MaterialType_2 = new M.MaterialType("MaterialType.circle");
    C.MaterialType_3 = new M.MaterialType("MaterialType.button");
    C.MaterialType_4 = new M.MaterialType("MaterialType.transparency");
    C.MethodCall_popRoute_null = new H.MethodCall("popRoute", null);
    C.MethodChannel_gc6 = new A.MethodChannel("flutter/navigation");
    C.NavigationRailThemeData_U06 = new E.NavigationRailThemeData(null, null, null, null, null, null, null, null);
    C.OffsetPair_G6F = new S.OffsetPair(C.Offset_0_0, C.Offset_0_0);
    C.Offset_0_1 = new P.Offset(0, 1);
    C.Offset_0_m1 = new P.Offset(0, -1);
    C.Offset_1_0 = new P.Offset(1, 0);
    C.Offset_20_20 = new P.Offset(20, 20);
    C.Offset_40_40 = new P.Offset(40, 40);
    C.Offset_50_50 = new P.Offset(50, 50);
    C.Offset_9_9 = new P.Offset(9, 9);
    C.Offset_Gl7 = new P.Offset(14.4, 9);
    C.Offset_Oho = new P.Offset(-0.3333333333333333, 0);
    C.Offset_W7v = new P.Offset(2.6999999999999997, 8.1);
    C.Offset_aNU = new P.Offset(3.6, 9);
    C.Offset_chs = new P.Offset(0, 0.25);
    C.Offset_gPO = new P.Offset(7.2, 12.6);
    C.Offset_m1_0 = new P.Offset(-1, 0);
    C.Offset_oIk = new P.Offset(15.299999999999999, 4.5);
    C.OperatingSystem_0 = new H.OperatingSystem("OperatingSystem.iOs");
    C.OperatingSystem_1 = new H.OperatingSystem("OperatingSystem.android");
    C.OperatingSystem_2 = new H.OperatingSystem("OperatingSystem.linux");
    C.OperatingSystem_3 = new H.OperatingSystem("OperatingSystem.windows");
    C.OperatingSystem_4 = new H.OperatingSystem("OperatingSystem.macOs");
    C.OperatingSystem_5 = new H.OperatingSystem("OperatingSystem.unknown");
    C.OptionalMethodChannel_cdS = new A.OptionalMethodChannel("flutter/platform");
    C.Overflow_1 = new K.Overflow();
    C.PageScrollPhysics_null = new D.PageScrollPhysics(null);
    C.PaintingStyle_0 = new P.PaintingStyle("PaintingStyle.fill");
    C.PaintingStyle_1 = new P.PaintingStyle("PaintingStyle.stroke");
    C.ParagraphConstraints_50 = new P.ParagraphConstraints(50);
    C.ParagraphConstraints_60 = new P.ParagraphConstraints(60);
    C.ParagraphConstraints_C5f = new P.ParagraphConstraints(1 / 0);
    C.PathFillType_0 = new P.PathFillType("PathFillType.nonZero");
    C.PersistedSurfaceState_0 = new H.PersistedSurfaceState("PersistedSurfaceState.created");
    C.PersistedSurfaceState_1 = new H.PersistedSurfaceState("PersistedSurfaceState.active");
    C.PersistedSurfaceState_2 = new H.PersistedSurfaceState("PersistedSurfaceState.pendingRetention");
    C.PersistedSurfaceState_3 = new H.PersistedSurfaceState("PersistedSurfaceState.pendingUpdate");
    C.PersistedSurfaceState_4 = new H.PersistedSurfaceState("PersistedSurfaceState.released");
    C.PlaceholderAlignment_0 = new P.PlaceholderAlignment("PlaceholderAlignment.baseline");
    C.PointerChange_0 = new P.PointerChange("PointerChange.cancel");
    C.PointerChange_1 = new P.PointerChange("PointerChange.add");
    C.PointerChange_2 = new P.PointerChange("PointerChange.remove");
    C.PointerChange_3 = new P.PointerChange("PointerChange.hover");
    C.PointerChange_4 = new P.PointerChange("PointerChange.down");
    C.PointerChange_5 = new P.PointerChange("PointerChange.move");
    C.PointerChange_6 = new P.PointerChange("PointerChange.up");
    C.PointerDeviceKind_0 = new P.PointerDeviceKind("PointerDeviceKind.touch");
    C.PointerDeviceKind_1 = new P.PointerDeviceKind("PointerDeviceKind.mouse");
    C.PointerDeviceKind_2 = new P.PointerDeviceKind("PointerDeviceKind.stylus");
    C.PointerDeviceKind_3 = new P.PointerDeviceKind("PointerDeviceKind.invertedStylus");
    C.PointerDeviceKind_4 = new P.PointerDeviceKind("PointerDeviceKind.unknown");
    C.PointerSignalKind_0 = new P.PointerSignalKind("PointerSignalKind.none");
    C.PointerSignalKind_1 = new P.PointerSignalKind("PointerSignalKind.scroll");
    C.PointerSignalKind_2 = new P.PointerSignalKind("PointerSignalKind.unknown");
    C.PopupMenuThemeData_null_null_null_null = new R.PopupMenuThemeData(null, null, null, null);
    C.Priority_100000 = new V.Priority(100000);
    C.RRect_GZS = new P.RRect(20, 20, 60, 60, 10, 10, 10, 10, 10, 10, 10, 10, true);
    C.Radius_1_1 = new P.Radius(1, 1);
    C.Radius_2_2 = new P.Radius(2, 2);
    C.Radius_ydE = new P.Radius(1.5, 1.5);
    C.Rect_0_0_0_0 = new P.Rect(0, 0, 0, 0);
    C.Rect_10_10_20_20 = new P.Rect(10, 10, 20, 20);
    C.Rect_10_10_320_240 = new P.Rect(10, 10, 320, 240);
    C.Rect_aha = new P.Rect(-1000000000, -1000000000, 1000000000, 1000000000);
    C.RenderComparison_0 = new G.RenderComparison(0, "RenderComparison.identical");
    C.RenderComparison_1 = new G.RenderComparison(1, "RenderComparison.metadata");
    C.RenderComparison_2 = new G.RenderComparison(2, "RenderComparison.paint");
    C.RenderComparison_3 = new G.RenderComparison(3, "RenderComparison.layout");
    C.Role_0 = new H.Role("Role.incrementable");
    C.Role_1 = new H.Role("Role.scrollable");
    C.Role_2 = new H.Role("Role.labelAndValue");
    C.Role_3 = new H.Role("Role.tappable");
    C.Role_4 = new H.Role("Role.textField");
    C.Role_5 = new H.Role("Role.checkable");
    C.Role_6 = new H.Role("Role.image");
    C.Role_7 = new H.Role("Role.liveRegion");
    C.RoundedRectangleBorder_yx31 = new X.RoundedRectangleBorder(C.BorderSide_m7u, C.BorderRadius_tLn);
    C.BorderRadius_tLn1 = new K.BorderRadius(C.Radius_2_2, C.Radius_2_2, C.Radius_2_2, C.Radius_2_2);
    C.RoundedRectangleBorder_yx3 = new X.RoundedRectangleBorder(C.BorderSide_m7u, C.BorderRadius_tLn1);
    C.RoundedRectangleBorder_yx30 = new X.RoundedRectangleBorder(C.BorderSide_m7u, C.BorderRadius_tLn0);
    C.RoutePopDisposition_0 = new K.RoutePopDisposition("RoutePopDisposition.pop");
    C.RoutePopDisposition_1 = new K.RoutePopDisposition("RoutePopDisposition.doNotPop");
    C.RoutePopDisposition_2 = new K.RoutePopDisposition("RoutePopDisposition.bubble");
    C.RouteSettings_null_null = new K.RouteSettings(null, null);
    C.ScaffoldGeometry_null_null = new M.ScaffoldGeometry(null, null);
    C.SchedulerPhase_0 = new N.SchedulerPhase(0, "SchedulerPhase.idle");
    C.SchedulerPhase_1 = new N.SchedulerPhase(1, "SchedulerPhase.transientCallbacks");
    C.SchedulerPhase_2 = new N.SchedulerPhase(2, "SchedulerPhase.midFrameMicrotasks");
    C.SchedulerPhase_3 = new N.SchedulerPhase(3, "SchedulerPhase.persistentCallbacks");
    C.SchedulerPhase_4 = new N.SchedulerPhase(4, "SchedulerPhase.postFrameCallbacks");
    C.ScriptCategory_0 = new U.ScriptCategory("ScriptCategory.englishLike");
    C.ScriptCategory_1 = new U.ScriptCategory("ScriptCategory.dense");
    C.ScriptCategory_2 = new U.ScriptCategory("ScriptCategory.tall");
    C.ScrollDirection_0 = new N.ScrollDirection("ScrollDirection.idle");
    C.ScrollDirection_1 = new N.ScrollDirection("ScrollDirection.forward");
    C.ScrollDirection_2 = new N.ScrollDirection("ScrollDirection.reverse");
    C.ScrollIncrementType_0 = new F.ScrollIncrementType("ScrollIncrementType.line");
    C.ScrollIncrementType_1 = new F.ScrollIncrementType("ScrollIncrementType.page");
    C.ScrollIntent_R43 = new F.ScrollIntent(C.AxisDirection_2, C.ScrollIncrementType_0);
    C.ScrollIntent_R430 = new F.ScrollIntent(C.AxisDirection_2, C.ScrollIncrementType_1);
    C.ScrollIntent_Uzc = new F.ScrollIntent(C.AxisDirection_0, C.ScrollIncrementType_0);
    C.ScrollIntent_Uzc0 = new F.ScrollIntent(C.AxisDirection_0, C.ScrollIncrementType_1);
    C.ScrollIntent_o8I = new F.ScrollIntent(C.AxisDirection_1, C.ScrollIncrementType_0);
    C.ScrollIntent_vpn = new F.ScrollIntent(C.AxisDirection_3, C.ScrollIncrementType_0);
    C.ScrollPositionAlignmentPolicy_0 = new A.ScrollPositionAlignmentPolicy("ScrollPositionAlignmentPolicy.explicit");
    C.ScrollPositionAlignmentPolicy_1 = new A.ScrollPositionAlignmentPolicy("ScrollPositionAlignmentPolicy.keepVisibleAtEnd");
    C.ScrollPositionAlignmentPolicy_2 = new A.ScrollPositionAlignmentPolicy("ScrollPositionAlignmentPolicy.keepVisibleAtStart");
    C.ScrollViewKeyboardDismissBehavior_0 = new B.ScrollViewKeyboardDismissBehavior("ScrollViewKeyboardDismissBehavior.manual");
    C.ScrollViewKeyboardDismissBehavior_1 = new B.ScrollViewKeyboardDismissBehavior("ScrollViewKeyboardDismissBehavior.onDrag");
    C.SemanticsAction_1 = new P.SemanticsAction(1);
    C.SemanticsAction_1024 = new P.SemanticsAction(1024);
    C.SemanticsAction_1048576 = new P.SemanticsAction(1048576);
    C.SemanticsAction_128 = new P.SemanticsAction(128);
    C.SemanticsAction_16 = new P.SemanticsAction(16);
    C.SemanticsAction_16384 = new P.SemanticsAction(16384);
    C.SemanticsAction_2 = new P.SemanticsAction(2);
    C.SemanticsAction_2048 = new P.SemanticsAction(2048);
    C.SemanticsAction_256 = new P.SemanticsAction(256);
    C.SemanticsAction_262144 = new P.SemanticsAction(262144);
    C.SemanticsAction_32 = new P.SemanticsAction(32);
    C.SemanticsAction_32768 = new P.SemanticsAction(32768);
    C.SemanticsAction_4 = new P.SemanticsAction(4);
    C.SemanticsAction_4096 = new P.SemanticsAction(4096);
    C.SemanticsAction_512 = new P.SemanticsAction(512);
    C.SemanticsAction_524288 = new P.SemanticsAction(524288);
    C.SemanticsAction_64 = new P.SemanticsAction(64);
    C.SemanticsAction_65536 = new P.SemanticsAction(65536);
    C.SemanticsAction_8 = new P.SemanticsAction(8);
    C.SemanticsAction_8192 = new P.SemanticsAction(8192);
    C.SemanticsFlag_1 = new P.SemanticsFlag(1);
    C.SemanticsFlag_1024 = new P.SemanticsFlag(1024);
    C.SemanticsFlag_1048576 = new P.SemanticsFlag(1048576);
    C.SemanticsFlag_128 = new P.SemanticsFlag(128);
    C.SemanticsFlag_131072 = new P.SemanticsFlag(131072);
    C.SemanticsFlag_16 = new P.SemanticsFlag(16);
    C.SemanticsFlag_16384 = new P.SemanticsFlag(16384);
    C.SemanticsFlag_2 = new P.SemanticsFlag(2);
    C.SemanticsFlag_2048 = new P.SemanticsFlag(2048);
    C.SemanticsFlag_2097152 = new P.SemanticsFlag(2097152);
    C.SemanticsFlag_256 = new P.SemanticsFlag(256);
    C.SemanticsFlag_262144 = new P.SemanticsFlag(262144);
    C.SemanticsFlag_32 = new P.SemanticsFlag(32);
    C.SemanticsFlag_32768 = new P.SemanticsFlag(32768);
    C.SemanticsFlag_4 = new P.SemanticsFlag(4);
    C.SemanticsFlag_4096 = new P.SemanticsFlag(4096);
    C.SemanticsFlag_4194304 = new P.SemanticsFlag(4194304);
    C.SemanticsFlag_512 = new P.SemanticsFlag(512);
    C.SemanticsFlag_524288 = new P.SemanticsFlag(524288);
    C.SemanticsFlag_64 = new P.SemanticsFlag(64);
    C.SemanticsFlag_65536 = new P.SemanticsFlag(65536);
    C.SemanticsFlag_8 = new P.SemanticsFlag(8);
    C.SemanticsFlag_8192 = new P.SemanticsFlag(8192);
    C.SemanticsTag_FIw = new A.SemanticsTag("RenderViewport.twoPane");
    C.SemanticsTag_bQQ = new A.SemanticsTag("RenderViewport.excludeFromScrolling");
    C.List_click_touchstart_touchend = H.setRuntimeTypeInfo(makeConstList(["click", "touchstart", "touchend"]), type$.JSArray_String);
    C.Map_2ju5T = new H.ConstantStringMap(3, {click: null, touchstart: null, touchend: null}, C.List_click_touchstart_touchend, type$.ConstantStringMap_String_Null);
    C.Set_2jNg2 = new P._UnmodifiableSet(C.Map_2ju5T, type$._UnmodifiableSet_String);
    C.List_Yab = H.setRuntimeTypeInfo(makeConstList(["click", "keyup", "keydown", "mouseup", "mousedown", "pointerdown", "pointerup"]), type$.JSArray_String);
    C.Map_Yae5Z = new H.ConstantStringMap(7, {click: null, keyup: null, keydown: null, mouseup: null, mousedown: null, pointerdown: null, pointerup: null}, C.List_Yab, type$.ConstantStringMap_String_Null);
    C.Set_Yabt3 = new P._UnmodifiableSet(C.Map_Yae5Z, type$._UnmodifiableSet_String);
    C.Map_m5b7J = new H.GeneralConstantMap([C.OperatingSystem_4, null, C.OperatingSystem_2, null, C.OperatingSystem_3, null], H.findType("GeneralConstantMap<OperatingSystem,Null>"));
    C.Set_m536 = new P._UnmodifiableSet(C.Map_m5b7J, H.findType("_UnmodifiableSet<OperatingSystem>"));
    C.List_wIv = H.setRuntimeTypeInfo(makeConstList(["serif", "sans-serif", "monospace", "cursive", "fantasy", "system-ui", "math", "emoji", "fangsong"]), type$.JSArray_String);
    C.Map_wImu2 = new H.ConstantStringMap(9, {serif: null, "sans-serif": null, monospace: null, cursive: null, fantasy: null, "system-ui": null, math: null, emoji: null, fangsong: null}, C.List_wIv, type$.ConstantStringMap_String_Null);
    C.Set_wIvsi = new P._UnmodifiableSet(C.Map_wImu2, type$._UnmodifiableSet_String);
    C.Size_0_0 = new P.Size(0, 0);
    C.Size_100000_100000 = new P.Size(100000, 100000);
    C.Size_18_18 = new P.Size(18, 18);
    C.Size_40_40 = new P.Size(40, 40);
    C.Size_48_48 = new P.Size(48, 48);
    C.SliderThemeData_Q5Z = new Q.SliderThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.SliverGeometry_yvr = new G.SliverGeometry(0, 0, 0, 0, 0, false, false, null, 0);
    C.SnackBarClosedReason_3 = new N.SnackBarClosedReason("SnackBarClosedReason.hide");
    C.SnackBarClosedReason_5 = new N.SnackBarClosedReason("SnackBarClosedReason.timeout");
    C.SnackBarThemeData_gc6 = new K.SnackBarThemeData(null, null, null, null, null, null, null);
    C.SpringType_0 = new M.SpringType("SpringType.criticallyDamped");
    C.SpringType_1 = new M.SpringType("SpringType.underDamped");
    C.SpringType_2 = new M.SpringType("SpringType.overDamped");
    C.StackFit_0 = new K.StackFit("StackFit.loose");
    C.StackFit_1 = new K.StackFit("StackFit.expand");
    C.StackFit_2 = new K.StackFit("StackFit.passthrough");
    C.StackFrame_8sg = new R.StackFrame("...", -1, "", "", "", -1, -1, "", "...");
    C.StackFrame_SOW = new R.StackFrame("<asynchronous suspension>", -1, "", "", "", -1, -1, "", "asynchronous suspension");
    C.StadiumBorder_wjC = new S.StadiumBorder(C.BorderSide_m7u);
    C.StrokeCap_0 = new P.StrokeCap("StrokeCap.butt");
    C.StrokeCap_1 = new P.StrokeCap("StrokeCap.round");
    C.StrokeCap_2 = new P.StrokeCap("StrokeCap.square");
    C.StrokeJoin_0 = new P.StrokeJoin("StrokeJoin.miter");
    C.StrokeJoin_1 = new P.StrokeJoin("StrokeJoin.round");
    C.StrokeJoin_2 = new P.StrokeJoin("StrokeJoin.bevel");
    C.Symbol_call = new H.Symbol("call");
    C.SystemSoundType_0 = new V.SystemSoundType();
    C.SystemUiOverlayStyle_4EL = new X.SystemUiOverlayStyle(C.Color_4278190080, null, C.Brightness_1, null, C.Brightness_0, C.Brightness_1);
    C.SystemUiOverlayStyle_yjH = new X.SystemUiOverlayStyle(C.Color_4278190080, null, C.Brightness_1, null, C.Brightness_1, C.Brightness_0);
    C.TabBarTheme_Srx = new U.TabBarTheme(null, null, null, null, null, null, null);
    C.TapSemanticEvent_tap = new E.TapSemanticEvent("tap");
    C.TextAffinity_0 = new P.TextAffinity("TextAffinity.upstream");
    C.TextAffinity_1 = new P.TextAffinity("TextAffinity.downstream");
    C.TextBaseline_0 = new P.TextBaseline("TextBaseline.alphabetic");
    C.TextBaseline_1 = new P.TextBaseline("TextBaseline.ideographic");
    C.TextDecorationStyle_0 = new P.TextDecorationStyle("TextDecorationStyle.solid");
    C.TextDecorationStyle_1 = new P.TextDecorationStyle("TextDecorationStyle.double");
    C.TextDecorationStyle_2 = new P.TextDecorationStyle("TextDecorationStyle.dotted");
    C.TextDecorationStyle_3 = new P.TextDecorationStyle("TextDecorationStyle.dashed");
    C.TextDecorationStyle_4 = new P.TextDecorationStyle("TextDecorationStyle.wavy");
    C.TextDecoration_1 = new P.TextDecoration(1);
    C.TextDecoration_2 = new P.TextDecoration(2);
    C.TextDecoration_4 = new P.TextDecoration(4);
    C.TextOverflow_1 = new Q.TextOverflow("TextOverflow.fade");
    C.TextOverflow_2 = new Q.TextOverflow("TextOverflow.ellipsis");
    C.TextOverflow_3 = new Q.TextOverflow("TextOverflow.visible");
    C.TextPosition_0_TextAffinity_1 = new P.TextPosition(0, C.TextAffinity_1);
    C.TextStyle_GVa = new A.TextStyle(true, null, null, null, null, null, null, C.FontWeight_6, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.Color_3506372608 = new P.Color(3506372608);
    C.TextStyle_aoz = new A.TextStyle(true, C.Color_3506372608, null, "monospace", null, null, 48, C.FontWeight_8, null, null, null, null, null, null, null, null, C.TextDecoration_1, C.Color_4294967040, C.TextDecorationStyle_1, null, "fallback style; consider putting your text in a Material", null, null);
    C.List_Exl = H.setRuntimeTypeInfo(makeConstList(["Ubuntu", "Cantarell", "DejaVu Sans", "Liberation Sans", "Arial"]), type$.JSArray_String);
    C.TextDecoration_0 = new P.TextDecoration(0);
    C.TextStyle_AGO = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline1", null, null);
    C.TextStyle_AGO0 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline2", null, null);
    C.TextStyle_AGO1 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline3", null, null);
    C.TextStyle_AGO2 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline4", null, null);
    C.TextStyle_AGO3 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline5", null, null);
    C.TextStyle_AGO4 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline6", null, null);
    C.TextStyle_NQM = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki subtitle1", null, null);
    C.TextStyle_NQM0 = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki subtitle2", null, null);
    C.TextStyle_OpF = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki bodyText1", null, null);
    C.TextStyle_OpF0 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki bodyText2", null, null);
    C.TextStyle_4CA = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki caption", null, null);
    C.TextStyle_6nc = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki button", null, null);
    C.TextStyle_WLv = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki overline", null, null);
    C.TextTheme_CZR = new R.TextTheme(C.TextStyle_AGO, C.TextStyle_AGO0, C.TextStyle_AGO1, C.TextStyle_AGO2, C.TextStyle_AGO3, C.TextStyle_AGO4, C.TextStyle_NQM, C.TextStyle_NQM0, C.TextStyle_OpF, C.TextStyle_OpF0, C.TextStyle_4CA, C.TextStyle_6nc, C.TextStyle_WLv);
    C.TextStyle_3mL = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline1", null, null);
    C.TextStyle_3mL0 = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline2", null, null);
    C.TextStyle_3mL1 = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline3", null, null);
    C.TextStyle_3mL2 = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline4", null, null);
    C.TextStyle_3mL3 = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline5", null, null);
    C.TextStyle_3mL4 = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline6", null, null);
    C.TextStyle_61T = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond subtitle1", null, null);
    C.TextStyle_61T0 = new A.TextStyle(true, C.Color_4278190080, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond subtitle2", null, null);
    C.TextStyle_Avr = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond bodyText1", null, null);
    C.TextStyle_Avr0 = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond bodyText2", null, null);
    C.TextStyle_izR = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond caption", null, null);
    C.TextStyle_O8Y = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond button", null, null);
    C.TextStyle_apW = new A.TextStyle(true, C.Color_4278190080, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond overline", null, null);
    C.TextTheme_EOZ = new R.TextTheme(C.TextStyle_3mL, C.TextStyle_3mL0, C.TextStyle_3mL1, C.TextStyle_3mL2, C.TextStyle_3mL3, C.TextStyle_3mL4, C.TextStyle_61T, C.TextStyle_61T0, C.TextStyle_Avr, C.TextStyle_Avr0, C.TextStyle_izR, C.TextStyle_O8Y, C.TextStyle_apW);
    C.TextStyle_sEp = new A.TextStyle(false, null, null, null, null, null, 112, C.FontWeight_0, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense display4 2014", null, null);
    C.TextStyle_sEp0 = new A.TextStyle(false, null, null, null, null, null, 56, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense display3 2014", null, null);
    C.TextStyle_sEp1 = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense display2 2014", null, null);
    C.TextStyle_sEp2 = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense display1 2014", null, null);
    C.TextStyle_WN1 = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense headline 2014", null, null);
    C.TextStyle_UWN = new A.TextStyle(false, null, null, null, null, null, 21, C.FontWeight_4, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense title 2014", null, null);
    C.TextStyle_AC0 = new A.TextStyle(false, null, null, null, null, null, 17, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense subhead 2014", null, null);
    C.TextStyle_wsa = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense subtitle 2014", null, null);
    C.TextStyle_NIe = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense body2 2014", null, null);
    C.TextStyle_NIe0 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense body1 2014", null, null);
    C.TextStyle_B8J = new A.TextStyle(false, null, null, null, null, null, 13, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense caption 2014", null, null);
    C.TextStyle_EAA = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense button 2014", null, null);
    C.TextStyle_Tvc = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, "dense overline 2014", null, null);
    C.TextTheme_TnS = new R.TextTheme(C.TextStyle_sEp, C.TextStyle_sEp0, C.TextStyle_sEp1, C.TextStyle_sEp2, C.TextStyle_WN1, C.TextStyle_UWN, C.TextStyle_AC0, C.TextStyle_wsa, C.TextStyle_NIe, C.TextStyle_NIe0, C.TextStyle_B8J, C.TextStyle_EAA, C.TextStyle_Tvc);
    C.TextStyle_d4x = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline1", null, null);
    C.TextStyle_d4x0 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline2", null, null);
    C.TextStyle_d4x1 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline3", null, null);
    C.TextStyle_d4x2 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline4", null, null);
    C.TextStyle_tKy = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline5", null, null);
    C.TextStyle_tKy0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline6", null, null);
    C.TextStyle_sUe = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView subtitle1", null, null);
    C.TextStyle_sUe0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView subtitle2", null, null);
    C.TextStyle_iPa = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView bodyText1", null, null);
    C.TextStyle_iPa0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView bodyText2", null, null);
    C.TextStyle_wM5 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView caption", null, null);
    C.TextStyle_4CA0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView button", null, null);
    C.TextStyle_7FR = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView overline", null, null);
    C.TextTheme_Z0t = new R.TextTheme(C.TextStyle_d4x, C.TextStyle_d4x0, C.TextStyle_d4x1, C.TextStyle_d4x2, C.TextStyle_tKy, C.TextStyle_tKy0, C.TextStyle_sUe, C.TextStyle_sUe0, C.TextStyle_iPa, C.TextStyle_iPa0, C.TextStyle_wM5, C.TextStyle_4CA0, C.TextStyle_7FR);
    C.TextStyle_9YO = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline1", null, null);
    C.TextStyle_9YO0 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline2", null, null);
    C.TextStyle_9YO1 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline3", null, null);
    C.TextStyle_9YO2 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline4", null, null);
    C.TextStyle_9YO3 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline5", null, null);
    C.TextStyle_9YO4 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline6", null, null);
    C.TextStyle_YUJ = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView subtitle1", null, null);
    C.TextStyle_YUJ0 = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView subtitle2", null, null);
    C.TextStyle_9i1 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView bodyText1", null, null);
    C.TextStyle_9i10 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView bodyText2", null, null);
    C.TextStyle_G7N = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView caption", null, null);
    C.TextStyle_EKj = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView button", null, null);
    C.TextStyle_fvg = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView overline", null, null);
    C.TextTheme_cAf = new R.TextTheme(C.TextStyle_9YO, C.TextStyle_9YO0, C.TextStyle_9YO1, C.TextStyle_9YO2, C.TextStyle_9YO3, C.TextStyle_9YO4, C.TextStyle_YUJ, C.TextStyle_YUJ0, C.TextStyle_9i1, C.TextStyle_9i10, C.TextStyle_G7N, C.TextStyle_EKj, C.TextStyle_fvg);
    C.TextStyle_KAZ = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline1", null, null);
    C.TextStyle_KAZ0 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline2", null, null);
    C.TextStyle_KAZ1 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline3", null, null);
    C.TextStyle_KAZ2 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline4", null, null);
    C.TextStyle_t7N = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline5", null, null);
    C.TextStyle_t7N0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline6", null, null);
    C.TextStyle_VQp = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki subtitle1", null, null);
    C.TextStyle_VQp0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki subtitle2", null, null);
    C.TextStyle_8NP = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki bodyText1", null, null);
    C.TextStyle_8NP0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki bodyText2", null, null);
    C.TextStyle_o6N = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki caption", null, null);
    C.TextStyle_UwG = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki button", null, null);
    C.TextStyle_eVG = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki overline", null, null);
    C.TextTheme_efs = new R.TextTheme(C.TextStyle_KAZ, C.TextStyle_KAZ0, C.TextStyle_KAZ1, C.TextStyle_KAZ2, C.TextStyle_t7N, C.TextStyle_t7N0, C.TextStyle_VQp, C.TextStyle_VQp0, C.TextStyle_8NP, C.TextStyle_8NP0, C.TextStyle_o6N, C.TextStyle_UwG, C.TextStyle_eVG);
    C.TextStyle_yzp = new A.TextStyle(false, null, null, null, null, null, 112, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall display4 2014", null, null);
    C.TextStyle_yzp0 = new A.TextStyle(false, null, null, null, null, null, 56, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall display3 2014", null, null);
    C.TextStyle_yzp1 = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall display2 2014", null, null);
    C.TextStyle_yzp2 = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall display1 2014", null, null);
    C.TextStyle_C9d = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall headline 2014", null, null);
    C.TextStyle_g0k = new A.TextStyle(false, null, null, null, null, null, 21, C.FontWeight_6, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall title 2014", null, null);
    C.TextStyle_KDx = new A.TextStyle(false, null, null, null, null, null, 17, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall subhead 2014", null, null);
    C.TextStyle_qbf = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall subtitle 2014", null, null);
    C.TextStyle_sEs = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_6, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall body2 2014", null, null);
    C.TextStyle_sEs0 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall body1 2014", null, null);
    C.TextStyle_QTG = new A.TextStyle(false, null, null, null, null, null, 13, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall caption 2014", null, null);
    C.TextStyle_gc6 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_6, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall button 2014", null, null);
    C.TextStyle_izR0 = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "tall overline 2014", null, null);
    C.TextTheme_i7B = new R.TextTheme(C.TextStyle_yzp, C.TextStyle_yzp0, C.TextStyle_yzp1, C.TextStyle_yzp2, C.TextStyle_C9d, C.TextStyle_g0k, C.TextStyle_KDx, C.TextStyle_qbf, C.TextStyle_sEs, C.TextStyle_sEs0, C.TextStyle_QTG, C.TextStyle_gc6, C.TextStyle_izR0);
    C.TextStyle_ugX = new A.TextStyle(true, C.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline1", null, null);
    C.TextStyle_E8w = new A.TextStyle(true, C.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline2", null, null);
    C.TextStyle_DUw = new A.TextStyle(true, C.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline3", null, null);
    C.TextStyle_iPJ = new A.TextStyle(true, C.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline4", null, null);
    C.TextStyle_c0h = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline5", null, null);
    C.TextStyle_8FR = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline6", null, null);
    C.TextStyle_qh2 = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino subtitle1", null, null);
    C.TextStyle_zzp = new A.TextStyle(true, C.Color_4278190080, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino subtitle2", null, null);
    C.TextStyle_kmC = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino bodyText1", null, null);
    C.TextStyle_TbC = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino bodyText2", null, null);
    C.TextStyle_oAq = new A.TextStyle(true, C.Color_2315255808, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino caption", null, null);
    C.TextStyle_rhZ = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino button", null, null);
    C.TextStyle_vFp = new A.TextStyle(true, C.Color_4278190080, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino overline", null, null);
    C.TextTheme_k4X = new R.TextTheme(C.TextStyle_ugX, C.TextStyle_E8w, C.TextStyle_DUw, C.TextStyle_iPJ, C.TextStyle_c0h, C.TextStyle_8FR, C.TextStyle_qh2, C.TextStyle_zzp, C.TextStyle_kmC, C.TextStyle_TbC, C.TextStyle_oAq, C.TextStyle_rhZ, C.TextStyle_vFp);
    C.TextStyle_oBP = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline1", null, null);
    C.TextStyle_oBP0 = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline2", null, null);
    C.TextStyle_oBP1 = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline3", null, null);
    C.TextStyle_oBP2 = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline4", null, null);
    C.TextStyle_lCd = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline5", null, null);
    C.TextStyle_lCd0 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline6", null, null);
    C.TextStyle_9i6 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond subtitle1", null, null);
    C.TextStyle_9i60 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond subtitle2", null, null);
    C.TextStyle_cEh = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond bodyText1", null, null);
    C.TextStyle_cEh0 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond bodyText2", null, null);
    C.TextStyle_FKj = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond caption", null, null);
    C.TextStyle_wsa0 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond button", null, null);
    C.TextStyle_QSU = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond overline", null, null);
    C.TextTheme_mGH = new R.TextTheme(C.TextStyle_oBP, C.TextStyle_oBP0, C.TextStyle_oBP1, C.TextStyle_oBP2, C.TextStyle_lCd, C.TextStyle_lCd0, C.TextStyle_9i6, C.TextStyle_9i60, C.TextStyle_cEh, C.TextStyle_cEh0, C.TextStyle_FKj, C.TextStyle_wsa0, C.TextStyle_QSU);
    C.TextStyle_IGd = new A.TextStyle(false, null, null, null, null, null, 112, C.FontWeight_0, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike display4 2014", null, null);
    C.TextStyle_IGd0 = new A.TextStyle(false, null, null, null, null, null, 56, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike display3 2014", null, null);
    C.TextStyle_IGd1 = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike display2 2014", null, null);
    C.TextStyle_IGd2 = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike display1 2014", null, null);
    C.TextStyle_w3m = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike headline 2014", null, null);
    C.TextStyle_R0Z = new A.TextStyle(false, null, null, null, null, null, 20, C.FontWeight_4, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike title 2014", null, null);
    C.TextStyle_Rss = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike subhead 2014", null, null);
    C.TextStyle_kOq = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 0.1, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike subtitle 2014", null, null);
    C.TextStyle_ENd = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike body2 2014", null, null);
    C.TextStyle_ENd0 = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike body1 2014", null, null);
    C.TextStyle_GtK = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike caption 2014", null, null);
    C.TextStyle_FIw = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike button 2014", null, null);
    C.TextStyle_kGE = new A.TextStyle(false, null, null, null, null, null, 10, C.FontWeight_3, null, 1.5, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, "englishLike overline 2014", null, null);
    C.TextTheme_s8k = new R.TextTheme(C.TextStyle_IGd, C.TextStyle_IGd0, C.TextStyle_IGd1, C.TextStyle_IGd2, C.TextStyle_w3m, C.TextStyle_R0Z, C.TextStyle_Rss, C.TextStyle_kOq, C.TextStyle_ENd, C.TextStyle_ENd0, C.TextStyle_GtK, C.TextStyle_FIw, C.TextStyle_kGE);
    C.TextStyle_5V4 = new A.TextStyle(true, C.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline1", null, null);
    C.TextStyle_GAW = new A.TextStyle(true, C.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline2", null, null);
    C.TextStyle_zkc = new A.TextStyle(true, C.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline3", null, null);
    C.TextStyle_qtk = new A.TextStyle(true, C.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline4", null, null);
    C.TextStyle_AD4 = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline5", null, null);
    C.TextStyle_5gB = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline6", null, null);
    C.TextStyle_WLk = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino subtitle1", null, null);
    C.TextStyle_sxw = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino subtitle2", null, null);
    C.TextStyle_zPs = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino bodyText1", null, null);
    C.TextStyle_CfJ = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino bodyText2", null, null);
    C.TextStyle_zjx = new A.TextStyle(true, C.Color_3019898879, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino caption", null, null);
    C.TextStyle_c0h0 = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino button", null, null);
    C.TextStyle_KFB = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino overline", null, null);
    C.TextTheme_tEM = new R.TextTheme(C.TextStyle_5V4, C.TextStyle_GAW, C.TextStyle_zkc, C.TextStyle_qtk, C.TextStyle_AD4, C.TextStyle_5gB, C.TextStyle_WLk, C.TextStyle_sxw, C.TextStyle_zPs, C.TextStyle_CfJ, C.TextStyle_zjx, C.TextStyle_c0h0, C.TextStyle_KFB);
    C.TextWidthBasis_1 = new U.TextWidthBasis("TextWidthBasis.longestLine");
    C.Text_Lhf = new L.Text("Colors", null, null, null, null, null);
    C.TickerCanceled_null = new M.TickerCanceled(null);
    C.TileMode_0 = new P.TileMode(0, "TileMode.clamp");
    C.ToggleButtonsThemeData_UsI = new S.ToggleButtonsThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.Tolerance_Gdw = new N.Tolerance(0.001, 0.001);
    C.TooltipThemeData_kSE = new T.TooltipThemeData(null, null, null, null, null, null, null, null);
    C.TransformKind_0 = new H.TransformKind("TransformKind.identity");
    C.TransformKind_1 = new H.TransformKind("TransformKind.transform2d");
    C.TransformKind_2 = new H.TransformKind("TransformKind.complex");
    C.TraversalDirection_0 = new U.TraversalDirection("TraversalDirection.up");
    C.TraversalDirection_1 = new U.TraversalDirection("TraversalDirection.right");
    C.TraversalDirection_2 = new U.TraversalDirection("TraversalDirection.down");
    C.TraversalDirection_3 = new U.TraversalDirection("TraversalDirection.left");
    C.Type_ActivateIntent_OT9 = H.typeLiteral("ActivateIntent");
    C.Type_ByteBuffer_RkP = H.typeLiteral("ByteBuffer");
    C.Type_ByteData_zNC = H.typeLiteral("ByteData");
    C.Type_Color_MG2 = H.typeLiteral("Color");
    C.Type_DirectionalFocusIntent_evN = H.typeLiteral("DirectionalFocusIntent");
    C.Type_DoNothingIntent_IQR = H.typeLiteral("DoNothingIntent");
    C.Type_DoubleTapGestureRecognizer_oyU = H.typeLiteral("DoubleTapGestureRecognizer");
    C.Type_Float32List_LB7 = H.typeLiteral("Float32List");
    C.Type_Float64List_LB7 = H.typeLiteral("Float64List");
    C.Type_Int16List_uXf = H.typeLiteral("Int16List");
    C.Type_Int32List_O50 = H.typeLiteral("Int32List");
    C.Type_Int8List_ekJ = H.typeLiteral("Int8List");
    C.Type_JSObject_8k0 = H.typeLiteral("JSObject");
    C.Type_LabeledGlobalKey_6TW = H.typeLiteral("LabeledGlobalKey<State<StatefulWidget>>");
    C.Type_LongPressGestureRecognizer_46y = H.typeLiteral("LongPressGestureRecognizer");
    C.Type_MaterialLocalizations_flR = H.typeLiteral("MaterialLocalizations");
    C.Type_NextFocusIntent_6xB = H.typeLiteral("NextFocusIntent");
    C.Type_Null_Yyn = H.typeLiteral("Null");
    C.Type_OverscrollNotification_Ps9 = H.typeLiteral("OverscrollNotification");
    C.Type_PanGestureRecognizer_bbH = H.typeLiteral("PanGestureRecognizer");
    C.Type_PreviousFocusIntent_wsa = H.typeLiteral("PreviousFocusIntent");
    C.Type_RequestFocusIntent_OPB = H.typeLiteral("RequestFocusIntent");
    C.Type_ScrollIntent_mpH = H.typeLiteral("ScrollIntent");
    C.Type_ShapeBorderClipper_QWG = H.typeLiteral("ShapeBorderClipper");
    C.Type_Shortcuts_6TW = H.typeLiteral("Shortcuts");
    C.Type_String_k8F = H.typeLiteral("String");
    C.Type_TapGestureRecognizer_62h = H.typeLiteral("TapGestureRecognizer");
    C.Type_Uint16List_2bx = H.typeLiteral("Uint16List");
    C.Type_Uint32List_2bx = H.typeLiteral("Uint32List");
    C.Type_Uint8ClampedList_Jik = H.typeLiteral("Uint8ClampedList");
    C.Type_Uint8List_WLA = H.typeLiteral("Uint8List");
    C.Type_Vq1 = H.typeLiteral("HorizontalDragGestureRecognizer");
    C.Type_WidgetsLocalizations_43h = H.typeLiteral("WidgetsLocalizations");
    C.Type__AnyTapGestureRecognizer_5RQ = H.typeLiteral("_AnyTapGestureRecognizer");
    C.Type__ModalScopeState_Yap = H.typeLiteral("_ModalScopeState<@>");
    C.Type__ThumbPressGestureRecognizer_SP2 = H.typeLiteral("_ThumbPressGestureRecognizer");
    C.Type_bool_lhE = H.typeLiteral("bool");
    C.Type_double_K1J = H.typeLiteral("double");
    C.Type_int_tHn = H.typeLiteral("int");
    C.Type_mLh = H.typeLiteral("VerticalDragGestureRecognizer");
    C.Type_num_cv7 = H.typeLiteral("num");
    C.UnfocusDisposition_0 = new O.UnfocusDisposition("UnfocusDisposition.scope");
    C.UnfocusDisposition_1 = new O.UnfocusDisposition("UnfocusDisposition.previouslyFocusedChild");
    C.VerticalDirection_0 = new G.VerticalDirection("VerticalDirection.up");
    C.VerticalDirection_1 = new G.VerticalDirection("VerticalDirection.down");
    C.VisualDensity_0_0 = new X.VisualDensity(0, 0);
    C._AnimationDirection_0 = new G._AnimationDirection("_AnimationDirection.forward");
    C._AnimationDirection_1 = new G._AnimationDirection("_AnimationDirection.reverse");
    C._CheckableKind_0 = new H._CheckableKind("_CheckableKind.checkbox");
    C._CheckableKind_1 = new H._CheckableKind("_CheckableKind.radio");
    C._CheckableKind_2 = new H._CheckableKind("_CheckableKind.toggle");
    C.AlignmentDirectional_Yr4 = new K.AlignmentDirectional(0.9, 0);
    C.AlignmentDirectional_1_0 = new K.AlignmentDirectional(1, 0);
    C.Color_67108864 = new P.Color(67108864);
    C.Color_301989888 = new P.Color(301989888);
    C.Color_939524096 = new P.Color(939524096);
    C.List_S2N = H.setRuntimeTypeInfo(makeConstList([C.Color_0, C.Color_67108864, C.Color_301989888, C.Color_939524096]), type$.JSArray_Color);
    C.List_w61 = H.setRuntimeTypeInfo(makeConstList([0, 0.3, 0.6, 1]), type$.JSArray_double);
    C.LinearGradient_AEs = new T.LinearGradient(C.AlignmentDirectional_Yr4, C.AlignmentDirectional_1_0, C.TileMode_0, C.List_S2N, C.List_w61, null);
    C._CupertinoEdgeShadowDecoration_A2Y = new D._CupertinoEdgeShadowDecoration(C.LinearGradient_AEs);
    C._CupertinoEdgeShadowDecoration_null = new D._CupertinoEdgeShadowDecoration(null);
    C._DragState_0 = new O._DragState("_DragState.ready");
    C._DragState_1 = new O._DragState("_DragState.possible");
    C._DragState_2 = new O._DragState("_DragState.accepted");
    C._ElementLifecycle_0 = new N._ElementLifecycle("_ElementLifecycle.initial");
    C._GlowState_0 = new L._GlowState("_GlowState.idle");
    C._GlowState_1 = new L._GlowState("_GlowState.absorb");
    C._GlowState_2 = new L._GlowState("_GlowState.pull");
    C._GlowState_3 = new L._GlowState("_GlowState.recede");
    C._HighlightType_0 = new R._HighlightType("_HighlightType.pressed");
    C._HighlightType_1 = new R._HighlightType("_HighlightType.hover");
    C._HighlightType_2 = new R._HighlightType("_HighlightType.focus");
    C._IterationMarker_null_2 = new P._IterationMarker(null, 2);
    C._MixedEdgeInsets_QWq = new V._MixedEdgeInsets(1 / 0, 1 / 0, 1 / 0, 1 / 0, 1 / 0, 1 / 0);
    C._ModifierSidePair_ModifierKey_0_KeyboardSide_0 = new B._ModifierSidePair(C.ModifierKey_0, C.KeyboardSide_0);
    C._ModifierSidePair_ModifierKey_0_KeyboardSide_1 = new B._ModifierSidePair(C.ModifierKey_0, C.KeyboardSide_1);
    C._ModifierSidePair_ModifierKey_0_KeyboardSide_2 = new B._ModifierSidePair(C.ModifierKey_0, C.KeyboardSide_2);
    C._ModifierSidePair_ModifierKey_0_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_0, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_1_KeyboardSide_0 = new B._ModifierSidePair(C.ModifierKey_1, C.KeyboardSide_0);
    C._ModifierSidePair_ModifierKey_1_KeyboardSide_1 = new B._ModifierSidePair(C.ModifierKey_1, C.KeyboardSide_1);
    C._ModifierSidePair_ModifierKey_1_KeyboardSide_2 = new B._ModifierSidePair(C.ModifierKey_1, C.KeyboardSide_2);
    C._ModifierSidePair_ModifierKey_1_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_1, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_2_KeyboardSide_0 = new B._ModifierSidePair(C.ModifierKey_2, C.KeyboardSide_0);
    C._ModifierSidePair_ModifierKey_2_KeyboardSide_1 = new B._ModifierSidePair(C.ModifierKey_2, C.KeyboardSide_1);
    C._ModifierSidePair_ModifierKey_2_KeyboardSide_2 = new B._ModifierSidePair(C.ModifierKey_2, C.KeyboardSide_2);
    C._ModifierSidePair_ModifierKey_2_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_2, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_3_KeyboardSide_0 = new B._ModifierSidePair(C.ModifierKey_3, C.KeyboardSide_0);
    C._ModifierSidePair_ModifierKey_3_KeyboardSide_1 = new B._ModifierSidePair(C.ModifierKey_3, C.KeyboardSide_1);
    C._ModifierSidePair_ModifierKey_3_KeyboardSide_2 = new B._ModifierSidePair(C.ModifierKey_3, C.KeyboardSide_2);
    C._ModifierSidePair_ModifierKey_3_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_3, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_4_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_4, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_5_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_5, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_6_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_6, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_7_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_7, C.KeyboardSide_3);
    C._RouteLifecycle_0 = new K._RouteLifecycle(0, "_RouteLifecycle.staging");
    C._RouteLifecycle_1 = new K._RouteLifecycle(1, "_RouteLifecycle.add");
    C._RouteLifecycle_10 = new K._RouteLifecycle(10, "_RouteLifecycle.popping");
    C._RouteLifecycle_11 = new K._RouteLifecycle(11, "_RouteLifecycle.removing");
    C._RouteLifecycle_12 = new K._RouteLifecycle(12, "_RouteLifecycle.dispose");
    C._RouteLifecycle_13 = new K._RouteLifecycle(13, "_RouteLifecycle.disposed");
    C._RouteLifecycle_2 = new K._RouteLifecycle(2, "_RouteLifecycle.adding");
    C._RouteLifecycle_3 = new K._RouteLifecycle(3, "_RouteLifecycle.push");
    C._RouteLifecycle_4 = new K._RouteLifecycle(4, "_RouteLifecycle.pushReplace");
    C._RouteLifecycle_5 = new K._RouteLifecycle(5, "_RouteLifecycle.pushing");
    C._RouteLifecycle_6 = new K._RouteLifecycle(6, "_RouteLifecycle.replace");
    C._RouteLifecycle_7 = new K._RouteLifecycle(7, "_RouteLifecycle.idle");
    C._RouteLifecycle_8 = new K._RouteLifecycle(8, "_RouteLifecycle.pop");
    C._RouteLifecycle_9 = new K._RouteLifecycle(9, "_RouteLifecycle.remove");
    C._ScaffoldSlot_0 = new M._ScaffoldSlot("_ScaffoldSlot.body");
    C._ScaffoldSlot_1 = new M._ScaffoldSlot("_ScaffoldSlot.appBar");
    C._ScaffoldSlot_10 = new M._ScaffoldSlot("_ScaffoldSlot.statusBar");
    C._ScaffoldSlot_2 = new M._ScaffoldSlot("_ScaffoldSlot.bodyScrim");
    C._ScaffoldSlot_3 = new M._ScaffoldSlot("_ScaffoldSlot.bottomSheet");
    C._ScaffoldSlot_4 = new M._ScaffoldSlot("_ScaffoldSlot.snackBar");
    C._ScaffoldSlot_5 = new M._ScaffoldSlot("_ScaffoldSlot.persistentFooter");
    C._ScaffoldSlot_6 = new M._ScaffoldSlot("_ScaffoldSlot.bottomNavigationBar");
    C._ScaffoldSlot_7 = new M._ScaffoldSlot("_ScaffoldSlot.floatingActionButton");
    C._ScaffoldSlot_8 = new M._ScaffoldSlot("_ScaffoldSlot.drawer");
    C._ScaffoldSlot_9 = new M._ScaffoldSlot("_ScaffoldSlot.endDrawer");
    C._StateLifecycle_0 = new N._StateLifecycle("_StateLifecycle.created");
    C._TestMode_0 = new Q._TestMode("_TestMode.useCanvasTextLayout");
    C._TestMode_1 = new Q._TestMode("_TestMode.useDomTextLayout");
    C._TestMode_2 = new Q._TestMode("_TestMode.useCanvasKit");
    C._ToolbarSlot_0 = new E._ToolbarSlot("_ToolbarSlot.leading");
    C._ToolbarSlot_1 = new E._ToolbarSlot("_ToolbarSlot.middle");
    C._ToolbarSlot_2 = new E._ToolbarSlot("_ToolbarSlot.trailing");
    C._TrainHoppingMode_0 = new S._TrainHoppingMode("_TrainHoppingMode.minimize");
    C._TrainHoppingMode_1 = new S._TrainHoppingMode("_TrainHoppingMode.maximize");
    C._WordWrapParseMode_0 = new Y._WordWrapParseMode("_WordWrapParseMode.inSpace");
    C._WordWrapParseMode_1 = new Y._WordWrapParseMode("_WordWrapParseMode.inWord");
    C._WordWrapParseMode_2 = new Y._WordWrapParseMode("_WordWrapParseMode.atBreak");
  })();
  (function staticFields() {
    $._engineInitialized = false;
    $._hotRestartListeners = H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function);
    $._browserEngine = null;
    $._operatingSystem = null;
    $.canvasKit = null;
    $.DomRenderer__ellipseFeatureDetected = null;
    $._originState = P.LinkedHashMap_LinkedHashMap$_literal(["origin", true], type$.String, type$.bool);
    $._flutterState = P.LinkedHashMap_LinkedHashMap$_literal(["flutter", true], type$.String, type$.bool);
    $.Keyboard__instance = null;
    $.PointerBinding__instance = null;
    $._BaseAdapter__listeners = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("@(Event)"));
    $._BaseAdapter__nativeListeners = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("@(Event)"));
    $._PointerState__pointerCount = 0;
    $.Profiler__instance = null;
    $.AccessibilityAnnouncements__instance = null;
    $.EngineSemanticsOwner__instance = null;
    $.SurfacePath__rawRecorder = null;
    $._recycledCanvases = H.setRuntimeTypeInfo([], H.findType("JSArray<BitmapCanvas>"));
    $._paintQueue = H.setRuntimeTypeInfo([], type$.JSArray__PaintRequest);
    $.SurfaceSceneBuilder__webOnlyDidWarnAboutPerformanceOverlay = false;
    $.SurfaceSceneBuilder__lastFrameScene = null;
    $._frameReferences = H.setRuntimeTypeInfo([], type$.JSArray_FrameReference_dynamic);
    $._retainedSurfaces = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
    $.TextMeasurementService_rulerManager = null;
    $.DomTextMeasurementService__instance = null;
    $.CanvasTextMeasurementService__instance = null;
    $._lastStart = -1;
    $._lastEnd = -1;
    $._lastText = "";
    $._lastStyle = null;
    $._lastWidth = -1;
    $._clipIdCounter = 0;
    $.WebExperiments_instance = null;
    $.Primitives_timerFrequency = null;
    $.Primitives_timerTicks = null;
    $.Closure_functionCounter = 0;
    $.BoundClosure_selfFieldNameCache = null;
    $.BoundClosure_receiverFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = C.C__RootZone;
    $._toStringVisiting = [];
    $.Stopwatch__frequency = null;
    $.Element__parseDocument = null;
    $.Element__parseRange = null;
    $.Element__defaultValidator = null;
    $.Element__defaultSanitizer = null;
    $._Html5NodeValidator__attributeValidators = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Function);
    $.Device__isOpera = null;
    $.Device__isIE = null;
    $.Device__isFirefox = null;
    $.Device__isWebKit = null;
    $.Device__cachedCssPrefix = null;
    $._assetManager = null;
    $._fontCollection = null;
    $.webOnlyScheduleFrameCallback = null;
    $.FlutterErrorDetails_propertiesTransformers = H.setRuntimeTypeInfo([], H.findType("JSArray<Iterable<DiagnosticsNode>(Iterable<DiagnosticsNode>)>"));
    $.FlutterError_presentError = U.assertions_FlutterError_dumpErrorToConsole$closure();
    $.FlutterError__errorCount = 0;
    $.FlutterError__stackFilters = H.setRuntimeTypeInfo([], H.findType("JSArray<StackFilter>"));
    $.LicenseRegistry__collectors = null;
    $._debugPrintedCharacters = 0;
    $._debugPrintCompleter = null;
    $._debugPrintScheduled = false;
    $.GestureBinding__instance = null;
    $.PaintingBinding__instance = null;
    $.MatrixUtils__minMax = null;
    $.RendererBinding__instance = null;
    $._timeDilation = 1;
    $.SchedulerBinding__instance = null;
    $.SemanticsBinding__instance = null;
    $.CustomSemanticsAction__nextId = 0;
    $.CustomSemanticsAction__actions = P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.CustomSemanticsAction);
    $.CustomSemanticsAction__ids = P.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.int);
    $.SemanticsNode__lastIdentifier = 0;
    $.ServicesBinding__instance = null;
    $._DefaultBinaryMessenger__handlers = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("Future<ByteData>(ByteData)"));
    $._DefaultBinaryMessenger__mockHandlers = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("Future<ByteData>(ByteData)"));
    $.LogicalKeyboardKey__synonyms = function() {
      var t1 = type$.LogicalKeyboardKey;
      return P.LinkedHashMap_LinkedHashMap$_literal([C.LogicalKeyboardKey_xok, C.LogicalKeyboardKey_2203318681825_Shift_null, C.LogicalKeyboardKey_QOu, C.LogicalKeyboardKey_2203318681825_Shift_null, C.LogicalKeyboardKey_D0U, C.LogicalKeyboardKey_2203318681827_Meta_null, C.LogicalKeyboardKey_O1c, C.LogicalKeyboardKey_2203318681827_Meta_null, C.LogicalKeyboardKey_PD9, C.LogicalKeyboardKey_2203318681826_Alt_null, C.LogicalKeyboardKey_EtP, C.LogicalKeyboardKey_2203318681826_Alt_null, C.LogicalKeyboardKey_p6t, C.LogicalKeyboardKey_2203318681824_Control_null, C.LogicalKeyboardKey_ijl, C.LogicalKeyboardKey_2203318681824_Control_null], t1, t1);
    }();
    $.RawKeyboard__modifierKeyMap = function() {
      var t1 = type$.PhysicalKeyboardKey;
      return P.LinkedHashMap_LinkedHashMap$_literal([C._ModifierSidePair_ModifierKey_2_KeyboardSide_1, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_CNh], t1), C._ModifierSidePair_ModifierKey_2_KeyboardSide_2, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_7FR], t1), C._ModifierSidePair_ModifierKey_2_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_CNh, C.PhysicalKeyboardKey_7FR], t1), C._ModifierSidePair_ModifierKey_2_KeyboardSide_0, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_CNh], t1), C._ModifierSidePair_ModifierKey_1_KeyboardSide_1, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_Y3m], t1), C._ModifierSidePair_ModifierKey_1_KeyboardSide_2, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_fBD], t1), C._ModifierSidePair_ModifierKey_1_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_Y3m, C.PhysicalKeyboardKey_fBD], t1), C._ModifierSidePair_ModifierKey_1_KeyboardSide_0, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_Y3m], t1), C._ModifierSidePair_ModifierKey_0_KeyboardSide_1, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_wEo], t1), C._ModifierSidePair_ModifierKey_0_KeyboardSide_2, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_Q4j], t1), C._ModifierSidePair_ModifierKey_0_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_wEo, C.PhysicalKeyboardKey_Q4j], t1), C._ModifierSidePair_ModifierKey_0_KeyboardSide_0, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_wEo], t1), C._ModifierSidePair_ModifierKey_3_KeyboardSide_1, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_gg9], t1), C._ModifierSidePair_ModifierKey_3_KeyboardSide_2, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_INA], t1), C._ModifierSidePair_ModifierKey_3_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_gg9, C.PhysicalKeyboardKey_INA], t1), C._ModifierSidePair_ModifierKey_3_KeyboardSide_0, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_gg9], t1), C._ModifierSidePair_ModifierKey_4_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_eAf], t1), C._ModifierSidePair_ModifierKey_5_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_A3V], t1), C._ModifierSidePair_ModifierKey_6_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_DpI], t1), C._ModifierSidePair_ModifierKey_7_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_18_Fn], t1)], H.findType("_ModifierSidePair"), H.findType("Set<PhysicalKeyboardKey>"));
    }();
    $.RawKeyboard__allModifiersExceptFn = P.LinkedHashMap_LinkedHashMap$_literal([C.PhysicalKeyboardKey_CNh, C.LogicalKeyboardKey_PD9, C.PhysicalKeyboardKey_7FR, C.LogicalKeyboardKey_EtP, C.PhysicalKeyboardKey_Y3m, C.LogicalKeyboardKey_xok, C.PhysicalKeyboardKey_fBD, C.LogicalKeyboardKey_QOu, C.PhysicalKeyboardKey_wEo, C.LogicalKeyboardKey_p6t, C.PhysicalKeyboardKey_Q4j, C.LogicalKeyboardKey_ijl, C.PhysicalKeyboardKey_gg9, C.LogicalKeyboardKey_D0U, C.PhysicalKeyboardKey_INA, C.LogicalKeyboardKey_O1c, C.PhysicalKeyboardKey_eAf, C.LogicalKeyboardKey_OWF, C.PhysicalKeyboardKey_A3V, C.LogicalKeyboardKey_uHn, C.PhysicalKeyboardKey_DpI, C.LogicalKeyboardKey_ujM], type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey);
    $.SystemChrome__pendingStyle = null;
    $.SystemChrome__latestStyle = null;
    $.WidgetsApp_showPerformanceOverlayOverride = false;
    $.WidgetsBinding__instance = null;
    $.debugProfileBuildsEnabled = false;
    $.GlobalKey__registry = P.LinkedHashMap_LinkedHashMap$_empty(type$.GlobalKey_State_StatefulWidget, type$.Element_2);
    $.Element__nextHashCode = 1;
    $.KeySet__tempHashStore3 = H.setRuntimeTypeInfo([0, 0, 0], type$.JSArray_int);
    $.KeySet__tempHashStore4 = H.setRuntimeTypeInfo([0, 0, 0, 0], type$.JSArray_int);
    $.BenchBuildMaterialCheckbox__isChecked = null;
    $._counter = 0;
    $._currentFrameNumber = 1;
    $._engineBenchmarkListeners = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("~(num)"));
  })();
  (function lazyInitializers() {
    var _lazy = hunkHelpers.lazy;
    _lazy($, "_SaveStackTracking__unitZ", "$get$_SaveStackTracking__unitZ", function() {
      return H.Vector3_Vector3(0, 0, 1);
    });
    _lazy($, "SkPaint__skPaintStyleStroke", "$get$SkPaint__skPaintStyleStroke", function() {
      return J.$index$asx($.canvasKit.$index(0, "PaintStyle"), "Stroke");
    });
    _lazy($, "SkPaint__skPaintStyleFill", "$get$SkPaint__skPaintStyleFill", function() {
      return J.$index$asx($.canvasKit.$index(0, "PaintStyle"), "Fill");
    });
    _lazy($, "SkiaObjects_managedObjects", "$get$SkiaObjects_managedObjects", function() {
      return new H.SkiaObjects_closure().call$0();
    });
    _lazy($, "_kDefaultColorStops", "$get$_kDefaultColorStops", function() {
      return new H.closure12().call$0();
    });
    _lazy($, "domRenderer", "$get$domRenderer", function() {
      var t2, t3, t4,
        t1 = new H.DomRenderer(W.document().body);
      t1.reset$0(0);
      t2 = $.TextMeasurementService_rulerManager;
      if (t2 != null)
        t2.dispose$0();
      $.TextMeasurementService_rulerManager = null;
      t2 = W.Element_Element$tag("flt-ruler-host");
      t3 = new H.RulerManager(10, t2, P.LinkedHashMap_LinkedHashMap$_empty(type$.ParagraphGeometricStyle, type$.ParagraphRuler));
      t4 = t2.style;
      (t4 && C.CssStyleDeclaration_methods).set$position(t4, "fixed");
      C.CssStyleDeclaration_methods.set$visibility(t4, "hidden");
      C.CssStyleDeclaration_methods.set$overflow(t4, "hidden");
      C.CssStyleDeclaration_methods.set$top(t4, "0");
      C.CssStyleDeclaration_methods.set$left(t4, "0");
      C.CssStyleDeclaration_methods.set$width(t4, "0");
      C.CssStyleDeclaration_methods.set$height(t4, "0");
      W.document().body.appendChild(t2);
      H.registerHotRestartListener(t3.get$dispose());
      $.TextMeasurementService_rulerManager = t3;
      return t1;
    });
    _lazy($, "SaveElementStackTracking__unitZ", "$get$SaveElementStackTracking__unitZ", function() {
      return H.Vector3_Vector3(0, 0, 1);
    });
    _lazy($, "platformViewRegistry", "$get$platformViewRegistry", function() {
      return new H.PlatformViewRegistry(P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("Element0(int)")), P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.Element));
    });
    _lazy($, "accessibilityAnnouncements", "$get$accessibilityAnnouncements", function() {
      var t1 = $.AccessibilityAnnouncements__instance;
      return t1 == null ? $.AccessibilityAnnouncements__instance = H.AccessibilityAnnouncements$_() : t1;
    });
    _lazy($, "_roleFactories", "$get$_roleFactories", function() {
      return P.LinkedHashMap_LinkedHashMap$_literal([C.Role_0, new H.closure13(), C.Role_1, new H.closure14(), C.Role_2, new H.closure15(), C.Role_3, new H.closure16(), C.Role_4, new H.closure17(), C.Role_5, new H.closure18(), C.Role_6, new H.closure19(), C.Role_7, new H.closure20()], type$.Role, H.findType("RoleManager(SemanticsObject)"));
    });
    _lazy($, "_PaintBounds__tempRectData", "$get$_PaintBounds__tempRectData", function() {
      return H.NativeFloat32List_NativeFloat32List(4);
    });
    _lazy($, "FontManager_notPunctuation", "$get$FontManager_notPunctuation", function() {
      return P.RegExp_RegExp("[a-z0-9\\s]+", false);
    });
    _lazy($, "FontManager_startWithDigit", "$get$FontManager_startWithDigit", function() {
      return P.RegExp_RegExp("\\b\\d", true);
    });
    _lazy($, "supportsFontLoadingApi", "$get$supportsFontLoadingApi", function() {
      return W.document().fonts != null;
    });
    _lazy($, "EngineParagraphBuilder__paragraphBuilderPop", "$get$EngineParagraphBuilder__paragraphBuilderPop", function() {
      return new P.Object();
    });
    _lazy($, "textEditing", "$get$textEditing", function() {
      var t1 = new H.HybridTextEditing();
      if (H.browserEngine() === C.BrowserEngine_1 && H.operatingSystem() === C.OperatingSystem_0)
        t1._defaultEditingElement = new H.IOSTextEditingStrategy(t1, H.setRuntimeTypeInfo([], type$.JSArray_StreamSubscription_Event));
      else if (H.browserEngine() === C.BrowserEngine_0 && H.operatingSystem() === C.OperatingSystem_1)
        t1._defaultEditingElement = new H.AndroidTextEditingStrategy(t1, H.setRuntimeTypeInfo([], type$.JSArray_StreamSubscription_Event));
      else if (H.browserEngine() === C.BrowserEngine_2)
        t1._defaultEditingElement = new H.FirefoxTextEditingStrategy(t1, H.setRuntimeTypeInfo([], type$.JSArray_StreamSubscription_Event));
      else
        t1._defaultEditingElement = H.GloballyPositionedTextEditingStrategy$(t1);
      t1.channel = new H.TextEditingChannel(t1);
      return t1;
    });
    _lazy($, "_tempRectData", "$get$_tempRectData", function() {
      return H.NativeFloat32List_NativeFloat32List(4);
    });
    _lazy($, "_tempPointData", "$get$_tempPointData", function() {
      return H.NativeFloat32List_NativeFloat32List(16);
    });
    _lazy($, "_tempPointMatrix", "$get$_tempPointMatrix", function() {
      return H.Matrix4$fromFloat32List($.$get$_tempPointData());
    });
    _lazy($, "_fallbackFontFamily", "$get$_fallbackFontFamily", function() {
      return H.operatingSystem() === C.OperatingSystem_0 ? "Helvetica" : "Arial";
    });
    _lazy($, "window0", "$get$window", function() {
      var t1 = W.window().matchMedia("(prefers-color-scheme: dark)");
      t1 = new H.EngineWindow(new H.BrowserHistory(), C.Brightness_1, t1, new P.AccessibilityFeatures(0));
      t1._addBrightnessMediaQueryListener$0();
      return t1;
    });
    _lazy($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartClosure");
    });
    _lazy($, "JS_INTEROP_INTERCEPTOR_TAG", "$get$JS_INTEROP_INTERCEPTOR_TAG", function() {
      return H.getIsolateAffinityTag("_$dart_js");
    });
    _lazy($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazy($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazy($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
    });
    _lazy($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          null.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
    });
    _lazy($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          (void 0).$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
    });
    _lazy($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          null.$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
    });
    _lazy($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          (void 0).$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", function() {
      return P._AsyncRun__initializeScheduleImmediate();
    });
    _lazy($, "Future__nullFuture", "$get$Future__nullFuture", function() {
      return P._Future$zoneValue(null, C.C__RootZone, type$.Null);
    });
    _lazy($, "Utf8Decoder__decoder", "$get$Utf8Decoder__decoder", function() {
      return P.Utf8Decoder__makeDecoder();
    });
    _lazy($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", function() {
      return H.NativeInt8List__create1(H._ensureNativeList(H.setRuntimeTypeInfo([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int)));
    });
    _lazy($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", function() {
      return P.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", true);
    });
    _lazy($, "_hasErrorStackProperty", "$get$_hasErrorStackProperty", function() {
      return new Error().stack != void 0;
    });
    _lazy($, "_scannerTables", "$get$_scannerTables", function() {
      return P._createTables();
    });
    _lazy($, "_extensions", "$get$_extensions", function() {
      return H.JsLinkedHashMap_JsLinkedHashMap$es6(type$.String, H.findType("Future<ServiceExtensionResponse>(String,Map<String,String>)"));
    });
    _lazy($, "Timeline__stack", "$get$Timeline__stack", function() {
      return H.setRuntimeTypeInfo([], H.findType("JSArray<_SyncBlock>"));
    });
    _lazy($, "CssStyleDeclaration__propertyCache", "$get$CssStyleDeclaration__propertyCache", function() {
      return {};
    });
    _lazy($, "_Html5NodeValidator__allowedElements", "$get$_Html5NodeValidator__allowedElements", function() {
      return P.LinkedHashSet_LinkedHashSet$from(["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"], type$.String);
    });
    _lazy($, "_context", "$get$_context", function() {
      return P._wrapToDart(self);
    });
    _lazy($, "_DART_OBJECT_PROPERTY_NAME", "$get$_DART_OBJECT_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartObject");
    });
    _lazy($, "_dartProxyCtor", "$get$_dartProxyCtor", function() {
      return function DartObject(o) {
        this.o = o;
      };
    });
    _lazy($, "Endian_host", "$get$Endian_host", function() {
      return H.NativeByteData_NativeByteData$view(H.NativeUint16List__create1(H._ensureNativeList(H.setRuntimeTypeInfo([1], type$.JSArray_int))).buffer, 0, null).getInt8(0) === 1 ? C.C_Endian : C.C_Endian0;
    });
    _lazy($, "channelBuffers", "$get$channelBuffers", function() {
      return new P.ChannelBuffers(P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$._RingBuffer__StoredMessage));
    });
    _lazy($, "_kRightMiddleTween", "$get$_kRightMiddleTween", function() {
      return R.Tween$(C.Offset_1_0, C.Offset_0_0, type$.Offset);
    });
    _lazy($, "_kMiddleLeftTween", "$get$_kMiddleLeftTween", function() {
      return R.Tween$(C.Offset_0_0, C.Offset_Oho, type$.Offset);
    });
    _lazy($, "_kGradientShadowTween", "$get$_kGradientShadowTween", function() {
      return new G.DecorationTween(C._CupertinoEdgeShadowDecoration_null, C._CupertinoEdgeShadowDecoration_A2Y);
    });
    _lazy($, "FlutterError_onError", "$get$FlutterError_onError", function() {
      return new U.FlutterError_closure();
    });
    _lazy($, "sparseTextConfiguration", "$get$sparseTextConfiguration", function() {
      return Y.TextTreeConfiguration$(true, "", ":", "", "", "", "", "", true, false, "\n", true, "\u2502", "", "\u2514\u2500", "\u251c\u2500", " ", " ", "\u2502 ", "  ", "", true, "");
    });
    _lazy($, "dashedTextConfiguration", "$get$dashedTextConfiguration", function() {
      return Y.TextTreeConfiguration$(true, "", ":", "", "", "", "", "", true, false, "\n", true, "\u254e", "", "\u2514\u254c", "\u254e\u254c", " ", " ", "\u2502 ", "  ", "", true, "");
    });
    _lazy($, "denseTextConfiguration", "$get$denseTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", false, false, "\n", false, "\u2502", "", "\u2514", "\u251c", "", "", "\u2502", " ", ", ", true, "");
    });
    _lazy($, "transitionTextConfiguration", "$get$transitionTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, ":", " \u2550\u2550\u2550", "", "", "", "  ", " \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550", false, true, "\n", true, "\u2502", "", "\u2558\u2550\u2566\u2550\u2550 ", "\u255e\u2550\u2566\u2550\u2550 ", " \u2551 ", "", "", "", "", true, "");
    });
    _lazy($, "errorTextConfiguration", "$get$errorTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, "", ":", "", "\u2550\u2550\u2561 ", "", "", " \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550", false, false, "\n", true, "\u2502", "\u2550\u2550\u2550\u2550\u2550", "\u2558\u2550\u2566", "\u255e\u2550\u2566", " \u2551 ", "", "", "", "", true, " \u255e\u2550\u2550");
    });
    _lazy($, "whitespaceTextConfiguration", "$get$whitespaceTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, " ", "", "", "", " ", "  ", "", "", "", true, "");
    });
    _lazy($, "flatTextConfiguration", "$get$flatTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, "", "", "", "", "", "", "", "", "", true, "");
    });
    _lazy($, "singleLineTextConfiguration", "$get$singleLineTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", true, false, "", false, "", "", "", "", "", "", "  ", "  ", ", ", false, "");
    });
    _lazy($, "errorPropertyTextConfiguration", "$get$errorPropertyTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", true, true, "\n", false, "", "", "", "", "", "", "  ", "  ", ", ", false, "");
    });
    _lazy($, "shallowTextConfiguration", "$get$shallowTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, " ", "", "", "", " ", "  ", "", "", "", false, "");
    });
    _lazy($, "_debugPrintBuffer", "$get$_debugPrintBuffer", function() {
      return P.ListQueue$(null, type$.String);
    });
    _lazy($, "_debugPrintStopwatch", "$get$_debugPrintStopwatch", function() {
      return P.Stopwatch$();
    });
    _lazy($, "StackFrame__webNonDebugFramePattern", "$get$StackFrame__webNonDebugFramePattern", function() {
      return P.RegExp_RegExp("^\\s*at ([^\\s]+).*$", true);
    });
    _lazy($, "_ScalingFabMotionAnimator__rotationTween", "$get$_ScalingFabMotionAnimator__rotationTween", function() {
      return R.Tween$(0.75, 1, type$.double);
    });
    _lazy($, "_ScalingFabMotionAnimator__thresholdCenterTween", "$get$_ScalingFabMotionAnimator__thresholdCenterTween", function() {
      return R.CurveTween$(C.C_Threshold);
    });
    _lazy($, "kMaterialEdges", "$get$kMaterialEdges", function() {
      return P.LinkedHashMap_LinkedHashMap$_literal([C.MaterialType_0, null, C.MaterialType_1, K.BorderRadius$circular(2), C.MaterialType_2, null, C.MaterialType_3, K.BorderRadius$circular(2), C.MaterialType_4, null], H.findType("MaterialType"), type$.BorderRadius);
    });
    _lazy($, "_FadeUpwardsPageTransition__bottomUpTween", "$get$_FadeUpwardsPageTransition__bottomUpTween", function() {
      return R.Tween$(C.Offset_chs, C.Offset_0_0, type$.Offset);
    });
    _lazy($, "_FadeUpwardsPageTransition__fastOutSlowInTween", "$get$_FadeUpwardsPageTransition__fastOutSlowInTween", function() {
      return R.CurveTween$(C.Cubic_ifx);
    });
    _lazy($, "_FadeUpwardsPageTransition__easeInTween", "$get$_FadeUpwardsPageTransition__easeInTween", function() {
      return R.CurveTween$(C.Cubic_JUR0);
    });
    _lazy($, "_FloatingActionButtonTransitionState__entranceTurnTween", "$get$_FloatingActionButtonTransitionState__entranceTurnTween", function() {
      return R.Tween$(0.875, 1, type$.double).chain$1(R.CurveTween$(C.Cubic_JUR0));
    });
    _lazy($, "_kTabBarViewPhysics", "$get$_kTabBarViewPhysics", function() {
      return C.PageScrollPhysics_null.applyTo$1(C.ClampingScrollPhysics_null);
    });
    _lazy($, "Theme__kFallbackTheme", "$get$Theme__kFallbackTheme", function() {
      return X.ThemeData_ThemeData$fallback();
    });
    _lazy($, "ThemeData__localizedThemeDataCache", "$get$ThemeData__localizedThemeDataCache", function() {
      return new X._FifoCache(P.LinkedHashMap_LinkedHashMap$_empty(H.findType("_IdentityThemeDataCacheKey"), type$.ThemeData), 5, H.findType("_FifoCache<_IdentityThemeDataCacheKey,ThemeData>"));
    });
    _lazy($, "_kRadialReactionRadiusTween", "$get$_kRadialReactionRadiusTween", function() {
      return R.Tween$(0, 20, type$.double);
    });
    _lazy($, "RenderErrorBox_backgroundColor", "$get$RenderErrorBox_backgroundColor", function() {
      return C.Color_4039164096;
    });
    _lazy($, "RenderErrorBox_textStyle", "$get$RenderErrorBox_textStyle", function() {
      var _null = null;
      return P.TextStyle_TextStyle(_null, C.Color_4281348144, _null, _null, _null, _null, "sans-serif", _null, _null, 18, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    });
    _lazy($, "RenderErrorBox_paragraphStyle", "$get$RenderErrorBox_paragraphStyle", function() {
      var _null = null;
      return P.ParagraphStyle_ParagraphStyle(_null, _null, _null, _null, _null, _null, _null, _null, _null, C.TextAlign_0, C.TextDirection_1, _null);
    });
    _lazy($, "_SemanticsGeometry__temporaryTransformHolder", "$get$_SemanticsGeometry__temporaryTransformHolder", function() {
      return E.Matrix4$zero();
    });
    _lazy($, "SemanticsNode__kEmptyConfig", "$get$SemanticsNode__kEmptyConfig", function() {
      return A.SemanticsConfiguration$();
    });
    _lazy($, "SemanticsNode__kEmptyChildList", "$get$SemanticsNode__kEmptyChildList", function() {
      return H.NativeInt32List_NativeInt32List(0);
    });
    _lazy($, "SemanticsNode__kEmptyCustomSemanticsActionsList", "$get$SemanticsNode__kEmptyCustomSemanticsActionsList", function() {
      return H.NativeInt32List_NativeInt32List(0);
    });
    _lazy($, "SemanticsNode__kIdentityTransform", "$get$SemanticsNode__kIdentityTransform", function() {
      return E.Matrix4_Matrix4$identity()._m4storage;
    });
    _lazy($, "rootBundle", "$get$rootBundle", function() {
      var t1 = type$.String;
      return new Q.PlatformAssetBundle(P.LinkedHashMap_LinkedHashMap$_empty(t1, H.findType("Future<String>")), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Future_dynamic));
    });
    _lazy($, "RawKeyboard_instance", "$get$RawKeyboard_instance", function() {
      var t1 = new B.RawKeyboard(H.setRuntimeTypeInfo([], H.findType("JSArray<~(RawKeyEvent)>")), P.LinkedHashMap_LinkedHashMap$_empty(type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey));
      C.BasicMessageChannel_Cfi.setMessageHandler$1(t1.get$_handleKeyEvent());
      return t1;
    });
    _lazy($, "RawKeyboard__allModifiers", "$get$RawKeyboard__allModifiers", function() {
      var t2, t3,
        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey);
      t1.$indexSet(0, C.PhysicalKeyboardKey_18_Fn, C.LogicalKeyboardKey_4294967314_Fn_null);
      for (t2 = $.RawKeyboard__allModifiersExceptFn.get$entries($.RawKeyboard__allModifiersExceptFn), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t1.$indexSet(0, t3.key, t3.value);
      }
      return t1;
    });
    _lazy($, "WidgetsApp__defaultWebShortcuts", "$get$WidgetsApp__defaultWebShortcuts", function() {
      var _null = null;
      return P.LinkedHashMap_LinkedHashMap$_literal([X.LogicalKeySet$(C.LogicalKeyboardKey_YdN, _null), C.C_ActivateIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426091_Tab_null, _null), C.C_NextFocusIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681825_Shift_null, C.LogicalKeyboardKey_4295426091_Tab_null), C.C_PreviousFocusIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_gCR, _null), C.ScrollIntent_Uzc, X.LogicalKeySet$(C.LogicalKeyboardKey_O7X, _null), C.ScrollIntent_R43, X.LogicalKeySet$(C.LogicalKeyboardKey_muk, _null), C.ScrollIntent_vpn, X.LogicalKeySet$(C.LogicalKeyboardKey_CzM, _null), C.ScrollIntent_o8I, X.LogicalKeySet$(C.LogicalKeyboardKey_mgB, _null), C.ScrollIntent_Uzc0, X.LogicalKeySet$(C.LogicalKeyboardKey_wYn, _null), C.ScrollIntent_R430], H.findType("LogicalKeySet"), type$.Intent);
    });
    _lazy($, "WidgetsApp_defaultActions", "$get$WidgetsApp_defaultActions", function() {
      var t1 = H.findType("~(Action<Intent>)");
      return P.LinkedHashMap_LinkedHashMap$_literal([C.Type_DoNothingIntent_IQR, new U.DoNothingAction(R.ObserverList$(t1)), C.Type_RequestFocusIntent_OPB, new U.RequestFocusAction(R.ObserverList$(t1)), C.Type_NextFocusIntent_6xB, new U.NextFocusAction(R.ObserverList$(t1)), C.Type_PreviousFocusIntent_wsa, new U.PreviousFocusAction(R.ObserverList$(t1)), C.Type_DirectionalFocusIntent_evN, new U.DirectionalFocusAction(R.ObserverList$(t1)), C.Type_ScrollIntent_mpH, new F.ScrollAction(R.ObserverList$(t1))], type$.Type, type$.Action_Intent);
    });
    _lazy($, "_HeroFlight__reverseTween", "$get$_HeroFlight__reverseTween", function() {
      return R.Tween$(1, 0, type$.double);
    });
    _lazy($, "HeroController__defaultHeroFlightShuttleBuilder", "$get$HeroController__defaultHeroFlightShuttleBuilder", function() {
      return new T.HeroController_closure();
    });
    _lazy($, "_RouteEntry_isPresentPredicate", "$get$_RouteEntry_isPresentPredicate", function() {
      return new K._RouteEntry_closure1();
    });
    _lazy($, "_RouteEntry_suitableForTransitionAnimationPredicate", "$get$_RouteEntry_suitableForTransitionAnimationPredicate", function() {
      return new K._RouteEntry_closure();
    });
    _lazy($, "_RouteEntry_willBePresentPredicate", "$get$_RouteEntry_willBePresentPredicate", function() {
      return new K._RouteEntry_closure0();
    });
    _lazy($, "_GlowController__crossAxisHalfTime", "$get$_GlowController__crossAxisHalfTime", function() {
      return P.Duration$(16667, 0);
    });
    _lazy($, "_defaultPageController", "$get$_defaultPageController", function() {
      return D.PageController$(0);
    });
    _lazy($, "ScrollPhysics__kDefaultSpring", "$get$ScrollPhysics__kDefaultSpring", function() {
      return M.SpringDescription$withDampingRatio(0.5, 1.1, 100);
    });
    _lazy($, "ScrollPhysics__kDefaultTolerance", "$get$ScrollPhysics__kDefaultTolerance", function() {
      var t1, t2;
      $.WidgetsBinding__instance.toString;
      t1 = $.$get$window();
      t2 = t1.get$devicePixelRatio(t1);
      $.WidgetsBinding__instance.toString;
      return new N.Tolerance(1 / t1.get$devicePixelRatio(t1), 1 / (0.05 * t2));
    });
    _lazy($, "ClampingScrollSimulation__kDecelerationRate", "$get$ClampingScrollSimulation__kDecelerationRate", function() {
      return P.log(0.78) / P.log(0.9);
    });
    _lazy($, "WidgetInspectorService__instance", "$get$WidgetInspectorService__instance", function() {
      var t2, _null = null,
        t1 = new Array(20);
      t1.fixed$length = Array;
      t2 = type$.String;
      return new N._WidgetInspectorService(H.setRuntimeTypeInfo(t1, type$.JSArray_String), 0, new N.InspectorSelection(H.setRuntimeTypeInfo([], type$.JSArray_RenderObject)), _null, P.LinkedHashMap_LinkedHashMap$_empty(t2, H.findType("Set<_InspectorReferenceData>")), P.LinkedHashMap_LinkedHashMap$_empty(t2, H.findType("_InspectorReferenceData")), P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(type$.Object, t2), 0, _null, false, false, _null, 0, _null, _null, N._ElementLocationStatsTracker$(), N._ElementLocationStatsTracker$());
    });
    _lazy($, "allPalettes", "$get$allPalettes", function() {
      return H.setRuntimeTypeInfo([Q.Palette$(C.MaterialAccentColor_Map_iTECn_4294922834, "RED", C.MaterialColor_Map_JNc9P_4294198070, 300), Q.Palette$(C.MaterialAccentColor_Map_iTouf_4294918273, "PINK", C.MaterialColor_Map_JN0o6_4293467747, 200), Q.Palette$(C.MaterialAccentColor_Map_iT2jN_4292886779, "PURPLE", C.MaterialColor_Map_JNNS7_4288423856, 200), Q.Palette$(C.MaterialAccentColor_Map_iT0Z9_4286336511, "DEEP PURPLE", C.MaterialColor_Map_JNEyN_4284955319, 200), Q.Palette$(C.MaterialAccentColor_Map_iT7xV_4283657726, "INDIGO", C.MaterialColor_Map_JN8qN_4282339765, 200), Q.Palette$(C.MaterialAccentColor_Map_iTCd2_4282682111, "BLUE", C.MaterialColor_Map_JNwaj_4280391411, 400), Q.Palette$(C.MaterialAccentColor_Map_iTyLX_4282434815, "LIGHT BLUE", C.MaterialColor_Map_JN3Gf_4278430196, 500), Q.Palette$(C.MaterialAccentColor_Map_iTWCn_4279828479, "CYAN", C.MaterialColor_Map_JN94k_4278238420, 600), Q.Palette$(C.MaterialAccentColor_Map_iTYZn_4284809178, "TEAL", C.MaterialColor_Map_JN0Sr_4278228616, 400), Q.Palette$(C.MaterialAccentColor_Map_iTc0J_4285132974, "GREEN", C.MaterialColor_Map_JNEaM_4283215696, 500), Q.Palette$(C.MaterialAccentColor_Map_iTSpr_4289920857, "LIGHT GREEN", C.MaterialColor_Map_JNJAl_4287349578, 600), Q.Palette$(C.MaterialAccentColor_Map_iTuSA_4293852993, "LIME", C.MaterialColor_Map_JNQQJ_4291681337, 800), Q.Palette$(C.MaterialAccentColor_Map_iTwHq_4294967040, "YELLOW", C.MaterialColor_Map_JNHRl_4294961979, 900), Q.Palette$(C.MaterialAccentColor_Map_iT4UX_4294956864, "AMBER", C.MaterialColor_Map_JNsy5_4294951175, 900), Q.Palette$(C.MaterialAccentColor_Map_iTsEs_4294945600, "ORANGE", C.MaterialColor_Map_JNZaB_4294940672, 700), Q.Palette$(C.MaterialAccentColor_Map_iTYUJ_4294929984, "DEEP ORANGE", C.MaterialColor_Map_JNUn6_4294924066, 400), Q.Palette$(null, "BROWN", C.MaterialColor_Map_JNUEV_4286141768, 200), Q.Palette$(null, "GREY", C.MaterialColor_Map_HFpTk_4288585374, 500), Q.Palette$(null, "BLUE GREY", C.MaterialColor_Map_JNy8A_4284513675, 500)], H.findType("JSArray<Palette>"));
    });
    _lazy($, "BenchTextOutOfPictureBounds__random", "$get$BenchTextOutOfPictureBounds__random", function() {
      return P.Random_Random(0);
    });
    _lazy($, "_random", "$get$_random", function() {
      return P.Random_Random(0);
    });
    _lazy($, "lipsum", "$get$lipsum", function() {
      return H.setRuntimeTypeInfo("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ut ligula a neque mattis posuere. Sed suscipit lobortis sodales. Morbi sed neque molestie, hendrerit odio ac, aliquam velit. Curabitur non quam sit amet nibh sollicitudin ultrices. Fusce ullamcorper bibendum commodo. In et feugiat nisl. Aenean vulputate in odio vestibulum ultricies. Nunc dolor libero, hendrerit eu urna sit amet, pretium iaculis nulla. Ut porttitor nisl et leo iaculis, vel fringilla odio pulvinar. Ut eget ligula id odio auctor egestas nec a nisl. Aliquam luctus dolor et magna posuere mattis. Suspendisse fringilla nisl et massa congue, eget imperdiet lectus porta. Vestibulum sed dui sed dui porta imperdiet ut in risus. Fusce diam purus, faucibus id accumsan sit amet, semper a sem. Sed aliquam lacus eget libero ultricies, quis hendrerit tortor posuere. Pellentesque sagittis eu est in maximus. Proin auctor fringilla dolor in hendrerit. Nam pulvinar rhoncus tellus. Nullam vel mauris semper, volutpat tellus at, sagittis lectus. Donec vitae nibh mauris. Morbi posuere sem id eros tristique tempus. Vivamus lacinia sapien neque, eu semper purus gravida ut.".split(" "), type$.JSArray_String);
    });
    _lazy($, "benchmarks", "$get$benchmarks", function() {
      var t1 = type$.String,
        t2 = H.findType("Recorder()"),
        t3 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      t3.$indexSet(0, "bench_card_infinite_scroll", new Z.closure());
      t3.$indexSet(0, "draw_rect", new Z.closure0());
      t3.$indexSet(0, "text_out_of_picture_bounds", new Z.closure1());
      t3.$indexSet(0, "bench_simple_lazy_text_scroll", new Z.closure2());
      t3.$indexSet(0, "build_material_checkbox", new Z.closure3());
      t3.$indexSet(0, "dynamic_clip_on_static_picture", new Z.closure4());
      t3.$indexSet(0, "bench_picture_recording", new Z.closure5());
      for (t1 = P.LinkedHashMap_LinkedHashMap$_literal(["text_dom_layout", new Z.closure6(), "text_canvas_layout", new Z.closure7(), "text_dom_cached_layout", new Z.closure8(), "text_canvas_cached_layout", new Z.closure9(), "text_dom_color_grid", new Z.closure10(), "text_canvas_color_grid", new Z.closure11()], t1, t2), t1 = t1.get$entries(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        t3.$indexSet(0, t2.key, t2.value);
      }
      return t3;
    });
    _lazy($, "_client", "$get$_client", function() {
      return new Z.LocalBenchmarkServerClient();
    });
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({AnimationEffectReadOnly: J.Interceptor, AnimationEffectTiming: J.Interceptor, AnimationEffectTimingReadOnly: J.Interceptor, AnimationTimeline: J.Interceptor, AnimationWorkletGlobalScope: J.Interceptor, AuthenticatorAssertionResponse: J.Interceptor, AuthenticatorAttestationResponse: J.Interceptor, AuthenticatorResponse: J.Interceptor, BackgroundFetchFetch: J.Interceptor, BackgroundFetchManager: J.Interceptor, BackgroundFetchSettledFetch: J.Interceptor, BarProp: J.Interceptor, BarcodeDetector: J.Interceptor, BluetoothRemoteGATTDescriptor: J.Interceptor, Body: J.Interceptor, BudgetState: J.Interceptor, CacheStorage: J.Interceptor, CanvasGradient: J.Interceptor, CanvasPattern: J.Interceptor, Client: J.Interceptor, Clients: J.Interceptor, CookieStore: J.Interceptor, Coordinates: J.Interceptor, CredentialsContainer: J.Interceptor, Crypto: J.Interceptor, CryptoKey: J.Interceptor, CSS: J.Interceptor, CSSVariableReferenceValue: J.Interceptor, CustomElementRegistry: J.Interceptor, DataTransfer: J.Interceptor, DataTransferItem: J.Interceptor, DeprecatedStorageInfo: J.Interceptor, DeprecatedStorageQuota: J.Interceptor, DetectedBarcode: J.Interceptor, DetectedFace: J.Interceptor, DetectedText: J.Interceptor, DeviceAcceleration: J.Interceptor, DeviceRotationRate: J.Interceptor, DirectoryReader: J.Interceptor, DocumentOrShadowRoot: J.Interceptor, DocumentTimeline: J.Interceptor, DOMImplementation: J.Interceptor, Iterator: J.Interceptor, DOMMatrix: J.Interceptor, DOMMatrixReadOnly: J.Interceptor, DOMParser: J.Interceptor, DOMPoint: J.Interceptor, DOMPointReadOnly: J.Interceptor, DOMQuad: J.Interceptor, DOMStringMap: J.Interceptor, External: J.Interceptor, FaceDetector: J.Interceptor, FontFaceSource: J.Interceptor, FormData: J.Interceptor, GamepadButton: J.Interceptor, GamepadPose: J.Interceptor, Geolocation: J.Interceptor, Position: J.Interceptor, Headers: J.Interceptor, HTMLHyperlinkElementUtils: J.Interceptor, IdleDeadline: J.Interceptor, ImageBitmap: J.Interceptor, ImageBitmapRenderingContext: J.Interceptor, ImageCapture: J.Interceptor, InputDeviceCapabilities: J.Interceptor, IntersectionObserver: J.Interceptor, IntersectionObserverEntry: J.Interceptor, KeyframeEffect: J.Interceptor, KeyframeEffectReadOnly: J.Interceptor, MediaCapabilities: J.Interceptor, MediaCapabilitiesInfo: J.Interceptor, MediaDeviceInfo: J.Interceptor, MediaKeyStatusMap: J.Interceptor, MediaKeySystemAccess: J.Interceptor, MediaKeys: J.Interceptor, MediaKeysPolicy: J.Interceptor, MediaMetadata: J.Interceptor, MediaSession: J.Interceptor, MediaSettingsRange: J.Interceptor, MemoryInfo: J.Interceptor, MessageChannel: J.Interceptor, Metadata: J.Interceptor, MutationObserver: J.Interceptor, WebKitMutationObserver: J.Interceptor, MutationRecord: J.Interceptor, NavigationPreloadManager: J.Interceptor, Navigator: J.Interceptor, NavigatorAutomationInformation: J.Interceptor, NavigatorConcurrentHardware: J.Interceptor, NavigatorCookies: J.Interceptor, NodeFilter: J.Interceptor, NodeIterator: J.Interceptor, NonDocumentTypeChildNode: J.Interceptor, NonElementParentNode: J.Interceptor, NoncedElement: J.Interceptor, OffscreenCanvasRenderingContext2D: J.Interceptor, PaintRenderingContext2D: J.Interceptor, PaintSize: J.Interceptor, PaintWorkletGlobalScope: J.Interceptor, Path2D: J.Interceptor, PaymentAddress: J.Interceptor, PaymentInstruments: J.Interceptor, PaymentManager: J.Interceptor, PaymentResponse: J.Interceptor, PerformanceNavigation: J.Interceptor, PerformanceObserver: J.Interceptor, PerformanceObserverEntryList: J.Interceptor, PerformanceTiming: J.Interceptor, Permissions: J.Interceptor, PhotoCapabilities: J.Interceptor, Presentation: J.Interceptor, PresentationReceiver: J.Interceptor, PushManager: J.Interceptor, PushMessageData: J.Interceptor, PushSubscription: J.Interceptor, PushSubscriptionOptions: J.Interceptor, Range: J.Interceptor, RelatedApplication: J.Interceptor, ReportingObserver: J.Interceptor, ResizeObserver: J.Interceptor, ResizeObserverEntry: J.Interceptor, RTCCertificate: J.Interceptor, RTCIceCandidate: J.Interceptor, mozRTCIceCandidate: J.Interceptor, RTCLegacyStatsReport: J.Interceptor, RTCRtpContributingSource: J.Interceptor, RTCRtpReceiver: J.Interceptor, RTCRtpSender: J.Interceptor, RTCSessionDescription: J.Interceptor, mozRTCSessionDescription: J.Interceptor, RTCStatsResponse: J.Interceptor, Screen: J.Interceptor, ScrollState: J.Interceptor, ScrollTimeline: J.Interceptor, Selection: J.Interceptor, SharedArrayBuffer: J.Interceptor, SpeechRecognitionAlternative: J.Interceptor, StaticRange: J.Interceptor, StorageManager: J.Interceptor, StyleMedia: J.Interceptor, StylePropertyMap: J.Interceptor, StylePropertyMapReadonly: J.Interceptor, SyncManager: J.Interceptor, TextDetector: J.Interceptor, TextMetrics: J.Interceptor, TrackDefault: J.Interceptor, TreeWalker: J.Interceptor, TrustedHTML: J.Interceptor, TrustedScriptURL: J.Interceptor, TrustedURL: J.Interceptor, UnderlyingSourceBase: J.Interceptor, URLSearchParams: J.Interceptor, VRCoordinateSystem: J.Interceptor, VRDisplayCapabilities: J.Interceptor, VREyeParameters: J.Interceptor, VRFrameData: J.Interceptor, VRFrameOfReference: J.Interceptor, VRPose: J.Interceptor, VRStageBounds: J.Interceptor, VRStageBoundsPoint: J.Interceptor, VRStageParameters: J.Interceptor, ValidityState: J.Interceptor, VideoPlaybackQuality: J.Interceptor, VideoTrack: J.Interceptor, VTTRegion: J.Interceptor, WindowClient: J.Interceptor, WorkletAnimation: J.Interceptor, WorkletGlobalScope: J.Interceptor, XPathEvaluator: J.Interceptor, XPathExpression: J.Interceptor, XPathNSResolver: J.Interceptor, XPathResult: J.Interceptor, XMLSerializer: J.Interceptor, XSLTProcessor: J.Interceptor, Bluetooth: J.Interceptor, BluetoothCharacteristicProperties: J.Interceptor, BluetoothRemoteGATTServer: J.Interceptor, BluetoothRemoteGATTService: J.Interceptor, BluetoothUUID: J.Interceptor, BudgetService: J.Interceptor, Cache: J.Interceptor, DOMFileSystemSync: J.Interceptor, DirectoryEntrySync: J.Interceptor, DirectoryReaderSync: J.Interceptor, EntrySync: J.Interceptor, FileEntrySync: J.Interceptor, FileReaderSync: J.Interceptor, FileWriterSync: J.Interceptor, HTMLAllCollection: J.Interceptor, Mojo: J.Interceptor, MojoHandle: J.Interceptor, MojoWatcher: J.Interceptor, NFC: J.Interceptor, PagePopupController: J.Interceptor, Report: J.Interceptor, Request: J.Interceptor, Response: J.Interceptor, SubtleCrypto: J.Interceptor, USBAlternateInterface: J.Interceptor, USBConfiguration: J.Interceptor, USBDevice: J.Interceptor, USBEndpoint: J.Interceptor, USBInTransferResult: J.Interceptor, USBInterface: J.Interceptor, USBIsochronousInTransferPacket: J.Interceptor, USBIsochronousInTransferResult: J.Interceptor, USBIsochronousOutTransferPacket: J.Interceptor, USBIsochronousOutTransferResult: J.Interceptor, USBOutTransferResult: J.Interceptor, WorkerLocation: J.Interceptor, WorkerNavigator: J.Interceptor, Worklet: J.Interceptor, IDBCursor: J.Interceptor, IDBCursorWithValue: J.Interceptor, IDBFactory: J.Interceptor, IDBObservation: J.Interceptor, IDBObserver: J.Interceptor, IDBObserverChanges: J.Interceptor, SVGAngle: J.Interceptor, SVGAnimatedAngle: J.Interceptor, SVGAnimatedBoolean: J.Interceptor, SVGAnimatedEnumeration: J.Interceptor, SVGAnimatedInteger: J.Interceptor, SVGAnimatedLength: J.Interceptor, SVGAnimatedLengthList: J.Interceptor, SVGAnimatedNumber: J.Interceptor, SVGAnimatedNumberList: J.Interceptor, SVGAnimatedPreserveAspectRatio: J.Interceptor, SVGAnimatedRect: J.Interceptor, SVGAnimatedString: J.Interceptor, SVGAnimatedTransformList: J.Interceptor, SVGMatrix: J.Interceptor, SVGPoint: J.Interceptor, SVGPreserveAspectRatio: J.Interceptor, SVGRect: J.Interceptor, SVGUnitTypes: J.Interceptor, AudioListener: J.Interceptor, AudioParam: J.Interceptor, AudioTrack: J.Interceptor, AudioWorkletGlobalScope: J.Interceptor, AudioWorkletProcessor: J.Interceptor, PeriodicWave: J.Interceptor, ANGLEInstancedArrays: J.Interceptor, ANGLE_instanced_arrays: J.Interceptor, WebGLBuffer: J.Interceptor, WebGLCanvas: J.Interceptor, WebGLColorBufferFloat: J.Interceptor, WebGLCompressedTextureASTC: J.Interceptor, WebGLCompressedTextureATC: J.Interceptor, WEBGL_compressed_texture_atc: J.Interceptor, WebGLCompressedTextureETC1: J.Interceptor, WEBGL_compressed_texture_etc1: J.Interceptor, WebGLCompressedTextureETC: J.Interceptor, WebGLCompressedTexturePVRTC: J.Interceptor, WEBGL_compressed_texture_pvrtc: J.Interceptor, WebGLCompressedTextureS3TC: J.Interceptor, WEBGL_compressed_texture_s3tc: J.Interceptor, WebGLCompressedTextureS3TCsRGB: J.Interceptor, WebGLDebugRendererInfo: J.Interceptor, WEBGL_debug_renderer_info: J.Interceptor, WebGLDebugShaders: J.Interceptor, WEBGL_debug_shaders: J.Interceptor, WebGLDepthTexture: J.Interceptor, WEBGL_depth_texture: J.Interceptor, WebGLDrawBuffers: J.Interceptor, WEBGL_draw_buffers: J.Interceptor, EXTsRGB: J.Interceptor, EXT_sRGB: J.Interceptor, EXTBlendMinMax: J.Interceptor, EXT_blend_minmax: J.Interceptor, EXTColorBufferFloat: J.Interceptor, EXTColorBufferHalfFloat: J.Interceptor, EXTDisjointTimerQuery: J.Interceptor, EXTDisjointTimerQueryWebGL2: J.Interceptor, EXTFragDepth: J.Interceptor, EXT_frag_depth: J.Interceptor, EXTShaderTextureLOD: J.Interceptor, EXT_shader_texture_lod: J.Interceptor, EXTTextureFilterAnisotropic: J.Interceptor, EXT_texture_filter_anisotropic: J.Interceptor, WebGLFramebuffer: J.Interceptor, WebGLGetBufferSubDataAsync: J.Interceptor, WebGLLoseContext: J.Interceptor, WebGLExtensionLoseContext: J.Interceptor, WEBGL_lose_context: J.Interceptor, OESElementIndexUint: J.Interceptor, OES_element_index_uint: J.Interceptor, OESStandardDerivatives: J.Interceptor, OES_standard_derivatives: J.Interceptor, OESTextureFloat: J.Interceptor, OES_texture_float: J.Interceptor, OESTextureFloatLinear: J.Interceptor, OES_texture_float_linear: J.Interceptor, OESTextureHalfFloat: J.Interceptor, OES_texture_half_float: J.Interceptor, OESTextureHalfFloatLinear: J.Interceptor, OES_texture_half_float_linear: J.Interceptor, OESVertexArrayObject: J.Interceptor, OES_vertex_array_object: J.Interceptor, WebGLProgram: J.Interceptor, WebGLQuery: J.Interceptor, WebGLRenderbuffer: J.Interceptor, WebGLRenderingContext: J.Interceptor, WebGL2RenderingContext: J.Interceptor, WebGLSampler: J.Interceptor, WebGLShader: J.Interceptor, WebGLShaderPrecisionFormat: J.Interceptor, WebGLSync: J.Interceptor, WebGLTexture: J.Interceptor, WebGLTimerQueryEXT: J.Interceptor, WebGLTransformFeedback: J.Interceptor, WebGLUniformLocation: J.Interceptor, WebGLVertexArrayObject: J.Interceptor, WebGLVertexArrayObjectOES: J.Interceptor, WebGL: J.Interceptor, WebGL2RenderingContextBase: J.Interceptor, Database: J.Interceptor, SQLResultSet: J.Interceptor, SQLTransaction: J.Interceptor, ArrayBuffer: H.NativeByteBuffer, ArrayBufferView: H.NativeTypedData, DataView: H.NativeByteData, Float32Array: H.NativeFloat32List, Float64Array: H.NativeFloat64List, Int16Array: H.NativeInt16List, Int32Array: H.NativeInt32List, Int8Array: H.NativeInt8List, Uint16Array: H.NativeUint16List, Uint32Array: H.NativeUint32List, Uint8ClampedArray: H.NativeUint8ClampedList, CanvasPixelArray: H.NativeUint8ClampedList, Uint8Array: H.NativeUint8List, HTMLAudioElement: W.HtmlElement, HTMLBRElement: W.HtmlElement, HTMLBaseElement: W.HtmlElement, HTMLContentElement: W.HtmlElement, HTMLDListElement: W.HtmlElement, HTMLDataElement: W.HtmlElement, HTMLDataListElement: W.HtmlElement, HTMLDetailsElement: W.HtmlElement, HTMLDialogElement: W.HtmlElement, HTMLHRElement: W.HtmlElement, HTMLHeadElement: W.HtmlElement, HTMLHeadingElement: W.HtmlElement, HTMLHtmlElement: W.HtmlElement, HTMLImageElement: W.HtmlElement, HTMLLIElement: W.HtmlElement, HTMLLegendElement: W.HtmlElement, HTMLLinkElement: W.HtmlElement, HTMLMediaElement: W.HtmlElement, HTMLMenuElement: W.HtmlElement, HTMLMeterElement: W.HtmlElement, HTMLModElement: W.HtmlElement, HTMLOListElement: W.HtmlElement, HTMLOptGroupElement: W.HtmlElement, HTMLOptionElement: W.HtmlElement, HTMLPictureElement: W.HtmlElement, HTMLPreElement: W.HtmlElement, HTMLProgressElement: W.HtmlElement, HTMLQuoteElement: W.HtmlElement, HTMLScriptElement: W.HtmlElement, HTMLShadowElement: W.HtmlElement, HTMLSourceElement: W.HtmlElement, HTMLSpanElement: W.HtmlElement, HTMLTableCaptionElement: W.HtmlElement, HTMLTableCellElement: W.HtmlElement, HTMLTableDataCellElement: W.HtmlElement, HTMLTableHeaderCellElement: W.HtmlElement, HTMLTableColElement: W.HtmlElement, HTMLTimeElement: W.HtmlElement, HTMLTitleElement: W.HtmlElement, HTMLTrackElement: W.HtmlElement, HTMLUListElement: W.HtmlElement, HTMLUnknownElement: W.HtmlElement, HTMLVideoElement: W.HtmlElement, HTMLDirectoryElement: W.HtmlElement, HTMLFontElement: W.HtmlElement, HTMLFrameElement: W.HtmlElement, HTMLFrameSetElement: W.HtmlElement, HTMLMarqueeElement: W.HtmlElement, HTMLElement: W.HtmlElement, AccessibleNodeList: W.AccessibleNodeList, HTMLAnchorElement: W.AnchorElement, ApplicationCacheErrorEvent: W.ApplicationCacheErrorEvent, HTMLAreaElement: W.AreaElement, Blob: W.Blob, HTMLBodyElement: W.BodyElement, BroadcastChannel: W.BroadcastChannel, HTMLButtonElement: W.ButtonElement, HTMLCanvasElement: W.CanvasElement, CanvasRenderingContext2D: W.CanvasRenderingContext2D, CDATASection: W.CharacterData, CharacterData: W.CharacterData, Comment: W.CharacterData, ProcessingInstruction: W.CharacterData, Text: W.CharacterData, PublicKeyCredential: W.Credential, Credential: W.Credential, CredentialUserData: W.CredentialUserData, CSSKeyframesRule: W.CssKeyframesRule, MozCSSKeyframesRule: W.CssKeyframesRule, WebKitCSSKeyframesRule: W.CssKeyframesRule, CSSPerspective: W.CssPerspective, CSSCharsetRule: W.CssRule, CSSConditionRule: W.CssRule, CSSFontFaceRule: W.CssRule, CSSGroupingRule: W.CssRule, CSSImportRule: W.CssRule, CSSKeyframeRule: W.CssRule, MozCSSKeyframeRule: W.CssRule, WebKitCSSKeyframeRule: W.CssRule, CSSMediaRule: W.CssRule, CSSNamespaceRule: W.CssRule, CSSPageRule: W.CssRule, CSSStyleRule: W.CssRule, CSSSupportsRule: W.CssRule, CSSViewportRule: W.CssRule, CSSRule: W.CssRule, CSSStyleDeclaration: W.CssStyleDeclaration, MSStyleCSSProperties: W.CssStyleDeclaration, CSS2Properties: W.CssStyleDeclaration, CSSImageValue: W.CssStyleValue, CSSKeywordValue: W.CssStyleValue, CSSNumericValue: W.CssStyleValue, CSSPositionValue: W.CssStyleValue, CSSResourceValue: W.CssStyleValue, CSSUnitValue: W.CssStyleValue, CSSURLImageValue: W.CssStyleValue, CSSStyleValue: W.CssStyleValue, CSSMatrixComponent: W.CssTransformComponent, CSSRotation: W.CssTransformComponent, CSSScale: W.CssTransformComponent, CSSSkew: W.CssTransformComponent, CSSTranslation: W.CssTransformComponent, CSSTransformComponent: W.CssTransformComponent, CSSTransformValue: W.CssTransformValue, CSSUnparsedValue: W.CssUnparsedValue, DataTransferItemList: W.DataTransferItemList, DeprecationReport: W.DeprecationReport, HTMLDivElement: W.DivElement, Document: W.Document, HTMLDocument: W.Document, XMLDocument: W.Document, DOMError: W.DomError, DOMException: W.DomException, ClientRectList: W.DomRectList, DOMRectList: W.DomRectList, DOMRectReadOnly: W.DomRectReadOnly, DOMStringList: W.DomStringList, DOMTokenList: W.DomTokenList, Element: W.Element0, HTMLEmbedElement: W.EmbedElement, DirectoryEntry: W.Entry, Entry: W.Entry, FileEntry: W.Entry, ErrorEvent: W.ErrorEvent, AbortPaymentEvent: W.Event, AnimationEvent: W.Event, AnimationPlaybackEvent: W.Event, BackgroundFetchClickEvent: W.Event, BackgroundFetchEvent: W.Event, BackgroundFetchFailEvent: W.Event, BackgroundFetchedEvent: W.Event, BeforeInstallPromptEvent: W.Event, BeforeUnloadEvent: W.Event, BlobEvent: W.Event, CanMakePaymentEvent: W.Event, ClipboardEvent: W.Event, CloseEvent: W.Event, CustomEvent: W.Event, DeviceMotionEvent: W.Event, DeviceOrientationEvent: W.Event, ExtendableEvent: W.Event, ExtendableMessageEvent: W.Event, FetchEvent: W.Event, FontFaceSetLoadEvent: W.Event, ForeignFetchEvent: W.Event, GamepadEvent: W.Event, HashChangeEvent: W.Event, InstallEvent: W.Event, MediaEncryptedEvent: W.Event, MediaQueryListEvent: W.Event, MediaStreamEvent: W.Event, MediaStreamTrackEvent: W.Event, MessageEvent: W.Event, MIDIConnectionEvent: W.Event, MIDIMessageEvent: W.Event, MutationEvent: W.Event, NotificationEvent: W.Event, PageTransitionEvent: W.Event, PaymentRequestEvent: W.Event, PaymentRequestUpdateEvent: W.Event, PopStateEvent: W.Event, PresentationConnectionAvailableEvent: W.Event, PromiseRejectionEvent: W.Event, PushEvent: W.Event, RTCDataChannelEvent: W.Event, RTCDTMFToneChangeEvent: W.Event, RTCPeerConnectionIceEvent: W.Event, RTCTrackEvent: W.Event, SecurityPolicyViolationEvent: W.Event, SensorErrorEvent: W.Event, SpeechRecognitionEvent: W.Event, StorageEvent: W.Event, SyncEvent: W.Event, TrackEvent: W.Event, TransitionEvent: W.Event, WebKitTransitionEvent: W.Event, VRDeviceEvent: W.Event, VRDisplayEvent: W.Event, VRSessionEvent: W.Event, MojoInterfaceRequestEvent: W.Event, USBConnectionEvent: W.Event, AudioProcessingEvent: W.Event, OfflineAudioCompletionEvent: W.Event, WebGLContextEvent: W.Event, Event: W.Event, InputEvent: W.Event, SubmitEvent: W.Event, AbsoluteOrientationSensor: W.EventTarget, Accelerometer: W.EventTarget, AccessibleNode: W.EventTarget, AmbientLightSensor: W.EventTarget, Animation: W.EventTarget, ApplicationCache: W.EventTarget, DOMApplicationCache: W.EventTarget, OfflineResourceList: W.EventTarget, BackgroundFetchRegistration: W.EventTarget, BatteryManager: W.EventTarget, CanvasCaptureMediaStreamTrack: W.EventTarget, EventSource: W.EventTarget, FileReader: W.EventTarget, FontFaceSet: W.EventTarget, Gyroscope: W.EventTarget, LinearAccelerationSensor: W.EventTarget, Magnetometer: W.EventTarget, MediaDevices: W.EventTarget, MediaKeySession: W.EventTarget, MediaRecorder: W.EventTarget, MediaSource: W.EventTarget, MediaStream: W.EventTarget, MediaStreamTrack: W.EventTarget, MIDIAccess: W.EventTarget, NetworkInformation: W.EventTarget, Notification: W.EventTarget, OffscreenCanvas: W.EventTarget, OrientationSensor: W.EventTarget, PaymentRequest: W.EventTarget, Performance: W.EventTarget, PermissionStatus: W.EventTarget, PresentationAvailability: W.EventTarget, PresentationConnection: W.EventTarget, PresentationConnectionList: W.EventTarget, PresentationRequest: W.EventTarget, RelativeOrientationSensor: W.EventTarget, RemotePlayback: W.EventTarget, RTCDataChannel: W.EventTarget, DataChannel: W.EventTarget, RTCDTMFSender: W.EventTarget, RTCPeerConnection: W.EventTarget, webkitRTCPeerConnection: W.EventTarget, mozRTCPeerConnection: W.EventTarget, ScreenOrientation: W.EventTarget, Sensor: W.EventTarget, ServiceWorker: W.EventTarget, ServiceWorkerContainer: W.EventTarget, ServiceWorkerRegistration: W.EventTarget, SharedWorker: W.EventTarget, SpeechRecognition: W.EventTarget, SpeechSynthesis: W.EventTarget, SpeechSynthesisUtterance: W.EventTarget, VR: W.EventTarget, VRDevice: W.EventTarget, VRDisplay: W.EventTarget, VRSession: W.EventTarget, VisualViewport: W.EventTarget, WebSocket: W.EventTarget, Worker: W.EventTarget, WorkerPerformance: W.EventTarget, BluetoothDevice: W.EventTarget, BluetoothRemoteGATTCharacteristic: W.EventTarget, MojoInterfaceInterceptor: W.EventTarget, USB: W.EventTarget, IDBOpenDBRequest: W.EventTarget, IDBVersionChangeRequest: W.EventTarget, IDBRequest: W.EventTarget, IDBTransaction: W.EventTarget, AnalyserNode: W.EventTarget, RealtimeAnalyserNode: W.EventTarget, AudioBufferSourceNode: W.EventTarget, AudioDestinationNode: W.EventTarget, AudioNode: W.EventTarget, AudioScheduledSourceNode: W.EventTarget, AudioWorkletNode: W.EventTarget, BiquadFilterNode: W.EventTarget, ChannelMergerNode: W.EventTarget, AudioChannelMerger: W.EventTarget, ChannelSplitterNode: W.EventTarget, AudioChannelSplitter: W.EventTarget, ConstantSourceNode: W.EventTarget, ConvolverNode: W.EventTarget, DelayNode: W.EventTarget, DynamicsCompressorNode: W.EventTarget, GainNode: W.EventTarget, AudioGainNode: W.EventTarget, IIRFilterNode: W.EventTarget, MediaElementAudioSourceNode: W.EventTarget, MediaStreamAudioDestinationNode: W.EventTarget, MediaStreamAudioSourceNode: W.EventTarget, OscillatorNode: W.EventTarget, Oscillator: W.EventTarget, PannerNode: W.EventTarget, AudioPannerNode: W.EventTarget, webkitAudioPannerNode: W.EventTarget, ScriptProcessorNode: W.EventTarget, JavaScriptAudioNode: W.EventTarget, StereoPannerNode: W.EventTarget, WaveShaperNode: W.EventTarget, EventTarget: W.EventTarget, FederatedCredential: W.FederatedCredential, HTMLFieldSetElement: W.FieldSetElement, File: W.File, FileList: W.FileList, DOMFileSystem: W.FileSystem, FileWriter: W.FileWriter, FontFace: W.FontFace, HTMLFormElement: W.FormElement, Gamepad: W.Gamepad, History: W.History, HTMLCollection: W.HtmlCollection, HTMLFormControlsCollection: W.HtmlCollection, HTMLOptionsCollection: W.HtmlCollection, XMLHttpRequest: W.HttpRequest, XMLHttpRequestUpload: W.HttpRequestEventTarget, XMLHttpRequestEventTarget: W.HttpRequestEventTarget, HTMLIFrameElement: W.IFrameElement, ImageData: W.ImageData, HTMLInputElement: W.InputElement, InterventionReport: W.InterventionReport, KeyboardEvent: W.KeyboardEvent, HTMLLabelElement: W.LabelElement, Location: W.Location, HTMLMapElement: W.MapElement, MediaError: W.MediaError, MediaKeyMessageEvent: W.MediaKeyMessageEvent, MediaList: W.MediaList, MediaQueryList: W.MediaQueryList, MessagePort: W.MessagePort, HTMLMetaElement: W.MetaElement, MIDIInputMap: W.MidiInputMap, MIDIOutputMap: W.MidiOutputMap, MIDIInput: W.MidiPort, MIDIOutput: W.MidiPort, MIDIPort: W.MidiPort, MimeType: W.MimeType, MimeTypeArray: W.MimeTypeArray, MouseEvent: W.MouseEvent, DragEvent: W.MouseEvent, NavigatorUserMediaError: W.NavigatorUserMediaError, DocumentFragment: W.Node, ShadowRoot: W.Node, DocumentType: W.Node, Node: W.Node, NodeList: W.NodeList, RadioNodeList: W.NodeList, HTMLObjectElement: W.ObjectElement, HTMLOutputElement: W.OutputElement, OverconstrainedError: W.OverconstrainedError, HTMLParagraphElement: W.ParagraphElement, HTMLParamElement: W.ParamElement, PasswordCredential: W.PasswordCredential, PerformanceEntry: W.PerformanceEntry, PerformanceLongTaskTiming: W.PerformanceEntry, PerformanceMark: W.PerformanceEntry, PerformanceMeasure: W.PerformanceEntry, PerformanceNavigationTiming: W.PerformanceEntry, PerformancePaintTiming: W.PerformanceEntry, PerformanceResourceTiming: W.PerformanceEntry, TaskAttributionTiming: W.PerformanceEntry, PerformanceServerTiming: W.PerformanceServerTiming, Plugin: W.Plugin, PluginArray: W.PluginArray, PointerEvent: W.PointerEvent, PositionError: W.PositionError, PresentationConnectionCloseEvent: W.PresentationConnectionCloseEvent, ProgressEvent: W.ProgressEvent, ResourceProgressEvent: W.ProgressEvent, ReportBody: W.ReportBody, RTCStatsReport: W.RtcStatsReport, HTMLSelectElement: W.SelectElement, SharedWorkerGlobalScope: W.SharedWorkerGlobalScope, HTMLSlotElement: W.SlotElement, SourceBuffer: W.SourceBuffer, SourceBufferList: W.SourceBufferList, SpeechGrammar: W.SpeechGrammar, SpeechGrammarList: W.SpeechGrammarList, SpeechRecognitionError: W.SpeechRecognitionError, SpeechRecognitionResult: W.SpeechRecognitionResult, SpeechSynthesisEvent: W.SpeechSynthesisEvent, SpeechSynthesisVoice: W.SpeechSynthesisVoice, Storage: W.Storage, HTMLStyleElement: W.StyleElement, CSSStyleSheet: W.StyleSheet, StyleSheet: W.StyleSheet, HTMLTableElement: W.TableElement, HTMLTableRowElement: W.TableRowElement, HTMLTableSectionElement: W.TableSectionElement, HTMLTemplateElement: W.TemplateElement, HTMLTextAreaElement: W.TextAreaElement, TextTrack: W.TextTrack, TextTrackCue: W.TextTrackCue, VTTCue: W.TextTrackCue, TextTrackCueList: W.TextTrackCueList, TextTrackList: W.TextTrackList, TimeRanges: W.TimeRanges, Touch: W.Touch, TouchEvent: W.TouchEvent, TouchList: W.TouchList, TrackDefaultList: W.TrackDefaultList, CompositionEvent: W.UIEvent, FocusEvent: W.UIEvent, TextEvent: W.UIEvent, UIEvent: W.UIEvent, URL: W.Url, VideoTrackList: W.VideoTrackList, WheelEvent: W.WheelEvent, Window: W.Window, DOMWindow: W.Window, DedicatedWorkerGlobalScope: W.WorkerGlobalScope, ServiceWorkerGlobalScope: W.WorkerGlobalScope, WorkerGlobalScope: W.WorkerGlobalScope, Attr: W._Attr, Clipboard: W._Clipboard, CSSRuleList: W._CssRuleList, ClientRect: W._DomRect, DOMRect: W._DomRect, GamepadList: W._GamepadList, NamedNodeMap: W._NamedNodeMap, MozNamedAttrMap: W._NamedNodeMap, SpeechRecognitionResultList: W._SpeechRecognitionResultList, StyleSheetList: W._StyleSheetList, IDBDatabase: P.Database, IDBIndex: P.Index, IDBKeyRange: P.KeyRange, IDBObjectStore: P.ObjectStore, IDBVersionChangeEvent: P.VersionChangeEvent, SVGLength: P.Length, SVGLengthList: P.LengthList, SVGNumber: P.Number, SVGNumberList: P.NumberList, SVGPointList: P.PointList, SVGScriptElement: P.ScriptElement0, SVGStringList: P.StringList, SVGAElement: P.SvgElement, SVGAnimateElement: P.SvgElement, SVGAnimateMotionElement: P.SvgElement, SVGAnimateTransformElement: P.SvgElement, SVGAnimationElement: P.SvgElement, SVGCircleElement: P.SvgElement, SVGClipPathElement: P.SvgElement, SVGDefsElement: P.SvgElement, SVGDescElement: P.SvgElement, SVGDiscardElement: P.SvgElement, SVGEllipseElement: P.SvgElement, SVGFEBlendElement: P.SvgElement, SVGFEColorMatrixElement: P.SvgElement, SVGFEComponentTransferElement: P.SvgElement, SVGFECompositeElement: P.SvgElement, SVGFEConvolveMatrixElement: P.SvgElement, SVGFEDiffuseLightingElement: P.SvgElement, SVGFEDisplacementMapElement: P.SvgElement, SVGFEDistantLightElement: P.SvgElement, SVGFEFloodElement: P.SvgElement, SVGFEFuncAElement: P.SvgElement, SVGFEFuncBElement: P.SvgElement, SVGFEFuncGElement: P.SvgElement, SVGFEFuncRElement: P.SvgElement, SVGFEGaussianBlurElement: P.SvgElement, SVGFEImageElement: P.SvgElement, SVGFEMergeElement: P.SvgElement, SVGFEMergeNodeElement: P.SvgElement, SVGFEMorphologyElement: P.SvgElement, SVGFEOffsetElement: P.SvgElement, SVGFEPointLightElement: P.SvgElement, SVGFESpecularLightingElement: P.SvgElement, SVGFESpotLightElement: P.SvgElement, SVGFETileElement: P.SvgElement, SVGFETurbulenceElement: P.SvgElement, SVGFilterElement: P.SvgElement, SVGForeignObjectElement: P.SvgElement, SVGGElement: P.SvgElement, SVGGeometryElement: P.SvgElement, SVGGraphicsElement: P.SvgElement, SVGImageElement: P.SvgElement, SVGLineElement: P.SvgElement, SVGLinearGradientElement: P.SvgElement, SVGMarkerElement: P.SvgElement, SVGMaskElement: P.SvgElement, SVGMetadataElement: P.SvgElement, SVGPathElement: P.SvgElement, SVGPatternElement: P.SvgElement, SVGPolygonElement: P.SvgElement, SVGPolylineElement: P.SvgElement, SVGRadialGradientElement: P.SvgElement, SVGRectElement: P.SvgElement, SVGSetElement: P.SvgElement, SVGStopElement: P.SvgElement, SVGStyleElement: P.SvgElement, SVGSVGElement: P.SvgElement, SVGSwitchElement: P.SvgElement, SVGSymbolElement: P.SvgElement, SVGTSpanElement: P.SvgElement, SVGTextContentElement: P.SvgElement, SVGTextElement: P.SvgElement, SVGTextPathElement: P.SvgElement, SVGTextPositioningElement: P.SvgElement, SVGTitleElement: P.SvgElement, SVGUseElement: P.SvgElement, SVGViewElement: P.SvgElement, SVGGradientElement: P.SvgElement, SVGComponentTransferFunctionElement: P.SvgElement, SVGFEDropShadowElement: P.SvgElement, SVGMPathElement: P.SvgElement, SVGElement: P.SvgElement, SVGTransform: P.Transform0, SVGTransformList: P.TransformList, AudioBuffer: P.AudioBuffer, AudioParamMap: P.AudioParamMap, AudioTrackList: P.AudioTrackList, AudioContext: P.BaseAudioContext, webkitAudioContext: P.BaseAudioContext, BaseAudioContext: P.BaseAudioContext, OfflineAudioContext: P.OfflineAudioContext, WebGLActiveInfo: P.ActiveInfo, SQLError: P.SqlError, SQLResultSetRowList: P.SqlResultSetRowList});
    hunkHelpers.setOrUpdateLeafTags({AnimationEffectReadOnly: true, AnimationEffectTiming: true, AnimationEffectTimingReadOnly: true, AnimationTimeline: true, AnimationWorkletGlobalScope: true, AuthenticatorAssertionResponse: true, AuthenticatorAttestationResponse: true, AuthenticatorResponse: true, BackgroundFetchFetch: true, BackgroundFetchManager: true, BackgroundFetchSettledFetch: true, BarProp: true, BarcodeDetector: true, BluetoothRemoteGATTDescriptor: true, Body: true, BudgetState: true, CacheStorage: true, CanvasGradient: true, CanvasPattern: true, Client: true, Clients: true, CookieStore: true, Coordinates: true, CredentialsContainer: true, Crypto: true, CryptoKey: true, CSS: true, CSSVariableReferenceValue: true, CustomElementRegistry: true, DataTransfer: true, DataTransferItem: true, DeprecatedStorageInfo: true, DeprecatedStorageQuota: true, DetectedBarcode: true, DetectedFace: true, DetectedText: true, DeviceAcceleration: true, DeviceRotationRate: true, DirectoryReader: true, DocumentOrShadowRoot: true, DocumentTimeline: true, DOMImplementation: true, Iterator: true, DOMMatrix: true, DOMMatrixReadOnly: true, DOMParser: true, DOMPoint: true, DOMPointReadOnly: true, DOMQuad: true, DOMStringMap: true, External: true, FaceDetector: true, FontFaceSource: true, FormData: true, GamepadButton: true, GamepadPose: true, Geolocation: true, Position: true, Headers: true, HTMLHyperlinkElementUtils: true, IdleDeadline: true, ImageBitmap: true, ImageBitmapRenderingContext: true, ImageCapture: true, InputDeviceCapabilities: true, IntersectionObserver: true, IntersectionObserverEntry: true, KeyframeEffect: true, KeyframeEffectReadOnly: true, MediaCapabilities: true, MediaCapabilitiesInfo: true, MediaDeviceInfo: true, MediaKeyStatusMap: true, MediaKeySystemAccess: true, MediaKeys: true, MediaKeysPolicy: true, MediaMetadata: true, MediaSession: true, MediaSettingsRange: true, MemoryInfo: true, MessageChannel: true, Metadata: true, MutationObserver: true, WebKitMutationObserver: true, MutationRecord: true, NavigationPreloadManager: true, Navigator: true, NavigatorAutomationInformation: true, NavigatorConcurrentHardware: true, NavigatorCookies: true, NodeFilter: true, NodeIterator: true, NonDocumentTypeChildNode: true, NonElementParentNode: true, NoncedElement: true, OffscreenCanvasRenderingContext2D: true, PaintRenderingContext2D: true, PaintSize: true, PaintWorkletGlobalScope: true, Path2D: true, PaymentAddress: true, PaymentInstruments: true, PaymentManager: true, PaymentResponse: true, PerformanceNavigation: true, PerformanceObserver: true, PerformanceObserverEntryList: true, PerformanceTiming: true, Permissions: true, PhotoCapabilities: true, Presentation: true, PresentationReceiver: true, PushManager: true, PushMessageData: true, PushSubscription: true, PushSubscriptionOptions: true, Range: true, RelatedApplication: true, ReportingObserver: true, ResizeObserver: true, ResizeObserverEntry: true, RTCCertificate: true, RTCIceCandidate: true, mozRTCIceCandidate: true, RTCLegacyStatsReport: true, RTCRtpContributingSource: true, RTCRtpReceiver: true, RTCRtpSender: true, RTCSessionDescription: true, mozRTCSessionDescription: true, RTCStatsResponse: true, Screen: true, ScrollState: true, ScrollTimeline: true, Selection: true, SharedArrayBuffer: true, SpeechRecognitionAlternative: true, StaticRange: true, StorageManager: true, StyleMedia: true, StylePropertyMap: true, StylePropertyMapReadonly: true, SyncManager: true, TextDetector: true, TextMetrics: true, TrackDefault: true, TreeWalker: true, TrustedHTML: true, TrustedScriptURL: true, TrustedURL: true, UnderlyingSourceBase: true, URLSearchParams: true, VRCoordinateSystem: true, VRDisplayCapabilities: true, VREyeParameters: true, VRFrameData: true, VRFrameOfReference: true, VRPose: true, VRStageBounds: true, VRStageBoundsPoint: true, VRStageParameters: true, ValidityState: true, VideoPlaybackQuality: true, VideoTrack: true, VTTRegion: true, WindowClient: true, WorkletAnimation: true, WorkletGlobalScope: true, XPathEvaluator: true, XPathExpression: true, XPathNSResolver: true, XPathResult: true, XMLSerializer: true, XSLTProcessor: true, Bluetooth: true, BluetoothCharacteristicProperties: true, BluetoothRemoteGATTServer: true, BluetoothRemoteGATTService: true, BluetoothUUID: true, BudgetService: true, Cache: true, DOMFileSystemSync: true, DirectoryEntrySync: true, DirectoryReaderSync: true, EntrySync: true, FileEntrySync: true, FileReaderSync: true, FileWriterSync: true, HTMLAllCollection: true, Mojo: true, MojoHandle: true, MojoWatcher: true, NFC: true, PagePopupController: true, Report: true, Request: true, Response: true, SubtleCrypto: true, USBAlternateInterface: true, USBConfiguration: true, USBDevice: true, USBEndpoint: true, USBInTransferResult: true, USBInterface: true, USBIsochronousInTransferPacket: true, USBIsochronousInTransferResult: true, USBIsochronousOutTransferPacket: true, USBIsochronousOutTransferResult: true, USBOutTransferResult: true, WorkerLocation: true, WorkerNavigator: true, Worklet: true, IDBCursor: true, IDBCursorWithValue: true, IDBFactory: true, IDBObservation: true, IDBObserver: true, IDBObserverChanges: true, SVGAngle: true, SVGAnimatedAngle: true, SVGAnimatedBoolean: true, SVGAnimatedEnumeration: true, SVGAnimatedInteger: true, SVGAnimatedLength: true, SVGAnimatedLengthList: true, SVGAnimatedNumber: true, SVGAnimatedNumberList: true, SVGAnimatedPreserveAspectRatio: true, SVGAnimatedRect: true, SVGAnimatedString: true, SVGAnimatedTransformList: true, SVGMatrix: true, SVGPoint: true, SVGPreserveAspectRatio: true, SVGRect: true, SVGUnitTypes: true, AudioListener: true, AudioParam: true, AudioTrack: true, AudioWorkletGlobalScope: true, AudioWorkletProcessor: true, PeriodicWave: true, ANGLEInstancedArrays: true, ANGLE_instanced_arrays: true, WebGLBuffer: true, WebGLCanvas: true, WebGLColorBufferFloat: true, WebGLCompressedTextureASTC: true, WebGLCompressedTextureATC: true, WEBGL_compressed_texture_atc: true, WebGLCompressedTextureETC1: true, WEBGL_compressed_texture_etc1: true, WebGLCompressedTextureETC: true, WebGLCompressedTexturePVRTC: true, WEBGL_compressed_texture_pvrtc: true, WebGLCompressedTextureS3TC: true, WEBGL_compressed_texture_s3tc: true, WebGLCompressedTextureS3TCsRGB: true, WebGLDebugRendererInfo: true, WEBGL_debug_renderer_info: true, WebGLDebugShaders: true, WEBGL_debug_shaders: true, WebGLDepthTexture: true, WEBGL_depth_texture: true, WebGLDrawBuffers: true, WEBGL_draw_buffers: true, EXTsRGB: true, EXT_sRGB: true, EXTBlendMinMax: true, EXT_blend_minmax: true, EXTColorBufferFloat: true, EXTColorBufferHalfFloat: true, EXTDisjointTimerQuery: true, EXTDisjointTimerQueryWebGL2: true, EXTFragDepth: true, EXT_frag_depth: true, EXTShaderTextureLOD: true, EXT_shader_texture_lod: true, EXTTextureFilterAnisotropic: true, EXT_texture_filter_anisotropic: true, WebGLFramebuffer: true, WebGLGetBufferSubDataAsync: true, WebGLLoseContext: true, WebGLExtensionLoseContext: true, WEBGL_lose_context: true, OESElementIndexUint: true, OES_element_index_uint: true, OESStandardDerivatives: true, OES_standard_derivatives: true, OESTextureFloat: true, OES_texture_float: true, OESTextureFloatLinear: true, OES_texture_float_linear: true, OESTextureHalfFloat: true, OES_texture_half_float: true, OESTextureHalfFloatLinear: true, OES_texture_half_float_linear: true, OESVertexArrayObject: true, OES_vertex_array_object: true, WebGLProgram: true, WebGLQuery: true, WebGLRenderbuffer: true, WebGLRenderingContext: true, WebGL2RenderingContext: true, WebGLSampler: true, WebGLShader: true, WebGLShaderPrecisionFormat: true, WebGLSync: true, WebGLTexture: true, WebGLTimerQueryEXT: true, WebGLTransformFeedback: true, WebGLUniformLocation: true, WebGLVertexArrayObject: true, WebGLVertexArrayObjectOES: true, WebGL: true, WebGL2RenderingContextBase: true, Database: true, SQLResultSet: true, SQLTransaction: true, ArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLAudioElement: true, HTMLBRElement: true, HTMLBaseElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLImageElement: true, HTMLLIElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLScriptElement: true, HTMLShadowElement: true, HTMLSourceElement: true, HTMLSpanElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, AccessibleNodeList: true, HTMLAnchorElement: true, ApplicationCacheErrorEvent: true, HTMLAreaElement: true, Blob: false, HTMLBodyElement: true, BroadcastChannel: true, HTMLButtonElement: true, HTMLCanvasElement: true, CanvasRenderingContext2D: true, CDATASection: true, CharacterData: true, Comment: true, ProcessingInstruction: true, Text: true, PublicKeyCredential: true, Credential: false, CredentialUserData: true, CSSKeyframesRule: true, MozCSSKeyframesRule: true, WebKitCSSKeyframesRule: true, CSSPerspective: true, CSSCharsetRule: true, CSSConditionRule: true, CSSFontFaceRule: true, CSSGroupingRule: true, CSSImportRule: true, CSSKeyframeRule: true, MozCSSKeyframeRule: true, WebKitCSSKeyframeRule: true, CSSMediaRule: true, CSSNamespaceRule: true, CSSPageRule: true, CSSStyleRule: true, CSSSupportsRule: true, CSSViewportRule: true, CSSRule: false, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, CSSImageValue: true, CSSKeywordValue: true, CSSNumericValue: true, CSSPositionValue: true, CSSResourceValue: true, CSSUnitValue: true, CSSURLImageValue: true, CSSStyleValue: false, CSSMatrixComponent: true, CSSRotation: true, CSSScale: true, CSSSkew: true, CSSTranslation: true, CSSTransformComponent: false, CSSTransformValue: true, CSSUnparsedValue: true, DataTransferItemList: true, DeprecationReport: true, HTMLDivElement: true, Document: true, HTMLDocument: true, XMLDocument: true, DOMError: true, DOMException: true, ClientRectList: true, DOMRectList: true, DOMRectReadOnly: false, DOMStringList: true, DOMTokenList: true, Element: false, HTMLEmbedElement: true, DirectoryEntry: true, Entry: true, FileEntry: true, ErrorEvent: true, AbortPaymentEvent: true, AnimationEvent: true, AnimationPlaybackEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CloseEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, MediaEncryptedEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MessageEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionEvent: true, StorageEvent: true, SyncEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, MojoInterfaceRequestEvent: true, USBConnectionEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, SubmitEvent: false, AbsoluteOrientationSensor: true, Accelerometer: true, AccessibleNode: true, AmbientLightSensor: true, Animation: true, ApplicationCache: true, DOMApplicationCache: true, OfflineResourceList: true, BackgroundFetchRegistration: true, BatteryManager: true, CanvasCaptureMediaStreamTrack: true, EventSource: true, FileReader: true, FontFaceSet: true, Gyroscope: true, LinearAccelerationSensor: true, Magnetometer: true, MediaDevices: true, MediaKeySession: true, MediaRecorder: true, MediaSource: true, MediaStream: true, MediaStreamTrack: true, MIDIAccess: true, NetworkInformation: true, Notification: true, OffscreenCanvas: true, OrientationSensor: true, PaymentRequest: true, Performance: true, PermissionStatus: true, PresentationAvailability: true, PresentationConnection: true, PresentationConnectionList: true, PresentationRequest: true, RelativeOrientationSensor: true, RemotePlayback: true, RTCDataChannel: true, DataChannel: true, RTCDTMFSender: true, RTCPeerConnection: true, webkitRTCPeerConnection: true, mozRTCPeerConnection: true, ScreenOrientation: true, Sensor: true, ServiceWorker: true, ServiceWorkerContainer: true, ServiceWorkerRegistration: true, SharedWorker: true, SpeechRecognition: true, SpeechSynthesis: true, SpeechSynthesisUtterance: true, VR: true, VRDevice: true, VRDisplay: true, VRSession: true, VisualViewport: true, WebSocket: true, Worker: true, WorkerPerformance: true, BluetoothDevice: true, BluetoothRemoteGATTCharacteristic: true, MojoInterfaceInterceptor: true, USB: true, IDBOpenDBRequest: true, IDBVersionChangeRequest: true, IDBRequest: true, IDBTransaction: true, AnalyserNode: true, RealtimeAnalyserNode: true, AudioBufferSourceNode: true, AudioDestinationNode: true, AudioNode: true, AudioScheduledSourceNode: true, AudioWorkletNode: true, BiquadFilterNode: true, ChannelMergerNode: true, AudioChannelMerger: true, ChannelSplitterNode: true, AudioChannelSplitter: true, ConstantSourceNode: true, ConvolverNode: true, DelayNode: true, DynamicsCompressorNode: true, GainNode: true, AudioGainNode: true, IIRFilterNode: true, MediaElementAudioSourceNode: true, MediaStreamAudioDestinationNode: true, MediaStreamAudioSourceNode: true, OscillatorNode: true, Oscillator: true, PannerNode: true, AudioPannerNode: true, webkitAudioPannerNode: true, ScriptProcessorNode: true, JavaScriptAudioNode: true, StereoPannerNode: true, WaveShaperNode: true, EventTarget: false, FederatedCredential: true, HTMLFieldSetElement: true, File: true, FileList: true, DOMFileSystem: true, FileWriter: true, FontFace: true, HTMLFormElement: true, Gamepad: true, History: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, XMLHttpRequest: true, XMLHttpRequestUpload: true, XMLHttpRequestEventTarget: false, HTMLIFrameElement: true, ImageData: true, HTMLInputElement: true, InterventionReport: true, KeyboardEvent: true, HTMLLabelElement: true, Location: true, HTMLMapElement: true, MediaError: true, MediaKeyMessageEvent: true, MediaList: true, MediaQueryList: true, MessagePort: true, HTMLMetaElement: true, MIDIInputMap: true, MIDIOutputMap: true, MIDIInput: true, MIDIOutput: true, MIDIPort: true, MimeType: true, MimeTypeArray: true, MouseEvent: false, DragEvent: false, NavigatorUserMediaError: true, DocumentFragment: true, ShadowRoot: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, HTMLObjectElement: true, HTMLOutputElement: true, OverconstrainedError: true, HTMLParagraphElement: true, HTMLParamElement: true, PasswordCredential: true, PerformanceEntry: true, PerformanceLongTaskTiming: true, PerformanceMark: true, PerformanceMeasure: true, PerformanceNavigationTiming: true, PerformancePaintTiming: true, PerformanceResourceTiming: true, TaskAttributionTiming: true, PerformanceServerTiming: true, Plugin: true, PluginArray: true, PointerEvent: true, PositionError: true, PresentationConnectionCloseEvent: true, ProgressEvent: true, ResourceProgressEvent: true, ReportBody: false, RTCStatsReport: true, HTMLSelectElement: true, SharedWorkerGlobalScope: true, HTMLSlotElement: true, SourceBuffer: true, SourceBufferList: true, SpeechGrammar: true, SpeechGrammarList: true, SpeechRecognitionError: true, SpeechRecognitionResult: true, SpeechSynthesisEvent: true, SpeechSynthesisVoice: true, Storage: true, HTMLStyleElement: true, CSSStyleSheet: true, StyleSheet: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, HTMLTextAreaElement: true, TextTrack: true, TextTrackCue: true, VTTCue: true, TextTrackCueList: true, TextTrackList: true, TimeRanges: true, Touch: true, TouchEvent: true, TouchList: true, TrackDefaultList: true, CompositionEvent: true, FocusEvent: true, TextEvent: true, UIEvent: false, URL: true, VideoTrackList: true, WheelEvent: true, Window: true, DOMWindow: true, DedicatedWorkerGlobalScope: true, ServiceWorkerGlobalScope: true, WorkerGlobalScope: false, Attr: true, Clipboard: true, CSSRuleList: true, ClientRect: true, DOMRect: true, GamepadList: true, NamedNodeMap: true, MozNamedAttrMap: true, SpeechRecognitionResultList: true, StyleSheetList: true, IDBDatabase: true, IDBIndex: true, IDBKeyRange: true, IDBObjectStore: true, IDBVersionChangeEvent: true, SVGLength: true, SVGLengthList: true, SVGNumber: true, SVGNumberList: true, SVGPointList: true, SVGScriptElement: true, SVGStringList: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, SVGElement: false, SVGTransform: true, SVGTransformList: true, AudioBuffer: true, AudioParamMap: true, AudioTrackList: true, AudioContext: true, webkitAudioContext: true, BaseAudioContext: false, OfflineAudioContext: true, WebGLActiveInfo: true, SQLError: true, SQLResultSetRowList: true});
    H.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
    W._SourceBufferList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
    W._TextTrackList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
  })();
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != 'undefined') {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    if (typeof dartMainRunner === "function")
      dartMainRunner(F.main0, []);
    else
      F.main0([]);
  });
})();

//# sourceMappingURL=main.dart.js.map
